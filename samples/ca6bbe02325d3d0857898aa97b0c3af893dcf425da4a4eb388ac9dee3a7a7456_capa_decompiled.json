{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *arg1;\n    int32_t *arg2;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int32_t *piVar12;\n    uint64_t uVar13;\n    int32_t *piVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            piVar6 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = piVar6;\n                piVar14 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x735698 < 1) {\n                        return;\n                    }\n                    *(*0x20 + -0x58) = *0x735698;\n                    iVar7 = 0;\n                    piVar6 = *0x735698;\n                    piVar14 = *0x735690;\n                    goto code_r0x0040136e;\n                }\n                for (piVar9 = NULL; piVar9 < unaff_RBX; piVar9 = piVar9 + 1) {\n                    if (*(piVar14 + piVar9) == ',') goto code_r0x0040112d;\n                }\n                piVar9 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (piVar9 < 0) {\n                    piVar6 = NULL;\n                    in_RAX = NULL;\n                    piVar9 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < piVar9) goto code_r0x004016de;\n                    if (unaff_RBX < piVar9 + 1U) goto code_r0x004016d3;\n                    unaff_RBX = unaff_RBX - piVar9;\n                    piVar6 = unaff_RBX + -1;\n                    in_RAX = (piVar9 + 1U & -piVar6 >> 0x3f) + piVar14;\n                }\n            } while ((piVar9 < 4) || (*piVar14 != 0x2e757063));\n            for (arg2 = NULL; arg2 < piVar9; arg2 = arg2 + 1) {\n                if (*(piVar14 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x58) = piVar6;\n            if (arg2 < 0) {\n                *(*0x20 + -0x88) = piVar9;\n                *(*0x20 + -0x40) = piVar14;\n                *(*0x20 + -0xb0) = 0x4012f9;\n                fcn.00433860();\n                *(*0x20 + -0xb0) = 0x40130a;\n                fcn.00434160();\n                *(*0x20 + -0xb0) = 0x401319;\n                fcn.00434160();\n                *(*0x20 + -0xb0) = 0x40132a;\n                fcn.00434160();\n                *(*0x20 + -0xb0) = 0x40132f;\n                fcn.004338e0();\n                in_RAX = *(*0x20 + -0x38);\n                piVar6 = *(*0x20 + -0x58);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= piVar9) {\n                if (0x3 < arg2) {\n                    piVar5 = arg2 + -1;\n                    uVar11 = -piVar5 >> 0x3f & 4;\n                    unaff_RBX = piVar14 + uVar11;\n                    if (arg2 + 1U <= piVar9) {\n                        *(*0x20 + -0x60) = piVar5;\n                        *(*0x20 + -0x48) = unaff_RBX;\n                        piVar8 = piVar9 - arg2;\n                        piVar9 = piVar8 + -1;\n                        *(*0x20 + -0x90) = piVar9;\n                        uVar13 = arg2 + 1U & -piVar9 >> 0x3f;\n                        *(*0x20 + -0x50) = piVar14 + uVar13;\n                        if (piVar8 == 0x3) {\n                            if (*(piVar14 + uVar13) == 0x6e6f) {\ncode_r0x00401236:\n                                if (((arg2 == 0x7) && (*(piVar14 + uVar11) == 0x6c61)) &&\n                                   (*(piVar14 + uVar11 + 2) == 'l')) {\n                                    piVar12 = *0x735698;\n                                    for (piVar5 = NULL; piVar5 < piVar12; piVar5 = piVar5 + 1) {\n                                        piVar9 = *0x735698;\n                                        if (*0x735698 <= piVar5) {\ncode_r0x004016a5:\n                                            *(*0x20 + -0xb0) = 0x4016ad;\n                                            fcn.0045c5a0(piVar9);\n                                            goto code_r0x004016ad;\n                                        }\n                                        iVar7 = piVar5 * 0x20;\n                                        *(*0x735690 + piVar5 * 8 + 6) = 1;\n                                        if (piVar8 != 0x3) {\n                                            piVar14 = *0x735698;\n                                            if (piVar5 < *0x735698) {\n                                                piVar14 = *(*0x735690 + iVar7 + 0x1a);\n                                                goto code_r0x0040167b;\n                                            }\ncode_r0x00401699:\n                                            *(*0x20 + -0xb0) = 0x4016a5;\n                                            fcn.0045c5a0(piVar14);\n                                            piVar9 = piVar5;\n                                            goto code_r0x004016a5;\n                                        }\n                                        piVar14 = 0x1;\ncode_r0x0040167b:\n                                        piVar9 = *0x735690;\n                                        if (*0x735698 <= piVar5) {\n                                            *(*0x20 + -0xb0) = 0x401699;\n                                            fcn.0045c5a0(*0x735698);\n                                            goto code_r0x00401699;\n                                        }\ncode_r0x0040161c:\n                                        *(piVar9 + iVar7 + 0x19) = piVar14;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = piVar8;\n                                    *(*0x20 + -0x70) = *0x735698;\n                                    arg2 = *0x735698;\n                                    for (piVar14 = NULL; piVar14 < arg2; piVar14 = piVar14 + 1) {\n                                        piVar12 = *0x735690;\n                                        piVar8 = *0x735698;\n                                        if (*0x735698 <= piVar14) {\ncode_r0x00401614:\n                                            *(*0x20 + -0xb0) = 0x40161c;\n                                            piVar14 = piVar8;\n                                            iVar7 = fcn.0045c5a0(piVar8);\n                                            goto code_r0x0040161c;\n                                        }\n                                        piVar8 = *(*0x735690 + piVar14 * 8 + 2);\n                                        piVar12 = *(*0x735690 + piVar14 * 8);\n                                        if (piVar8 == piVar5) {\n                                            *(*0x20 + -0x78) = piVar14 * 0x20;\n                                            *(*0x20 + -0x80) = piVar14;\n                                            *(*0x20 + -0xb0) = 0x40153a;\n                                            cVar4 = fcn.004025e0(piVar8, arg2);\n                                            if (cVar4 != '\\0') {\n                                                piVar8 = *(*0x20 + -0x80);\n                                                arg1 = *0x735698;\n                                                in_RAX = *0x735690;\n                                                if (piVar8 < *0x735698) {\n                                                    piVar12 = *(*0x20 + -0x78);\n                                                    *(*0x735690 + 6 + piVar12) = 1;\n                                                    in_RAX = *0x735690;\n                                                    if (piVar8 < *0x735698) {\n                                                        *(*0x735690 + piVar12 + 0x19) = *(*0x20 + -0x68) == 3;\n                                                        in_RAX = *(*0x20 + -0x38);\n                                                        piVar6 = *(*0x20 + -0x58);\n                                                        goto code_r0x00401116;\n                                                    }\n                                                    *(*0x20 + -0xb0) = 0x40160f;\n                                                    arg1 = *0x735698;\n                                                    fcn.0045c5a0(*0x735698);\n                                                }\n                                                *(*0x20 + -0xb0) = 0x401614;\n                                                fcn.0045c5a0(arg1);\n                                                piVar8 = piVar14;\n                                                goto code_r0x00401614;\n                                            }\n                                            arg2 = *(*0x20 + -0x70);\n                                            unaff_RBX = *(*0x20 + -0x48);\n                                            in_RAX = *(*0x20 + -0x38);\n                                            piVar6 = *(*0x20 + -0x58);\n                                            piVar5 = *(*0x20 + -0x60);\n                                            piVar14 = *(*0x20 + -0x80);\n                                        }\n                                    }\n                                    *(*0x20 + -0xb0) = 0x4015c5;\n                                    fcn.00433860();\n                                    *(*0x20 + -0xb0) = 0x4015d6;\n                                    fcn.00434160();\n                                    *(*0x20 + -0xb0) = 0x4015e5;\n                                    fcn.00434160();\n                                    *(*0x20 + -0xb0) = 0x4015f6;\n                                    fcn.00434160();\n                                    *(*0x20 + -0xb0) = 0x4015fb;\n                                    fcn.004338e0();\n                                    in_RAX = *(*0x20 + -0x38);\n                                    piVar6 = *(*0x20 + -0x58);\n                                }\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((piVar8 == 0x4) && (*(piVar14 + uVar13) == 0x666f)) &&\n                                (*(piVar14 + uVar13 + 2) == 'f')) goto code_r0x00401236;\n                        *(*0x20 + -0xb0) = 0x401285;\n                        fcn.00433860();\n                        *(*0x20 + -0xb0) = 0x401296;\n                        fcn.00434160();\n                        *(*0x20 + -0xb0) = 0x4012a5;\n                        fcn.00434160();\n                        *(*0x20 + -0xb0) = 0x4012b6;\n                        fcn.00434160();\n                        *(*0x20 + -0xb0) = 0x4012c5;\n                        fcn.00434160();\n                        *(*0x20 + -0xb0) = 0x4012d6;\n                        fcn.00434160();\n                        *(*0x20 + -0xb0) = 0x4012db;\n                        fcn.004338e0();\n                        in_RAX = *(*0x20 + -0x38);\n                        piVar6 = *(*0x20 + -0x58);\n                        goto code_r0x00401116;\n                    }\ncode_r0x004016ad:\n                    *(*0x20 + -0xb0) = 0x4016b5;\n                    fcn.0045c660(piVar9);\n                }\n                piVar9 = arg2;\n                *(*0x20 + -0xb0) = 0x4016c5;\n                arg2 = piVar9;\n                fcn.0045c660(piVar9);\n            }\n            *(*0x20 + -0xb0) = 0x4016d3;\n            fcn.0045c5e0(arg2, piVar9);\ncode_r0x004016d3:\n            *(*0x20 + -0xb0) = 0x4016de;\n            piVar9 = unaff_RBX;\n            fcn.0045c660(unaff_RBX);\ncode_r0x004016de:\n            *(*0x20 + -0xb0) = 0x4016e6;\n            in_RAX = fcn.0045c5e0(piVar9, unaff_RBX);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x4016f6;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x0040136e:\n    iVar1 = piVar14[1];\n    iVar2 = piVar14[2];\n    iVar3 = piVar14[3];\n    *(*0x20 + -0x28) = *piVar14;\n    *(*0x20 + -0x24) = iVar1;\n    *(*0x20 + -0x20) = iVar2;\n    *(*0x20 + -0x1c) = iVar3;\n    iVar1 = piVar14[5];\n    iVar2 = piVar14[6];\n    iVar3 = piVar14[7];\n    *(*0x20 + -0x18) = piVar14[4];\n    *(*0x20 + -0x14) = iVar1;\n    *(*0x20 + -0x10) = iVar2;\n    *(*0x20 + -0xc) = iVar3;\n    if (*(*0x20 + -0x10) != '\\0') {\n        *(*0x20 + -0x60) = iVar7;\n        *(*0x20 + -0x30) = piVar14;\n        cVar4 = *(*0x20 + -0xf);\n        if (cVar4 == '\\0') {\ncode_r0x00401422:\n            if (*(*0x20 + -0xe) == '\\0') {\ncode_r0x0040142c:\n                **(*0x20 + -0x18) = cVar4;\n            }\n            else {\n                *(*0x20 + -0x38) = *(*0x20 + -0x28);\n                *(*0x20 + -0x68) = *(*0x20 + -0x20);\n                *(*0x20 + -0xb0) = 0x401457;\n                fcn.00433860();\n                *(*0x20 + -0xb0) = 0x401468;\n                fcn.00434160();\n                *(*0x20 + -0xb0) = 0x401477;\n                fcn.00434160();\n                *(*0x20 + -0xb0) = 0x401488;\n                fcn.00434160();\n                *(*0x20 + -0xb0) = 0x40148d;\n                fcn.004338e0();\n                piVar6 = *(*0x20 + -0x58);\n                piVar14 = *(*0x20 + -0x30);\n                iVar7 = *(*0x20 + -0x60);\n            }\n        }\n        else {\n            if (**(*0x20 + -0x18) != '\\0') {\n                if (cVar4 == '\\0') goto code_r0x00401422;\n                goto code_r0x0040142c;\n            }\n            *(*0x20 + -0x38) = *(*0x20 + -0x28);\n            *(*0x20 + -0x68) = *(*0x20 + -0x20);\n            *(*0x20 + -0xb0) = 0x4013db;\n            fcn.00433860();\n            *(*0x20 + -0xb0) = 0x4013ec;\n            fcn.00434160();\n            *(*0x20 + -0xb0) = 0x4013fb;\n            fcn.00434160();\n            *(*0x20 + -0xb0) = 0x40140c;\n            fcn.00434160();\n            *(*0x20 + -0xb0) = 0x401411;\n            fcn.004338e0();\n            piVar6 = *(*0x20 + -0x58);\n            piVar14 = *(*0x20 + -0x30);\n            iVar7 = *(*0x20 + -0x60);\n        }\n    }\n    iVar7 = iVar7 + 1;\n    if (piVar6 <= iVar7) {\n        return;\n    }\n    piVar14 = piVar14 + 8;\n    goto code_r0x0040136e;\n}\n",
        "token_count": 4061
    },
    "00402920": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402920(uint64_t arg1)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [32];\n    uint64_t uVar5;\n    uchar auVar6 [32];\n    uchar auVar7 [16];\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uchar (*pauStackX24) [32];\n    uint64_t uStackX32;\n    uint8_t uVar10;\n    \n    if (uStackX16 < uStackX32) {\n        return;\n    }\n    if ((0xf < uStackX16) && (*0x789def == '\\x01')) {\n        if (0xb < uStackX32) goto code_r0x00402737;\n        if ((*pauStackX24 + 0x10 & 0xff0) != 0) {\n            pauVar4 = pauStackX8[-1];\n            uVar5 = 0x10 - uStackX32;\n            do {\n                uVar3 = pcmpestri(**pauStackX24, **pauStackX8, 0xc);\n                if ((arg1 & 0xffffffff00000000 | uVar3) < uVar5 || (arg1 & 0xffffffff00000000 | uVar3) == uVar5) {\n                    return;\n                }\n                pauStackX8 = pauStackX8 + uVar5;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n            uVar3 = pcmpestri(**pauStackX24, *((*pauVar4 + uStackX16 + 0x11)[-1] + 0x1f), 0xc);\n            if (uVar5 <= (arg1 & 0xffffffff00000000 | uVar3) && (arg1 & 0xffffffff00000000 | uVar3) != uVar5) {\n                return;\n            }\n            return;\n        }\n    }\n    if (uStackX32 < 3) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1f);\n        return;\n    }\n    if (uStackX32 < 4) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (*pauVar4 + uStackX16 + 0x1e <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(*pauStackX8 + 1) == *(*pauStackX24 + 1)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1e);\n        return;\n    }\n    if (uStackX32 < 5) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1d);\n        return;\n    }\n    if (uStackX32 < 8) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(pauStackX8[-1] + uStackX32 + 0x1c) == *(pauStackX24[-1] + uStackX32 + 0x1c)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n        return;\n    }\n    if (uStackX32 < 9) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x19);\n        return;\n    }\ncode_r0x00402737:\n    if (uStackX32 < 0x10) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 == **pauStackX24) {\n                if (*(pauStackX8[-1] + uStackX32 + 0x18) == *(pauStackX24[-1] + uStackX32 + 0x18)) {\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else if (uStackX32 < 0x11) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]);\n            auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                 CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                           CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc]), \n                                                                     CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                (*pauStackX24)[0xb]), \n                                                                               CONCAT110(-((*pauStackX8)[10] ==\n                                                                                          (*pauStackX24)[10]), \n                                                                                         CONCAT19(-((*pauStackX8)[9] ==\n                                                                                                   (*pauStackX24)[9]), \n                                                                                                  CONCAT18(-((*\n                                                            pauStackX8)[8] == (*pauStackX24)[8]), \n                                                            CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                     CONCAT16(-((*pauStackX8)[6] == (*pauStackX24)[6]), \n                                                                              CONCAT15(-((*pauStackX8)[5] ==\n                                                                                        (*pauStackX24)[5]), \n                                                                                       CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                 (*pauStackX24)[4]), \n                                                                                                CONCAT13(-((*pauStackX8)\n                                                                                                           [3] == (*\n                                                            pauStackX24)[3]), \n                                                            CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                     CONCAT11(-((*pauStackX8)[1] == (*pauStackX24)[1]), \n                                                                              -((*pauStackX8)[0] == (*pauStackX24)[0])))\n                                                            )))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf)\n                == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n    }\n    else if (uStackX32 < 0x20) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        pcVar1 = pauStackX24[-1] + uStackX32 + 0x10;\n        do {\n            while (uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]), \n                  auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                       CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                                 CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc])\n                                                                           , CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                        (*pauStackX24)[0xb]), \n                                                                                       CONCAT110(-((*pauStackX8)[10] ==\n                                                                                                  (*pauStackX24)[10]), \n                                                                                                 CONCAT19(-((*pauStackX8\n                                                                                                            )[9] == (*\n                                                            pauStackX24)[9]), \n                                                            CONCAT18(-((*pauStackX8)[8] == (*pauStackX24)[8]), \n                                                                     CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                              CONCAT16(-((*pauStackX8)[6] ==\n                                                                                        (*pauStackX24)[6]), \n                                                                                       CONCAT15(-((*pauStackX8)[5] ==\n                                                                                                 (*pauStackX24)[5]), \n                                                                                                CONCAT14(-((*pauStackX8)\n                                                                                                           [4] == (*\n                                                            pauStackX24)[4]), \n                                                            CONCAT13(-((*pauStackX8)[3] == (*pauStackX24)[3]), \n                                                                     CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                              CONCAT11(-((*pauStackX8)[1] ==\n                                                                                        (*pauStackX24)[1]), \n                                                                                       -((*pauStackX8)[0] ==\n                                                                                        (*pauStackX24)[0])))))))))))))))\n                                    ), \n                  (SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf) != 0xffff) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pcVar2 = pauStackX8[-1] + uStackX32 + 0x10;\n            auVar7 = CONCAT115(-(pcVar2[0xf] == pcVar1[0xf]), \n                               CONCAT114(-(pcVar2[0xe] == pcVar1[0xe]), \n                                         CONCAT113(-(pcVar2[0xd] == pcVar1[0xd]), \n                                                   CONCAT112(-(pcVar2[0xc] == pcVar1[0xc]), \n                                                             CONCAT111(-(pcVar2[0xb] == pcVar1[0xb]), \n                                                                       CONCAT110(-(pcVar2[10] == pcVar1[10]), \n                                                                                 CONCAT19(-(pcVar2[9] == pcVar1[9]), \n                                                                                          CONCAT18(-(pcVar2[8] ==\n                                                                                                    pcVar1[8]), \n                                                                                                   CONCAT17(-(pcVar2[7]\n                                                                                                             == pcVar1[7\n                                                            ]), CONCAT16(-(pcVar2[6] == pcVar1[6]), \n                                                                         CONCAT15(-(pcVar2[5] == pcVar1[5]), \n                                                                                  CONCAT14(-(pcVar2[4] == pcVar1[4]), \n                                                                                           CONCAT13(-(pcVar2[3] ==\n                                                                                                     pcVar1[3]), \n                                                                                                    CONCAT12(-(pcVar2[2]\n                                                                                                              == pcVar1[\n                                                            2]), CONCAT11(-(pcVar2[1] == pcVar1[1]), \n                                                                          -(*pcVar2 == *pcVar1))))))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe |\n                (-(pcVar2[0xf] == pcVar1[0xf]) >> 7) << 0xf) == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else {\n        if (uStackX32 < 0x21) {\n            auVar6 = vmovdqu_avx(*pauStackX24);\n            pauVar4 = pauStackX8[-1];\n            do {\n                auVar8 = vmovdqu_avx(*pauStackX8);\n                auVar8 = vpcmpeqb_avx2(auVar8, auVar6);\n                if ((SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) == 0xffffffff) {\ncode_r0x004028a8:\n                    vzeroupper_avx();\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 1);\n        }\n        else {\n            pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n            auVar6 = vmovdqu_avx(*(pauStackX24[-1] + uStackX32));\n            auVar8 = vmovdqu_avx(*pauStackX24);\n            do {\n                while( true ) {\n                    auVar9 = vmovdqu_avx(*pauStackX8);\n                    auVar9 = vpcmpeqb_avx2(auVar9, auVar8);\n                    if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                    break;\n                    pauStackX8 = *pauStackX8 + 1;\n                    if (pauVar4 <= pauStackX8) goto code_r0x0040289d;\n                }\n                auVar9 = vmovdqu_avx(*(pauStackX8[-1] + uStackX32));\n                auVar9 = vpcmpeqb_avx2(auVar9, auVar6);\n                if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                goto code_r0x004028a8;\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < pauVar4);\n        }\ncode_r0x0040289d:\n        vzeroupper_avx();\n    }\n    return;\n}\n",
        "token_count": 6756
    },
    "00403d80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403d80(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint64_t unaff_RDI;\n    int64_t iVar13;\n    uint8_t *puVar14;\n    uint64_t uVar15;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404120(arg1);\n        return;\n    }\n    if (*0x734cf0 == NULL) {\n        iVar8 = 0;\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = **0x734cf0;\n        iVar8 = (*0x734cf0)[1];\n    }\n    for (iVar13 = 0; iVar13 < iVar8; iVar13 = iVar13 + 1) {\n        iVar2 = *(iVar11 + iVar13 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00404120(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00404120(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x75ba18) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.00459d60();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar12 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar11 = *(*(uVar7 * 8 + 0x75ba18) + (uVar12 & 0xfffff) * 8);\n            if (iVar11 == 0) {\n                uVar12 = 0;\n                uVar7 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar11;\n                uVar7 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar11 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar15 = unaff_RBX;\n            do {\n                uVar10 = uVar7;\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar10 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar15;\n                    cVar4 = fcn.00403980(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.004320e0();\n                        break;\n                    }\n                    uVar12 = uVar12 & 0xffffffff;\n                    uVar15 = unaff_RBX;\n                }\n                if (uVar10 < 3) {\n                    uVar10 = uVar10 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar12 & 0xffffffff;\n                    unaff_RBX = uVar15;\n                    puVar9 = fcn.00410360(uVar12 & 0xffffffff);\n                    uVar12 = uVar6;\n                    uVar15 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar10 = 0;\n                }\n                uVar5 = uVar5 + 8;\n                uVar7 = uVar10;\n            } while( true );\n        }\n        fcn.0045c5c0(0x40);\n    }\n    fcn.0045c5c0(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1204
    },
    "00407d00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407d00(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t noname_0;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00453cc0();\n    uVar5 = *(in_RAX + 0x17);\n    noname_0 = uVar5;\n    if (uVar5 < 9) {\n        if (4 < uVar5) {\n            if (6 < uVar5) {\n                if (uVar5 == 7) {\n                    fcn.00433860();\n                    fcn.00434160();\n                    fcn.00434160();\n                    fcn.00433e60();\n                    fcn.00434160();\n                    fcn.004338e0();\n                    return;\n                }\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433e60();\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n            if (uVar5 == 5) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433f60();\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n        if (2 < uVar5) {\n            if (uVar5 == 3) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433f60();\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n        if (uVar5 == 1) {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433b00();\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n        if (uVar5 == 2) {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n    }\n    else {\n        if (uVar5 < 0xd) {\n            if (10 < uVar5) {\n                if (uVar5 == 0xb) {\n                    fcn.00433860();\n                    fcn.00434160();\n                    fcn.00434160();\n                    fcn.00433e60();\n                    fcn.00434160();\n                    fcn.004338e0();\n                    return;\n                }\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433e60();\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n            if (uVar5 == 9) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433e60();\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n        if (uVar5 < 0xf) {\n            if (uVar5 == 0xd) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433b60(noname_0, param_2);\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433b60(noname_0, param_2);\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n        if (uVar5 == 0xf) {\n            fVar1 = *unaff_RBX;\n            fVar2 = *(unaff_RBX + 4);\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433dc0(fVar1, fVar2);\n            fcn.004338e0();\n            return;\n        }\n        if (uVar5 == 0x10) {\n            uVar3 = *unaff_RBX;\n            uVar4 = unaff_RBX[1];\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433dc0(uVar3, uVar4);\n            fcn.004338e0();\n            return;\n        }\n        if (uVar5 == 0x18) {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.004338e0();\n            return;\n        }\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.004340e0();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 1413
    },
    "0040cf00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040cf00(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x40) = 0x40cff9;\n                    (*pcVar1)();\n                }\n                return 0x78a840;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x40) = 0x40cf6b;\n                uVar4 = (*pcVar1)();\n                iVar10 = *(*0x20 + 0x10);\n                uVar8 = (1 << (*(iVar10 + 9) & 0x3f)) - 1;\n                iVar9 = *(*0x20 + 8);\n                iVar2 = *(iVar10 + 0x18);\n                iVar5 = (uVar8 & uVar4) * *(iVar9 + 0x52) + *(iVar10 + 0x10);\n                if (iVar2 != 0) {\n                    if ((*(iVar10 + 8) & 8) == 0) {\n                        uVar8 = uVar8 >> 1;\n                    }\n                    iVar10 = *(iVar9 + 0x52) * (uVar8 & uVar4);\n                    if (2 < *(iVar2 + iVar10) - 2U) {\n                        iVar5 = iVar2 + iVar10;\n                    }\n                }\n                uVar8 = uVar4 >> 0x38;\n                if (uVar4 >> 0x38 < 5) {\n                    uVar8 = (uVar4 >> 0x38) + 5;\n                }\n                *(*0x20 + -0x21) = uVar8;\n                do {\n                    if (iVar5 == 0) {\n                        return 0x78a840;\n                    }\n                    *(*0x20 + -0x18) = iVar5;\n                    for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                        if (uVar8 == *(uVar4 + iVar5)) {\n                            *(*0x20 + -0x20) = uVar4;\n                            piVar6 = *(iVar9 + 0x50) * uVar4 + iVar5 + 8;\n                            if ((*(iVar9 + 0x54) & 1) != 0) {\n                                piVar6 = *piVar6;\n                            }\n                            pcVar1 = **(*(iVar9 + 0x30) + 0x18);\n                            *(*0x20 + -0x40) = 0x40d090;\n                            cVar3 = (*pcVar1)(piVar6);\n                            if (cVar3 != '\\0') {\n                                iVar10 = *(*0x20 + 8);\n                                piVar6 = *(*0x20 + -0x18) + *(iVar10 + 0x51) * *(*0x20 + -0x20) + *(iVar10 + 0x50) * 8 +\n                                         8;\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    piVar6 = *piVar6;\n                                }\n                                return piVar6;\n                            }\n                            uVar8 = *(*0x20 + -0x21);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + 8);\n                        }\n                        else if (*(uVar4 + iVar5) == '\\0') {\n                            return 0x78a840;\n                        }\n                    }\n                    iVar5 = *(iVar5 + *(iVar9 + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x40) = 0x40d105;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40d11a;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1322
    },
    "0040d8e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d8e0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040de4a:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40de5e;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x78) = iVar7;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x90) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40db48;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x88) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40db89;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x90);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x80) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40dc65;\n                                iVar8 = fcn.0040c800(arg1_00);\n                                iVar7 = *(*0x20 + -0x80);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40dd45;\n                                fcn.0040fb00(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x789810 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40dd25;\n                                    in_RAX = fcn.0045c260(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40ddcf;\n                                fcn.0040fb00(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x789810 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40ddb0;\n                                    in_RAX = fcn.0045c260(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040dabc;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40de38;\n                        fcn.0045c5a0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40de49;\n                    in_RAX = fcn.004320e0();\n                    goto code_r0x0040de4a;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040dabc:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40da9d;\n            fcn.0040fe00(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x78);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40da25;\n        fcn.0040de80(iVar7);\n    }\n    return;\n}\n",
        "token_count": 3268
    },
    "0040de80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040de80(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    uVar3 = iVar1 + 0x401;\n    if (arg1 < uVar3) {\n        uVar3 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != uVar3 && (*(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2U < 3)))\n    {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x789810 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c200(0);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x789810 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045c200();\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0040df80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040df80(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x78a840;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40dff6;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x78a840;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40e0e9;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40e0fd;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 953
    },
    "0040e120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040e120(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x78a840;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40e196;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x78a840;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40e296;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40e2aa;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 951
    },
    "0040e660": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e660(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040e9fa:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40ea0e;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x68) = iVar7;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40e886;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40e911;\n                                iVar8 = fcn.0040c800(arg1_00);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40e985;\n                            fcn.0040fb00(arg1_01);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            goto code_r0x0040e81b;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40e9e8;\n                        fcn.0045c5a0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40e9f9;\n                    in_RAX = fcn.004320e0();\n                    goto code_r0x0040e9fa;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040e81b:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40e7fc;\n            fcn.0040fe00(uVar1 * uVar3 + iVar7 + 8);\n            uVar3 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40e78b;\n        fcn.0040de80(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2257
    },
    "0040ea40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040ea40(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x78a840;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x40ede5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x40edff;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040eac7:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x40eae2;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x78a840;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x0040ec05:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x30) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x40ebd7;\n                    cVar5 = fcn.004025e0(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x0040ec05;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x30);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar3 + -4) == *(unaff_RDI + piVar4 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x0040eac7;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x40ecd8;\n            cVar5 = fcn.004025e0(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x78a840;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x78a840;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x0040eda3:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x40ed7a;\n            cVar5 = fcn.004025e0(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x0040eda3;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x38);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x78a840;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2191
    },
    "0040ee20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040ee20(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x78a840;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x40f1f4;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x40f20e;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040eea9:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x40eec2;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x78a840;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x0040efee:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x30) = uVar7;\n                    *(*0x20 + -0x20) = piVar9;\n                    *(*0x20 + -0x68) = 0x40efbd;\n                    cVar5 = fcn.004025e0(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x0040efee;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x20);\n                    uVar7 = *(*0x20 + -0x30);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar3 + -4) == *(unaff_RDI + piVar4 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x0040eea9;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x40f0d8;\n            cVar5 = fcn.004025e0(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x78a840;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x78a840;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x0040f1ae:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            *(*0x20 + -0x28) = piVar9;\n            *(*0x20 + -0x68) = 0x40f185;\n            cVar5 = fcn.004025e0(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x0040f1ae;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x38);\n            piVar9 = *(*0x20 + -0x28);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x78a840;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2193
    },
    "0040f6e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f6e0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040facf:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40fae5;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x68) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40f90f;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x78);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40f999;\n                                iVar8 = fcn.0040c800(uVar3);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x78);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x789810 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x40fa45;\n                                fcn.0045c280(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x40fa59;\n                            fcn.0040fb00(arg1_00);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x0040f8a5;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40fabd;\n                        fcn.0045c5a0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40face;\n                    in_RAX = fcn.004320e0();\n                    goto code_r0x0040facf;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040f8a5:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40f885;\n            fcn.0040fe00(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x40f80e;\n        fcn.0040de80(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2410
    },
    "00410580": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410580(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x789814 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x75ba18);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x734cf0 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x734cf0;\n                iVar15 = (*0x734cf0)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x734cf0 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x734cf0;\n                        iVar15 = (*0x734cf0)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.00410c00(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00410c00(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x75ba18) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar10 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar10 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar9 = 0; uVar9 < arg1; uVar9 = uVar9 + 8) {\n                    uVar13 = uVar10;\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x16c0);\n                        *puVar4 = *(uVar9 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x16c0) + 0x10;\n                        *(iVar12 + 0x16c0) = iVar15;\n                        if (*(iVar12 + 0x16c8) == iVar15) {\n                            fcn.0042ab40();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar10 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar13 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.00410360(uVar6 & 0xffffffff);\n                        uVar6 = uVar13;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar10 = 0;\n                    }\n                }\n            }\n            else {\n                uVar9 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    uVar13 = uVar10;\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x16c0);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x16c0) + 0x10;\n                        *(iVar12 + 0x16c0) = iVar15;\n                        if (*(iVar12 + 0x16c8) == iVar15) {\n                            unaff_RBX = uVar9;\n                            fcn.0042ab40();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar9 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar10 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar13 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar9;\n                        puVar14 = fcn.00410360(uVar6 & 0xffffffff);\n                        uVar6 = uVar13;\n                        uVar9 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar10 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.0045c5c0(0x40);\n    }\n    fcn.004320e0();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1734
    },
    "00410a00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410a00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    uint64_t uVar13;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x789814 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar10 = in_RAX + 0x800000000000 >> 0x16;\n            iVar11 = *(*(uVar7 * 8 + 0x75ba18) + (uVar10 & 0xfffff) * 8);\n            if (iVar11 == 0) {\n                uVar10 = 0;\n                uVar7 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar11 + (in_RAX >> 5 & 0x1ffff);\n                uVar7 = in_RAX >> 3 & 3;\n                puVar8 = iVar11 + 0x1ffff;\n            }\n            uVar13 = unaff_RBX;\n            for (uVar5 = 0; uVar9 = uVar7,  uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar9 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar11 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar11;\n                    if (*(iVar1 + 0x16c8) == iVar11) {\n                        unaff_RBX = uVar13;\n                        fcn.0042ab40();\n                        uVar10 = uVar10 & 0xffffffff;\n                        uVar13 = unaff_RBX;\n                    }\n                }\n                if (uVar9 < 3) {\n                    uVar9 = uVar9 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar10 & 0xffffffff;\n                    unaff_RBX = uVar13;\n                    puVar12 = fcn.00410360(uVar10 & 0xffffffff);\n                    uVar10 = uVar6;\n                    uVar13 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar9 = 0;\n                }\n                uVar7 = uVar9;\n            }\n            return;\n        }\n        fcn.0045c5c0(0x40);\n    }\n    fcn.004320e0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 813
    },
    "00411140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00411648)\n\nvoid fcn.00411140(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    ulong uVar4;\n    int8_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    uint64_t *unaff_RDI;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint64_t uVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar16;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar6 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar6 < 0x40) {\n                puVar22 = in_RAX + 0x800000000000 >> 0x16;\n                iVar20 = *(*(uVar6 * 8 + 0x75ba18) + (puVar22 & 0xfffff) * 8);\n                if (iVar20 == 0) {\n                    puVar3 = NULL;\n                    uVar13 = 0;\n                    puVar24 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar3 = iVar20 + (in_RAX >> 5 & 0x1ffff);\n                    uVar13 = in_RAX >> 3 & 3;\n                    puVar24 = iVar20 + 0x1ffff;\n                    puVar10 = puVar22;\n                }\n                puVar1 = unaff_RDI[4];\n                uVar9 = uVar13;\n                if (unaff_RBX == 0x10) {\n                    iVar5 = uVar13;\n                    if (*unaff_RDI == 8) {\n                        *puVar3 = *puVar3 | 0x33 << iVar5 & -(uVar9 < 0x20);\n                        return;\n                    }\n                    *puVar3 = -(uVar9 < 0x20) &\n                              (*puVar1 & 3 |\n                              (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) << iVar5 |\n                              ~(0x33 << iVar5 & -(uVar9 < 0x20)) & *puVar3;\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar14 = *puVar1;\n                    if (*unaff_RDI == 8) {\n                        uVar14 = 7;\n                    }\n                    uVar14 = (uVar14 & 7) << 4 | uVar14 & 7;\n                    uVar16 = (uVar14 & 0x40) >> 1;\n                    uVar15 = uVar16 | uVar14;\n                    uVar17 = uVar15 | 0x10;\n                    uVar18 = uVar17;\n                    if (uVar9 < 2) {\n                        if (uVar9 == 0) {\n                            *puVar3 = *puVar3 & 0x88 | uVar15 | 0x10;\n                        }\n                        else {\n                            *puVar3 = uVar17 << 1 | *puVar3 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xeb) = uVar18;\n                        if (uVar9 == 2) {\n                            *puVar3 = (uVar16 | uVar14 & 0x33 | 0x10) << 2 | *puVar3 & 0x33;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x411477;\n                                puVar3 = fcn.00410360(puVar10 & 0xffffffff);\n                                uVar18 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar18 >> 2 & 0x11 | *puVar3 & 0xee;\n                        }\n                        else if (uVar9 == 3) {\n                            *puVar3 = *puVar3 & 0x77 | (uVar14 & 0x11 | 0x10) << 3;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x4114d2;\n                                puVar3 = fcn.00410360(puVar10 & 0xffffffff);\n                                uVar18 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar18 >> 1 & 0x33 | *puVar3 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = puVar1;\n                *(*0x20 + -0x40) = puVar3;\n                uVar23 = puVar10 & 0xffffffff;\n                uVar7 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar3 = in_RAX;\n                if (uVar23 == uVar7) {\n                    puVar3 = *(*0x20 + -0x40);\n                }\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x60) = puVar22 & 0xfffff;\n                *(*0x20 + -0x68) = uVar7;\n                *(*0x20 + -0x70) = uVar6;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x78) = puVar22;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar3;\n                    uVar6 = *unaff_RDI;\n                    if (arg1 <= uVar6) {\n                        uVar4 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                        goto code_r0x0041180a;\n                    }\n                    *(*0x20 + -0x80) = uVar6;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        puVar22 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xa8) = puVar3;\n                        *(*0x20 + -200) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        puVar3 = *(*0x20 + -0xa8);\n                        while (uVar11 = *(*0x20 + -200),  uVar11 < uVar25) {\n                            uVar18 = *puVar22;\n                            puVar22 = puVar22 + 1;\n                            uVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + -200) = uVar11 + 8;\n                            *(*0x20 + -0xb0) = *(*0x20 + -0xb0) | uVar18 << (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        uVar6 = uVar6 >> 3;\n                        if (uVar6 * 2 < 0x3a) {\n                            uVar11 = *(*0x20 + -0xb0);\n                            for (uVar7 = uVar6; uVar7 < 0x41; uVar7 = uVar7 * 2) {\n                                *(*0x20 + -0xd8) = uVar11;\n                                uVar11 = uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) | *(*0x20 + -0xd8);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar6 == '\\0') {\n                                *(*0x20 + -0x138) = 0x411d99;\n                                fcn.0042fa00();\n                                goto code_r0x00411d99;\n                            }\n                            *(*0x20 + -0xea) = uVar6 & 0xff;\n                            uVar6 = (0x39 / *(*0x20 + -0xea)) * uVar6;\n                            uVar11 = (1 << (uVar6 & 0x3f) & -(uVar6 < 0x40)) - 1 & uVar11;\n                            puVar3 = *(*0x20 + -0x38);\n                            uVar7 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            uVar11 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0xd0) = uVar6;\n                        uVar25 = 0;\n                        *(*0x20 + -0xd8) = uVar11;\n                        puVar10 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar6 = (uVar6 >> 3) + (uVar25 - 1) * -8;\n                        uVar25 = (uVar25 + *(*0x20 + -0x48)) - 1;\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    break;\n                }\n                *(*0x20 + -0x88) = uVar23;\n                uVar6 = unaff_RDI[1];\n                uVar13 = *unaff_RDI;\n                *(*0x20 + -0x138) = 0x4113b0;\n                fcn.00411de0(puVar10 & 0xffffffff, uVar6, uVar13, arg1);\n                bVar26 = *(*0x20 + -0x88) == *(*0x20 + -0x68);\n                goto code_r0x004115a1;\n            }\ncode_r0x00411d99:\n            arg1 = 0x40;\n            *(*0x20 + -0x138) = 0x411da6;\n            in_RAX = fcn.0045c5c0(0x40);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x411dc5;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00411c12:\n    uVar4 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x28) = uVar25;\n    *(*0x20 + -0xc0) = uVar6;\n    puVar22 = *(*0x20 + -0x78);\n    uVar6 = *(*0x20 + -0x80);\ncode_r0x0041180a:\n    if (puVar10 == NULL) {\n        uVar25 = *(*0x20 + -0xd8);\n        *(*0x20 + -0xd0) = uVar4;\n        puVar22 = *(*0x20 + -0x78);\n    }\n    else {\n        uVar25 = *puVar10;\n        puVar10 = puVar10 + 1;\n        *(*0x20 + -0xa0) = puVar3;\n        *(*0x20 + -0xd0) = 8;\n        puVar3 = *(*0x20 + -0xa0);\n    }\n    if (arg1 == uVar6) {\n        uVar6 = unaff_RDI[1];\ncode_r0x0041188f:\n        uVar6 = uVar6 >> 3;\n        if (uVar6 != 0) {\n            if (uVar13 == 0) {\n                uVar18 = uVar25 & 0xf | 0xf0;\n                if (uVar6 < 5) {\n                    puVar22 = puVar3;\n                    uVar25 = 4;\n                    goto code_r0x00411b00;\n                }\n                *puVar3 = uVar18;\n                iVar2 = 4;\n                iVar20 = *(*0x20 + -0xd0) + -4;\n                uVar13 = 4;\n                goto code_r0x0041195a;\n            }\n            if (uVar13 == 2) goto code_r0x004118ea;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x138) = 0x411baf;\n            fcn.004320e0();\n        }\n        *(*0x20 + -0x138) = 0x411bb7;\n        uVar4 = fcn.00453cc0();\n        *(*0x20 + -0x18) = uVar4;\n        *(*0x20 + -0x98) = unaff_RBX;\n        *(*0x20 + -0x138) = 0x411bcc;\n        fcn.00433860();\n        *(*0x20 + -0x138) = 0x411bdd;\n        fcn.00434160();\n        *(*0x20 + -0x138) = 0x411bf2;\n        fcn.00434160();\n        *(*0x20 + -0x138) = 0x411bf7;\n        fcn.00433ac0();\n        *(*0x20 + -0x138) = 0x411bfc;\n        fcn.004338e0();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x138) = 0x411c0d;\n        fcn.004320e0();\n    }\n    else if (uVar6 != 0) {\n        uVar6 = uVar6 * (arg1 / uVar6 - 1) + unaff_RDI[1];\n        puVar3 = *(*0x20 + -0x38);\n        arg1 = uVar7;\n        goto code_r0x0041188f;\n    }\n    *(*0x20 + -0x138) = 0x411c12;\n    puVar3 = fcn.0042fa00();\n    puVar10 = puVar22;\n    goto code_r0x00411c12;\ncode_r0x004118ea:\n    uVar18 = (uVar25 & 3) << 2;\n    uVar19 = uVar18 | 0x40;\n    if (1 < uVar6) {\n        uVar19 = uVar18 | 0xc0;\n    }\n    *puVar3 = uVar19 | *puVar3 & 0x33;\n    puVar22 = puVar3 + 1;\n    if (uVar6 < 3) {\n        uVar18 = 0;\n        uVar25 = 6;\n    }\n    else {\n        iVar2 = 2;\n        iVar20 = *(*0x20 + -0xd0) + -2;\n        uVar13 = 2;\ncode_r0x0041195a:\n        puVar22 = puVar3 + 1;\n        uVar25 = uVar25 >> iVar2;\n        iVar12 = *(*0x20 + -0xd8);\n        uVar11 = iVar20 - 4;\n        while( true ) {\n            *(*0x20 + -0xb0) = uVar25;\n            uVar18 = uVar25 & 0xf | 0xf0;\n            uVar25 = uVar13 + 4;\n            if (uVar6 <= uVar13 + 4) break;\n            *puVar22 = uVar18;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            uVar18 = uVar11;\n            if (puVar10 == *(*0x20 + -0x28)) {\n                if (puVar10 == NULL) {\n                    if (uVar11 < 8) {\n                        uVar25 = uVar25 | iVar12 << (uVar18 & 0x3f);\n                        uVar11 = uVar11 + *(*0x20 + -0xc0);\n                        iVar12 = *(*0x20 + -0xd8);\n                    }\n                    uVar21 = uVar11 - 8;\n                }\n                else {\n                    uVar25 = uVar25 | -(uVar11 < 0x40) & *puVar10 << (uVar18 & 0x3f);\n                    uVar21 = uVar11 + *(*0x20 + -0xc0);\n                    if (uVar21 < 8) {\n                        uVar25 = uVar25 | **(*0x20 + -0x48) << (uVar21 & 0x3f);\n                        puVar10 = *(*0x20 + -0x48) + 1;\n                    }\n                    else {\n                        uVar21 = (uVar11 + *(*0x20 + -0xc0)) - 8;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    uVar7 = *(*0x20 + -0x68);\n                }\n            }\n            else if (uVar11 < 8) {\n                uVar25 = uVar25 | *puVar10 << (uVar18 & 0x3f);\n                puVar10 = puVar10 + 1;\n                uVar21 = uVar11;\n            }\n            else {\n                uVar21 = uVar11 - 8;\n            }\n            *(*0x20 + -0xb0) = uVar25;\n            uVar18 = uVar25 & 0xf | 0xf0;\n            uVar13 = uVar13 + 8;\n            if (uVar6 <= uVar13) {\n                puVar22 = puVar22 + 1;\n                uVar25 = uVar13;\n                break;\n            }\n            puVar22[1] = uVar18;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            puVar22 = puVar22 + 2;\n            uVar11 = uVar21;\n        }\n    }\ncode_r0x00411b00:\n    if (uVar6 < uVar25) {\n        uVar6 = -((uVar25 - uVar6) + -4);\n        uVar19 = (1 << (uVar6 & 0x3f) & -(uVar6 < 0x40)) - 1;\n        uVar18 = uVar18 & (uVar19 * '\\x10' | uVar19);\n    }\n    uVar6 = unaff_RBX >> 3;\n    if (uVar25 <= uVar6) {\n        *puVar22 = uVar18;\n        while( true ) {\n            puVar22 = puVar22 + 1;\n            uVar25 = uVar25 + 4;\n            if (uVar6 < uVar25) break;\n            *puVar22 = 0;\n        }\n        uVar18 = 0;\n    }\n    if (uVar25 == uVar6 + 2) {\n        *puVar22 = uVar18 | *puVar22 & 0xcc;\n        bVar26 = uVar23 == uVar7;\n    }\n    else {\n        bVar26 = uVar23 == uVar7;\n    }\ncode_r0x004115a1:\n    if (!bVar26) {\n        iVar20 = *(*(*(*0x20 + -0x70) * 8 + 0x75ba18) + *(*0x20 + -0x60) * 8);\n        if (iVar20 == 0) {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = NULL;\n            uVar13 = 0;\n            puVar10 = NULL;\n            uVar6 = 0;\n        }\n        else {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = iVar20 + (puVar3 >> 5 & 0x1ffff);\n            uVar13 = puVar3 >> 3 & 3;\n            puVar10 = iVar20 + 0x1ffff;\n            uVar6 = *(*0x20 + -0x78);\n        }\n        uVar7 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar3;\n        if (uVar13 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0x33;\n            if (puVar10 == puVar22) {\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x90) = uVar7;\n                *(*0x20 + -0x138) = 0x411676;\n                puVar22 = fcn.00410360(uVar6);\n                uVar7 = *(*0x20 + -0x90);\n                puVar24 = *(*0x20 + -0x58);\n                uVar13 = 3;\n                puVar3 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            uVar7 = uVar7 - 2;\n            puVar3 = puVar3 + 1;\n        }\n        while( true ) {\n            *(*0x20 + -0x50) = puVar3;\n            uVar9 = uVar13;\n            if (uVar7 < 4) break;\n            *(*0x20 + -0x30) = puVar22;\n            *(*0x20 + -0xb8) = uVar7;\n            *(*0x20 + -0x138) = 0x4116db;\n            uVar4 = fcn.004104e0(uVar6);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0xe4) = uVar9;\n            *(*0x20 + -0xe8) = uVar6;\n            *(*0x20 + -0x20) = puVar10;\n            *(*0x20 + -0xe0) = uVar7 & 0xfffffffffffffffc;\n            *(*0x20 + -0x68) = uVar7 >> 2;\n            *(*0x20 + -0x138) = 0x41171c;\n            fcn.0045cee0(uVar7 >> 2);\n            uVar7 = *(*0x20 + -0xb8) - *(*0x20 + -0xe0);\n            puVar3 = *(*0x20 + -0x50) + *(*0x20 + -0x68);\n            puVar24 = *(*0x20 + -0x58);\n            puVar22 = *(*0x20 + -0x18);\n            uVar13 = *(*0x20 + -0xe4);\n            puVar10 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0xe8);\n        }\n        if (uVar7 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0xcc;\n            if (uVar9 < 3) {\n                uVar9 = uVar9 + 1;\n            }\n            else if (puVar10 == puVar22) {\n                *(*0x20 + -0x138) = 0x4117b0;\n                puVar22 = fcn.00410360(uVar6);\n                puVar24 = *(*0x20 + -0x58);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar9 = 0;\n            }\n            if ((2 < uVar9) && (puVar22 == puVar10)) {\n                *(*0x20 + -0x138) = 0x4117df;\n                fcn.00410360(uVar6);\n                puVar24 = *(*0x20 + -0x58);\n            }\n        }\n        *(*0x20 + -0x138) = 0x411805;\n        fcn.0045cc20(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5855
    },
    "00416680": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004166c5)\n// WARNING: Removing unreachable block (ram,0x004166ec)\n\nvoid fcn.00416680(ulong param_1, ulong param_2, ulong param_3, int64_t param_4, uint64_t param_5)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x7895f0 = 2;\n            *0x789814 = 1;\n            *(*0x20 + -0x100) = param_1;\n            *0x789810 = *0x789810 & 0xffffff00 | 1;\n            *0x78a1c8 = *0x789e70;\n            *(*0x20 + -0x1a8) = 0x41670d;\n            fcn.0045de80();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar7 = **(in_GS_OFFSET + 0x28);\n            iVar9 = *(iVar7 + 0x30);\n            uVar5 = *(*0x20 + -0x1a0);\n            *(*0x20 + -0x170) = uVar5;\n            piVar1 = iVar9 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar9 = *(iVar7 + 0x30);\n            *(*0x20 + -0x30) = iVar9;\n            *(iVar9 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar9 + 200;\n            if (*0x789810 == 0) {\n                *(iVar9 + 200) = 0x4acdee;\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x416785;\n                fcn.0045c220(uVar5, 0x4acdee, param_4, param_5);\n            }\n            *(*0x20 + -0x20) = iVar7;\n            *(*(iVar7 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar7 + 0x30) + 0x90);\n            *(*0x20 + -0x1a8) = 0x4167ba;\n            fcn.004363a0(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0xf8) = 0x4173a0;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x170);\n            *(*0x20 + -0x1a0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1a8) = 0x4167ff;\n            fcn.00459d60();\n            *(*0x20 + -0x1a0) = 0x69e3f8;\n            *(*0x20 + -0x1a8) = 0x416825;\n            fcn.00459d60();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar7 = *(*(*0x20 + -0x20) + 0x30);\n            *(iVar7 + 0xf9) = 0;\n            *(*0x20 + -0x1a8) = 0x416865;\n            fcn.004363a0(2);\n            if (*0x73b7b0 != '\\0') {\n                *(*0x20 + -0x1a8) = 0x416887;\n                fcn.0044e500(0);\n            }\n            iVar9 = *(*0x20 + -0x30);\n            *(iVar9 + 0xd0) = 0;\n            if (*0x789810 == 0) {\n                *(iVar9 + 200) = 0;\n            }\n            else {\n                iVar7 = 0;\n                *(*0x20 + -0x1a8) = 0x4168bf;\n                fcn.0045c220(iVar9, 0, param_4, param_5);\n            }\n            if (*0x7895f0 == 0) {\n                *0x789e68 = *0x789e60;\n                *0x78cb60 = *0x78b458;\n                *(*0x20 + -0x1a8) = 0x4168fd;\n                fcn.0041c8c0(*(*0x20 + -0x100));\n                *(*0x20 + -0x1a8) = 0x416905;\n                fcn.0045de80();\n                *(*0x20 + -0x178) = *(*0x20 + -0x1a0);\n                *(*0x20 + -0x1a8) = 0x416927;\n                fcn.0045dee0(*(*0x20 + -0x1a0), iVar7);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar7 = *(*0x20 + -0x1a0);\n                iVar4 = *(*0x20 + -0x198);\n                iVar9 = *(*0x20 + -0x178);\n                *0x78a1b0 = *0x78a1b0 + (iVar9 - *0x78a1b8);\n                uVar11 = iVar9 - *0x78a1b8;\n                *0x78a1a8 = iVar9;\n                if (uVar11 < 0) {\n                    LOCK();\n                    *0x78efd8 = *0x78efd8 + 1;\ncode_r0x00416a41:\n                    *0x78b4c8 = iVar7 * 1000000000 + iVar4;\n                    *0x78cb58 = iVar9;\n                    *((*0x78c4d8 & 0xff) * 8 + 0x78b4d8) = *0x78a1b0;\n                    *((*0x78c4d8 & 0xff) * 8 + 0x78bcd8) = iVar7 * 1000000000 + iVar4;\n                    *0x78b4d0 = *0x78b4d0 + *0x78a1b0;\n                    iVar7 = (*0x78a198 - *0x78a190) * *0x78a184;\n                    *(*0x20 + -0x168) = iVar7;\n                    iVar12 = (*0x78a1a8 - *0x78a1a0) * *0x78a184;\n                    *(*0x20 + -0x148) = iVar12;\n                    *0x78a148 = *0x789ea0 + *0x789e98 + *0x789ea8 + iVar7 + iVar12 + *0x78a148;\n                    *0x78c4e0 = *0x78a148 / ((iVar9 - *0x736228) * *0x7895f4 + *0x736230);\n                    *0x735894 = 0;\n                    if (*0x78a140 != '\\0') {\n                        *0x78c4dc = *0x78c4dc + 1;\n                    }\n                    *(*0x20 + -0x1a8) = 0x416b53;\n                    fcn.00409e80();\n                    *0x78c4d8 = *0x78c4d8 + 1;\n                    *(*0x20 + -0x1a8) = 0x416b65;\n                    fcn.0043a240();\n                    *(*0x20 + -0x1a8) = 0x416b73;\n                    fcn.0040a0a0();\n                    *(*0x20 + -0x1a8) = 0x416b78;\n                    fcn.00428840();\n                    *(*0x20 + -0x160) = *0x75b9a8;\n                    *(*0x20 + -0x15c) = 0;\n                    LOCK();\n                    *0x75b9b0 = *0x75b9b0 + 1;\n                    *(*0x20 + -0x15c) = 1;\n                    *(*0x20 + -0x1a0) = 0x69e400;\n                    *(*0x20 + -0x1a8) = 0x416bad;\n                    fcn.00459d60();\n                    *(*0x20 + -0x1a8) = 0x416bc6;\n                    fcn.004288c0();\n                    *(*0x20 + -0x1a8) = 0x416bcb;\n                    fcn.00421360();\n                    *(*0x20 + -0x1a0) = 0x69e3c8;\n                    *(*0x20 + -0x1a8) = 0x416bdb;\n                    fcn.00459d60();\n                    *(*0x20 + -0x1a0) = 0x69e410;\n                    *(*0x20 + -0x1a8) = 0x416bff;\n                    fcn.00459d60();\n                    uVar14 = 0;\n                    uVar15 = 0;\n                    uVar16 = 0;\n                    uVar17 = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x15c) != '\\0') {\n                        *(*0x20 + -0x15c) = 0;\n                        LOCK();\n                        iVar4 = *0x75b9b0 + -1;\n                        bVar13 = *0x75b9b0 == 1;\n                        *0x75b9b0 = iVar4;\n                        if ((bVar13 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                            *(*0x20 + -0x108) = *0x789e70;\n                            *(*0x20 + -0x110) = *0x75b9f0;\n                            *(*0x20 + -0x118) = *0x75b9e0;\n                            *(*0x20 + -0x100) = *0x75b9f8;\n                            *(*0x20 + -0x1a8) = 0x416ca5;\n                            uVar6 = *0x75b9e0;\n                            fcn.00433860();\n                            *(*0x20 + -0x1a8) = 0x416cb6;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x416cc7;\n                            fcn.00433e60();\n                            *(*0x20 + -0x1a8) = 0x416cd8;\n                            fcn.00434160();\n                            uVar5 = *(*0x20 + -0x110);\n                            *(*0x20 + -0x1a8) = 0x416cf4;\n                            fcn.00433e60();\n                            *(*0x20 + -0x1a8) = 0x416d05;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x416d12;\n                            fcn.00433e60();\n                            *(*0x20 + -0x1a8) = 0x416d25;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x416d33;\n                            fcn.00433b60(uVar5, uVar6);\n                            *(*0x20 + -0x1a8) = 0x416d45;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x416d4a;\n                            fcn.004338e0();\n                        }\n                    }\n                    if (*0x7899fc < 1) {\ncode_r0x00416db2:\n                        *(*0x20 + -0x1a8) = 0x416dc5;\n                        fcn.00443900(0);\n                        *(*0x20 + -0x1a8) = 0x416dd6;\n                        fcn.00443900(0);\n                        iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                        *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x100) = *0x6b5300 * *0x78c4e0;\n                    *(*0x20 + -0xe8) = 0;\n                    *(*0x20 + -0xe0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0x1a8) = 0x416d89;\n                    fcn.00433860();\n                    uVar8 = (*0x78a190 - *0x789768) / 1000000;\n                    uVar11 = 0x17;\n                    while ((cVar3 = uVar8,  9 < uVar8 || (0x13 < uVar11))) {\n                        uVar8 = uVar8 / 10;\n                        if (0x17 < uVar11) goto code_r0x00417358;\n                        *(*0x20 + (uVar11 - 0xe8)) = cVar3 + uVar8 * -10 + '0';\n                        bVar13 = uVar11 == 0x15;\n                        uVar11 = uVar11 - 1;\n                        if (bVar13) {\n                            *(*0x20 + -0xd4) = 0x2e;\n                            uVar11 = 0x13;\n                        }\n                    }\n                    if (uVar11 < 0x18) {\n                        *(*0x20 + (uVar11 - 0xe8)) = cVar3 + '0';\n                        *(*0x20 + -0x108) = *0x78c4d8;\n                        *(*0x20 + -0x1a8) = 0x416ec5;\n                        uVar5 = fcn.00448f60(-(uVar11 - 0x18));\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x120) = *0x20 + ((uVar11 & uVar11 - 0x18 >> 0x3f) - 0xe8);\n                        *(*0x20 + -0x1a8) = 0x416eda;\n                        fcn.00433860();\n                        *(*0x20 + -0x1a8) = 0x416eeb;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x416ef8;\n                        fcn.00433e60();\n                        *(*0x20 + -0x1a8) = 0x416f09;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x416f1e;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x416f2f;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x416f45;\n                        fcn.00433f60(*(*0x20 + -0x100));\n                        *(*0x20 + -0x1a8) = 0x416f56;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x416f5b;\n                        fcn.004338e0();\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -200) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd0) = *0x78a198;\n                        *(*0x20 + -200) = *0x78a1a0;\n                        *(*0x20 + -0xc0) = *0x78a1a8;\n                        iVar7 = 0;\n                        iVar9 = *0x78a190;\n                        while (iVar7 < 3) {\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x158) = *(*0x20 + iVar7 * 8 + -0xd0);\n                            if (iVar7 != 0) {\n                                *(*0x20 + -0x128) = iVar9;\n                                *(*0x20 + -0x1a8) = 0x417045;\n                                fcn.00433860();\n                                *(*0x20 + -0x1a8) = 0x417056;\n                                fcn.00434160();\n                                *(*0x20 + -0x1a8) = 0x41705b;\n                                fcn.004338e0();\n                            }\n                            *(*0x20 + -0x1a8) = 0x416fc5;\n                            uVar5 = fcn.00418380(0x18);\n                            *(*0x20 + -0x1a8) = 0x416fd8;\n                            uVar6 = fcn.00448f60(0x18);\n                            *(*0x20 + -0x18) = uVar6;\n                            *(*0x20 + -0x120) = uVar5;\n                            *(*0x20 + -0x1a8) = 0x416fed;\n                            fcn.00433860();\n                            *(*0x20 + -0x1a8) = 0x417005;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x41700a;\n                            fcn.004338e0();\n                            iVar9 = *(*0x20 + -0x158);\n                            iVar7 = *(*0x20 + -0x140) + 1;\n                        }\n                        *(*0x20 + -0x1a8) = 0x41706f;\n                        fcn.00433860();\n                        *(*0x20 + -0x1a8) = 0x417085;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x41708a;\n                        fcn.004338e0();\n                        *(*0x20 + -0x58) = 0;\n                        *(*0x20 + -0x50) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x40) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x58) = *(*0x20 + -0x168);\n                        *(*0x20 + -0x50) = *0x789e98;\n                        *(*0x20 + -0x48) = *0x789ea8 + *0x789ea0;\n                        *(*0x20 + -0x40) = *0x789eb0;\n                        *(*0x20 + -0x38) = *(*0x20 + -0x148);\n                        iVar7 = 0;\n                        while (iVar7 < 5) {\n                            *(*0x20 + -0x138) = iVar7;\n                            *(*0x20 + -0x150) = *(*0x20 + iVar7 * 8 + -0x58);\n                            if ((iVar7 == 2) || (iVar7 == 3)) {\n                                *(*0x20 + -0x1a8) = 0x417191;\n                                fcn.00433860();\n                                *(*0x20 + -0x1a8) = 0x4171a5;\n                                fcn.00434160();\n                                *(*0x20 + -0x1a8) = 0x4171aa;\n                                fcn.004338e0();\n                            }\n                            else if (iVar7 != 0) {\n                                *(*0x20 + -0x1a8) = 0x4171c5;\n                                fcn.00433860();\n                                *(*0x20 + -0x1a8) = 0x4171d6;\n                                fcn.00434160();\n                                *(*0x20 + -0x1a8) = 0x4171db;\n                                fcn.004338e0();\n                            }\n                            *(*0x20 + -0x1a8) = 0x417117;\n                            uVar5 = fcn.00418380(0x18);\n                            *(*0x20 + -0x1a8) = 0x41712a;\n                            uVar6 = fcn.00448f60(0x18);\n                            *(*0x20 + -0x18) = uVar6;\n                            *(*0x20 + -0x120) = uVar5;\n                            *(*0x20 + -0x1a8) = 0x41713f;\n                            fcn.00433860();\n                            *(*0x20 + -0x1a8) = 0x417154;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x417159;\n                            fcn.004338e0();\n                            iVar7 = *(*0x20 + -0x138) + 1;\n                        }\n                        *(*0x20 + -0x108) = *0x78a1c0;\n                        *(*0x20 + -0x110) = *0x78a1c8;\n                        *(*0x20 + -0x118) = *0x78a1d0;\n                        *(*0x20 + -0x130) = *0x78a1d8;\n                        *(*0x20 + -0x128) = *0x78a188;\n                        *(*0x20 + -0x1a8) = 0x417234;\n                        fcn.00433860();\n                        *(*0x20 + -0x1a8) = 0x417245;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x417256;\n                        fcn.00433e60();\n                        *(*0x20 + -0x1a8) = 0x417267;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x417278;\n                        fcn.00433e60();\n                        *(*0x20 + -0x1a8) = 0x417289;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x41729a;\n                        fcn.00433e60();\n                        *(*0x20 + -0x1a8) = 0x4172ab;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x4172b9;\n                        fcn.00433e60();\n                        *(*0x20 + -0x1a8) = 0x4172ca;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x4172d4;\n                        fcn.00433f60();\n                        *(*0x20 + -0x1a8) = 0x4172e5;\n                        fcn.00434160();\n                        *(*0x20 + -0x1a8) = 0x4172ea;\n                        fcn.004338e0();\n                        if (*0x78a140 != '\\0') {\n                            *(*0x20 + -0x1a8) = 0x4172f8;\n                            fcn.00433860();\n                            *(*0x20 + -0x1a8) = 0x417309;\n                            fcn.00434160();\n                            *(*0x20 + -0x1a8) = 0x41730e;\n                            fcn.004338e0();\n                        }\n                        *(*0x20 + -0x1a8) = 0x417313;\n                        fcn.00433860();\n                        *(*0x20 + -0x1a8) = 0x417318;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x1a8) = 0x41731d;\n                        fcn.004338e0();\n                        cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                        *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                        if (cVar3 == '\\x01') {\n                            *(*0x20 + -0x1a8) = 0x417349;\n                            fcn.0040a0a0();\n                        }\n                        goto code_r0x00416db2;\n                    }\n                    *(*0x20 + -0x1a8) = 0x417358;\n                    fcn.0045c5a0(0x18);\ncode_r0x00417358:\n                    *(*0x20 + -0x1a8) = 0x417365;\n                    fcn.0045c5a0(0x18);\n                }\n                else {\n                    if (uVar11 < 0x10) {\n                        param_4 = 0;\n                    }\n                    else {\n                        iVar12 = 0x3f;\n                        if (uVar11 != 0) {\n                            for (; uVar11 >> iVar12 == 0; iVar12 = iVar12 + -1) {\n                            }\n                        }\n                        if (uVar11 == 0) {\n                            iVar12 = -1;\n                        }\n                        param_4 = iVar12 + -3;\n                        if (param_4 * 0x10 < 0x2d0) {\n                            param_5 = ~-(iVar12 - 4U < 0x40);\n                            iVar12 = uVar11 >> ((iVar12 - 4U | param_5) & 0x3f);\n                            uVar11 = iVar12 + (((iVar12 >> 0x3f) >> 0x3c) + iVar12 >> 4) * -0x10;\n                        }\n                        else {\n                            param_4 = 0x2c;\n                            uVar11 = 0xf;\n                        }\n                    }\n                    param_4 = param_4 * 0x10;\n                    if (param_4 + uVar11 < 0x2d0) {\n                        piVar2 = (param_4 + uVar11) * 8 + 0x78d958;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00416a41;\n                    }\n                }\n                *(*0x20 + -0x1a8) = 0x41736f;\n                fcn.0045c5c0(0x2d0);\n            }\n            *(*0x20 + -0x1a8) = 0x417385;\n            param_1 = fcn.004320e0();\n        }\n        *(puVar10 + 8) = param_1;\n        *(puVar10 + -8) = 0x417391;\n        fcn.00459ea0();\n        param_1 = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6506
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00418960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418960(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((unaff_EBX < *0x78a108) || (*0x78a10c <= unaff_EBX)) {\n        if ((unaff_EBX < *0x78a10c) || (*0x78a110 <= unaff_EBX)) {\n            puVar3 = *0x789640;\n            if (unaff_EBX == 0) {\n                for (; puVar3 != NULL; puVar3 = *puVar3) {\ncode_r0x00418b2c:\n                    fcn.0041ab40(0x789940);\n                }\n            }\n            else if (unaff_EBX == 1) {\n                fcn.00459d60();\n            }\n            else {\n                if ((unaff_EBX < *0x78a110) || (*0x78a114 <= unaff_EBX)) {\n                    puVar3 = *0x78a114;\n                    if ((*0x78a114 <= unaff_EBX) && (unaff_EBX < *0x78a118)) {\n                        if (unaff_EBX - *0x78a114 < *0x735718) {\n                            iVar4 = *(*0x735710 + (unaff_EBX - *0x78a114) * 8);\n                            if (((*(iVar4 + 0x90) == 4) || (*(iVar4 + 0x90) == 3)) && (*(iVar4 + 0xa8) == 0)) {\n                                *(iVar4 + 0xa8) = *0x78a0d8;\n                            }\n                            fcn.00459d60();\n                            return;\n                        }\n                        fcn.0045c5a0(*0x735718);\n                    }\n                    fcn.004320e0();\n                    goto code_r0x00418b2c;\n                }\n                fcn.00418fa0();\n            }\n        }\n        else {\n            if (*0x734cf0 == NULL) {\n                iVar2 = 0;\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = **0x734cf0;\n                iVar2 = (*0x734cf0)[1];\n            }\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                fcn.00418dc0(*(*(iVar4 + iVar1 * 8) + 0x1f8));\n            }\n        }\n    }\n    else {\n        if (*0x734cf0 == NULL) {\n            iVar2 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = **0x734cf0;\n            iVar2 = (*0x734cf0)[1];\n        }\n        for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n            fcn.00418dc0(*(*(iVar4 + iVar1 * 8) + 0x1e8));\n        }\n    }\n    return;\n}\n",
        "token_count": 754
    },
    "0041a2e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a2e0(ulong arg1)\n\n{\n    uint64_t uVar1;\n    int32_t *arg1_00;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int32_t *piVar5;\n    ulong unaff_RDI;\n    char cVar6;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    int32_t *piVar11;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar4 = *in_RAX;\n    if (iVar4 == 0) {\n        uVar8 = 0;\n        bVar10 = false;\n    }\n    else {\n        uVar8 = in_R8 & 0xffffffffffffff00 | *(iVar4 + 0x28) == '\\x03';\n        bVar10 = *(iVar4 + 0x28) == '\\x05';\n    }\n    cVar6 = uVar8;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar6 == '\\0')) && (!bVar10)) {\n        iVar3 = 0;\n        iVar2 = fcn.004480c0();\n        if (0 < iVar2) {\n            fcn.0041ab40(unaff_RBX);\n        }\n        if (0 < iVar3) {\n            fcn.0041ab40(unaff_RDI);\n        }\n        if ((in_RAX[7] != 0) && (0 < uVar8)) {\n            iVar4 = 0;\n            piVar5 = unaff_RSI;\n            piVar11 = unaff_RSI;\n            while( true ) {\n                iVar9 = in_RAX[7];\n                if (-1 < *piVar5) {\n                    iVar9 = in_RAX[8];\n                }\n                uVar1 = iVar9 + *piVar5;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    arg1_00 = unaff_RSI + iVar4 * 6;\n                    unaff_RSI = piVar11;\n                    fcn.0041ea00(arg1_00);\n                    piVar11 = unaff_RSI;\n                }\n                iVar4 = iVar4 + 1;\n                if (uVar8 <= iVar4) break;\n                piVar5 = piVar5 + 6;\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041b060(0);\n        uVar8 = uVar8 & 0xff;\n    }\n    cVar7 = uVar8;\n    if (in_RAX[9] != 0) {\n        fcn.0041b060(0);\n        cVar7 = cVar6;\n    }\n    if ((cVar7 != '\\0') || (bVar10)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 788
    },
    "0041ace0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ace0(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    int64_t unaff_R14;\n    \ncode_r0x0041ace0:\n    puVar10 = *0x20;\n    if (*0x20 + -0x10 < *(unaff_R14 + 0x10) || *0x20 + -0x10 == *(unaff_R14 + 0x10)) goto code_r0x0041b026;\n    puVar10 = *0x20 + -0x90;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    uVar8 = in_RAX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar8) goto code_r0x0041b016;\n    uVar11 = in_RAX + 0x800000000000 >> 0x16;\n    iVar5 = *(*(uVar8 * 8 + 0x75ba18) + (uVar11 & 0xfffff) * 8);\n    if (iVar5 == 0) {\n        uVar11 = 0;\n        uVar8 = 0;\n        puVar13 = NULL;\n        puVar12 = NULL;\n    }\n    else {\n        puVar12 = iVar5 + (in_RAX >> 5 & 0x1ffff);\n        uVar8 = in_RAX >> 3 & 3;\n        puVar13 = iVar5 + 0x1ffff;\n    }\n    iVar5 = *(iVar5 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n    uVar9 = *(iVar5 + 0x68);\n    if (uVar9 == 0) goto code_r0x0041b005;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_RAX;\n    if (0x20000 < uVar9) {\n        if (*(iVar5 + 0x18) == in_RAX) {\n            if ((*(iVar5 + 0x62) & 1) != 0) {\n                unaff_RBX[2] = unaff_RBX[2] + uVar9;\n                return;\n            }\n            *(*0x20 + -0x50) = iVar5;\n            *(*0x20 + -0x28) = puVar13;\n            *(*0x20 + -0x58) = uVar11;\n            *(*0x20 + -0x60) = uVar8;\n            *(*0x20 + -0x10) = puVar12;\n            uVar9 = in_RAX;\ncode_r0x0041af76:\n            uVar9 = uVar9 + 0x20000;\n            if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar9) goto code_r0x0041af4e;\n            iVar2 = *unaff_RBX;\n            if (iVar2 == 0) {\n                bVar3 = false;\n            }\n            else {\n                uVar4 = *(iVar2 + 0x10);\n                if (uVar4 == 0xfd) {\n                    bVar3 = false;\n                }\n                else {\n                    if (0xfc < uVar4) goto code_r0x0041aff8;\n                    *(iVar2 + 0x18 + uVar4 * 8) = uVar9;\n                    *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                    bVar3 = true;\n                }\n            }\n            if (!bVar3) {\n                *(*0x20 + -0x48) = uVar9;\n                *(*0x20 + -0x98) = 0x41afc5;\n                fcn.00420840();\n                uVar9 = *(*0x20 + -0x48);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + -0x30);\n                uVar11 = *(*0x20 + -0x58);\n                uVar8 = *(*0x20 + -0x60);\n                puVar12 = *(*0x20 + -0x10);\n                iVar5 = *(*0x20 + -0x50);\n                puVar13 = *(*0x20 + -0x28);\n            }\n            goto code_r0x0041af76;\n        }\ncode_r0x0041af4e:\n        uVar9 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n        if (0x20000 < uVar9) {\n            uVar9 = 0x20000;\n        }\n    }\n    *(*0x20 + -0x40) = uVar9;\n    for (uVar4 = 0; uVar4 < uVar9; uVar4 = uVar4 + 8) {\n        uVar1 = *puVar12;\n        uVar6 = uVar8;\n        if (((uVar1 >> (uVar8 & 0x1f)) >> 4 & 1) == 0) break;\n        *(*0x20 + -0x38) = uVar4;\n        if ((((uVar1 >> (uVar6 & 0x1f) & 1) != 0) && (*(uVar4 + in_RAX) != 0)) && (uVar9 <= *(uVar4 + in_RAX) - in_RAX))\n        {\n            *(*0x20 + -0x54) = uVar6;\n            *(*0x20 + -0x18) = puVar12;\n            *(*0x20 + -0x20) = puVar13;\n            *(*0x20 + -0x5c) = uVar11;\n            *(*0x20 + -0x98) = 0x41ae91;\n            iVar5 = fcn.00410200(uVar4);\n            if (iVar5 != 0) {\n                *(*0x20 + -0x98) = 0x41aeb3;\n                fcn.0041b320(*(*0x20 + -0x38), uVar9, uVar4);\n            }\n            uVar4 = *(*0x20 + -0x38);\n            uVar6 = *(*0x20 + -0x54);\n            uVar9 = *(*0x20 + -0x40);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + -0x30);\n            uVar11 = *(*0x20 + -0x5c);\n            puVar12 = *(*0x20 + -0x18);\n            puVar13 = *(*0x20 + -0x20);\n        }\n        if (uVar6 < 3) {\n            uVar8 = uVar6 + 1;\n        }\n        else if (puVar13 == puVar12) {\n            uVar7 = uVar11 & 0xffffffff;\n            *(*0x20 + -0x98) = 0x41af0e;\n            puVar12 = fcn.00410360(uVar11 & 0xffffffff);\n            uVar9 = *(*0x20 + -0x40);\n            in_RAX = *(*0x20 + -0x30);\n            uVar11 = uVar7;\n            uVar8 = uVar6;\n            uVar4 = *(*0x20 + -0x38);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        else {\n            puVar12 = puVar12 + 1;\n            uVar8 = 0;\n        }\n    }\n    unaff_RBX[2] = unaff_RBX[2] + uVar9;\n    unaff_RBX[3] = unaff_RBX[3] + uVar4;\n    return;\ncode_r0x0041aff8:\n    *(*0x20 + -0x98) = 0x41b005;\n    fcn.0045c5a0(0xfd);\ncode_r0x0041b005:\n    unaff_RBX = 0x11;\n    *(*0x20 + -0x98) = 0x41b016;\n    fcn.004320e0();\ncode_r0x0041b016:\n    *(*0x20 + -0x98) = 0x41b025;\n    in_RAX = fcn.0045c5c0(0x40);\ncode_r0x0041b026:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + -8) = 0x41b035;\n    fcn.00459ea0();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    *0x20 = puVar10;\n    goto code_r0x0041ace0;\n}\n",
        "token_count": 2145
    },
    "0041cce0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041cd0b)\n// WARNING: Removing unreachable block (ram,0x0041cd12)\n// WARNING: Removing unreachable block (ram,0x0041cd18)\n\nint64_t fcn.0041cce0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00406b60();\n    iVar1 = fcn.00449a80();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 171
    },
    "0041f7c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041f7c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint8_t **in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x0041f7c0:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar2 = *(unaff_R14 + 0x30);\n        if (((*(piVar2 + 0x1b) != 0) || (*(piVar2 + 0x18) != 0)) || (*piVar2 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xa8) = *0x75b9a8;\n            uVar4 = puVar10[99];\n            *(*0x20 + -0xad) = uVar4;\n            if ((uVar4 == 1) && (*(puVar10 + 0x58) == *0x75b9a8 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x88) = puVar10;\n                *(*0x20 + -0xa4) = *0x75b9a8 - 1;\n                uVar12 = *0x75b9a8;\n                if (*0x73b7b0 != '\\0') {\n                    *(*0x20 + -0xd0) = 0x41f871;\n                    fcn.0044f4a0();\n                    puVar10 = *(*0x20 + -0x88);\n                    uVar12 = *(*0x20 + -0xa8);\n                }\n                LOCK();\n                *0x75b9e0 = *0x75b9e0 + *(puVar10 + 0x20);\n                uVar4 = puVar10[0x62];\n                *(*0x20 + -0xb0) = uVar4;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0x90) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0xa0) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar5 = uVar4;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x004201e5:\n                                uVar18 = 0;\n                                *(*0x20 + -0xd0) = 0x4201f2;\n                                fcn.0045c5c0(0x40);\n                                goto code_r0x004201f2;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x75ba18) + puVar13 * 8);\n                            uVar18 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar18 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd0) = 0x4201e5;\n                                fcn.0045c5c0(0x40);\n                                goto code_r0x004201e5;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar18 & 7));\n                        }\n                        if ((*0x789a20 != 0) || (*0x7899e4 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x789a20 != 0) {\n                                        *(*0x20 + -0x80) = uVar14;\n                                        *(*0x20 + -0x98) = iVar15;\n                                        *(*0x20 + -0xd0) = 0x42011e;\n                                        fcn.00429260();\n                                        uVar14 = *(*0x20 + -0x80);\n                                        puVar10 = *(*0x20 + -0x88);\n                                        uVar8 = *(*0x20 + -0x90);\n                                        iVar15 = *(*0x20 + -0x98);\n                                    }\n                                    if (*0x7899e4 != 0) {\n                                        for (uVar5 = 0; uVar5 < uVar8; uVar5 = uVar5 + 4) {\n                                            *(iVar15 + uVar5) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x0041fb46;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x50) = uVar8;\n                            *(*0x20 + -0xd0) = 0x41fb12;\n                            fcn.00420380();\n                            uVar8 = *(*0x20 + -0x50);\n                            puVar10 = *(*0x20 + -0x88);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x70) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x420072;\n                                    fcn.00420380();\n                                    uVar8 = *(*0x20 + -0x70);\n                                    puVar10 = *(*0x20 + -0x88);\n                                }\n                            }\ncode_r0x0041fb46:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x50) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x60) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x7895ba == '\\0') {\n                                    *(*0x20 + -0x78) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x41fb99;\n                                    iVar17 = fcn.00401d20();\n                                    uVar14 = *(*0x20 + -0x50);\n                                    puVar10 = *(*0x20 + -0x88);\n                                    iVar15 = *(*0x20 + -0x60);\n                                    uVar8 = *(*0x20 + -0x78);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xac) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                if (*0x73b7b0 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x1648) = *(uVar14 + 0x1648) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd0) = 0x41fc36;\n                                uVar7 = fcn.00424380();\n                                uVar14 = *(*0x20 + -0x88);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd0) = 0x41fc49;\n                                fcn.0040fe40();\n                                iVar15 = *(*0x20 + -0x88);\n                                uVar4 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar4;\n                                *(*0x20 + -0xad) = uVar4;\n                                if (uVar4 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xa4)) {\n                                        uVar1 = *(*0x20 + -0xa8);\n                                        if ((uVar12 != uVar1 + 1) && (uVar12 != uVar1 + 3)) {\n                                            puVar10 = uVar1;\n                                            *(iVar15 + 0x58) = uVar1;\n                                            uVar14 = *(*0x20 + -0xb0);\n                                            uVar4 = *(*0x20 + -0xb0) >> 1;\n                                            if (uVar4 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xac) != 0) {\n                                                    if (*0x7899e8 < 1) {\n                                                        *(*0x20 + -0xd0) = 0x41fe26;\n                                                        fcn.004232c0();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd0) = 0x41fe18;\n                                                        fcn.00414700();\n                                                    }\n                                                    *(*0x20 + -0xd0) = 0x41fe32;\n                                                    iVar15 = fcn.0042a900();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar2 = iVar15 + 0x268;\n                                                    iVar15 = *piVar2;\n                                                    *piVar2 = *piVar2 + *(*0x20 + -0x90);\n                                                    *(*0x20 + -0xd0) = 0x41fe5a;\n                                                    fcn.0042aa00(iVar15);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd0) = 0x41fea5;\n                                                    fcn.0042a2a0(uVar14 * 0xc0 + 0x75bd18, (uVar1 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd0) = 0x41fec5;\n                                                fcn.0045c5a0(0x88);\ncode_r0x0041fec5:\n                                                *(*0x20 + -0xd0) = 0x41fed1;\n                                                fcn.0045c5a0(0x88);\ncode_r0x0041fed1:\n                                                *(*0x20 + -0xd0) = 0x41fedd;\n                                                fcn.0045c5a0(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xac) == 0) {\n                                                    cVar3 = *(*0x20 + 0x10);\ncode_r0x0041fd20:\n                                                    if (cVar3 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x60) == 0) {\n                                                        *(*0x20 + -0xd0) = 0x41fdc7;\n                                                        fcn.004232c0();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x60) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd0) = 0x41fdb6;\n                                                            fcn.0042a2a0(uVar14 * 0xc0 + 0x75bcc8, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x0041fec5;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd0) = 0x41fd76;\n                                                        fcn.0042a2a0(uVar14 * 0xc0 + 0x75bd18, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x0041fed1;\n                                                }\n                                                *(*0x20 + -0xae) = uVar4;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd0) = 0x41fcc9;\n                                                iVar15 = fcn.0042a900();\n                                                if (*(*0x20 + -0xae) < 0x44) {\n                                                    piVar2 = iVar15 + *(*0x20 + -0xae) * 8 + 0x278;\n                                                    LOCK();\n                                                    *piVar2 = *piVar2 + *(*0x20 + -0xac);\n                                                    *(*0x20 + -0xd0) = 0x41fd05;\n                                                    fcn.0042aa00();\n                                                    cVar3 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xa8);\n                                                    iVar15 = *(*0x20 + -0x88);\n                                                    uVar14 = *(*0x20 + -0xb0);\n                                                    goto code_r0x0041fd20;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd0) = 0x41feea;\n                                            fcn.0045c5a0(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd0) = 0x41fefb;\n                                        fcn.004320e0();\n                                    }\n                                }\n                                *(*0x20 + -0x58) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd0) = 0x41ff08;\n                                fcn.00433860();\n                                *(*0x20 + -0xd0) = 0x41ff19;\n                                fcn.00434160();\n                                *(*0x20 + -0xd0) = 0x41ff26;\n                                fcn.00433e60();\n                                *(*0x20 + -0xd0) = 0x41ff37;\n                                fcn.00434160();\n                                *(*0x20 + -0xd0) = 0x41ff45;\n                                fcn.00433e60();\n                                *(*0x20 + -0xd0) = 0x41ff56;\n                                fcn.00434160();\n                                *(*0x20 + -0xd0) = 0x41ff5f;\n                                fcn.00433e60();\n                                *(*0x20 + -0xd0) = 0x41ff65;\n                                fcn.00433ac0();\n                                *(*0x20 + -0xd0) = 0x41ff6a;\n                                fcn.004338e0();\n                                *(*0x20 + -0xd0) = 0x41ff7b;\n                                fcn.004320e0();\n                            }\n                            *(*0x20 + -0xaa) = uVar16;\n                            *(*0x20 + -0x50) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd0) = 0x41ff8f;\n                            fcn.00433860();\n                            *(*0x20 + -0xd0) = 0x41ffa5;\n                            fcn.00434160();\n                            *(*0x20 + -0xd0) = 0x41ffaf;\n                            fcn.00433e60();\n                            *(*0x20 + -0xd0) = 0x41ffc5;\n                            fcn.00434160();\n                            *(*0x20 + -0xd0) = 0x41ffd2;\n                            fcn.00433e60();\n                            *(*0x20 + -0xd0) = 0x41ffe5;\n                            fcn.00434160();\n                            *(*0x20 + -0xd0) = 0x41ffef;\n                            fcn.00433e60();\n                            *(*0x20 + -0xd0) = 0x420005;\n                            fcn.00434160();\n                            *(*0x20 + -0xd0) = 0x420012;\n                            fcn.00433e60();\n                            *(*0x20 + -0xd0) = 0x420017;\n                            fcn.00433ac0();\n                            *(*0x20 + -0xd0) = 0x42001c;\n                            fcn.004338e0();\n                            *(*0x20 + -0xd0) = 0x42002d;\n                            fcn.004320e0();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x004202b0;\n                    uVar5 = *(puVar13 + 1) / uVar8;\n                    uVar18 = uVar5 & 7;\n                    puVar9 = (uVar5 >> 3) + *(puVar10 + 0x50);\n                    uVar4 = *puVar9;\n                    uVar12 = uVar4;\n                    if ((uVar4 & 1 << uVar18) == 0) {\n                        uVar5 = uVar5 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar5 <= *(puVar13 + 1)) {\n                                cVar3 = '\\0';\n                                goto code_r0x0041f9c4;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar18 & 0x1f);\n                                cVar3 = '\\x01';\n                                goto code_r0x0041f9c4;\n                            }\ncode_r0x004201f2:\n                            puVar9 = puVar10;\n                        }\n                        cVar3 = '\\0';\ncode_r0x0041f9c4:\n                        *(*0x20 + -0x68) = uVar5;\n                        *(*0x20 + -0xaf) = cVar3;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar5))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar3 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd0) = 0x420285;\n                                fcn.00424240(uVar8);\n                                cVar3 = *(*0x20 + -0xaf);\n                                uVar5 = *(*0x20 + -0x68);\n                                uVar8 = *(*0x20 + -0x90);\n                                uVar14 = *(*0x20 + -0xa0);\n                                unaff_R15 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd0) = 0x41f985;\n                        fcn.00424240(uVar8);\n                        uVar8 = *(*0x20 + -0x90);\n                        uVar14 = *(*0x20 + -0xa0);\n                        puVar10 = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xa8);\n                    uVar4 = *(*0x20 + -0xb0);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x004202b5;\n        }\n        goto code_r0x0042033b;\n    }\n    goto code_r0x0042034d;\ncode_r0x004202b0:\n    *(*0x20 + -0xd0) = 0x4202b5;\n    fcn.0042fa00();\ncode_r0x004202b5:\n    *(*0x20 + -0x58) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd0) = 0x4202c5;\n    fcn.00433860();\n    *(*0x20 + -0xd0) = 0x4202d6;\n    fcn.00434160();\n    *(*0x20 + -0xd0) = 0x4202e5;\n    fcn.00433e60();\n    *(*0x20 + -0xd0) = 0x4202f6;\n    fcn.00434160();\n    *(*0x20 + -0xd0) = 0x420305;\n    fcn.00433e60();\n    *(*0x20 + -0xd0) = 0x420316;\n    fcn.00434160();\n    *(*0x20 + -0xd0) = 0x42031f;\n    fcn.00433e60();\n    *(*0x20 + -0xd0) = 0x420325;\n    fcn.00433ac0();\n    *(*0x20 + -0xd0) = 0x42032a;\n    fcn.004338e0();\n    *(*0x20 + -0xd0) = 0x42033b;\n    fcn.004320e0();\ncode_r0x0042033b:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd0) = 0x42034c;\n    in_RAX = fcn.004320e0();\ncode_r0x0042034d:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x42035b;\n    fcn.00459ea0();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x0041f7c0;\n}\n",
        "token_count": 6252
    },
    "004229e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004229e0(uchar param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    char cVar14;\n    uchar (*pauVar15) [16];\n    uchar uVar16;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar16 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar16;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar15 = NULL;\n                unaff_RBX = 0;\ncode_r0x00422aeb:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar15;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x70) = 0x422b05;\n                fcn.00409e80();\n                iVar7 = *(*0x20 + -0x38);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x70) = 0x422b31;\n                    iVar7 = fcn.00426420();\n                    if (iVar7 != 0) goto code_r0x00422b79;\n                    *(*0x20 + -0x70) = 0x422b45;\n                    cVar5 = fcn.00422fc0();\n                    if (cVar5 == '\\0') {\n                        *(*0x20 + -0x70) = 0x422b55;\n                        fcn.0040a0a0();\n                        return 0;\n                    }\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x70) = 0x422b70;\n                    iVar7 = fcn.00426420();\n                    if (iVar7 != 0) goto code_r0x00422b79;\n                }\n                else {\n                    uVar8 = *(*0x20 + -0x40);\ncode_r0x00422b79:\n                    *(*0x20 + -0x40) = uVar8;\n                    *(*0x20 + -0x38) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x70) = 0x422b97;\n                        iVar7 = fcn.004228e0();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x70) = 0x422bab;\n                    fcn.0040a0a0();\n                    pauVar15 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x40);\ncode_r0x00422bba:\n                    *(*0x20 + -0x48) = pauVar15;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x40) = unaff_RBX;\n                    *pauVar15 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar15[1] = 0;\n                    *(pauVar15[1] + 8) = iVar7;\n                    uVar8 = *(*0x20 + 0x10);\n                    *pauVar15[2] = uVar8;\n                    *pauVar15[6] = 0;\n                    pauVar15[6][2] = 0;\n                    *(pauVar15[6] + 8) = 0;\n                    *(pauVar15[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar15[6][4] = 0;\n                    *pauVar15[3] = 0;\n                    *(pauVar15[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar15[6] + 3;\n                    pauVar15[6][3] = 0;\n                    *(*0x20 + -0x70) = 0x422c29;\n                    cVar5 = fcn.00422780(uVar8);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x48);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    cVar5 = *(*0x20 + 0x18);\n                    if (cVar5 == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00422d06:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x70) = 0x422d1f;\n                            uVar8 = fcn.00424380();\n                            *(*(*0x20 + -0x48) + 0x50) = uVar8;\n                            *(*0x20 + -0x70) = 0x422d31;\n                            uVar8 = fcn.004246a0();\n                            iVar7 = *(*0x20 + -0x48);\n                            *(iVar7 + 0x48) = uVar8;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10128);\n                            **(*0x20 + -0x20) = 1;\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar5 = *(*0x20 + 0x18);\n                            goto code_r0x00422d6c;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x7204a0);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x721a00);\n                                goto code_r0x00422d06;\n                            }\n                            goto code_r0x00422f5a;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x00422d6c:\n                        iVar11 = *(*0x20 + -0x40);\n                        cVar14 = cVar5;\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x70) = 0x422d85;\n                            fcn.004143a0(iVar11, iVar7);\n                            iVar11 = *(*0x20 + -0x40);\n                            LOCK();\n                            *0x78b460 = *0x78b460 - iVar11;\n                            cVar5 = *(*0x20 + 0x18);\n                            iVar7 = *(*0x20 + -0x48);\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar14 = *(*0x20 + 0x18);\n                        }\n                        if (cVar5 == '\\0') {\n                            LOCK();\n                            *0x78b458 = *0x78b458 + uVar12;\n                        }\n                        if (cVar5 != '\\0' || cVar14 != '\\0') {\n                            *(*0x20 + -0x70) = 0x422ded;\n                            fcn.0042a840(iVar11, iVar7);\n                        }\n                        *(*0x20 + -0x70) = 0x422df9;\n                        piVar9 = fcn.0042a900();\n                        iVar7 = *(*0x20 + -0x40);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x70) = 0x422e6e;\n                        fcn.0042aa00(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        *(*0x20 + -0x70) = 0x422e86;\n                        fcn.00422680(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x00422f28:\n                            *(*0x20 + -0x70) = 0x422f2d;\n                            fcn.0045bca0();\n                            return *(*0x20 + -0x48);\n                        }\n                        uVar12 = *(*(*0x20 + -0x48) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x75ba18) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10158) = *(*(*0x20 + 8) + 0x10158) + *(*0x20 + 0x10);\n                            goto code_r0x00422f28;\n                        }\n                        *(*0x20 + -0x70) = 0x422f5a;\n                        fcn.0045c5c0(0x40);\ncode_r0x00422f5a:\n                        *(*0x20 + -0x70) = 0x422f5f;\n                        fcn.0042fa00();\n                    }\n                    *(*0x20 + -0x70) = 0x422f6c;\n                    fcn.0045c5a0(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x70) = 0x422f7d;\n                fcn.004320e0();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x70) = 0x422a47;\n                    fcn.00409e80();\n                    uVar8 = *(*0x20 + 8);\n                    *(*0x20 + -0x70) = 0x422a55;\n                    uVar6 = fcn.004275c0();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = uVar8;\n                    *(*0x20 + -0x70) = 0x422a72;\n                    fcn.0040a0a0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x70) = 0x422a85;\n                iVar7 = fcn.004271a0();\n                if (iVar7 == 0) {\n                    pauVar15 = NULL;\n                    goto code_r0x00422aeb;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0x1228),  iVar4 == 0)) {\n                    pauVar15 = NULL;\ncode_r0x00422aca:\n                    if (pauVar15 == NULL) goto code_r0x00422aeb;\n                    goto code_r0x00422bba;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar15 = *(iVar11 + 0x1228 + iVar4 * 8);\n                    *(iVar11 + 0x1228) = unaff_RDI;\n                    goto code_r0x00422aca;\n                }\n            }\n            uVar16 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x70) = 0x422f8a;\n            in_RAX = fcn.0045c5a0(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar16;\n        *(puVar13 + -8) = 0x422fa5;\n        fcn.0045e5a0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3896
    },
    "00423440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423440(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1_00;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10128) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10158) = *(in_RAX + 0x10158) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x75ba18) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00423536:\n                        iVar6 = *(unaff_RBX + 0x20);\n                        if (arg1 == '\\0') {\n                            LOCK();\n                            *0x78b458 = *0x78b458 + iVar6 * -0x2000;\n                        }\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x2b) = arg1;\n                        *(*0x20 + -0x10) = iVar6 * 0x2000;\n                        if (arg1 != '\\0') {\n                            *(*0x20 + -0x50) = 0x42357f;\n                            fcn.0042a840();\n                        }\n                        *(*0x20 + -0x50) = 0x42358b;\n                        iVar6 = fcn.0042a900();\n                        uVar3 = *(*0x20 + -0x2b);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x50) = 0x4235ed;\n                        fcn.0042aa00(uVar7);\n                        arg1_00 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x50) = 0x423611;\n                        fcn.004266e0(arg1_00);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x00423654:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a70) = *(iVar6 + 0x16a70) - *(iVar6 + 0x16a40);\n                            *puVar5 = *(iVar6 + 0x16a58);\n                            *(iVar6 + 0x16a58) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0x1228);\n                        if (0x7f < uVar7) goto code_r0x00423654;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0x1230 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0x1228) = *(iVar6 + 0x1228) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x50) = 0x423693;\n                        fcn.0045c5a0(0x80);\n                        goto code_r0x00423693;\n                    }\n                    goto code_r0x004236b6;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00423536;\ncode_r0x00423693:\n                    *(*0x20 + -0x50) = 0x4236a5;\n                    fcn.004320e0();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x50) = 0x4236b6;\n                fcn.004320e0();\ncode_r0x004236b6:\n                *(*0x20 + -0x50) = 0x4236c5;\n                in_RAX = fcn.0045c5c0(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10128);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x50) = 0x4236e6;\n            fcn.00433860();\n            arg1._0_1_ = uVar7;\n            *(*0x20 + -0x50) = 0x4236f7;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x423705;\n            fcn.00434120();\n            *(*0x20 + -0x50) = 0x423716;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x423725;\n            fcn.00433fc0();\n            *(*0x20 + -0x50) = 0x423736;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x423745;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x423756;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x423765;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x423776;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x423785;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x42378a;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x42378f;\n            fcn.004338e0();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x4237a5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = arg1;\n        *(puVar8 + -8) = 0x4237b9;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_1_ = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2167
    },
    "00424240": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424240(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4242f0;\n                fcn.004148a0(uVar2);\n                *(*0x20 + -0x38) = 0x4242fe;\n                fcn.00409e80();\n                *0x762380 = *0x762380 - *0x762350;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x762368;\n                *(*0x20 + -0x38) = 0x424338;\n                *0x762368 = puVar3;\n                fcn.0040a0a0();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x42428c;\n                fcn.00428c00(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x42429a;\n                fcn.00409e80();\n                *0x7623c8 = *0x7623c8 - *0x762398;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x7623b0;\n                *(*0x20 + -0x38) = 0x4242d3;\n                *0x7623b0 = puVar3;\n                fcn.0040a0a0();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x424353;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x424368;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 764
    },
    "00428440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00428440(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42848d;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x428498;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 302
    },
    "004284a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.004284a0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = in_R8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = unaff_RDI;\n            if (*0x734cb8 == 0) {\n                *(*0x20 + -0x68) = 0x4284f7;\n                iVar2 = fcn.00414140();\n                if (*0x789810 != 0) {\n                    unaff_RDI = 0x734cb8;\n                    *(*0x20 + -0x68) = 0x428517;\n                    fcn.0045c100(arg1, in_RDX, in_R8, in_R9);\n                    iVar2 = *0x734cb8;\n                }\n                *0x734cb8 = iVar2;\n                if (*0x734cb8 != 0) {\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    in_R8 = *(*0x20 + 0x30);\n                    goto code_r0x0042854b;\n                }\n            }\n            else {\ncode_r0x0042854b:\n                uVar3 = 0;\n                for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                    uVar3 = (*(arg1 + iVar2 * 8) + uVar3) * 0x401;\n                    uVar3 = uVar3 >> 6 ^ uVar3;\n                }\n                uVar3 = (uVar3 + unaff_RBX) * 0x401;\n                in_R9 = (uVar3 >> 6 ^ uVar3) * 9;\n                in_R9 = in_R9 >> 0xb ^ in_R9;\n                in_RDX = in_R9 / 179999;\n                uVar3 = in_R9 % 179999;\n                if (uVar3 < 179999) {\n                    *(*0x20 + -0x30) = in_R9;\n                    *(*0x20 + -0x18) = uVar3;\n                    for (puVar4 = *(*0x734cb8 + uVar3 * 8); puVar4 != NULL; puVar4 = *puVar4) {\n                        if (((puVar4[2] == in_RAX) && (puVar4[3] == in_R9)) && (puVar4[4] == unaff_RBX)) {\n                            in_RDX = puVar4[5];\n                            if (0x20 < in_RDX) goto code_r0x0042877d;\n                            *(*0x20 + -0x20) = puVar4;\n                            *(*0x20 + -0x68) = 0x428632;\n                            cVar1 = fcn.00428800(in_RDX);\n                            if (cVar1 != '\\0') {\n                                return *(*0x20 + -0x20);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + 0x30);\n                            in_R9 = *(*0x20 + -0x30);\n                            puVar4 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                    if (in_R8 == '\\0') {\n                        return NULL;\n                    }\n                    *(*0x20 + -0x68) = 0x428694;\n                    puVar4 = fcn.00428320();\n                    in_RDX = puVar4[5];\n                    if (in_RDX < 0x21) {\n                        if (*(*0x20 + -0x10) < in_RDX) {\n                            in_RDX = *(*0x20 + -0x10);\n                        }\n                        if (*(*0x20 + 0x18) != puVar4 + 6) {\n                            *(*0x20 + -0x28) = puVar4;\n                            *(*0x20 + -0x68) = 0x4286d9;\n                            fcn.0045cee0(in_RDX << 3);\n                            puVar4 = *(*0x20 + -0x28);\n                        }\n                        puVar4[3] = *(*0x20 + -0x30);\n                        puVar4[4] = *(*0x20 + 0x10);\n                        iVar2 = *(*0x20 + -0x18);\n                        *puVar4 = *(*0x734cb8 + iVar2 * 8);\n                        *(*0x734cb8 + iVar2 * 8) = puVar4;\n                        if (*(*0x20 + 8) == 1) {\n                            puVar4[1] = *0x7896e8;\n                            *0x7896e8 = puVar4;\n                        }\n                        else if (*(*0x20 + 8) == 3) {\n                            puVar4[1] = *0x7897b0;\n                            *0x7897b0 = puVar4;\n                        }\n                        else {\n                            puVar4[1] = *0x789660;\n                            *0x789660 = puVar4;\n                        }\n                        return puVar4;\n                    }\n                    *(*0x20 + -0x68) = 0x42877d;\n                    fcn.0045c6c0(arg1, in_RDX);\ncode_r0x0042877d:\n                    *(*0x20 + -0x68) = 0x428787;\n                    fcn.0045c6c0(arg1, in_RDX);\n                }\n                arg1 = 179999;\n                *(*0x20 + -0x68) = 0x428791;\n                fcn.0045c5a0(179999);\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x68) = 0x4287a5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8;\n        *(puVar5 + -8) = 0x4287c9;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8 = puVar5[0x30];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1912
    },
    "0042a900": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042a900(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (iVar3 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x42a959;\n                fcn.00409e80(in_RAX + 0xde8);\n                in_RAX = *(*0x20 + 8);\ncode_r0x0042a95e:\n                uVar4 = *(in_RAX + 0xde0) % 3;\n                if (uVar4 < 3) {\n                    return in_RAX + uVar4 * 0x4a0;\n                }\n                *(*0x20 + -0x28) = 0x42a99e;\n                fcn.0045c5a0(3);\n            }\n            else {\n                LOCK();\n                piVar1 = iVar3 + 0x26d4;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + 1;\n                uVar4 = iVar2 + 1;\n                if ((uVar4 & 1) != 0) goto code_r0x0042a95e;\n            }\n            *(*0x20 + -0xc) = uVar4;\n            *(*0x20 + -0x28) = 0x42a9a7;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x42a9b8;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x42a9c5;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x42a9ca;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x42a9cf;\n            fcn.004338e0();\n            *(*0x20 + -0x28) = 0x42a9e5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42a9f0;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 711
    },
    "0042c860": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c860(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x734c70;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42c8be;\n            fcn.0042e7a0();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42c905;\n            iVar3 = fcn.0042e640();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42c930;\n            fcn.0042d0a0(0x21);\n            uVar5 = *0x789788;\n            if (*0x789788 < 0x106) {\n                *(*0x20 + -0x18) = *0x789788;\n                *(*0x20 + -0x78) = 0x42c965;\n                fcn.0045cee0(*0x789788);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042cae5;\n                    *(uVar5 + 0x78a3e0) = *((*(iVar4 + 0x78a5ca) >> 4) + 0x4aea49);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042cad5;\n                    *(uVar5 + 0x78a3e1) = *((*(iVar4 + 0x78a5ca) & 0xf) + 0x4aea49);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x78a3e0;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42ca53;\n                        fcn.0042e9a0();\n                        *(*0x20 + -0x78) = 0x42ca6c;\n                        fcn.0045da20();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x7895a4 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42ca97;\n                        fcn.00433860();\n                        *(*0x20 + -0x78) = 0x42caa8;\n                        fcn.00434160();\n                        *(*0x20 + -0x78) = 0x42caad;\n                        fcn.004338e0();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x78a3e0) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42cad5;\n                fcn.0045c5a0(0x20b);\ncode_r0x0042cad5:\n                *(*0x20 + -0x78) = 0x42cae5;\n                fcn.0045c5a0(0x20b);\ncode_r0x0042cae5:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42caf2;\n                fcn.0045c5a0(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42cafc;\n            fcn.0045c600(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42cb05;\n        fcn.00459ea0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1536
    },
    "00432aa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00432aa0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00432aa0:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar8 == 0) || (*(iVar8 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar5) {\n                                    bVar11 = *(iVar5 + 800) == iVar6;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x432bb8;\n                                cVar2 = fcn.004362c0(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar5 = *(*0x20 + -0x20);\n                                    iVar6 = *(*0x20 + -0x50);\n                                    iVar4 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + 8);\n                                    *(iVar8 + 0xb1) = 0x101;\n                                    *(iVar8 + 0x10) = 0xfffffffffffffade;\n                                    iVar8 = *(iVar8 + 0x30);\n                                    *(*0x20 + -0x10) = iVar8;\n                                    iVar6 = *(iVar8 + 800);\n                                    *(*0x20 + -0x4c) = iVar6;\n                                    if (*(*0x20 + -0x20) == iVar8) {\n                                        bVar11 = iVar6 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x432c25;\n                                    fcn.00435f00(2);\n                                    if ((*0x789a18 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x432c3d;\n                                        fcn.0045de80();\n                                        iVar4 = *(*0x20 + -0x38);\n                                        if (iVar4 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x432c6e;\n                                            fcn.0042eca0();\n                                            iVar4 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    iVar6 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00432d90;\n                        }\n                        if (uVar10 < 3) goto code_r0x00432cfa;\n                    }\ncode_r0x00432d52:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x432d66;\n                    cVar2 = fcn.004362c0(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar6 = *(*0x20 + -0x50);\n                    iVar4 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x432d1a;\n                            cVar2 = fcn.00436860(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x00432d52;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar5 = *(*0x20 + -0x20);\n                            iVar6 = *(*0x20 + -0x50);\n                            iVar4 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x00432cfa:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00432eb5;\n                        }\n                    }\n                }\ncode_r0x00432d90:\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x432dac;\n                    fcn.0045de80();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x432dd5;\n                fcn.0045de80();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x432e05;\n                    fcn.0045bc80();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x69e5a0;\n                    *(*0x20 + -0x78) = 0x432e36;\n                    fcn.00459d60();\n                    *(*0x20 + -0x78) = 0x432e4f;\n                    fcn.0045de80();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x50);\n                iVar5 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x00432fcb;\n    }\n    goto code_r0x00432fdd;\ncode_r0x00432eb5:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x58) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x432ed5;\n    fcn.00433860();\n    *(*0x20 + -0x78) = 0x432ee6;\n    fcn.00434160();\n    *(*0x20 + -0x78) = 0x432ef0;\n    fcn.004340e0();\n    *(*0x20 + -0x78) = 0x432f05;\n    fcn.00434160();\n    *(*0x20 + -0x78) = 0x432f0f;\n    fcn.00433f60();\n    *(*0x20 + -0x78) = 0x432f25;\n    fcn.00434160();\n    *(*0x20 + -0x78) = 0x432f30;\n    fcn.00433e60();\n    *(*0x20 + -0x78) = 0x432f35;\n    fcn.00433ac0();\n    *(*0x20 + -0x78) = 0x432f3a;\n    fcn.004338e0();\n    *(*0x20 + -0x54) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x432f5a;\n    fcn.00433860();\n    *(*0x20 + -0x78) = 0x432f6b;\n    fcn.00434160();\n    *(*0x20 + -0x78) = 0x432f75;\n    fcn.004340e0();\n    *(*0x20 + -0x78) = 0x432f86;\n    fcn.00434160();\n    *(*0x20 + -0x78) = 0x432f90;\n    fcn.00433f60();\n    *(*0x20 + -0x78) = 0x432fa5;\n    fcn.00434160();\n    *(*0x20 + -0x78) = 0x432fb0;\n    fcn.00433e60();\n    *(*0x20 + -0x78) = 0x432fb5;\n    fcn.00433ac0();\n    *(*0x20 + -0x78) = 0x432fba;\n    fcn.004338e0();\n    *(*0x20 + -0x78) = 0x432fcb;\n    fcn.004320e0();\ncode_r0x00432fcb:\n    *(*0x20 + -0x78) = 0x432fdc;\n    in_RAX = fcn.004320e0();\ncode_r0x00432fdd:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x432fe7;\n    fcn.0045e5a0();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00432aa0;\n}\n",
        "token_count": 3012
    },
    "00433320": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00433320(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x71d270)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x4333c7;\n            iVar4 = fcn.0044a780();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = iVar4;\n            *(*0x20 + -0x78) = 0x4333e9;\n            iVar3 = fcn.0044b600(0);\n            if (iVar3 != -1) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x20) = iVar4 + 0x2b;\n            if (*(iVar4 + 0x2b) < 2) {\n                iVar4 = 0;\n            }\n            else {\n                iVar7 = iVar4 + 0x2b + *(iVar4 + 0x20) * 4 + 1;\n                if ((iVar7 >> 2 & 1) != 0) {\n                    if ((iVar4 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x78) = 0x43343a;\n                        fcn.00433860();\n                        *(*0x20 + -0x78) = 0x43344b;\n                        fcn.00434160();\n                        *(*0x20 + -0x78) = 0x433455;\n                        fcn.004340e0();\n                        *(*0x20 + -0x78) = 0x43345a;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x78) = 0x43345f;\n                        fcn.004338e0();\n                        iVar7 = *(*0x20 + -0x38);\n                    }\n                    iVar7 = iVar7 + 4;\n                }\n                iVar4 = *(iVar7 + 8);\n            }\n            if ((iVar4 == 0) || (iVar4 == 0x6b5368)) {\n                return 0;\n            }\n            iVar7 = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x4334a6;\n            uVar5 = fcn.0044ae60();\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x48) = iVar7;\n            iVar4 = *(*0x20 + -0x18);\n            if (*(iVar4 + 0x2b) < 4) {\n                iVar4 = 0;\n            }\n            else {\n                iVar8 = *(*0x20 + -0x20) + *(iVar4 + 0x20) * 4 + 1;\n                if ((iVar8 >> 2 & 1) != 0) {\n                    if ((iVar4 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x40) = iVar8;\n                        *(*0x20 + -0x78) = 0x4334ef;\n                        fcn.00433860(iVar4, iVar8, iVar4);\n                        *(*0x20 + -0x78) = 0x433505;\n                        fcn.00434160();\n                        *(*0x20 + -0x78) = 0x43350f;\n                        fcn.004340e0();\n                        *(*0x20 + -0x78) = 0x433514;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x78) = 0x433519;\n                        fcn.004338e0();\n                        uVar5 = *(*0x20 + -0x28);\n                        iVar8 = *(*0x20 + -0x40);\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                    iVar8 = iVar8 + 4;\n                }\n                iVar4 = *(iVar8 + 0x18);\n            }\n            if (iVar4 == 0) goto code_r0x004335a0;\n            *(*0x20 + -0x30) = iVar4;\n            unaff_RBX = *(*0x20 + -0x10);\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x433565;\n            iVar3 = fcn.0044b560(2);\n            if (iVar3 < 0) {\n                iVar7 = *(*0x20 + -0x48);\n                uVar5 = *(*0x20 + -0x28);\n                goto code_r0x004335a0;\n            }\n            uVar6 = iVar3;\n            if (uVar6 < 0x100000) {\n                iVar4 = uVar6 * 5;\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + uVar6 * 0x14);\n                iVar7 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x433594;\n                uVar5 = fcn.0044afc0(uVar1);\ncode_r0x004335a0:\n                *(*0x20 + -0x48) = iVar7;\n                *(*0x20 + -0x28) = uVar5;\n                if (iVar7 < 8) {\n                    cVar2 = '\\0';\n                }\n                else {\n                    *(*0x20 + -0x78) = 0x4335c5;\n                    cVar2 = fcn.004025e0(8, iVar4);\n                    iVar7 = *(*0x20 + -0x48);\n                }\n                if (cVar2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x4335fb;\n                        cVar2 = fcn.004025e0(0x11, iVar4);\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 == '\\0') {\n                    if (iVar7 < 8) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x433626;\n                        cVar2 = fcn.004025e0(8, iVar4);\n                    }\n                    if (cVar2 == '\\0') {\n                        return 1;\n                    }\n                }\n                return 0;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x43369f;\n            in_RAX = fcn.0045c5a0(0x100000);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x4336b9;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2092
    },
    "00435f00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00435f00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x435f6b;\n                fcn.00433860();\n                *(*0x20 + -0x48) = 0x435f7c;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x435f86;\n                fcn.004340e0();\n                *(*0x20 + -0x48) = 0x435f97;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x435fa5;\n                fcn.00433fc0();\n                *(*0x20 + -0x48) = 0x435fb6;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x435fc5;\n                fcn.00433fc0();\n                *(*0x20 + -0x48) = 0x435fca;\n                fcn.00433ac0();\n                *(*0x20 + -0x48) = 0x435fcf;\n                fcn.004338e0();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x435ff5;\n                fcn.00433860();\n                *(*0x20 + -0x48) = 0x436006;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x436010;\n                fcn.004340e0();\n                *(*0x20 + -0x48) = 0x436025;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x43602f;\n                fcn.00433f60();\n                *(*0x20 + -0x48) = 0x436045;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x436050;\n                fcn.00433e60();\n                *(*0x20 + -0x48) = 0x436055;\n                fcn.00433ac0();\n                *(*0x20 + -0x48) = 0x43605a;\n                fcn.004338e0();\n                *(*0x20 + -0x2c) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x43607a;\n                fcn.00433860();\n                *(*0x20 + -0x48) = 0x43608b;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x436095;\n                fcn.004340e0();\n                *(*0x20 + -0x48) = 0x4360a6;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x4360b0;\n                fcn.00433f60();\n                *(*0x20 + -0x48) = 0x4360c5;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x4360d0;\n                fcn.00433e60();\n                *(*0x20 + -0x48) = 0x4360d5;\n                fcn.00433ac0();\n                *(*0x20 + -0x48) = 0x4360da;\n                fcn.004338e0();\n                *(*0x20 + -0x48) = 0x4360eb;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x48) = 0x4360f0;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x436105;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43610f;\n            fcn.004340e0();\n            *(*0x20 + -0x48) = 0x436125;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x436130;\n            fcn.00433fc0();\n            *(*0x20 + -0x48) = 0x436145;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x436150;\n            fcn.00433fc0();\n            *(*0x20 + -0x48) = 0x436155;\n            fcn.00433ac0();\n            *(*0x20 + -0x48) = 0x43615a;\n            fcn.004338e0();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x28) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x436185;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x436196;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x4361a5;\n            fcn.004340e0();\n            *(*0x20 + -0x48) = 0x4361b6;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x4361c5;\n            fcn.00433f60();\n            *(*0x20 + -0x48) = 0x4361d6;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x4361e5;\n            fcn.00433e60();\n            *(*0x20 + -0x48) = 0x4361ea;\n            fcn.00433ac0();\n            *(*0x20 + -0x48) = 0x4361ef;\n            fcn.004338e0();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x43620f;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x436225;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43622f;\n            fcn.004340e0();\n            *(*0x20 + -0x48) = 0x436245;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43624f;\n            fcn.00433f60();\n            *(*0x20 + -0x48) = 0x436265;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x436270;\n            fcn.00433e60();\n            *(*0x20 + -0x48) = 0x436275;\n            fcn.00433ac0();\n            *(*0x20 + -0x48) = 0x43627a;\n            fcn.004338e0();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x43628b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43629e;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2260
    },
    "004362c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004362c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                bVar2 = unaff_EBX == *(in_RAX + 0x90);\n                if (bVar2) {\n                    *(in_RAX + 0x90) = arg1;\n                }\n                return arg1 & 0xffffff00 | bVar2;\n            }\n            *(*0x20 + -0x20) = 0x436313;\n            fcn.00433860();\n            *(*0x20 + -0x20) = 0x436325;\n            fcn.00434160();\n            *(*0x20 + -0x20) = 0x436330;\n            fcn.00433fc0();\n            *(*0x20 + -0x20) = 0x436345;\n            fcn.00434160();\n            *(*0x20 + -0x20) = 0x436350;\n            fcn.00433fc0();\n            *(*0x20 + -0x20) = 0x436355;\n            fcn.00433ac0();\n            *(*0x20 + -0x20) = 0x43635a;\n            fcn.004338e0();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x43636b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43637e;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 655
    },
    "00439a80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00439a80(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint32_t uVar11;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar5;\n            iVar4 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar4) {\n                    return 0;\n                }\n                iVar2 = *(unaff_R14 + 0x30);\n                uVar11 = *(iVar2 + 0xf0);\n                uVar1 = *(iVar2 + 0xf4);\n                *(iVar2 + 0xf0) = uVar1;\n                uVar11 = uVar11 << 0x11 ^ uVar11;\n                uVar11 = uVar1 >> 0x10 ^ uVar11 >> 7 ^ uVar1 ^ uVar11;\n                *(iVar2 + 0xf4) = uVar11;\n                uVar11 = uVar11 + uVar1;\n                if (*0x735860 == 0) goto code_r0x00439dca;\n                if (*0x735870 == 0) goto code_r0x00439dc5;\n                uVar6 = uVar11 % (*0x735870 & 0xffffffff);\n                arg1_01 = *0x735870;\n                if (*0x735870 <= uVar6) break;\n                *(*0x20 + -0x50) = iVar4;\n                uVar1 = *(*0x735868 + uVar6 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x735860;\n                *(*0x20 + -0x20) = uVar11 % *0x735860;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar6 = uVar1 & 0xffffff00 | iVar4 == 3;\n                *(*0x20 + -0x5b) = iVar4 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x7361e0 != 0) {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x20);\n                    arg1 = *0x735738;\n                    if (*0x735738 <= uVar11) {\ncode_r0x00439db5:\n                        *(*0x20 + -0x80) = 0x439dbd;\n                        fcn.0045c5a0(arg1);\n                        goto code_r0x00439dbd;\n                    }\n                    arg1 = *(*0x735730 + uVar11 * 8);\n                    arg1_00 = *0x735730;\n                    if (uVar5 != arg1) {\n                        if (iVar4 != 3) {\n                            bVar12 = false;\ncode_r0x00439c2d:\n                            if (bVar12) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x439c50;\n                                iVar2 = fcn.0043a960();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x00439c6c:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x00439c6c;\n                                }\n                                if (iVar4 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar2;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x439c8e;\n                                    iVar4 = fcn.00440580();\n                                    if (iVar4 != 0) {\n                                        return iVar4;\n                                    }\n                                    iVar2 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar6 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x10);\n                                iVar4 = *(*0x20 + -0x50);\n                                in_RAX = iVar2;\n                            }\n                            uVar3 = *(*0x20 + -0x20) >> 5;\n                            arg1_00 = *0x735798;\n                            arg1_01 = *0x735790;\n                            if (uVar3 < *0x735798) {\n                                uVar11 = *(*0x735790 + uVar3 * 4);\n                                arg1_00 = uVar11;\n                                if ((uVar11 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x439d12;\n                                    iVar4 = fcn.00440900(uVar6);\n                                    if (iVar4 != 0) {\n                                        return iVar4;\n                                    }\n                                    iVar4 = *(*0x20 + -0x50);\n                                    uVar6 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x00439d35;\n                            }\n                            goto code_r0x00439da5;\n                        }\n                        arg1_00 = *0x7357d8;\n                        arg1_01 = *0x7357d0;\n                        if (uVar11 >> 5 < *0x7357d8) {\n                            bVar12 = (*(*0x7357d0 + (uVar11 >> 5) * 4) >> (uVar11 & 0x1f) & 1) != 0;\n                            goto code_r0x00439c2d;\n                        }\ncode_r0x00439dad:\n                        *(*0x20 + -0x80) = 0x439db5;\n                        fcn.0045c5a0(arg1_00);\n                        goto code_r0x00439db5;\n                    }\ncode_r0x00439d35:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar11 = *(*0x20 + -0x24);\n                    arg1 = uVar11;\n                    if (uVar11 == 0) {\n                        *(*0x20 + -0x80) = 0x439da5;\n                        fcn.0042fa00();\ncode_r0x00439da5:\n                        *(*0x20 + -0x80) = 0x439dad;\n                        fcn.0045c5a0(arg1_00);\n                        goto code_r0x00439dad;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar11;\n                }\n                iVar4 = iVar4 + 1;\n            }\ncode_r0x00439dbd:\n            *(*0x20 + -0x80) = 0x439dc5;\n            fcn.0045c5a0(arg1_01);\ncode_r0x00439dc5:\n            *(*0x20 + -0x80) = 0x439dca;\n            fcn.0042fa00();\ncode_r0x00439dca:\n            *(*0x20 + -0x80) = 0x439dcf;\n            in_RAX = fcn.0042fa00();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x439dda;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2191
    },
    "00444e60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00444f38)\n\nulong fcn.00444e60(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x7899bc + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x789994) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x789988);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x789988;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x7899bc = *0x7899bc + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\ncode_r0x00444f16:\n                while (*0x7899b8 < 2) {\n                    if (*0x7899b8 == 0) {\n                        LOCK();\n                        *0x7899b8 = 2;\n                        goto code_r0x00444f96;\n                    }\n                    LOCK();\n                    if (*0x7899b8 == 1) {\n                        *0x7899b8 = 0;\n                        *(*0x20 + -0x20) = 0x444f8f;\n                        fcn.0040a180();\ncode_r0x00444f96:\n                        LOCK();\n                        *0x7899bc = *0x7899bc + -1;\n                        return 1;\n                    }\n                }\n                if (*0x7899b8 == 2) goto code_r0x00444f96;\n                if (*0x7899b8 == 3) {\n                    *(*0x20 + -0x20) = 0x444f75;\n                    fcn.004381a0();\n                    goto code_r0x00444f16;\n                }\n                *(*0x20 + -0x20) = 0x444fbf;\n                fcn.004320e0();\n                iVar3 = *0x7899bc;\n            }\n            *0x7899bc = iVar3;\n            *(*0x20 + -0x20) = 0x444fc9;\n            in_EAX = fcn.0045c5a0(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x444fd3;\n        fcn.00459ea0();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 829
    },
    "0044c9e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0044c9e0(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t *in_RAX;\n    int32_t iVar9;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x44ce96;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x44cea7;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + 0x38) = arg4;\n        *(puVar10 + -8) = 0x44ced0;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        arg4 = *(puVar10 + 0x38);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044ca3c:\n    while( true ) {\n        while (uVar3 = *(in_RAX + 8),  3 < uVar3) {\n            if (uVar3 < 6) {\n                if (uVar3 != 4) goto code_r0x0044cac9;\n                goto code_r0x0044cbaa;\n            }\n            if (uVar3 == 6) {\n                *(*0x20 + -0x40) = 0x69e5a0;\n                *(*0x20 + -0x48) = 0x44cc45;\n                fcn.00459d60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                if (uVar3 < 9) goto code_r0x0044cb3a;\n                if (uVar3 == 9) goto code_r0x0044cbaa;\n                *(*0x20 + -0x48) = 0x44cc05;\n                fcn.0044e2e0();\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (1 < uVar3) break;\n        if (uVar3 == 0) {\ncode_r0x0044cac9:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\x01';\n                arg2 = 0;\n                goto code_r0x0044ccb2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        else {\ncode_r0x0044cb3a:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\0';\n                arg2 = 1;\n                goto code_r0x0044ccb2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n    }\n    if (uVar3 == 2) {\ncode_r0x0044cbaa:\n        *(*0x20 + -0x40) = 0x69e5a0;\n        *(*0x20 + -0x48) = 0x44cbba;\n        fcn.00459d60();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044ca3c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar11 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (uVar3 != *(in_RAX + 8)) {\n        iVar9 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044ca3c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x26fc) = *(*in_RAX + 0x26fc) + -1;\n    cVar8 = '\\0';\n    arg2 = 0;\ncode_r0x0044ccb2:\n    in_RAX[2] = arg1;\n    if (*0x789810 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x44ccda;\n        cVar8 = fcn.0045c220(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x789810 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x44ccf9;\n        cVar8 = fcn.0045c280(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar11;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar8 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar9 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar9 = 7;\n        }\n        iVar5 = *in_RAX;\n        if (iVar9 == 7) {\n            do {\n                uVar6 = *(iVar5 + 0x1670);\n                if ((uVar6 != 0) && (uVar6 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar5 + 0x1670;\n                uVar7 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar6 == uVar7) * (*puVar2 ^ unaff_RBX);\n            } while (uVar6 != uVar7);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar9;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar9;\n            *(*0x20 + -0x48) = 0x44cdf4;\n            fcn.0044e2e0();\n            iVar9 = *(*0x20 + -0x2c);\n            iVar11 = *(*0x20 + -0x28);\n        }\n        iVar4 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar4 + -1;\n        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar9 == 7) {\n            *(*0x20 + -0x48) = 0x44ce46;\n            fcn.0043a160();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar11;\n        *(*0x20 + -0x20) = iVar11 + 0x26d8;\n        *(*0x20 + -0x48) = 0x44cd59;\n        fcn.00409e80();\n        *(*0x20 + -0x48) = 0x44cd68;\n        fcn.0044c1e0();\n        *(*0x20 + -0x48) = 0x44cd74;\n        fcn.0040a0a0();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x44cd94;\n            fcn.0044e2e0();\n        }\n        iVar9 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x44cdca;\n        fcn.0043a160();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3125
    },
    "0044cf00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044cf00(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar3 = 0;\n    do {\n        if (arg1 <= iVar3) {\n            return;\n        }\n        puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044d01a:\n        do {\n            while (uVar1 = *(puVar2 + 8),  uVar1 < 4) {\n                if (uVar1 < 2) {\n                    if (uVar1 == 0) {\ncode_r0x0044d0f4:\n                        fcn.0044e2e0();\n                    }\n                    else {\n                        LOCK();\n                        if (uVar1 == *(puVar2 + 8)) {\n                            *(puVar2 + 8) = 9;\n                            *puVar2 = 0;\n                            fcn.0044c1e0();\n                            LOCK();\n                            if (*(puVar2 + 8) == 9) {\n                                *(puVar2 + 8) = 1;\n                            }\n                            else {\n                                fcn.0044e2e0();\n                            }\n                            goto code_r0x0044cf2b;\n                        }\n                    }\n                }\n                else if (uVar1 == 2) {\ncode_r0x0044d0ed:\n                    fcn.0044e2e0();\n                }\n                else {\n                    LOCK();\n                    if (uVar1 == *(puVar2 + 8)) {\n                        *(puVar2 + 8) = 5;\n                        *puVar2 = 0;\n                        goto code_r0x0044cf2b;\n                    }\n                }\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044d0ed;\n                goto code_r0x0044d0f4;\n            }\n            if (uVar1 == 6) {\n                fcn.00459d60();\n                goto code_r0x0044d01a;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044d0ed;\n                fcn.0044e2e0();\n                goto code_r0x0044d01a;\n            }\n            LOCK();\n        } while (uVar1 != *(puVar2 + 8));\n        *(puVar2 + 8) = 9;\n        puVar2[1] = puVar2[7];\n        *puVar2 = 0;\n        fcn.0044c1e0();\n        LOCK();\n        if (*(puVar2 + 8) == 9) {\n            *(puVar2 + 8) = 1;\n        }\n        else {\n            fcn.0044e2e0();\n        }\ncode_r0x0044cf2b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 727
    },
    "0044d160": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d160(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1670) == 0) || (unaff_RBX < *(in_RAX + 0x1670))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1670) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar3 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x26e8);\n                if (arg1_00 <= noname_0) {\n                    if (0 < arg1) {\n                        *(*0x20 + -0x78) = 0x44d43f;\n                        fcn.0044d4a0(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044d45a;\n                arg1_00 = *(*(in_RAX + 0x26e0) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x20) = noname_0;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1;\n                *(*0x20 + -0x10) = iVar3;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 4) {\n                    if (uVar1 < 2) {\n                        if (uVar1 == 0) {\ncode_r0x0044d393:\n                            *(*0x20 + -0x78) = 0x44d398;\n                            fcn.0044e2e0();\n                            in_RAX = *(*0x20 + 8);\n                            noname_0 = *(*0x20 + -0x20);\n                            unaff_RBX = *(*0x20 + -0x28);\n                            arg1 = *(*0x20 + -0x30);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 2) goto code_r0x0044d393;\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x78) = 0x44d250;\n                            fcn.0044c640(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x44d270;\n                                fcn.0044e2e0();\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x26fc) = *(in_RAX + 0x26fc) + -1;\n                            noname_0 = *(*0x20 + -0x20) + -1;\n                            arg1 = *(*0x20 + -0x30);\n                            unaff_RBX = *(*0x20 + -0x28);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                    }\n                }\n                else if (uVar1 < 7) {\n                    if (uVar1 < 6) goto code_r0x0044d393;\n                    if (uVar1 != 6) goto code_r0x0044d3c0;\n                    *(*0x20 + -0x70) = 0x69e5a0;\n                    *(*0x20 + -0x78) = 0x44d3f6;\n                    fcn.00459d60();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    noname_0 = *(*0x20 + -0x20) + -1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                else if (uVar1 < 9) {\n                    LOCK();\n                    bVar6 = uVar1 == *(arg1_00 + 8);\n                    if (bVar6) {\n                        *(arg1_00 + 8) = 9;\n                    }\n                    arg4 = uVar1 & 0xffffff00 | bVar6;\n                    if (bVar6) {\n                        iVar3 = arg1_00[7];\n                        arg1_00[1] = iVar3;\n                        *(*0x20 + -0x78) = 0x44d2fc;\n                        fcn.0044c640(noname_0, iVar3);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        arg1 = unaff_RBX + 1;\n                        if (*(*0x20 + -0x28) < arg1) {\n                            iVar2 = *(*0x20 + -0x10);\n                            *(*0x20 + -0x78) = 0x44d327;\n                            iVar3 = fcn.00445220(unaff_RBX);\n                            arg1 = iVar2 + 1;\n                            uVar4 = *(*0x20 + -0x30);\n                        }\n                        else {\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar4 = unaff_RBX;\n                            unaff_RBX = *(*0x20 + -0x28);\n                        }\n                        if (*0x789810 == 0) {\n                            *(iVar3 + uVar4 * 8) = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x44d35d;\n                            iVar3 = fcn.0045c280(unaff_RBX, iVar3 + uVar4 * 8, *(*0x20 + -0x18), arg4);\n                        }\n                        noname_0 = *(*0x20 + -0x20) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                else {\n                    if (uVar1 == 9) goto code_r0x0044d393;\ncode_r0x0044d3c0:\n                    *(*0x20 + -0x78) = 0x44d3c5;\n                    fcn.0044e2e0();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x78) = 0x44d45a;\n            fcn.004320e0();\ncode_r0x0044d45a:\n            *(*0x20 + -0x78) = 0x44d465;\n            in_RAX = fcn.0045c5a0(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44d475;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2017
    },
    "0044d580": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0044d580(void)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044d580:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044d5a7:\n        arg1 = *(in_RAX + 0x26e8);\n        if (arg1 == 0) goto code_r0x0044d80e;\n        arg2 = **(in_RAX + 0x26e0);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44d80e;\n            fcn.004320e0();\n            goto code_r0x0044d80e;\n        }\n        *(*0x20 + -0x10) = arg2;\n        uVar1 = *(arg2 + 8);\n        if (uVar1 < 4) {\n            if (uVar1 < 2) {\n                if (uVar1 == 0) {\ncode_r0x0044d7a2:\n                    *(*0x20 + -0x30) = 0x44d7a7;\n                    fcn.0044e2e0();\n                    in_RAX = *(*0x20 + 8);\n                    goto code_r0x0044d7b1;\n                }\n                if (unaff_RBX < arg2[1]) {\n                    return arg2[1];\n                }\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 2;\n                    *(*0x20 + -0x30) = 0x44d7d3;\n                    fcn.0044d840(unaff_RBX);\n                    return 0;\n                }\n                goto code_r0x0044d5a7;\n            }\n            if (uVar1 != 2) {\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 4;\n                    *(*0x20 + -0x30) = 0x44d665;\n                    fcn.0044c840(in_RAX, arg2);\n                    LOCK();\n                    if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                        *(*(*0x20 + -0x10) + 0x40) = 5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x44d689;\n                        fcn.0044e2e0();\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    LOCK();\n                    *(in_RAX + 0x26fc) = *(in_RAX + 0x26fc) + -1;\n                    if (*(in_RAX + 0x26e8) == 0) {\n                        return -1;\n                    }\n                    goto code_r0x0044d7b1;\n                }\n                goto code_r0x0044d5a7;\n            }\ncode_r0x0044d790:\n            *(*0x20 + -0x30) = 0x44d795;\n            fcn.0044e2e0();\n            in_RAX = *(*0x20 + 8);\n        }\n        else {\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044d790;\n                goto code_r0x0044d7a2;\n            }\n            if (uVar1 == 6) {\n                *(*0x20 + -0x28) = 0x69e5a0;\n                *(*0x20 + -0x30) = 0x44d76b;\n                fcn.00459d60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044d7b1;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044d790;\n                *(*0x20 + -0x30) = 0x44d74f;\n                fcn.0044e2e0();\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044d7b1;\n            }\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044d5a7;\n            *(arg2 + 8) = 9;\n            arg2[1] = arg2[7];\n            *(*0x20 + -0x30) = 0x44d705;\n            fcn.0044c840(in_RAX, arg2);\n            *(*0x20 + -0x30) = 0x44d714;\n            fcn.0044c1e0();\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44d734;\n                fcn.0044e2e0();\n            }\n            in_RAX = *(*0x20 + 8);\n        }\ncode_r0x0044d7b1:\n        unaff_RBX = *(*0x20 + 0x10);\n        goto code_r0x0044d5a7;\n    }\n    goto code_r0x0044d816;\ncode_r0x0044d80e:\n    *(*0x20 + -0x30) = 0x44d815;\n    in_RAX = fcn.0045c5a0(arg1);\ncode_r0x0044d816:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44d825;\n    fcn.0045e5a0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044d580;\n}\n",
        "token_count": 1585
    },
    "0044d9e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d9e0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *arg1_00;\n    ulong *arg3;\n    int32_t iVar7;\n    ulong *arg4;\n    ulong *in_R10;\n    int64_t unaff_R12;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    \ncode_r0x0044d9e0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1670) = 0;\n        piVar5 = *(in_RAX + 0x26e0);\n        *(*0x20 + -0x18) = piVar5;\n        arg1 = *(in_RAX + 0x26e8);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x26f0);\n        *(*0x20 + -0x28) = arg2;\n        puVar3 = NULL;\n        piVar6 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        iVar8 = unaff_R12;\n        do {\n            arg3 = arg1_00;\n            if (puVar3 < arg1) {\n                *(*0x20 + -0x20) = puVar3;\n                *(*0x20 + -0x3c) = arg4;\n                *(*0x20 + -0x38) = arg1_00;\n                *(*0x20 + -0x3d) = piVar6;\n                in_R10 = piVar5[puVar3];\n                *(*0x20 + -0x10) = in_R10;\n                unaff_R12 = in_RAX;\n            }\n            else {\n                for (; arg3 < arg1; arg3 = arg3 + 1) {\n                    if (arg1 <= arg3) goto code_r0x0044dc89;\n                    piVar6 = piVar5 + arg3;\n                    if (*0x789810 == 0) {\n                        piVar5[arg3] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44dc07;\n                        in_RAX = fcn.0045c240(arg1, arg2, arg3, arg4);\n                        in_R10 = arg1_00;\n                    }\n                }\n                iVar7 = arg4;\n                LOCK();\n                puVar1 = in_RAX + 0x26fc;\n                arg4 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                LOCK();\n                puVar1 = in_RAX + 0x26f8;\n                arg3 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                if (arg1_00 <= arg2) {\n                    *(in_RAX + 0x26e8) = arg1_00;\n                    *(in_RAX + 0x26f0) = arg2;\n                    if (*0x789810 == 0) {\n                        *(in_RAX + 0x26e0) = piVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44dc57;\n                        in_RAX = fcn.0045c260(arg1, arg2, arg3, arg4);\n                    }\n                    if (arg1_00 == NULL) {\n                        *(in_RAX + 0x1668) = 0;\n                    }\n                    else {\n                        *(in_RAX + 0x1668) = *(*piVar5 + 8);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x44dc89;\n                arg1 = arg1_00;\n                fcn.0045c620(arg1_00, arg2);\ncode_r0x0044dc89:\n                *(*0x20 + -0x68) = 0x44dc91;\n                fcn.0045c5a0(arg1);\n                unaff_R12 = iVar8;\n                puVar3 = arg1_00;\n                arg1_00 = arg3;\n            }\ncode_r0x0044dc94:\n            do {\n                while (uVar2 = *(in_R10 + 8),  uVar2 < 4) {\n                    in_RAX = unaff_R12;\n                    if (uVar2 < 2) {\n                        if (uVar2 != 0) {\n                            unaff_R12 = iVar8;\n                            if (piVar6 != '\\0') {\n                                if (arg1 <= arg1_00) goto code_r0x0044de50;\n                                if (*0x789810 == 0) {\n                                    piVar5[arg1_00] = in_R10;\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = 0x44da97;\n                                    puVar3 = in_R10;\n                                    fcn.0045c2a0(arg1, arg2, arg1_00);\n                                    arg4 = in_R10;\n                                    in_R10 = puVar3;\n                                }\n                                *(*0x20 + -0x68) = 0x44daa8;\n                                fcn.0044df60(arg2, arg2, arg1_00, arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                piVar6 = *(*0x20 + -0x3d);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                            }\n                            arg1_00 = arg1_00 + 1;\n                            goto code_r0x0044da38;\n                        }\ncode_r0x0044de0b:\n                        *(*0x20 + -0x68) = 0x44de10;\n                        fcn.0044e2e0();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else if (uVar2 == 2) {\ncode_r0x0044ddce:\n                        *(*0x20 + -0x68) = 0x44ddd3;\n                        fcn.0044e2e0();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else {\n                        LOCK();\n                        iVar8 = unaff_R12;\n                        if (uVar2 == *(in_R10 + 8)) {\n                            *(in_R10 + 8) = 4;\n                            *in_R10 = 0;\n                            LOCK();\n                            bVar9 = *(in_R10 + 8) == 4;\n                            if (bVar9) {\n                                *(in_R10 + 8) = 5;\n                            }\n                            in_R10 = in_R10 & 0xffffffffffffff00 | bVar9;\n                            if (!bVar9) {\n                                *(*0x20 + -0x68) = 0x44dafc;\n                                fcn.0044e2e0();\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            arg4 = arg4 + 1;\n                            piVar6 = 0x1;\n                            unaff_R12 = in_RAX;\n                            goto code_r0x0044da38;\n                        }\n                    }\n                }\n                if (uVar2 < 6) {\n                    if (uVar2 == 4) goto code_r0x0044ddce;\n                    goto code_r0x0044de0b;\n                }\n                if (uVar2 == 6) {\n                    *(*0x20 + -0x60) = 0x69e5a0;\n                    *(*0x20 + -0x68) = 0x44dd7c;\n                    fcn.00459d60();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044dc94;\n                }\n                if (8 < uVar2) {\n                    if (uVar2 == 9) goto code_r0x0044ddce;\n                    *(*0x20 + -0x68) = 0x44dd34;\n                    fcn.0044e2e0();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044dc94;\n                }\n                LOCK();\n                iVar8 = unaff_R12;\n            } while (uVar2 != *(in_R10 + 8));\n            *(in_R10 + 8) = 9;\n            in_R10[1] = in_R10[7];\n            if (arg1 <= arg1_00) goto code_r0x0044de48;\n            if (*0x789810 == 0) {\n                piVar5[arg1_00] = in_R10;\n                in_R10 = arg4;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44db67;\n                fcn.0045c2a0(arg1, arg2, arg1_00);\n            }\n            *(*0x20 + -0x68) = 0x44db78;\n            fcn.0044df60(arg2, arg2, arg1_00, in_R10);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44db98;\n                fcn.0044e2e0();\n            }\n            in_R10 = *(*0x20 + -0x38);\n            arg1_00 = in_R10 + 1;\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar3 = *(*0x20 + -0x20);\n            piVar5 = *(*0x20 + -0x18);\n            piVar6 = 0x1;\n            arg4 = *(*0x20 + -0x3c);\ncode_r0x0044da38:\n            puVar3 = puVar3 + 1;\n            iVar8 = unaff_R12;\n        } while( true );\n    }\n    goto code_r0x0044de59;\ncode_r0x0044de48:\n    *(*0x20 + -0x68) = 0x44de50;\n    fcn.0045c5a0(arg1);\ncode_r0x0044de50:\n    *(*0x20 + -0x68) = 0x44de58;\n    in_RAX = fcn.0045c5a0(arg1);\ncode_r0x0044de59:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x44de65;\n    fcn.00459ea0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0044d9e0;\n}\n",
        "token_count": 3313
    },
    "0044e600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e600(int64_t *arg1, ulong noname_1, uint64_t arg3, code *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    code *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    code *unaff_RDI;\n    uint32_t uVar8;\n    uint64_t in_R10;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_SIL;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x38) = arg4;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                unaff_RBX = arg1 & 0xffffffff;\n                *(*0x20 + -0x60) = 0x44e670;\n                iVar1 = fcn.0044eca0();\n                arg1 = *(*0x20 + 0x20);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x44e686;\n            fcn.0045bfa0(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x20);\n            iVar1 = *(uVar5 + 8);\n            *(uVar5 + 8) = uVar4 >> 6;\n            uVar2 = (uVar4 >> 6) - iVar1;\n            uVar4 = *(*0x20 + 0x30);\n            if (uVar4 < 0) {\n                uVar6 = *(*0x20 + 0x40);\n                uVar9 = uVar6;\n            }\n            else {\n                uVar6 = *(*0x20 + 0x40);\n                uVar9 = uVar6 + 1;\n            }\n            if (3 < uVar9) {\n                uVar9 = 3;\n            }\n            arg3 = *(uVar5 + 0x10);\n            arg4 = uVar9 & 0xffffffff;\n            in_R11 = *(*0x20 + 0x28);\n            uVar8 = uVar9 << 6 | *(*0x20 + 0x28);\n            in_R10 = uVar8;\n            if (arg3 < 0xfbe8) {\n                *(uVar5 + 0x418 + arg3) = uVar8;\n                in_R10 = *(uVar5 + 0x10) + 1;\n                *(uVar5 + 0x10) = in_R10;\n                if (arg4 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044e730;\n                }\n                unaff_RBX = NULL;\ncode_r0x0044e9a0:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (in_R10 < 0xfbe8) {\n                        *(uVar5 + 0x418 + in_R10) = unaff_RBX;\n                        *(uVar5 + 0x10) = in_R10 + 1;\n                        unaff_RBX = uVar5 + in_R10 + 0x418;\ncode_r0x0044e730:\n                        uVar9 = *(uVar5 + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar9) goto code_r0x0044e972;\n                            *(uVar5 + 0x418 + uVar9) = uVar2 | 0x80;\n                            uVar9 = uVar9 + 1;\n                            uVar2 = uVar2 >> 7;\n                            in_R10 = uVar2;\n                        }\n                        if (uVar9 < 0xfbe8) {\n                            *(uVar5 + 0x418 + uVar9) = uVar2;\n                            *(uVar5 + 0x10) = uVar9 + 1;\n                            iVar1 = *(*0x20 + 0x38);\n                            iVar3 = 0;\n                            do {\n                                if (iVar3 < uVar6) {\n                                    in_R10 = *(iVar1 + iVar3 * 8);\n                                    in_R11 = *(uVar5 + 0x10);\n                                    goto code_r0x0044e92f;\n                                }\n                                if (uVar4 != 0) {\n                                    if (uVar4 < 1) goto code_r0x0044e802;\n                                    *(*0x20 + -0x30) = arg3;\n                                    *(*0x20 + -0x18) = unaff_RBX;\n                                    unaff_RBX = uVar5 + 0x18;\n                                    unaff_RDI = pe_nt_image_headers64;\n                                    *(*0x20 + -0x60) = 0x44e7f7;\n                                    uVar4 = fcn.0044ea80(0x80);\n                                    uVar5 = *(*0x20 + -0x20);\n                                    arg3 = *(uVar5 + 0x10);\n                                    goto code_r0x0044e851;\n                                }\n                                uVar6 = *(uVar5 + 0x10);\n                                uVar2 = 0;\ncode_r0x0044e8c9:\n                                if (0x7f < uVar2) {\n                                    if (0xfbe7 < uVar6) goto code_r0x0044e909;\ncode_r0x0044e8b2:\n                                    *(uVar5 + 0x418 + uVar6) = uVar2 | 0x80;\n                                    uVar2 = uVar2 >> 7;\n                                    uVar6 = uVar6 + 1;\n                                    uVar4 = uVar2;\n                                    goto code_r0x0044e8c9;\n                                }\n                                if (uVar6 < 0xfbe8) {\n                                    *(uVar5 + 0x418 + uVar6) = uVar2;\n                                    *(uVar5 + 0x10) = uVar6 + 1;\ncode_r0x0044e802:\n                                    while( true ) {\n                                        iVar3 = *(uVar5 + 0x10) - arg3;\n                                        uVar5 = *(*0x20 + -0x28);\n                                        if (iVar3 <= uVar5) {\n                                            if (unaff_RBX != NULL) {\n                                                *unaff_RBX = iVar3 + -2;\n                                            }\n                                            return;\n                                        }\n                                        unaff_RBX = 0x1d;\n                                        *(*0x20 + -0x60) = 0x44e839;\n                                        uVar4 = fcn.004320e0();\n                                        while( true ) {\n                                            *(uVar5 + 0x418 + arg3) = uVar4 | 0x80;\n                                            uVar4 = uVar4 >> 7;\n                                            arg3 = arg3 + 1;\ncode_r0x0044e851:\n                                            if (uVar4 < 0x80) break;\n                                            uVar6 = uVar5;\n                                            if (0xfbe7 < arg3) goto code_r0x0044e8a5;\n                                        }\n                                        if (0xfbe7 < arg3) break;\n                                        *(uVar5 + 0x418 + arg3) = uVar4;\n                                        *(uVar5 + 0x10) = arg3 + 1;\n                                        unaff_RBX = *(*0x20 + -0x18);\n                                        arg3 = *(*0x20 + -0x30);\n                                    }\n                                    *(*0x20 + -0x60) = 0x44e8a5;\n                                    fcn.0045c5a0(0xfbe8);\n                                    uVar6 = uVar5;\ncode_r0x0044e8a5:\n                                    uVar5 = 0xfbe8;\n                                    *(*0x20 + -0x60) = 0x44e8b2;\n                                    uVar2 = fcn.0045c5a0(0xfbe8);\n                                    goto code_r0x0044e8b2;\n                                }\n                                *(*0x20 + -0x60) = 0x44e909;\n                                fcn.0045c5a0(0xfbe8);\ncode_r0x0044e909:\n                                uVar5 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x44e916;\n                                iVar3 = fcn.0045c5a0(0xfbe8);\n                                while( true ) {\n                                    *(uVar5 + 0x418 + in_R11) = in_R10 | 0x80;\n                                    in_R10 = in_R10 >> 7;\n                                    in_R11 = in_R11 + 1;\ncode_r0x0044e92f:\n                                    if (in_R10 < 0x80) break;\n                                    if (0xfbe7 < in_R11) goto code_r0x0044e958;\n                                }\n                                if (0xfbe7 < in_R11) goto code_r0x0044e94b;\n                                *(uVar5 + 0x418 + in_R11) = in_R10;\n                                in_R10 = in_R11 + 1;\n                                *(uVar5 + 0x10) = in_R10;\n                                iVar3 = iVar3 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044e965;\n                    }\n                    *(*0x20 + -0x60) = 0x44e9ea;\n                    fcn.0045c5a0(0xfbe8);\n                }\n                else if (in_R10 < 0xfbe8) goto code_r0x0044e97f;\n                *(*0x20 + -0x60) = 0x44e9f7;\n                fcn.0045c5a0(0xfbe8);\n            }\n            unaff_SIL = uVar4;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x44ea05;\n            in_RAX = fcn.0045c5a0(0xfbe8);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = unaff_SIL;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + 0x38) = arg4;\n        *(puVar7 + 0x40) = in_R10;\n        *(puVar7 + 0x48) = in_R11;\n        *(puVar7 + -8) = 0x44ea37;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_SIL = puVar7[0x28];\n        arg3 = *(puVar7 + 0x30);\n        arg4 = *(puVar7 + 0x38);\n        in_R10 = *(puVar7 + 0x40);\n        in_R11 = *(puVar7 + 0x48);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x0044e94b:\n    *(*0x20 + -0x60) = 0x44e958;\n    fcn.0045c5a0(0xfbe8);\ncode_r0x0044e958:\n    *(*0x20 + -0x60) = 0x44e965;\n    fcn.0045c5a0(0xfbe8);\ncode_r0x0044e965:\n    *(*0x20 + -0x60) = 0x44e972;\n    fcn.0045c5a0(0xfbe8);\ncode_r0x0044e972:\n    uVar5 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x44e97f;\n    uVar2 = fcn.0045c5a0(0xfbe8);\ncode_r0x0044e97f:\n    *(uVar5 + 0x418 + in_R10) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    in_R10 = in_R10 + 1;\n    arg4 = unaff_RBX;\n    goto code_r0x0044e9a0;\n}\n",
        "token_count": 3157
    },
    "0044fea0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** fcn.0044fea0(code **arg1, ulong noname_1, uchar (*arg3) [16], code **arg4)\n\n{\n    uchar (*pauVar1) [16];\n    char cVar2;\n    int32_t iVar3;\n    code *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    code **ppcVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uchar uVar12;\n    char cVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    code **unaff_RDI;\n    int64_t *piVar15;\n    code **ppcVar16;\n    code **in_R10;\n    uint8_t uVar17;\n    uchar (*in_R11) [16];\n    code *pcVar18;\n    code **ppcVar19;\n    code **unaff_R14;\n    code **ppcVar20;\n    int64_t iVar21;\n    bool bVar22;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044fea0:\n    puVar14 = *0x20;\n    if (unaff_R14[2] <= *0x20 + -0x2e8 && *0x20 + -0x2e8 != unaff_R14[2]) {\n        puVar14 = *0x20 + -0x368;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(unaff_R14[6] + 0x90) != unaff_R14)) {\n                uVar10 = *0x71d188 >> 2;\n                if (unaff_R14[6][0xf9] != 0x0) {\n                    uVar10 = unaff_R14[6][0xf9];\n                }\n                if ((in_RAX == 0xffffffffffffffff) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = unaff_RDI[0xe];\n                    if (unaff_RBX == NULL) {\n                        in_RAX = unaff_RDI[8];\n                        unaff_RBX = unaff_RDI[7];\n                        pcVar18 = unaff_RDI[10];\n                    }\n                    else {\n                        in_RAX = unaff_RDI[0xf];\n                        pcVar18 = NULL;\n                    }\n                }\n                else {\n                    pcVar18 = NULL;\n                }\n                *(*0x20 + -0x60) = 0;\n                *(*0x20 + -0x378) = unaff_RBP;\n                *(*0x20 + -0x370) = 0x44ff6f;\n                iVar4 = fcn.0045c850();\n                unaff_RBP = *(*0x20 + -0x378);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                iVar11 = *(iVar4 + 0x150);\n                iVar21 = *(iVar4 + 0x158);\n                if (arg3 == NULL) {\n                    unaff_RDI = *0x20 + -0x88 & 0xffffffffffffff00 | in_R10 == NULL;\n                }\n                else {\n                    unaff_RDI = NULL;\n                }\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -600) = in_RAX;\n                *(*0x20 + -0x260) = unaff_RBX;\n                *(*0x20 + -0x339) = unaff_RDI;\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + -0x70) = iVar4;\n                *(*0x20 + -0x2d0) = iVar21;\n                *(*0x20 + -0xb0) = iVar11;\n                *(*0x20 + -0xb8) = pcVar18;\n                *(*0x20 + -0x32c) = uVar10;\n                if (in_RAX == NULL) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    *(*0x20 + -0x38) = *(*0x20 + -0x260) + 8;\n                }\n                *(*0x20 + -0x370) = 0x450033;\n                iVar4 = fcn.0044a780();\n                if (iVar4 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (ppcVar9 = in_R10,  ppcVar19 = arg1,  *(*0x20 + -0x339) != '\\0')) {\n                        *(*0x20 + -600) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x370) = 0x4500f0;\n                        fcn.00433860();\n                        *(*0x20 + -0x370) = 0x450105;\n                        fcn.00434160();\n                        *(*0x20 + -0x370) = 0x450112;\n                        fcn.00433fc0();\n                        *(*0x20 + -0x370) = 0x450117;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x370) = 0x45011c;\n                        fcn.004338e0();\n                        arg1 = *0x20 + -0x60;\n                        unaff_RDI = NULL;\n                        *(*0x20 + -0x370) = 0x45013a;\n                        fcn.00453520(arg1);\n                        ppcVar9 = in_R10;\n                        ppcVar19 = *(*0x20 + 0x48);\n                    }\n                    if (ppcVar19 == NULL) {\n                        return NULL;\n                    }\n                    uVar6 = 10;\n                    *(*0x20 + -0x370) = 0x45016f;\n                    fcn.004320e0();\n                    goto code_r0x0045016f;\n                }\n                *(*0x20 + -0x60) = iVar4;\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x378) = unaff_RBP;\n                *(*0x20 + -0x370) = 0x45006f;\n                fcn.0045c814();\n                unaff_RBP = *(*0x20 + -0x378);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -600);\n                in_R10 = *(*0x20 + -0x260);\n                in_R11 = *(*0x20 + 0x30);\n                iVar11 = *(*0x20 + -0xb0);\n                iVar21 = *(*0x20 + -0x2d0);\n                arg3 = *(*0x20 + -0xb8);\n                ppcVar9 = NULL;\n                cVar2 = false;\n                uVar6 = 0;\n                unaff_RDI = NULL;\ncode_r0x004501ef:\n                if (ppcVar9 < unaff_RSI) {\n                    *(*0x20 + -0x268) = in_R11;\n                    iVar4 = *(*0x20 + -0x60);\n                    if (*(iVar4 + 0x14) != 0) {\n                        *(*0x20 + -0x78) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x80) = iVar4;\n                        uVar17 = *(iVar4 + 0x29);\n                        cVar13 = *(iVar4 + 0x28);\n                        if (cVar13 == '\\x04') {\n                            uVar17 = uVar17 & 0xfd;\n                        }\n                        if ((((*(*0x20 + -0x50) == arg4) && (*(*0x20 + -0x38) == in_R10)) && (arg1[0xf] == arg4)) &&\n                           (arg1[0xe] == in_R10)) {\n                            uVar17 = uVar17 & 0xfd;\n                        }\n                        *(*0x20 + -0x2f8) = ppcVar9;\n                        *(*0x20 + -0x310) = unaff_RDI;\n                        *(*0x20 + -0x338) = uVar6;\n                        *(*0x20 + -0x88) = arg3;\n                        *(*0x20 + -0x33a) = cVar2;\n                        if (*(*0x20 + -0x30) == 0) {\n                            if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (*arg1[6] != arg1)) ||\n                               (iVar4 = *(arg1[6] + 0x90),  iVar4 == 0)) {\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            else if (cVar13 == '\\r') {\n                                *(*0x20 + -0x50) = *(iVar4 + 0x40);\n                                *(*0x20 + -0x370) = 0x45035a;\n                                iVar4 = fcn.0044a780();\n                                *(*0x20 + -0x60) = iVar4;\n                                *(*0x20 + -0x58) = uVar6;\n                                uVar17 = *(iVar4 + 0x29);\n                                *(*0x20 + -0x38) = *(*(*(*(*0x20 + -0x70) + 0x30) + 0x90) + 0x38);\n                                iVar21 = *(*(*(*0x20 + -0x70) + 0x30) + 0x90);\n                                iVar11 = *(iVar21 + 0x150);\n                                iVar21 = *(iVar21 + 0x158);\n                            }\n                            else if (cVar13 == '\\x14') {\n                                *(*0x20 + -0x38) = *(iVar4 + 0x38);\n                                iVar11 = *(*(arg1[6] + 0x90) + 0x150);\n                                iVar21 = *(*(arg1[6] + 0x90) + 0x158);\n                                uVar17 = uVar17 & 0xfd;\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            *(*0x20 + -0x2d0) = iVar21;\n                            *(*0x20 + -0xb0) = iVar11;\n                            *(*0x20 + -0xd0) = uVar6;\n                            *(*0x20 + -0xc0) = iVar4;\n                            *(*0x20 + -0x337) = uVar17;\n                            *(*0x20 + -0x370) = 0x45043d;\n                            iVar3 = fcn.0044b300(*(*0x20 + -0x50));\n                            *(*0x20 + -0x30) = iVar3 + *(*0x20 + -0x38);\n                            *(*0x20 + -0x30) = iVar3 + *(*0x20 + -0x38) + 8;\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -600);\n                            in_R10 = *(*0x20 + -0x260);\n                            uVar17 = *(*0x20 + -0x337);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                            iVar11 = *(*0x20 + -0xb0);\n                        }\n                        else {\n                            *(*0x20 + -0xd0) = *(*0x20 + -0x78);\n                            ppcVar19 = *(*0x20 + -0x80);\n                        }\n                        *(*0x20 + -0x2d0) = iVar21;\n                        *(*0x20 + -0xb0) = iVar11;\n                        *(*0x20 + -0xc0) = ppcVar19;\n                        if ((uVar17 & 1) == 0) {\n                            if ((uVar17 & 2) == 0) {\ncode_r0x00450554:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0x2f0) = *(*0x20 + -0x30) + -8;\n                                    *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                                }\n                                else {\n                                    *(*0x20 + -0x2b0) = ppcVar9;\n                                    *(*0x20 + -0x2f0) = 0;\n                                }\n                                *(*0x20 + -0x370) = 0x450599;\n                                iVar4 = fcn.0044a780();\n                                if (iVar4 == 0) {\n                                    arg4 = *(*0x20 + -0x339);\n                                    if (*(*0x20 + -0x339) == 0) {\n                                        arg1 = *(*0x20 + -0x70);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                    }\n                                    else {\n                                        arg1 = *(*0x20 + -0x70);\n                                        if (arg1[6][0xe8] == 0x0) {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                            if (*(in_R10 + 5) == 0x13) {\n                                                arg4 = NULL;\n                                            }\n                                        }\n                                    }\n                                    *(*0x20 + -0x90) = 0;\n                                    *(*0x20 + -0x98) = uVar6;\n                                    in_R11 = *(*0x20 + 0x48);\n                                    if ((in_R11 != NULL) || (pauVar1 = in_R11,  arg4 != '\\0')) {\n                                        uVar5 = *(*0x20 + -0xd0);\n                                        *(*0x20 + -0x370) = 0x450655;\n                                        uVar7 = fcn.0044ae60();\n                                        *(*0x20 + -0xa0) = uVar7;\n                                        *(*0x20 + -0x270) = uVar5;\n                                        *(*0x20 + -0x278) = *(*0x20 + -0x40);\n                                        *(*0x20 + -0x370) = 0x45067a;\n                                        fcn.00433860();\n                                        *(*0x20 + -0x370) = 0x45068b;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x370) = 0x4506a5;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x370) = 0x4506b6;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x370) = 0x4506c5;\n                                        fcn.00433fc0();\n                                        *(*0x20 + -0x370) = 0x4506ca;\n                                        fcn.00433ac0();\n                                        *(*0x20 + -0x370) = 0x4506cf;\n                                        fcn.004338e0();\n                                        unaff_RDI = *(*0x20 + -0x2f0);\n                                        *(*0x20 + -0x370) = 0x4506f0;\n                                        fcn.00453520(*0x20 + -0x60);\n                                        iVar4 = *(*0x20 + -0x90);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar6 = *(*0x20 + -0x98);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                        in_R11 = *(*0x20 + 0x48);\n                                        pauVar1 = *(*0x20 + 0x48);\n                                    }\n                                    if (pauVar1 != NULL) goto code_r0x004517e5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                }\n                                cVar2 = *(*0x20 + -0x33a);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x310);\n                                ppcVar19 = *(*0x20 + -0xc0);\n                                iVar11 = *(*0x20 + -0xb0);\n                                iVar21 = *(*0x20 + -0x2d0);\n                                *(*0x20 + -0xe8) = iVar4;\n                                *(*0x20 + -0xf0) = uVar6;\n                                uVar5 = *(*0x20 + -0x2f8);\n                                uVar6 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                in_R11 = *(*0x20 + 0x48);\n                                if (in_R11 != NULL) {\n                                    if (ppcVar9 < 1) goto code_r0x00450554;\n                                    if (in_R11 != NULL) goto code_r0x004517f6;\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                *(*0x20 + -0x2b8) = ppcVar9;\n                                *(*0x20 + -0xe8) = 0;\n                                *(*0x20 + -0xf0) = 0;\n                                uVar5 = *(*0x20 + -0x2b8);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            *(*0x20 + -0x2c0) = uVar5;\n                            *(*0x20 + -200) = *(*0x20 + -0xf0);\n                            ppcVar9 = *(*0x20 + -0x2c0);\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -200) = 0;\n                            arg3 = NULL;\n                        }\n                        iVar4 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x28) = iVar4 - 8U;\n                        if (*(*0x20 + -0x38) < iVar4 - 8U) {\n                            *(*0x20 + -0x28) = iVar4 + -0x10;\n                        }\n                        *(*0x20 + -0xe8) = arg3;\n                        arg4 = *(*0x20 + 0x48);\n                        if (arg4 == NULL) {\n                            in_R10 = *(*0x20 + -0x339);\n                            if (*(*0x20 + -0x339) == 0) goto code_r0x004508da;\n                        }\n                        else {\n                            in_R10 = *(*0x20 + -0x339);\n                        }\n                        *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                        if (arg4 == NULL) {\n                            bVar22 = false;\n                        }\n                        else {\n                            bVar22 = *(ppcVar19 + 0xc) == -0x80000000;\n                        }\n                        *(*0x20 + -0x18) = *(ppcVar19 + 0xc);\n                        *(*0x20 + -0x10) = 0;\n                        if (bVar22) {\n                            *(*0x20 + -0x370) = 0x450878;\n                            uVar5 = fcn.00451ca0(*(*0x20 + -0xd0));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x10) = ppcVar19;\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg4 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x339);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                        }\n                        arg3 = *(*0x20 + -0xe8);\n                        iVar11 = *(*0x20 + -0xb0);\ncode_r0x004508da:\n                        *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                        if (cVar2 != '\\0') {\n                            uVar10 = *(*(*0x20 + -0x60) + 2);\n                            if (uVar10 == 0) {\n                                *(*0x20 + -0x48) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x48) = **(*0x20 + -0x60) + uVar10 + 1;\n                            }\n                            iVar11 = *(*0x20 + -0xb0);\n                        }\n                        if (arg4 == NULL) {\n                            in_R11 = *(*0x20 + 0x38);\n                            pauVar1 = in_R11;\n                        }\n                        else {\n                            pcVar18 = *arg4;\n                            *(*0x20 + -0x370) = 0x450963;\n                            cVar2 = (*pcVar18)();\n                            if (cVar2 == '\\0') {\n                                return *(*0x20 + -0x2f8);\n                            }\n                            pauVar1 = *(*0x20 + 0x38);\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0xe8);\n                            arg4 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x339);\n                            in_R11 = *(*0x20 + 0x38);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar11 = *(*0x20 + -0xb0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                        }\n                        if (pauVar1 == NULL) goto code_r0x00450b56;\n                        ppcVar20 = *(*0x20 + -0x50);\n                        if ((((ppcVar9 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (cVar2 != '\\0')) ||\n                           (*ppcVar19 == ppcVar20)) {\n                            ppcVar16 = ppcVar20;\n                            ppcVar20 = ppcVar20 + 1;\n                        }\n                        else {\n                            ppcVar16 = ppcVar20 + -1;\n                        }\n                        if (*(ppcVar19 + 0x2b) < 4) {\n                            *(*0x20 + -0x2c8) = ppcVar9;\n                            *(*0x20 + -0x118) = 0;\n                            ppcVar9 = *(*0x20 + -0x2c8);\n                        }\n                        else {\n                            *(*0x20 + -0x328) = ppcVar16;\n                            iVar11 = ppcVar19 + *(ppcVar19 + 4) * 4 + 0x2c;\n                            if ((iVar11 >> 2 & 1) != 0) {\n                                if ((ppcVar19 >> 2 & 1) != 0) {\n                                    *(*0x20 + -0x120) = iVar11;\n                                    *(*0x20 + -0x318) = ppcVar20;\n                                    *(*0x20 + -0x370) = 0x450a8f;\n                                    fcn.00433860();\n                                    *(*0x20 + -0x370) = 0x450aa5;\n                                    fcn.00434160();\n                                    *(*0x20 + -0x370) = 0x450ab2;\n                                    fcn.004340e0();\n                                    *(*0x20 + -0x370) = 0x450ab7;\n                                    fcn.00433ac0();\n                                    *(*0x20 + -0x370) = 0x450abc;\n                                    fcn.004338e0();\n                                    ppcVar9 = *(*0x20 + -0x2f8);\n                                    arg1 = *(*0x20 + -0x70);\n                                    cVar2 = *(*0x20 + -0x33a);\n                                    uVar6 = *(*0x20 + -0x338);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    unaff_RDI = *(*0x20 + -0x310);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    iVar11 = *(*0x20 + -0x120);\n                                    in_R10 = *(*0x20 + -0x339);\n                                    in_R11 = *(*0x20 + 0x38);\n                                    ppcVar19 = *(*0x20 + -0xc0);\n                                    ppcVar20 = *(*0x20 + -0x318);\n                                }\n                                iVar11 = iVar11 + 4;\n                            }\n                            *(*0x20 + -0x118) = *(iVar11 + 0x18);\n                            ppcVar16 = *(*0x20 + -0x328);\n                        }\n                        uVar12 = uVar6;\n                        if (*(*0x20 + -0x118) != 0) goto code_r0x004515e0;\n                        arg4 = *(*0x20 + -0x268);\n                        do {\n                            if (((*(ppcVar19 + 5) != '\\x16') || (cVar13 = uVar6,  cVar13 == '\\t')) ||\n                               ((cVar13 == '\\x13' || (cVar13 == '\\x0f')))) {\n                                if (arg4 < 1) {\n                                    if (ppcVar9 < unaff_RSI) {\n                                        if (0xfffff < ppcVar9) {\n                                            *(*0x20 + -0x370) = 0x4517cf;\n                                            fcn.0045c5a0(0x100000);\ncode_r0x004517cf:\n                                            *(*0x20 + -0x370) = 0x4517d9;\n                                            fcn.0045c5a0(0x100000);\ncode_r0x004517d9:\n                                            arg1 = 0x100000;\n                                            *(*0x20 + -0x370) = 0x4517e5;\n                                            fcn.0045c5a0(0x100000);\n                                            goto code_r0x004517e5;\n                                        }\n                                        *(*in_R11 + ppcVar9 * 8) = ppcVar20;\n                                        ppcVar9 = ppcVar9 + 1;\n                                    }\n                                }\n                                else {\n                                    arg4 = arg4 + -1;\n                                }\n                            }\n                            uVar6 = *(ppcVar19 + 5);\n                            ppcVar9 = ppcVar9 + -1;\n                            iVar11 = *(*0x20 + -0xb0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                            *(*0x20 + -0x268) = arg4;\n                            arg4 = *(*0x20 + 0x48);\ncode_r0x00450b56:\n                            if (in_R10 == '\\0') goto code_r0x00450cda;\n                            in_R10 = *(*0x20 + -0x50);\n                            if (((0 < ppcVar9) || ((*(*0x20 + 8) >> 1 & 1) == 0)) &&\n                               ((*ppcVar19 < in_R10 && (cVar2 == '\\0')))) {\n                                in_R10 = in_R10 + -1;\n                            }\n                            *(*0x20 + -0x270) = ppcVar9;\n                            if (*(ppcVar19 + 0x2b) < 4) {\n                                piVar15 = NULL;\n                            }\n                            else {\n                                iVar4 = ppcVar19 + *(ppcVar19 + 4) * 4 + 0x2c;\n                                if ((iVar4 >> 2 & 1) != 0) {\n                                    if ((ppcVar19 >> 2 & 1) != 0) {\n                                        *(*0x20 + -0x110) = iVar4;\n                                        *(*0x20 + -800) = in_R10;\n                                        *(*0x20 + -0x335) = uVar6;\n                                        *(*0x20 + -0x370) = 0x450bfc;\n                                        fcn.00433860();\n                                        *(*0x20 + -0x370) = 0x450c0d;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x370) = 0x450c1a;\n                                        fcn.004340e0();\n                                        *(*0x20 + -0x370) = 0x450c1f;\n                                        fcn.00433ac0();\n                                        *(*0x20 + -0x370) = 0x450c25;\n                                        fcn.004338e0();\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar6 = *(*0x20 + -0x335);\n                                        unaff_RSI = *(*0x20 + 0x40);\n                                        unaff_RDI = *(*0x20 + -0x310);\n                                        arg3 = *(*0x20 + -0xe8);\n                                        iVar4 = *(*0x20 + -0x110);\n                                        in_R10 = *(*0x20 + -800);\n                                        iVar11 = *(*0x20 + -0xb0);\n                                        iVar21 = *(*0x20 + -0x2d0);\n                                    }\n                                    iVar4 = iVar4 + 4;\n                                }\n                                piVar15 = *(iVar4 + 0x18);\n                                ppcVar19 = *(*0x20 + -0xc0);\n                                arg4 = *(*0x20 + 0x48);\n                            }\n                            uVar10 = uVar6;\n                            if (piVar15 == NULL) goto code_r0x004511d3;\n                            *(*0x20 + -0x108) = piVar15;\n                            in_R11 = *0x20 + -0x250;\n                            *in_R11 = in_XMM15;\n                            *(*0x20 + -0x240) = in_XMM15;\n                            arg3 = *0x20 + -0x230;\n                            *arg3 = in_XMM15;\n                            while( true ) {\n                                *(*0x20 + -0x290) = unaff_RDI;\n                                *(*0x20 + -0x338) = uVar6;\n                                *(*0x20 + -0x278) = in_R10;\n                                *(*0x20 + -0x370) = 0x450fd6;\n                                iVar3 = fcn.0044b560(2);\n                                if (iVar3 < 0) {\n                                    ppcVar9 = *(*0x20 + -0x270);\n                                    arg1 = *(*0x20 + -0x70);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    arg4 = *(*0x20 + 0x48);\n                                    ppcVar19 = *(*0x20 + -0xc0);\n                                    iVar11 = *(*0x20 + -0xb0);\n                                    iVar21 = *(*0x20 + -0x2d0);\n                                    uVar10 = *(*0x20 + -0x338);\n                                    in_R10 = *(*0x20 + -0x278);\n                                    unaff_RDI = *(*0x20 + -0x290);\n                                    goto code_r0x004511d3;\n                                }\n                                uVar6 = iVar3;\n                                if (0xfffff < uVar6) break;\n                                *(*0x20 + -0x298) = uVar6 * 5;\n                                iVar11 = *(*0x20 + -0x108);\n                                *(*0x20 + -0x248) = *(iVar11 + 0xc + uVar6 * 0x14);\n                                *(*0x20 + -0x228) = *(iVar11 + uVar6 * 0x14 + 2);\n                                *(*0x20 + -0xa8) = iVar11 + uVar6 * 0x14;\n                                in_R11 = *(*0x20 + 8);\n                                if ((in_R11 & 1) == 0) {\n                                    *(*0x20 + -0x370) = 0x45106f;\n                                    cVar2 = fcn.00452e20(*(*0x20 + -0x70), *(*0x20 + -0x290), *(*0x20 + -0x338));\n                                    if (cVar2 != '\\0') goto code_r0x00451085;\n                                    unaff_RDI = *(*0x20 + -0x290);\n                                }\n                                else {\ncode_r0x00451085:\n                                    uVar5 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x370) = 0x45109a;\n                                    uVar7 = fcn.0044ae60();\n                                    *(*0x20 + -0x100) = uVar7;\n                                    *(*0x20 + -0x300) = uVar5;\n                                    uVar5 = *(*0x20 + -0x278);\n                                    uVar7 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x370) = 0x4510c5;\n                                    uVar8 = fcn.0044b2a0(uVar5);\n                                    *(*0x20 + -0xd8) = uVar8;\n                                    *(*0x20 + -0x2e8) = uVar7;\n                                    *(*0x20 + -0x330) = uVar5;\n                                    *(*0x20 + -0x370) = 0x4510de;\n                                    fcn.00433860();\n                                    *(*0x20 + -0x370) = 0x4510f0;\n                                    fcn.00434160();\n                                    *(*0x20 + -0x370) = 0x451105;\n                                    fcn.00434160();\n                                    *(*0x20 + -0x370) = 0x45110a;\n                                    fcn.004338e0();\n                                    *(*0x20 + -0x370) = 0x45110f;\n                                    fcn.00433860();\n                                    *(*0x20 + -0x370) = 0x451125;\n                                    fcn.00434160();\n                                    *(*0x20 + -0x370) = 0x45113a;\n                                    fcn.00434160();\n                                    *(*0x20 + -0x370) = 0x45114b;\n                                    fcn.00434160();\n                                    *(*0x20 + -0x370) = 0x451157;\n                                    fcn.00433f60(*(*0x20 + -0x330));\n                                    *(*0x20 + -0x370) = 0x45115c;\n                                    fcn.00433ac0();\n                                    *(*0x20 + -0x370) = 0x451165;\n                                    fcn.004338e0();\n                                    unaff_RDI = *(*0x20 + -0x290) + 1;\n                                }\n                                piVar15 = *(*0x20 + -0x60);\n                                uVar6 = *(*(*0x20 + -0xa8) + 2);\n                                arg4 = *(*0x20 + -0x108);\n                                arg3 = arg4 + *(*0x20 + -0x298) * 4 + 0x10;\n                                in_R10 = **arg3 + *piVar15;\n                            }\n                            *(*0x20 + -0x370) = 0x4515b0;\n                            ppcVar9 = fcn.0045c5a0(0x100000);\n                            while( true ) {\n                                uVar12 = *(arg4 + 2);\n                                iVar3 = *(arg3[1] + piVar15 * 4);\n                                iVar11 = **(*0x20 + -0x60);\n                                ppcVar20 = iVar3 + iVar11 + 1;\n                                *(*0x20 + -0x268) = in_R10;\n                                ppcVar16 = iVar3 + iVar11;\ncode_r0x004515e0:\n                                unaff_RDI = ppcVar16;\n                                *(*0x20 + -0x278) = ppcVar20;\n                                *(*0x20 + -0x270) = ppcVar9;\n                                *(*0x20 + -0x338) = uVar12;\n                                unaff_RSI = *0x20 + -0x220;\n                                *(*0x20 + -0x370) = 0x451614;\n                                arg4 = unaff_RDI;\n                                iVar3 = fcn.0044b560(2);\n                                if (iVar3 < 0) break;\n                                uVar6 = iVar3;\n                                if (0xfffff < uVar6) goto code_r0x004517d9;\n                                piVar15 = uVar6 * 5;\n                                arg3 = *(*0x20 + -0x118);\n                                arg4 = arg3 + uVar6 * 0x14;\n                                if ((((*(arg3 + uVar6 * 0x14 + 2) == '\\x16') &&\n                                     (cVar2 = *(*0x20 + -0x338),  cVar2 != '\\t')) && (cVar2 != '\\x13')) &&\n                                   (cVar2 != '\\x0f')) {\n                                    in_R11 = *(*0x20 + 0x40);\n                                    ppcVar9 = *(*0x20 + -0x270);\n                                    in_R10 = *(*0x20 + -0x268);\n                                }\n                                else {\n                                    in_R10 = *(*0x20 + -0x268);\n                                    if (in_R10 < 1) {\n                                        in_R11 = *(*0x20 + 0x40);\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                        if (ppcVar9 < in_R11) {\n                                            if (0xfffff < ppcVar9) goto code_r0x004517cf;\n                                            *(*(*0x20 + 0x38) + ppcVar9 * 8) = *(*0x20 + -0x278);\n                                            ppcVar9 = ppcVar9 + 1;\n                                        }\n                                    }\n                                    else {\n                                        in_R10 = in_R10 + -1;\n                                        in_R11 = *(*0x20 + 0x40);\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                    }\n                                }\n                            }\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0xe8);\n                            in_R10 = *(*0x20 + -0x339);\n                            in_R11 = *(*0x20 + 0x38);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            uVar6 = *(*0x20 + -0x338);\n                            ppcVar9 = *(*0x20 + -0x270);\n                            ppcVar20 = *(*0x20 + -0x278);\n                            arg4 = *(*0x20 + -0x268);\n                        } while( true );\n                    }\n                }\ncode_r0x00450dd0:\n                while( true ) {\n                    if (*(*0x20 + -0x339) != '\\0') {\n                        ppcVar9 = unaff_RDI;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= ppcVar9)) break;\n                    pcVar18 = arg1[0x10];\n                    if (pcVar18 == *(*0x20 + -0x38)) {\n                        return ppcVar9;\n                    }\n                    *(*0x20 + -600) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x260) = pcVar18;\n                    *(*0x20 + -0x2f8) = ppcVar9;\n                    *(*0x20 + -0x280) = arg1[0x13];\n                    *(*0x20 + -0x370) = 0x450e3e;\n                    fcn.00433860();\n                    *(*0x20 + -0x370) = 0x450e4f;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450e5c;\n                    fcn.00433f60();\n                    *(*0x20 + -0x370) = 0x450e6d;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450e7a;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x370) = 0x450e8b;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450e98;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x370) = 0x450e9d;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x370) = 0x450ea5;\n                    fcn.004338e0();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -600) = arg1;\n                    *(*0x20 + -0x260) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x370) = 0x450ec9;\n                    fcn.00433860();\n                    *(*0x20 + -0x370) = 0x450eda;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450ee7;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x370) = 0x450ef8;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450f05;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x370) = 0x450f16;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450f25;\n                    fcn.00433f60();\n                    *(*0x20 + -0x370) = 0x450f36;\n                    fcn.00434160();\n                    *(*0x20 + -0x370) = 0x450f45;\n                    fcn.00433f60();\n                    *(*0x20 + -0x370) = 0x450f4a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x370) = 0x450f4f;\n                    fcn.004338e0();\n                    *(*0x20 + -0x370) = 0x450f65;\n                    ppcVar9 = in_R10;\n                    fcn.004320e0();\n                    in_R10 = ppcVar9;\n                }\n                return ppcVar9;\n            }\n            goto code_r0x00451865;\n        }\n        goto code_r0x00451876;\n    }\n    goto code_r0x00451888;\ncode_r0x004511d3:\n    *(*0x20 + -0x290) = unaff_RDI;\n    *(*0x20 + -0x278) = in_R10;\n    if ((*(*0x20 + 8) & 1) == 0) {\n        *(*0x20 + -0x370) = 0x451225;\n        cVar2 = fcn.00452e20(arg1, in_R10 & 0xffffffffffffff00 | unaff_RDI == NULL, uVar10);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        unaff_RDI = *(*0x20 + -0x290);\n        arg3 = *(*0x20 + -0xe8);\n        arg4 = *(*0x20 + 0x48);\n        ppcVar19 = *(*0x20 + -0xc0);\n        iVar11 = *(*0x20 + -0xb0);\n        iVar21 = *(*0x20 + -0x2d0);\n        ppcVar9 = *(*0x20 + -0x270);\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 != '\\0') {\n        uVar5 = *(*0x20 + -0xd0);\n        *(*0x20 + -0x370) = 0x45129f;\n        uVar7 = fcn.0044ae60();\n        *(*0x20 + -0xf8) = uVar7;\n        *(*0x20 + -0x308) = uVar5;\n        uVar5 = *(*0x20 + -0x278);\n        uVar7 = *(*0x20 + -0xd0);\n        *(*0x20 + -0x370) = 0x4512c9;\n        uVar8 = fcn.0044b2a0(uVar5);\n        *(*0x20 + -0xe0) = uVar8;\n        *(*0x20 + -0x2e0) = uVar7;\n        *(*0x20 + -0x334) = uVar5;\n        iVar11 = *(*0x20 + -0x308);\n        if (iVar11 == 0xf) {\n            piVar15 = *(*0x20 + -0xf8);\n            if ((((*piVar15 == 0x2e656d69746e7572) && (*(piVar15 + 1) == 0x61706f67)) && (*(piVar15 + 0xc) == 0x696e))\n               && (*(piVar15 + 0xe) == 'c')) {\n                iVar11 = 5;\n                piVar15 = 0x4ace1b;\n            }\n        }\n        else {\n            piVar15 = *(*0x20 + -0xf8);\n        }\n        *(*0x20 + -0x308) = iVar11;\n        *(*0x20 + -0xf8) = piVar15;\n        *(*0x20 + -0x370) = 0x45133e;\n        fcn.00433860();\n        *(*0x20 + -0x370) = 0x451350;\n        fcn.00434160();\n        *(*0x20 + -0x370) = 0x451365;\n        fcn.00434160();\n        *(*0x20 + -0x370) = 0x45136a;\n        fcn.004338e0();\n        *(*0x20 + -0x370) = 0x451387;\n        fcn.00451900(*(*0x20 + -0x20));\n        *(*0x20 + -0x370) = 0x45138c;\n        fcn.00433860();\n        *(*0x20 + -0x370) = 0x45139d;\n        fcn.00434160();\n        *(*0x20 + -0x370) = 0x4513a5;\n        fcn.004338e0();\n        *(*0x20 + -0x370) = 0x4513aa;\n        fcn.00433860();\n        *(*0x20 + -0x370) = 0x4513bb;\n        fcn.00434160();\n        *(*0x20 + -0x370) = 0x4513d0;\n        fcn.00434160();\n        *(*0x20 + -0x370) = 0x4513e5;\n        fcn.00434160();\n        *(*0x20 + -0x370) = 0x4513f1;\n        fcn.00433f60();\n        *(*0x20 + -0x370) = 0x4513f6;\n        fcn.004338e0();\n        uVar6 = **(*0x20 + -0xc0);\n        if (uVar6 < *(*0x20 + -0x50)) {\n            *(*0x20 + -0x278) = *(*0x20 + -0x50);\n            *(*0x20 + -0x2a0) = uVar6;\n            *(*0x20 + -0x370) = 0x451425;\n            fcn.00433860();\n            *(*0x20 + -0x370) = 0x451436;\n            fcn.00434160();\n            *(*0x20 + -0x370) = 0x45144e;\n            fcn.00433fc0(*(*0x20 + -0x2a0));\n            *(*0x20 + -0x370) = 0x451453;\n            fcn.004338e0();\n        }\n        iVar11 = *(*(*0x20 + -0x70) + 0x30);\n        if ((((iVar11 != 0) && (0 < *(iVar11 + 0xc4))) && (*(iVar11 + 0x90) == *(*0x20 + -0x70))) ||\n           (1 < *(*0x20 + -0x32c))) {\n            *(*0x20 + -0x278) = *(*0x20 + -0x30);\n            *(*0x20 + -0x2a0) = *(*0x20 + -0x38);\n            *(*0x20 + -0x2a8) = *(*0x20 + -0x50);\n            *(*0x20 + -0x370) = 0x4514c5;\n            fcn.00433860();\n            *(*0x20 + -0x370) = 0x4514d6;\n            fcn.00434160();\n            *(*0x20 + -0x370) = 0x4514e5;\n            fcn.00433fc0();\n            *(*0x20 + -0x370) = 0x4514f6;\n            fcn.00434160();\n            *(*0x20 + -0x370) = 0x451505;\n            fcn.00433fc0();\n            *(*0x20 + -0x370) = 0x451516;\n            fcn.00434160();\n            *(*0x20 + -0x370) = 0x451525;\n            fcn.00433fc0();\n            *(*0x20 + -0x370) = 0x45152a;\n            fcn.004338e0();\n        }\n        *(*0x20 + -0x370) = 0x45152f;\n        fcn.00433860();\n        *(*0x20 + -0x370) = 0x451534;\n        fcn.00433ac0();\n        *(*0x20 + -0x370) = 0x451539;\n        fcn.004338e0();\n        unaff_RDI = *(*0x20 + -0x290) + 1;\n        ppcVar9 = *(*0x20 + -0x270);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + -0xe8);\n        arg4 = *(*0x20 + 0x48);\n        ppcVar19 = *(*0x20 + -0xc0);\n        iVar11 = *(*0x20 + -0xb0);\n        iVar21 = *(*0x20 + -0x2d0);\n    }\n    uVar6 = *(ppcVar19 + 5);\ncode_r0x00450cda:\n    ppcVar9 = ppcVar9 + 1;\n    if ((*(ppcVar19 + 5) == '\\x04') && (0 < iVar21)) {\n        *(*0x20 + -0x2d8) = *(iVar11 + -8 + iVar21 * 8);\n        in_R11 = *(*0x20 + -0x268);\n        if ((in_R11 == NULL) && (arg4 == NULL)) {\n            *(*0x20 + -0x288) = unaff_RDI;\n            *(*0x20 + -0x336) = uVar6;\n            *(*0x20 + -0x370) = 0x450d3a;\n            ppcVar9 = fcn.00451e60(*(*0x20 + -0x2d8));\n            arg1 = *(*0x20 + -0x70);\n            uVar6 = *(*0x20 + -0x336);\n            unaff_RSI = *(*0x20 + 0x40);\n            unaff_RDI = *(*0x20 + -0x288);\n            arg3 = *(*0x20 + -0xe8);\n            in_R11 = *(*0x20 + -0x268);\n            ppcVar19 = *(*0x20 + -0xc0);\n            iVar11 = *(*0x20 + -0xb0);\n            iVar21 = *(*0x20 + -0x2d0);\n        }\n        iVar21 = iVar21 + -1;\n    }\n    else {\n        in_R11 = *(*0x20 + -0x268);\n    }\n    pcVar18 = *(ppcVar19 + 5);\n    in_R10 = ppcVar9;\n    if (arg3 == NULL) goto code_r0x00450dd0;\ncode_r0x0045016f:\n    *(*0x20 + -0x60) = arg3;\n    *(*0x20 + -0x58) = *(*0x20 + -200);\n    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n    *(*0x20 + -0x40) = 0;\n    *(*0x20 + -0x38) = *(*0x20 + -0x30);\n    *(*0x20 + -0x30) = 0;\n    *(*0x20 + -0x10) = 0;\n    cVar2 = pcVar18 == '\\x13';\n    arg4 = *(*0x20 + -600);\n    arg3 = NULL;\n    in_R10 = *(*0x20 + -0x260);\n    goto code_r0x004501ef;\ncode_r0x004517e5:\n    *(*0x20 + -0x370) = 0x4517f6;\n    fcn.004320e0();\ncode_r0x004517f6:\n    uVar5 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x370) = 0x451806;\n    uVar7 = fcn.0044ae60();\n    *(*0x20 + -0xa0) = uVar7;\n    *(*0x20 + -0x268) = uVar5;\n    *(*0x20 + -0x370) = 0x45181b;\n    fcn.00433860();\n    *(*0x20 + -0x370) = 0x45182c;\n    fcn.00434160();\n    *(*0x20 + -0x370) = 0x451845;\n    fcn.00434160();\n    *(*0x20 + -0x370) = 0x45184a;\n    fcn.00433ac0();\n    *(*0x20 + -0x370) = 0x45184f;\n    fcn.004338e0();\n    *(*0x20 + -0x370) = 0x451865;\n    fcn.004320e0();\ncode_r0x00451865:\n    *(*0x20 + -0x370) = 0x451876;\n    fcn.004320e0();\ncode_r0x00451876:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x370) = 0x451887;\n    in_RAX = fcn.004320e0();\ncode_r0x00451888:\n    *(puVar14 + 0x10) = in_RAX;\n    *(puVar14 + 0x18) = unaff_RBX;\n    *(puVar14 + 0x20) = arg1;\n    *(puVar14 + 0x28) = unaff_RDI;\n    *(puVar14 + 0x30) = unaff_RSI;\n    *(puVar14 + 0x38) = arg3;\n    *(puVar14 + 0x40) = arg4;\n    *(puVar14 + 0x48) = in_R10;\n    *(puVar14 + 0x50) = in_R11;\n    *(puVar14 + -8) = 0x4518ba;\n    fcn.00459ea0();\n    in_RAX = *(puVar14 + 0x10);\n    unaff_RBX = *(puVar14 + 0x18);\n    arg1 = *(puVar14 + 0x20);\n    unaff_RDI = *(puVar14 + 0x28);\n    unaff_RSI = *(puVar14 + 0x30);\n    arg3 = *(puVar14 + 0x38);\n    arg4 = *(puVar14 + 0x40);\n    in_R10 = *(puVar14 + 0x48);\n    in_R11 = *(puVar14 + 0x50);\n    *0x20 = puVar14;\n    goto code_r0x0044fea0;\n}\n",
        "token_count": 13275
    },
    "00452440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452440(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (((((*0x7895af != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.0045cb20();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.00453820();\n    }\n    uVar2 = *(unaff_RDI + 0x90) & 0xffffefff;\n    if (uVar2 == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.0044fea0(arg1, uVar2, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.0044fea0(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    fcn.00452100();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (0 < iVar1) {\n        iVar3 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.00452760(puStack56[2]);\n            iVar3 = iVar3 + 1;\n            if (iVar1 <= iVar3) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 780
    },
    "00452920": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452920(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x88) = 0x45295f;\n            uVar4 = fcn.0044ae60();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x50) = unaff_RBX;\n            iVar7 = *(*0x20 + -0x10);\n            if (*(iVar7 + 0x2b) < 4) {\n                iVar7 = 0;\n            }\n            else {\n                iVar6 = iVar7 + *(iVar7 + 0x20) * 4 + 0x2c;\n                if ((iVar6 >> 2 & 1) != 0) {\n                    if ((iVar7 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x30) = iVar6;\n                        *(*0x20 + -0x88) = 0x4529a8;\n                        fcn.00433860();\n                        *(*0x20 + -0x88) = 0x4529b9;\n                        fcn.00434160();\n                        *(*0x20 + -0x88) = 0x4529c5;\n                        fcn.004340e0();\n                        *(*0x20 + -0x88) = 0x4529ca;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x88) = 0x4529cf;\n                        fcn.004338e0();\n                        uVar4 = *(*0x20 + -0x28);\n                        iVar6 = *(*0x20 + -0x30);\n                        unaff_RBX = *(*0x20 + -0x50);\n                    }\n                    iVar6 = iVar6 + 4;\n                }\n                iVar7 = *(iVar6 + 0x18);\n            }\n            if (iVar7 == 0) goto code_r0x00452a59;\n            *(*0x20 + -0x38) = iVar7;\n            unaff_RBX = *(*0x20 + -0x18);\n            *(*0x20 + -0x88) = 0x452a16;\n            iVar3 = fcn.0044b560(2);\n            if (iVar3 < 0) {\n                unaff_RBX = *(*0x20 + -0x50);\n                uVar4 = *(*0x20 + -0x28);\n                goto code_r0x00452a59;\n            }\n            if (iVar3 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x38) + 0xc + iVar3 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x452a48;\n                uVar4 = fcn.0044afc0(uVar1);\ncode_r0x00452a59:\n                *(*0x20 + -0x50) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar4;\n                uVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x452a7e;\n                uVar5 = fcn.0044b180(uVar4);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x48) = uVar2;\n                *(*0x20 + -0x54) = uVar4;\n                iVar7 = *(*0x20 + -0x50);\n                if (iVar7 == 0xf) {\n                    piVar9 = *(*0x20 + -0x28);\n                    if ((((*piVar9 == 0x2e656d69746e7572) && (*(piVar9 + 1) == 0x61706f67)) &&\n                        (*(piVar9 + 0xc) == 0x696e)) && (*(piVar9 + 0xe) == 'c')) {\n                        iVar7 = 5;\n                        piVar9 = 0x4ace1b;\n                    }\n                }\n                else {\n                    piVar9 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = iVar7;\n                *(*0x20 + -0x28) = piVar9;\n                *(*0x20 + -0x88) = 0x452ae5;\n                fcn.00433860();\n                *(*0x20 + -0x88) = 0x452af4;\n                fcn.00434160();\n                *(*0x20 + -0x88) = 0x452b05;\n                fcn.00434160();\n                *(*0x20 + -0x88) = 0x452b0a;\n                fcn.004338e0();\n                *(*0x20 + -0x88) = 0x452b0f;\n                fcn.00433860();\n                *(*0x20 + -0x88) = 0x452b25;\n                fcn.00434160();\n                *(*0x20 + -0x88) = 0x452b34;\n                fcn.00434160();\n                *(*0x20 + -0x88) = 0x452b45;\n                fcn.00434160();\n                *(*0x20 + -0x88) = 0x452b51;\n                fcn.00433f60();\n                *(*0x20 + -0x88) = 0x452b56;\n                fcn.004338e0();\n                if (**(*0x20 + -0x10) < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x40) = **(*0x20 + -0x10);\n                    *(*0x20 + -0x88) = 0x452b75;\n                    fcn.00433860();\n                    *(*0x20 + -0x88) = 0x452b86;\n                    fcn.00434160();\n                    *(*0x20 + -0x88) = 0x452b9b;\n                    fcn.00433fc0(*(*0x20 + -0x40));\n                    *(*0x20 + -0x88) = 0x452ba5;\n                    fcn.004338e0();\n                }\n                *(*0x20 + -0x88) = 0x452baa;\n                fcn.00433860();\n                *(*0x20 + -0x88) = 0x452baf;\n                fcn.00433ac0();\n                *(*0x20 + -0x88) = 0x452bb4;\n                fcn.004338e0();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x88) = 0x452bc8;\n            in_RAX = fcn.0045c5a0(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + -8) = 0x452bdd;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1967
    },
    "004530c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004530c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045de80();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.004338e0();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    if (0 < iVar3) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 444
    },
    "00455cc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00455cc0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045c5a0(0);\n    }\n    fcn.0045c660(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 803
    },
    "00455ea0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00455ea0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x00455fec;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00455f40;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045c5a0(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00455f40:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045c5a0(unaff_RBX);\n    }\n    fcn.0045c5a0(unaff_RBX);\ncode_r0x00455fec:\n    fcn.0045c5a0(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 604
    },
    "00457bc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00457bc0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00457c56:\n            uVar1 = 4;\n            goto code_r0x00457c92;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00457c92;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00457c92;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00457c92;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00457c56;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00457c92;\n        }\n    }\n    uVar3 = fcn.00449a80();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00457c92:\n    if ((*0x7895b0 != '\\0') || (*0x7895ae != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x71d188;\n    *0x71d188 = uVar1 | *0x78961c;\n    return uVar2;\n}\n",
        "token_count": 608
    },
    "00462ee0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00462ee0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX < 1) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x7215a0);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x71e020)) || (*(iVar1 + 0x71e021) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045c5a0(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 576
    },
    "004630a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004630a0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX < 1) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x7215a0);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x71e020)) || (*(iVar1 + 0x71e021) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045c5a0(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 576
    },
    "00463380": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00463380(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x004634cc;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00463420;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045c5a0(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00463420:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045c5a0(unaff_RBX);\n    }\n    fcn.0045c5a0(unaff_RBX);\ncode_r0x004634cc:\n    fcn.0045c5a0(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 601
    },
    "004634e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004634e0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x00463633;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x7215a0);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x00463628:\n                        fcn.0045c5a0(unaff_RBX);\ncode_r0x00463633:\n                        fcn.0045c5a0(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x71e020)) || (*(iVar1 + 0x71e021) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046361d:\n                            fcn.0045c5a0(unaff_RBX);\n                            goto code_r0x00463628;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045c5a0(unaff_RBX);\n                                    goto code_r0x0046361d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "00464d00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00464d00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    int64_t iVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t aiStack20 [3];\n    \n    if (2 < in_RAX) {\n        return 0xfffd;\n    }\n    iVar5 = 0;\n    uVar4 = unaff_RDI;\n    while( true ) {\n        uVar6 = uVar4;\n        if (uVar6 <= iVar5) {\n            return unaff_EBX;\n        }\n        iVar7 = (uVar6 - iVar5) / 2;\n        uVar4 = iVar7 + iVar5;\n        if (unaff_RDI <= uVar4) break;\n        iVar1 = arg1 + uVar4 * 0x14;\n        iVar3 = *(arg1 + uVar4 * 0x14);\n        aiStack20[0] = *(iVar1 + 8);\n        aiStack20[1] = *(iVar1 + 0xc);\n        aiStack20[2] = *(iVar1 + 0x10);\n        if (iVar3 <= unaff_EBX) {\n            if (unaff_EBX <= *(iVar1 + 4)) {\n                if (aiStack20[in_RAX] < 0x110000) {\n                    return aiStack20[in_RAX] + unaff_EBX;\n                }\n                return (unaff_EBX - iVar3 & 0xfffffffe | in_RAX & 1) + iVar3;\n            }\n            if (iVar3 <= unaff_EBX) {\n                iVar5 = iVar7 + iVar5 + 1;\n                uVar4 = uVar6;\n            }\n        }\n    }\n    fcn.0045c5a0(unaff_RDI);\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 473
    },
    "004690e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004690e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX == 1) {\n        return 0x4aced9;\n    }\n    if (in_RAX == 2) {\n        return 0x4acfbd;\n    }\n    if (in_RAX == 3) {\n        return 0x4acc70;\n    }\n    fcn.00463640();\n    uVar1 = fcn.00448ba0(7);\n    return uVar1;\n}\n",
        "token_count": 179
    },
    "0046a3e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046a3e0(ulong noname_0, ulong noname_1, ulong noname_2, uint32_t *arg4)\n\n{\n    code *pcVar1;\n    uint32_t *in_RAX;\n    uint32_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    uint32_t *unaff_RDI;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t in_R10;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puStack0000000000000038;\n    uint32_t uStack44;\n    uint64_t uStack16;\n    \n    puStack0000000000000038 = arg4;\n    if (0xf < in_R10) {\n        uVar6 = *arg4;\n        uVar9 = arg4[1];\n        uVar10 = arg4[2];\n        in_R10 = uVar10;\n        uVar5 = arg4[3];\n        uVar4 = unaff_RBX;\n        if (unaff_RBX != 0) {\n            if (1 < unaff_RBX) {\n                if (2 < unaff_RBX) {\n                    in_R10 = (uVar10 >> 0x18 | (uVar10 & 0xff0000) >> 8 | (uVar10 & 0xff00) << 8 | uVar10 << 0x18) ^\n                             in_RAX[2];\n                    if (3 < unaff_RBX) {\n                        uVar5 = (uVar5 >> 0x18 | (uVar5 & 0xff0000) >> 8 | (uVar5 & 0xff00) << 8 | uVar5 << 0x18) ^\n                                in_RAX[3];\n                        uVar3 = (unaff_RBX >> 2) - 2;\n                        uStack44 = 0;\n                        uStack16 = 4;\n                        uVar2 = 0;\n                        uVar4 = 0;\n                        uVar6 = (uVar6 >> 0x18 | (uVar6 & 0xff0000) >> 8 | (uVar6 & 0xff00) << 8 | uVar6 << 0x18) ^\n                                *in_RAX;\n                        uVar9 = (uVar9 >> 0x18 | (uVar9 & 0xff0000) >> 8 | (uVar9 & 0xff00) << 8 | uVar9 << 0x18) ^\n                                in_RAX[1];\n                        uVar10 = 0;\n                        for (iVar8 = 0; iVar8 < uVar3; iVar8 = iVar8 + 1) {\n                            uVar4 = uVar3;\n                            if (unaff_RBX <= uStack16) goto code_r0x0046a81d;\n                            uVar10 = in_R10;\n                            uVar4 = 0x727a20;\n                            uVar2 = *((uVar6 >> 0x18) * 4 + 0x726e20) ^ in_RAX[uStack16] ^\n                                    *((uVar5 >> 0x10 & 0xff) * 4 + 0x727220) ^ *((uVar10 >> 8 & 0xff) * 4 + 0x727620) ^\n                                    *((uVar9 & 0xff) * 4 + 0x727a20);\n                            uVar7 = uStack16 + 1;\n                            if (unaff_RBX <= uVar7) goto code_r0x0046a815;\n                            uVar7 = uVar9;\n                            uStack44 = *((uVar9 >> 0x18) * 4 + 0x726e20) ^ in_RAX[uStack16 + 1] ^\n                                       *((uVar6 >> 0x10 & 0xff) * 4 + 0x727220) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x727620)\n                                       ^ *((in_R10 & 0xff) * 4 + 0x727a20);\n                            if (unaff_RBX <= uStack16 + 2) goto code_r0x0046a80d;\n                            uVar7 = uVar5;\n                            in_R10 = *((uVar10 >> 0x18) * 4 + 0x726e20) ^ in_RAX[uStack16 + 2] ^\n                                     *((uVar9 >> 0x10 & 0xff) * 4 + 0x727220) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x727620) ^\n                                     *((uVar7 & 0xff) * 4 + 0x727a20);\n                            if (unaff_RBX <= uStack16 + 3) goto code_r0x0046a805;\n                            uVar5 = *((uVar5 >> 0x18) * 4 + 0x726e20) ^ in_RAX[uStack16 + 3] ^\n                                    *((uVar10 >> 0x10 & 0xff) * 4 + 0x727220) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x727620) ^\n                                    *((uVar6 & 0xff) * 4 + 0x727a20);\n                            uStack16 = uStack16 + 4;\n                            uVar4 = in_R10;\n                            uVar6 = uVar2;\n                            uVar9 = uStack44;\n                            uVar10 = uVar5;\n                        }\n                        uVar6 = *((uStack44 >> 8 & 0xff) + 0x7213a0) << 8 |\n                                *((uVar10 >> 0x18) + 0x7213a0) << 0x18 | *((uVar4 >> 0x10 & 0xff) + 0x7213a0) << 0x10;\n                        uVar7 = uVar6;\n                        if (uStack16 < unaff_RBX) {\n                            uVar9 = (*((uStack44 & 0xff) + 0x7213a0) |\n                                    *((uVar2 >> 0x18) + 0x7213a0) << 0x18 |\n                                    *((uVar10 >> 0x10 & 0xff) + 0x7213a0) << 0x10 |\n                                    *((uVar4 >> 8 & 0xff) + 0x7213a0) << 8) ^ in_RAX[uStack16];\n                            if (uStack16 + 1 < unaff_RBX) {\n                                uVar5 = (*((uVar4 & 0xff) + 0x7213a0) |\n                                        *((uStack44 >> 0x18) + 0x7213a0) << 0x18 |\n                                        *((uVar2 >> 0x10 & 0xff) + 0x7213a0) << 0x10 |\n                                        *((uVar10 >> 8 & 0xff) + 0x7213a0) << 8) ^ in_RAX[uStack16 + 1];\n                                if (uStack16 + 2 < unaff_RBX) {\n                                    uVar10 = (*((uVar10 & 0xff) + 0x7213a0) |\n                                             *((uVar4 >> 0x18) + 0x7213a0) << 0x18 |\n                                             *((uStack44 >> 0x10 & 0xff) + 0x7213a0) << 0x10 |\n                                             *((uVar2 >> 8 & 0xff) + 0x7213a0) << 8) ^ in_RAX[uStack16 + 2];\n                                    if (uStack16 + 3 < unaff_RBX) {\n                                        uVar6 = (*((uVar2 & 0xff) + 0x7213a0) | uVar6) ^ in_RAX[uStack16 + 3];\n                                        if (0xf < unaff_RSI) {\n                                            *unaff_RDI = uVar9 >> 0x18 | (uVar9 & 0xff0000) >> 8 | (uVar9 & 0xff00) << 8\n                                                         | uVar9 << 0x18;\n                                            unaff_RDI[1] = uVar5 >> 0x18 | (uVar5 & 0xff0000) >> 8 |\n                                                           (uVar5 & 0xff00) << 8 | uVar5 << 0x18;\n                                            unaff_RDI[2] = uVar10 >> 0x18 | (uVar10 & 0xff0000) >> 8 |\n                                                           (uVar10 & 0xff00) << 8 | uVar10 << 0x18;\n                                            unaff_RDI[3] = uVar6 >> 0x18 | (uVar6 & 0xff0000) >> 8 |\n                                                           (uVar6 & 0xff00) << 8 | uVar6 << 0x18;\n                                            return;\n                                        }\n                                        fcn.0045c5a0(unaff_RSI);\n                                        unaff_RBX = unaff_RSI;\n                                    }\n                                    fcn.0045c5a0(unaff_RBX);\n                                }\n                                fcn.0045c5a0(unaff_RBX);\n                            }\n                            fcn.0045c5a0(unaff_RBX);\n                        }\n                        fcn.0045c5a0(unaff_RBX);\n                        uVar4 = uStack16;\ncode_r0x0046a805:\n                        fcn.0045c5a0(unaff_RBX);\ncode_r0x0046a80d:\n                        fcn.0045c5a0(unaff_RBX);\ncode_r0x0046a815:\n                        fcn.0045c5a0(unaff_RBX);\n                        in_R10 = uVar7;\ncode_r0x0046a81d:\n                        fcn.0045c5a0(unaff_RBX);\n                    }\n                    fcn.0045c5a0(uVar4);\n                }\n                fcn.0045c5a0(uVar4);\n            }\n            fcn.0045c5a0(uVar4);\n        }\n        fcn.0045c5a0(uVar4);\n    }\n    fcn.0045c5a0(in_R10);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2377
    },
    "0046a880": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046a880(int64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    uint32_t uVar7;\n    int64_t iStack0000000000000038;\n    \n    uVar4 = unaff_RBX >> 2;\n    for (uVar6 = 0; iStack0000000000000038 = arg4,  uVar6 < uVar4; uVar6 = uVar6 + 1) {\n        uVar5 = uVar6 * 4;\n        arg1_00 = unaff_RBX;\n        if (unaff_RBX < uVar5) goto code_r0x0046ab97;\n        arg1_00 = unaff_RBX + uVar6 * -4;\n        if (arg1_00 < 4) goto code_r0x0046ab8a;\n        uVar7 = *(in_RAX + (uVar5 & uVar5 - arg1 >> 0x3f));\n        arg1_00 = uVar7;\n        if (unaff_RSI <= uVar6) goto code_r0x0046ab7f;\n        *(unaff_RDI + uVar6 * 4) = uVar7 >> 0x18 | (uVar7 & 0xff0000) >> 8 | (uVar7 & 0xff00) << 8 | uVar7 << 0x18;\n    }\n    do {\n        if (unaff_RSI <= uVar6) {\n            if (arg4 == 0) {\n                return;\n            }\n            iVar2 = 0;\n            do {\n                if (unaff_RSI <= iVar2) {\n                    return;\n                }\n                for (unaff_RBX = 0; unaff_RBX < 4; unaff_RBX = unaff_RBX + 1) {\n                    uVar6 = (unaff_RBX + (unaff_RSI - iVar2)) - 4;\n                    uVar4 = unaff_RSI;\n                    if (unaff_RSI <= uVar6) {\ncode_r0x0046ab48:\n                        fcn.0045c5a0(uVar4);\n                        unaff_RSI = unaff_RSI - iVar2;\n                        goto code_r0x0046ab50;\n                    }\n                    uVar7 = *(unaff_RDI + uVar6 * 4);\n                    if ((0 < iVar2) && (iVar2 + 4 < unaff_RSI)) {\n                        uVar7 = *(str.cw[uVar7 >> 0x18] * 4 + 0x726e20) ^ *(str.cw[uVar7 >> 0x10 & 0xff] * 4 + 0x727220)\n                                ^ *(str.cw[uVar7 >> 8 & 0xff] * 4 + 0x727620) ^ *(str.cw[uVar7 & 0xff] * 4 + 0x727a20);\n                    }\n                    if (in_R10 <= unaff_RBX + iVar2) {\n                        fcn.0045c5a0(in_R10);\n                        uVar4 = in_R10;\n                        goto code_r0x0046ab48;\n                    }\n                    *(arg4 + (unaff_RBX + iVar2) * 4) = uVar7;\n                }\n                iVar2 = iVar2 + 4;\n            } while( true );\n        }\n        arg1_00 = unaff_RBX;\n        if (unaff_RSI <= uVar6 - 1) goto code_r0x0046ab77;\n        uVar7 = *(unaff_RDI + -4 + uVar6 * 4);\n        unaff_RBX = uVar7;\n        if (uVar4 == 0) goto code_r0x0046ab72;\n        if (uVar4 == 0xffffffffffffffff) {\n            iVar2 = -uVar6;\n            iVar3 = 0;\n        }\n        else {\n            iVar2 = uVar6 / uVar4;\n            iVar3 = uVar6 % uVar4;\n        }\n        if (iVar3 == 0) {\n            unaff_RBX = iVar2 - 1;\n            if (0xf < unaff_RBX) goto code_r0x0046ab65;\n            uVar7 = *(iVar2 + 0x71d6bf) << 0x18 ^\n                    (str.cw[uVar7 >> 0x18] |\n                    str.cw[(uVar7 << 8) >> 0x10 & 0xff] << 0x10 | str.cw[(uVar7 << 8) >> 0x18] << 0x18 |\n                    str.cw[uVar7 & 0xff] << 8);\n        }\n        else if ((6 < uVar4) && (iVar3 == 4)) {\n            uVar7 = str.cw[uVar7 >> 0x18] << 0x18 | str.cw[uVar7 >> 0x10 & 0xff] << 0x10 |\n                    str.cw[uVar7 >> 8 & 0xff] << 8 | str.cw[unaff_RBX & 0xff];\n        }\n        unaff_RBX = 0x71d6c0;\n        if (unaff_RSI <= uVar6 - uVar4) goto code_r0x0046ab5b;\n        if (unaff_RSI <= uVar6) break;\n        *(unaff_RDI + uVar6 * 4) = uVar7 ^ *(unaff_RDI + (uVar6 - uVar4) * 4);\n        uVar6 = uVar6 + 1;\n    } while( true );\ncode_r0x0046ab50:\n    fcn.0045c5a0(unaff_RSI);\ncode_r0x0046ab5b:\n    fcn.0045c5a0(unaff_RSI);\ncode_r0x0046ab65:\n    fcn.0045c5a0(0x10);\ncode_r0x0046ab72:\n    fcn.0042fa00();\n    arg1_00 = unaff_RBX;\ncode_r0x0046ab77:\n    fcn.0045c5a0(unaff_RSI);\ncode_r0x0046ab7f:\n    fcn.0045c5a0(unaff_RSI);\ncode_r0x0046ab8a:\n    fcn.0045c5a0(arg1_00);\ncode_r0x0046ab97:\n    fcn.0045c660(arg1_00);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1577
    },
    "0046bb40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0046bb40(uint64_t arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t in_R10;\n    uint64_t in_R11;\n    uint32_t unaff_R12D;\n    int64_t unaff_R14;\n    \ncode_r0x0046bb40:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x24) = 0;\n        uVar3 = 0;\n        do {\n            if (3 < uVar3) {\n                uVar3 = 4;\n                unaff_RSI = 0;\n                unaff_RDI = 0;\n                goto code_r0x0046bca5;\n            }\n            if (arg3 == in_R10) {\n                if (uVar3 == 0) {\n                    return in_R10;\n                }\n                if ((uVar3 != 1) && (*(in_RAX + 0x140) == -1)) {\n                    unaff_RSI = 0;\n                    unaff_RDI = 0;\n                    goto code_r0x0046bca5;\n                }\n                *(*0x20 + -0x10) = in_R10;\n                *(*0x20 + -0x40) = 0x46bc68;\n                fcn.00409700();\n                return *(*0x20 + -0x10);\n            }\n            if (arg3 <= in_R10) goto code_r0x0046bf17;\n            uVar1 = *(in_R10 + unaff_RSI);\n            arg4 = uVar1;\n            in_R11 = in_R10 + 1;\n            uVar2 = *(in_RAX + 0x40 + arg4);\n            unaff_R12D = uVar2;\n            if (uVar2 == 0xff) {\n                if ((uVar1 != 10) && (uVar1 != 0xd)) {\n                    *(*0x20 + -0x10) = in_R11;\n                    unaff_R12D = *(in_RAX + 0x140);\n                    if (unaff_R12D != uVar1) {\n                        *(*0x20 + -0x40) = 0x46bc29;\n                        fcn.00409700();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (uVar3 < 2) {\n                        *(*0x20 + -0x40) = 0x46bc05;\n                        fcn.00409700();\n                        return *(*0x20 + -0x10);\n                    }\n                    arg1_00 = arg1;\n                    if (uVar3 == 2) goto code_r0x0046be73;\n                    goto code_r0x0046bdf3;\n                }\n                uVar3 = uVar3 - 1;\n            }\n            else {\n                if (3 < uVar3) goto code_r0x0046bf0a;\n                *(*0x20 + (uVar3 - 0x24)) = uVar2;\n            }\n            uVar3 = uVar3 + 1;\n            in_R10 = in_R11;\n        } while( true );\n    }\n    goto code_r0x0046bf26;\ncode_r0x0046bdf3:\n    arg1_00 = arg3;\n    if (arg1_00 <= in_R11) {\ncode_r0x0046be57:\n        unaff_RSI = 0;\n        unaff_RDI = 0;\n        in_R10 = in_R11;\ncode_r0x0046bca5:\n        *(*0x20 + -0x10) = in_R10;\n        uVar5 = *(*0x20 + -0x24) << 0x12 | *(*0x20 + -0x23) << 0xc;\n        uVar1 = *(*0x20 + -0x22);\n        arg1_00 = *(*0x20 + -0x21) | uVar1 << 6 | uVar5;\n        *(*0x20 + -0x22) = arg1_00;\n        *(*0x20 + -0x23) = (uVar1 << 6 | uVar5) >> 8;\n        arg4 = uVar5 >> 0x10;\n        *(*0x20 + -0x24) = uVar5 >> 0x10;\n        if (uVar3 == 2) {\ncode_r0x0046bd72:\n            arg1_00 = *(*0x20 + -0x24);\n            if (arg1 != 0) {\n                *unaff_RBX = *(*0x20 + -0x24);\n                if ((*(in_RAX + 0x144) != '\\0') && ((*(*0x20 + -0x23) != '\\0' || (*(*0x20 + -0x22) != '\\0')))) {\n                    *(*0x20 + -0x40) = 0x46bda5;\n                    fcn.00409700();\n                    return *(*0x20 + -0x10);\n                }\n                return in_R10;\n            }\n            *(*0x20 + -0x40) = 0x46bddc;\n            fcn.0045c5a0(0);\ncode_r0x0046bddc:\n            *(*0x20 + -0x40) = 0x46bde6;\n            fcn.0045c5a0(arg1);\n        }\n        else {\n            if (uVar3 == 3) {\ncode_r0x0046bd23:\n                arg1_00 = *(*0x20 + -0x23);\n                if (1 < arg1) {\n                    unaff_RBX[1] = *(*0x20 + -0x23);\n                    if ((*(in_RAX + 0x144) != '\\0') && (*(*0x20 + -0x22) != '\\0')) {\n                        *(*0x20 + -0x40) = 0x46bd52;\n                        fcn.00409700();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x23) = 0;\n                    goto code_r0x0046bd72;\n                }\n                goto code_r0x0046bddc;\n            }\n            if (uVar3 != 4) {\n                return in_R10;\n            }\n            if (2 < arg1) {\n                unaff_RBX[2] = arg1_00;\n                *(*0x20 + -0x22) = 0;\n                goto code_r0x0046bd23;\n            }\n        }\n        *(*0x20 + -0x40) = 0x46bdf0;\n        in_RAX = fcn.0045c5a0(arg1);\ncode_r0x0046bdf0:\n        in_R11 = in_R11 + 1;\n        arg3 = arg1_00;\n        goto code_r0x0046bdf3;\n    }\n    if (in_R11 < arg1_00) {\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n        if ((uVar1 != 10) && (uVar1 != 0xd)) {\n            if (arg1_00 <= in_R11) goto code_r0x0046be57;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = uVar3;\n            *(*0x20 + -0x18) = in_R11;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = 0x46be32;\n            unaff_RDI = fcn.00409700();\n            arg1 = *(*0x20 + 0x18);\n            uVar3 = *(*0x20 + -0x20);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_R11 = *(*0x20 + -0x18);\n            unaff_RSI = 0x6b5a40;\n            in_RAX = *(*0x20 + 8);\n            in_R10 = in_R11;\n            goto code_r0x0046bca5;\n        }\n        goto code_r0x0046bdf0;\n    }\n    *(*0x20 + -0x40) = 0x46be70;\n    arg3 = arg1_00;\n    in_RAX = fcn.0045c5a0(arg1_00);\n    do {\n        in_R11 = in_R11 + 1;\ncode_r0x0046be73:\n        if (arg3 <= in_R11) break;\n        if (arg3 <= in_R11) goto code_r0x0046beff;\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n    } while ((uVar1 == 10) || (uVar1 == 0xd));\n    *(*0x20 + -0x10) = in_R11;\n    if (arg3 == in_R11) {\n        *(*0x20 + -0x40) = 0x46bed9;\n        fcn.00409700();\n        return *(*0x20 + -0x10);\n    }\n    if (arg3 <= in_R11) goto code_r0x0046bef4;\n    arg4 = *(unaff_RSI + in_R11);\n    if (unaff_R12D != *(unaff_RSI + in_R11)) {\n        *(*0x20 + -0x40) = 0x46beb6;\n        fcn.00409700();\n        return *(*0x20 + -0x10);\n    }\n    in_R11 = in_R11 + 1;\n    arg1 = arg1_00;\n    goto code_r0x0046bdf3;\ncode_r0x0046bef4:\n    *(*0x20 + -0x40) = 0x46beff;\n    fcn.0045c5a0(arg3);\ncode_r0x0046beff:\n    *(*0x20 + -0x40) = 0x46bf0a;\n    fcn.0045c5a0(arg3);\ncode_r0x0046bf0a:\n    *(*0x20 + -0x40) = 0x46bf17;\n    fcn.0045c5a0(4);\ncode_r0x0046bf17:\n    arg1 = arg3;\n    *(*0x20 + -0x40) = 0x46bf25;\n    arg3 = arg1;\n    in_RAX = fcn.0045c5a0(arg1);\ncode_r0x0046bf26:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + 0x30) = arg3;\n    *(puVar4 + 0x38) = arg4;\n    *(puVar4 + 0x40) = in_R10;\n    *(puVar4 + -8) = 0x46bf53;\n    fcn.00459ea0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    arg3 = *(puVar4 + 0x30);\n    arg4 = *(puVar4 + 0x38);\n    in_R10 = *(puVar4 + 0x40);\n    *0x20 = puVar4;\n    goto code_r0x0046bb40;\n}\n",
        "token_count": 2887
    },
    "0046ed20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046ed20(int64_t **arg1, ulong noname_1, int64_t **arg3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong arg4;\n    int64_t **ppiVar8;\n    int64_t *piVar9;\n    int64_t **arg1_00;\n    char *noname_1_00;\n    int64_t **unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t **unaff_RSI;\n    int64_t **unaff_RDI;\n    uint8_t uVar11;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x1f8 && *0x20 + -0x1f8 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x278;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x210) = 0;\n            *(*0x20 + -0x1e8) = 0;\n            *(*0x20 + -0xb0) = in_XMM15;\n            if (unaff_RBX == NULL) {\n                *(*0x20 + -0x210) = 0;\n                *(*0x20 + -0x1e8) = 0;\n                *(*0x20 + -0xb0) = 0x6b5ac0;\n                *(*0x20 + -0xa8) = 0x6b5350;\n                *(*0x20 + -0x280) = 0x46f26b;\n                fcn.004307e0();\n                return *(*0x20 + -0x210);\n            }\n            if (arg3 == NULL) {\n                arg3 = 0x7358e0;\n            }\n            piVar9 = arg3[8];\n            if (piVar9 == NULL) {\n                piVar9 = 0x735940;\n            }\n            if (3 < arg3[6]) {\n                *(*0x20 + -0x210) = 0;\n                *(*0x20 + -0x1e8) = 0;\n                *(*0x20 + -0xb0) = 0x6b5ac0;\n                *(*0x20 + -0xa8) = 0x6b5350;\n                *(*0x20 + -0x280) = 0x46f205;\n                fcn.004307e0();\n                return *(*0x20 + -0x210);\n            }\n            if (arg3[6] < 3) {\n                *(*0x20 + -0x210) = 0;\n                *(*0x20 + -0x1e8) = 0;\n                *(*0x20 + -0xb0) = 0x6b5ac0;\n                *(*0x20 + -0xa8) = 0x6b5348;\n                *(*0x20 + -0x280) = 0x46f19a;\n                fcn.004307e0();\n                return *(*0x20 + -0x210);\n            }\n            *(*0x20 + -0xb8) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0xe8) = piVar9;\n            ppiVar12 = arg3[1];\n            ppiVar13 = *arg3;\n            ppiVar8 = unaff_RBX;\n            if (ppiVar12 != NULL) {\n                *(*0x20 + -0x280) = 0x46edfe;\n                fcn.0046ea20(in_RAX);\n                ppiVar8 = ppiVar12;\n                unaff_RDI = unaff_RBX;\n                if (in_RAX != 0) {\n                    *(*0x20 + -0x210) = 0;\n                    *(*0x20 + -0x1e8) = 0;\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xa8) = unaff_RBX;\n                    *(*0x20 + -0x280) = 0x46f134;\n                    fcn.004307e0();\n                    return *(*0x20 + -0x210);\n                }\n            }\n            unaff_RBX = ppiVar8;\n            *(*0x20 + -0x280) = 0x46ee0e;\n            uVar3 = fcn.0046fd80();\n            if (unaff_RDI == NULL) {\n                if (unaff_RBX != NULL) {\n                    unaff_RDI = NULL;\n                    unaff_RSI = NULL;\n                    goto code_r0x0046ee2d;\n                }\n            }\n            else {\n                uVar3 = 0;\ncode_r0x0046ee2d:\n                *(*0x20 + -0xb0) = unaff_RDI;\n                *(*0x20 + -0xa8) = unaff_RSI;\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x210) = 0;\n                    *(*0x20 + -0x1e8) = 0;\n                    *(*0x20 + -0x280) = 0x46f0dc;\n                    fcn.004307e0();\n                    return *(*0x20 + -0x210);\n                }\n                *(*0x20 + -0xf0) = uVar3;\n                unaff_RBX = *(*(*0x20 + -0xe8) + 0x10);\n                unaff_RDI = *(*(*0x20 + -0xe8) + 8);\n                if (unaff_RBX == NULL) {\n                    unaff_RBX = *(*0x20 + 0x20);\n                    *(*0x20 + -0x280) = 0x46ee85;\n                    unaff_RDI = fcn.0046e3a0(*(*0x20 + 0x28));\n                }\n                if (unaff_RBX == NULL) {\n                    uVar3 = 0;\ncode_r0x0046eefc:\n                    *(*0x20 + -0xd0) = uVar3;\n                    unaff_RSI = *(*0x20 + -0xb8);\n                    unaff_RBX = unaff_RSI[1];\n                    unaff_RDI = *unaff_RSI;\n                    if (unaff_RBX == NULL) {\n                        uVar3 = 0;\ncode_r0x0046ef57:\n                        *(*0x20 + -0xd8) = uVar3;\n                        *(*0x20 + -0x21c) = 0;\n                        *(*0x20 + -0x220) = 0;\n                        *(*0x20 + -0x214) = 0;\n                        *(*0x20 + -0x280) = 0x46ef8b;\n                        fcn.00473740(*0x20 + -0x214);\n                        if (*(*0x20 + -0x21c) < 6) {\n                            bVar1 = true;\n                        }\n                        else if (*(*0x20 + -0x21c) == 6) {\n                            bVar1 = *(*0x20 + -0x220) < 2;\n                        }\n                        else {\n                            bVar1 = false;\n                        }\n                        *(*0x20 + -0x222) = bVar1;\n                        *(*0x20 + -0x280) = 0x46efb2;\n                        uVar3 = fcn.00472220();\n                        *(*0x20 + -0x200) = uVar3;\n                        *(*0x20 + -0x1c0) = *(*(*0x20 + -0xe8) + 0x58);\n                        uVar3 = *(*(*0x20 + -0xb8) + 0x30);\n                        *(*0x20 + -0x1e0) = uVar3;\n                        *(*0x20 + -0x280) = 0x46eff1;\n                        iVar4 = fcn.00445140(uVar3);\n                        *(*0x20 + -0xc0) = iVar4;\n                        unaff_RBX = *(*0x20 + -0x200);\n                        ppiVar12 = unaff_RBX;\n                        if (*(*0x20 + -0x1c0) != NULL) {\n                            ppiVar12 = *(*0x20 + -0x1c0);\n                        }\n                        *(*0x20 + -0x208) = ppiVar12;\n                        iVar6 = *(*0x20 + -0xb8);\n                        unaff_RSI = *(iVar6 + 0x30);\n                        *(*0x20 + -0x1c8) = unaff_RSI;\n                        for (unaff_RDI = NULL; unaff_RDI < unaff_RSI; unaff_RDI = unaff_RDI + 1) {\n                            ppiVar13 = *(iVar6 + 0x30);\n                            if (ppiVar13 <= unaff_RDI) goto code_r0x0046fb77;\n                            ppiVar8 = *(*(iVar6 + 0x28) + unaff_RDI * 8);\n                            ppiVar13 = ppiVar8;\n                            if (ppiVar8 != NULL) {\n                                arg1_00 = ppiVar12;\n                                if (((unaff_RBX != ppiVar12) && (*(*0x20 + -0x222) != '\\0')) &&\n                                   ((ppiVar8 & 0x10000003) == 3)) {\n                                    arg1_00 = unaff_RBX;\n                                }\n                                ppiVar13 = *(*0x20 + -0x1e0);\n                                if (ppiVar13 <= unaff_RDI) goto code_r0x0046fb6c;\n                                *(*0x20 + -0x1f0) = unaff_RDI;\n                                ppiVar13 = iVar4 + unaff_RDI * 8;\n                                arg3 = 0x1;\n                                *(*0x20 + -0x280) = 0x46f33b;\n                                iVar4 = fcn.00471940(arg1_00, arg1_00, 1, 2);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x210) = 0;\n                                    *(*0x20 + -0x1e8) = 0;\n                                    *(*0x20 + -0xb0) = iVar4;\n                                    *(*0x20 + -0xa8) = ppiVar8;\n                                    *(*0x20 + -0x280) = 0x46f445;\n                                    fcn.004307e0();\n                                    return *(*0x20 + -0x210);\n                                }\n                                *(*0x20 + -0x1c0) = *(*(*0x20 + -0xc0) + *(*0x20 + -0x1f0) * 8);\n                                *(*0x20 + -0x280) = 0x46f371;\n                                puVar5 = fcn.0040bf40();\n                                *puVar5 = 0x46fcc0;\n                                puVar5[1] = *(*0x20 + -0x208);\n                                puVar5[2] = *(*0x20 + -0x1c0);\n                                *(puVar5 + 3) = in_XMM15;\n                                *(puVar5 + 5) = 0;\n                                *(puVar5 + 0x2c) = 0;\n                                *(puVar5 + 6) = 1;\n                                *(*0x20 + -0x280) = 0x46f3b1;\n                                iVar2 = fcn.0042fa60();\n                                if (iVar2 != 0) {\n                                    *(*0x20 + -0x280) = 0x46f3eb;\n                                    fcn.004307e0();\n                                    return *(*0x20 + -0x210);\n                                }\n                                iVar4 = *(*0x20 + -0xc0);\n                                iVar6 = *(*0x20 + -0xb8);\n                                ppiVar12 = *(*0x20 + -0x208);\n                                unaff_RBX = *(*0x20 + -0x200);\n                                unaff_RSI = *(*0x20 + -0x1c8);\n                                unaff_RDI = *(*0x20 + -0x1f0);\n                            }\n                        }\n                        unaff_RDI = *0x20 + -0x88;\n                        *(*0x20 + -0x288) = unaff_RBP;\n                        *(*0x20 + -0x280) = 0x46f48f;\n                        fcn.0045c846();\n                        unaff_RBP = *(*0x20 + -0x288);\n                        *(*0x20 + -0x280) = 0x46f49d;\n                        uVar3 = fcn.004708a0();\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0xb0) = unaff_RBX;\n                        *(*0x20 + -0xa8) = iVar6;\n                        if (unaff_RBX != NULL) {\n                            *(*0x20 + -0x210) = 0;\n                            *(*0x20 + -0x1e8) = 0;\n                            *(*0x20 + -0x280) = 0x46f725;\n                            fcn.004307e0();\n                            return *(*0x20 + -0x210);\n                        }\n                        *(*0x20 + -0xa0) = in_XMM15;\n                        *(*0x20 + -0xa0) = 0x46fc60;\n                        *(*0x20 + -0x98) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x140) = 0;\n                        *(*0x20 + -0x128) = *0x20 + -0xa0;\n                        *(*0x20 + -0x280) = 0x46f50e;\n                        iVar2 = fcn.0042fb60();\n                        if (iVar2 != 0) {\n                            *(*0x20 + -0x280) = 0x46f6db;\n                            fcn.004307e0();\n                            return *(*0x20 + -0x210);\n                        }\n                        *(*0x20 + -0x78) = 0x70;\n                        *(*0x20 + -0x3c) = 0x100;\n                        noname_1_00 = *(*0x20 + -0xe8);\n                        if (*noname_1_00 != '\\0') {\n                            *(*0x20 + -0x3c) = 0x101;\n                            *(*0x20 + -0x38) = 0;\n                        }\n                        ppiVar12 = arg3;\n                        if (*(noname_1_00 + 0x58) != 0) {\n                            unaff_RDI = noname_1_00 + 0x58;\n                            unaff_RBX = NULL;\n                            unaff_RSI = 0x8;\n                            ppiVar12 = NULL;\n                            *(*0x20 + -0x280) = 0x46f578;\n                            iVar4 = fcn.004732a0(0x20000, noname_1_00, 0, 0);\n                            *(*0x20 + -0xb0) = iVar4;\n                            *(*0x20 + -0xa8) = 0;\n                            if (iVar4 != 0) {\n                                *(*0x20 + -0x210) = 0;\n                                *(*0x20 + -0x1e8) = 0;\n                                *(*0x20 + -0x280) = 0x46f6a8;\n                                fcn.004307e0();\n                                return *(*0x20 + -0x210);\n                            }\n                            noname_1_00 = *(*0x20 + -0xe8);\n                        }\n                        ppiVar8 = *(*0x20 + -0x1e0);\n                        if (ppiVar8 != NULL) {\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            ppiVar12 = *unaff_RBX;\n                            *(*0x20 + -0x28) = ppiVar12;\n                            if (0x1 < ppiVar8) {\n                                ppiVar12 = unaff_RBX[1];\n                                *(*0x20 + -0x20) = ppiVar12;\n                                if (0x2 < ppiVar8) {\n                                    *(*0x20 + -0x18) = unaff_RBX[2];\n                                    iVar4 = *(noname_1_00 + 0x48);\n                                    *(*0x20 + -0x1c8) = ppiVar8 + iVar4;\n                                    ppiVar13 = *(noname_1_00 + 0x40);\n                                    ppiVar12 = unaff_RBX;\n                                    unaff_RBX = ppiVar13;\n                                    if (ppiVar8 < ppiVar8 + iVar4) {\n                                        *(*0x20 + -0x1d0) = iVar4;\n                                        *(*0x20 + -200) = ppiVar13;\n                                        *(*0x20 + -0x280) = 0x46f633;\n                                        ppiVar12 = fcn.00445220(ppiVar8);\n                                        iVar4 = *(*0x20 + -0x1d0);\n                                        unaff_RBX = *(*0x20 + -200);\n                                    }\n                                    *(*0x20 + -0x1d8) = ppiVar8;\n                                    *(*0x20 + -0xe0) = ppiVar12;\n                                    ppiVar12 = iVar4 << 3;\n                                    *(*0x20 + -0x280) = 0x46f671;\n                                    fcn.0045cee0(ppiVar12);\n                                    iVar4 = *(*0x20 + -0xe0);\n                                    uVar11 = *(*0x20 + -0x222);\n                                    unaff_RSI = uVar11;\n                                    unaff_RDI = *(*0x20 + -0x1c8);\n                                    for (iVar6 = 0; iVar6 < unaff_RDI; iVar6 = iVar6 + 1) {\n                                        if ((uVar11 != 0) && ((*(iVar4 + iVar6 * 8) & 0x10000003) == 3)) {\n                                            *(iVar4 + iVar6 * 8) = 0;\n                                        }\n                                    }\n                                    ppiVar8 = NULL;\n                                    for (iVar6 = 0; iVar6 < unaff_RDI; iVar6 = iVar6 + 1) {\n                                        ppiVar13 = *(iVar4 + iVar6 * 8);\n                                        if (ppiVar13 != NULL) {\n                                            if (unaff_RDI <= ppiVar8) goto code_r0x0046fb45;\n                                            *(iVar4 + ppiVar8 * 8) = ppiVar13;\n                                            ppiVar8 = ppiVar8 + 1;\n                                        }\n                                    }\n                                    ppiVar13 = *(*0x20 + -0x1d8);\n                                    if (ppiVar8 <= ppiVar13) {\n                                        *(*0x20 + -0x1f8) = ppiVar8;\n                                        if (0 < ppiVar8) {\n                                            *(*0x20 + -0x280) = 0x46f7e9;\n                                            iVar4 = fcn.004732a0(0x20002, iVar4, 0, 0);\n                                            *(*0x20 + -0xb0) = iVar4;\n                                            *(*0x20 + -0xa8) = 0;\n                                            if (iVar4 != 0) {\n                                                *(*0x20 + -0x210) = 0;\n                                                *(*0x20 + -0x1e8) = 0;\n                                                *(*0x20 + -0x280) = 0x46fb0e;\n                                                fcn.004307e0();\n                                                return *(*0x20 + -0x210);\n                                            }\n                                            ppiVar8 = *(*0x20 + -0x1f8);\n                                        }\n                                        *(*0x20 + -0x1a8) = in_XMM15;\n                                        *(*0x20 + -0x198) = 0;\n                                        iVar4 = *(*0x20 + -0xe8);\n                                        *(*0x20 + -0x218) = *(iVar4 + 0x18) | 0x80400;\n                                        if (*(iVar4 + 0x20) == 0) {\n                                            if (ppiVar8 < 1) {\n                                                uVar11 = 0;\n                                            }\n                                            else {\n                                                uVar11 = *(iVar4 + 0x38) ^ 1;\n                                            }\n                                            *(*0x20 + -0x221) = uVar11;\n                                            uVar3 = *(*(*0x20 + -0xb8) + 0x20);\n                                            *(*0x20 + -0x280) = 0x46f92b;\n                                            arg4 = fcn.0046e500(uVar3);\n                                            uVar3 = *(*(*0x20 + -0xe8) + 0x28);\n                                            *(*0x20 + -0x278) = *0x20 + -0x1a8;\n                                            uVar7 = *(*0x20 + -0xd0);\n                                            *(*0x20 + -0x280) = 0x46f979;\n                                            uVar3 = fcn.00471640(uVar3, *(*0x20 + -0xe8), *(*0x20 + -0x218), arg4);\n                                            *(*0x20 + -0xb0) = uVar3;\n                                            *(*0x20 + -0xa8) = uVar7;\n                                        }\n                                        else {\n                                            if (ppiVar8 < 1) {\n                                                uVar11 = 0;\n                                            }\n                                            else {\n                                                uVar11 = *(iVar4 + 0x38) ^ 1;\n                                            }\n                                            *(*0x20 + -0x221) = uVar11;\n                                            uVar3 = *(*(*0x20 + -0xb8) + 0x20);\n                                            *(*0x20 + -0x280) = 0x46f887;\n                                            fcn.0046e500(uVar3);\n                                            *(*0x20 + -0x278) = *0x20 + -0x78;\n                                            *(*0x20 + -0x270) = *0x20 + -0x1a8;\n                                            uVar3 = *(*0x20 + -0xf0);\n                                            *(*0x20 + -0x280) = 0x46f8e5;\n                                            uVar7 = fcn.004709c0(*(*0x20 + -0xd0), *(*0x20 + -0xe8), *(*0x20 + -0x221), \n                                                                 *(*0x20 + -0x218));\n                                            *(*0x20 + -0xb0) = uVar7;\n                                            *(*0x20 + -0xa8) = uVar3;\n                                        }\n                                        if (*(*0x20 + -0xb0) != 0) {\n                                            *(*0x20 + -0x210) = 0;\n                                            *(*0x20 + -0x1e8) = 0;\n                                            *(*0x20 + -0x280) = 0x46fac6;\n                                            fcn.004307e0();\n                                            return *(*0x20 + -0x210);\n                                        }\n                                        *(*0x20 + -0x1b8) = in_XMM15;\n                                        *(*0x20 + -0x1b8) = 0x46fc00;\n                                        *(*0x20 + -0x1b0) = *(*0x20 + -0x1a0);\n                                        *(*0x20 + -400) = 0;\n                                        *(*0x20 + -0x178) = *0x20 + -0x1b8;\n                                        *(*0x20 + -0x280) = 0x46f9e8;\n                                        iVar2 = fcn.0042fb60();\n                                        if (iVar2 != 0) {\n                                            *(*0x20 + -0x280) = 0x46fa7e;\n                                            fcn.004307e0();\n                                            return *(*0x20 + -0x210);\n                                        }\n                                        *(*0x20 + -0x90) = *(*0x20 + -0xe0);\n                                        *(*0x20 + -0x88) = *(*0x20 + -0x1f8);\n                                        *(*0x20 + -0x80) = *(*0x20 + -0x1d8);\n                                        *(*0x20 + -0x210) = *(*0x20 + -0x198);\n                                        *(*0x20 + -0x1e8) = *(*0x20 + -0x1a8);\n                                        *(*0x20 + -0xb0) = in_XMM15;\n                                        *(*0x20 + -0x280) = 0x46fa4b;\n                                        fcn.004307e0();\n                                        return *(*0x20 + -0x210);\n                                    }\n                                    *(*0x20 + -0x280) = 0x46fb45;\n                                    fcn.0045c620(ppiVar8, ppiVar13);\ncode_r0x0046fb45:\n                                    *(*0x20 + -0x280) = 0x46fb50;\n                                    ppiVar8 = unaff_RDI;\n                                    fcn.0045c5a0(unaff_RDI);\n                                }\n                                *(*0x20 + -0x280) = 0x46fb5a;\n                                fcn.0045c5a0(ppiVar8);\n                            }\n                            *(*0x20 + -0x280) = 0x46fb65;\n                            fcn.0045c5a0(ppiVar8);\n                        }\n                        *(*0x20 + -0x280) = 0x46fb6c;\n                        fcn.0045c5a0(ppiVar8);\ncode_r0x0046fb6c:\n                        *(*0x20 + -0x280) = 0x46fb77;\n                        fcn.0045c5a0(ppiVar13);\n                        arg3 = ppiVar12;\ncode_r0x0046fb77:\n                        *(*0x20 + -0x280) = 0x46fb85;\n                        fcn.0045c5a0(ppiVar13);\n                    }\n                    else {\n                        *(*0x20 + -0x280) = 0x46ef25;\n                        uVar3 = fcn.0046fd80();\n                        if (unaff_RDI != NULL) {\n                            uVar3 = 0;\ncode_r0x0046ef3b:\n                            *(*0x20 + -0xb0) = unaff_RDI;\n                            *(*0x20 + -0xa8) = unaff_RSI;\n                            if (unaff_RDI != NULL) {\n                                *(*0x20 + -0x210) = 0;\n                                *(*0x20 + -0x1e8) = 0;\n                                *(*0x20 + -0x280) = 0x46f04b;\n                                fcn.004307e0();\n                                return *(*0x20 + -0x210);\n                            }\n                            goto code_r0x0046ef57;\n                        }\n                        if (unaff_RBX != NULL) {\n                            unaff_RDI = NULL;\n                            unaff_RSI = NULL;\n                            goto code_r0x0046ef3b;\n                        }\n                    }\n                    *(*0x20 + -0x280) = 0x46fb8f;\n                    fcn.0045c5a0(unaff_RBX);\n                }\n                else {\n                    *(*0x20 + -0x280) = 0x46eeb4;\n                    uVar3 = fcn.0046fd80();\n                    if (unaff_RDI != NULL) {\n                        uVar3 = 0;\ncode_r0x0046eecd:\n                        *(*0x20 + -0xb0) = unaff_RDI;\n                        *(*0x20 + -0xa8) = unaff_RBX;\n                        if (unaff_RDI != NULL) {\n                            *(*0x20 + -0x210) = 0;\n                            *(*0x20 + -0x1e8) = 0;\n                            *(*0x20 + -0x280) = 0x46f093;\n                            fcn.004307e0();\n                            return *(*0x20 + -0x210);\n                        }\n                        goto code_r0x0046eefc;\n                    }\n                    unaff_RSI = unaff_RBX;\n                    if (unaff_RBX != NULL) {\n                        unaff_RDI = NULL;\n                        unaff_RBX = NULL;\n                        goto code_r0x0046eecd;\n                    }\n                }\n                *(*0x20 + -0x280) = 0x46fb99;\n                fcn.0045c5a0(unaff_RBX);\n            }\n            *(*0x20 + -0x280) = 0x46fba5;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + -8) = 0x46fbc9;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6871
    },
    "004700c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004700c0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0xffffffffffffffff;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x68) = 0x4700fa;\n            uVar3 = fcn.0046fd80();\n            if (unaff_RDI != 0) {\n                uVar3 = 0;\n                goto code_r0x00470110;\n            }\n            if (unaff_RBX != 0) {\n                unaff_RDI = 0;\ncode_r0x00470110:\n                if (unaff_RDI != 0) {\n                    return 0xffffffffffffffff;\n                }\n                uVar1 = *(*0x20 + 0x18);\n                uVar6 = uVar1 & 3;\n                if (uVar6 == 0) {\n                    uVar4 = 0x80000000;\n                }\n                else if (uVar6 == 1) {\n                    uVar4 = 0x40000000;\n                }\n                else if (uVar6 == 2) {\n                    uVar4 = 0xc0000000;\n                }\n                else {\n                    uVar4 = 0;\n                }\n                if ((uVar1 & 0x40) != 0) {\n                    uVar4 = uVar4 | 0x40000000;\n                }\n                if ((uVar1 & 0x400) != 0) {\n                    uVar4 = uVar4 & 0xbfffffff | 4;\n                }\n                uVar6 = uVar4;\n                uVar9 = uVar1;\n                if ((uVar9 >> 0x13 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x20) = 1;\n                    puVar8 = *0x20 + -0x30;\n                }\n                else {\n                    puVar8 = NULL;\n                }\n                if ((uVar1 & 0xc0) == 0xc0) {\n                    iVar7 = 1;\n                }\n                else if ((uVar1 & 0x240) == 0x240) {\n                    iVar7 = 2;\n                }\n                else if ((uVar9 >> 6 & 1) == 0) {\n                    if ((uVar9 >> 9 & 1) == 0) {\n                        iVar7 = 3;\n                    }\n                    else {\n                        iVar7 = 5;\n                    }\n                }\n                else {\n                    iVar7 = 4;\n                }\n                if ((*(*0x20 + 0x20) >> 7 & 1) == 0) {\n                    if (iVar7 == 2) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x10) = puVar8;\n                        *(*0x20 + -0x34) = uVar4;\n                        *(*0x20 + -0x38) = 2;\n                        piVar5 = 0x3;\n                        *(*0x20 + -0x68) = 0x47024b;\n                        uVar3 = fcn.00471340(3, uVar6, 0x80, 0);\n                        if ((uVar6 == 0) ||\n                           (((iVar2 = *(uVar6 + 8),  iVar2 != 0x4a1100 || (*piVar5 != 2)) &&\n                            ((uVar6 == 0 ||\n                             (((iVar2 != 0x4a1100 || (*piVar5 != 0x35)) &&\n                              ((uVar6 == 0 || ((iVar2 != 0x4a1100 || (*piVar5 != 3)))))))))))) {\n                            return uVar3;\n                        }\n                        uVar6 = *(*0x20 + -0x34);\n                    }\n                    uVar4 = 1;\n                }\n                else {\n                    uVar4 = 0x80;\n                }\n                *(*0x20 + -0x68) = 0x4702d6;\n                uVar3 = fcn.00471340(3, uVar6, uVar4, 0);\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x470325;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x47033e;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1438
    },
    "0047a1e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047a1e0(void)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t in_R9;\n    uint64_t in_R10;\n    \n    uVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar4) {\n            return;\n        }\n        uVar1 = *(in_RAX + uVar4);\n        if (uVar1 < 0x34) {\n            if (0x2e < uVar1) {\n                if (0x31 < uVar1) {\n                    if (uVar1 != 0x32) {\n                        return;\n                    }\n                    uVar6 = uVar4 + 4;\n                    if (unaff_RBX < uVar6) {\n                        return;\n                    }\n                    if (uVar6 <= unaff_RBX) {\n                        if (uVar4 <= uVar6) {\n                            if (*(uVar4 + in_RAX) != 0x36303032) {\n                                return;\n                            }\n                            return;\n                        }\n                        goto code_r0x0047b053;\n                    }\n                    goto code_r0x0047b05e;\n                }\n                if (uVar1 != 0x30) {\n                    if (uVar1 != 0x31) goto code_r0x0047a1f7;\n                    if (unaff_RBX < uVar4 + 2) {\n                        return;\n                    }\n                    if (uVar4 + 1 < unaff_RBX) {\n                        if (*(uVar4 + 1 + in_RAX) != '5') {\n                            return;\n                        }\n                        if (uVar4 + 2 <= unaff_RBX) {\n                            return;\n                        }\n                        goto code_r0x0047b069;\n                    }\n                    goto code_r0x0047b074;\n                }\n                uVar6 = uVar4 + 2;\n                if (unaff_RBX < uVar6) {\ncode_r0x0047a43f:\n                    in_R9 = uVar4 + 3;\n                    if (unaff_RBX < in_R9) goto code_r0x0047a1f7;\n                    if (uVar4 + 1 < unaff_RBX) {\n                        if (*(uVar4 + 1 + in_RAX) != '0') goto code_r0x0047a1f7;\n                        if (uVar6 < unaff_RBX) {\n                            if (*(uVar4 + 2 + in_RAX) != '2') goto code_r0x0047a1f7;\n                            if (in_R9 <= unaff_RBX) {\n                                return;\n                            }\n                            goto code_r0x0047b07f;\n                        }\n                        goto code_r0x0047b08a;\n                    }\n                    goto code_r0x0047b095;\n                }\n                in_R9 = uVar4 + 1;\n                if (in_R9 < unaff_RBX) {\n                    uVar1 = *(uVar4 + 1 + in_RAX);\n                    in_R9 = uVar1;\n                    if ((uVar1 < 0x31) || (0x36 < uVar1)) goto code_r0x0047a43f;\n                    if (uVar6 <= unaff_RBX) {\n                        unaff_RBX = unaff_RBX - uVar4;\n                        in_R9 = unaff_RBX - 2;\n                        if (uVar1 - 0x31 < 6) {\n                            return;\n                        }\n                        goto code_r0x0047b0a5;\n                    }\n                    goto code_r0x0047b0b2;\n                }\n                goto code_r0x0047b0bd;\n            }\n            if (uVar1 != 0x2c) {\n                if (uVar1 != 0x2d) {\n                    if (uVar1 != 0x2e) goto code_r0x0047a1f7;\n                    goto code_r0x0047a3af;\n                }\n                uVar6 = uVar4 + 7;\n                if (unaff_RBX < uVar6) {\ncode_r0x0047a28a:\n                    uVar6 = uVar4 + 9;\n                    if (unaff_RBX < uVar6) {\ncode_r0x0047a2d7:\n                        uVar6 = uVar4 + 5;\n                        if (unaff_RBX < uVar6) {\ncode_r0x0047a319:\n                            uVar6 = uVar4 + 6;\n                            if (unaff_RBX < uVar6) {\ncode_r0x0047a35b:\n                                uVar6 = uVar4 + 3;\n                                if (unaff_RBX < uVar6) goto code_r0x0047a1f7;\n                                if (uVar6 <= unaff_RBX) {\n                                    if (uVar4 <= uVar6) {\n                                        in_R9 = *(uVar4 + in_RAX);\n                                        if ((*(uVar4 + in_RAX) == 0x302d) &&\n                                           (uVar1 = *(uVar4 + 2 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x37)) {\n                                            return;\n                                        }\n                                        goto code_r0x0047a1f7;\n                                    }\n                                    goto code_r0x0047b170;\n                                }\n                                goto code_r0x0047b17b;\n                            }\n                            if (uVar6 <= unaff_RBX) {\n                                if (uVar4 <= uVar6) {\n                                    in_R9 = *(uVar4 + in_RAX);\n                                    if ((*(uVar4 + in_RAX) == 0x3a37302d) &&\n                                       (uVar2 = *(uVar4 + 4 + in_RAX),  in_R9 = uVar2,  uVar2 == 0x3030)) {\n                                        return;\n                                    }\n                                    goto code_r0x0047a35b;\n                                }\n                                goto code_r0x0047b186;\n                            }\n                            goto code_r0x0047b191;\n                        }\n                        if (uVar6 <= unaff_RBX) {\n                            if (uVar4 <= uVar6) {\n                                in_R9 = *(uVar4 + in_RAX);\n                                if ((*(uVar4 + in_RAX) == 0x3037302d) &&\n                                   (uVar1 = *(uVar4 + 4 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x30)) {\n                                    return;\n                                }\n                                goto code_r0x0047a319;\n                            }\n                            goto code_r0x0047b19c;\n                        }\n                        goto code_r0x0047b1a7;\n                    }\n                    if (uVar6 <= unaff_RBX) {\n                        if (uVar4 <= uVar6) {\n                            in_R9 = *(uVar4 + in_RAX);\n                            if ((in_R9 == 0x303a30303a37302d) &&\n                               (uVar1 = *(uVar4 + 8 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x30)) {\n                                return;\n                            }\n                            goto code_r0x0047a2d7;\n                        }\n                        goto code_r0x0047b1b2;\n                    }\n                    goto code_r0x0047b1bd;\n                }\n                if (unaff_RBX < uVar6) goto code_r0x0047b1d3;\n                if (uVar4 <= uVar6) {\n                    in_R9 = *(uVar4 + in_RAX);\n                    if (((*(uVar4 + in_RAX) == 0x3037302d) &&\n                        (uVar2 = *(uVar4 + 4 + in_RAX),  in_R9 = uVar2,  uVar2 == 0x3030)) &&\n                       (uVar1 = *(uVar4 + 6 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x30)) {\n                        return;\n                    }\n                    goto code_r0x0047a28a;\n                }\ncode_r0x0047b1c8:\n                fcn.0045c660(uVar6);\ncode_r0x0047b1d3:\n                fcn.0045c5e0(uVar6, unaff_RBX);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\ncode_r0x0047a3af:\n            uVar6 = uVar4 + 1;\n            if (uVar6 < unaff_RBX) {\n                if (uVar6 < unaff_RBX) {\n                    uVar1 = *(uVar4 + 1 + in_RAX);\n                    in_R9 = uVar1;\n                    uVar5 = uVar6;\n                    if ((uVar1 != 0x30) && (uVar1 != 0x39)) goto code_r0x0047a1f7;\n                    for (; (uVar5 < unaff_RBX && (*(uVar5 + in_RAX) == uVar1)); uVar5 = uVar5 + 1) {\n                    }\n                    if (uVar5 < unaff_RBX) {\n                        uVar6 = uVar5;\n                        if (uVar5 < unaff_RBX) {\n                            if (*(uVar5 + in_RAX) - 0x30U < 10) goto code_r0x0047a1f7;\n                            goto code_r0x0047b112;\n                        }\n                    }\n                    else {\ncode_r0x0047b112:\n                        uVar6 = ((uVar5 - uVar4) + -1) * 0x10000;\n                        if (uVar5 <= unaff_RBX) {\n                            return;\n                        }\n                        fcn.0045c660(unaff_RBX);\n                    }\n                    fcn.0045c5a0(unaff_RBX);\n                }\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0047b170:\n                fcn.0045c660(uVar6);\ncode_r0x0047b17b:\n                fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047b186:\n                fcn.0045c660(uVar6);\ncode_r0x0047b191:\n                fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047b19c:\n                fcn.0045c660(uVar6);\ncode_r0x0047b1a7:\n                fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047b1b2:\n                fcn.0045c660(uVar6);\ncode_r0x0047b1bd:\n                fcn.0045c5e0(uVar6, unaff_RBX);\n                goto code_r0x0047b1c8;\n            }\n        }\n        else {\n            if (uVar1 < 0x4e) {\n                if (uVar1 < 0x36) {\n                    if (uVar1 != 0x34) {\n                        return;\n                    }\n                    return;\n                }\n                if (uVar1 != 0x4a) {\n                    if (uVar1 == 0x4d) {\n                        uVar6 = uVar4 + 3;\n                        if (unaff_RBX < uVar6) goto code_r0x0047a1f7;\n                        if (uVar6 <= unaff_RBX) {\n                            if (uVar4 <= uVar6) {\n                                uVar2 = *(uVar4 + in_RAX);\n                                in_R9 = uVar2;\n                                if ((uVar2 != 0x6f4d) || (*(uVar4 + 2 + in_RAX) != 'n')) {\ncode_r0x0047a661:\n                                    if ((uVar2 == 0x534d) &&\n                                       (uVar1 = *(uVar4 + 2 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x54)) {\n                                        return;\n                                    }\n                                    goto code_r0x0047a1f7;\n                                }\n                                in_R10 = uVar4 + 6;\n                                if (unaff_RBX < in_R10) {\ncode_r0x0047a61d:\n                                    if ((unaff_RBX - uVar4 == 3) ||\n                                       (0x19 < *(in_RAX + (-((unaff_RBX - uVar4) + -3) >> 0x3f & uVar6)) + 0x9fU)) {\n                                        return;\n                                    }\n                                    goto code_r0x0047a661;\n                                }\n                                if (in_R10 <= unaff_RBX) {\n                                    if (uVar4 <= in_R10) {\n                                        if ((*(uVar4 + in_RAX) == 0x646e6f4d) && (*(uVar4 + 4 + in_RAX) == 0x7961)) {\n                                            return;\n                                        }\n                                        goto code_r0x0047a61d;\n                                    }\n                                    goto code_r0x0047affb;\n                                }\n                                goto code_r0x0047b006;\n                            }\n                            goto code_r0x0047b011;\n                        }\n                        goto code_r0x0047b01c;\n                    }\n                    goto code_r0x0047a1f7;\n                }\n                uVar6 = uVar4 + 3;\n                if (unaff_RBX < uVar6) goto code_r0x0047a1f7;\n                if (uVar6 <= unaff_RBX) {\n                    if (uVar4 <= uVar6) {\n                        in_R9 = *(uVar4 + in_RAX);\n                        if ((*(uVar4 + in_RAX) != 0x614a) ||\n                           (uVar1 = *(uVar4 + 2 + in_RAX),  in_R9 = uVar1,  uVar1 != 0x6e)) goto code_r0x0047a1f7;\n                        in_R9 = uVar4 + 7;\n                        if (unaff_RBX < in_R9) {\ncode_r0x0047a54a:\n                            in_R9 = (unaff_RBX - uVar4) - 3;\n                            if ((unaff_RBX - uVar4 == 3) || (0x19 < *(in_RAX + (uVar6 & -in_R9 >> 0x3f)) + 0x9fU)) {\n                                return;\n                            }\n                            goto code_r0x0047a1f7;\n                        }\n                        if (in_R9 <= unaff_RBX) {\n                            if (uVar4 <= in_R9) {\n                                if (((*(uVar4 + in_RAX) == 0x756e614a) && (*(uVar4 + 4 + in_RAX) == 0x7261)) &&\n                                   (*(uVar4 + 6 + in_RAX) == 'y')) {\n                                    return;\n                                }\n                                goto code_r0x0047a54a;\n                            }\n                            goto code_r0x0047b027;\n                        }\n                        goto code_r0x0047b032;\n                    }\n                    goto code_r0x0047b03d;\n                }\n            }\n            else {\n                if (uVar1 < 0x5b) {\n                    if (uVar1 != 0x50) {\n                        if (uVar1 != 0x5a) goto code_r0x0047a1f7;\n                        uVar6 = uVar4 + 7;\n                        if (unaff_RBX < uVar6) {\ncode_r0x0047a738:\n                            uVar6 = uVar4 + 9;\n                            if (unaff_RBX < uVar6) {\ncode_r0x0047a782:\n                                in_R10 = 0x303a30303a37305a;\n                                uVar6 = uVar4 + 5;\n                                if (unaff_RBX < uVar6) {\ncode_r0x0047a7b9:\n                                    uVar6 = uVar4 + 6;\n                                    if (unaff_RBX < uVar6) {\ncode_r0x0047a7fb:\n                                        uVar6 = uVar4 + 3;\n                                        if (unaff_RBX < uVar6) goto code_r0x0047a1f7;\n                                        if (uVar6 <= unaff_RBX) {\n                                            if (uVar4 <= uVar6) {\n                                                in_R9 = *(uVar4 + in_RAX);\n                                                if ((*(uVar4 + in_RAX) == 0x305a) &&\n                                                   (uVar1 = *(uVar4 + 2 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x37)) {\n                                                    return;\n                                                }\n                                                goto code_r0x0047a1f7;\n                                            }\n                                            goto code_r0x0047af72;\n                                        }\n                                        goto code_r0x0047af7d;\n                                    }\n                                    if (uVar6 <= unaff_RBX) {\n                                        if (uVar4 <= uVar6) {\n                                            in_R9 = *(uVar4 + in_RAX);\n                                            if ((*(uVar4 + in_RAX) == 0x3a37305a) &&\n                                               (uVar2 = *(uVar4 + 4 + in_RAX),  in_R9 = uVar2,  uVar2 == 0x3030)) {\n                                                return;\n                                            }\n                                            goto code_r0x0047a7fb;\n                                        }\n                                        goto code_r0x0047af88;\n                                    }\n                                    goto code_r0x0047af93;\n                                }\n                                if (uVar6 <= unaff_RBX) {\n                                    if (uVar4 <= uVar6) {\n                                        in_R9 = *(uVar4 + in_RAX);\n                                        if ((*(uVar4 + in_RAX) == 0x3037305a) &&\n                                           (uVar1 = *(uVar4 + 4 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x30)) {\n                                            return;\n                                        }\n                                        goto code_r0x0047a7b9;\n                                    }\n                                    goto code_r0x0047af9e;\n                                }\n                                goto code_r0x0047afa9;\n                            }\n                            if (uVar6 <= unaff_RBX) {\n                                if (uVar4 <= uVar6) {\n                                    in_R9 = *(uVar4 + in_RAX);\n                                    if ((in_R9 == 0x303a30303a37305a) &&\n                                       (uVar1 = *(uVar4 + 8 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x30)) {\n                                        return;\n                                    }\n                                    goto code_r0x0047a782;\n                                }\n                                goto code_r0x0047afb4;\n                            }\n                            goto code_r0x0047afbf;\n                        }\n                        if (uVar6 <= unaff_RBX) {\n                            if (uVar4 <= uVar6) {\n                                in_R9 = *(uVar4 + in_RAX);\n                                if (((*(uVar4 + in_RAX) == 0x3037305a) &&\n                                    (uVar2 = *(uVar4 + 4 + in_RAX),  in_R9 = uVar2,  uVar2 == 0x3030)) &&\n                                   (uVar1 = *(uVar4 + 6 + in_RAX),  in_R9 = uVar1,  uVar1 == 0x30)) {\n                                    return;\n                                }\n                                goto code_r0x0047a738;\n                            }\n                            goto code_r0x0047afca;\n                        }\n                        goto code_r0x0047afd5;\n                    }\n                    uVar6 = uVar4 + 2;\n                    if (unaff_RBX < uVar6) goto code_r0x0047a1f7;\n                    in_R9 = uVar4 + 1;\n                    if (in_R9 < unaff_RBX) {\n                        uVar1 = *(uVar4 + 1 + in_RAX);\n                        in_R9 = uVar1;\n                        if (uVar1 != 0x4d) goto code_r0x0047a1f7;\n                        if (uVar6 <= unaff_RBX) {\n                            return;\n                        }\n                        goto code_r0x0047afe5;\n                    }\n                }\n                else {\n                    if (uVar1 == 0x5f) {\n                        uVar6 = uVar4 + 2;\n                        if (unaff_RBX < uVar6) {\ncode_r0x0047a879:\n                            in_R9 = uVar4 + 3;\n                            if (unaff_RBX < in_R9) goto code_r0x0047a1f7;\n                            in_R10 = uVar4 + 1;\n                            if (in_R10 < unaff_RBX) {\n                                uVar1 = *(uVar4 + 1 + in_RAX);\n                                in_R10 = uVar1;\n                                if (uVar1 != 0x5f) goto code_r0x0047a1f7;\n                                if (uVar6 < unaff_RBX) {\n                                    uVar1 = *(uVar4 + 2 + in_RAX);\n                                    uVar6 = uVar1;\n                                    if (uVar1 != 0x32) goto code_r0x0047a1f7;\n                                    if (in_R9 <= unaff_RBX) {\n                                        return;\n                                    }\n                                    goto code_r0x0047af25;\n                                }\n                                goto code_r0x0047af30;\n                            }\n                            goto code_r0x0047af3b;\n                        }\n                        in_R9 = uVar4 + 1;\n                        if (in_R9 < unaff_RBX) {\n                            if (*(uVar4 + 1 + in_RAX) != '2') goto code_r0x0047a879;\n                            in_R10 = uVar4 + 5;\n                            if (unaff_RBX < in_R10) {\ncode_r0x0047ae63:\n                                if (uVar6 <= unaff_RBX) {\n                                    return;\n                                }\n                                goto code_r0x0047af46;\n                            }\n                            if (in_R10 <= unaff_RBX) {\n                                if (in_R9 <= in_R10) {\n                                    if (*(uVar4 + 1 + in_RAX) == 0x36303032) {\n                                        return;\n                                    }\n                                    goto code_r0x0047ae63;\n                                }\n                                goto code_r0x0047af51;\n                            }\n                            goto code_r0x0047af5c;\n                        }\n                    }\n                    else {\n                        if ((uVar1 != 0x70) || (uVar6 = uVar4 + 2,  unaff_RBX < uVar6)) goto code_r0x0047a1f7;\n                        in_R9 = uVar4 + 1;\n                        if (in_R9 < unaff_RBX) {\n                            uVar1 = *(uVar4 + 1 + in_RAX);\n                            in_R9 = uVar1;\n                            if (uVar1 != 0x6d) goto code_r0x0047a1f7;\n                            if (uVar6 <= unaff_RBX) {\n                                return;\n                            }\n                            fcn.0045c660(unaff_RBX);\n                        }\n                        fcn.0045c5a0(unaff_RBX);\ncode_r0x0047af25:\n                        fcn.0045c660(unaff_RBX);\ncode_r0x0047af30:\n                        fcn.0045c5a0(unaff_RBX);\ncode_r0x0047af3b:\n                        fcn.0045c5a0(unaff_RBX);\ncode_r0x0047af46:\n                        fcn.0045c660(unaff_RBX);\ncode_r0x0047af51:\n                        fcn.0045c660(in_R10);\ncode_r0x0047af5c:\n                        fcn.0045c5e0(in_R10, unaff_RBX);\n                    }\n                    fcn.0045c5a0(unaff_RBX);\ncode_r0x0047af72:\n                    fcn.0045c660(uVar6);\ncode_r0x0047af7d:\n                    fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047af88:\n                    fcn.0045c660(uVar6);\ncode_r0x0047af93:\n                    fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047af9e:\n                    fcn.0045c660(uVar6);\ncode_r0x0047afa9:\n                    fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047afb4:\n                    fcn.0045c660(uVar6);\ncode_r0x0047afbf:\n                    fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047afca:\n                    fcn.0045c660(uVar6);\ncode_r0x0047afd5:\n                    fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047afe5:\n                    fcn.0045c660(unaff_RBX);\n                }\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0047affb:\n                fcn.0045c660(in_R10);\ncode_r0x0047b006:\n                fcn.0045c5e0(in_R10, unaff_RBX);\ncode_r0x0047b011:\n                fcn.0045c660(uVar6);\ncode_r0x0047b01c:\n                fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047b027:\n                fcn.0045c660(in_R9);\ncode_r0x0047b032:\n                fcn.0045c5e0(in_R9, unaff_RBX);\ncode_r0x0047b03d:\n                fcn.0045c660(uVar6);\n            }\n            fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047b053:\n            fcn.0045c660(uVar6);\ncode_r0x0047b05e:\n            fcn.0045c5e0(uVar6, unaff_RBX);\ncode_r0x0047b069:\n            fcn.0045c660(unaff_RBX);\ncode_r0x0047b074:\n            fcn.0045c5a0(unaff_RBX);\ncode_r0x0047b07f:\n            fcn.0045c660(unaff_RBX);\ncode_r0x0047b08a:\n            fcn.0045c5a0(unaff_RBX);\ncode_r0x0047b095:\n            fcn.0045c5a0(unaff_RBX);\ncode_r0x0047b0a5:\n            fcn.0045c5a0(6);\ncode_r0x0047b0b2:\n            fcn.0045c660(unaff_RBX);\ncode_r0x0047b0bd:\n            uVar4 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\ncode_r0x0047a1f7:\n        in_R10 = 0x303a30303a37302d;\n        uVar4 = uVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 6220
    },
    "0047b820": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0047b820(uchar (*arg1) [16], ulong noname_1, uchar *arg3, uchar (*arg4) [16])\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *arg2;\n    uchar (*pauVar5) [16];\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar (*pauVar8) [16];\n    int64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar10;\n    uchar (*pauVar11) [16];\n    int64_t iVar12;\n    uchar (*pauVar13) [16];\n    uchar (*pauVar14) [16];\n    char cVar15;\n    uint64_t in_R10;\n    ulong uVar16;\n    uint32_t uVar17;\n    int64_t iVar18;\n    uchar (*pauVar19) [16];\n    ulong uVar20;\n    int64_t unaff_R14;\n    ulong uVar21;\n    uchar in_XMM15 [16];\n    \n    while (puVar9 = *0x20,  *0x20 + -0x290 < *(unaff_R14 + 0x10) || *0x20 + -0x290 == *(unaff_R14 + 0x10)) {\ncode_r0x0047dd7a:\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + 0x30) = arg3;\n        *(puVar9 + 0x38) = arg4;\n        *(puVar9 + 0x40) = in_R10;\n        *(puVar9 + -8) = 0x47dda7;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        arg3 = *(puVar9 + 0x30);\n        arg4 = *(puVar9 + 0x38);\n        in_R10 = *(puVar9 + 0x40);\n        *0x20 = puVar9;\n    }\n    puVar9 = *0x20 + -0x310;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + -0x160) = in_RAX;\n    *(*0x20 + -0x168) = unaff_RBX;\n    *(*0x20 + -0x28) = arg1;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x40) = in_R10;\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + -0x318) = 0x47b896;\n    uVar2 = fcn.0047df00(arg1);\n    *(*0x20 + -0x40) = uVar2;\n    *(*0x20 + -0x228) = unaff_RBX;\n    *(*0x20 + -0x230) = arg1;\n    *(*0x20 + -0x1e0) = unaff_RDI;\n    iVar18 = *(*0x20 + 0x38);\n    iVar10 = -1;\n    in_R10 = 0xffffffffffffffff;\n    uVar2 = 0;\n    uVar16 = 0;\n    iVar12 = 0;\n    uVar20 = 0;\n    uVar21 = 0;\n    *(*0x20 + -0x170) = *(*0x20 + 0x30);\n    *(*0x20 + -0x178) = *(*0x20 + 0x28);\n    *(*0x20 + -0x30) = *(*0x20 + 0x20);\n    unaff_RSI = *(*0x20 + 0x40);\n    do {\n        if (unaff_RSI == 0) {\n            return *(*0x20 + -0x30);\n        }\n        *(*0x20 + -0x240) = uVar21;\n        *(*0x20 + -0x210) = uVar20;\n        *(*0x20 + -0x290) = iVar12;\n        *(*0x20 + -0x200) = uVar16;\n        *(*0x20 + -0x218) = uVar2;\n        *(*0x20 + -0x208) = in_R10;\n        *(*0x20 + -0x298) = iVar10;\n        *(*0x20 + -0x318) = 0x47b9cd;\n        uVar2 = fcn.0047a1e0();\n        *(*0x20 + -600) = arg1;\n        *(*0x20 + -0x50) = unaff_RDI;\n        *(*0x20 + -0x260) = iVar18;\n        if (unaff_RSI == 0) {\n            puVar4 = *(*0x20 + -0x178);\n            arg2 = *(*0x20 + -0x170);\n            unaff_RBX = *(*0x20 + -0x30);\n            unaff_RSI = iVar18;\n        }\n        else {\n            uVar3 = *(*0x20 + -0x178);\n            *(*0x20 + -0x180) = uVar3 + unaff_RSI;\n            if (*(*0x20 + -0x170) < uVar3 + unaff_RSI) {\n                *(*0x20 + -0x238) = unaff_RSI;\n                *(*0x20 + -0x48) = uVar2;\n                *(*0x20 + -0x318) = 0x47ba5f;\n                uVar2 = fcn.00445220(uVar3);\n                unaff_RSI = *(*0x20 + -0x238);\n            }\n            else {\n                uVar2 = *(*0x20 + -0x30);\n                uVar3 = *(*0x20 + -0x170);\n            }\n            *(*0x20 + -0x170) = uVar3;\n            *(*0x20 + -0x30) = uVar2;\n            *(*0x20 + -0x318) = 0x47ba9e;\n            fcn.0045cee0(unaff_RSI);\n            arg1 = *(*0x20 + -600);\n            unaff_RSI = *(*0x20 + -0x260);\n            unaff_RDI = *(*0x20 + -0x50);\n            puVar4 = *(*0x20 + -0x180);\n            arg2 = *(*0x20 + -0x170);\n            unaff_RBX = *(*0x20 + -0x30);\n        }\n        if (arg1 == NULL) {\n            return unaff_RBX;\n        }\n        *(*0x20 + -0x1f0) = arg2;\n        *(*0x20 + -0x1f8) = puVar4;\n        *(*0x20 + -0x38) = unaff_RBX;\n        iVar10 = *(*0x20 + -0x298);\n        if ((iVar10 < 0) && ((arg1 >> 8 & 1) != 0)) {\n            *(*0x20 + -0x318) = 0x47bb11;\n            iVar10 = fcn.0047e1e0(arg1, arg2);\n            iVar12 = unaff_RDI + 1;\n            arg2 = *(*0x20 + -0x1f0);\n            unaff_RSI = *(*0x20 + -0x260);\n            unaff_RDI = *(*0x20 + -0x50);\n            pauVar11 = 0x1;\n            puVar4 = *(*0x20 + -0x1f8);\n            unaff_RBX = *(*0x20 + -0x38);\n            pauVar5 = *(*0x20 + -600);\n            arg4 = arg1;\n        }\n        else {\n            pauVar11 = *(*0x20 + -0x218);\n            arg4 = *(*0x20 + -0x200);\n            iVar12 = *(*0x20 + -0x290);\n            pauVar5 = arg1;\n        }\n        pauVar14 = *0x72e728;\n        if ((*(*0x20 + -0x208) < 0) && ((pauVar5 >> 9 & 1) != 0)) {\n            *(*0x20 + -0x208) = (*(*0x20 + -0x1e0) % 0x15180) / 0xe10;\n            uVar3 = (*(*0x20 + -0x1e0) % 0x15180) % 0xe10;\n            iVar18 = uVar3 + SUB168(SEXT816(-0x7777777777777777) * SEXT816(uVar3) >> 0x40, 0) >> 5;\n            pauVar8 = uVar3 + iVar18 * -0x3c;\n            in_R10 = *(*0x20 + -0x208);\n        }\n        else {\n            puVar4 = *(*0x20 + -0x1f8);\n            iVar18 = *(*0x20 + -0x210);\n            pauVar8 = *(*0x20 + -0x240);\n            in_R10 = *(*0x20 + -0x208);\n        }\n        *(*0x20 + -0x208) = in_R10;\n        *(*0x20 + -0x240) = pauVar8;\n        *(*0x20 + -0x210) = iVar18;\n        *(*0x20 + -0x170) = iVar10;\n        *(*0x20 + -0x178) = iVar12;\n        *(*0x20 + -0x200) = arg4;\n        *(*0x20 + -0x218) = pauVar11;\n        pauVar19 = pauVar5 & 0xffff;\n        if (pauVar19 < 0x10a) {\n            if (pauVar19 < 0x104) {\n                if (pauVar19 < 0x24) {\n                    if (pauVar19 == 0x17) {\n                        iVar12 = *(*0x20 + -0x228);\n                        if (iVar12 == 0) {\n                            iVar18 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(*(*0x20 + -0x230)) >> 0x40, 0) +\n                                     *(*0x20 + -0x230) >> 5;\n                            *(*0x20 + -0x180) = iVar18;\n                            iVar12 = *(*0x20 + -0x230) >> 0x3f;\n                            iVar18 = iVar18 - iVar12;\n                            if (iVar18 < 0) {\n                                puVar6 = puVar4 + 1;\n                                iVar18 = unaff_RBX;\n                                puVar7 = puVar4;\n                                if (arg2 < puVar6) {\n                                    *(*0x20 + -0x188) = iVar12;\n                                    *(*0x20 + -0x318) = 0x47c278;\n                                    iVar18 = fcn.00445220(puVar4);\n                                    puVar6 = unaff_RBX + 1;\n                                    iVar12 = *(*0x20 + -0x188);\n                                    puVar7 = *(*0x20 + -0x1f8);\n                                    arg2 = puVar4;\n                                }\n                                puVar7[iVar18] = 0x2d;\n                                iVar18 = iVar12 - *(*0x20 + -0x180);\n                            }\n                            else {\n                                puVar6 = puVar4 + 1;\n                                iVar12 = unaff_RBX;\n                                puVar7 = puVar4;\n                                if (arg2 < puVar6) {\n                                    *(*0x20 + -0x2a0) = iVar18;\n                                    *(*0x20 + -0x318) = 0x47c30a;\n                                    iVar12 = fcn.00445220(puVar4);\n                                    puVar6 = unaff_RBX + 1;\n                                    iVar18 = *(*0x20 + -0x2a0);\n                                    puVar7 = *(*0x20 + -0x1f8);\n                                    arg2 = puVar4;\n                                }\n                                puVar7[iVar12] = 0x2b;\n                            }\n                            *(*0x20 + -0x180) = iVar18;\n                            *(*0x20 + -0x188) =\n                                 (SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar18) >> 0x40, 0) + iVar18 >> 5) -\n                                 (iVar18 >> 0x3f);\n                            *(*0x20 + -0x318) = 0x47c3b4;\n                            fcn.0047b1e0(arg2);\n                            *(*0x20 + -0x318) = 0x47c3d5;\n                            unaff_RBX = fcn.0047b1e0(arg2);\n                            unaff_RSI = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x230);\n                            in_R10 = *(*0x20 + -0x208);\n                            iVar10 = *(*0x20 + -0x170);\n                            iVar12 = *(*0x20 + -0x178);\n                            puVar4 = puVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x180) = puVar4 + iVar12;\n                            if (arg2 < puVar4 + iVar12) {\n                                *(*0x20 + -0x318) = 0x47c17c;\n                                unaff_RBX = fcn.00445220(puVar4);\n                                iVar12 = *(*0x20 + -0x228);\n                                arg2 = puVar4;\n                            }\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x188) = arg2;\n                            *(*0x20 + -0x318) = 0x47c1b3;\n                            fcn.0045cee0(iVar12);\n                            iVar12 = *(*0x20 + -0x178);\n                            unaff_RSI = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x230);\n                            in_R10 = *(*0x20 + -0x208);\n                            iVar10 = *(*0x20 + -0x170);\n                            arg2 = *(*0x20 + -0x188);\n                            unaff_RBX = *(*0x20 + -0x30);\n                            puVar4 = *(*0x20 + -0x180);\n                        }\n                    }\n                    else if (pauVar19[-2] + 8 < 0xa) {\n                        arg1 = *(*0x20 + -0x230);\n                        if ((arg1 == NULL) &&\n                           ((((pauVar5 == 0x18 || (pauVar5 == 0x1b)) || (pauVar5 == 0x19)) ||\n                            ((pauVar5 == 0x1a || (pauVar5 == 0x1c)))))) {\n                            puVar6 = puVar4 + 1;\n                            puVar7 = puVar4;\n                            if (arg2 < puVar6) {\n                                *(*0x20 + -0x318) = 0x47bd1c;\n                                iVar18 = fcn.00445220(puVar4);\n                                puVar6 = unaff_RBX + 1;\n                                unaff_RSI = *(*0x20 + -0x260);\n                                arg1 = *(*0x20 + -0x230);\n                                in_R10 = *(*0x20 + -0x208);\n                                puVar7 = *(*0x20 + -0x1f8);\n                                iVar10 = *(*0x20 + -0x170);\n                                iVar12 = *(*0x20 + -0x178);\n                                unaff_RBX = iVar18;\n                                arg2 = puVar4;\n                            }\n                            puVar7[unaff_RBX] = 0x5a;\n                            puVar4 = puVar6;\n                        }\n                        else {\n                            iVar18 = *arg1 + SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg1) >> 0x40, 0) >> 5;\n                            *(*0x20 + -0x180) = iVar18;\n                            iVar12 = arg1 >> 0x3f;\n                            iVar18 = iVar18 - iVar12;\n                            if (iVar18 < 0) {\n                                puVar6 = puVar4 + 1;\n                                iVar18 = unaff_RBX;\n                                puVar7 = puVar4;\n                                if (arg2 < puVar6) {\n                                    *(*0x20 + -0x188) = iVar12;\n                                    *(*0x20 + -0x318) = 0x47bdd0;\n                                    iVar18 = fcn.00445220(puVar4);\n                                    puVar6 = unaff_RBX + 1;\n                                    iVar12 = *(*0x20 + -0x188);\n                                    puVar7 = *(*0x20 + -0x1f8);\n                                    arg1 = *(*0x20 + -0x230);\n                                    arg2 = puVar4;\n                                }\n                                puVar7[iVar18] = 0x2d;\n                                iVar18 = iVar12 - *(*0x20 + -0x180);\n                                arg1 = -arg1;\n                            }\n                            else {\n                                puVar6 = puVar4 + 1;\n                                iVar12 = unaff_RBX;\n                                puVar7 = puVar4;\n                                if (arg2 < puVar6) {\n                                    *(*0x20 + -0x2a8) = iVar18;\n                                    *(*0x20 + -0x318) = 0x47be68;\n                                    iVar12 = fcn.00445220(puVar4);\n                                    puVar6 = unaff_RBX + 1;\n                                    iVar18 = *(*0x20 + -0x2a8);\n                                    puVar7 = *(*0x20 + -0x1f8);\n                                    arg1 = *(*0x20 + -0x230);\n                                    arg2 = puVar4;\n                                }\n                                puVar7[iVar12] = 0x2b;\n                            }\n                            *(*0x20 + -0x180) = iVar18;\n                            *(*0x20 + -0x1e8) = arg1;\n                            *(*0x20 + -0x188) =\n                                 (SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar18) >> 0x40, 0) + iVar18 >> 5) -\n                                 (iVar18 >> 0x3f);\n                            *(*0x20 + -0x318) = 0x47bf17;\n                            unaff_RBX = fcn.0047b1e0(arg2);\n                            iVar12 = *(*0x20 + -600);\n                            if (((iVar12 == 0x1b) || (iVar12 == 0x20)) || ((iVar12 == 0x1c || (iVar12 == 0x21)))) {\n                                iVar18 = unaff_RBX;\n                                puVar4 = puVar6;\n                                puVar7 = puVar6 + 1;\n                                if (arg2 < puVar6 + 1) {\n                                    *(*0x20 + -400) = puVar6;\n                                    *(*0x20 + -0x318) = 0x47bf65;\n                                    iVar18 = fcn.00445220(puVar6);\n                                    iVar12 = *(*0x20 + -600);\n                                    puVar4 = *(*0x20 + -400);\n                                    arg2 = puVar6;\n                                    puVar7 = unaff_RBX + 1;\n                                }\n                                puVar6 = puVar7;\n                                puVar4[iVar18] = 0x3a;\n                                unaff_RBX = iVar18;\n                            }\n                            if ((iVar12 != 0x1f) && (iVar12 != 0x1a)) {\n                                *(*0x20 + -0x318) = 0x47bfb2;\n                                unaff_RBX = fcn.0047b1e0(arg2);\n                                iVar12 = *(*0x20 + -600);\n                            }\n                            if ((iVar12 == 0x19) || (iVar12 == 0x1e)) {\ncode_r0x0047c01a:\n                                *(*0x20 + -0x318) = 0x47c065;\n                                unaff_RBX = fcn.0047b1e0(arg2);\n                            }\n                            else if ((iVar12 == 0x21) || (iVar12 == 0x1c)) {\n                                puVar4 = puVar6 + 1;\n                                iVar12 = unaff_RBX;\n                                puVar7 = puVar6;\n                                if (arg2 < puVar4) {\n                                    *(*0x20 + -0x198) = puVar6;\n                                    *(*0x20 + -0x318) = 0x47c005;\n                                    iVar12 = fcn.00445220(puVar6);\n                                    puVar4 = unaff_RBX + 1;\n                                    puVar7 = *(*0x20 + -0x198);\n                                    arg2 = puVar6;\n                                }\n                                puVar7[iVar12] = 0x3a;\n                                puVar6 = puVar4;\n                                goto code_r0x0047c01a;\n                            }\n                            arg1 = *(*0x20 + -0x230);\n                            in_R10 = *(*0x20 + -0x208);\n                            iVar10 = *(*0x20 + -0x170);\n                            iVar12 = *(*0x20 + -0x178);\n                            unaff_RSI = *(*0x20 + -0x260);\n                            puVar4 = puVar6;\n                        }\n                    }\n                    else {\n                        if (0x21 < pauVar19) {\n                            *(*0x20 + -0x20) = *(*0x20 + -0x160);\n                            *(*0x20 + -0x18) = *(*0x20 + -0x168);\n                            *(*0x20 + -0x10) = *(*0x20 + -0x28);\n                            *(*0x20 + -0x151) = 0;\n                            *(*0x20 + -0x150) = 0;\n                            *(*0x20 + -0x1d8) = iVar12;\n                            *(*0x20 + -0x250) = 9;\n                            pauVar14 = *(*0x20 + -0x20) & 0x3fffffff;\n                            goto code_r0x0047dbb7;\n                        }\ncode_r0x0047d097:\n                        arg1 = *(*0x20 + -0x230);\n                    }\n                }\n                else {\n                    if (pauVar19 == 0x101) {\n                        pauVar5 = pauVar11[-1] + 0xf;\n                        if (pauVar5 < 0xc) {\n                            if (pauVar5 < *0x72e748) {\n                                pauVar14 = *(*0x72e740)[pauVar5];\n                                pauVar8 = *((*0x72e740)[pauVar5] + 8);\n                                goto code_r0x0047d956;\n                            }\n                            *(*0x20 + -0x318) = 0x47da30;\n                            pauVar19 = *0x72e748;\n                            pauVar8 = *0x72e740;\n                            pauVar14 = *0x72e748;\n                            fcn.0045c5a0(*0x72e748);\n                        }\n                        else {\n                            *(*0x20 + -0x10c) = 0;\n                            *(*0x20 + -0x108) = in_XMM15;\n                            if (pauVar11 != NULL) {\n                                pauVar19 = 0x14;\n                                pauVar5 = pauVar8;\n                                pauVar13 = pauVar11;\n                                goto code_r0x0047db14;\n                            }\n                            *(*0x20 + -0xf9) = 0x30;\n                            pauVar19 = 0x13;\n                            pauVar14 = pauVar11;\n                            pauVar5 = *0x20 + -0x108;\n                        }\n                        while (0x14 < pauVar19) {\n                            pauVar11 = 0x14;\n                            *(*0x20 + -0x318) = 0x47dae5;\n                            fcn.0045c660(0x14);\n                            while( true ) {\n                                (*0x20 + -0x10d)[pauVar5] = pauVar14 + '0';\n                                pauVar19 = *(*0x20 + -0x280);\n                                pauVar5 = *(*0x20 + -0x240);\n                                pauVar13 = pauVar8;\ncode_r0x0047db14:\n                                pauVar8 = pauVar5;\n                                pauVar14 = pauVar11;\n                                pauVar5 = pauVar19;\n                                if (pauVar13 == NULL) break;\n                                *(*0x20 + -0x280) = pauVar19[-1] + 0xf;\n                                pauVar8 = pauVar13 / 10;\n                                pauVar14 = pauVar13 % 10;\n                                in_R10 = *(*0x20 + -0x280);\n                                if (0x13 < in_R10) {\n                                    pauVar5 = 0x14;\n                                    *(*0x20 + -0x318) = 0x47db69;\n                                    fcn.0045c5a0(0x14);\n                                    do {\n                                        (*0x20 + -0x152)[arg4] = pauVar14 + (pauVar14 / 10) * -10 + '0';\n                                        *(*0x20 + -0x250) = arg4[-1] + 0xf;\n                                        pauVar14 = pauVar14 / 10;\ncode_r0x0047dbb7:\n                                        arg4 = *(*0x20 + -0x250);\n                                    } while (0 < arg4);\n                                    puVar6 = pauVar5 >> 0x10;\n                                    if (9 < puVar6) {\n                                        puVar6 = 0x9;\n                                    }\n                                    arg3 = puVar6;\n                                    iVar12 = unaff_RBX;\n                                    puVar7 = puVar4;\n                                    if (pauVar19 == 0x23) goto code_r0x0047dd36;\n                                    while( true ) {\n                                        *(*0x20 + -0x220) = puVar6;\n                                        arg3 = puVar7 + 1;\n                                        unaff_RBX = iVar12;\n                                        puVar4 = puVar7;\n                                        if (arg2 < arg3) {\n                                            *(*0x20 + -0x318) = 0x47dc10;\n                                            unaff_RBX = fcn.00445220(puVar7);\n                                            arg3 = iVar12 + 1;\n                                            unaff_RSI = *(*0x20 + -0x260);\n                                            unaff_RDI = *(*0x20 + -0x50);\n                                            in_R10 = *(*0x20 + -0x208);\n                                            puVar4 = *(*0x20 + -0x1f8);\n                                            puVar6 = *(*0x20 + -0x220);\n                                            arg2 = puVar7;\n                                        }\n                                        puVar4[unaff_RBX] = 0x2e;\n                                        if (puVar6 < 0xa) break;\n                                        *(*0x20 + -0x318) = 0x47dd33;\n                                        fcn.0045c5e0(puVar6, 9);\ncode_r0x0047dd36:\n                                        while (puVar6 = arg3,  0 < puVar6) {\n                                            arg3 = puVar6 + -1;\n                                            if (0x8 < arg3) {\n                                                arg1 = 0x9;\n                                                *(*0x20 + -0x318) = 0x47dd79;\n                                                in_RAX = fcn.0045c5a0(9);\n                                                goto code_r0x0047dd7a;\n                                            }\n                                            arg4 = *(*0x20 + puVar6 + -0x152);\n                                            if (*(*0x20 + puVar6 + -0x152) != 0x30) break;\n                                        }\n                                        iVar12 = unaff_RBX;\n                                        puVar7 = puVar4;\n                                        if (puVar6 == NULL) goto code_r0x0047dcdb;\n                                    }\n                                    *(*0x20 + -0x2b8) = puVar6 + arg3;\n                                    if (arg2 < puVar6 + arg3) {\n                                        *(*0x20 + -0x180) = arg3;\n                                        *(*0x20 + -0x318) = 0x47dc95;\n                                        unaff_RBX = fcn.00445220(arg3);\n                                        puVar6 = *(*0x20 + -0x220);\n                                        arg2 = arg3;\n                                    }\n                                    *(*0x20 + -0x2b0) = arg2;\n                                    *(*0x20 + -0x78) = unaff_RBX;\n                                    *(*0x20 + -0x318) = 0x47dcc9;\n                                    fcn.0045cee0(puVar6);\n                                    puVar4 = *(*0x20 + -0x2b8);\n                                    arg2 = *(*0x20 + -0x2b0);\n                                    unaff_RBX = *(*0x20 + -0x78);\ncode_r0x0047dcdb:\n                                    unaff_RSI = *(*0x20 + -0x260);\n                                    arg1 = *(*0x20 + -0x230);\n                                    in_R10 = *(*0x20 + -0x208);\n                                    iVar10 = *(*0x20 + -0x170);\n                                    iVar12 = *(*0x20 + -0x178);\n                                    goto code_r0x0047b91d;\n                                }\n                            }\n                        }\n                        pauVar8 = 0x4ad296;\n                        *(*0x20 + -0x318) = 0x47da7c;\n                        pauVar14 = fcn.00448c40(8, -(pauVar19[-2] + 0xc), 0x4ac9c2, 1);\n                        puVar4 = *(*0x20 + -0x1f8);\n                        arg2 = *(*0x20 + -0x1f0);\n                        unaff_RBX = *(*0x20 + -0x38);\n                    }\n                    else {\n                        if (pauVar19 != 0x102) {\n                            if (pauVar19 != 0x103) goto code_r0x0047d097;\n                            *(*0x20 + -0x318) = 0x47c545;\n                            unaff_RBX = fcn.0047b1e0(arg2);\n                            unaff_RSI = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x230);\n                            in_R10 = *(*0x20 + -0x208);\n                            iVar10 = *(*0x20 + -0x170);\n                            iVar12 = *(*0x20 + -0x178);\n                            goto code_r0x0047b91d;\n                        }\n                        pauVar5 = pauVar11[-1] + 0xf;\n                        if (0xb < pauVar5) {\n                            *(*0x20 + -0x148) = 0;\n                            *(*0x20 + -0x144) = in_XMM15;\n                            if (pauVar11 != NULL) {\n                                pauVar5 = 0x14;\n                                pauVar19 = pauVar8;\n                                pauVar14 = pauVar11;\n                                goto code_r0x0047d8f6;\n                            }\n                            *(*0x20 + -0x135) = 0x30;\n                            pauVar5 = 0x13;\n                            pauVar19 = *0x20 + -0x144;\ncode_r0x0047d740:\n                            do {\n                                pauVar14 = pauVar11;\n                                if (pauVar5 < 0x15) {\n                                    *(*0x20 + -0x318) = 0x47d78c;\n                                    arg4 = fcn.00448c40(8, -(pauVar5[-2] + 0xc), 0x4ac9c2, 1);\n                                    unaff_RSI = *(*0x20 + -0x260);\n                                    in_R10 = *(*0x20 + -0x208);\n                                    puVar4 = *(*0x20 + -0x1f8);\n                                    arg2 = *(*0x20 + -0x1f0);\n                                    iVar10 = *(*0x20 + -0x170);\n                                    pauVar8 = 0x4ad296;\n                                    iVar12 = *(*0x20 + -0x178);\n                                    unaff_RBX = *(*0x20 + -0x38);\ncode_r0x0047d7e2:\n                                    if (0x2 < pauVar8) {\n                                        puVar6 = puVar4 + 3;\n                                        puVar7 = puVar4;\n                                        if (arg2 < puVar6) {\n                                            *(*0x20 + -0x1d0) = puVar6;\n                                            *(*0x20 + -0x58) = arg4;\n                                            *(*0x20 + -0x318) = 0x47d81a;\n                                            unaff_RBX = fcn.00445220(puVar4);\n                                            unaff_RSI = *(*0x20 + -0x260);\n                                            puVar6 = *(*0x20 + -0x1d0);\n                                            arg4 = *(*0x20 + -0x58);\n                                            in_R10 = *(*0x20 + -0x208);\n                                            puVar7 = *(*0x20 + -0x1f8);\n                                            iVar10 = *(*0x20 + -0x170);\n                                            iVar12 = *(*0x20 + -0x178);\n                                            arg2 = puVar4;\n                                        }\n                                        *(*0x20 + -0x2ca) = **arg4;\n                                        uVar1 = (*arg4)[2];\n                                        *(puVar7 + unaff_RBX) = *(*0x20 + -0x2ca);\n                                        puVar7[unaff_RBX + 2] = uVar1;\n                                        arg1 = *(*0x20 + -0x230);\n                                        puVar4 = puVar6;\n                                        goto code_r0x0047b91d;\n                                    }\n                                    *(*0x20 + -0x318) = 0x47d8ba;\n                                    pauVar14 = pauVar8;\n                                    fcn.0045c5e0(3, pauVar8);\n                                }\n                                pauVar11 = 0x14;\n                                *(*0x20 + -0x318) = 0x47d8c7;\n                                fcn.0045c660(0x14);\n                                pauVar5 = pauVar19;\n                                while( true ) {\n                                    (*0x20 + -0x149)[pauVar5] = pauVar14 + '0';\n                                    pauVar5 = *(*0x20 + -0x270);\n                                    pauVar19 = *(*0x20 + -0x240);\n                                    pauVar14 = pauVar8;\ncode_r0x0047d8f6:\n                                    pauVar8 = pauVar19;\n                                    pauVar19 = pauVar5;\n                                    if (pauVar14 == NULL) break;\n                                    *(*0x20 + -0x270) = pauVar5[-1] + 0xf;\n                                    pauVar8 = pauVar14 / 10;\n                                    pauVar14 = pauVar14 % 10;\n                                    if (0x13 < *(*0x20 + -0x270)) {\n                                        *(*0x20 + -0x318) = 0x47d94b;\n                                        fcn.0045c5a0(0x14);\n                                        goto code_r0x0047d94b;\n                                    }\n                                }\n                            } while( true );\n                        }\n                        pauVar14 = *0x72e740;\n                        arg4 = *0x72e748;\n                        if (pauVar5 < *0x72e748) {\n                            pauVar19 = pauVar5 * 0x10;\n                            arg4 = *(*0x72e740)[pauVar5];\n                            pauVar8 = *(**0x72e740 + pauVar5 * 0x10 + 8);\n                            goto code_r0x0047d7e2;\n                        }\ncode_r0x0047d94b:\n                        *(*0x20 + -0x318) = 0x47d956;\n                        fcn.0045c5a0(arg4);\n                    }\ncode_r0x0047d956:\n                    *(*0x20 + -0x180) = *pauVar8 + puVar4;\n                    if (arg2 < *pauVar8 + puVar4) {\n                        *(*0x20 + -0x70) = pauVar14;\n                        *(*0x20 + -0x2c8) = pauVar8;\n                        *(*0x20 + -0x318) = 0x47d989;\n                        unaff_RBX = fcn.00445220(puVar4);\n                        pauVar8 = *(*0x20 + -0x2c8);\n                        arg2 = puVar4;\n                    }\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x188) = arg2;\n                    *(*0x20 + -0x318) = 0x47d9c5;\n                    fcn.0045cee0(pauVar8);\n                    iVar12 = *(*0x20 + -0x178);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    arg1 = *(*0x20 + -0x230);\n                    in_R10 = *(*0x20 + -0x208);\n                    iVar10 = *(*0x20 + -0x170);\n                    arg2 = *(*0x20 + -0x188);\n                    unaff_RBX = *(*0x20 + -0x30);\n                    puVar4 = *(*0x20 + -0x180);\n                }\n            }\n            else if (pauVar19 < 0x107) {\n                if (pauVar19 == 0x104) {\n                    *(*0x20 + -0x318) = 0x47c77f;\n                    unaff_RBX = fcn.0047b1e0(arg2);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    arg1 = *(*0x20 + -0x230);\n                    in_R10 = *(*0x20 + -0x208);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                }\n                else {\n                    if (pauVar19 == 0x105) {\n                        pauVar5 = *(*0x20 + -0x1e0) + ((*(*0x20 + -0x1e0) + 0x15180U >> 1) / 0x49d40) * -0x93a80;\n                        *(*0x20 + -0x248) = pauVar5[0x1518];\n                        pauVar8 = (pauVar5[0x1518] +\n                                   SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(pauVar5[0x1518]) >> 0x40, 0) >> 0x10) -\n                                  (*(*0x20 + -0x248) >> 0x3f);\n                        if (pauVar8 < 0x7) {\n                            if (pauVar8 < *0x72e728) {\n                                pauVar11 = *(*0x72e720)[pauVar8];\n                                pauVar5 = *((*0x72e720)[pauVar8] + 8);\n                                goto code_r0x0047d525;\n                            }\n                            *(*0x20 + -0x318) = 0x47d5f7;\n                            pauVar5 = *0x72e720;\n                            pauVar19 = fcn.0045c5a0(*0x72e728);\n                        }\n                        else {\n                            *(*0x20 + -0x134) = 0;\n                            *(*0x20 + -0x130) = in_XMM15;\n                            pauVar14 = pauVar5;\n                            if (pauVar8 != NULL) {\n                                pauVar19 = 0x14;\n                                goto code_r0x0047d6e1;\n                            }\n                            *(*0x20 + -0x121) = 0x30;\n                            pauVar19 = 0x13;\n                            pauVar5 = *0x20 + -0x130;\n                        }\n                        while (pauVar8 = pauVar5,  cVar15 = in_R10,  0x14 < pauVar19) {\n                            *(*0x20 + -0x318) = 0x47d6b1;\n                            fcn.0045c660(0x14);\n                            pauVar19 = pauVar14;\n                            while( true ) {\n                                pauVar14 = *(*0x20 + -0x288);\n                                (*0x20 + -0x135)[pauVar14] = cVar15 + '0';\n                                in_R10 = *(*0x20 + -0x208);\ncode_r0x0047d6e1:\n                                pauVar5 = pauVar19;\n                                if (pauVar8 == NULL) break;\n                                *(*0x20 + -0x268) = pauVar8;\n                                *(*0x20 + -0x288) = pauVar19;\n                                pauVar19 = pauVar19[-1] + 0xf;\n                                pauVar8 = *(*0x20 + -0x268) / 10;\n                                cVar15 = *(*0x20 + -0x268) + pauVar8 * -10;\n                                if (0x13 < pauVar19) {\n                                    pauVar5 = 0x14;\n                                    *(*0x20 + -0x318) = 0x47d73d;\n                                    fcn.0045c5a0(0x14);\n                                    goto code_r0x0047d740;\n                                }\n                            }\n                        }\n                        pauVar5 = 0x4ad815;\n                        *(*0x20 + -0x318) = 0x47d64c;\n                        pauVar11 = fcn.00448c40(10, -(pauVar19[-2] + 0xc), 0x4ac9c2, 1);\n                        puVar4 = *(*0x20 + -0x1f8);\n                        arg2 = *(*0x20 + -0x1f0);\n                        unaff_RBX = *(*0x20 + -0x38);\n                    }\n                    else {\n                        pauVar11 = *(*0x20 + -0x1e0) + ((*(*0x20 + -0x1e0) + 0x15180U >> 1) / 0x49d40) * -0x93a80;\n                        pauVar5 = SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(pauVar11[0x1518]) >> 0x40, 0);\n                        pauVar14 = pauVar11[0x1518] >> 0x3f;\n                        pauVar8 = (pauVar5[0x1518] + *pauVar11 >> 0x10) - pauVar14;\n                        if (0x6 < pauVar8) {\n                            *(*0x20 + -0x120) = 0;\n                            *(*0x20 + -0x11c) = in_XMM15;\n                            if (pauVar8 == NULL) {\n                                *(*0x20 + -0x10d) = 0x30;\n                                pauVar19 = 0x13;\n                                pauVar5 = *0x20 + -0x11c;\n                                goto code_r0x0047d32f;\n                            }\n                            pauVar19 = 0x14;\n                            goto code_r0x0047d4cd;\n                        }\n                        pauVar11 = *0x72e728;\n                        if (pauVar8 < *0x72e728) {\n                            pauVar11 = *(*0x72e720)[pauVar8];\n                            pauVar5 = *((*0x72e720)[pauVar8] + 8);\n                            while (pauVar5 < 0x3) {\n                                *(*0x20 + -0x318) = 0x47d49e;\n                                pauVar14 = pauVar5;\n                                fcn.0045c5e0(3, pauVar5);\n                                do {\n                                    *(*0x20 + -0x318) = 0x47d4a8;\n                                    fcn.0045c660(0x14);\n                                    pauVar8 = pauVar5;\n                                    pauVar19 = pauVar14;\n                                    while( true ) {\n                                        uVar17 = pauVar11 + 0x30;\n                                        pauVar11 = uVar17;\n                                        pauVar14 = *(*0x20 + -0x278);\n                                        (*0x20 + -0x121)[pauVar14] = uVar17;\ncode_r0x0047d4cd:\n                                        pauVar5 = pauVar19;\n                                        if (pauVar8 == NULL) break;\n                                        *(*0x20 + -0x278) = pauVar19;\n                                        pauVar19 = pauVar19[-1] + 0xf;\n                                        pauVar5 = pauVar8 / 10;\n                                        pauVar11 = pauVar8 % 10;\n                                        pauVar8 = pauVar5;\n                                        if (0x13 < pauVar19) {\n                                            *(*0x20 + -0x318) = 0x47d51d;\n                                            fcn.0045c5a0(0x14);\n                                            goto code_r0x0047d51d;\n                                        }\n                                    }\ncode_r0x0047d32f:\n                                } while (0x14 < pauVar19);\n                                *(*0x20 + -0x318) = 0x47d37b;\n                                pauVar11 = fcn.00448c40(10, -(pauVar19[-2] + 0xc), 0x4ac9c2, 1);\n                                in_R10 = *(*0x20 + -0x208);\n                                unaff_RSI = *(*0x20 + -0x260);\n                                puVar4 = *(*0x20 + -0x1f8);\n                                arg2 = *(*0x20 + -0x1f0);\n                                iVar10 = *(*0x20 + -0x170);\n                                unaff_RBX = *(*0x20 + -0x38);\n                                pauVar5 = 0x4ad815;\n                            }\n                            puVar6 = puVar4 + 3;\n                            puVar7 = puVar4;\n                            if (arg2 < puVar6) {\n                                *(*0x20 + -0x60) = pauVar11;\n                                *(*0x20 + -0x1c8) = puVar6;\n                                *(*0x20 + -0x318) = 0x47d405;\n                                unaff_RBX = fcn.00445220(puVar4);\n                                puVar6 = *(*0x20 + -0x1c8);\n                                unaff_RSI = *(*0x20 + -0x260);\n                                puVar7 = *(*0x20 + -0x1f8);\n                                pauVar11 = *(*0x20 + -0x60);\n                                iVar10 = *(*0x20 + -0x170);\n                                in_R10 = *(*0x20 + -0x208);\n                                arg2 = puVar4;\n                            }\n                            uVar1 = (*pauVar11)[2];\n                            *(puVar7 + unaff_RBX) = **pauVar11;\n                            puVar7[unaff_RBX + 2] = uVar1;\n                            iVar12 = *(*0x20 + -0x178);\n                            arg1 = *(*0x20 + -0x230);\n                            puVar4 = puVar6;\n                            goto code_r0x0047b91d;\n                        }\ncode_r0x0047d51d:\n                        *(*0x20 + -0x318) = 0x47d525;\n                        fcn.0045c5a0(pauVar11);\n                    }\ncode_r0x0047d525:\n                    *(*0x20 + -0x180) = *pauVar5 + puVar4;\n                    if (arg2 < *pauVar5 + puVar4) {\n                        *(*0x20 + -0x68) = pauVar11;\n                        *(*0x20 + -0x2c0) = pauVar5;\n                        *(*0x20 + -0x318) = 0x47d558;\n                        unaff_RBX = fcn.00445220(puVar4);\n                        pauVar5 = *(*0x20 + -0x2c0);\n                        arg2 = puVar4;\n                    }\n                    *(*0x20 + -0x188) = arg2;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x318) = 0x47d592;\n                    fcn.0045cee0(pauVar5);\n                    iVar12 = *(*0x20 + -0x178);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    arg1 = *(*0x20 + -0x230);\n                    in_R10 = *(*0x20 + -0x208);\n                    iVar10 = *(*0x20 + -0x170);\n                    arg2 = *(*0x20 + -0x188);\n                    unaff_RBX = *(*0x20 + -0x30);\n                    puVar4 = *(*0x20 + -0x180);\n                }\n            }\n            else if (pauVar19 == 0x107) {\n                *(*0x20 + -0x318) = 0x47c94a;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else if (pauVar19 == 0x108) {\n                if (arg4 < 10) {\n                    puVar6 = puVar4 + 1;\n                    iVar12 = unaff_RBX;\n                    puVar7 = puVar4;\n                    if (arg2 < puVar6) {\n                        *(*0x20 + -0x318) = 0x47c811;\n                        iVar12 = fcn.00445220(puVar4);\n                        puVar6 = unaff_RBX + 1;\n                        puVar7 = *(*0x20 + -0x1f8);\n                        arg2 = puVar4;\n                    }\n                    puVar7[iVar12] = 0x20;\n                    puVar4 = puVar6;\n                }\n                *(*0x20 + -0x318) = 0x47c885;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else {\n                *(*0x20 + -0x318) = 0x47c8e9;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n        }\n        else if (pauVar19 < 0x20e) {\n            if (pauVar19 < 0x114) {\n                if (pauVar19 == 0x10a) {\n                    if (iVar12 < 100) {\n                        iVar18 = unaff_RBX;\n                        puVar6 = puVar4;\n                        puVar7 = puVar4 + 1;\n                        if (arg2 < puVar4 + 1) {\n                            *(*0x20 + -0x318) = 0x47cae8;\n                            iVar18 = fcn.00445220(puVar4);\n                            puVar6 = *(*0x20 + -0x1f8);\n                            iVar12 = *(*0x20 + -0x178);\n                            puVar7 = unaff_RBX + 1;\n                            arg2 = puVar4;\n                        }\n                        puVar4 = puVar7;\n                        puVar6[iVar18] = 0x20;\n                        if (iVar12 < 10) {\n                            puVar6 = puVar4 + 1;\n                            iVar12 = iVar18;\n                            puVar7 = puVar4;\n                            if (arg2 < puVar6) {\n                                *(*0x20 + -0x1a0) = puVar4;\n                                *(*0x20 + -0x318) = 0x47cb71;\n                                iVar12 = fcn.00445220(puVar4);\n                                puVar6 = iVar18 + 1;\n                                puVar7 = *(*0x20 + -0x1a0);\n                                arg2 = puVar4;\n                            }\n                            puVar7[iVar12] = 0x20;\n                            puVar4 = puVar6;\n                        }\n                    }\n                    *(*0x20 + -0x318) = 0x47cbe5;\n                    unaff_RBX = fcn.0047b1e0(arg2);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    arg1 = *(*0x20 + -0x230);\n                    in_R10 = *(*0x20 + -0x208);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                }\n                else if (pauVar19 == 0x10b) {\n                    *(*0x20 + -0x318) = 0x47ca69;\n                    unaff_RBX = fcn.0047b1e0(arg2);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    arg1 = *(*0x20 + -0x230);\n                    in_R10 = *(*0x20 + -0x208);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                }\n                else {\n                    if (pauVar19 != 0x113) goto code_r0x0047d097;\n                    *(*0x20 + -0x318) = 0x47ca05;\n                    unaff_RBX = fcn.0047b1e0(arg2);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    arg1 = *(*0x20 + -0x230);\n                    in_R10 = *(*0x20 + -0x208);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                }\n            }\n            else if (pauVar19 == 0x114) {\n                *(*0x20 + -0x318) = 0x47cdb1;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else if (pauVar19 == 0x20c) {\n                *(*0x20 + -0x318) = 0x47cd1b;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else {\n                if (pauVar19 != 0x20d) goto code_r0x0047d097;\n                *(*0x20 + -0x318) = 0x47ccb2;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n        }\n        else if (pauVar19 < 0x211) {\n            if (pauVar19 == 0x20e) {\n                *(*0x20 + -0x318) = 0x47d2ad;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else if (pauVar19 == 0x20f) {\n                *(*0x20 + -0x318) = 0x47d1ae;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else {\n                *(*0x20 + -0x318) = 0x47d217;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n        }\n        else if (pauVar19 < 0x213) {\n            if (pauVar19 == 0x211) {\n                *(*0x20 + -0x318) = 0x47d0c5;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n            else {\n                *(*0x20 + -0x318) = 0x47d129;\n                unaff_RBX = fcn.0047b1e0(arg2);\n                unaff_RSI = *(*0x20 + -0x260);\n                arg1 = *(*0x20 + -0x230);\n                in_R10 = *(*0x20 + -0x208);\n                iVar10 = *(*0x20 + -0x170);\n                iVar12 = *(*0x20 + -0x178);\n            }\n        }\n        else if (pauVar19 == 0x215) {\n            if (in_R10 < 0xc) {\n                puVar6 = puVar4 + 2;\n                puVar7 = puVar4;\n                if (arg2 < puVar6) {\n                    *(*0x20 + -0x1b0) = puVar6;\n                    *(*0x20 + -0x318) = 0x47ceed;\n                    unaff_RBX = fcn.00445220(puVar4);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    in_R10 = *(*0x20 + -0x208);\n                    puVar7 = *(*0x20 + -0x1f8);\n                    puVar6 = *(*0x20 + -0x1b0);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                    arg2 = puVar4;\n                }\n                *(puVar7 + unaff_RBX) = 0x4d41;\n                puVar4 = puVar6;\n            }\n            else {\n                puVar6 = puVar4 + 2;\n                puVar7 = puVar4;\n                if (arg2 < puVar6) {\n                    *(*0x20 + -0x1a8) = puVar6;\n                    *(*0x20 + -0x318) = 0x47ce65;\n                    unaff_RBX = fcn.00445220(puVar4);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    in_R10 = *(*0x20 + -0x208);\n                    puVar7 = *(*0x20 + -0x1f8);\n                    puVar6 = *(*0x20 + -0x1a8);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                    arg2 = puVar4;\n                }\n                *(puVar7 + unaff_RBX) = 0x4d50;\n                puVar4 = puVar6;\n            }\n            arg1 = *(*0x20 + -0x230);\n        }\n        else {\n            if (pauVar19 != 0x216) goto code_r0x0047d097;\n            if (in_R10 < 0xc) {\n                puVar6 = puVar4 + 2;\n                puVar7 = puVar4;\n                if (arg2 < puVar6) {\n                    *(*0x20 + -0x1c0) = puVar6;\n                    *(*0x20 + -0x318) = 0x47d02d;\n                    unaff_RBX = fcn.00445220(puVar4);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    in_R10 = *(*0x20 + -0x208);\n                    puVar7 = *(*0x20 + -0x1f8);\n                    puVar6 = *(*0x20 + -0x1c0);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                    arg2 = puVar4;\n                }\n                *(puVar7 + unaff_RBX) = 0x6d61;\n                puVar4 = puVar6;\n            }\n            else {\n                puVar6 = puVar4 + 2;\n                puVar7 = puVar4;\n                if (arg2 < puVar6) {\n                    *(*0x20 + -0x1b8) = puVar6;\n                    *(*0x20 + -0x318) = 0x47cfa5;\n                    unaff_RBX = fcn.00445220(puVar4);\n                    unaff_RSI = *(*0x20 + -0x260);\n                    in_R10 = *(*0x20 + -0x208);\n                    puVar7 = *(*0x20 + -0x1f8);\n                    puVar6 = *(*0x20 + -0x1b8);\n                    iVar10 = *(*0x20 + -0x170);\n                    iVar12 = *(*0x20 + -0x178);\n                    arg2 = puVar4;\n                }\n                *(puVar7 + unaff_RBX) = 0x6d70;\n                puVar4 = puVar6;\n            }\n            arg1 = *(*0x20 + -0x230);\n        }\ncode_r0x0047b91d:\n        unaff_RDI = *(*0x20 + -0x1e0);\n        iVar18 = *(*0x20 + -0x50);\n        uVar2 = *(*0x20 + -0x218);\n        uVar16 = *(*0x20 + -0x200);\n        uVar21 = *(*0x20 + -0x240);\n        *(*0x20 + -0x170) = arg2;\n        *(*0x20 + -0x178) = puVar4;\n        *(*0x20 + -0x30) = unaff_RBX;\n        uVar20 = *(*0x20 + -0x210);\n    } while( true );\n}\n",
        "token_count": 14753
    },
    "0047e4a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047e4a0(int64_t arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar6;\n    int64_t in_R10;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_R10 != 0) {\n                uVar8 = unaff_RBX - 1;\n                if (uVar8 < 0) {\n                    iVar7 = ((SUB168(SEXT816(-0x5555555555555555) * SEXT816(-1 - uVar8) >> 0x40, 0) - uVar8) + -1 >> 3)\n                            - (-1 - uVar8 >> 0x3f);\n                    in_RAX = (in_RAX - iVar7) - 1;\n                    uVar8 = unaff_RBX + iVar7 * 0xc + 0xb;\n                }\n                if (0xb < uVar8) {\n                    iVar7 = SUB168(SEXT816(-0x5555555555555555) * SEXT816(uVar8) >> 0x40, 0) + uVar8 >> 3;\n                    in_RAX = iVar7 + in_RAX;\n                    uVar8 = uVar8 + iVar7 * -0xc;\n                }\n                iVar7 = arg4;\n                if (arg4 < 0) {\n                    iVar7 = (-1 - arg4) / 1000000000;\n                    arg3 = (arg3 - iVar7) + -1;\n                    iVar7 = arg4 + iVar7 * 1000000000 + 1000000000;\n                }\n                if (999999999 < iVar7) {\n                    iVar1 = iVar7 / 1000000000 + (iVar7 >> 0x3f);\n                    arg3 = arg3 + iVar1;\n                    iVar7 = iVar7 + iVar1 * -1000000000;\n                }\n                if (arg3 < 0) {\n                    iVar1 = ((SUB168(SEXT816(-0x7777777777777777) * SEXT816(-1 - arg3) >> 0x40, 0) - arg3) + -1 >> 5) -\n                            (-1 - arg3 >> 0x3f);\n                    unaff_RSI = (unaff_RSI - iVar1) + -1;\n                    arg3 = arg3 + iVar1 * 0x3c + 0x3c;\n                }\n                if (0x3b < arg3) {\n                    iVar1 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg3) >> 0x40, 0) + arg3 >> 5;\n                    unaff_RSI = unaff_RSI + iVar1;\n                    arg3 = arg3 + iVar1 * -0x3c;\n                }\n                if (unaff_RSI < 0) {\n                    iVar1 = ((SUB168(SEXT816(-0x7777777777777777) * SEXT816(-1 - unaff_RSI) >> 0x40, 0) - unaff_RSI) +\n                             -1 >> 5) - (-1 - unaff_RSI >> 0x3f);\n                    unaff_RDI = (unaff_RDI - iVar1) + -1;\n                    unaff_RSI = unaff_RSI + iVar1 * 0x3c + 0x3c;\n                }\n                if (0x3b < unaff_RSI) {\n                    iVar1 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(unaff_RSI) >> 0x40, 0) + unaff_RSI >> 5;\n                    unaff_RDI = unaff_RDI + iVar1;\n                    unaff_RSI = unaff_RSI + iVar1 * -0x3c;\n                }\n                if (unaff_RDI < 0) {\n                    iVar1 = ((SUB168(SEXT816(-0x5555555555555555) * SEXT816(-1 - unaff_RDI) >> 0x40, 0) - unaff_RDI) +\n                             -1 >> 4) - (-1 - unaff_RDI >> 0x3f);\n                    arg1 = (arg1 - iVar1) + -1;\n                    unaff_RDI = unaff_RDI + iVar1 * 0x18 + 0x18;\n                }\n                if (0x17 < unaff_RDI) {\n                    iVar1 = SUB168(SEXT816(-0x5555555555555555) * SEXT816(unaff_RDI) >> 0x40, 0) + unaff_RDI >> 4;\n                    arg1 = arg1 + iVar1;\n                    unaff_RDI = unaff_RDI + iVar1 * -0x18;\n                }\n                uVar2 = (in_RAX + 0x440d116ebf >> 1) / 200;\n                iVar1 = in_RAX + uVar2 * -400;\n                *(*0x20 + -0x38) = uVar2 * 0x23ab1;\n                uVar3 = (iVar1 + 0x440d116ebfU >> 1) / 0x32;\n                iVar1 = iVar1 + uVar3 * -100;\n                uVar2 = iVar1 + 0x440d116ebf;\n                arg4 = ((iVar1 - (uVar2 & 0xfffffffffffffffc)) + 0x440d116ebf) * 0x16d;\n                iVar1 = uVar3 * 0x8eac + *(*0x20 + -0x38) + (uVar2 >> 2) * 0x5b5 + arg4;\n                if (uVar8 < 0xd) {\n                    *(*0x20 + -0x28) = iVar7;\n                    iVar6 = *(uVar8 * 4 + 0x71ec80);\n                    iVar7 = iVar6 + iVar1;\n                    if (((in_RAX & 3) == 0) &&\n                       (((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) -\n                                    (in_RAX >> 0x3f)) * 100 ||\n                         ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4)\n                          < 0xa3d70a3d70a3d7)) && (2 < uVar8 + 1)))) {\n                        iVar7 = iVar1 + iVar6 + 1;\n                    }\n                    *(*0x20 + 0x40) = in_R10;\n                    iVar1 = unaff_RSI * 0x3c;\n                    iVar7 = (iVar7 + arg1 + -1) * 0x15180 + unaff_RDI * 0xe10 + iVar1 + arg3;\n                    *(*0x20 + -0x30) = iVar7;\n                    *(*0x20 + -0x40) = iVar7 + -0x7ffffffe1ad9c900;\n                    *(*0x20 + -0x58) = 0x47e87f;\n                    fcn.0047eae0();\n                    if (iVar7 == 0) {\n                        iVar7 = *(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar6 = *(*0x20 + -0x30);\n                        iVar4 = (iVar6 - iVar7) + -0x7ffffffe1ad9c900;\n                        if (iVar4 < unaff_RDI) {\n                            *(*0x20 + -0x58) = 0x47e8dc;\n                            fcn.0047eae0();\n                            iVar6 = *(*0x20 + -0x30);\n                        }\n                        else if (iVar1 - iVar4 == 0 || iVar1 < iVar4) {\n                            *(*0x20 + -0x58) = 0x47e8ba;\n                            fcn.0047eae0();\n                            iVar6 = *(*0x20 + -0x30);\n                        }\n                        iVar7 = (iVar6 - iVar7) + -0x7ffffffe1ad9c900;\n                    }\n                    uVar8 = *(*0x20 + -0x28);\n                    *(*0x20 + -0x20) = uVar8;\n                    *(*0x20 + -0x18) = iVar7 + 0xe7791f700;\n                    *(*0x20 + -0x10) = *0x72dbc8;\n                    iVar7 = *(*0x20 + 0x40);\n                    if (iVar7 == 0x732320) {\n                        iVar7 = 0;\n                    }\n                    if (uVar8 < 0) {\n                        *(*0x20 + -0x18) = ((uVar8 << 1) >> 0x1f) + 0xdd7b17f80;\n                        *(*0x20 + -0x20) = uVar8 & 0x3fffffff;\n                    }\n                    *(*0x20 + -0x10) = iVar7;\n                    return *(*0x20 + -0x20);\n                }\n                arg1 = 0xd;\n                *(*0x20 + -0x58) = 0x47e996;\n                fcn.0045c5a0(0xd);\n            }\n            unaff_RBX = 0x6b5838;\n            *(*0x20 + -0x58) = 0x47e9a9;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + 0x38) = arg4;\n        *(puVar5 + 0x40) = in_R10;\n        *(puVar5 + -8) = 0x47e9d7;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        arg4 = *(puVar5 + 0x38);\n        in_R10 = *(puVar5 + 0x40);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2654
    },
    "0047f540": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.0047f540(void)\n\n{\n    uint32_t uVar1;\n    char *in_RAX;\n    char *pcVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == 0) {\n        return NULL;\n    }\n    if (*in_RAX == '<') {\n        uVar4 = 0;\n        do {\n            arg1 = uVar4;\n            if (unaff_RBX <= arg1) {\n                return NULL;\n            }\n            uVar3 = in_RAX[arg1];\n            if (in_RAX[arg1] < 0x80) {\n                uVar4 = arg1 + 1;\n            }\n            else {\n                uVar1 = fcn.00455cc0(arg1);\n                uVar3 = uVar1;\n                uVar4 = unaff_RBX;\n            }\n        } while (uVar3 != 0x3e);\n        if (arg1 <= unaff_RBX) {\n            if (arg1 != 0) {\n                uVar3 = arg1 - 1;\n                if (arg1 + 1 <= unaff_RBX) {\n                    return in_RAX + (-uVar3 >> 0x3f & 1);\n                }\n                arg1 = unaff_RBX;\n                fcn.0045c660(unaff_RBX);\n            }\n            fcn.0045c660(arg1);\n        }\n        pcVar2 = fcn.0045c5e0(arg1, unaff_RBX);\n    }\n    else {\n        pcVar2 = in_RAX;\n        uVar3 = 0;\n    }\n    do {\n        uVar4 = uVar3;\n        if (unaff_RBX <= uVar4) {\n            if (2 < unaff_RBX) {\n                return pcVar2;\n            }\n            return NULL;\n        }\n        uVar1 = pcVar2[uVar4];\n        if (pcVar2[uVar4] < 0x80) {\n            uVar3 = uVar4 + 1;\n        }\n        else {\n            uVar1 = fcn.00455cc0(uVar4);\n            pcVar2 = in_RAX;\n            uVar3 = unaff_RBX;\n        }\n    } while ((2 < uVar1 - 0x2b) && (9 < uVar1 - 0x30));\n    if (2 < uVar4) {\n        return pcVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 620
    },
    "00484420": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00484420(uchar param_1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x28) = 0x484452;\n            iVar1 = fcn.00457420();\n            *(*0x20 + -0x10) = iVar1;\n            if (iVar1 < 2) {\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                if (iVar1 == 1) {\n                    uVar2 = *0x735350;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar2 = 0x6b5a60;\n                    }\n                    return uVar2;\n                }\n            }\n            else {\n                if (iVar1 == 2) {\n                    return *0x72e330;\n                }\n                if (iVar1 == 3) {\n                    return *0x735370;\n                }\n            }\n            *(*0x20 + -0x28) = 0x4844ed;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x4844fe;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x484508;\n            fcn.00433f60();\n            *(*0x20 + -0x28) = 0x48450d;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x484512;\n            fcn.004338e0();\n            unaff_RBX = 0x6b5688;\n            *(*0x20 + -0x28) = 0x484525;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x484539;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 689
    },
    "00484560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00484560(uchar param_1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                *(*0x20 + -0x28) = 0x484626;\n                puVar2 = fcn.0040bf40();\n                puVar2[1] = 0x21;\n                *puVar2 = 0x4b313f;\n                return 0x6b58c0;\n            }\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x28) = 0x484592;\n            iVar1 = fcn.004574a0();\n            *(*0x20 + -0x10) = iVar1;\n            if (iVar1 < 2) {\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                if (iVar1 == 1) {\n                    uVar3 = *0x735350;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar3 = 0x6b5a60;\n                    }\n                    return uVar3;\n                }\n            }\n            else {\n                if (iVar1 == 2) {\n                    return *0x72e330;\n                }\n                if (iVar1 == 3) {\n                    return *0x735370;\n                }\n            }\n            *(*0x20 + -0x28) = 0x484651;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x484665;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x48466f;\n            fcn.00433f60();\n            *(*0x20 + -0x28) = 0x484674;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x484679;\n            fcn.004338e0();\n            unaff_RBX = 0x6b5688;\n            *(*0x20 + -0x28) = 0x48468c;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x4846a5;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "00484c20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00484c20(uint *arg1)\n\n{\n    bool bVar1;\n    uint *in_RAX;\n    uint *noname_1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint *puVar4;\n    ulong arg1_00;\n    int64_t *unaff_RBX;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    uint *puStack40;\n    uint *puStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x735380 != 0) {\n        return 0;\n    }\n    puStack32 = arg1;\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x00485251;\n            goto code_r0x00484fe9;\n        }\n        if (arg1 == 0x3) {\n            iVar2 = fcn.004022c0(0x4acb5d);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x00484ff0;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x00485251;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x00485251;\n            goto code_r0x00484fe9;\n        }\n        if (arg1 != 0x4) goto code_r0x00485251;\n        iVar2 = fcn.004022c0(0x4accbc);\n        if (0 < iVar2) {\n            iVar2 = fcn.004022c0(0x4accc4);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x00485251;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x00485251;\n            goto code_r0x00484fe9;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x00485251;\n                goto code_r0x00484fe9;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x00485251;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x00484ff0;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x00485251:\n                arg1_00 = 0x25;\n                uStack24 = fcn.00448ba0(0x25);\n                uStack48 = 0x4b3917;\n                puVar3 = fcn.0040bf40();\n                puVar3[1] = uStack48;\n                if (*0x789810 == 0) {\n                    *puVar3 = uStack24;\n                }\n                else {\n                    fcn.0045c220(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x00485251;\ncode_r0x00484fe9:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x00484ff0:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = NULL;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.00484340(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x734a78 != NULL) {\n        in_R8 = **0x734a78;\n        in_R9 = in_RAX;\n        puStack40 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x734a78);\n        noname_1 = puStack40;\n    }\n    if (noname_1 != NULL) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x7895a2 != '\\0')) {\n        if ((puStack32 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        iVar2 = fcn.004730a0(*(in_RAX + 4));\n        noname_1 = in_RAX;\n        if ((iVar2 == 0) && (bVar1)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    puVar4 = puStack32;\n    if (puStack32 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x004851c4;\n    }\n    else if ((puStack32 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x004851c4;\n    uStack56 = 0;\n    uStack52 = 0;\n    noname_1 = *(in_RAX + 4);\n    puVar4 = &uStack52;\n    in_R8 = NULL;\n    in_R9 = &uStack56;\n    iVar2 = fcn.00473960(puVar4, noname_1, 0, in_R9);\n    if (iVar2 != 0) {\n        return 0x4ad4e6;\n    }\ncode_r0x004851c4:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045c100(puVar4, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045c100(puVar4, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1931
    },
    "00485320": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00485320(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00457360();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x72dba8)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.00471ae0(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.00471260(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.00457ec0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x6b5ac0;\n}\n",
        "token_count": 300
    },
    "00488940": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00488940(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.00472020();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.00472720();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040bf40();\n    iVar2 = fcn.0040bf40();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x789810 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.0045c220(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045c100(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.00415080(0x49cc80);\n    fcn.00484c20(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 442
    },
    "00489960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.00489960(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int16_t *in_RAX;\n    int64_t iVar6;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    uint64_t arg2;\n    uint64_t uVar9;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x7895a4 != '\\0') {\n                return in_RAX;\n            }\n            if (unaff_RBX < 0xf8) {\n                return in_RAX;\n            }\n            if (*in_RAX == 0x5c5c) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x4899b5;\n            cVar5 = fcn.00489760();\n            if (cVar5 == '\\0') {\n                return *(*0x20 + 8);\n            }\n            *(*0x20 + -0x20) = *(*0x20 + -0x18) + 4;\n            *(*0x20 + -0x40) = 0x4899d6;\n            iVar6 = fcn.00445140(*(*0x20 + -0x18) + 4);\n            arg2 = *(*0x20 + -0x20);\n            uVar8 = arg2;\n            if (3 < arg2) {\n                uVar8 = 3;\n            }\n            if (iVar6 != 0x4acb36) {\n                *(*0x20 + -0x10) = iVar6;\n                *(*0x20 + -0x40) = 0x489a05;\n                fcn.0045cee0(uVar8);\n                iVar6 = *(*0x20 + -0x10);\n                arg2 = *(*0x20 + -0x20);\n            }\n            uVar8 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + 8);\n            uVar2 = 0;\n            uVar3 = 3;\n            uVar4 = param_3;\ncode_r0x00489a60:\n            param_3 = uVar4;\n            unaff_RBX = uVar3;\n            uVar9 = uVar2;\n            if (uVar8 <= uVar9) {\n                if (unaff_RBX == 6) {\n                    if (arg2 < 7) goto code_r0x00489b7a;\n                    *(iVar6 + 6) = 0x5c;\n                    unaff_RBX = 7;\n                }\n                if (unaff_RBX <= arg2) {\n                    *(*0x20 + -0x40) = 0x489b65;\n                    piVar7 = fcn.00448f60(unaff_RBX);\n                    return piVar7;\n                }\n                *(*0x20 + -0x40) = 0x489b7a;\n                uVar9 = arg2;\n                fcn.0045c620(unaff_RBX, arg2);\ncode_r0x00489b7a:\n                *(*0x20 + -0x40) = 0x489b85;\n                uVar8 = arg2;\n                iVar6 = fcn.0045c5a0(arg2);\n                goto code_r0x00489b85;\n            }\n            if (uVar8 <= uVar9) goto code_r0x00489bdd;\n            uVar1 = *(piVar7 + uVar9);\n            param_3 = uVar1;\n            uVar3 = unaff_RBX;\n            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                uVar2 = uVar9 + 1;\n                uVar4 = uVar9 + 1;\n                goto code_r0x00489a60;\n            }\n            if (uVar1 == 0x2e) {\n                param_4 = uVar9 + 1;\n                uVar2 = param_4;\n                uVar4 = param_4;\n                if (uVar8 == param_4) goto code_r0x00489a60;\n                if (uVar8 <= param_4) goto code_r0x00489bd5;\n                cVar5 = *(uVar9 + 1 + piVar7);\n                if ((cVar5 == '\\\\') || (cVar5 == '/')) goto code_r0x00489a60;\n            }\n            param_4 = uVar9 + 1;\n            if ((uVar8 <= param_4) || (uVar1 != 0x2e)) goto code_r0x00489b0c;\n            if (param_4 < uVar8) {\n                uVar1 = *(uVar9 + 1 + piVar7);\n                param_3 = uVar1;\n                if (uVar1 == 0x2e) {\n                    param_3 = uVar9 + 2;\n                    if (uVar8 == param_3) {\n                        return piVar7;\n                    }\n                    if (param_3 < uVar8) {\n                        uVar1 = *(uVar9 + 2 + piVar7);\n                        param_3 = uVar1;\n                        if (uVar1 == 0x5c) {\n                            return piVar7;\n                        }\n                        if (uVar1 == 0x2f) {\n                            return piVar7;\n                        }\n                        goto code_r0x00489b0c;\n                    }\n                }\n                else {\ncode_r0x00489b0c:\n                    if (unaff_RBX < arg2) {\n                        *(iVar6 + unaff_RBX) = 0x5c;\n                        param_3 = unaff_RBX;\n                        for (; param_3 = param_3 + 1,  uVar2 = uVar9,  uVar3 = param_3,  uVar4 = uVar9,  uVar9 < uVar8;\n                            uVar9 = uVar9 + 1) {\n                            uVar1 = *(piVar7 + uVar9);\n                            param_4 = uVar1;\n                            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) break;\n                            if (arg2 <= param_3) {\n                                *(*0x20 + -0x40) = 0x489bba;\n                                fcn.0045c5a0(arg2);\n                                goto code_r0x00489bba;\n                            }\ncode_r0x00489b85:\n                            *(iVar6 + param_3) = param_4;\n                        }\n                        goto code_r0x00489a60;\n                    }\ncode_r0x00489bba:\n                    *(*0x20 + -0x40) = 0x489bc5;\n                    fcn.0045c5a0(arg2);\n                    uVar8 = arg2;\n                }\n                *(*0x20 + -0x40) = 0x489bcd;\n                fcn.0045c5a0(uVar8);\n            }\n            *(*0x20 + -0x40) = 0x489bd5;\n            fcn.0045c5a0(uVar8);\ncode_r0x00489bd5:\n            *(*0x20 + -0x40) = 0x489bdd;\n            fcn.0045c5a0(uVar8);\ncode_r0x00489bdd:\n            *(*0x20 + -0x40) = 0x489be5;\n            in_RAX = fcn.0045c5a0(uVar8);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x489bf5;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1990
    },
    "00489cc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048a169)\n// WARNING: Removing unreachable block (ram,0x0048a1ba)\n// WARNING: Removing unreachable block (ram,0x0048a1ac)\n// WARNING: Removing unreachable block (ram,0x0048a1cb)\n// WARNING: Removing unreachable block (ram,0x0048a1eb)\n// WARNING: Removing unreachable block (ram,0x0048a1dd)\n// WARNING: Removing unreachable block (ram,0x0048a1fc)\n// WARNING: Removing unreachable block (ram,0x00489d9d)\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00489cc0(char *arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    ulong uVar3;\n    uchar *arg2;\n    ulong unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack736 [16];\n    uint32_t uStack720;\n    uint uStack716;\n    uint uStack712;\n    ulong uStack708;\n    uchar auStack700 [12];\n    uint uStack688;\n    uint uStack684;\n    ulong uStack680;\n    uint uStack672;\n    uint uStack668;\n    ulong uStack664;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint64_t uStack96;\n    ulong uStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    uint32_t *puStack64;\n    uchar auStack48 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (auStack32._0_8_ = SUB168(in_XMM15, 0),  &uStack680 < *(unaff_R14 + 0x10) || &uStack680 == *(unaff_R14 + 0x10)\n          ) {\n        fcn.00459ea0();\n        unaff_RSI = unaff_RSI & 0xffffffff;\n    }\n    ppcStack16 = NULL;\n    if (unaff_RDI == 0) {\n        puVar1 = fcn.0040bf40();\n        puVar1[1] = unaff_RBX;\n        if (*0x789810 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045c220(unaff_RBX, in_RAX, in_R8, in_R9);\n        }\n        puVar1[3] = 0;\n        if (*0x789810 == 0) {\n            puVar1[2] = arg1;\n        }\n        else {\n            puVar1 = fcn.0045c220(unaff_RBX, arg1, in_R8, in_R9);\n        }\n        puVar1[4] = 0x6b5ac0;\n        puVar1[5] = 0x69e238;\n        return auStack32._0_8_;\n    }\n    if ((((unaff_RDI == 3) && ((*arg1 == 'n' || (*arg1 == 'N')))) && ((arg1[1] == 'u' || (arg1[1] == 'U')))) &&\n       ((arg1[2] == 'l' || (arg1[2] == 'L')))) {\n        return 0x6b7438;\n    }\n    fcn.00489960();\n    fcn.0046fd80();\n    uVar3 = SUB168(in_XMM15, 0);\n    if (unaff_RDI == 0) {\n        fcn.0045c5a0(0);\n        fcn.004307e0();\n        return auStack32._0_8_;\n    }\n    uStack88 = 0;\n    if (unaff_RDI == 0) {\n        uStack720 = 0;\n        uStack716 = SUB164(in_XMM15, 0);\n        uStack712 = SUB164(in_XMM15 >> 0x20, 0);\n        uStack708 = SUB168(in_XMM15 >> 0x40, 0);\n        arg2 = auStack700;\n        puStack64 = &uStack720;\n        _auStack700 = in_XMM15;\n        iVar2 = fcn.00472500(puStack64);\n        uVar3 = SUB168(in_XMM15, 0);\n        if ((iVar2 == 0) && (arg2 = uStack720,  (uStack720 >> 10 & 1) == 0)) {\n            iStack72 = fcn.0040bf40();\n            *(iStack72 + 0x10) = uStack720;\n            *(iStack72 + 0x14) = CONCAT44(uStack712, uStack716);\n            *(iStack72 + 0x1c) = uStack708;\n            *(iStack72 + 0x24) = auStack700._0_8_;\n            *(iStack72 + 0x2c) = auStack700._8_4_;\n            *(iStack72 + 0x30) = uStack688;\n            iVar2 = fcn.0048a9c0(0, arg2, in_R8, in_R9);\n            if (iVar2 == 0) {\n                return 0x6b7438;\n            }\n            return uVar3;\n        }\n        if (((iVar2 != 0) && (arg2 = 0x4a1100,  *(iVar2 + 8) == 0x4a1100)) && (_pe_dos_header == 0x20)) {\n            uStack684 = SUB164(in_XMM15, 0);\n            uStack680 = SUB168(in_XMM15 >> 0x20, 0);\n            uStack672 = SUB164(in_XMM15 >> 0x60, 0);\n            fcn.0045c7a1();\n            fcn.004706a0();\n            if (&uStack684 != NULL) {\n                puVar1 = fcn.0040bf40();\n                puVar1[1] = 0xd;\n                *puVar1 = 0x4ae21f;\n                puVar1[3] = 0;\n                if (*0x789810 == 0) {\n                    puVar1[2] = arg1;\n                }\n                else {\n                    puVar1 = fcn.0045c220(0, arg1, in_R8, in_R9);\n                }\n                puVar1[4] = &uStack684;\n                if (*0x789810 == 0) {\n                    puVar1[5] = puStack64;\n                }\n                else {\n                    fcn.0045c220(unaff_RDI, puStack64, in_R8, in_R9);\n                }\n                return uVar3;\n            }\n            fcn.00471ae0();\n            iStack80 = fcn.0040bf40();\n            *(iStack80 + 0x10) = uStack684;\n            *(iStack80 + 0x14) = uStack680;\n            *(iStack80 + 0x1c) = CONCAT44(uStack668, uStack672);\n            *(iStack80 + 0x24) = uStack664;\n            *(iStack80 + 0x2c) = uStack656;\n            *(iStack80 + 0x30) = uStack652;\n            *(iStack80 + 0x34) = uStack648;\n            iVar2 = fcn.0048a9c0(0, arg2, in_R8, in_R9);\n            if (iVar2 == 0) {\n                return 0x6b7438;\n            }\n            return uVar3;\n        }\n        arg1_00 = fcn.00471340(0, arg2, unaff_RSI & 0xffffffff, 0);\n        auStack736 = CONCAT88(arg1_00, 0x48a5a0);\n        ppcStack16 = auStack736;\n        uVar3 = fcn.0048a6a0(arg1_00);\n        auStack32 = CONCAT88(uVar3, 0x6b7438);\n        auStack48 = ZEXT816(arg1_00) << 0x40;\n        (**ppcStack16)();\n        return auStack32._0_8_;\n    }\n    uStack96 = unaff_RSI;\n    puVar1 = fcn.0040bf40();\n    puVar1[1] = unaff_RBX;\n    if (*0x789810 == 0) {\n        *puVar1 = in_RAX;\n    }\n    else {\n        puVar1 = fcn.0045c220(unaff_RBX, in_RAX, in_R8, in_R9);\n    }\n    puVar1[3] = unaff_RDI;\n    if (*0x789810 == 0) {\n        puVar1[2] = arg1;\n    }\n    else {\n        puVar1 = fcn.0045c220(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    puVar1[4] = unaff_RDI;\n    if (*0x789810 == 0) {\n        puVar1[5] = uStack96;\n    }\n    else {\n        fcn.0045c220(unaff_RBX, uStack96, in_R8, in_R9);\n    }\n    return uVar3;\n}\n",
        "token_count": 2140
    },
    "00490dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode * fcn.00490dc0(ulong param_1, ulong param_2, code *param_3, code *param_4)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    code *pcVar3;\n    ulong uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    ulong *puVar10;\n    code **ppcVar11;\n    code **arg2;\n    code **arg2_00;\n    int64_t iVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    int64_t iVar14;\n    ulong uVar15;\n    int64_t iVar16;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd0 && *0x20 + -0xd0 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x150;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX[0x18] != 0) {\n                uVar4 = in_RAX[0x1f];\n                *(*0x20 + -0x158) = 0x49105e;\n                fcn.00490a40(uVar4);\n                uVar4 = *(*(*0x20 + 8) + 0x110);\n                *(*0x20 + -0x158) = 0x491085;\n                fcn.00490a40(uVar4);\n                return *(*(*0x20 + 8) + 0xc0);\n            }\n            uVar4 = *in_RAX;\n            uVar15 = in_RAX[1];\n            iVar8 = in_RAX[8];\n            uVar9 = in_RAX[9];\n            *(*0x20 + -0x158) = 0x490e16;\n            uVar2 = fcn.00490ae0(iVar8);\n            if (iVar8 != 0) {\n                *(*0x20 + -0xa8) = uVar9;\n                *(*0x20 + -0xf8) = iVar8;\n                uVar4 = *(*(*0x20 + 8) + 0xf8);\n                *(*0x20 + -0x158) = 0x491005;\n                fcn.00490a40(uVar4);\n                uVar4 = *(*(*0x20 + 8) + 0x110);\n                *(*0x20 + -0x158) = 0x491027;\n                fcn.00490a40(uVar4);\n                return *(*0x20 + -0xf8);\n            }\n            puVar10 = *(*0x20 + 8);\n            puVar10[1] = uVar15;\n            if (*0x789810 == 0) {\n                *puVar10 = uVar2;\n            }\n            else {\n                *(*0x20 + -0x158) = 0x490e3e;\n                fcn.0045c100(0, uVar4, param_3, param_4);\n            }\n            if (puVar10[0x14] != 0) {\n                *(*0x20 + -0x158) = 0x490faa;\n                puVar10 = fcn.0040bf40();\n                puVar10[1] = 0x15;\n                *puVar10 = 0x4b0185;\n                return 0x6b58c0;\n            }\n            if (puVar10[0x16] != 0) {\n                pcVar3 = *(puVar10[0x16] + 0x20);\n                *(*0x20 + -0x158) = 0x490e65;\n                (*pcVar3)();\n                *(*0x20 + -0x158) = 0x490e6f;\n                cVar1 = fcn.00405d00();\n                if (cVar1 != '\\0') {\n                    uVar4 = *(*(*0x20 + 8) + 0xf8);\n                    *(*0x20 + -0x158) = 0x490f50;\n                    fcn.00490a40(uVar4);\n                    uVar4 = *(*(*0x20 + 8) + 0x110);\n                    *(*0x20 + -0x158) = 0x490f72;\n                    fcn.00490a40(uVar4);\n                    pcVar3 = *(*(*(*0x20 + 8) + 0xb0) + 0x28);\n                    *(*0x20 + -0x158) = 0x490f8e;\n                    pcVar3 = (*pcVar3)();\n                    return pcVar3;\n                }\n                puVar10 = *(*0x20 + 8);\n            }\n            iVar8 = puVar10[0x11] + 3;\n            *(*0x20 + -0xd8) = iVar8;\n            *(*0x20 + -0x158) = 0x490e9d;\n            pcVar3 = fcn.00445140(iVar8);\n            arg2 = *(*0x20 + 8);\n            arg2[0x1c] = NULL;\n            arg2[0x1d] = *(*0x20 + -0xd8);\n            ppcVar11 = arg2 + 0x1b;\n            if (*0x789810 == 0) {\n                arg2[0x1b] = pcVar3;\n            }\n            else {\n                *(*0x20 + -0x158) = 0x490eda;\n                fcn.0045c100(iVar8, arg2, param_3, param_4);\n            }\n            *(*0x20 + -0x80) = ppcVar11;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x68) = 0x69e2a8;\n            *(*0x20 + -0x60) = 0x69e2b0;\n            *(*0x20 + -0x58) = 0x69e2a0;\n            pcVar3 = NULL;\n            while (pcVar3 < 3) {\n                *(*0x20 + -0xd8) = pcVar3;\n                ppcVar11 = *(*0x20 + pcVar3 * 8 + -0x68);\n                pcVar3 = *ppcVar11;\n                *(*0x20 + -0x158) = 0x4910e2;\n                arg2_00 = ppcVar11;\n                uVar4 = (*pcVar3)();\n                if (pcVar3 != NULL) {\n                    *(*0x20 + -0xb0) = ppcVar11;\n                    *(*0x20 + -0xf0) = pcVar3;\n                    uVar4 = *(*(*0x20 + 8) + 0xf8);\n                    *(*0x20 + -0x158) = 0x4911c6;\n                    fcn.00490a40(uVar4);\n                    uVar4 = *(*(*0x20 + 8) + 0x110);\n                    *(*0x20 + -0x158) = 0x4911e8;\n                    fcn.00490a40(uVar4);\n                    return *(*0x20 + -0xf0);\n                }\n                arg2 = *(*0x20 + 8);\n                pcVar3 = arg2[0x1c];\n                pcVar7 = arg2[0x1b];\n                pcVar5 = pcVar7;\n                if (arg2[0x1d] < pcVar3 + 1) {\n                    *(*0x20 + -0xc0) = uVar4;\n                    *(*0x20 + -0x158) = 0x491125;\n                    pcVar5 = fcn.00445220(pcVar3);\n                    arg2_00 = *(*0x20 + 8);\n                    arg2_00[0x1d] = pcVar3;\n                    if (*0x789810 == 0) {\n                        arg2_00[0x1b] = pcVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x158) = 0x49115b;\n                        pcVar5 = fcn.0045c100(pcVar3, arg2_00, arg2, param_4);\n                    }\n                    uVar4 = *(*0x20 + -0xc0);\n                    pcVar3 = pcVar7;\n                    arg2 = arg2_00;\n                }\n                arg2[0x1c] = pcVar3 + 1;\n                if (*0x789810 == 0) {\n                    *(pcVar5 + pcVar3 * 8) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x158) = 0x491192;\n                    fcn.0045c100(pcVar3, arg2_00, arg2, pcVar3 + 1);\n                }\n                param_4 = *(*0x20 + -0xd8);\n                pcVar3 = param_4 + 1;\n            }\n            pcVar7 = arg2[0x1c];\n            pcVar5 = arg2[0x11];\n            pcVar3 = pcVar7 + pcVar5;\n            *(*0x20 + -0xd8) = pcVar3;\n            param_3 = arg2[0x1d];\n            pcVar6 = arg2[0x1b];\n            param_4 = arg2[0x10];\n            if (param_3 < pcVar3) {\n                *(*0x20 + -0xe0) = pcVar7;\n                *(*0x20 + -0x88) = param_4;\n                *(*0x20 + -0xe8) = pcVar5;\n                *(*0x20 + -0x158) = 0x49125d;\n                param_3 = pcVar7;\n                pcVar6 = fcn.00445220(pcVar7);\n                pcVar5 = *(*0x20 + -0xe8);\n                param_4 = *(*0x20 + -0x88);\n                pcVar7 = *(*0x20 + -0xe0);\n                pcVar3 = *(*0x20 + -0xd8);\n            }\n            if (pcVar7 <= pcVar3) {\n                *(*0x20 + -0x90) = pcVar6;\n                *(*0x20 + -0xe0) = param_3;\n                pcVar6 = pcVar6 + (pcVar7 << 3 & pcVar7 - param_3 >> 0x3f);\n                *(*0x20 + -0x158) = 0x4912c9;\n                pcVar3 = param_4;\n                fcn.0040fcc0(pcVar5);\n                puVar10 = *(*0x20 + 8);\n                puVar10[0x1c] = *(*0x20 + -0xd8);\n                puVar10[0x1d] = *(*0x20 + -0xe0);\n                if (*0x789810 == 0) {\n                    puVar10[0x1b] = *(*0x20 + -0x90);\n                }\n                else {\n                    param_4 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x158) = 0x491318;\n                    fcn.0045c220(pcVar5, *(*0x20 + -0x90), puVar10, pcVar3);\n                }\n                iVar8 = puVar10[5];\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x158) = 0x49133b;\n                    iVar8 = fcn.00486bc0();\n                    puVar10 = *(*0x20 + 8);\n                }\n                else {\n                    param_4 = NULL;\n                    pcVar6 = puVar10[6];\n                }\n                if (param_4 != NULL) {\n                    return param_4;\n                }\n                iVar16 = puVar10[3];\n                puVar13 = puVar10[2];\n                uVar4 = puVar10[4];\n                if (iVar16 < 1) {\n                    *(*0x20 + -0x78) = in_XMM15;\n                    uVar4 = puVar10[1];\n                    *(*0x20 + -0x78) = *puVar10;\n                    *(*0x20 + -0x70) = uVar4;\n                    uVar4 = 1;\n                    iVar16 = 1;\n                    puVar13 = *0x20 + -0x78;\n                }\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0xd0) = puVar13;\n                *(*0x20 + -0x110) = iVar16;\n                *(*0x20 + -0x158) = 0x4913c5;\n                fcn.00491980(pcVar6);\n                *(*0x20 + -0x158) = 0x4913ca;\n                uVar9 = fcn.00491d40(pcVar6);\n                *(*0x20 + -0x50) = 0;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                iVar16 = *(*0x20 + 8);\n                uVar4 = *(iVar16 + 0x48);\n                *(*0x20 + -0x50) = *(iVar16 + 0x40);\n                *(*0x20 + -0x48) = uVar4;\n                uVar4 = *(iVar16 + 0xe0);\n                uVar15 = *(iVar16 + 0xe8);\n                *(*0x20 + -0x28) = *(iVar16 + 0xd8);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x18) = uVar15;\n                *(*0x20 + -0x40) = uVar9;\n                *(*0x20 + -0x38) = iVar8;\n                *(*0x20 + -0x30) = pcVar6;\n                *(*0x20 + -0x10) = *(iVar16 + 0x98);\n                iVar8 = *(iVar16 + 8);\n                uVar4 = *(*0x20 + -0xd0);\n                puVar13 = *0x20 + -0x50;\n                *(*0x20 + -0x158) = 0x4914a5;\n                uVar9 = fcn.00487020(uVar4, iVar16, puVar13);\n                if (*0x789810 == 0) {\n                    iVar16 = *(*0x20 + 8);\n                    *(iVar16 + 0xa0) = uVar9;\n                }\n                else {\n                    iVar16 = *(*0x20 + 8);\n                    *(*0x20 + -0x158) = 0x4914d3;\n                    fcn.0045c100(uVar4, iVar16, puVar13, uVar15);\n                }\n                if (iVar8 != 0) {\n                    *(*0x20 + -0xb8) = uVar4;\n                    *(*0x20 + -0x100) = iVar8;\n                    uVar4 = *(iVar16 + 0xf8);\n                    *(*0x20 + -0x158) = 0x491597;\n                    fcn.00490a40(uVar4);\n                    uVar4 = *(*(*0x20 + 8) + 0x110);\n                    *(*0x20 + -0x158) = 0x4915b9;\n                    fcn.00490a40(uVar4);\n                    return *(*0x20 + -0x100);\n                }\n                uVar4 = *(iVar16 + 0xf8);\n                *(*0x20 + -0x158) = 0x4914f9;\n                fcn.00490a40(uVar4);\n                iVar8 = *(*0x20 + 8);\n                iVar16 = iVar8;\n                if (0 < *(iVar8 + 0x128)) {\n                    *(*0x20 + -0x158) = 0x49151d;\n                    uVar4 = fcn.00404440();\n                    if (*0x789810 == 0) {\n                        iVar16 = *(*0x20 + 8);\n                        *(iVar16 + 0x138) = uVar4;\n                    }\n                    else {\n                        iVar16 = *(*0x20 + 8);\n                        *(*0x20 + -0x158) = 0x49154b;\n                        fcn.0045c100(iVar16, iVar8, puVar13, uVar15);\n                    }\n                    iVar12 = *(iVar16 + 0x120);\n                    *(*0x20 + -0x98) = iVar12;\n                    iVar14 = *(iVar16 + 0x128);\n                    *(*0x20 + -0xd8) = iVar14;\n                    iVar8 = 0;\n                    while (iVar8 < iVar14) {\n                        *(*0x20 + -0xe0) = iVar8;\n                        *(*0x20 + -200) = *(iVar12 + iVar8 * 8);\n                        *(*0x20 + -0x158) = 0x4916e9;\n                        puVar10 = fcn.0040bf40();\n                        *(*0x20 + -0xa0) = puVar10;\n                        *puVar10 = 0x491900;\n                        if (*0x789810 == 0) {\n                            puVar10[1] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x158) = 0x491725;\n                            fcn.0045c220(0x491900, *(*0x20 + 8), puVar13, uVar15);\n                        }\n                        *(*0x20 + -0x158) = 0x491731;\n                        puVar10 = fcn.0040bf40();\n                        uVar4 = 0x4918a0;\n                        *puVar10 = 0x4918a0;\n                        if (*0x789810 == 0) {\n                            puVar10[1] = *(*0x20 + -200);\n                            puVar10[2] = *(*0x20 + -0xa0);\n                        }\n                        else {\n                            *(*0x20 + -0x158) = 0x491776;\n                            fcn.0045c220(0x4918a0, *(*0x20 + -200), puVar13, uVar15);\n                            *(*0x20 + -0x158) = 0x491787;\n                            fcn.0045c220(uVar4, *(*0x20 + -0xa0), puVar13, uVar15);\n                        }\n                        *(*0x20 + -0x158) = 0x4916a5;\n                        fcn.0043c700();\n                        iVar16 = *(*0x20 + 8);\n                        iVar12 = *(*0x20 + -0x98);\n                        iVar14 = *(*0x20 + -0xd8);\n                        iVar8 = *(*0x20 + -0xe0) + 1;\n                    }\n                }\n                if (*(iVar16 + 0xb0) != 0) {\n                    *(*0x20 + -0x158) = 0x491608;\n                    uVar4 = fcn.00404440();\n                    if (*0x789810 == 0) {\n                        *(*(*0x20 + 8) + 0x140) = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x158) = 0x491636;\n                        fcn.0045c100(*(*0x20 + 8), iVar16, puVar13, uVar15);\n                    }\n                    *(*0x20 + -0x158) = 0x491645;\n                    puVar10 = fcn.0040bf40();\n                    *puVar10 = 0x4917c0;\n                    if (*0x789810 == 0) {\n                        puVar10[1] = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x158) = 0x491677;\n                        fcn.0045c200(*(*0x20 + 8));\n                    }\n                    *(*0x20 + -0x158) = 0x491685;\n                    fcn.0043c700();\n                }\n                return NULL;\n            }\n            *(*0x20 + -0x158) = 0x491799;\n            in_RAX = fcn.0045c660(pcVar3);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x4917a5;\n        fcn.00459ea0();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 4781
    },
    "00401720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401acc)\n\nvoid fcn.00401720(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong arg1;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040bf40();\n    iVar2 = fcn.0045ca5c();\n    if (*0x789810 == 0) {\n        *(iVar2 + 0x10) = 0x789de1;\n        *(iVar2 + 0x30) = 0x789de0;\n        *(iVar2 + 0x50) = 0x789de2;\n        *(iVar2 + 0x70) = 0x789de3;\n        *(iVar2 + 0x90) = 0x789de4;\n        *(iVar2 + 0xb0) = 0x789de5;\n        *(iVar2 + 0xd0) = 0x789de6;\n        *(iVar2 + 0xf0) = 0x789de7;\n        *(iVar2 + 0x110) = 0x789de9;\n        *(iVar2 + 0x130) = 0x789dea;\n        *(iVar2 + 0x150) = 0x789dec;\n        *(iVar2 + 0x170) = 0x789dee;\n        *(iVar2 + 400) = 0x789def;\n        *(iVar2 + 0x1b0) = 0x789ded;\n        arg1 = 0x789deb;\n        *(iVar2 + 0x1d0) = 0x789deb;\n    }\n    else {\n        fcn.0045c200(0x789de1);\n        fcn.0045c200(0x789de0);\n        fcn.0045c200(0x789de2);\n        fcn.0045c200(0x789de3);\n        fcn.0045c200(0x789de4);\n        fcn.0045c200(0x789de5);\n        fcn.0045c200(0x789de6);\n        fcn.0045c200(0x789de7);\n        fcn.0045c200(0x789de9);\n        fcn.0045c200(0x789dea);\n        fcn.0045c200(0x789dec);\n        fcn.0045c200(0x789dee);\n        fcn.0045c200(0x789def);\n        fcn.0045c200(0x789ded);\n        arg1 = 0x789deb;\n        iVar2 = fcn.0045c200();\n    }\n    *0x735698 = 0xf;\n    *0x7356a0 = 0xf;\n    if (*0x789810 != 0) {\n        fcn.0045c100(arg1, param_2, param_3, param_4);\n        iVar2 = *0x735690;\n    }\n    *0x735690 = iVar2;\n    fcn.00401ba0(arg1, param_2);\n    if (uStack40 != 0) {\n        fcn.00401ba0(arg1, param_2);\n        *0x7895c0 = uStack40;\n        fcn.00401ba0(arg1, param_2);\n        *0x789deb = (uStack28 >> 0x1a & 1) != 0;\n        *0x789dec = (uStack32 & 1) != 0;\n        *0x789de9 = (uStack32 >> 1 & 1) != 0;\n        *0x789ded = (uStack32 >> 9 & 1) != 0;\n        *0x789dee = (uStack32 >> 0x13 & 1) != 0;\n        *0x789def = (uStack32 >> 0x14 & 1) != 0;\n        *0x789dea = (uStack32 >> 0x17 & 1) != 0;\n        *0x789de0 = (uStack32 >> 0x19 & 1) != 0;\n        *0x789de8 = (uStack32 >> 0x1b & 1) != 0;\n        uVar1 = uStack28 & 0xffffff00 | *0x789de8;\n        uVar3 = (param_2 & 0xffffff00 | (uStack32 >> 0xc & 1) != 0) & uVar1;\n        arg2 = uVar3;\n        *0x789de7 = uVar3;\n        if ((uStack32 >> 0x1b & 1) != 0) {\n            fcn.00401bc0(uVar1, arg2);\n        }\n        *0x789de2 = 0;\n        if (uStack40 < 7) {\n            *0x789de2 = 0;\n            return;\n        }\n        fcn.00401ba0(0, arg2);\n        *0x789de1 = (uStack36 >> 0x13 & 1) != 0;\n        *0x789de3 = 0;\n        *0x789de4 = (uStack36 >> 3 & 1) != 0;\n        *0x789de5 = (uStack36 >> 8 & 1) != 0;\n        *0x789de6 = (uStack36 >> 9 & 1) != 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1356
    },
    "004022c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004022c0(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x004021ab;\n        }\n        if (0x3f < uVar5) {\n            if (*0x789de3 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x004020fd;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x004020eb;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x004020fd;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x004020fd;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x004020eb;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x004020fd;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x004020fd;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x00402136;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x00402136:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x004021ab:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x004020eb:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x004020fd:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7664
    },
    "00402460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402460(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    uint64_t in_RAX;\n    uint8_t uVar3;\n    uchar auVar4 [16];\n    uint8_t uVar6;\n    uchar auVar5 [32];\n    uchar auVar7 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (*0x789dea != '\\x01') {\n        fcn.00402000(uStackX24);\n        return;\n    }\n    uVar3 = uStackX16;\n    if (uStackX16 < 0x10) {\n        if (uStackX16 == 0) {\n            return;\n        }\n        if ((*pauStackX8 + 0x10 & 0xff0) != 0) {\n            uVar6 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) & (1 << (uVar3 & 0x3f)) - 1U);\n            return;\n        }\n        puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n        auVar4 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                           CONCAT114(-(puVar2[0xe] == uStackX24), \n                                     CONCAT113(-(puVar2[0xd] == uStackX24), \n                                               CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                         CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                   CONCAT110(-(puVar2[10] == uStackX24), \n                                                                             CONCAT19(-(puVar2[9] == uStackX24), \n                                                                                      CONCAT18(-(puVar2[8] == uStackX24)\n                                                                                               , CONCAT17(-(puVar2[7] ==\n                                                                                                           uStackX24), \n                                                                                                          CONCAT16(-(\n                                                            puVar2[6] == uStackX24), \n                                                            CONCAT15(-(puVar2[5] == uStackX24), \n                                                                     CONCAT14(-(puVar2[4] == uStackX24), \n                                                                              CONCAT13(-(puVar2[3] == uStackX24), \n                                                                                       CONCAT12(-(puVar2[2] == uStackX24\n                                                                                                 ), CONCAT11(-(puVar2[1]\n                                                                                                              == \n                                                            uStackX24), -(*puVar2 == uStackX24))))))))))))))));\n        popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 | (SUB161(auVar4 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar4 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar4 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar4 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar4 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe |\n               (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) & (0xffff >> (0x10 - uVar3 & 0x3f)) << (0x10 - uVar3 & 0x3f));\n        return;\n    }\n    if ((uStackX16 < 0x21) || (*0x789de3 != '\\x01')) {\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 <= pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar3 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar3, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt(SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar3 >> 7) << 0xf);\n        }\n        if ((uStackX16 & 0xf) != 0) {\n            uVar3 = 0x10 - (uStackX16 & 0xf);\n            uVar6 = -((*pauVar1)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                        CONCAT19(-((*pauVar1)[9] ==\n                                                                                                  uStackX24), \n                                                                                                 CONCAT18(-((*pauVar1)\n                                                                                                            [8] == \n                                                            uStackX24), \n                                                            CONCAT17(-((*pauVar1)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                                       CONCAT14(-((*pauVar1)[4] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT13(-((*pauVar1)[3]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT12(-((*\n                                                            pauVar1)[2] == uStackX24), \n                                                            CONCAT11(-((*pauVar1)[1] == uStackX24), \n                                                                     -((*pauVar1)[0] == uStackX24))))))))))))))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) &\n                   (0xffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        }\n        return;\n    }\n    pauVar1 = pauStackX8[-1] + uStackX16;\n    auVar5 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n    do {\n        auVar7 = vmovdqu_avx(*pauStackX8);\n        auVar7 = vpcmpeqb_avx2(auVar7, auVar5);\n        popcnt(SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 | (SUB321(auVar7 >> 0x17, 0) & 1) << 2 |\n               (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar7 >> 0x27, 0) & 1) << 4 |\n               (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar7 >> 0x37, 0) & 1) << 6 |\n               (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar7 >> 0x47, 0) & 1) << 8 |\n               (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar7 >> 0x57, 0) & 1) << 10 |\n               (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc |\n               (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe |\n               SUB321(auVar7 >> 0x7f, 0) << 0xf | (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 |\n               (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 |\n               (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 |\n               (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 |\n               SUB321(auVar7 >> 0xbf, 0) << 0x17 | (SUB321(auVar7 >> 199, 0) & 1) << 0x18 |\n               (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a |\n               (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c |\n               (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar7 >> 0xff, 0) << 0x1f);\n        pauStackX8 = pauStackX8[1];\n    } while (pauStackX8 <= pauVar1);\n    if (pauStackX8 != pauVar1) {\n        auVar7 = vmovdqu_avx(*pauVar1);\n        auVar5 = vpcmpeqb_avx2(auVar7, auVar5);\n        vzeroupper_avx();\n        uVar3 = 0x20 - (uVar3 & 0x1f);\n        popcnt((SUB321(auVar5 >> 7, 0) & 1 | (SUB321(auVar5 >> 0xf, 0) & 1) << 1 | (SUB321(auVar5 >> 0x17, 0) & 1) << 2\n                | (SUB321(auVar5 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar5 >> 0x27, 0) & 1) << 4 |\n                (SUB321(auVar5 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar5 >> 0x37, 0) & 1) << 6 |\n                (SUB321(auVar5 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar5 >> 0x47, 0) & 1) << 8 |\n                (SUB321(auVar5 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar5 >> 0x57, 0) & 1) << 10 |\n                (SUB321(auVar5 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar5 >> 0x67, 0) & 1) << 0xc |\n                (SUB321(auVar5 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar5 >> 0x77, 0) & 1) << 0xe |\n                SUB321(auVar5 >> 0x7f, 0) << 0xf | (SUB321(auVar5 >> 0x87, 0) & 1) << 0x10 |\n                (SUB321(auVar5 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar5 >> 0x97, 0) & 1) << 0x12 |\n                (SUB321(auVar5 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar5 >> 0xa7, 0) & 1) << 0x14 |\n                (SUB321(auVar5 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar5 >> 0xb7, 0) & 1) << 0x16 |\n                SUB321(auVar5 >> 0xbf, 0) << 0x17 | (SUB321(auVar5 >> 199, 0) & 1) << 0x18 |\n                (SUB321(auVar5 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar5 >> 0xd7, 0) & 1) << 0x1a |\n                (SUB321(auVar5 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar5 >> 0xe7, 0) & 1) << 0x1c |\n                (SUB321(auVar5 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar5 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar5 >> 0xff, 0) << 0x1f) & (0xffffffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        return;\n    }\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5192
    },
    "004025e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004025e0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x789de3 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4146
    },
    "00402a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402a80(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x789de3 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x00402a63;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x00402a63:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "00403080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (((*0x789de0 != '\\0') && (*0x789ded != '\\0')) && (*0x789dee != '\\0')) {\n        *0x7895b5 = 1;\n        fcn.0042d0a0(0x80);\n        return;\n    }\n    fcn.0042d0a0(0x20);\n    *0x789840 = *0x789840 | 1;\n    *0x789848 = *0x789848 | 1;\n    *0x789850 = *0x789850 | 1;\n    *0x789858 = *0x789858 | 1;\n    return;\n}\n",
        "token_count": 217
    },
    "004031a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004031a0(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x789810 != '\\0') {\n        fcn.00403140();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 64
    },
    "004034e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004034e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uchar uStack131;\n    uint8_t uStack130;\n    uint8_t uStack129;\n    uint64_t uStack128;\n    uint64_t uStack120;\n    uchar auStack112 [8];\n    uint64_t uStack104;\n    int64_t iStack96;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    code **ppcStack32;\n    code **ppcStack24;\n    ulong uStack16;\n    \n    while (auStack72 < *(unaff_R14 + 0x10) || auStack72 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    ppcStack24 = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n    uStack16 = 0x69e5d0;\n    uStack129 = 1;\n    if ((*(*(unaff_R14 + 0x30) + 0xf8) != '\\0') || (*0x7895d8 != 0)) {\n        *(*(unaff_R14 + 0x30) + 0xf8) = 0;\n        fcn.00459d60();\n    }\n    if (arg1 == 0) {\n        uStack130 = 1;\n    }\n    else {\n        arg1_00 = *(unaff_R14 + 0x158);\n        uVar3 = arg1_00 + 1;\n        iVar1 = *(unaff_R14 + 0x150);\n        uVar4 = *(unaff_R14 + 0x160);\n        iVar2 = iVar1;\n        if (*(unaff_R14 + 0x160) < uVar3) {\n            uStack104 = arg1_00;\n            iVar2 = fcn.00445220(arg1_00);\n            uVar3 = iVar1 + 1;\n            uVar4 = arg1_00;\n            arg1_00 = uStack104;\n        }\n        *(iVar2 + arg1_00 * 8) = arg1;\n        if (uVar3 == 0) {\n            fcn.0045c5a0(0);\n            fcn.004307e0();\n            return;\n        }\n        if (*0x789810 != '\\0') {\n            uStack128 = uVar3;\n            uStack120 = uVar4;\n            iStack96 = iVar2;\n            fcn.00403140();\n            uVar3 = uStack128;\n            uVar4 = uStack120;\n            iVar2 = iStack96;\n        }\n        *(unaff_R14 + 0x150) = iVar2;\n        *(unaff_R14 + 0x160) = uVar4;\n        *(unaff_R14 + 0x158) = uVar3;\n        auStack56 = CONCAT88(unaff_R14, 0x4038a0);\n        uStack40 = 0x69e330;\n        ppcStack24 = auStack56;\n        uStack129 = 3;\n        uStack130 = 3;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0x108) == 0) {\n        fcn.00405360();\n    }\n    uStack131 = 1;\n    auStack72 = CONCAT88(&uStack131, 0x403840);\n    ppcStack32 = auStack72;\n    uStack130 = uStack130 | 4;\n    uStack129 = uStack130;\n    (*in_RAX)(uStack130, auStack112);\n    uStack131 = 0;\n    if ((uStack130 & 4) != 0) {\n        uStack130 = uStack130 & 0xfb;\n        uStack129 = uStack130;\n        (**ppcStack32)();\n    }\n    if ((uStack130 & 2) != 0) {\n        uStack130 = uStack130 & 0xfd;\n        uStack129 = uStack130;\n        (**ppcStack24)();\n    }\n    if ((uStack130 & 1) != 0) {\n        uStack129 = uStack130 & 0xfe;\n        fcn.0043d420();\n    }\n    return;\n}\n",
        "token_count": 1011
    },
    "00403900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403900(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    char *in_RAX;\n    int64_t unaff_R14;\n    \n    if (*in_RAX != '\\0') {\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(unaff_R14 + 0x30);\n        *(*piVar3 + 0x38) = **(*piVar3 + 0x38);\n        if (0 < *(piVar3 + 0x21)) {\n            *(piVar3 + 0x1d) = 0;\n            *(piVar3 + 0x21) = *(piVar3 + 0x21) + -1;\n            *(piVar3 + 0x6a) = 0;\n        }\n        iVar2 = *(piVar3 + 0x1b);\n        *(piVar3 + 0x1b) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00403a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403a60(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00403980();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00403980();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x789720;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.00459d60();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00403c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403c20(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403980();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403980();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00403d80(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00403cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403cc0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403980();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403980();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00403d80(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00404440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404440(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t arg1;\n    ulong uVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar4 = *puVar1;\n            if (uVar4 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar3 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n                    uVar4 = SUB168(auVar3, 0);\n                    if (((SUB168(auVar3 >> 0x40, 0) == 0) && (uVar4 < 0xffffffffffa1)) && (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 == 0) {\n                            *(*0x20 + -0x40) = 0x40455d;\n                            arg1 = fcn.0040b560(1);\n                            if (*0x789810 == 0) {\n                                *(arg1 + 0x10) = arg1 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x40457a;\n                                arg1 = fcn.0045c200(arg1 + 0x10);\n                            }\n                        }\n                        else {\n                            arg2 = *(*0x20 + -0x18);\n                            if (*(arg2 + 8) == 0) {\n                                uVar5 = 1;\n                                *(*0x20 + -0x40) = 0x4044d3;\n                                arg1 = fcn.0040b560();\n                                if (*0x789810 == 0) {\n                                    *(arg1 + 0x10) = arg1 + 0x60;\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = 0x4044f4;\n                                    arg1 = fcn.0045c220(uVar5, arg1 + 0x60, param_3, param_4);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = uVar4;\n                                *(*0x20 + -0x40) = 0x40450a;\n                                uVar5 = fcn.0040bf40();\n                                *(*0x20 + -0x10) = uVar5;\n                                *(*0x20 + -0x40) = 0x404525;\n                                uVar5 = fcn.0040b560(1);\n                                if (*0x789810 == 0) {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(arg1 + 0x10) = uVar5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(*0x20 + -0x40) = 0x404547;\n                                    fcn.0045c100(arg1, arg2, param_3, param_4);\n                                }\n                            }\n                        }\n                        puVar2 = *(*0x20 + -0x18);\n                        *(arg1 + 0x18) = *puVar2;\n                        if (*0x789810 == 0) {\n                            *(arg1 + 0x20) = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40459e;\n                            arg1 = fcn.0045c200();\n                        }\n                        *(arg1 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x4045c5;\n                    fcn.00431940();\n                }\n                *(*0x20 + -0x40) = 0x4045d6;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x4045e7;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4045f7;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1208
    },
    "00404660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404660(uint64_t *param_1, uint64_t param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    uint64_t arg4;\n    uint64_t arg4_00;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                puVar3 = 0x4;\n                *(*0x20 + -0x88) = 0x404765;\n                fcn.004349e0();\n                *(*0x20 + -0x88) = 0x404776;\n                fcn.004320e0();\n                param_1 = puVar3;\ncode_r0x00404779:\n                do {\n                    piVar9 = puVar3[7];\n                    if (piVar9 == NULL) {\n                        piVar9 = NULL;\n                        break;\n                    }\n                    puVar6 = puVar3 + 7;\n                    uVar7 = piVar9[1];\n                    if (uVar7 == 0) {\n                        if (*0x789810 == 0) {\n                            *(puVar3 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar8 = 0;\n                            *(*0x20 + -0x88) = 0x4047f7;\n                            fcn.0045c280(param_1, piVar9, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404805;\n                            puVar3 = fcn.0045c280(param_1, piVar9, uVar8, param_4);\n                        }\n                    }\n                    else if (*0x789810 == 0) {\n                        *(uVar7 + 0x10) = 0;\n                        puVar3[7] = uVar7;\n                        piVar9[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar7 + 0x10;\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x4047c9;\n                        fcn.0045c220(puVar6, 0, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x4047d1;\n                        fcn.0045c280(puVar6, uVar8, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x4047da;\n                        puVar3 = fcn.0045c220(puVar6, uVar8, uVar7, iVar4);\n                    }\n                    if (*(piVar9 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar9;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar13 = *piVar1 == 0;\n                        if (bVar13) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar13) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = puVar3;\n                } while (param_3 != '\\0');\n                if (piVar9 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x404cc0;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x88) = 0x404c05;\n                    fcn.00404d00(*(*0x20 + 0x10));\n                    return 1;\n                }\n                if (*puVar3 <= puVar3[1] && puVar3[1] != *puVar3) {\n                    *(*0x20 + -0x88) = 0x404b89;\n                    fcn.0040fb00(*(*0x20 + 0x10));\n                    piVar9 = *(*0x20 + 8);\n                    iVar4 = piVar9[5];\n                    piVar9[5] = iVar4 + 1;\n                    if (piVar9[1] == iVar4 + 1) {\n                        piVar9[5] = 0;\n                    }\n                    *piVar9 = *piVar9 + 1;\n                    *(*0x20 + -0x88) = 0x404bbd;\n                    fcn.0040a0a0();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == '\\0') {\n                    *(*0x20 + -0x88) = 0x404885;\n                    fcn.0040a0a0();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x40489b;\n                puVar3 = fcn.00434c00();\n                puVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    puVar3[5] = 0xffffffffffffffff;\n                }\n                if (*0x789810 == 0) {\n                    uVar7 = *(*0x20 + 0x10);\n                    puVar3[3] = uVar7;\n                    puVar3[8] = 0;\n                    param_3 = *(*0x20 + -0x38);\n                    *puVar3 = param_3;\n                }\n                else {\n                    uVar7 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x4048ed;\n                    fcn.0045c220(iVar4, uVar7, param_3, param_4);\n                    uVar8 = 0;\n                    *(*0x20 + -0x88) = 0x4048f9;\n                    fcn.0045c280(iVar4, uVar7, 0, param_4);\n                    param_3 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404906;\n                    puVar3 = fcn.0045c2a0(iVar4, uVar7, uVar8);\n                }\n                *(puVar3 + 0x34) = 0;\n                puVar6 = puVar3 + 10;\n                if (*0x789810 == 0) {\n                    arg4 = *(*0x20 + 8);\n                    puVar3[10] = arg4;\n                }\n                else {\n                    arg4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x404935;\n                    puVar3 = fcn.0045c2a0(iVar4, uVar7, param_3);\n                }\n                iVar11 = param_3 + 0x148;\n                iVar12 = param_3 + 0x88;\n                if (*0x789810 == 0) {\n                    *(param_3 + 0x148) = puVar3;\n                    *(param_3 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x40496e;\n                    fcn.0045c100(iVar4, uVar7, param_3, arg4);\n                    *(*0x20 + -0x88) = 0x40497b;\n                    puVar3 = fcn.0045c220(iVar4, 0, param_3, arg4);\n                }\n                if (*0x789810 == 0) {\n                    puVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4049a9;\n                    puVar3 = fcn.0045c220(iVar4, 0, param_3, arg4);\n                }\n                *(*0x20 + -0x48) = puVar3;\n                *(*0x20 + -0x20) = puVar6;\n                *(*0x20 + -0x28) = iVar11;\n                *(*0x20 + -0x30) = iVar12;\n                arg4_00 = *(arg4 + 0x50);\n                if (arg4_00 == 0) {\n                    if (*0x789810 == 0) {\n                        puVar3[2] = 0;\n                        *(arg4 + 0x48) = puVar3;\n                        *(arg4 + 0x50) = puVar3;\n                    }\n                    else {\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x404a45;\n                        fcn.0045c220(iVar4, 0, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404a4e;\n                        fcn.0045c100(iVar4, uVar8, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404a56;\n                        fcn.0045c100(iVar4, uVar8, param_3, arg4);\n                    }\n                }\n                else if (*0x789810 == 0) {\n                    puVar3[2] = arg4_00;\n                    *(arg4_00 + 8) = puVar3;\n                    *(arg4 + 0x50) = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4049fc;\n                    fcn.0045c2a0(iVar4, uVar7, param_3);\n                    *(*0x20 + -0x88) = 0x404a05;\n                    fcn.0045c100(iVar4, uVar7, param_3, arg4_00);\n                    *(*0x20 + -0x88) = 0x404a0d;\n                    fcn.0045c100(iVar4, uVar7, param_3, arg4_00);\n                }\n                uVar2 = *(param_3 + 0xb9);\n                *(param_3 + 0xb9) = 1;\n                param_4 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x404a8c;\n                fcn.004349e0();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x789810 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x404acf;\n                        iVar4 = fcn.0045c200();\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar7 = *(iVar4 + 0x35);\n                    if (*0x789810 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x404afc;\n                        iVar4 = fcn.0045c220(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar7;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x404b1e;\n                        fcn.00428cc0();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar7 = *(*0x20 + -0x51);\n                    }\n                    if (*0x789810 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x404b47;\n                        fcn.0045c220(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x404b4c;\n                    fcn.00434f00();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x404c33;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x88) = 0x404c46;\n                    fcn.00431940();\n                }\n                *(*0x20 + -0x88) = 0x404c57;\n                fcn.004320e0();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar7 = in_RAX[1];\n                    if (uVar7 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar7 & 0xffffffffffffff00 | *in_RAX == uVar7;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x789668 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4046e7;\n                    fcn.0045bfa0(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404725;\n                fcn.00409e80();\n                puVar3 = *(*0x20 + 8);\n                if (*(puVar3 + 0x1c) == 0) goto code_r0x00404779;\n            }\n            *(*0x20 + -0x88) = 0x404c65;\n            fcn.0040a0a0();\n            unaff_RBX = 0x6b57a8;\n            *(*0x20 + -0x88) = 0x404c78;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x404c91;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3998
    },
    "00404d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404d00(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    code **unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack40;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00404e40(arg1);\n        if (*0x789810 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            piVar2 = fcn.0045c200(0);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x789810 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045c200();\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045bfa0(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00434b20(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 384
    },
    "00404f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404f40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    ulong arg3;\n    int64_t unaff_R14;\n    bool bVar5;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x404f85;\n                fcn.00409e80();\n                iVar1 = *(*0x20 + 8);\n                if (*(iVar1 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x405309;\n                fcn.0040a0a0();\n                *(*0x20 + -0x40) = 0x40531c;\n                fcn.00431940();\n            }\n            *(*0x20 + -0x40) = 0x40532f;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40533a;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n    *(iVar1 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x0040508c:\n    piVar2 = *(iVar1 + 0x38);\n    if (piVar2 != NULL) goto code_r0x00405099;\n    piVar2 = NULL;\n    goto code_r0x00404fcd;\ncode_r0x00405099:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x789810 == 0) {\n            *(iVar1 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405105;\n            fcn.0045c260(iVar1, piVar2, param_3, param_4);\n            *(*0x20 + -0x40) = 0x40510e;\n            fcn.0045c260(iVar1, piVar2, param_3, param_4);\n        }\n    }\n    else if (*0x789810 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x38) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        iVar4 = iVar4 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x4050d7;\n        fcn.0045c2a0(iVar1, piVar2, iVar4);\n        *(*0x20 + -0x40) = 0x4050df;\n        fcn.0045c260(iVar1, piVar2, iVar4, param_4);\n        *(*0x20 + -0x40) = 0x4050e8;\n        fcn.0045c2a0(iVar1, piVar2, iVar4);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = 1;\n        }\n        bVar5 = !bVar5;\n    }\n    param_3 = 1;\n    if (!bVar5) {\ncode_r0x00404fcd:\n        arg3 = 1;\n        if (piVar2 != NULL) {\n            *(*0x20 + -0x20) = piVar2;\n            if (piVar2[3] != 0) {\n                *(*0x20 + -0x40) = 0x404fee;\n                fcn.0040fda0();\n                if (*0x789810 == 0) {\n                    *(*(*0x20 + -0x20) + 0x18) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x405016;\n                    fcn.0045c220(*(*0x20 + -0x20), 0, arg3, param_4);\n                }\n                iVar1 = *(*0x20 + 8);\n                piVar2 = *(*0x20 + -0x20);\n            }\n            if (piVar2[5] != 0) {\n                *(*0x20 + -0x40) = 0x405032;\n                fcn.0045bfa0(iVar1, piVar2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                piVar2 = *(*0x20 + -0x20);\n                piVar2[5] = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + 8);\n            }\n            param_3 = 1;\n            iVar4 = *piVar2;\n            if (*0x789810 == 0) {\n                *(iVar4 + 0x88) = piVar2;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x405087;\n                fcn.0045c220(iVar1, piVar2, 1, param_4);\n            }\n            *(piVar2 + 0x35) = 0;\n            *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = iVar4;\n            goto code_r0x0040508c;\n        }\n        goto code_r0x004051ff;\n    }\n    goto code_r0x0040508c;\ncode_r0x004051ff:\n    piVar2 = *(iVar1 + 0x48);\n    if (piVar2 != NULL) goto code_r0x0040520c;\n    piVar2 = NULL;\n    goto code_r0x0040516c;\ncode_r0x0040520c:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x789810 == 0) {\n            *(iVar1 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405274;\n            fcn.0045c240(iVar1, piVar2, arg3, param_4);\n            *(*0x20 + -0x40) = 0x40527d;\n            fcn.0045c240(iVar1, piVar2, arg3, param_4);\n        }\n    }\n    else if (*0x789810 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x48) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x40524a;\n        fcn.0045c2a0(iVar1, piVar2, arg3);\n        *(*0x20 + -0x40) = 0x405252;\n        fcn.0045c240(iVar1, piVar2, arg3, param_4);\n        *(*0x20 + -0x40) = 0x40525b;\n        fcn.0045c2a0(iVar1, piVar2, arg3);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = arg3;\n        }\n        bVar5 = !bVar5;\n    }\n    if (!bVar5) {\ncode_r0x0040516c:\n        if (piVar2 == NULL) {\n            *(*0x20 + -0x40) = 0x4052b9;\n            fcn.0040a0a0();\n            while (iVar1 = *(*0x20 + -0x28),  iVar1 != 0) {\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x28) = *(iVar1 + 0xa0);\n                }\n                *(iVar1 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x4052d0;\n                fcn.00434b20();\n            }\n            return;\n        }\n        if (*0x789810 == 0) {\n            piVar2[3] = 0;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405193;\n            fcn.0045c240(iVar1, piVar2, arg3, param_4);\n        }\n        if (piVar2[5] != 0) {\n            *(*0x20 + -0x18) = piVar2;\n            *(*0x20 + -0x40) = 0x4051a5;\n            fcn.0045bfa0(iVar1, piVar2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar2 = *(*0x20 + -0x18);\n            piVar2[5] = *(*0x20 + -0x38);\n            arg3 = 1;\n            iVar1 = *(*0x20 + 8);\n        }\n        iVar4 = *piVar2;\n        if (*0x789810 == 0) {\n            *(iVar4 + 0x88) = piVar2;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x4051fa;\n            fcn.0045c220(iVar1, piVar2, arg3, param_4);\n        }\n        *(piVar2 + 0x35) = 0;\n        *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = iVar4;\n    }\n    goto code_r0x004051ff;\n}\n",
        "token_count": 2644
    },
    "004053a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004053a0(uint64_t param_1, uint64_t param_2, uint8_t *param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg2;\n    int64_t arg2_00;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                piVar3 = 0x3;\n                *(*0x20 + -0x90) = 0x405546;\n                fcn.004349e0();\n                *(*0x20 + -0x90) = 0x405557;\n                fcn.004320e0();\n                piVar4 = piVar3;\n            }\n            else {\n                if (cVar5 == '\\0') {\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                }\n                if (uVar6 != '\\0') {\n                    if (*(in_RAX + 0x1c) == 0) {\n                        return 0;\n                    }\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n                    }\n                    if (uVar6 != '\\0') {\n                        if (unaff_RBX != 0) {\n                            *(*0x20 + -0x90) = 0x40542e;\n                            fcn.0040fda0();\n                        }\n                        return 1;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x789668 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405485;\n                    fcn.0045bfa0(param_1, uVar6);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar7 = *(*0x20 + -0x88);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x58) = uVar7;\n                piVar4 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = piVar4;\n                *(*0x20 + -0x90) = 0x4054bf;\n                fcn.00409e80();\n                piVar3 = *(*0x20 + 8);\n                if ((*(piVar3 + 0x1c) != 0) && (*piVar3 == 0)) {\n                    *(*0x20 + -0x90) = 0x4054df;\n                    fcn.0040a0a0();\n                    if (*(*0x20 + 0x10) != 0) {\n                        *(*0x20 + -0x90) = 0x4054fd;\n                        fcn.0040fda0();\n                    }\n                    return 1;\n                }\n            }\n            do {\n                arg2 = piVar3[9];\n                if (arg2 == NULL) {\n                    arg2 = NULL;\n                    break;\n                }\n                arg1 = piVar3 + 9;\n                iVar8 = arg2[1];\n                if (iVar8 == 0) {\n                    if (*0x789810 == 0) {\n                        *(piVar3 + 9) =\n                             CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x90) = 0x4055d7;\n                        fcn.0045c280(piVar4, arg2, 0, param_4);\n                        *(*0x20 + -0x90) = 0x4055e5;\n                        piVar3 = fcn.0045c280(piVar4, arg2, uVar7, param_4);\n                    }\n                }\n                else if (*0x789810 == 0) {\n                    *(iVar8 + 0x10) = 0;\n                    piVar3[9] = iVar8;\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar10 = iVar8 + 0x10;\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4055a9;\n                    fcn.0045c220(arg1, 0, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x4055b1;\n                    fcn.0045c280(arg1, uVar7, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x4055ba;\n                    piVar3 = fcn.0045c220(arg1, uVar7, iVar8, iVar10);\n                }\n                if (*(arg2 + 0x34) == '\\0') {\n                    param_3 = NULL;\n                }\n                else {\n                    iVar8 = *arg2;\n                    LOCK();\n                    piVar1 = iVar8 + 0x178;\n                    bVar11 = *piVar1 == 0;\n                    if (bVar11) {\n                        *piVar1 = 1;\n                    }\n                    param_3 = (iVar8 & 0xffffff00 | bVar11) ^ 1;\n                }\n                param_4 = 1;\n                piVar4 = piVar3;\n            } while (param_3 != '\\0');\n            if (arg2 != NULL) {\n                *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x18) = 0x405a80;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x90) = 0x405a13;\n                fcn.00405ac0(*(*0x20 + 0x10));\n                return 1;\n            }\n            if (*piVar3 != 0) {\n                iVar8 = piVar3[6] * *(piVar3 + 3) + piVar3[2];\n                if (*(*0x20 + 0x10) != 0) {\n                    *(*0x20 + -0x50) = iVar8;\n                    *(*0x20 + -0x90) = 0x40567c;\n                    fcn.0040fb00(iVar8);\n                }\n                *(*0x20 + -0x90) = 0x405692;\n                fcn.0040fda0();\n                piVar4 = *(*0x20 + 8);\n                iVar8 = piVar4[6];\n                piVar4[6] = iVar8 + 1;\n                if (piVar4[1] == iVar8 + 1) {\n                    piVar4[6] = 0;\n                }\n                *piVar4 = *piVar4 + -1;\n                *(*0x20 + -0x90) = 0x4056c5;\n                fcn.0040a0a0();\n                return 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                *(*0x20 + -0x90) = 0x4056f4;\n                fcn.0040a0a0();\n                return 0;\n            }\n            *(*0x20 + -0x38) = unaff_R14;\n            *(*0x20 + -0x90) = 0x405712;\n            piVar4 = fcn.00434c00();\n            piVar4[5] = 0;\n            iVar8 = *(*0x20 + -0x58);\n            if (iVar8 != 0) {\n                piVar4[5] = -1;\n            }\n            if (*0x789810 == 0) {\n                piVar4[3] = *(*0x20 + 0x10);\n                piVar4[8] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40575d;\n                fcn.0045c220(iVar8, *(*0x20 + 0x10), param_3, param_4);\n                *(*0x20 + -0x90) = 0x405768;\n                piVar4 = fcn.0045c220(iVar8, 0, param_3, param_4);\n            }\n            arg2_00 = *(*0x20 + -0x38);\n            iVar10 = arg2_00 + 0x148;\n            if (*0x789810 == 0) {\n                *(arg2_00 + 0x148) = piVar4;\n                *piVar4 = arg2_00;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405790;\n                fcn.0045c100(iVar8, arg2_00, param_3, param_4);\n                *(*0x20 + -0x90) = 0x40579b;\n                piVar4 = fcn.0045c220(iVar8, arg2_00, param_3, param_4);\n            }\n            *(piVar4 + 0x34) = 0;\n            piVar3 = piVar4 + 10;\n            arg4 = arg2_00 + 0x88;\n            if (*0x789810 == 0) {\n                noname_1 = *(*0x20 + 8);\n                piVar4[10] = noname_1;\n                *(arg2_00 + 0x88) = 0;\n            }\n            else {\n                noname_1 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x4057e5;\n                fcn.0045c220(iVar8, noname_1, piVar3, arg4);\n                *(*0x20 + -0x90) = 0x4057f3;\n                piVar4 = fcn.0045c280(iVar8, noname_1, 0, arg4);\n            }\n            if (*0x789810 == 0) {\n                piVar4[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405828;\n                piVar4 = fcn.0045c280(iVar8, arg2_00, 0, arg4);\n            }\n            *(*0x20 + -0x48) = piVar4;\n            *(*0x20 + -0x20) = iVar10;\n            *(*0x20 + -0x28) = piVar3;\n            *(*0x20 + -0x30) = arg4;\n            iVar10 = *(noname_1 + 0x40);\n            if (iVar10 == 0) {\n                if (*0x789810 == 0) {\n                    piVar4[2] = 0;\n                    *(noname_1 + 0x38) = piVar4;\n                    *(noname_1 + 0x40) = piVar4;\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4058c5;\n                    fcn.0045c280(iVar8, arg2_00, 0, arg4);\n                    *(*0x20 + -0x90) = 0x4058ce;\n                    fcn.0045c100(iVar8, arg2_00, uVar7, arg4);\n                    *(*0x20 + -0x90) = 0x4058d6;\n                    fcn.0045c100(iVar8, arg2_00, uVar7, arg4);\n                }\n            }\n            else if (*0x789810 == 0) {\n                piVar4[2] = iVar10;\n                *(iVar10 + 8) = piVar4;\n                *(noname_1 + 0x40) = piVar4;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40587c;\n                fcn.0045c280(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x405885;\n                fcn.0045c100(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x40588d;\n                fcn.0045c100(iVar8, arg2_00, iVar10, arg4);\n            }\n            param_3 = arg2_00 + 0xb9;\n            uVar2 = *param_3;\n            *param_3 = 1;\n            param_4 = uVar2;\n            param_1 = 0xe;\n            *(*0x20 + -0x90) = 0x40590c;\n            fcn.004349e0();\n            iVar8 = *(*0x20 + -0x48);\n            param_2 = *(*0x20 + -0x38);\n            if (*(param_2 + 0x148) == iVar8) {\n                if (*0x789810 == 0) {\n                    *(param_2 + 0x148) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x40594f;\n                    iVar8 = fcn.0045c200(0);\n                }\n                *(param_2 + 0xb8) = 0;\n                if (0 < *(iVar8 + 0x28)) {\n                    *(*0x20 + -0x90) = 0x405974;\n                    fcn.00428cc0();\n                    iVar8 = *(*0x20 + -0x48);\n                    param_2 = *(*0x20 + -0x38);\n                }\n                uVar6 = *(iVar8 + 0x35);\n                *(*0x20 + -0x59) = *(iVar8 + 0x35);\n                if (*0x789810 == 0) {\n                    *(param_2 + 0x88) = 0;\n                    *(iVar8 + 0x50) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x4059b0;\n                    fcn.0045c220(uVar6, 0, param_3, param_4);\n                    *(*0x20 + -0x90) = 0x4059bc;\n                    fcn.0045c220(uVar6, 0, param_3, param_4);\n                }\n                *(*0x20 + -0x90) = 0x4059c5;\n                fcn.00434f00();\n                return 1;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x90) = 0x405a3b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x405a4f;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3964
    },
    "00405ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405ac0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack48;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00404ec0(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        if (arg1 != 0) {\n            fcn.0040fb00(*(in_RAX + 0x30) * *(in_RAX + 0x18) + *(in_RAX + 0x10));\n        }\n        fcn.0040fb00(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x789810 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        fcn.0045c280(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x789810 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045c200();\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045bfa0(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00434b20(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 596
    },
    "00408b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00408b00(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x408d1c;\n                    fcn.00453ea0();\n                    *(*0x20 + -0x48) = 0x408d25;\n                    uVar3 = fcn.00454700(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x408d3b;\n                    iVar4 = fcn.0040bf40();\n                    if (*0x789810 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408da5;\n                        fcn.0045c200(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x408db3;\n                        iVar4 = fcn.0045c200(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x789810 != 0) goto code_r0x00408d85;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408d85;\n                        fcn.00431940();\ncode_r0x00408d85:\n                        *(*0x20 + -0x48) = 0x408d93;\n                        fcn.0045c200(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x408b6d;\n                iVar4 = fcn.00408e00(unaff_RBX);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x408b85;\n                    fcn.00409e80();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x408b9b;\n                    iVar4 = fcn.00408e00(*(*0x20 + 0x10));\n                    if (iVar4 == 0) {\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x408be7;\n                        puVar2 = fcn.0040c2a0(0x78b4c0);\n                        if (*0x789810 == 0) {\n                            *puVar2 = *(*0x20 + 8);\n                            puVar2[1] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x408c12;\n                            iVar4 = fcn.0045c200();\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x408c25;\n                            puVar2 = fcn.0045c240(uVar3, iVar4 + 8, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar2;\n                        *(puVar2 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x408c36;\n                        fcn.00409000();\n                        *(*0x20 + -0x48) = 0x408c45;\n                        fcn.00408e60();\n                        *(*0x20 + -0x48) = 0x408c53;\n                        fcn.0040a0a0();\n                        iVar4 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0x48) = 0x408bb8;\n                        fcn.0040a0a0();\n                        iVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar4 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x408c85;\n                    uVar3 = fcn.00409000();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x408c9b;\n                    iVar4 = fcn.0040bf40();\n                    if (*0x789810 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408d05;\n                        fcn.0045c200(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x408d13;\n                        iVar4 = fcn.0045c200(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x789810 != 0) goto code_r0x00408ce5;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408ce5;\n                        fcn.00431940();\ncode_r0x00408ce5:\n                        *(*0x20 + -0x48) = 0x408cf3;\n                        fcn.0045c200(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                return iVar4;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x408dc6;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x408dda;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1905
    },
    "00408e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408e60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x72dbc0;\n                puVar2 = *0x72dbc0;\n                if ((*0x72dbc0)[1] < (uVar1 >> 2) * 3) goto code_r0x00408f4a;\n                *(*0x20 + -0x30) = *0x72dbc0;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x408ecd;\n                piVar3 = fcn.0040b560(1, *0x72dbc0, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45df80;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x408f05;\n                fcn.00409b60();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x789810 != '\\0') {\n                        *(*0x20 + -0x50) = 0x408f2f;\n                        fcn.00403140();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x00408f4a:\n                    *0x72dbc0 = puVar2;\n                    *(*0x20 + -0x50) = 0x408f55;\n                    fcn.00408fa0();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x408f70;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x50) = 0x408f85;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x408f90;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 745
    },
    "00409000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409000(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x409047;\n            iVar3 = fcn.00453d60();\n            arg1_00 = *(*0x20 + -0x30);\n            uVar9 = *(arg1_00 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x58) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x004090c0:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1_00 + 0x38);\n                    arg1_00 = *(arg1_00 + 0x40);\n                    if (uVar10 < arg1_00) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x409105;\n                        uVar4 = fcn.00454140();\n                        *(*0x20 + -0x50) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x409125;\n                        uVar4 = fcn.00453ea0();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x409132;\n                        uVar4 = fcn.00454700(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x40914c;\n                        uVar5 = fcn.004548c0(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x40915f;\n                            uVar5 = fcn.00454700(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (arg1 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (arg1 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x409371;\n                                fcn.0045c5a0(arg1);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            noname_2 = uVar10 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x409254;\n                            uVar6 = fcn.00453ea0();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x58);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x409274;\n                            iVar7 = fcn.00454140();\n                            iVar8 = *(*0x20 + -0x50);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x40928f;\n                                fcn.00454700(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x4092ad;\n                                    cVar2 = fcn.004025e0(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x4092cc;\n                                fcn.004548c0(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x4092e5;\n                                    fcn.00453ea0();\n                                    *(*0x20 + -0xb0) = 0x4092ea;\n                                    fcn.00454700(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x409325;\n                                        cVar2 = fcn.004025e0(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00409185;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            arg1 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x40937c;\n                    fcn.0045c5a0(arg1_00);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x409386;\n                fcn.0045c6a0(arg1_00, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x409393;\n            in_RAX = fcn.0045c6a0(arg1_00, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x40939e;\n        fcn.00459ea0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00409185:\n    *(*0x20 + -0xb0) = 0x40919d;\n    arg4 = fcn.00454400();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x789810 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x4091d9;\n            fcn.0045c100(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1_00 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x004090c0;\n}\n",
        "token_count": 2319
    },
    "004094a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004094a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    puVar1 = fcn.0040bf40();\n    if (*0x789810 != 0) goto code_r0x00409515;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        puVar1[4] = 0;\n        puVar1[3] = 0;\n        fcn.00431940();\ncode_r0x00409515:\n        iVar2 = fcn.0045c200(arg1);\n        fcn.0045c220(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045c200(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 284
    },
    "00409580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409580(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    puVar1 = fcn.0040bf40();\n    if (*0x789810 != 0) goto code_r0x00409607;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        puVar1[4] = 0;\n        puVar1[3] = 0;\n        fcn.00431940();\ncode_r0x00409607:\n        iVar2 = fcn.0045c200(arg1);\n        fcn.0045c220(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045c200(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 335
    },
    "00409780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00409780(void)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x78a840;\n    }\n    else {\n        puVar1 = fcn.0040b560(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x789810 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045c200(in_RAX);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 202
    },
    "00409a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409a00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX != 0) {\n        fcn.00408b00(0);\n        return;\n    }\n    iVar1 = fcn.0040bf40();\n    if (*0x789810 != 0) goto code_r0x00409a78;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x18) = 0;\n        fcn.00431940();\ncode_r0x00409a78:\n        iVar1 = fcn.0045c200();\n    } while( true );\n}\n",
        "token_count": 234
    },
    "00409e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409e80(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x409edb;\n                fcn.0042dce0();\n                iVar4 = 0;\n                if (1 < *0x7895f8) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x409f96;\n                        fcn.0045bc80();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x69e5a0;\n                        *(*0x20 + -0x48) = 0x409f6f;\n                        fcn.00459d60();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x248) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40a018;\n                                    fcn.0042d940();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40a045;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40a050;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1118
    },
    "0040a0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a0a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040a116;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x248));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40a116;\n            uVar5 = fcn.0042dc60();\ncode_r0x0040a116:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40a165;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40a170;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 647
    },
    "0040a180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a180(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40a1ce;\n                uVar1 = fcn.0042dc60();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40a1e9;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40a1f4;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 410
    },
    "0040a200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040a200(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40a23b;\n                fcn.0042dce0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x72dbb8 == 0) {\n                        *(*0x20 + -0x30) = 0x40a285;\n                        fcn.0042d940();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40a2cc;\n                            fcn.0042d940(iVar1);\n                            *(*0x20 + -0x28) = **0x72dbb8;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40a2e8;\n                            fcn.0045bce0();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40a2a8;\n                    fcn.004320e0();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40a325;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40a330;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 738
    },
    "0040a340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040a340(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x72dbb8 == 0) {\n                fcn.0042d940();\n            }\n            else {\n                while (iVar4 = fcn.0042d940(),  iVar4 < 0) {\n                    fcn.0045bce0();\n                }\n            }\n            goto code_r0x0040a570;\n        }\n        fcn.0045de80();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.004320e0();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042d940();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x72dbb8;\n        if (iVar2 != 0) {\n            fcn.0045bce0();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045de80();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042d940();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.004320e0();\n    }\n    fcn.004320e0();\ncode_r0x0040a570:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 761
    },
    "0040a820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a820(uint64_t param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t noname_1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7204a4 == 0x10) {\n                *(*0x20 + -0x28) = 0x40a84b;\n                fcn.0042fc20();\n                for (iVar1 = 0; noname_1 = *0x789730,  iVar1 < 0x44; iVar1 = iVar1 + 1) {\n                    param_3 = 0x78c4f0;\n                    *(iVar1 * 0x18 + 0x78c4f0) = *(iVar1 * 2 + 0x7204a0);\n                }\n                if (*0x789738 != 0) {\n                    if (*0x789738 < 0x80001) {\n                        if (0xfff < *0x789738) {\n                            if ((*0x789738 & *0x789738 - 1) == 0) {\n                                if ((*0x789730 & *0x789730 - 1) == 0) {\n                                    if (0x400000 < *0x789730) {\n                                        *0x789730 = 0;\n                                    }\n                                    if (*0x789730 != 0) {\n                                        while (noname_1 = -(*0x789728 < 0x40),  param_1 = *0x789728, \n                                              *0x789730 != (1 << (*0x789728 & 0x3f) & noname_1)) {\n                                            *0x789728 = *0x789728 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40a8f8;\n                                    fcn.00421900(param_1, noname_1, param_3);\n                                    *(*0x20 + -0x28) = 0x40a8fd;\n                                    *0x7896f0 = fcn.004129a0();\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40a91c;\n                                        puVar2 = fcn.00415780();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x75bc38;\n                                        *0x75bc38 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40a994;\n                                fcn.00433860();\n                                *(*0x20 + -0x28) = 0x40a9a5;\n                                fcn.00434160();\n                                *(*0x20 + -0x28) = 0x40a9b1;\n                                fcn.00433e60();\n                                *(*0x20 + -0x28) = 0x40a9c5;\n                                fcn.00434160();\n                                *(*0x20 + -0x28) = 0x40a9ca;\n                                fcn.004338e0();\n                                *(*0x20 + -0x28) = 0x40a9db;\n                                fcn.004320e0();\n                            }\n                            *(*0x20 + -0x28) = 0x40a9e5;\n                            fcn.00433860();\n                            *(*0x20 + -0x28) = 0x40a9f6;\n                            fcn.00434160();\n                            *(*0x20 + -0x28) = 0x40aa05;\n                            fcn.00433e60();\n                            *(*0x20 + -0x28) = 0x40aa16;\n                            fcn.00434160();\n                            *(*0x20 + -0x28) = 0x40aa1b;\n                            fcn.004338e0();\n                            *(*0x20 + -0x28) = 0x40aa2c;\n                            fcn.004320e0();\n                        }\n                        *(*0x20 + -0x28) = 0x40aa31;\n                        fcn.00433860();\n                        *(*0x20 + -0x28) = 0x40aa45;\n                        fcn.00434160();\n                        *(*0x20 + -0x28) = 0x40aa51;\n                        fcn.00433e60();\n                        *(*0x20 + -0x28) = 0x40aa65;\n                        fcn.00434160();\n                        *(*0x20 + -0x28) = 0x40aa6f;\n                        fcn.00433f60();\n                        *(*0x20 + -0x28) = 0x40aa85;\n                        fcn.00434160();\n                        *(*0x20 + -0x28) = 0x40aa8a;\n                        fcn.004338e0();\n                        *(*0x20 + -0x28) = 0x40aa9b;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x28) = 0x40aaa5;\n                    fcn.00433860();\n                    *(*0x20 + -0x28) = 0x40aab6;\n                    fcn.00434160();\n                    *(*0x20 + -0x28) = 0x40aac5;\n                    fcn.00433e60();\n                    *(*0x20 + -0x28) = 0x40aad6;\n                    fcn.00434160();\n                    *(*0x20 + -0x28) = 0x40aae5;\n                    fcn.00433f60();\n                    *(*0x20 + -0x28) = 0x40aaf6;\n                    fcn.00434160();\n                    *(*0x20 + -0x28) = 0x40aafb;\n                    fcn.004338e0();\n                    *(*0x20 + -0x28) = 0x40ab0c;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x28) = 0x40ab1d;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x28) = 0x40ab2e;\n            fcn.004320e0();\n        }\n        *(puVar3 + -8) = 0x40ab34;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1634
    },
    "0040b560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040b560(uint64_t param_1, ulong param_2, ulong param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    bool bVar10;\n    uint64_t in_RAX;\n    int64_t iVar11;\n    uchar (*pauVar12) [16];\n    uint64_t *puVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    uint64_t uVar16;\n    char cVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uchar uVar20;\n    uchar uVar21;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7895f0 != 2) {\n                if (in_RAX == 0) {\n                    return 0x7897b8;\n                }\n                if (*0x789a1c != '\\0') {\n                    if (*0x789a28 != 0) {\n                        *(*0x20 + -0x80) = 0x40b5f9;\n                        iVar11 = fcn.0040c2a0(0x78b4c0);\n                        return iVar11;\n                    }\n                    if ((*0x789860 != '\\0') && (*(unaff_R14 + 0x98) == *0x789868)) {\n                        *0x789870 = *0x789870 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x7895e8 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (iVar11 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        iVar11 = *(*0x20 + -0x18);\n                    }\n                    iVar15 = *(iVar11 + 0x180) - in_RAX;\n                    *(iVar11 + 0x180) = iVar15;\n                    if (iVar15 < 0) {\n                        *(*0x20 + -0x10) = iVar11;\n                        *(*0x20 + -0x80) = 0x40b685;\n                        fcn.00419260();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        iVar11 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar2 = *piVar2 + 1;\n                iVar15 = *(unaff_R14 + 0x30);\n                if (*(iVar15 + 0xc0) == 0) {\n                    if (*(iVar15 + 0x50) != unaff_R14) {\n                        *(iVar15 + 0xc0) = 1;\n                        iVar8 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        uVar16 = *0x7896f0;\n                        if (iVar8 != 0) {\n                            uVar16 = *(iVar8 + 0x40);\n                        }\n                        if (uVar16 != 0) {\n                            if (unaff_RBX == 0) {\n                                param_4 = 1;\n                            }\n                            else {\n                                param_4 = param_4 & 0xffffffffffffff00 | *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar15;\n                            *(*0x20 + -0x38) = uVar16;\n                            *(*0x20 + -0x52) = param_4;\n                            *(*0x20 + -0x18) = iVar11;\n                            uVar18 = param_4;\n                            if (in_RAX < 0x8001) {\n                                if ((param_4 == '\\0') || (0xf < in_RAX)) {\n                                    if (0x3f8 < in_RAX) {\n                                        uVar19 = in_RAX - 0x381 >> 7;\n                                        if (uVar19 < 0xf9) {\n                                            uVar5 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                    [uVar19];\n                                            goto code_r0x0040b941;\n                                        }\ncode_r0x0040bddf:\n                                        *(*0x20 + -0x80) = 0x40bdec;\n                                        fcn.0045c5c0(0xf9);\ncode_r0x0040bdec:\n                                        param_1 = 0x81;\n                                        *(*0x20 + -0x80) = 0x40bdf9;\n                                        fcn.0045c5c0(0x81);\n                                        goto code_r0x0040bdf9;\n                                    }\n                                    uVar19 = in_RAX + 7 >> 3;\n                                    if (0x80 < uVar19) goto code_r0x0040bdec;\n                                    uVar5 = *(uVar19 + 0x720360);\ncode_r0x0040b941:\n                                    if (0x43 < uVar5) {\ncode_r0x0040bdd2:\n                                        *(*0x20 + -0x80) = 0x40bddf;\n                                        fcn.0045c5a0(0x44);\n                                        goto code_r0x0040bddf;\n                                    }\n                                    uVar6 = *(uVar5 * 2 + 0x7204a0);\n                                    uVar19 = uVar5 << 1 & 0xff | uVar18 & 0xff;\n                                    if (0x87 < uVar19) {\n                                        *(*0x20 + -0x80) = 0x40bdd2;\n                                        fcn.0045c5a0(0x88);\n                                        goto code_r0x0040bdd2;\n                                    }\n                                    uVar19 = *(uVar16 + 0x28 + uVar19 * 8);\n                                    uVar9 = *(uVar19 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar9 != 0) {\n                                        for (; (uVar9 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar9 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar16 = *(uVar19 + 0x30) + iVar11;\n                                        if (*(uVar19 + 0x38) <= uVar16) {\n                                            uVar16 = *(*0x20 + -0x38);\n                                            goto code_r0x0040ba2c;\n                                        }\n                                        uVar4 = *(uVar19 + 0x30) + iVar11 + 1;\n                                        if (((uVar4 & 0x3f) == 0) && (*(uVar19 + 0x38) != uVar4)) {\n                                            uVar16 = *(*0x20 + -0x38);\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            *(uVar19 + 0x40) = uVar9 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                            *(uVar19 + 0x30) = uVar4;\n                                            *(uVar19 + 0x60) = *(uVar19 + 0x60) + 1;\n                                            pauVar12 = *(uVar19 + 0x68) * uVar16 + *(uVar19 + 0x18);\n                                            param_1 = *(*0x20 + 0x18);\n                                            uVar16 = *(*0x20 + -0x38);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040ba2c:\n                                        pauVar12 = NULL;\n                                    }\n                                    *(*0x20 + -0x30) = uVar6;\n                                    if (pauVar12 == NULL) {\n                                        uVar19 = uVar5 << 1 | uVar18 & 0xff;\n                                        *(*0x20 + -0x80) = 0x40ba48;\n                                        pauVar12 = fcn.0040b340(param_1, 0, uVar16);\n                                        uVar16 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x52);\n                                        uVar20 = param_1;\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        uVar20 = 0;\n                                    }\n                                    cVar17 = uVar18;\n                                    if ((param_1 != '\\0') && (*(uVar19 + 100) != '\\0')) {\n                                        *(*0x20 + -0x20) = pauVar12;\n                                        *(*0x20 + -0x53) = uVar20;\n                                        *(*0x20 + -0x50) = uVar19;\n                                        *(*0x20 + -0x80) = 0x40baa9;\n                                        fcn.0045cc20(param_1, pauVar12, uVar16);\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        pauVar12 = *(*0x20 + -0x20);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                        uVar16 = *(*0x20 + -0x38);\n                                        cVar17 = *(*0x20 + -0x52);\n                                        uVar20 = *(*0x20 + -0x53);\n                                        uVar19 = *(*0x20 + -0x50);\n                                    }\n                                    puVar13 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    uVar19 = *(uVar16 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar19 = uVar19 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar19 = uVar19 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar19 = uVar19 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar19 < 0x11) && (iVar11 = *(uVar16 + 0x10),  iVar11 != 0)) {\n                                        *(uVar16 + 0x18) = in_RAX + uVar19;\n                                        *(uVar16 + 0x20) = *(uVar16 + 0x20) + 1;\n                                        *(iVar15 + 0xc0) = 0;\n                                        iVar7 = *(iVar15 + 0xd8);\n                                        *(iVar15 + 0xd8) = iVar7 + -1;\n                                        if ((iVar7 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar11 + uVar19;\n                                    }\n                                    uVar19 = *(uVar16 + 0x50);\n                                    uVar9 = *(uVar19 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar9 != 0) {\n                                        for (; (uVar9 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar9 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar4 = *(uVar19 + 0x30) + iVar11;\n                                        if (*(uVar19 + 0x38) <= uVar4) goto code_r0x0040b878;\n                                        uVar1 = *(uVar19 + 0x30) + iVar11 + 1;\n                                        if (((uVar1 & 0x3f) == 0) && (*(uVar19 + 0x38) != uVar1)) {\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            *(uVar19 + 0x40) = uVar9 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                            *(uVar19 + 0x30) = uVar1;\n                                            *(uVar19 + 0x60) = *(uVar19 + 0x60) + 1;\n                                            pauVar12 = *(uVar19 + 0x68) * uVar4 + *(uVar19 + 0x18);\n                                            param_1 = *(*0x20 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040b878:\n                                        pauVar12 = NULL;\n                                    }\n                                    if (pauVar12 == NULL) {\n                                        *(*0x20 + -0x80) = 0x40b891;\n                                        pauVar12 = fcn.0040b340();\n                                        uVar16 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x52);\n                                        uVar19 = 5;\n                                        uVar20 = param_1;\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        uVar20 = 0;\n                                    }\n                                    cVar17 = uVar18;\n                                    *pauVar12 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(uVar16 + 0x18) && *(uVar16 + 0x18) != in_RAX) ||\n                                       (*(uVar16 + 0x10) == 0)) {\n                                        *(uVar16 + 0x10) = pauVar12;\n                                        *(uVar16 + 0x18) = in_RAX;\n                                    }\n                                    puVar13 = 0x10;\n                                }\n                                uVar21 = 1;\n                            }\n                            else {\n                                if (param_1 == '\\0') {\n                                    uVar18 = 0;\n                                }\n                                else {\n                                    uVar18 = uVar18 ^ 1;\n                                }\n                                *(*0x20 + -0x80) = 0x40bb25;\n                                uVar19 = fcn.00412ec0(uVar18);\n                                *(uVar19 + 0x30) = 1;\n                                *(uVar19 + 0x60) = 1;\n                                pauVar12 = *(uVar19 + 0x18);\n                                puVar13 = *(uVar19 + 0x68);\n                                param_1 = *(*0x20 + 0x18);\n                                uVar16 = *(*0x20 + -0x38);\n                                cVar17 = *(*0x20 + -0x52);\n                                uVar21 = in_RAX;\n                                uVar20 = 1;\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(*0x20 + -0x20) = pauVar12;\n                            *(*0x20 + -0x30) = puVar13;\n                            *(*0x20 + -0x53) = uVar20;\n                            *(*0x20 + -0x51) = uVar21;\n                            *(*0x20 + -0x50) = uVar19;\n                            if (cVar17 == '\\0') {\n                                if (*0x734cd0 == unaff_RBX) {\n                                    in_RAX = 0x48;\n                                }\n                                *(*0x20 + -0x40) = in_RAX;\n                                *(*0x20 + -0x80) = 0x40bbbe;\n                                fcn.00411140(in_RAX);\n                                puVar13 = *(*0x20 + 0x10);\n                                in_RAX = *(*0x20 + -0x40);\n                                if (*puVar13 < in_RAX) {\n                                    uVar16 = in_RAX - *puVar13;\n                                    uVar19 = 0;\n                                    if (puVar13[1] != 0) {\n                                        uVar19 = uVar16 + puVar13[1];\n                                    }\n                                }\n                                else {\n                                    uVar19 = puVar13[1];\n                                    uVar16 = in_RAX;\n                                }\n                                *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar19;\n                                param_1 = in_RAX;\n                            }\n                            else {\n                                uVar19 = 0;\n                            }\n                            *(*0x20 + -0x40) = in_RAX;\n                            *(*0x20 + -0x48) = uVar19;\n                            *(*0x20 + -0x80) = 0x40bc14;\n                            fcn.0045bca0(param_1, puVar13, uVar16);\n                            iVar11 = **(in_GS_OFFSET + 0x28);\n                            if (*0x7895f0 != 0) {\n                                *(*0x20 + -0x80) = 0x40bc4a;\n                                fcn.0041ba80(*(*0x20 + -0x30));\n                            }\n                            if (*0x789638 < 1) {\n                                uVar16 = *(*0x20 + -0x30);\n                            }\n                            else {\n                                if (*0x789638 == 1) {\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    uVar19 = **(*0x20 + -0x38);\n                                    uVar16 = *(*0x20 + -0x30);\n                                    if (uVar16 < uVar19) {\n                                        **(*0x20 + -0x38) = uVar19 - uVar16;\n                                        goto code_r0x0040bc96;\n                                    }\n                                }\n                                *(*0x20 + -0x80) = 0x40bc8a;\n                                fcn.0040c060(uVar16);\n                                uVar16 = *(*0x20 + -0x30);\n                            }\ncode_r0x0040bc96:\n                            iVar15 = *(*0x20 + -0x28);\n                            *(iVar15 + 0xc0) = 0;\n                            iVar7 = *(iVar15 + 0xd8);\n                            *(iVar15 + 0xd8) = iVar7 + -1;\n                            if ((iVar7 == 1) && (*(iVar11 + 0xb1) != '\\0')) {\n                                *(iVar11 + 0x10) = 0xfffffffffffffade;\n                            }\n                            if ((*(*0x20 + -0x51) == '\\0') && (*(*0x20 + 0x18) != '\\0')) {\n                                *(*0x20 + -0x80) = 0x40bcf1;\n                                fcn.0040be80();\n                                uVar16 = *(*0x20 + -0x30);\n                            }\n                            if (*0x789a1c != '\\0') {\n                                if (*0x789a20 != 0) {\n                                    *(*0x20 + -0x80) = 0x40bd1d;\n                                    fcn.00428fc0(*(*0x20 + 0x10));\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                if ((*0x789860 != '\\0') && (*(iVar11 + 0x98) == *0x789868)) {\n                                    *0x789878 = *0x789878 + uVar16;\n                                }\n                            }\n                            if (*(*0x20 + -0x18) != 0) {\n                                piVar3 = *(*0x20 + -0x18) + 0x180;\n                                *piVar3 = *piVar3 - (uVar16 - *(*0x20 + -0x40));\n                            }\n                            if (*(*0x20 + -0x53) != '\\0') {\n                                if (((*0x78c4e8 == '\\0') || (*0x78960c != 0)) || (*0x7895f0 != 0)) {\n                                    bVar10 = false;\n                                }\n                                else {\n                                    bVar10 = *0x789e58 <= *0x789e70;\n                                }\n                                if (bVar10) {\n                                    *(*0x20 + -0x80) = 0x40bda5;\n                                    fcn.00415ac0(0);\n                                }\n                            }\n                            return *(*0x20 + -0x20);\n                        }\ncode_r0x0040bdf9:\n                        *(*0x20 + -0x80) = 0x40be0a;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x80) = 0x40be1b;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x80) = 0x40be2c;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x80) = 0x40be3d;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        puVar14[0x18] = param_1;\n        *(puVar14 + -8) = 0x40be51;\n        fcn.00459ea0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 5249
    },
    "0040be80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040be80(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.00459ce0();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045cc20(uVar2);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040bfa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bfa0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40c00f;\n                fcn.0040b560(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40bff2;\n                fcn.0040b560(1);\n                return;\n            }\n            unaff_RBX = 0x6b57d8;\n            *(*0x20 + -0x28) = 0x40c02c;\n            in_RAX = fcn.00431940(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40c03c;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "0040c060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c060(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n            piVar3 = *0x7896f0;\n            if (iVar2 != 0) {\n                piVar3 = *(iVar2 + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x789638 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40c0bf;\n                    iVar1 = fcn.0040c140();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40c0e5;\n                fcn.00428a00(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40c105;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40c11a;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "0040c3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c3c0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040c413:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40c4ed;\n                        iVar5 = fcn.00414140();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40c46c;\n                        fcn.00409e80();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x789828;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x1650;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40c4ca;\n                        puVar8 = fcn.00414140();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x789828) goto code_r0x0040c611;\n                            do {\n                                *(*0x20 + -0x48) = 0x40c60f;\n                                fcn.004320e0();\ncode_r0x0040c611:\n                                *(*0x20 + -0x48) = 0x40c61d;\n                                fcn.0040a0a0();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x789720;\n                            **ppuVar7 = *0x789720;\n                            LOCK();\n                            bVar9 = uVar4 == *0x789720;\n                            *0x789720 = *0x789720 ^ bVar9 * (*0x789720 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x789828) {\n                        *(*0x20 + -0x48) = 0x40c557;\n                        fcn.0040a0a0();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x78b4c0) {\n                        *(*0x20 + -0x48) = 0x40c57d;\n                        fcn.0042a840();\n                        *(*0x20 + -0x48) = 0x40c591;\n                        fcn.0042a840();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040c413;\n                    *(*0x20 + -0x48) = 0x40c630;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x48) = 0x40c645;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40c656;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40c66b;\n        fcn.0045e5a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1618
    },
    "0040c680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c680(int64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar2 = uVar1 + unaff_RBX;\n    if (uVar2 <= in_RAX[2]) {\n        *in_RAX = uVar2;\n        uVar2 = -*0x789738 & (uVar2 + *0x789738) - 2;\n        if (in_RAX[1] < uVar2) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00414840(unaff_RDI);\n                fcn.004143a0();\n            }\n            in_RAX[1] = uVar2;\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "0040c800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c800(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t arg4;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t *in_R8;\n    int64_t *piVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar4 = *(in_RAX + 0x28);\n    if ((iVar4 == 0) || (arg4 = *(iVar4 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040b560(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar6 = in_R8 + arg4 + -8;\n        if (*piVar6 == 0) {\n            if (*0x789810 == 0) {\n                *(iVar4 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                fcn.0045c260(arg1, iVar4, in_R8, arg4);\n            }\n        }\n        else {\n            iVar4 = arg1;\n            if (*0x789810 == 0) {\n                *piVar6 = 0;\n                iVar1 = in_RAX;\n            }\n            else {\n                iVar1 = fcn.0045c220(arg1, 0, in_R8, arg4);\n            }\n            if (*0x789810 == 0) {\n                *(*(iVar1 + 0x28) + 0x10) = 0;\n            }\n            else {\n                fcn.0045c220(iVar4, 0, in_R8, arg4);\n            }\n        }\n    }\n    iVar4 = arg4;\n    fcn.0040c780();\n    if (*(*(unaff_RBX + 0x40) + 8) == 0) {\n        iVar1 = in_RAX;\n        if (*(in_RAX + 0x28) == 0) {\n            iVar5 = unaff_RBX;\n            uVar2 = fcn.0040bf40();\n            if (*0x789810 == 0) {\n                *(in_RAX + 0x28) = uVar2;\n            }\n            else {\n                fcn.0045c100(iVar5, in_RAX, in_R8, iVar4);\n            }\n        }\n        piVar6 = *(iVar1 + 0x28);\n        if (*piVar6 == 0) {\n            uVar2 = fcn.0040bf40();\n            if (*0x789810 == 0) {\n                **(in_RAX + 0x28) = uVar2;\n                iVar1 = in_RAX;\n            }\n            else {\n                fcn.0045c100(in_RAX, iVar1, piVar6, iVar4);\n                iVar1 = in_RAX;\n            }\n        }\n        in_R8 = **(iVar1 + 0x28);\n        iVar1 = in_R8[1];\n        iVar5 = *in_R8;\n        iVar3 = iVar5;\n        if (in_R8[2] < iVar1 + 1U) {\n            arg2 = iVar1;\n            piVar6 = in_R8;\n            iVar3 = fcn.00445220(iVar1);\n            in_R8[2] = iVar1;\n            if (*0x789810 == 0) {\n                *in_R8 = iVar3;\n                iVar1 = iVar5;\n            }\n            else {\n                iVar3 = fcn.0045c100(iVar1, arg2, piVar6, iVar4);\n                iVar1 = iVar5;\n            }\n        }\n        in_R8[1] = iVar1 + 1;\n        if (*0x789810 == 0) {\n            *(iVar3 + iVar1 * 8) = arg4;\n        }\n        else {\n            arg4 = fcn.0045c100(unaff_RBX, iVar1, in_R8, iVar4);\n        }\n    }\n    if (*0x789810 == 0) {\n        *(arg1 + *(unaff_RBX + 0x52) + -8) = arg4;\n    }\n    else {\n        fcn.0045c100(*(unaff_RBX + 0x52), arg1, in_R8, iVar4);\n    }\n    return;\n}\n",
        "token_count": 1039
    },
    "0040cae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040cae0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    uint8_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    auVar2 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar2 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar2, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040bf40();\n    }\n    iVar5 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar5 + 0xf0);\n    uVar1 = *(iVar5 + 0xf4);\n    *(iVar5 + 0xf0) = uVar1;\n    uVar6 = uVar6 << 0x11 ^ uVar6;\n    uVar7 = uVar1;\n    uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n    arg4 = uVar6;\n    *(iVar5 + 0xf4) = uVar6;\n    *(arg1 + 0xc) = uVar1 + uVar6;\n    uVar6 = 0;\n    while ((uVar3 = uVar6,  8 < unaff_RBX &&\n           (uVar7 = 1 << (uVar3 & 0x3f),  uVar8 = uVar7 >> 1,  uVar7 = uVar8 + (uVar7 & 0xfffffffffffffffe), \n           uVar8 + uVar7 * 4 < unaff_RBX))) {\n        uVar6 = uVar6 + 1;\n    }\n    *(arg1 + 9) = uVar3;\n    iVar5 = arg1;\n    if (uVar3 != 0) {\n        uVar8 = uVar6;\n        arg2 = arg1;\n        uVar4 = fcn.0040cca0(0);\n        if (*0x789810 == 0) {\n            *(arg1 + 0x10) = uVar4;\n        }\n        else {\n            fcn.0045c100(arg1, arg2, uVar7, arg4);\n        }\n        if (uVar8 != 0) {\n            iVar5 = fcn.0040bf40();\n            if (*0x789810 == 0) {\n                *(arg1 + 0x28) = iVar5;\n                *(iVar5 + 0x10) = uVar8;\n                iVar5 = arg1;\n            }\n            else {\n                fcn.0045c100(arg1, arg2, uVar7, arg4);\n                fcn.0045c220(arg1, uVar8, uVar7, arg4);\n                iVar5 = arg1;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 796
    },
    "0040cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cca0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040cdd2;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x7204a0);\n                            goto code_r0x0040cda0;\n                        }\n                        goto code_r0x0040ce8c;\n                    }\n                    goto code_r0x0040ce99;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x720360);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x7204a0);\n                        goto code_r0x0040cda0;\n                    }\n                    goto code_r0x0040cea6;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040cda0:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040cdd2;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040cdd2:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x28) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40ce2e;\n                        iVar3 = fcn.0040bfa0(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40ce15;\n                            fcn.0045cc20();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40ce08;\n                            fcn.0040fe00();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x20);\n                    if (*(*0x20 + -0x28) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x789810 == 0) {\n                            *((*(*0x20 + -0x28) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40ce76;\n                            fcn.0045c100(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40ce8c;\n                fcn.0042fa00();\ncode_r0x0040ce8c:\n                *(*0x20 + -0x40) = 0x40ce99;\n                fcn.0045c5a0(0x44);\ncode_r0x0040ce99:\n                *(*0x20 + -0x40) = 0x40cea6;\n                fcn.0045c5c0(0xf9);\ncode_r0x0040cea6:\n                *(*0x20 + -0x40) = 0x40ceb3;\n                fcn.0045c5a0(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40cec5;\n            in_RAX = fcn.0045c5c0(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40ced9;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1593
    },
    "0040d140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040d140(int64_t **arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar9;\n    ulong uVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t in_R8;\n    int64_t iVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040d140:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (unaff_RBX != 0) {\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x80) = 0x40d19e;\n                uVar4 = (*pcVar2)();\n                *(*0x20 + -0x50) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    uVar10 = *(*0x20 + 8);\n                    uVar8 = 1;\n                    *(*0x20 + -0x80) = 0x40d1d5;\n                    iVar5 = fcn.0040b560();\n                    if (*0x789810 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x80) = 0x40d1fd;\n                        fcn.0045c100(uVar8, uVar10, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x50);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x48) = arg1_00;\n                        *(*0x20 + -0x80) = 0x40d25b;\n                        fcn.0040d840(arg1_00);\n                        uVar4 = *(*0x20 + -0x50);\n                        arg1_00 = *(*0x20 + -0x48);\n                        piVar9 = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    uVar1 = *(iVar5 + 0x52);\n                    iVar12 = piVar9[2];\n                    uVar6 = uVar4 >> 0x38;\n                    if (uVar4 >> 0x38 < 5) {\n                        uVar6 = (uVar4 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x59) = uVar6;\n                    arg2 = 0;\n                    in_R8 = 0;\n                    in_R9 = 0;\n                    iVar12 = arg1_00 * uVar1 + iVar12;\n                    do {\n                        arg1_01 = iVar12;\n                        *(*0x20 + -0x20) = arg1_01;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            uVar7 = *(arg1_01 + uVar4);\n                            if (uVar6 == uVar7) {\n                                *(*0x20 + -0x58) = uVar4;\n                                *(*0x20 + -0x28) = in_R9;\n                                *(*0x20 + -0x38) = in_R8;\n                                *(*0x20 + -0x30) = arg2;\n                                piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                                if ((*(iVar5 + 0x54) & 1) != 0) {\n                                    piVar9 = *piVar9;\n                                }\n                                *(*0x20 + -0x40) = piVar9;\n                                pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                                *(*0x20 + -0x80) = 0x40d402;\n                                cVar3 = (*pcVar2)();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*0x20 + 8);\n                                    if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                                        *(*0x20 + -0x80) = 0x40d465;\n                                        fcn.0040fb00(*(*0x20 + -0x10));\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    arg1 = *(*0x20 + -0x20) + *(iVar5 + 0x51) * *(*0x20 + -0x58) + *(iVar5 + 0x50) * 8 +\n                                           8;\n                                    goto code_r0x0040d5c1;\n                                }\n                                uVar6 = *(*0x20 + -0x59);\n                                arg1_01 = *(*0x20 + -0x20);\n                                piVar9 = *(*0x20 + 0x10);\n                                iVar5 = *(*0x20 + 8);\n                                uVar4 = *(*0x20 + -0x58);\n                                arg2 = *(*0x20 + -0x30);\n                                in_R8 = *(*0x20 + -0x38);\n                                in_R9 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                if ((uVar7 < 2) && (arg2 == 0)) {\n                                    in_R8 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                                    in_R9 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                                    arg2 = arg1_01 + uVar4;\n                                }\n                                if (uVar7 == 0) goto code_r0x0040d2a8;\n                            }\n                        }\n                        iVar12 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar12 != 0);\ncode_r0x0040d2a8:\n                    if (piVar9[3] != 0) goto code_r0x0040d497;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040d497;\n                    }\n                    *(*0x20 + -0x80) = 0x40d214;\n                    fcn.0040d660();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x50);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040d605;\n        }\n        goto code_r0x0040d616;\n    }\n    goto code_r0x0040d62a;\ncode_r0x0040d497:\n    iVar12 = in_R8;\n    if (arg2 == 0) {\n        *(*0x20 + -0x80) = 0x40d4aa;\n        arg2 = fcn.0040c800(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        iVar12 = arg2 + 8;\n        in_R9 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n    }\n    *(*0x20 + -0x28) = in_R9;\n    *(*0x20 + -0x30) = arg2;\n    in_R8 = iVar12;\n    if ((*(iVar5 + 0x54) & 1) != 0) {\n        *(*0x20 + -0x18) = iVar12;\n        uVar10 = 1;\n        *(*0x20 + -0x80) = 0x40d505;\n        in_R8 = fcn.0040b560();\n        if (*0x789810 == 0) {\n            **(*0x20 + -0x18) = in_R8;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40d51f;\n            in_R8 = fcn.0045c100(uVar10, arg2, iVar12, in_R9);\n        }\n        arg2 = *(*0x20 + -0x30);\n        iVar5 = *(*0x20 + 8);\n        in_R9 = *(*0x20 + -0x28);\n    }\n    if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n        *(*0x20 + -0x38) = in_R8;\n        uVar8 = 1;\n        *(*0x20 + -0x80) = 0x40d565;\n        uVar10 = fcn.0040b560();\n        if (*0x789810 == 0) {\n            **(*0x20 + -0x28) = uVar10;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40d57f;\n            fcn.0045c100(uVar8, arg2, in_R8, in_R9);\n        }\n        in_R8 = *(*0x20 + -0x38);\n    }\n    *(*0x20 + -0x80) = 0x40d59d;\n    fcn.0040fb00(*(*0x20 + -0x10));\n    **(*0x20 + -0x30) = *(*0x20 + -0x59);\n    **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n    iVar5 = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x28);\ncode_r0x0040d5c1:\n    uVar7 = *(*(*0x20 + 0x10) + 8);\n    if ((uVar7 & 4) != 0) {\n        *(*(*0x20 + 0x10) + 8) = uVar7 & 0xfb;\n        if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n            arg1 = *arg1;\n        }\n        return arg1;\n    }\n    *(*0x20 + -0x80) = 0x40d605;\n    fcn.004320e0();\ncode_r0x0040d605:\n    *(*0x20 + -0x80) = 0x40d616;\n    fcn.004320e0();\ncode_r0x0040d616:\n    unaff_RBX = 0x6b57e8;\n    *(*0x20 + -0x80) = 0x40d629;\n    in_RAX = fcn.00431940();\ncode_r0x0040d62a:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + -8) = 0x40d63e;\n    fcn.00459ea0();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    *0x20 = puVar11;\n    goto code_r0x0040d140;\n}\n",
        "token_count": 2991
    },
    "0040d660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d660(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t *arg1_00;\n    int64_t *arg2;\n    int64_t *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar5 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar5 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40d6d9;\n            iVar1 = fcn.0040cca0(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            arg3 = *(*0x20 + -0x19);\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x789810 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = iVar1;\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x40) = 0x40d72a;\n                fcn.0045c200();\n                *(*0x20 + -0x40) = 0x40d733;\n                fcn.0045c100(arg1, arg2, arg3, in_R9);\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1_00 = arg2[5];\n            if ((arg1_00 == NULL) || (*arg1_00 == 0)) goto code_r0x0040d794;\n            if (arg1_00[1] == 0) {\n                if (*0x789810 == 0) {\n                    arg1_00[1] = *arg1_00;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40d775;\n                    fcn.0045c260(arg1_00, arg2, arg3, in_R9);\n                }\n                if (*0x789810 == 0) {\n                    *arg2[5] = 0;\n                }\n                else {\n                    arg1_00 = NULL;\n                    *(*0x20 + -0x40) = 0x40d794;\n                    fcn.0045c200();\n                }\ncode_r0x0040d794:\n                if (uVar5 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0x40) = 0x40d7b3;\n                        iVar1 = fcn.0040bf40();\n                        if (*0x789810 == 0) {\n                            arg1_00 = *(*0x20 + 0x10);\n                            arg1_00[5] = iVar1;\n                        }\n                        else {\n                            arg1_00 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40d7d5;\n                            fcn.0045c100(arg1_00, arg2, arg3, in_R9);\n                        }\n                        uVar5 = *(*0x20 + -0x10);\n                        arg2 = arg1_00;\n                    }\n                    if (*0x789810 == 0) {\n                        *(arg2[5] + 0x10) = uVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40d7fb;\n                        fcn.0045c240(arg1_00, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40d816;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x40d826;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1359
    },
    "0040d840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d840(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040d8e0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040d8e0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0040e2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040e2c0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040e2c0:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1._0_4_ = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40e314;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40e345;\n                    iVar5 = fcn.0040b560();\n                    if (*0x789810 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40e367;\n                        fcn.0045c100(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40e3b9;\n                        fcn.0040e5c0(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1_01 = iVar2;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1_01 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                iVar2 = arg1_01;\n                                if (iVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1_01 + uVar4) == 0) goto code_r0x0040e3eb;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1_01 + uVar4 * 4 + 8)) goto code_r0x0040e53a;\n                            }\n                        }\n                        iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040e3eb:\n                    if (piVar9[3] != 0) goto code_r0x0040e4e2;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040e4e2;\n                    }\n                    *(*0x20 + -0x38) = 0x40e37b;\n                    fcn.0040d660();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040e574;\n        }\n        goto code_r0x0040e585;\n    }\n    goto code_r0x0040e599;\ncode_r0x0040e4e2:\n    uVar4 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40e4f5;\n        iVar6 = fcn.0040c800(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_01 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    *(arg1_01 + (uVar4 & 7)) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1_01 + uVar4 * 4 + 8) = *(*0x20 + 0x18);\n    *piVar9 = *piVar9 + 1;\n    in_R9 = uVar4 & 7;\ncode_r0x0040e53a:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1_01 + 0x28;\n    }\n    *(*0x20 + -0x38) = 0x40e574;\n    fcn.004320e0();\n    arg1._0_4_ = arg1_01;\ncode_r0x0040e574:\n    *(*0x20 + -0x38) = 0x40e585;\n    fcn.004320e0();\ncode_r0x0040e585:\n    unaff_RBX = 0x6b57e8;\n    *(*0x20 + -0x38) = 0x40e598;\n    in_RAX = fcn.00431940();\ncode_r0x0040e599:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40e5ac;\n    fcn.00459ea0();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1._0_4_ = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040e2c0;\n}\n",
        "token_count": 2034
    },
    "0040e5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e5c0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040e660((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040e660(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040f240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f240(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    ulong arg1_01;\n    uint64_t arg1_02;\n    int64_t **ppiVar9;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    \ncode_r0x0040f240:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x68) = 0x40f299;\n                uVar5 = (*pcVar2)();\n                *(*0x20 + -0x38) = uVar5;\n                piVar10 = *(*0x20 + 0x10);\n                *(piVar10 + 1) = *(piVar10 + 1) ^ 4;\n                if (piVar10[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_01 = 1;\n                    *(*0x20 + -0x68) = 0x40f2ca;\n                    iVar6 = fcn.0040b560();\n                    if (*0x789810 == 0) {\n                        piVar10 = *(*0x20 + 0x10);\n                        piVar10[2] = iVar6;\n                    }\n                    else {\n                        piVar10 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x68) = 0x40f2ec;\n                        fcn.0045c100(arg1_01, arg2, in_R8, in_R9);\n                    }\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                iVar6 = *(*0x20 + 8);\n                do {\n                    arg1_02 = (1 << (*(piVar10 + 9) & 0x3f)) - 1U & uVar5;\n                    if (piVar10[3] != 0) {\n                        *(*0x20 + -0x30) = arg1_02;\n                        *(*0x20 + -0x68) = 0x40f345;\n                        fcn.0040f640(arg1_02);\n                        uVar5 = *(*0x20 + -0x38);\n                        arg1_02 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + 8);\n                        piVar10 = *(*0x20 + 0x10);\n                    }\n                    uVar1 = *(iVar6 + 0x52);\n                    iVar3 = piVar10[2];\n                    uVar7 = uVar5 >> 0x38;\n                    if (uVar5 >> 0x38 < 5) {\n                        uVar7 = (uVar5 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x41) = uVar7;\n                    unaff_RDI = NULL;\n                    in_R8 = NULL;\n                    ppiVar12 = arg1_02 * uVar1 + iVar3;\n                    do {\n                        ppiVar9 = ppiVar12;\n                        *(*0x20 + -0x10) = ppiVar9;\n                        for (ppiVar12 = NULL; uVar4 = uVar7,  ppiVar12 < 0x8; ppiVar12 = ppiVar12 + 1) {\n                            uVar8 = *(ppiVar9 + ppiVar12);\n                            if (uVar4 == uVar8) {\n                                ppiVar13 = ppiVar9 + ppiVar12 * 2 + 1;\n                                if (ppiVar9[ppiVar12 * 2 + 2] == *(*0x20 + 0x20)) {\n                                    if (*(*0x20 + 0x18) == *ppiVar13) {\n                                        uVar4 = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x28) = ppiVar12;\n                                        *(*0x20 + -0x20) = ppiVar13;\n                                        *(*0x20 + -0x40) = in_R8;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        *(*0x20 + -0x68) = 0x40f4b3;\n                                        uVar4 = fcn.004025e0(*(*0x20 + 0x20), iVar6);\n                                        uVar4 = uVar4 ^ 1;\n                                        iVar6 = *(*0x20 + 8);\n                                        piVar10 = *(*0x20 + 0x10);\n                                        unaff_RDI = *(*0x20 + -0x18);\n                                        in_R8 = *(*0x20 + -0x40);\n                                        ppiVar13 = *(*0x20 + -0x20);\n                                        ppiVar12 = *(*0x20 + -0x28);\n                                        ppiVar9 = *(*0x20 + -0x10);\n                                        uVar7 = *(*0x20 + -0x41);\n                                    }\n                                    if (uVar4 == 0) {\n                                        in_R9 = ppiVar13;\n                                        if (*0x789810 == 0) {\n                                            *ppiVar13 = *(*0x20 + 0x18);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x68) = 0x40f512;\n                                            fcn.0045c200();\n                                            unaff_RDI = ppiVar13;\n                                        }\n                                        goto code_r0x0040f58e;\n                                    }\n                                }\n                            }\n                            else {\n                                if ((uVar8 < 2) && (unaff_RDI == NULL)) {\n                                    unaff_RDI = ppiVar9;\n                                    in_R8 = ppiVar12;\n                                }\n                                if (uVar8 == 0) goto code_r0x0040f388;\n                            }\n                        }\n                        ppiVar12 = *(ppiVar9 + (*(iVar6 + 0x52) - 8));\n                    } while (ppiVar12 != NULL);\ncode_r0x0040f388:\n                    if (piVar10[3] != 0) goto code_r0x0040f517;\n                    uVar8 = *(piVar10 + 9);\n                    if ((*piVar10 + 1U < 9) ||\n                       (uVar5 = 1 << (uVar8 & 0x3f), \n                       *piVar10 + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar8) {\n                            uVar8 = 0xf;\n                        }\n                        if (*(piVar10 + 10) < 1 << (uVar8 & 0xf)) goto code_r0x0040f517;\n                    }\n                    *(*0x20 + -0x68) = 0x40f305;\n                    fcn.0040d660();\n                    piVar10 = *(*0x20 + 0x10);\n                    uVar5 = *(*0x20 + -0x38);\n                    iVar6 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040f5cb;\n        }\n        goto code_r0x0040f5dc;\n    }\n    goto code_r0x0040f5f0;\ncode_r0x0040f517:\n    ppiVar12 = in_R8;\n    if (unaff_RDI == NULL) {\n        *(*0x20 + -0x68) = 0x40f52a;\n        unaff_RDI = fcn.0040c800(ppiVar9);\n        iVar6 = *(*0x20 + 8);\n        piVar10 = *(*0x20 + 0x10);\n        ppiVar12 = NULL;\n        uVar4 = *(*0x20 + -0x41);\n    }\n    *(unaff_RDI + (ppiVar12 & 7)) = uVar4;\n    ppiVar9 = unaff_RDI + ppiVar12 * 2 + 1;\n    arg1_00 = *(*0x20 + 0x20);\n    in_R9 = *(*0x20 + 0x18);\n    unaff_RDI[ppiVar12 * 2 + 2] = arg1_00;\n    if (*0x789810 == 0) {\n        *ppiVar9 = in_R9;\n        in_R8 = unaff_RDI;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x40f585;\n        fcn.0045c2a0(arg1_00, iVar6, unaff_RDI);\n        in_R8 = unaff_RDI;\n    }\n    *piVar10 = *piVar10 + 1;\n    unaff_RDI = ppiVar9;\n    ppiVar9 = in_R8;\ncode_r0x0040f58e:\n    uVar4 = *(iVar6 + 0x51);\n    uVar8 = *(piVar10 + 1);\n    arg1 = uVar8;\n    if ((uVar8 & 4) != 0) {\n        *(piVar10 + 1) = uVar8 & 0xfb;\n        return ppiVar9 + ppiVar12 * uVar4 + 0x88;\n    }\n    *(*0x20 + -0x68) = 0x40f5cb;\n    fcn.004320e0();\ncode_r0x0040f5cb:\n    *(*0x20 + -0x68) = 0x40f5dc;\n    fcn.004320e0();\ncode_r0x0040f5dc:\n    unaff_RBX = 0x6b57e8;\n    *(*0x20 + -0x68) = 0x40f5ef;\n    in_RAX = fcn.00431940();\ncode_r0x0040f5f0:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + 0x20) = unaff_RDI;\n    *(puVar11 + -8) = 0x40f609;\n    fcn.00459ea0();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    unaff_RDI = *(puVar11 + 0x20);\n    *0x20 = puVar11;\n    goto code_r0x0040f240;\n}\n",
        "token_count": 2697
    },
    "0040f640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f640(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040f6e0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040f6e0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0040fb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fb00(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x789814 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.00410580(in_RAX[1]);\n        }\n        fcn.0045cee0(*in_RAX);\n        if (*0x789815 != '\\0') {\n            fcn.00403c20(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040fba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fba0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x789814 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.00410580(unaff_RDI);\n    }\n    fcn.0045cee0(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.0042f9a0();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x789810 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.0045c240(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045c5a0(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 435
    },
    "0040fcc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040fcc0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x789815 != '\\0') {\n        fcn.00403cc0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x789814 != '\\0') {\n            fcn.00410580((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045cee0(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 224
    },
    "0040fda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fda0(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x789814 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.00410580(in_RAX[1]);\n    }\n    fcn.0045cc20(*in_RAX);\n    return;\n}\n",
        "token_count": 77
    },
    "0040ffc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ffc0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.004338e0();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.004338e0();\n        }\n        else {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.004338e0();\n        }\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.004338e0();\n    }\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    if (arg1 != 0) goto code_r0x00410110;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.004320e0();\ncode_r0x00410110:\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.004338e0();\n        fcn.0041b640(arg1);\n    } while( true );\n}\n",
        "token_count": 441
    },
    "00410200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00410200(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x75ba18);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x789a00 != 0) {\n                fcn.0040ffc0(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x789a00 != 0)) {\n        fcn.0040ffc0(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 463
    },
    "00410c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410c00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x00410c89;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x00410c89:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar6;\n                    if (*(iVar1 + 0x16c8) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042ab40();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar6;\n                    if (*(iVar1 + 0x16c8) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042ab40();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "00410da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410da0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x789814 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x16c0);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x16c0) + 0x10;\n                            *(iVar1 + 0x16c0) = iVar8;\n                            if (*(iVar1 + 0x16c8) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042ab40();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00453cc0();\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.004338e0();\n            fcn.004320e0();\n        }\n        fcn.00453cc0();\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00434160();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00433ac0();\n        fcn.004338e0();\n        fcn.004320e0();\n    }\n    fcn.004320e0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 687
    },
    "00411de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411de0(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x411eb7;\n                    arg3 = fcn.00412280(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x411f0e;\n                        fcn.00433860();\n                        *(*0x20 + -0x70) = 0x411f1f;\n                        fcn.00434160();\n                        *(*0x20 + -0x70) = 0x411f29;\n                        fcn.00433e60();\n                        *(*0x20 + -0x70) = 0x411f3a;\n                        fcn.00434160();\n                        *(*0x20 + -0x70) = 0x411f47;\n                        fcn.00433e60();\n                        *(*0x20 + -0x70) = 0x411f4c;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x70) = 0x411f51;\n                        fcn.004338e0();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x411f65;\n                        uVar1 = fcn.004320e0();\n                        goto code_r0x00411f65;\n                    }\ncode_r0x00411ecb:\n                    *(*0x20 + -0x70) = 0x411efa;\n                    fcn.0045cc20(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00411f65;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00411f65;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x004120b0:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x004120e5;\ncode_r0x00412099:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x004120b0;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00411f65:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x0041207f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00412065;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x412027;\n                                        fcn.00412280(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x00411ecb;\n                                    }\n                                    *(*0x20 + -0x70) = 0x412056;\n                                    fcn.0045c5a0(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x412065;\n                                fcn.0045c5a0(0x28);\ncode_r0x00412065:\n                                *(*0x20 + -0x70) = 0x412072;\n                                fcn.0045c5a0(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x41207f;\n                            fcn.0045c5a0(0x28);\ncode_r0x0041207f:\n                            *(*0x20 + -0x70) = 0x41208c;\n                            fcn.0045c5a0(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x412099;\n                        uVar1 = fcn.0045c5a0(0x28);\n                        goto code_r0x00412099;\n                    }\n                    *(*0x20 + -0x70) = 0x4120e5;\n                    fcn.0045c5a0(0x28);\ncode_r0x004120e5:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x4120f2;\n                    fcn.0045c5a0(0x28);\n                }\n                *(*0x20 + -0x70) = 0x4120f7;\n                fcn.0042fa00();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x412108;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x412139;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2449
    },
    "00412280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.00412280(uint8_t *arg1)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_RDI;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    \n    puVar11 = NULL;\n    puVar7 = arg1;\n    puVar8 = arg1;\n    puVar6 = NULL;\ncode_r0x00412454:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar6; puVar6 = puVar6 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar7 = puVar11;\n                    puVar7 = puVar7 + 1;\n                }\n                else {\n                    *puVar7 = puVar11 & 0xf | 0xf0;\n                    puVar7[1] = puVar11 >> 4 & 0xf | 0xf0;\n                    puVar7 = puVar7 + 2;\n                }\n                puVar11 = puVar11 >> 8;\n            }\n            uVar2 = *in_RAX;\n            puVar14 = uVar2 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar5 = puVar6;\n            if (uVar2 < '\\0') break;\n            if ((uVar2 & 0x7f) == 0) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar1 = (puVar7 - puVar8) * 8;\n                        for (puVar8 = puVar6 + (-puVar6 & 7); puVar8 != NULL; puVar8 = puVar8 + -8) {\n                            *puVar7 = puVar11;\n                            puVar11 = puVar11 >> 8;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    else {\n                        iVar1 = (puVar7 - puVar8) * 4;\n                        for (puVar8 = puVar6 + (-puVar6 & 3); puVar8 != NULL; puVar8 = puVar8 + -4) {\n                            *puVar7 = puVar11 & 0xf | 0xf0;\n                            puVar11 = puVar11 >> 4;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    return puVar6 + iVar1;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar4 = 0; uVar4 < puVar14 >> 3; uVar4 = uVar4 + 1) {\n                    uVar13 = puVar11 | *in_RAX << (uVar5 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar7 = uVar13;\n                        puVar7 = puVar7 + 1;\n                    }\n                    else {\n                        *puVar7 = uVar13 & 0xf | 0xf0;\n                        puVar7[1] = uVar13 >> 4 & 0xf | 0xf0;\n                        puVar7 = puVar7 + 2;\n                    }\n                    puVar11 = uVar13 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar2 & 7) != 0) {\n                    puVar11 = puVar11 | *in_RAX << (uVar5 & 0x3f);\n                    puVar6 = puVar6 + (uVar2 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if ((uVar2 & 0x7f) == 0) {\n            uVar4 = 0;\n            while( true ) {\n                uVar2 = *in_RAX;\n                puVar14 = puVar14 | (uVar2 & 0x7f) << (uVar4 & 0x3f) & -(uVar4 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar2) break;\n                uVar4 = uVar4 + 7;\n            }\n        }\n        uVar13 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar2 = *in_RAX;\n            uVar13 = uVar13 | -(uVar4 < 0x40) & (uVar2 & 0x7f) << (uVar4 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar2) break;\n            uVar4 = uVar4 + 7;\n        }\n        puVar3 = uVar13 * puVar14;\n        if (puVar14 < 0x3a) break;\n        uVar4 = puVar14 - puVar6;\n        if (unaff_RDI == 1) {\n            uVar13 = uVar4 & 7;\n            puVar14 = puVar7 + -(uVar4 + 7 >> 3);\n            if (uVar13 != 0) {\n                puVar11 = puVar11 | (*puVar14 >> (-(uVar13 - 8) & 0x3f) & -(-(uVar13 - 8) < 0x40)) << (uVar5 & 0x3f);\n                puVar6 = puVar6 + uVar13;\n                puVar3 = puVar3 + -uVar13;\n                puVar14 = puVar14 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar4 = puVar3 >> 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar13 = puVar11 | *puVar14 << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13;\n                puVar11 = uVar13 >> 8;\n                puVar14 = puVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar4 = puVar3 & 7;\n            if (uVar4 != 0) {\n                puVar11 = puVar11 | ((1 << uVar4) - 1U & *puVar14) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar4;\n            }\n        }\n        else {\n            uVar13 = uVar4 & 3;\n            puVar14 = puVar7 + -(uVar4 + 3 >> 2);\n            if (uVar13 != 0) {\n                puVar11 = puVar11 | ((*puVar14 & 0xf) >> (-(uVar13 - 4) & 0x3f) & -(-(uVar13 - 4) < 0x40)) <<\n                                    (uVar5 & 0x3f);\n                puVar6 = puVar6 + uVar13;\n                puVar3 = puVar3 + -uVar13;\n                puVar14 = puVar14 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar4 = puVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar13 = puVar11 | (*puVar14 & 0xf) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13 & 0xf | 0xf0;\n                puVar11 = uVar13 >> 4;\n                puVar14 = puVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar4 = puVar3 & 3;\n            if (uVar4 != 0) {\n                puVar11 = puVar11 | ((1 << uVar4) - 1U & *puVar14) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar4;\n            }\n        }\n    }\n    puVar10 = puVar6;\n    puVar12 = puVar11;\n    puVar15 = puVar7;\n    if (unaff_RDI != 1) {\n        do {\n            puVar15 = puVar15 + -1;\n            puVar9 = puVar6;\n            if (puVar14 <= puVar10) goto code_r0x00412605;\n            puVar10 = puVar10 + 4;\n            puVar12 = puVar12 << 4 | *puVar15 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar15 = puVar15 + -1;\n        puVar9 = puVar6;\n        if (puVar14 <= puVar10) {\ncode_r0x00412605:\n            puVar6 = puVar10;\n            if (puVar14 < puVar10) {\n                puVar15 = -(puVar10 - puVar14 < 0x40);\n                puVar12 = puVar12 >> (puVar10 - puVar14 & 0x3f) & puVar15;\n                puVar6 = puVar14;\n            }\n            if (puVar6 == 0x1) {\n                puVar6 = puVar3;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x0041266e;\n            }\n            puVar10 = puVar6 * 2;\n            puVar14 = puVar6;\n            if (0x39 < puVar10) goto code_r0x0041266e;\n            for (; puVar14 < 0x41; puVar14 = puVar14 * 2) {\n                puVar10 = puVar12;\n                puVar12 = puVar12 << (puVar14 & 0x3f) & -(puVar14 < 0x40) | puVar12;\n                puVar15 = puVar6;\n            }\n            if (puVar6 != NULL) break;\n            puVar3 = fcn.0042fa00();\n        }\n        puVar10 = puVar10 + 8;\n        puVar12 = puVar12 << 8 | *puVar15;\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar12 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\ncode_r0x0041266e:\n    while (puVar6 <= puVar3) {\n        puVar11 = puVar11 | puVar12 << (puVar9 & 0x3f) & -(puVar9 < 0x40);\n        puVar9 = puVar6 + puVar9;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar9; puVar9 = puVar9 + -8) {\n                *puVar7 = puVar11;\n                puVar11 = puVar11 >> 8;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar9; puVar9 = puVar9 + -4) {\n                *puVar7 = puVar11 & 0xf | 0xf0;\n                puVar11 = puVar11 >> 4;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        puVar3 = puVar3 + -puVar6;\n    }\n    puVar6 = puVar9;\n    if (puVar3 != NULL) {\n        puVar11 = puVar11 | (puVar12 & (1 << (puVar3 & 0x3f) & -(puVar3 < 0x40)) - 1) << (puVar9 & 0x3f) &\n                            -(puVar9 < 0x40);\n        puVar6 = puVar9 + puVar3;\n    }\n    goto code_r0x00412454;\n}\n",
        "token_count": 2901
    },
    "004129a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004129a0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x412a80);\n    fcn.00459d60();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x789c60;\n    }\n    if (*0x789638 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040c140();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 246
    },
    "00412c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412c20(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 0x88) {\n                iVar3 = *(in_RAX + 0x28 + uVar4 * 8);\n                if (*(iVar3 + 0x38) == *(iVar3 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x10) = uVar4;\n                    if (iVar3 == 0x789c60) {\ncode_r0x00412cb7:\n                        *(*0x20 + -0x50) = 0x412ccf;\n                        iVar3 = fcn.00413420();\n                        if (iVar3 != 0) {\n                            if (*(iVar3 + 0x38) != *(iVar3 + 0x60)) {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(iVar3 + 0x58) = *0x75b9a8 + 3;\n                                *(*0x20 + -0x50) = 0x412d07;\n                                iVar3 = fcn.0042a900();\n                                uVar2 = *(*0x20 + 0x10);\n                                uVar4 = uVar2 >> 1;\n                                if (uVar4 < 0x44) {\n                                    piVar1 = iVar3 + uVar4 * 8 + 0x48;\n                                    LOCK();\n                                    *piVar1 = *piVar1 + (*(*(*0x20 + -0x20) + 0x38) - *(*(*0x20 + -0x20) + 0x60));\n                                    if (uVar2 == 5) {\n                                        iVar5 = *(*0x20 + 8);\n                                        LOCK();\n                                        *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar5 + 0x20);\n                                        *(iVar5 + 0x20) = 0;\n                                    }\n                                    *(*0x20 + -0x50) = 0x412d6f;\n                                    fcn.0042aa00();\n                                    iVar3 = *(*0x20 + -0x20);\n                                    LOCK();\n                                    *0x789e70 = *0x789e70 +\n                                                (*(iVar3 + 0x20) * 0x2000 - *(iVar3 + 0x60) * *(iVar3 + 0x68));\n                                    iVar5 = *(*0x20 + 8);\n                                    LOCK();\n                                    *0x789e78 = *0x789e78 + *(iVar5 + 8);\n                                    *(iVar5 + 8) = 0;\n                                    if (*0x73b7b0 != '\\0') {\n                                        *(*0x20 + -0x18) = 0;\n                                        *(*0x20 + -0x18) = *0x789e70;\n                                        *(*0x20 + -0x50) = 0x412df1;\n                                        fcn.0044e500(*0x20 + -0x18);\n                                        iVar3 = *(*0x20 + -0x20);\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    if (*0x7895e8 != 0) {\n                                        *(*0x20 + -0x50) = 0x412e10;\n                                        fcn.0041bf80();\n                                        iVar3 = *(*0x20 + -0x20);\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    *(iVar5 + 0x28 + *(*0x20 + -0x10) * 8) = iVar3;\n                                    return;\n                                }\n                                *(*0x20 + -0x50) = 0x412e3b;\n                                fcn.0045c5a0(0x44);\n                            }\n                            *(*0x20 + -0x50) = 0x412e4c;\n                            fcn.004320e0();\n                        }\n                        *(*0x20 + -0x50) = 0x412e5d;\n                        fcn.004320e0();\n                    }\n                    else if (*(iVar3 + 0x58) == *0x75b9a8 + 3) {\n                        *(*0x20 + -0x50) = 0x412cb2;\n                        fcn.00413b20();\n                        goto code_r0x00412cb7;\n                    }\n                    *(*0x20 + -0x50) = 0x412e6e;\n                    fcn.004320e0();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x50) = 0x412e7f;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x50) = 0x412e8c;\n            in_RAX = fcn.0045c5a0(0x88);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x412e9b;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1372
    },
    "00412ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00412ec0(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x29) = param_1;\n                *(*0x20 + 0x19) = unaff_DIL;\n                uVar5 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar5 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x18) = uVar5 << 0xd;\n                *(*0x20 + -0x60) = 0x412f26;\n                fcn.00420680();\n                param_1 = *(*0x20 + 0x19);\n                *(*0x20 + -0x2a) = param_1;\n                uVar2 = *(*0x20 + -0x20);\n                unaff_DIL = *(*0x20 + -0x29);\n                *(*0x20 + -0x60) = 0x412f49;\n                iVar3 = fcn.00422440();\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x28) = iVar3;\n                    *(*0x20 + -0x2b) = uVar2;\n                    *(*0x20 + -0x60) = 0x412f67;\n                    iVar3 = fcn.0042a900();\n                    LOCK();\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + *(*0x20 + -0x18);\n                    LOCK();\n                    piVar1 = iVar3 + 0x40;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x60) = 0x412f89;\n                    fcn.0042aa00(iVar3);\n                    LOCK();\n                    *0x789e70 = *0x789e70 + *(*0x20 + -0x18);\n                    if (*0x73b7b0 != '\\0') {\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x10) = *0x789e70;\n                        unaff_DIL = 1;\n                        *(*0x20 + -0x60) = 0x412fd7;\n                        fcn.0044e500(*0x20 + -0x10);\n                    }\n                    if (*0x7895e8 != 0) {\n                        *(*0x20 + -0x60) = 0x412fee;\n                        fcn.0041bf80();\n                    }\n                    if (*(*0x20 + -0x2a) < 0x88) {\n                        *(*0x20 + -0x60) = 0x413033;\n                        fcn.0042a2a0(*(*0x20 + -0x2a) * 0xc0 + 0x75bd18, (*0x75b9a8 >> 1 & 1) * 5);\n                        iVar3 = *(*0x20 + -0x28);\n                        *(iVar3 + 0x70) = *(iVar3 + 0x18) + *(*0x20 + 0x10);\n                        uVar5 = *(iVar3 + 0x18) + 0x800000000000;\n                        uVar4 = uVar5 >> 0x2a;\n                        if (uVar4 < 0x40) {\n                            uVar5 = uVar5 >> 0x16;\n                            if (*(*(uVar4 * 8 + 0x75ba18) + (uVar5 & 0xfffff) * 8) == 0) {\n                                uVar5 = 0;\n                            }\n                            *(*0x20 + -0x60) = 0x4130cd;\n                            fcn.00410fe0(uVar5 & 0xffffffff);\n                            return *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x60) = 0x4130eb;\n                        fcn.0045c5c0(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x60) = 0x4130f5;\n                    fcn.0045c5a0(0x88);\n                }\n                *(*0x20 + -0x60) = 0x413106;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x60) = 0x413117;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        puVar6[0x19] = unaff_DIL;\n        *(puVar6 + -8) = 0x413130;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        unaff_DIL = puVar6[0x19];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1432
    },
    "00413160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413160(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00413160:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        LOCK();\n        *0x789e78 = *0x789e78 + *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x2c) = *0x75b9a8;\n        iVar2 = 0;\n        uVar4 = *0x75b9a8;\n        do {\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x48) = 0x4132c5;\n                iVar3 = fcn.0042a900(uVar4);\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x48) = 0x4132e8;\n                fcn.0042aa00(iVar2, iVar3);\n                if (*0x7895e8 != 0) {\n                    *(*0x20 + -0x48) = 0x4132fd;\n                    fcn.0041bf80();\n                }\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x789c60) {\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x10) = *(iVar3 + 0x38);\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x48) = 0x4131ed;\n                iVar2 = fcn.0042a900();\n                uVar5 = *(*0x20 + -0x20) >> 1 & 0x7f;\n                if (0x43 < uVar5) goto code_r0x00413307;\n                piVar1 = iVar2 + uVar5 * 8 + 0x48;\n                LOCK();\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x10));\n                *(*0x20 + -0x48) = 0x413230;\n                fcn.0042aa00();\n                if (*(*(*0x20 + -0x28) + 0x58) != *(*0x20 + -0x2c) + 1) {\n                    LOCK();\n                    *0x789e70 = *0x789e70 + (*(*0x20 + -0x18) - *(*0x20 + -0x10)) * *(*(*0x20 + -0x28) + 0x68);\n                }\n                *(*0x20 + -0x48) = 0x413285;\n                fcn.00413b20(*(*0x20 + -0x20), *(*0x20 + -0x20) * 0xc0);\n                iVar2 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x789c60;\n                uVar4 = *(*0x20 + -0x2c);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00413315;\ncode_r0x00413307:\n    *(*0x20 + -0x48) = 0x413314;\n    in_RAX = fcn.0045c5a0(0x44);\ncode_r0x00413315:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x41331f;\n    fcn.00459ea0();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x00413160;\n}\n",
        "token_count": 1145
    },
    "00413420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00413420(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t *in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    \ncode_r0x00413420:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*in_RAX >> 1 < 0x44) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = 0x413466;\n            fcn.00420680();\n            if (*0x73b7b0 != '\\0') {\n                *(*0x20 + -0x78) = 0x413474;\n                fcn.0044f440();\n            }\n            *(*0x20 + -0x50) = *0x75b9a8;\n            *(*0x20 + -0x4c) = 0;\n            *(*0x20 + -0x5c) = *(*0x20 + -0x50) >> 1 & 1;\n            *(*0x20 + -0x10) = (*(*0x20 + -0x50) >> 1 & 1) * 5;\n            *(*0x20 + -0x78) = 0x4134ab;\n            iVar1 = fcn.0042a440();\n            if (iVar1 != 0) {\n                cVar2 = '\\0';\n                goto code_r0x004134c7;\n            }\n            iVar4 = *(*0x20 + -0x5c);\n            iVar1 = 100;\n            do {\n                if (iVar1 < 0) {\ncode_r0x00413760:\n                    while (-1 < iVar1) {\n                        if (1 < -(iVar4 + -1)) {\n                            *(*0x20 + -0x78) = 0x413ae7;\n                            fcn.0045c5a0(2);\n                            goto code_r0x00413ae7;\n                        }\n                        *(*0x20 + -0x58) = iVar1;\n                        *(*0x20 + -0x78) = 0x413791;\n                        iVar1 = fcn.0042a440();\n                        if (iVar1 == 0) break;\n                        if (*(iVar1 + 0x58) == *(*0x20 + -0x50) + -2) {\n                            if (*(*0x20 + -0x4c) == '\\0') {\n                                LOCK();\n                                *0x75b9b0 = *0x75b9b0 + 1;\n                                *(*0x20 + -0x4c) = 1;\n                            }\n                            LOCK();\n                            if (*(*0x20 + -0x50) + -2 == *(iVar1 + 0x58)) {\n                                *(iVar1 + 0x58) = *(*0x20 + -0x50) + -1;\n                                uVar3 = 1;\n                                iVar5 = iVar1;\n                            }\n                            else {\n                                uVar3 = 0;\n                                iVar5 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 0;\n                            iVar5 = 0;\n                        }\n                        *(*0x20 + -0x48) = iVar5;\n                        if (uVar3 != '\\0') {\n                            *(*0x20 + -0x38) = iVar1;\n                            *(*0x20 + -0x78) = 0x41381c;\n                            fcn.0041f7c0();\n                            *(*0x20 + -0x78) = 0x413826;\n                            iVar1 = fcn.0040fe60(uVar3, iVar5, param_3, param_4);\n                            if (*(*(*0x20 + -0x48) + 0x38) != iVar1) {\n                                *(*(*0x20 + -0x48) + 0x30) = iVar1;\n                                if (*(*0x20 + -0x4c) != '\\0') {\n                                    *(*0x20 + -0x4c) = 0;\n                                    LOCK();\n                                    iVar4 = *0x75b9b0 + -1;\n                                    bVar8 = *0x75b9b0 == 1;\n                                    *0x75b9b0 = iVar4;\n                                    if ((bVar8 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                                        *(*0x20 + -0x18) = *0x789e70;\n                                        *(*0x20 + -0x20) = *0x75b9f0;\n                                        *(*0x20 + -0x28) = *0x75b9e0;\n                                        *(*0x20 + -0x30) = *0x75b9f8;\n                                        *(*0x20 + -0x78) = 0x4138d4;\n                                        uVar6 = *0x75b9e0;\n                                        fcn.00433860();\n                                        *(*0x20 + -0x78) = 0x4138e5;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x78) = 0x4138f3;\n                                        fcn.00433e60();\n                                        *(*0x20 + -0x78) = 0x413905;\n                                        fcn.00434160();\n                                        uVar3 = *(*0x20 + -0x20);\n                                        *(*0x20 + -0x78) = 0x41391b;\n                                        fcn.00433e60();\n                                        *(*0x20 + -0x78) = 0x41392c;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x78) = 0x413936;\n                                        fcn.00433e60();\n                                        *(*0x20 + -0x78) = 0x413947;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x78) = 0x413952;\n                                        fcn.00433b60(uVar3, uVar6);\n                                        *(*0x20 + -0x78) = 0x413965;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x78) = 0x41396a;\n                                        fcn.004338e0();\n                                    }\n                                }\n                                cVar2 = '\\0';\n                                iVar1 = *(*0x20 + -0x38);\n                                goto code_r0x004134c7;\n                            }\n                            *(*0x20 + -0x78) = 0x413848;\n                            fcn.0042a2a0(*(*0x20 + -0x10));\n                        }\n                        iVar4 = *(*0x20 + -0x5c);\n                        iVar1 = *(*0x20 + -0x58) + -1;\n                    }\n                    if (*(*0x20 + -0x4c) != '\\0') {\n                        *(*0x20 + -0x4c) = 0;\n                        LOCK();\n                        iVar4 = *0x75b9b0 + -1;\n                        bVar8 = *0x75b9b0 == 1;\n                        *0x75b9b0 = iVar4;\n                        if ((bVar8 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                            *(*0x20 + -0x18) = *0x789e70;\n                            *(*0x20 + -0x20) = *0x75b9f0;\n                            *(*0x20 + -0x28) = *0x75b9e0;\n                            *(*0x20 + -0x30) = *0x75b9f8;\n                            *(*0x20 + -0x78) = 0x413a05;\n                            uVar6 = *0x75b9e0;\n                            fcn.00433860();\n                            *(*0x20 + -0x78) = 0x413a16;\n                            fcn.00434160();\n                            *(*0x20 + -0x78) = 0x413a25;\n                            fcn.00433e60();\n                            *(*0x20 + -0x78) = 0x413a36;\n                            fcn.00434160();\n                            uVar3 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x78) = 0x413a4c;\n                            fcn.00433e60();\n                            *(*0x20 + -0x78) = 0x413a5d;\n                            fcn.00434160();\n                            *(*0x20 + -0x78) = 0x413a67;\n                            fcn.00433e60();\n                            *(*0x20 + -0x78) = 0x413a78;\n                            fcn.00434160();\n                            *(*0x20 + -0x78) = 0x413a85;\n                            fcn.00433b60(uVar3, uVar6);\n                            *(*0x20 + -0x78) = 0x413a96;\n                            fcn.00434160();\n                            *(*0x20 + -0x78) = 0x413a9b;\n                            fcn.004338e0();\n                        }\n                    }\n                    *(*0x20 + -0x5d) = *0x73b7b0;\n                    if (*0x73b7b0 != '\\0') {\n                        *(*0x20 + -0x78) = 0x413ab4;\n                        fcn.0044f540();\n                    }\n                    *(*0x20 + -0x78) = 0x413abe;\n                    iVar1 = fcn.00413c20();\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    cVar2 = *(*0x20 + -0x5d);\ncode_r0x004134c7:\n                    *(*0x20 + -0x38) = iVar1;\n                    if ((*0x73b7b0 != '\\0') && (cVar2 == '\\0')) {\n                        *(*0x20 + -0x78) = 0x4134de;\n                        fcn.0044f540();\n                        iVar1 = *(*0x20 + -0x38);\n                    }\n                    if ((*(iVar1 + 0x38) != *(iVar1 + 0x60)) && (*(iVar1 + 0x30) != *(iVar1 + 0x38))) {\n                        *(*0x20 + -0x78) = 0x413506;\n                        fcn.0040fe40();\n                        iVar1 = *(*0x20 + -0x38);\n                        *(iVar1 + 0x40) = *(iVar1 + 0x40) >> (*(iVar1 + 0x30) & 0x3f);\n                        return iVar1;\n                    }\n                    *(*0x20 + -0x78) = 0x41353b;\n                    fcn.004320e0();\n                }\n                else {\n                    if (1 < -(iVar4 + -1)) goto code_r0x00413ae7;\n                    *(*0x20 + -0x58) = iVar1;\n                    *(*0x20 + -0x78) = 0x413585;\n                    iVar1 = fcn.0042a440();\n                    if (iVar1 == 0) {\n                        iVar1 = *(*0x20 + -0x58);\n                        iVar4 = *(*0x20 + -0x5c);\n                        goto code_r0x00413760;\n                    }\n                    if (*(iVar1 + 0x58) == *(*0x20 + -0x50) + -2) {\n                        if (*(*0x20 + -0x4c) == '\\0') {\n                            LOCK();\n                            *0x75b9b0 = *0x75b9b0 + 1;\n                            *(*0x20 + -0x4c) = 1;\n                        }\n                        LOCK();\n                        if (*(*0x20 + -0x50) + -2 == *(iVar1 + 0x58)) {\n                            *(iVar1 + 0x58) = *(*0x20 + -0x50) + -1;\n                            bVar8 = true;\n                            iVar5 = iVar1;\n                        }\n                        else {\n                            bVar8 = false;\n                            iVar5 = 0;\n                        }\n                    }\n                    else {\n                        bVar8 = false;\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0x40) = iVar5;\n                    if (bVar8) {\n                        *(*0x20 + -0x38) = iVar1;\n                        *(*0x20 + -0x78) = 0x41360e;\n                        fcn.0041f7c0();\n                        if (*(*0x20 + -0x4c) != '\\0') {\n                            *(*0x20 + -0x4c) = 0;\n                            LOCK();\n                            iVar4 = *0x75b9b0 + -1;\n                            bVar8 = *0x75b9b0 == 1;\n                            *0x75b9b0 = iVar4;\n                            if ((bVar8 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                                *(*0x20 + -0x18) = *0x789e70;\n                                *(*0x20 + -0x20) = *0x75b9f0;\n                                *(*0x20 + -0x28) = *0x75b9e0;\n                                *(*0x20 + -0x30) = *0x75b9f8;\n                                *(*0x20 + -0x78) = 0x413691;\n                                uVar6 = *0x75b9e0;\n                                fcn.00433860();\n                                *(*0x20 + -0x78) = 0x4136a5;\n                                fcn.00434160();\n                                *(*0x20 + -0x78) = 0x4136b3;\n                                fcn.00433e60();\n                                *(*0x20 + -0x78) = 0x4136c5;\n                                fcn.00434160();\n                                uVar3 = *(*0x20 + -0x20);\n                                *(*0x20 + -0x78) = 0x4136db;\n                                fcn.00433e60();\n                                *(*0x20 + -0x78) = 0x4136ec;\n                                fcn.00434160();\n                                *(*0x20 + -0x78) = 0x4136f6;\n                                fcn.00433e60();\n                                *(*0x20 + -0x78) = 0x413707;\n                                fcn.00434160();\n                                *(*0x20 + -0x78) = 0x413712;\n                                fcn.00433b60(uVar3, uVar6);\n                                *(*0x20 + -0x78) = 0x413725;\n                                fcn.00434160();\n                                *(*0x20 + -0x78) = 0x41372a;\n                                fcn.004338e0();\n                            }\n                        }\n                        cVar2 = '\\0';\n                        iVar1 = *(*0x20 + -0x38);\n                        goto code_r0x004134c7;\n                    }\n                }\n                iVar1 = *(*0x20 + -0x58) + -1;\n                iVar4 = *(*0x20 + -0x5c);\n            } while( true );\n        }\n        goto code_r0x00413af3;\n    }\n    goto code_r0x00413b06;\ncode_r0x00413ae7:\n    *(*0x20 + -0x78) = 0x413af3;\n    fcn.0045c5a0(2);\ncode_r0x00413af3:\n    *(*0x20 + -0x78) = 0x413b05;\n    in_RAX = fcn.0045c5a0(0x44);\ncode_r0x00413b06:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x413b10;\n    fcn.00459ea0();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00413420;\n}\n",
        "token_count": 3774
    },
    "00413b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413b20(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x75b9a8;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x75b9a8 + 1) {\n                    *(unaff_RBX + 0x58) = *0x75b9a8 - 1;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x413bc9;\n                    fcn.0041f7c0();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x75b9a8;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x413bad;\n                        fcn.0042a2a0((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x413b93;\n                        fcn.0042a2a0((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x413be5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x413bf5;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 605
    },
    "004141c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004141c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x414205;\n            fcn.0042e7a0();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x4142b0;\n                        fcn.0042e7a0();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x4142ee;\n            fcn.0045da20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x41430f;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x414325;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41432f;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x414345;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41434f;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x414354;\n            fcn.00433ac0();\n            *(*0x20 + -0x58) = 0x414359;\n            fcn.004338e0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x41436a;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41437a;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1117
    },
    "004143a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004143a0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x4143ee;\n            fcn.0042e820();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x4144a5;\n                        fcn.0042e820();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x4144f3;\n            fcn.0045da20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00414569;\n            do {\n                *(*0x20 + -0x60) = 0x414518;\n                fcn.00433860();\n                *(*0x20 + -0x60) = 0x414529;\n                fcn.00434160();\n                *(*0x20 + -0x60) = 0x414533;\n                fcn.00433e60();\n                *(*0x20 + -0x60) = 0x414545;\n                fcn.00434160();\n                *(*0x20 + -0x60) = 0x41454e;\n                fcn.00433e60();\n                *(*0x20 + -0x60) = 0x414553;\n                fcn.00433ac0();\n                *(*0x20 + -0x60) = 0x414558;\n                fcn.004338e0();\n                *(*0x20 + -0x60) = 0x414569;\n                iVar1 = fcn.004320e0();\ncode_r0x00414569:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x414575;\n            fcn.00433860();\n            *(*0x20 + -0x60) = 0x414586;\n            fcn.00434160();\n            *(*0x20 + -0x60) = 0x414590;\n            fcn.00433e60();\n            *(*0x20 + -0x60) = 0x4145a5;\n            fcn.00434160();\n            *(*0x20 + -0x60) = 0x4145ae;\n            fcn.00433e60();\n            *(*0x20 + -0x60) = 0x4145b3;\n            fcn.00433ac0();\n            *(*0x20 + -0x60) = 0x4145b8;\n            fcn.004338e0();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x4145c9;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4145d9;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1473
    },
    "00414600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414600(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iStack24;\n    \n    fcn.0042a840();\n    fcn.0042e7a0();\n    if (iStack24 != 0) {\n        return;\n    }\n    fcn.0045da20();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.004320e0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 164
    },
    "004148a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004148a0(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x004148a0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x7895f0 == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x4148ed;\n            fcn.00409e80();\n            if ((*0x7896c0 != NULL) && (*(*0x7896c0 + 2) != 0x65)) goto code_r0x0041496f;\n            if (*0x7896b0 != NULL) goto code_r0x0041494b;\n            *(*0x20 + -0x28) = 0x41491c;\n            *0x7896b0 = fcn.0040c2a0(0x78b4b8);\n            **0x7896b0 = *0x789640;\n            *0x789640 = *0x7896b0;\n            if (*0x789940 != '\\0') goto code_r0x0041494b;\n            iVar3 = 0;\n            do {\n                if (iVar3 < 0x40) {\n                    uVar2 = iVar3 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 2) * -5\n                    ;\n                    if (4 < uVar2) goto code_r0x00414aa6;\n                }\n                else {\ncode_r0x0041494b:\n                    puVar1 = *0x7896b0;\n                    puVar4 = *0x7896b0 + 1;\n                    *0x7896b0 = (*0x7896b0)[1];\n                    *puVar4 = *0x7896c0;\n                    *0x7896c0 = puVar1;\ncode_r0x0041496f:\n                    puVar4 = *0x7896c0;\n                    uVar2 = *(*0x7896c0 + 2);\n                    if (uVar2 < 0x65) {\n                        LOCK();\n                        *(*0x7896c0 + 2) = *(*0x7896c0 + 2) + 1;\n                        iVar3 = uVar2 * 5;\n                        if (*0x789810 == 0) {\n                            puVar4[uVar2 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4149d8;\n                            fcn.0045c2a0(iVar3, puVar4, puVar4 + uVar2 * 5 + 4);\n                        }\n                        puVar4[iVar3 + 5] = *(*0x20 + 0x18);\n                        if (*0x789810 == 0) {\n                            puVar4[iVar3 + 6] = *(*0x20 + 0x20);\n                            puVar4[iVar3 + 7] = *(*0x20 + 0x28);\n                            puVar4[iVar3 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x414a18;\n                            fcn.0045c200(*(*0x20 + 0x20));\n                            *(*0x20 + -0x28) = 0x414a25;\n                            fcn.0045c200(*(*0x20 + 0x28));\n                            *(*0x20 + -0x28) = 0x414a32;\n                            fcn.0045c200(*(*0x20 + 8));\n                        }\n                        *0x7895ab = 1;\n                        *(*0x20 + -0x28) = 0x414a47;\n                        fcn.0040a0a0();\n                        return;\n                    }\n                    iVar3 = 0x65;\n                    *(*0x20 + -0x28) = 0x414a5b;\n                    uVar2 = fcn.0045c5a0(0x65);\n                }\n                unaff_RSI = 0x789940;\n                *(iVar3 + 0x789940) = *(uVar2 + 0x71d190);\n                iVar3 = iVar3 + 1;\n            } while( true );\n        }\n        goto code_r0x00414ab0;\n    }\n    goto code_r0x00414ac6;\ncode_r0x00414aa6:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x414ab0;\n    fcn.0045c5a0(5);\ncode_r0x00414ab0:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x414ac5;\n    in_RAX = fcn.004320e0();\ncode_r0x00414ac6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x414ae5;\n    fcn.00459ea0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x004148a0;\n}\n",
        "token_count": 1549
    },
    "00414b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00414b20(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    if ((*0x7895aa == '\\0') || (*0x7895ab == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x7895aa = '\\0';\n        *0x7895ab = '\\0';\n        uVar1 = *0x734cd8;\n    }\n    fcn.0040a0a0();\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "00414ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414bcc)\n\nvoid fcn.00414ba0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7895dc == 0) {\n        LOCK();\n        *0x7895dc = 1;\n        fcn.0043c700();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00415080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004154c2)\n\nvoid fcn.00415080(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x789a28 != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar3 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar5 = 0;\n                        *(*0x20 + -0xd8) = 0x415118;\n                        uVar3 = fcn.00410200(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x004155bd;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x415740;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x415345;\n                                fcn.00459d60();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            uVar3 = 0x38;\n                                        }\n                                        else {\n                                            uVar3 = 0x48;\n                                        }\n                                        iVar9 = *(iVar11 + uVar3);\n                                        *(*0x20 + -0x60) = iVar9;\n                                        if (iVar9 != iVar4) {\n                                            uVar13 = *(iVar9 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x41526a;\n                                                iVar4 = fcn.00453d60();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x415285;\n                                                    iVar4 = fcn.00453d60();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x0041545b;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar3 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar3) goto code_r0x0041545b;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x0041545b;\n                                                if (*(iVar9 + 0x40) != 0) {\n                                                    uVar3 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x415248;\n                                                    iVar4 = fcn.00409ac0(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x0041545b;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar3 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        arg1_00 = uVar7 & 0xffff;\n                                        if (uVar3 <= arg1_00) {\n                                            iVar12 = 0;\n                                            for (iVar9 = 0; iVar9 < arg1_00 - uVar3; iVar9 = iVar9 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar3 << 3 & uVar3 - 0x100000 >> 0x3f) +\n                                                          iVar9 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x4153a5;\n                                            fcn.00414ba0();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x4156e0;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x415430;\n                                            fcn.00459d60();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x41545b;\n                                        fcn.0045c660(arg1_00);\ncode_r0x0041545b:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x415465;\n                                            uVar5 = fcn.00453cc0();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar3;\n                                            *(*0x20 + -0xd8) = 0x41547c;\n                                            fcn.00453cc0();\n                                            uVar3 = 0x4b3292;\n                                            *(*0x20 + -0xd8) = 0x4154af;\n                                            fcn.00448d20(0x22, uVar7, 0x4ae453, 0xe);\n                                            *(*0x20 + -0xd8) = 0x4154b4;\n                                            fcn.004320e0();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x4154ce;\n                                    uVar5 = fcn.00453cc0();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x4154e5;\n                                    fcn.00453cc0();\n                                    uVar5 = 0x4b3292;\n                                    *(*0x20 + -0xd8) = 0x415518;\n                                    fcn.00448d20(0x22, uVar7, 0x4ae453, 0xe);\n                                    *(*0x20 + -0xd8) = 0x41551d;\n                                    fcn.004320e0();\n                                }\n                                *(*0x20 + -0xd8) = 0x415525;\n                                uVar6 = fcn.00453cc0();\n                                *(*0x20 + -0x50) = uVar6;\n                                *(*0x20 + -0x70) = uVar5;\n                                *(*0x20 + -0xd8) = 0x41553c;\n                                fcn.00453cc0();\n                                *(*0x20 + -0xd0) = 0x4af17e;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x415585;\n                                fcn.00448e40(0x22, uVar7, 0x4ae453, 0xe);\n                                *(*0x20 + -0xd8) = 0x41558a;\n                                fcn.004320e0();\n                            }\n                            *(*0x20 + -0xd8) = 0x415592;\n                            fcn.00453cc0();\n                            *(*0x20 + -0xd8) = 0x4155b8;\n                            fcn.00448c40(0x29, uVar7, 0x4aea39, 0x10);\n                            *(*0x20 + -0xd8) = 0x4155bd;\n                            fcn.004320e0();\ncode_r0x004155bd:\n                            *(*0x20 + -0xd8) = 0x4155ce;\n                            iVar4 = fcn.004320e0();\n                            goto code_r0x004155ce;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x7897b8) {\n                            return;\n                        }\n                        uVar3 = 0x7897b8;\n                        for (iVar4 = 0x722f80; iVar4 != 0; iVar4 = *(iVar4 + 0x210)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x004155ce:\n                            uVar3 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x415653;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0xd8) = 0x415665;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0xd8) = 0x41566a;\n                unaff_RDI = fcn.00453cc0();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x415690;\n                fcn.00448c40(0x28, uVar3, 0x4ae1f8, 0xd);\n                *(*0x20 + -0xd8) = 0x415695;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x4156a6;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x4156c5;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3476
    },
    "00415780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00415780(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x4157d6;\n                        fcn.0045cc20();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x415805;\n                    uVar3 = fcn.0040c2a0(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = 0x4000;\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x415836;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x415866;\n            fcn.00433860();\n            *(*0x20 + -0x38) = 0x415877;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x41587c;\n            fcn.004338e0();\n            *(*0x20 + -0x38) = 0x41588d;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x415898;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 823
    },
    "00415920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415920(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = fcn.00404440();\n    if (*0x789810 != 0) {\n        fcn.0045c100(param_1, param_2, param_3, param_4);\n        uVar1 = *0x734ce0;\n    }\n    *0x734ce0 = uVar1;\n    fcn.0043c700();\n    fcn.0043c700();\n    fcn.00405360();\n    fcn.00405360();\n    if (*0x789810 == 0) {\n        *0x734ce0 = 0;\n    }\n    else {\n        fcn.0045c100(param_1, param_2, param_3, param_4);\n    }\n    *0x78c4e8 = 1;\n    return;\n}\n",
        "token_count": 272
    },
    "00415ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415f92)\n// WARNING: Removing unreachable block (ram,0x00415fab)\n\nvoid fcn.00415ac0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x38) = unaff_RBX;\n            while( true ) {\n                if (((*0x78c4e8 == '\\0') || (*0x78960c != 0)) || (*0x7895f0 != 0)) {\n                    bVar7 = false;\n                }\n                else if (in_RAX == 0) {\n                    bVar7 = *0x789e58 <= *0x789e70;\n                }\n                else if (in_RAX == 1) {\n                    if (*0x789e40 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x78cb58 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x71d278 < unaff_RBX - *0x78cb58;\n                    }\n                }\n                else if (in_RAX == 2) {\n                    bVar7 = 0 < arg1 - *0x78a180;\n                }\n                else {\n                    bVar7 = true;\n                }\n                if (bVar7) {\n                    *(*0x20 + -0x80) = 0x415c3a;\n                    iVar5 = fcn.0041f0c0();\n                    bVar7 = iVar5 != -1;\n                    arg1._0_4_ = *(*0x20 + -0x4c);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    in_RAX = *(*0x20 + -0x30);\n                }\n                else {\n                    bVar7 = false;\n                }\n                if (!bVar7) break;\n                *0x735894 = *0x735894 + 1;\n            }\n            *(*0x20 + -0x80) = 0x415c6c;\n            fcn.004435c0(0);\n            if (((*0x78c4e8 == '\\0') || (*0x78960c != 0)) || (*0x7895f0 != 0)) {\n                iVar5 = *(*0x20 + -0x30);\n                bVar7 = false;\n            }\n            else {\n                iVar5 = *(*0x20 + -0x30);\n                if (iVar5 == 0) {\n                    bVar7 = *0x789e58 <= *0x789e70;\n                }\n                else if (iVar5 == 1) {\n                    if (*0x789e40 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x78cb58 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x71d278 < *(*0x20 + -0x38) - *0x78cb58;\n                    }\n                }\n                else if (iVar5 == 2) {\n                    bVar7 = 0 < *(*0x20 + -0x4c) - *0x78a180;\n                }\n                else {\n                    bVar7 = true;\n                }\n            }\n            if (!bVar7) {\n                *(*0x20 + -0x80) = 0x415dde;\n                fcn.00443900(0);\n                return;\n            }\n            *0x78a140 = iVar5 == 2;\n            if (*0x7899f8 == 1) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n                if (*0x7899f8 == 2) {\n                    uVar4 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x80) = 0x415d65;\n            fcn.004435c0(0);\n            *(*0x20 + -0x80) = 0x415d78;\n            fcn.004435c0(0);\n            if (*0x73b7b0 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x73b7e0;\n                *(*0x20 + -0x80) = 0x415db4;\n                fcn.0044e500(*0x20 + -0x28);\n                *0x73b7e0 = *0x73b7e0 + 1;\n            }\n            iVar5 = 0;\n            while( true ) {\n                if (*0x735738 <= iVar5) {\n                    *(*0x20 + -0x80) = 0x415e12;\n                    fcn.004173e0();\n                    *(*0x20 + -0x78) = 0x69e420;\n                    *(*0x20 + -0x80) = 0x415e25;\n                    fcn.00459d60();\n                    *0x78a184 = *0x7895f4;\n                    *0x78a188 = *0x7895f4;\n                    if (*0x7895f8 < *0x7895f4) {\n                        *0x78a184 = *0x7895f8;\n                    }\n                    *0x78a1c0 = *0x789e70;\n                    *0x78a1b0 = 0;\n                    *0x78a138 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x80) = 0x415e85;\n                    fcn.0045de80();\n                    *0x78a190 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x48) = *0x78a190;\n                    *0x78a1b8 = *0x78a190;\n                    if (*0x73b7b0 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x80) = 0x415eea;\n                        fcn.0044e500(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x78) = 0x69e580;\n                    *(*0x20 + -0x80) = 0x415efa;\n                    fcn.00459d60();\n                    *(*0x20 + -0x78) = 0x69e428;\n                    *(*0x20 + -0x80) = 0x415f1e;\n                    fcn.00459d60();\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x415f37;\n                    fcn.00418240();\n                    *0x78a180 = *0x78a180 + 1;\n                    *(*0x20 + -0x80) = 0x415f49;\n                    fcn.0041bce0();\n                    *0x78a1d8 = *0x789e60;\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x80) = 0x415f6c;\n                        fcn.0043fac0();\n                    }\n                    *0x7895f0 = 1;\n                    *0x789814 = 1;\n                    *0x789810 = 1;\n                    *0x78a0d0 = 0xffffffff;\n                    *0x78a0e0 = 0xffffffff;\n                    *(*0x20 + -0x80) = 0x415fd2;\n                    fcn.004185a0();\n                    *(*0x20 + -0x80) = 0x415fd7;\n                    fcn.0041bba0();\n                    *0x7895e8 = 1;\n                    *0x789eb8 = *(*0x20 + -0x48);\n                    piVar1 = *(iVar5 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar5 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar11, CONCAT48(uVar10, CONCAT44(uVar9, uVar8)));\n                    *(*0x20 + -0x18) = 0x416180;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x78) = *0x20 + -0x18;\n                    *(*0x20 + -0x80) = 0x41602f;\n                    fcn.00459d60();\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x416054;\n                    fcn.00443900(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar7 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar7) {\n                        *(*0x20 + -0x80) = 0x4160ab;\n                        fcn.00459ce0();\n                    }\n                    *(*0x20 + -0x80) = 0x4160bc;\n                    fcn.00443900(0);\n                    return;\n                }\n                piVar1 = *(*0x735730 + iVar5 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x75b9a8) break;\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x75b9a8;\n            *(*0x20 + -0x38) = *piVar1;\n            *(*0x20 + -0x80) = 0x4160db;\n            iVar5 = *0x735738;\n            fcn.00433860();\n            arg1._0_4_ = iVar5;\n            *(*0x20 + -0x80) = 0x4160ec;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x4160f6;\n            fcn.00433f60();\n            *(*0x20 + -0x80) = 0x416107;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x416112;\n            fcn.00433e60();\n            *(*0x20 + -0x80) = 0x416125;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x41612e;\n            fcn.00433e60();\n            *(*0x20 + -0x80) = 0x416133;\n            fcn.00433ac0();\n            *(*0x20 + -0x80) = 0x416138;\n            fcn.004338e0();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x80) = 0x416149;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x41615d;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_4_ = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3353
    },
    "004162c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004162c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack33;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004435c0(0);\n    while ((*0x7895f0 == 1 && (*0x78a0d0 == *0x78a0e0))) {\n        if (*0x78a040 == 0) {\n            if (*0x78a0c8 < *0x78a0cc) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.004435c0(0);\n        *0x7895ec = 0;\n        fcn.00459d60();\n        if (*0x7895ec == 0) {\n            fcn.0045de80();\n            *0x78a1a0 = 0x69e3e8;\n            *0x78a1b8 = 0x69e3e8;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x789810 == 0) {\n                arg2 = 0x4acdee;\n                *(iVar1 + 200) = 0x4acdee;\n            }\n            else {\n                arg2 = 0x4acdee;\n                fcn.0045c220(arg1, 0x4acdee, param_3, param_4);\n            }\n            if (*0x73b7b0 != '\\0') {\n                uStack32 = 0;\n                fcn.0044e500(&uStack32);\n            }\n            fcn.00459d60();\n            cStack33 = '\\0';\n            auStack24 = CONCAT88(&cStack33, 0x4165c0);\n            arg1_00 = auStack24;\n            fcn.00459d60();\n            if (cStack33 == '\\0') {\n                *0x7895e8 = 0;\n                fcn.00419860();\n                fcn.00443900(0);\n                fcn.0043fac0();\n                fcn.0041c080();\n                fcn.00416680();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x789810 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045c100(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.00459d60();\n            fcn.00443900(0);\n        }\n        else {\n            fcn.00443900(0);\n        }\n    }\n    fcn.00443900(0);\n    return;\n}\n",
        "token_count": 794
    },
    "00417a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417a80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x789a20) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x98) = 0x417abc;\n                fcn.00429400();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x7895f0 == 2) {\n                *(*0x20 + -0x28) = *0x78a040;\n                *0x78a0d8 = in_RAX;\n                if ((*0x78a040 == 0) && (*0x78a0cc <= *0x78a0c8)) {\n                    if (0 < *0x7899ec) {\n                        *(*0x20 + -0x98) = 0x417b1b;\n                        fcn.00418760();\n                    }\n                    if (*0x78a040 == 0) {\n                        *(*0x20 + -0x10) = *0x735730;\n                        *(*0x20 + -0x30) = *0x735738;\n                        iVar3 = 0;\n                        iVar4 = *0x735730;\n                        iVar6 = *0x735738;\n                        while( true ) {\n                            iVar2 = *0x735738;\n                            iVar1 = *0x735730;\n                            if (iVar6 <= iVar3) {\n                                *0x789e80 = *0x78a0c0;\n                                for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n                                    iVar4 = *(*(iVar1 + iVar3 * 8) + 0x40);\n                                    if (iVar4 != 0) {\n                                        *(iVar4 + 8) = 0;\n                                    }\n                                }\n                                *0x789e70 = *0x78a0c0;\n                                *0x789e78 = *0x789e88;\n                                if (*0x73b7b0 != '\\0') {\n                                    *(*0x20 + -0x20) = 0;\n                                    *(*0x20 + -0x20) = *0x78a0c0;\n                                    *(*0x20 + -0x98) = 0x417c7d;\n                                    fcn.0044e500(*0x20 + -0x20);\n                                }\n                                return;\n                            }\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x7899ec < 1) {\n                                *(*0x20 + -0x98) = 0x417b9e;\n                                fcn.0042aac0();\n                            }\n                            else {\n                                *(*0x20 + -0x98) = 0x417b8e;\n                                fcn.0042ac00();\n                            }\n                            iVar3 = *(*(*0x20 + -0x18) + 0x1698);\n                            if ((iVar3 != 0) &&\n                               ((*(iVar3 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x16a0) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x98) = 0x417b54;\n                            fcn.00420c40();\n                            iVar3 = *(*0x20 + -0x38) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar6 = *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x98) = 0x417c92;\n                        fcn.00433860();\n                        *(*0x20 + -0x40) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x61) = *(*(*0x20 + -0x18) + 0x5ae);\n                        *(*0x20 + -0x98) = 0x417caf;\n                        fcn.00433860();\n                        *(*0x20 + -0x98) = 0x417cc5;\n                        fcn.00434160();\n                        *(*0x20 + -0x98) = 0x417ccf;\n                        fcn.00433f60();\n                        *(*0x20 + -0x98) = 0x417ce5;\n                        fcn.00434160();\n                        *(*0x20 + -0x98) = 0x417cef;\n                        fcn.00433b00();\n                        *(*0x20 + -0x98) = 0x417cf4;\n                        fcn.004338e0();\n                        if (*(*(*0x20 + -0x18) + 0x1698) == 0) {\n                            *(*0x20 + -0x98) = 0x417dc5;\n                            fcn.00433860();\n                            *(*0x20 + -0x98) = 0x417dd6;\n                            fcn.00434160();\n                            *(*0x20 + -0x98) = 0x417ddb;\n                            fcn.004338e0();\n                        }\n                        else {\n                            *(*0x20 + -0x30) = *(*(*(*0x20 + -0x18) + 0x1698) + 0x10);\n                            *(*0x20 + -0x98) = 0x417d17;\n                            fcn.00433860();\n                            *(*0x20 + -0x98) = 0x417d28;\n                            fcn.00434160();\n                            *(*0x20 + -0x98) = 0x417d32;\n                            fcn.00433f60();\n                            *(*0x20 + -0x98) = 0x417d37;\n                            fcn.004338e0();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x16a0) == 0) goto code_r0x00417da0;\n                        *(*0x20 + -0x30) = *(*(*(*0x20 + -0x18) + 0x16a0) + 0x10);\n                        *(*0x20 + -0x98) = 0x417d56;\n                        fcn.00433860();\n                        *(*0x20 + -0x98) = 0x417d67;\n                        fcn.00434160();\n                        *(*0x20 + -0x98) = 0x417d71;\n                        fcn.00433f60();\n                        *(*0x20 + -0x98) = 0x417d76;\n                        fcn.004338e0();\n                        do {\n                            *(*0x20 + -0x98) = 0x417d7b;\n                            fcn.00433860();\n                            *(*0x20 + -0x98) = 0x417d85;\n                            fcn.00433ac0();\n                            *(*0x20 + -0x98) = 0x417d8a;\n                            fcn.004338e0();\n                            *(*0x20 + -0x98) = 0x417d9b;\n                            fcn.004320e0();\ncode_r0x00417da0:\n                            *(*0x20 + -0x98) = 0x417da5;\n                            fcn.00433860();\n                            *(*0x20 + -0x98) = 0x417db6;\n                            fcn.00434160();\n                            *(*0x20 + -0x98) = 0x417dbb;\n                            fcn.004338e0();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x98) = 0x417df6;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x48) = *0x78a0c8;\n                *(*0x20 + -0x50) = *0x78a0cc;\n                *(*0x20 + -0x30) = *0x78a0e8;\n                *(*0x20 + -0x38) = *0x78a0f0;\n                *(*0x20 + -0x58) = *0x78a0f8;\n                *(*0x20 + -0x60) = *0x78a100;\n                *(*0x20 + -0x98) = 0x417e45;\n                fcn.00433860();\n                *(*0x20 + -0x98) = 0x417e56;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417e65;\n                fcn.00433fc0();\n                *(*0x20 + -0x98) = 0x417e76;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417e85;\n                fcn.00433e60();\n                *(*0x20 + -0x98) = 0x417e96;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417ea5;\n                fcn.00433e60();\n                *(*0x20 + -0x98) = 0x417eb6;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417ec5;\n                fcn.00433f60();\n                *(*0x20 + -0x98) = 0x417ed6;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417ee5;\n                fcn.00433f60();\n                *(*0x20 + -0x98) = 0x417ef6;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417f05;\n                fcn.00433f60();\n                *(*0x20 + -0x98) = 0x417f16;\n                fcn.00434160();\n                *(*0x20 + -0x98) = 0x417f25;\n                fcn.00433f60();\n                *(*0x20 + -0x98) = 0x417f2a;\n                fcn.00433ac0();\n                *(*0x20 + -0x98) = 0x417f2f;\n                fcn.004338e0();\n                *(*0x20 + -0x98) = 0x417f45;\n                fcn.00431940();\n            }\n            *(*0x20 + -0x98) = 0x417f56;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x417f65;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2630
    },
    "00417f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417f80(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7895f0 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x417fb9;\n                fcn.00409e80();\n                *0x75b9a8 = *0x75b9a8 + 2;\n                *0x75b9ac = 0;\n                *0x75b9e0 = 0;\n                *0x75bc80 = *0x75bc68;\n                *0x75bc88 = *0x75bc70;\n                if (*0x789810 == 0) {\n                    *0x75bc78 = *0x75bc60;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x418017;\n                    fcn.0045c200();\n                }\n                *(*0x20 + -0x28) = 0x41802d;\n                *0x75ba08 = in_XMM15;\n                fcn.0040a0a0();\n                *0x73589c = 0;\n                if (*(*0x20 + 8) == 2) {\n                    *(*0x20 + -0x28) = 0x418054;\n                    fcn.00409e80();\n                    *0x75b9f8 = 0;\n                    *(*0x20 + -0x28) = 0x41806d;\n                    fcn.0040a0a0();\n                    while( true ) {\n                        *(*0x20 + -0x28) = 0x4180c8;\n                        iVar2 = fcn.0041f0c0();\n                        if (iVar2 == -1) break;\n                        *0x735898 = *0x735898 + 1;\n                    }\n                    *(*0x20 + -0x28) = 0x4180d3;\n                    fcn.00421360();\n                    do {\n                        *(*0x20 + -0x28) = 0x4180da;\n                        cVar1 = fcn.00421460();\n                    } while (cVar1 != '\\0');\n                    *(*0x20 + -0x28) = 0x4180e5;\n                    fcn.00428840();\n                    *(*0x20 + -0x28) = 0x4180ea;\n                    fcn.004288c0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41807d;\n                fcn.00409e80();\n                if (*0x735890 != '\\0') {\n                    *0x735890 = '\\0';\n                    *(*0x20 + -0x28) = 0x4180a5;\n                    fcn.00435c40(1);\n                }\n                *(*0x20 + -0x28) = 0x4180b3;\n                fcn.0040a0a0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x418105;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x418110;\n        fcn.0045e5a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 918
    },
    "00418240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418240(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x734d00 != NULL) {\n        (***0x734d00)();\n    }\n    fcn.00409e80();\n    iVar2 = *0x7361a0;\n    while (iVar2 != 0) {\n        iVar3 = *(iVar2 + 8);\n        if (*0x789810 == 0) {\n            *(iVar2 + 8) = 0;\n            iVar2 = iVar3;\n        }\n        else {\n            iVar2 = iVar3;\n            fcn.0045c200(0);\n        }\n    }\n    if (*0x789810 == 0) {\n        *0x7361a0 = 0;\n    }\n    else {\n        fcn.0045c200(0);\n    }\n    fcn.0040a0a0();\n    fcn.00409e80();\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        arg1 = 0x7361b0;\n        iVar3 = *(iVar2 * 8 + 0x7361b0);\n        while (iVar3 != 0) {\n            iVar1 = *(iVar3 + 0x28);\n            if (*0x789810 == 0) {\n                *(iVar3 + 0x28) = 0;\n                iVar3 = iVar1;\n            }\n            else {\n                iVar2 = fcn.0045c220(arg1, 0, param_3, param_4);\n                iVar3 = iVar1;\n            }\n        }\n        if (*0x789810 == 0) {\n            *(arg1 + iVar2 * 8) = 0;\n        }\n        else {\n            iVar2 = fcn.0045c200(0);\n        }\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 518
    },
    "00418380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.00418380(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [16];\n    \n    if (unaff_RDI < 10000000) {\n        uVar9 = (unaff_RDI >> 1) / 500;\n        if (uVar9 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                fcn.0045c620(1, 0);\n                uVar9 = arg1;\n            }\n            arg1 = unaff_RBX;\n            iVar6 = fcn.0045c5a0(unaff_RBX);\n            goto code_r0x0041841c;\n        }\n        iVar6 = 3;\n        for (; 99 < uVar9; uVar9 = uVar9 / 10) {\ncode_r0x0041841c:\n            iVar6 = iVar6 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar6;\n        uVar7 = arg1_00 - 1;\n        uVar10 = unaff_RBX - 1;\ncode_r0x0041844d:\n        uVar12 = uVar10;\n        if ((uVar9 < 10) && (uVar12 < uVar7)) {\n            if (uVar12 < unaff_RBX) {\n                in_RAX[uVar12] = uVar9 + '0';\n                return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n            }\n            fcn.0045c5a0(unaff_RBX);\n            goto code_r0x004184de;\n        }\n        uVar10 = uVar9 / 10;\n        arg1_00 = uVar9 % 10;\n        uVar9 = uVar10;\n        if (uVar12 < unaff_RBX) goto code_r0x0041847b;\n        goto code_r0x004184e6;\n    }\n    uVar9 = unaff_RDI / 1000000;\n    uVar7 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar10 = uVar7;\ncode_r0x004184f7:\n    uVar12 = uVar10;\n    cVar2 = uVar9;\n    if ((uVar9 < 10) && (uVar12 < uVar7)) {\n        if (uVar12 < arg1_00) {\n            in_RAX[uVar12] = cVar2 + '0';\n            return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n        }\n        fcn.0045c5a0(arg1_00);\n        goto code_r0x0041858c;\n    }\n    uVar9 = uVar9 / 10;\n    if (uVar12 < arg1_00) goto code_r0x0041852b;\n    goto code_r0x00418594;\ncode_r0x0041847b:\n    in_RAX[uVar12] = arg1_00 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 != uVar7) goto code_r0x0041844d;\n    if (uVar10 < unaff_RBX) {\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n        goto code_r0x0041844d;\n    }\ncode_r0x004184de:\n    fcn.0045c5a0(unaff_RBX);\ncode_r0x004184e6:\n    arg1 = unaff_RBX;\n    uVar7 = arg1;\n    uVar10 = fcn.0045c5a0(arg1);\n    goto code_r0x004184f7;\ncode_r0x0041852b:\n    in_RAX[uVar12] = cVar2 + uVar9 * -10 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 == uVar7) {\n        if (arg1_00 <= uVar10) {\ncode_r0x0041858c:\n            fcn.0045c5a0(arg1_00);\ncode_r0x00418594:\n            fcn.0045c5a0(arg1_00);\n            while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n                fcn.00459ea0();\n            }\n            if (*0x734cf0 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x734cf0;\n                iVar8 = (*0x734cf0)[1];\n            }\n            *0x78a0e8 = in_XMM15;\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n                if (*0x78a0e8 < uVar9) {\n                    *0x78a0e8 = CONCAT88(*0x78a0f0, uVar9);\n                }\n            }\n            if (*0x734cf0 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x734cf0;\n                iVar8 = (*0x734cf0)[1];\n            }\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n                if (*0x78a0f0 < uVar9) {\n                    *0x78a0e8 = CONCAT88(uVar9, *0x78a0e8);\n                }\n            }\n            *0x75bc98 = *0x75bc68;\n            *0x75bca0 = *0x75bc68;\n            if (*0x789810 == 0) {\n                *0x75bc90 = *0x75bc60;\n                *0x78a0f8 = *0x75bc68;\n            }\n            else {\n                *0x78a0f8 = fcn.0045c200();\n            }\n            iVar4 = SUB164(*0x78a0e8, 0);\n            iVar5 = SUB164(*0x78a0e8 >> 0x40, 0);\n            iVar3 = *0x78a0f8;\n            *0x78a118 = *0x789648 + iVar4 + iVar5 + iVar3 + 2;\n            *0x78a0c8 = 0;\n            *0x78a0cc = iVar4 + iVar5 + iVar3 + *0x789648 + 2;\n            *0x78a100 = *0x789648;\n            *0x78a108 = 2;\n            *0x78a10c = iVar4 + 2;\n            *0x78a110 = iVar5 + iVar4 + 2;\n            *0x78a114 = iVar3 + iVar4 + iVar5 + 2;\n            return *0x78a118;\n        }\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n    }\n    goto code_r0x004184f7;\n}\n",
        "token_count": 1896
    },
    "004185a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004185a0(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x734cf0 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x734cf0;\n        iVar5 = (*0x734cf0)[1];\n    }\n    *0x78a0e8 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x78a0e8 < uVar8) {\n            *0x78a0e8 = CONCAT88(*0x78a0f0, uVar8);\n        }\n    }\n    if (*0x734cf0 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x734cf0;\n        iVar5 = (*0x734cf0)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x78a0f0 < uVar8) {\n            *0x78a0e8 = CONCAT88(uVar8, *0x78a0e8);\n        }\n    }\n    *0x75bc98 = *0x75bc68;\n    *0x75bca0 = *0x75bc68;\n    if (*0x789810 == 0) {\n        *0x75bc90 = *0x75bc60;\n        *0x78a0f8 = *0x75bc68;\n    }\n    else {\n        *0x78a0f8 = fcn.0045c200();\n    }\n    iVar3 = SUB164(*0x78a0e8, 0);\n    iVar4 = SUB164(*0x78a0e8 >> 0x40, 0);\n    iVar2 = *0x78a0f8;\n    *0x78a0c8 = 0;\n    *0x78a0cc = iVar3 + iVar4 + iVar2 + *0x789648 + 2;\n    *0x78a100 = *0x789648;\n    *0x78a108 = 2;\n    *0x78a10c = iVar3 + 2;\n    *0x78a110 = iVar4 + iVar3 + 2;\n    *0x78a114 = iVar2 + iVar3 + iVar4 + 2;\n    *0x78a118 = *0x789648 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 807
    },
    "00418fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418fa0(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x75bc98;\n            if (unaff_RBX < *0x75bc98) {\n                uVar5 = *(*0x75bc90 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x75b9a8;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x75ba18) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x75b9a8;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x7895b6 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x00419177:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x419185;\n                                                    fcn.00433860();\n                                                    *(*0x20 + -0x80) = 0x419196;\n                                                    fcn.00434160();\n                                                    *(*0x20 + -0x80) = 0x41919f;\n                                                    fcn.00433e60();\n                                                    *(*0x20 + -0x80) = 0x4191a5;\n                                                    fcn.00433a80();\n                                                    *(*0x20 + -0x80) = 0x4191ae;\n                                                    fcn.00433e60();\n                                                    *(*0x20 + -0x80) = 0x4191b3;\n                                                    fcn.00433ac0();\n                                                    *(*0x20 + -0x80) = 0x4191b8;\n                                                    fcn.004338e0();\n                                                    *(*0x20 + -0x80) = 0x4191c9;\n                                                    fcn.004320e0();\n                                                    goto code_r0x004191c9;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x4190cc;\n                                            fcn.00409e80();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x419177;\n                                                        fcn.0042fa00();\n                                                        goto code_r0x00419177;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x419145;\n                                                    fcn.0041ace0(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x419166;\n                                                    fcn.0041ab40(0x71d180);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x4190e5;\n                                            fcn.0040a0a0();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x0041904c;\n                                        }\ncode_r0x004191c9:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x4191d3;\n                                        fcn.00433860();\n                                        *(*0x20 + -0x80) = 0x4191e5;\n                                        fcn.00434160();\n                                        *(*0x20 + -0x80) = 0x4191f2;\n                                        fcn.00433e60();\n                                        *(*0x20 + -0x80) = 0x4191f7;\n                                        fcn.00433ac0();\n                                        *(*0x20 + -0x80) = 0x4191fc;\n                                        fcn.004338e0();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41920d;\n                                        fcn.004320e0();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41921a;\n                                    fcn.0045c5c0(0x200);\n                                    goto code_r0x0041921a;\n                                }\ncode_r0x0041904c:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041921a:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x419227;\n                fcn.0045c5c0(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41922f;\n            in_RAX = fcn.0045c5a0(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41923f;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1896
    },
    "00419260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419260(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar4 = *0x789e90;\n            iVar5 = -*(in_RAX + 0x180) * *0x789ec8;\n            iVar3 = -*(in_RAX + 0x180);\n            if (iVar5 < 0x10000) {\n                iVar3 = *0x6b5310 * *0x789ed0;\n            }\n            arg3 = 0x10000;\n            if (iVar5 < 0x10000) {\n                iVar5 = 0x10000;\n            }\n            if (0 < *0x789e90) {\n                if (*0x789e90 < iVar5) {\n                    *(in_RAX + 0x180) = *0x789e90 * *0x789ed0 + *(in_RAX + 0x180) + 1;\n                    iVar3 = iVar4;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + iVar3;\n                    iVar3 = iVar5;\n                }\n                LOCK();\n                *0x789e90 = *0x789e90 - iVar3;\n                if (iVar5 == iVar3) {\n                    if (bVar1) {\n                        fcn.0044e500(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x73b7b0 != '\\0') && (!bVar1)) {\n                fcn.0044e500(0);\n                bVar1 = true;\n            }\n            fcn.00459d60();\n            iVar4 = *(in_RAX + 0x88);\n            if (*0x789810 == 0) {\n                *(in_RAX + 0x88) = 0;\n                iVar3 = in_RAX;\n            }\n            else {\n                iVar3 = fcn.0045c220(iVar4, 0, arg3, iVar3);\n            }\n            if (iVar4 != 0) {\n                fcn.004162c0();\n                iVar3 = in_RAX;\n            }\n            if (-1 < *(iVar3 + 0x180)) goto code_r0x004194b1;\n            if (*(iVar3 + 0xb1) == '\\0') break;\n            fcn.00459ce0();\n        }\n        cVar2 = fcn.004198e0();\n    } while (cVar2 == '\\0');\ncode_r0x004194b1:\n    if (bVar1) {\n        fcn.0044e500(0);\n    }\n    return;\n}\n",
        "token_count": 766
    },
    "00419540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419540(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = in_RAX + 0x88;\n            if (*0x789810 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x50) = 0x41957e;\n                in_RAX = fcn.0045c200();\n            }\n            if (*0x7895e8 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x4195b2;\n            fcn.0045de80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            LOCK();\n            iVar2 = *0x78a0e0 + -1;\n            uVar6 = *0x78a0e0 - 1;\n            uVar8 = *0x78a0d0;\n            *0x78a0e0 = iVar2;\n            if (*0x78a0d0 != uVar6) {\n                *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                *(*0x20 + -0x50) = 0x419605;\n                fcn.004363a0(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x50) = 0x41962f;\n                uVar5 = fcn.0041a940();\n                *(*0x20 + -0x20) = uVar5;\n                uVar5 = 2;\n                *(*0x20 + -0x50) = 0x419648;\n                fcn.004363a0(2);\n                dVar4 = *0x789ed0;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x180) = *(*0x20 + -0x20) * *0x789ed0 + *(iVar1 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x78a0e0 + 1;\n                uVar8 = *0x78a0e0 + 1;\n                *0x78a0e0 = iVar2;\n                if (uVar8 <= *0x78a0d0) {\n                    if (*0x78a0d0 == uVar8) {\n                        if (*0x78a040 == 0) {\n                            if (*0x78a0c8 < *0x78a0cc) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x789810 == 0) {\n                                *(iVar1 + 0x88) = iVar1;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x4196f8;\n                                fcn.0045c260(uVar5, uVar8, param_3, param_4);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x50) = 0x4196fd;\n                    fcn.0045de80();\n                    iVar1 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    iVar7 = (*(*0x20 + -0x48) - *(*0x20 + -0x28)) + *(iVar1 + 0x1678);\n                    *(iVar1 + 0x1678) = iVar7;\n                    if (5000 < iVar7) {\n                        LOCK();\n                        *0x789e98 = *0x789e98 + iVar7;\n                        *(iVar1 + 0x1678) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x34) = uVar8;\n                *(*0x20 + -0x2c) = *0x78a0d0;\n                *(*0x20 + -0x50) = 0x419777;\n                fcn.00433860(dVar4);\n                uVar6 = uVar5;\n                *(*0x20 + -0x50) = 0x419788;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x419791;\n                fcn.00433e60();\n                *(*0x20 + -0x50) = 0x4197a5;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x4197ae;\n                fcn.00433e60();\n                *(*0x20 + -0x50) = 0x4197b3;\n                fcn.00433ac0();\n                *(*0x20 + -0x50) = 0x4197b8;\n                fcn.004338e0();\n                uVar8 = 0x17;\n                *(*0x20 + -0x50) = 0x4197c9;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x30) = uVar6;\n            *(*0x20 + -0x2c) = uVar8;\n            *(*0x20 + -0x50) = 0x4197d6;\n            fcn.00433860();\n            *(*0x20 + -0x50) = 0x4197e7;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x4197f0;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x419805;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x41980e;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x419813;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x419818;\n            fcn.004338e0();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x50) = 0x419829;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x419839;\n        fcn.0045e5a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1790
    },
    "00419a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00419a20(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x789ed0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x78a160 == 0) {\n        LOCK();\n        iVar2 = *0x789e90;\n        *0x789e90 = *0x789e90 + in_RAX;\n        return iVar2;\n    }\n    fcn.00409e80();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x78a160;\n        if ((*0x78a160 == 0) || (iVar2 < 1)) goto code_r0x00419b49;\n        if ((*0x78a160 != 0) && (*0x78a160 = *(*0x78a160 + 0xa0),  *0x78a160 == 0)) {\n            *0x78a168 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.00435c40(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x78a168 != 0) {\n        *(*0x78a168 + 0xa0) = iVar3;\n        iVar2 = *0x78a160;\n    }\n    *0x78a160 = iVar2;\n    *0x78a168 = iVar3;\n    iVar2 = 0;\ncode_r0x00419b49:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x789e90;\n        *0x789e90 = *0x789e90 + iVar2 * *0x789ec8;\n    }\n    iVar2 = fcn.0040a0a0(iVar3);\n    return iVar2;\n}\n",
        "token_count": 541
    },
    "00419bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00419bc0(void)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    char cVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x178 && *0x20 + -0x178 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x1f8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar5 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar5 < 3) {\n                    if (uVar5 == 1) goto code_r0x00419c29;\n                }\n                else {\n                    if (4 < uVar5) {\n                        if (uVar5 == 6) {\n                            return;\n                        }\ncode_r0x00419d9c:\n                        *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n                        puVar6 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar6;\n                        *(*0x20 + -0x200) = 0x419db7;\n                        fcn.00433860();\n                        *(*0x20 + -0x200) = 0x419dc8;\n                        fcn.00434160();\n                        *(*0x20 + -0x200) = 0x419dd5;\n                        fcn.004340e0();\n                        *(*0x20 + -0x200) = 0x419de6;\n                        fcn.00434160();\n                        *(*0x20 + -0x200) = 0x419df0;\n                        fcn.00433f60();\n                        *(*0x20 + -0x200) = 0x419e05;\n                        fcn.00434160();\n                        *(*0x20 + -0x200) = 0x419e10;\n                        fcn.00433e60();\n                        *(*0x20 + -0x200) = 0x419e15;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x200) = 0x419e1a;\n                        fcn.004338e0();\n                        *(*0x20 + -0x200) = 0x419e2b;\n                        fcn.004320e0();\n                        while( true ) {\n                            *(*0x20 + -0x28) = *(*(*0x20 + -0x28) + 0x28);\ncode_r0x00419e3f:\n                            if (*(*0x20 + -0x28) == 0) break;\n                            if (*(*(*0x20 + -0x28) + 0x18) != 0) {\n                                *(*0x20 + -0x200) = 0x419e79;\n                                fcn.0041ab40(0x71d180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x28) + 0x28) != 0) {\n                                *(*0x20 + -0x200) = 0x419eb2;\n                                fcn.0041ab40(0x71d180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x28) + 5) != '\\0') {\n                                *(*0x20 + -0x200) = 0x419ef3;\n                                fcn.0041ab40(0x71d180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar6 + 8) != 0) {\n                            *(*0x20 + -0x200) = 0x419f1a;\n                            fcn.0041e780(0);\n                        }\n                        iVar4 = 0;\n                        *(*0x20 + -0x200) = 0x419f32;\n                        uVar2 = fcn.0041eba0(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar2;\n                        do {\n                            *(*0x20 + -0x200) = 0x419f45;\n                            iVar3 = fcn.0041e8c0();\n                            if (iVar3 == 0) {\n                                while (iVar4 = *(*0x20 + -0x50),  iVar4 != 0) {\n                                    *(*0x20 + -0x50) = *(iVar4 + 0x18);\n                                    *(iVar4 + 0x10) = 0;\n                                    *(*0x20 + -0x200) = 0x41a07e;\n                                    fcn.00421140();\n                                }\n                                if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0)) {\n                                    return;\n                                }\n                                iVar4 = 0x19;\n                                *(*0x20 + -0x200) = 0x41a0ce;\n                                iVar3 = fcn.004320e0();\n                            }\n                            else {\n                                iVar3 = iVar3 - *(*0x20 + -0x80);\n                                puVar6 = *(*0x20 + -0x38);\n                            }\n                            while (cVar7 = iVar4,  puVar6 != NULL) {\n                                if (iVar3 < *puVar6) {\n                                    puVar6 = *(puVar6 + 4);\n                                }\n                                else {\n                                    if (iVar3 < *puVar6 + puVar6[1]) goto code_r0x00419f68;\n                                    puVar6 = *(puVar6 + 6);\n                                }\n                            }\n                            puVar6 = NULL;\ncode_r0x00419f68:\n                            if ((puVar6 != NULL) && (iVar3 = *(puVar6 + 2),  iVar3 != 0)) {\n                                *(puVar6 + 2) = 0;\n                                uVar2 = *(iVar3 + 0x10);\n                                if (*(iVar3 + 8) < 0) {\n                                    *(*0x20 + -0x1a5) = cVar7;\n                                    *(*0x20 + -0x198) = puVar6;\n                                    *(*0x20 + -0x30) = iVar3;\n                                    *(*0x20 + -0x200) = 0x419fae;\n                                    iVar4 = fcn.00412900();\n                                    uVar2 = *(iVar4 + 0x18);\n                                    puVar6 = *(*0x20 + -0x198);\n                                    cVar7 = *(*0x20 + -0x1a5);\n                                }\n                                else {\n                                    iVar4 = 0;\n                                }\n                                *(*0x20 + -400) = iVar4;\n                                puVar6 = *puVar6 + *(*0x20 + -0x80);\n                                if (cVar7 == '\\0') {\n                                    *(*0x20 + -0x200) = 0x41a03c;\n                                    fcn.0041ab40(uVar2);\n                                }\n                                else {\n                                    *(*0x20 + -0x200) = 0x41a00b;\n                                    fcn.0041b060(uVar2);\n                                }\n                                iVar4 = *(*0x20 + -400);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x200) = 0x41a05c;\n                                    fcn.004233c0(2);\n                                }\n                            }\n                        } while( true );\n                    }\ncode_r0x00419c29:\n                    if (unaff_R14 != in_RAX) {\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar9 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar9 = false;\n                            }\n                        }\n                        else {\n                            bVar9 = false;\n                        }\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar9) {\n                            *(*0x20 + -0x200) = 0x419c72;\n                            fcn.00447d80();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x208) = unaff_RBP;\n                        *(*0x20 + -0x200) = 0x419c9a;\n                        puVar1 = fcn.0045c7f4();\n                        uVar2 = puVar1[1];\n                        *(*0x20 + -0x80) = *puVar1;\n                        *(*0x20 + -0x78) = uVar2;\n                        if (puVar1[10] != 0) {\n                            *(*0x20 + -0x200) = 0x419cdc;\n                            fcn.0041ab40(0x71d180);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41a280;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x1f8) = 0;\n                        *(*0x20 + -0x200) = 0x419d57;\n                        fcn.0044fea0(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        *(*0x20 + -0x200) = 0x419d6e;\n                        fcn.0044fc80(0);\n                        puVar6 = *(*0x20 + 8);\n                        *(*0x20 + -0x28) = *(puVar6 + 10);\n                        goto code_r0x00419e3f;\n                    }\n                    *(*0x20 + -0x200) = 0x41a10c;\n                    iVar4 = unaff_R14;\n                    in_RAX = fcn.004320e0();\n                    uVar5 = iVar4;\n                }\n                if (uVar5 != 2) goto code_r0x00419d9c;\n                *(*0x20 + -0x1a0) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x200) = 0x41a130;\n                fcn.00433860();\n                *(*0x20 + -0x200) = 0x41a145;\n                fcn.00434160();\n                *(*0x20 + -0x200) = 0x41a152;\n                fcn.004340e0();\n                *(*0x20 + -0x200) = 0x41a165;\n                fcn.00434160();\n                *(*0x20 + -0x200) = 0x41a16f;\n                fcn.00433f60();\n                *(*0x20 + -0x200) = 0x41a185;\n                fcn.00434160();\n                *(*0x20 + -0x200) = 0x41a190;\n                fcn.00433e60();\n                *(*0x20 + -0x200) = 0x41a195;\n                fcn.00433ac0();\n                *(*0x20 + -0x200) = 0x41a19a;\n                fcn.004338e0();\n                *(*0x20 + -0x200) = 0x41a1ab;\n                in_RAX = fcn.004320e0();\n            }\n            *(*0x20 + -0x19c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x200) = 0x41a1c6;\n            fcn.00433860();\n            *(*0x20 + -0x200) = 0x41a1d7;\n            fcn.00434160();\n            *(*0x20 + -0x200) = 0x41a1e5;\n            fcn.004340e0();\n            *(*0x20 + -0x200) = 0x41a1f6;\n            fcn.00434160();\n            *(*0x20 + -0x200) = 0x41a205;\n            fcn.00433f60();\n            *(*0x20 + -0x200) = 0x41a216;\n            fcn.00434160();\n            *(*0x20 + -0x200) = 0x41a225;\n            fcn.00433fc0();\n            *(*0x20 + -0x200) = 0x41a22a;\n            fcn.00433ac0();\n            *(*0x20 + -0x200) = 0x41a22f;\n            fcn.004338e0();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x200) = 0x41a245;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41a255;\n        fcn.0045e5a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3303
    },
    "0041a540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a540(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x789814 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x58) = 0x41a905;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41a915;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x69e500;\n            }\n        }\n        else {\n            uVar8 = 0x69e508;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x78a0cc <= *0x78a0c8) goto code_r0x0041a604;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\ncode_r0x0041a85c:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x7361e0 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041a604:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x7361e0 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041a7ed;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x78a040 == 0) {\n                *(*0x20 + -0x58) = 0x41a650;\n                fcn.00420d40();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                iVar1 = *(iVar4 + 0x10);\n                if (iVar1 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *(iVar4 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041a82e;\n                    iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n                }\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x58) = 0x41a6ab;\n                iVar4 = fcn.00420b60(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x58) = 0x41a6b9;\n                    fcn.0042ab40();\n                    *(*0x20 + -0x58) = 0x41a6c5;\n                    iVar4 = fcn.00420b60();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041a7ed;\n            }\n            *(*0x20 + -0x58) = 0x41a6fa;\n            fcn.0041ace0(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x789e88 = *0x789e88 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41a73f;\n                    fcn.00419a20();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x58) = 0x41a782;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041a7ed;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x78a0c8 + 1;\n    bVar10 = *0x78a0cc <= *0x78a0c8;\n    *0x78a0c8 = uVar7;\n    if (bVar10) goto code_r0x0041a604;\n    *(*0x20 + -0x58) = 0x41a8b9;\n    fcn.00418960();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x58) = 0x41a8ce;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041a7ed:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x789e88 = *0x789e88 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x58) = 0x41a817;\n                fcn.00419a20(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041a83b;\ncode_r0x0041a82e:\n    *(*0x20 + -0x58) = 0x41a83b;\n    fcn.0045c5a0(0xfd);\ncode_r0x0041a83b:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041a85c;\n}\n",
        "token_count": 2446
    },
    "0041a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041a940(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    \ncode_r0x0041a940:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar5 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x789814 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar6 = -in_RAX[3];\n            iVar4 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar4;\n            do {\n                if ((*(iVar4 + 0xb1) != '\\0') || (unaff_RBX <= in_RAX[3] + iVar6)) goto code_r0x0041aae7;\n                *(*0x20 + -0x18) = iVar6;\n                if (*0x78a040 == 0) {\n                    *(*0x20 + -0x30) = 0x41a9ca;\n                    fcn.00420d40();\n                    in_RAX = *(*0x20 + 8);\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        *(iVar3 + 0x10) = iVar1 - 1U;\n                        if (0xfc < iVar1 - 1U) goto code_r0x0041aaf9;\n                        iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                    }\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41aa25;\n                    iVar3 = fcn.00420b60(0, iVar4);\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41aa33;\n                        fcn.0042ab40();\n                        *(*0x20 + -0x30) = 0x41aa3d;\n                        iVar3 = fcn.00420b60();\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x78a0cc <= *0x78a0c8) {\ncode_r0x0041aae7:\n                        return iVar6 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x78a0c8 + 1;\n                    bVar7 = *0x78a0cc <= *0x78a0c8;\n                    *0x78a0c8 = uVar2;\n                    if (bVar7) goto code_r0x0041aae7;\n                    *(*0x20 + -0x30) = 0x41aa8b;\n                    fcn.00418960();\n                    in_RAX = *(*0x20 + 8);\n                    iVar6 = *(*0x20 + -0x18);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41aaa5;\n                    fcn.0041ace0(iVar3, iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar6 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x789e88 = *0x789e88 + in_RAX[3];\n                        iVar6 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar6 = *(*0x20 + -0x18) + iVar6;\n                    }\n                }\n                iVar4 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041ab06;\n    }\n    goto code_r0x0041ab18;\ncode_r0x0041aaf9:\n    *(*0x20 + -0x30) = 0x41ab06;\n    fcn.0045c5a0(0xfd);\ncode_r0x0041ab06:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41ab17;\n    in_RAX = fcn.004320e0();\ncode_r0x0041ab18:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x41ab27;\n    fcn.0045e5a0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x0041a940;\n}\n",
        "token_count": 1339
    },
    "0041b320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b320(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar8 = arg3 >> 3;\n                if (*0x7895b6 == '\\0') {\n                    uVar6 = 1 << (arg3 & 7);\n                    if (((*0x7899ec < 1) || (arg3 <= *(unaff_RDI + 0x30) && *(unaff_RDI + 0x30) != arg3)) ||\n                       (arg3 = puVar8,  (puVar8[*(unaff_RDI + 0x48)] & uVar6) != 0)) {\n                        if ((uVar6 & puVar8[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar8[iVar1] = puVar8[iVar1] | uVar6;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x75ba18) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar5 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar5 + 0x21040;\n                            uVar6 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar6 & *(iVar1 + 0x21040 + uVar5)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar6;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041b493;\n                        }\n                        goto code_r0x0041b4f1;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41b485;\n                    cVar4 = fcn.00413f40(arg1, iVar1, arg3);\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041b493:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\n                        bVar3 = false;\ncode_r0x0041b4c1:\n                        if (!bVar3) {\n                            *(*0x20 + -0x50) = 0x41b4d0;\n                            fcn.00420840();\n                        }\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) {\n                        bVar3 = false;\n                        goto code_r0x0041b4c1;\n                    }\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        bVar3 = true;\n                        goto code_r0x0041b4c1;\n                    }\n                    *(*0x20 + -0x50) = 0x41b4f1;\n                    fcn.0045c5a0(0xfd);\ncode_r0x0041b4f1:\n                    *(*0x20 + -0x50) = 0x41b4fe;\n                    fcn.0045c5c0(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41b50d;\n                fcn.00433860();\n                *(*0x20 + -0x50) = 0x41b51e;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x41b528;\n                fcn.00433fc0();\n                *(*0x20 + -0x50) = 0x41b539;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x41b545;\n                fcn.00433fc0();\n                *(*0x20 + -0x50) = 0x41b556;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x41b565;\n                fcn.00433fc0();\n                *(*0x20 + -0x50) = 0x41b576;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x41b57b;\n                fcn.004338e0();\n                *(*0x20 + -0x50) = 0x41b596;\n                fcn.0041b640(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41b5b3;\n                fcn.0041b640(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41b5cf;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41b5e5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + -8) = 0x41b609;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1833
    },
    "0041b640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041b640(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x75ba18);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.004338e0();\n    if (iVar3 == 0) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n        return;\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00434160();\n    fcn.004338e0();\n    if (*(iVar3 + 99) < *0x72e648) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433ac0();\n        fcn.004338e0();\n    }\n    else {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.004338e0();\n            }\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.004338e0();\n            if (unaff_RDI == uVar4) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.004338e0();\n            }\n            fcn.00433860();\n            fcn.00433ac0();\n            fcn.004338e0();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    return;\n}\n",
        "token_count": 934
    },
    "0041ba80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ba80(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    if (*0x7895b6 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x75ba18) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n            piVar1 = iVar2 + 0x16a8;\n            *piVar1 = *piVar1 + arg1;\n            piVar1 = iVar2 + 0x16b0;\n            *piVar1 = *piVar1 + unaff_RDI;\n            return;\n        }\n        fcn.0045c5c0(0x40);\n    }\n    fcn.004320e0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 547
    },
    "0041bce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bce0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong noname_0;\n    ulong arg2;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *(in_RAX + 0x48) = in_XMM15;\n    *(in_RAX + 0x58) = in_XMM15;\n    *(in_RAX + 0x68) = in_XMM15;\n    uVar2 = *(in_RAX + 0x30) + 0x100000;\n    if (*(in_RAX + 0x20) < uVar2) {\n        *(in_RAX + 0x20) = uVar2;\n    }\n    dVar5 = *0x7895f4 * *0x6b52a0;\n    iVar3 = *0x6b52b0 + dVar5;\n    *(in_RAX + 0x80) = iVar3;\n    dVar6 = iVar3 / dVar5 - *0x6b52d0;\n    if ((dVar6 < str.333333._0_8_) || (*0x6b52a8 < dVar6)) {\n        if (dVar5 < iVar3) {\n            *(in_RAX + 0x80) = iVar3 + -1;\n        }\n        *(in_RAX + 0x98) = (dVar5 - *(in_RAX + 0x80)) / *0x7895f4;\n    }\n    else {\n        *(in_RAX + 0x98) = 0;\n    }\n    if (0 < *0x7899f8) {\n        *(in_RAX + 0x80) = *0x7895f4;\n        *(in_RAX + 0x98) = 0;\n    }\n    iVar1 = *0x735738;\n    iVar3 = *0x735730;\n    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {\n        *(*(iVar3 + iVar4 * 8) + 0x1678) = in_XMM15;\n    }\n    fcn.0041bf80();\n    if (0 < *0x7899f0) {\n        noname_0 = *(in_RAX + 0x88);\n        arg2 = *0x789e78;\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433b60(noname_0, arg2);\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.00433b60(noname_0, arg2);\n        fcn.00433ac0();\n        fcn.004338e0();\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "0041c080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\ndouble fcn.0041c080(void)\n\n{\n    double dVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong arg2;\n    char unaff_BL;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    int64_t iStack128;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_BL != '\\0') {\n        return *(in_RAX + 0x10);\n    }\n    uVar2 = *(in_RAX + 0x40);\n    uVar4 = *(in_RAX + 0x20) - uVar2;\n    if (uVar4 < 0) {\n        dVar5 = uVar4 >> 1 | uVar4 & 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = uVar4;\n    }\n    if (uVar2 < 0) {\n        dVar6 = uVar2 >> 1 | uVar2 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar2;\n    }\n    dVar5 = dVar5 / dVar6;\n    if (dVar5 < 0.0) {\n        dVar5 = 0.0;\n    }\n    uVar4 = *(in_RAX + 0x30);\n    if (uVar4 < 0) {\n        dVar6 = uVar4 >> 1 | uVar4 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar4;\n    }\n    if (uVar2 < 0) {\n        dVar7 = uVar2 >> 1 | uVar2 & 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar2;\n    }\n    fcn.0045de80();\n    iVar3 = iStack128 - *(in_RAX + 0x78);\n    dVar8 = *0x6b52a0;\n    if (0 < iVar3) {\n        dVar8 = *0x6b52a0 + *(in_RAX + 0x58) / (iVar3 * *0x7895f4);\n    }\n    dVar1 = *(in_RAX + 0x10);\n    dVar6 = *0x6b52b0 * ((dVar5 - dVar1) - ((dVar6 / dVar7 - *0x6b52d0) - dVar1) * (dVar8 / *0x6b52a8));\n    if (0 < *0x7899f0) {\n        uVar2 = *(in_RAX + 0x40);\n        arg2 = *(in_RAX + 0x18);\n        if (uVar2 < 0) {\n            dVar7 = uVar2 >> 1 | uVar2 & 1;\n            dVar7 = dVar7 + dVar7;\n        }\n        else {\n            dVar7 = uVar2;\n        }\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433f60((*0x6b52d0 + dVar5) * dVar7);\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00434160();\n        fcn.00433b60(in_RAX, arg2);\n        fcn.00433ac0();\n        fcn.004338e0();\n    }\n    return dVar6 + dVar1;\n}\n",
        "token_count": 1091
    },
    "0041c4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c4e0(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x80) < 1) {\n                return;\n            }\n            if (*0x7895f4 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar2 == NULL)) {\n                return;\n            }\n            iVar6 = *piVar2;\n            *(*0x20 + -0x14) = iVar6;\n            iVar5 = 0;\n            while( true ) {\n                iVar8 = *0x7895f4;\n                if (4 < iVar5) {\n                    return;\n                }\n                iVar3 = *(unaff_R14 + 0x30);\n                uVar9 = *(iVar3 + 0xf0);\n                uVar1 = *(iVar3 + 0xf4);\n                *(iVar3 + 0xf0) = uVar1;\n                uVar9 = uVar9 ^ uVar9 << 0x11;\n                uVar9 = uVar1 >> 0x10 ^ uVar9 >> 7 ^ uVar1 ^ uVar9;\n                *(iVar3 + 0xf4) = uVar9;\n                iVar8 = (uVar1 + uVar9) * (iVar8 - 1) >> 0x20;\n                if (iVar6 <= iVar8) {\n                    iVar8 = iVar8 + 1;\n                }\n                if (*0x735738 <= iVar8) break;\n                if (*(*(*0x735730 + iVar8 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar5;\n                    *(*0x20 + -0x30) = 0x41c5e6;\n                    cVar4 = fcn.0043f220();\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x14);\n                }\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41c614;\n            in_RAX = fcn.0045c5a0(*0x735738);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41c61f;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 794
    },
    "0041c640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041c6d2)\n\nulong fcn.0041c640(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7895e8 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41c89c;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41c8ac;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1698) == 0)) ||\n       ((*(*(unaff_RBX + 0x1698) + 0x10) == 0 && (*(*(unaff_RBX + 0x16a0) + 0x10) == 0)))) {\n        if (*0x78a040 == 0) {\n            if (*0x78a0c8 < *0x78a0cc) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x7896c8 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = (*0x7896c8 >> 0x13) << 3;\n        *0x7896c8 = *piVar6;\n        LOCK();\n    }\n    if (piVar6 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0x80);\n        if (uVar2 < 1) break;\n        LOCK();\n        puVar1 = in_RAX + 0x80;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x98) == 0.0) {\n            *(*0x20 + -0x38) = 0x41c836;\n            fcn.00409c20(in_RAX, piVar6, 0x7896c8);\n            return 0;\n        }\n        *(*0x20 + -0x10) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = piVar6;\n        *(*0x20 + -0x38) = 0x41c79a;\n        fcn.0045de80();\n        iVar5 = *(*0x20 + -0x30) - *(*(*0x20 + -0x10) + 0x78);\n        if (iVar5 < 1) {\n            iVar7 = *(*0x20 + 0x10);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x10);\n            if (*(*(*0x20 + -0x10) + 0x98) < *(iVar7 + 0x1680) / iVar5) {\n                *(*0x20 + -0x38) = 0x41c806;\n                fcn.00409c20();\n                return 0;\n            }\n        }\n        *(iVar7 + 0x1688) = 2;\n        piVar6 = *(*0x20 + -0x20);\n    }\n    else {\n        *(unaff_RBX + 0x1688) = 1;\n    }\n    *(*0x20 + -0x18) = piVar6[2];\n    *(*0x20 + -0x38) = 0x41c867;\n    fcn.004363a0(1);\n    if (*0x73b7b0 != '\\0') {\n        *(*0x20 + -0x38) = 0x41c87c;\n        fcn.0044f920();\n    }\n    return *(*0x20 + -0x18);\n}\n",
        "token_count": 1211
    },
    "0041c8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c8c0(double param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong noname_0;\n    uint64_t uVar4;\n    ulong arg2;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 < 0) {\n                uVar4 = 0xffffffffffffffff;\n                if (param_1 < 0.0) {\n                    param_1 = 0.0;\n                }\n            }\n            else {\n                uVar4 = (iVar1 * *(in_RAX + 0x10) >> 1) / 0x32 + *(in_RAX + 0x10);\n                dVar7 = *0x6b52c8 * (iVar1 / *0x6b5300);\n                if (param_1 <= dVar7) {\n                    dVar7 = param_1;\n                }\n                param_1 = *0x6b52b8 * (iVar1 / *0x6b5300);\n                if (param_1 <= dVar7) {\n                    param_1 = dVar7;\n                }\n            }\n            *(in_RAX + 4) = param_1;\n            if (*in_RAX < 0) {\n                uVar2 = 0xffffffffffffffff;\n                goto code_r0x0041ca25;\n            }\n            uVar2 = *(in_RAX + 0x10);\n            if (uVar2 < 0) {\n                dVar7 = uVar2 & 1 | uVar2 >> 1;\n                dVar7 = dVar7 + dVar7;\n            }\n            else {\n                dVar7 = uVar2;\n            }\n            dVar7 = (*0x6b52d0 + param_1) * dVar7;\n            if (*0x6b5320 <= dVar7) {\n                uVar2 = dVar7 - *0x6b5320 | 0x8000000000000000;\n            }\n            else {\n                uVar2 = dVar7;\n            }\n            uVar5 = *(in_RAX + 2);\n            if ((*0x75b9ac == 0 || *0x75b9b0 != 0) && (uVar5 < *(in_RAX + 0xc) + 0x100000U)) {\n                uVar5 = *(in_RAX + 0xc) + 0x100000U;\n            }\n            if (uVar2 < uVar5) {\n                uVar2 = uVar5;\n            }\n            if (-1 < uVar2) {\n                if (uVar4 < uVar2) {\n                    uVar4 = uVar2;\n                }\ncode_r0x0041ca25:\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = uVar2;\n                *(in_RAX + 6) = uVar2;\n                uVar5 = *(in_RAX + 8);\n                *(in_RAX + 8) = uVar4;\n                if (*0x73b7b0 != '\\0') {\n                    *(*0x20 + -0x58) = 0x41ca47;\n                    fcn.0044fbe0(uVar2, uVar5);\n                    uVar2 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                if (*0x7895f0 != 0) {\n                    *(*0x20 + -0x58) = 0x41ca65;\n                    fcn.0041bf80();\n                    uVar2 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                if (*0x75b9ac == 0 || *0x75b9b0 != 0) {\n                    iVar3 = (uVar2 - *(in_RAX + 0xc)) + -0x100000;\n                    if (iVar3 < 0x2000) {\n                        iVar3 = 0x2000;\n                    }\n                    if (*0x75b9d8 - *0x75b9e0 < 1) {\n                        *0x75b9f8 = 0.0;\n                    }\n                    else {\n                        *0x75b9f8 = (*0x75b9d8 - *0x75b9e0) / iVar3;\n                        *0x75b9e8 = *0x75b9e0;\n                        *0x75b9f0 = *(in_RAX + 0xc);\n                    }\n                }\n                else {\n                    *0x75b9f8 = 0.0;\n                }\n                *(*0x20 + -0x58) = 0x41cb0c;\n                fcn.0041cd60();\n                return;\n            }\n            *(*0x20 + -0x18) = param_1;\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x20) = *(in_RAX + 8);\n            noname_0 = *(in_RAX + 0x10);\n            *(*0x20 + -0x28) = noname_0;\n            arg2 = *(in_RAX + 0xc);\n            *(*0x20 + -0x30) = arg2;\n            *(*0x20 + -0x38) = *0x78a150;\n            *(*0x20 + -0x58) = 0x41cb4d;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x41cb5e;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41cb68;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x41cb79;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41cb85;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x41cb96;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41cba5;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x41cbb6;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41cbc5;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x41cbd6;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41cbe5;\n            fcn.00433b60(noname_0, arg2);\n            *(*0x20 + -0x58) = 0x41cbf6;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x41cc05;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x41cc0a;\n            fcn.00433ac0();\n            *(*0x20 + -0x58) = 0x41cc0f;\n            fcn.004338e0();\n            *(*0x20 + -0x58) = 0x41cc25;\n            in_RAX = fcn.004320e0();\n            param_1 = extraout_XMM0_Qa;\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = param_1;\n        *(puVar6 + -8) = 0x41cc36;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        param_1 = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1946
    },
    "0041cd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041cd60(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    \n    if (*0x789e68 == 0) {\n        *0x75ba00 = 0xffffffffffffffff;\n        return in_RAX;\n    }\n    if (*0x789e60 < 0) {\n        dVar2 = *0x789e60 >> 1 | *0x789e60 & 1;\n        dVar2 = dVar2 + dVar2;\n    }\n    else {\n        dVar2 = *0x789e60;\n    }\n    if (*0x789e68 < 0) {\n        dVar3 = *0x789e68 >> 1 | *0x789e68 & 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = *0x789e68;\n    }\n    if (*0x78cb60 < 0) {\n        dVar4 = *0x78cb60 >> 1 | *0x78cb60 & 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = *0x78cb60;\n    }\n    dVar4 = dVar4 * (dVar2 / dVar3);\n    if (*0x6b5320 <= dVar4) {\n        uVar1 = dVar4 - *0x6b5320 | 0x8000000000000000;\n    }\n    else {\n        uVar1 = dVar4;\n    }\n    *0x75ba00 = -*0x789738 & (uVar1 + uVar1 / 10 + *0x789738) - 1;\n    if ((*0x75ba00 < *0x78b450 - *0x78b460) && (*0x789738 <= (*0x78b450 - *0x78b460) - *0x75ba00)) {\n        return uVar1 * -0x3333333333333333;\n    }\n    *0x75ba00 = 0xffffffffffffffff;\n    return uVar1 * -0x3333333333333333;\n}\n",
        "token_count": 506
    },
    "0041cea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041cea0(void)\n\n{\n    uint uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    uVar1 = *0x7358c0;\n    if (*0x7358b0 != '\\0') {\n        *0x7358c0 = 0;\n        fcn.0044c380(uVar1);\n        *0x7358b0 = '\\0';\n        *(*0x7358a8 + 0xa0) = 0;\n        fcn.0043a240();\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 191
    },
    "0041d5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d5a0(uchar param_1)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x30) = 0x41d5ca;\n            fcn.00433860();\n            unaff_RBX = *0x78b460;\n            if (*0x78b450 - *0x78b460 != 0) {\n                *(*0x20 + -0x10) = *0x78b460;\n                *(*0x20 + -0x18) = (*0x78b458 * 100) / (*0x78b450 - *0x78b460);\n                *(*0x20 + -0x30) = 0x41d60d;\n                fcn.00433860();\n                *(*0x20 + -0x30) = 0x41d61e;\n                fcn.00434160();\n                *(*0x20 + -0x30) = 0x41d629;\n                fcn.00433e60();\n                *(*0x20 + -0x30) = 0x41d62e;\n                fcn.00433a80();\n                *(*0x20 + -0x30) = 0x41d63c;\n                fcn.00433e60();\n                *(*0x20 + -0x30) = 0x41d64d;\n                fcn.00434160();\n                *(*0x20 + -0x30) = 0x41d65b;\n                fcn.00433e60();\n                *(*0x20 + -0x30) = 0x41d66c;\n                fcn.00434160();\n                *(*0x20 + -0x30) = 0x41d676;\n                fcn.00433e60();\n                *(*0x20 + -0x30) = 0x41d687;\n                fcn.00434160();\n                *(*0x20 + -0x30) = 0x41d68c;\n                fcn.004338e0();\n                if (*(*0x20 + 0x18) != '\\0') {\n                    *(*0x20 + -0x30) = 0x41d69a;\n                    fcn.00433860();\n                    *(*0x20 + -0x30) = 0x41d6ab;\n                    fcn.00434160();\n                    *(*0x20 + -0x30) = 0x41d6b0;\n                    fcn.004338e0();\n                }\n                *(*0x20 + -0x30) = 0x41d6b5;\n                fcn.00433860();\n                *(*0x20 + -0x30) = 0x41d6ba;\n                fcn.00433ac0();\n                *(*0x20 + -0x30) = 0x41d6bf;\n                fcn.004338e0();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41d6e7;\n                    fcn.0040a0a0();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41d6f6;\n            iVar2 = *0x78b458;\n            in_EAX = fcn.0042fa00();\n            param_1 = iVar2;\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41d709;\n        fcn.00459ea0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1118
    },
    "0041d720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d720(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n    }\n    if (0 < *0x789a08) {\n        fcn.0041d5a0(0, *(in_RAX + 0x100e0));\n    }\n    fcn.0042a1c0(in_RAX + 0x10090);\n    fcn.00429f80();\n    *(in_RAX + 0x100e8) = (*(in_RAX + 0x100a8) + 0x3fffffU & 0xffffffffffc00000) >> 6;\n    *(in_RAX + 0x100e0) = *(in_RAX + 0x100e0) + 1;\n    *(in_RAX + 0x100f0) = 0;\n    *(in_RAX + 0x10100) = *0x71d2b8;\n    *(in_RAX + 0x100f8) = *0x71d298;\n    return;\n}\n",
        "token_count": 289
    },
    "0041da00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041dc2c)\n\nint64_t fcn.0041da00(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    char cVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar3 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 0x800000000000;\n            if (uVar2 < arg1 + 0x800000000000) {\n                uVar3 = arg1 - unaff_RBX;\n            }\n            else {\n                uVar3 = 0;\n            }\n            if (uVar3 == 0) {\n                return 0;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                arg1_00 = *0x789738 >> 0xd;\n                if (arg1_00 == 0) {\n                    arg1_00 = 1;\n                }\n                uVar6 = unaff_RDI >> 0xd;\n                uVar3 = unaff_RDI & 0x1fff;\n                unaff_RDI = uVar6;\n                if (uVar3 != 0) {\n                    unaff_RDI = uVar6 + 1;\n                }\n                uVar3 = *(in_RAX + 0x68);\n                uVar6 = arg1 + 0x7fffffffffff >> 0x16;\n                if (uVar6 < uVar3) {\n                    uVar3 = *(*(in_RAX + 0x60) + uVar6 * 8);\n                    if (uVar3 < 0) {\n                        uVar3 = 0x200000;\n                    }\n                    else {\n                        uVar3 = uVar3 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x28) = unaff_SIL;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x48) = unaff_RDI;\n                    *(*0x20 + -0x50) = arg1_00;\n                    if (uVar3 < arg1_00) {\ncode_r0x0041dbdc:\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41de40;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x10) = arg1_00;\n                        iVar7 = uVar6 * 0x400000 - 0x800000000000;\n                        if (uVar2 < uVar6 * 0x400000) {\n                            uVar3 = iVar7 - unaff_RBX;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        if (uVar3 == 0) {\n                            return 0;\n                        }\n                        if (unaff_SIL != '\\0') {\n                            *(*0x20 + -0x38) = iVar7;\n                            uVar1 = *(in_RAX + 0x10108);\n                            *(*0x20 + -0x90) = 0x41dcad;\n                            fcn.0040a0a0(uVar1);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        cVar4 = iVar7;\n                        *(*0x20 + -0x90) = 0x41dcc9;\n                        uVar2 = (**(*0x20 + -0x20))(*(*0x20 + -0x20), *0x20 + -0x20);\n                        *(*0x20 + -0x40) = uVar2;\n                        if (*(*0x20 + 0x28) != '\\0') {\n                            *(*0x20 + -0x61) = cVar4;\n                            *(*0x20 + -0x90) = 0x41dcf4;\n                            fcn.00409e80();\n                            uVar2 = *(*0x20 + -0x40);\n                            cVar4 = *(*0x20 + -0x61);\n                        }\n                        if (cVar4 == '\\0') {\n                            return 0;\n                        }\n                        if (uVar2 >> 0xd < 0x2000) {\n                            *(*0x20 + -0x90) = 0x41dd5f;\n                            uVar1 = fcn.0041e440(*(*0x20 + -0x50));\n                            *(*0x20 + -0x60) = 0x1ff;\n                            *(*0x20 + -0x90) = 0x41dd86;\n                            fcn.0041dfc0(uVar1);\n                            return *(*0x20 + -0x60) << 0xd;\n                        }\n                        *(*0x20 + -0x90) = 0x41ddd1;\n                        fcn.0045c5c0(0x2000);\n                    }\n                    else if (arg1 + 0x7fffffffffff >> 0x23 < 0x2000) {\n                        *(*0x20 + -0x38) = uVar6;\n                        uVar3 = (arg1 - 1 & 0x3fffff) >> 0xd;\n                        *(*0x20 + -0x90) = 0x41db5e;\n                        uVar1 = fcn.0041e440(arg1_00);\n                        if (uVar3 != 0) {\n                            *(*0x20 + -0x58) = uVar3;\n                            *(*0x20 + -0x90) = 0x41dbb7;\n                            fcn.0041dfc0(uVar1);\n                            return *(*0x20 + -0x58) << 0xd;\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1_00 = *(*0x20 + -0x50);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        unaff_SIL = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x38);\n                        goto code_r0x0041dbdc;\n                    }\n                    *(*0x20 + -0x90) = 0x41ddde;\n                    fcn.0045c5c0(0x2000);\n                }\n                *(*0x20 + -0x90) = 0x41dde9;\n                fcn.0045c5c0(uVar3);\n            }\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x90) = 0x41ddfa;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = uVar3;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x41de19;\n        fcn.0045e5a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1949
    },
    "0041dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041dfc0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t *piVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar5 = unaff_RBX;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX >> 0xd;\n            if (uVar5 < 0x2000) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x40) = 0x41e02a;\n                fcn.004278a0(unaff_RDI);\n                iVar1 = (*(*0x20 + 0x18) * 0x2000 + *(*0x20 + -0x10) * 0x400000) - 0x800000000000;\n                iVar2 = *(*0x20 + 8);\n                if (*(*0x20 + 0x18) * 0x2000 + *(*0x20 + -0x10) * 0x400000 < *(iVar2 + 0x100f8) + 0x800000000000U) {\n                    *(iVar2 + 0x100f8) = iVar1;\n                }\n                if (*(iVar2 + 0x10118) != '\\0') {\n                    return iVar1;\n                }\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x40) = 0x41e095;\n                fcn.004141c0();\n                iVar1 = *0x78b460;\n                *(*0x20 + -0x18) = *(*0x20 + 0x20) * 0x2000;\n                LOCK();\n                *0x78b460 = *0x78b460 + *(*0x20 + 0x20) * 0x2000;\n                *(*0x20 + -0x40) = 0x41e0bb;\n                piVar4 = fcn.0042a900(iVar1);\n                iVar1 = *(*0x20 + -0x18);\n                LOCK();\n                iVar2 = *piVar4;\n                *piVar4 = *piVar4 - iVar1;\n                LOCK();\n                piVar4 = piVar4 + 1;\n                iVar3 = *piVar4;\n                *piVar4 = *piVar4 + iVar1;\n                *(*0x20 + -0x40) = 0x41e0dd;\n                fcn.0042aa00(iVar2, iVar3);\n                return *(*0x20 + -0x20);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x40) = 0x41e0f9;\n            in_RAX = fcn.0045c5c0(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = uVar5;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x41e113;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 989
    },
    "0041e140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e140(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x0041e286;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x0041e286:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x0041e286;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x0041e286;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x0041e286;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x0041e286;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x41e2c5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x41e2d5;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 862
    },
    "0041e8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041e8c0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0041e8c0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x41e9b8;\n                    fcn.00421140(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0041e97b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x41e94f;\n                    fcn.00421140(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0041e97b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041e9e6;\ncode_r0x0041e97b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x41e9e5;\n    in_RAX = fcn.0045c5a0(0xfc);\ncode_r0x0041e9e6:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x41e9f0;\n    fcn.00459ea0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0041e8c0;\n}\n",
        "token_count": 931
    },
    "0041ecc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041edf6)\n// WARNING: Removing unreachable block (ram,0x0041edc3)\n\nint64_t fcn.0041ecc0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10128);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x73589c;\ncode_r0x0041ed01:\n            if (0x10f < uVar3) {\n                if (*0x73589c != 0xffffffff) {\n                    LOCK();\n                    *0x73589c = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x0041ee46;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x0041ee3a;\n                *(*0x20 + -0x28) = 0x41ed6a;\n                iVar1 = fcn.0042a440();\ncode_r0x0041eda0:\n                if (iVar1 != 0) {\n                    if (*0x73589c < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x73589c = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x0041ed01;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x41ed97;\n                iVar1 = fcn.0042a440();\n                goto code_r0x0041eda0;\n            }\n            *(*0x20 + -0x28) = 0x41ee3a;\n            fcn.0045c5a0(2);\ncode_r0x0041ee3a:\n            *(*0x20 + -0x28) = 0x41ee46;\n            fcn.0045c5a0(2);\ncode_r0x0041ee46:\n            *(*0x20 + -0x28) = 0x41ee53;\n            in_RAX = fcn.0045c5a0(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41ee5e;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 813
    },
    "0041ee80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041ee80(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x41eea5;\n                iVar2 = fcn.0041f0c0();\n                if (iVar2 == -1) break;\n                *0x735898 = *0x735898 + 1;\n            }\n            *(*0x20 + -0x24) = *0x75b9a8;\n            iVar2 = 0;\n            uVar1 = *0x75b9a8;\n            while( true ) {\n                if (0x87 < iVar2) {\n                    *(*0x20 + -0x40) = 0x41ef47;\n                    fcn.0041cea0();\n                    *(*0x20 + -0x40) = 0x41ef4c;\n                    fcn.004246e0();\n                    return;\n                }\n                uVar3 = -((uVar1 >> 1 & 1) - 1);\n                if (1 < uVar3) break;\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x10) = iVar2 * 0xc0;\n                *(*0x20 + -0x18) = uVar3 * 5;\n                *(*0x20 + -0x40) = 0x41eee8;\n                fcn.0042a580(0x75bcc0);\n                *(*0x20 + -0x40) = 0x41ef0a;\n                fcn.0042a580(*(*0x20 + -0x10) + 0x75bd18);\n                iVar2 = *(*0x20 + -0x20) + 1;\n                uVar1 = *(*0x20 + -0x24);\n            }\n            *(*0x20 + -0x40) = 0x41ef65;\n            fcn.0045c5a0(2);\n        }\n        *(puVar4 + -8) = 0x41ef6b;\n        fcn.00459ea0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 622
    },
    "0041f0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0041f0c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    ulong arg2;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            if (*0x75b9ac != 0) {\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + -1;\n                return -1;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x48) = *0x75b9a8;\n            *(*0x20 + -0x44) = 0;\ncode_r0x0041f11d:\n            do {\n                *(*0x20 + -0x70) = 0x41f129;\n                iVar5 = fcn.0041ecc0();\n                if (iVar5 == 0) {\n                    LOCK();\n                    cVar4 = *0x75b9ac == 0;\n                    if (cVar4) {\n                        *0x75b9ac = 1;\n                    }\n                    iVar5 = -1;\ncode_r0x0041f205:\n                    *(*0x20 + -0x38) = iVar5;\n                    if (*(*0x20 + -0x44) != '\\0') {\n                        *(*0x20 + -0x44) = 0;\n                        LOCK();\n                        iVar2 = *0x75b9b0 + -1;\n                        bVar7 = *0x75b9b0 == 1;\n                        *0x75b9b0 = iVar2;\n                        if ((bVar7 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                            *(*0x20 + -0x52) = cVar4;\n                            *(*0x20 + -0x18) = *0x789e70;\n                            *(*0x20 + -0x20) = *0x75b9f0;\n                            *(*0x20 + -0x28) = *0x75b9e0;\n                            *(*0x20 + -0x30) = *0x75b9f8;\n                            *(*0x20 + -0x70) = 0x41f291;\n                            arg2 = *0x75b9e0;\n                            fcn.00433860();\n                            *(*0x20 + -0x70) = 0x41f2a5;\n                            fcn.00434160();\n                            *(*0x20 + -0x70) = 0x41f2b3;\n                            fcn.00433e60();\n                            *(*0x20 + -0x70) = 0x41f2c5;\n                            fcn.00434160();\n                            noname_0 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x41f2db;\n                            fcn.00433e60();\n                            *(*0x20 + -0x70) = 0x41f2ec;\n                            fcn.00434160();\n                            *(*0x20 + -0x70) = 0x41f2f6;\n                            fcn.00433e60();\n                            *(*0x20 + -0x70) = 0x41f307;\n                            fcn.00434160();\n                            *(*0x20 + -0x70) = 0x41f312;\n                            fcn.00433b60(noname_0, arg2);\n                            *(*0x20 + -0x70) = 0x41f325;\n                            fcn.00434160();\n                            *(*0x20 + -0x70) = 0x41f32a;\n                            fcn.004338e0();\n                            cVar4 = *(*0x20 + -0x52);\n                            iVar5 = *(*0x20 + -0x38);\n                        }\n                    }\n                    if (cVar4 != '\\0') {\n                        *(*0x20 + -0x68) = 0x69e598;\n                        *(*0x20 + -0x70) = 0x41f348;\n                        fcn.00459d60();\n                        *0x7358c0 = 1;\n                        iVar5 = *(*0x20 + -0x38);\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return iVar5;\n                }\n                if (*(iVar5 + 99) == '\\x01') {\n                    if (*(iVar5 + 0x58) == *(*0x20 + -0x48) + -2) {\n                        if (*(*0x20 + -0x44) == '\\0') {\n                            LOCK();\n                            *0x75b9b0 = *0x75b9b0 + 1;\n                            *(*0x20 + -0x44) = 1;\n                        }\n                        LOCK();\n                        if (*(*0x20 + -0x48) + -2 == *(iVar5 + 0x58)) {\n                            *(iVar5 + 0x58) = *(*0x20 + -0x48) + -1;\n                            bVar7 = true;\n                        }\n                        else {\n                            iVar5 = 0;\n                            bVar7 = false;\n                        }\n                    }\n                    else {\n                        iVar5 = 0;\n                        bVar7 = false;\n                    }\n                    *(*0x20 + -0x40) = iVar5;\n                    if (bVar7) {\n                        *(*0x20 + -0x38) = *(iVar5 + 0x20);\n                        *(*0x20 + -0x70) = 0x41f1c9;\n                        cVar4 = fcn.0041f7c0();\n                        if (cVar4 == '\\0') {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(*0x20 + -0x38);\n                            LOCK();\n                            *0x75ba10 = *0x75ba10 + iVar5;\n                        }\n                        cVar4 = false;\n                        goto code_r0x0041f205;\n                    }\n                    goto code_r0x0041f11d;\n                }\n                iVar2 = *(iVar5 + 0x58);\n                iVar3 = *(*0x20 + -0x48);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x51) = *(iVar5 + 99);\n            *(*0x20 + -0x4c) = iVar2;\n            *(*0x20 + -0x50) = iVar3;\n            *(*0x20 + -0x70) = 0x41f39d;\n            fcn.00433860();\n            *(*0x20 + -0x70) = 0x41f3ae;\n            fcn.00434160();\n            *(*0x20 + -0x70) = 0x41f3bb;\n            fcn.00433e60();\n            *(*0x20 + -0x70) = 0x41f3cc;\n            fcn.00434160();\n            *(*0x20 + -0x70) = 0x41f3d5;\n            fcn.00433e60();\n            *(*0x20 + -0x70) = 0x41f3e6;\n            fcn.00434160();\n            *(*0x20 + -0x70) = 0x41f3ef;\n            fcn.00433e60();\n            *(*0x20 + -0x70) = 0x41f3f4;\n            fcn.00433ac0();\n            *(*0x20 + -0x70) = 0x41f3f9;\n            fcn.004338e0();\n            *(*0x20 + -0x70) = 0x41f40a;\n            fcn.004320e0();\n        }\n        *(puVar6 + -8) = 0x41f410;\n        fcn.00459ea0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2013
    },
    "0041f420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f420(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                *(*0x20 + -0x38) = *0x75b9a8;\n                *(*0x20 + -0x34) = 0;\n                if (*(in_RAX + 0x58) == *(*0x20 + -0x38) + -2) {\n                    if (*(*0x20 + -0x34) == '\\0') {\n                        LOCK();\n                        *0x75b9b0 = *0x75b9b0 + 1;\n                        *(*0x20 + -0x34) = 1;\n                    }\n                    LOCK();\n                    if (*(*0x20 + -0x38) + -2 == *(in_RAX + 0x58)) {\n                        *(in_RAX + 0x58) = *(*0x20 + -0x38) + -1;\n                        bVar7 = true;\n                        iVar5 = in_RAX;\n                    }\n                    else {\n                        bVar7 = false;\n                        iVar5 = 0;\n                    }\n                }\n                else {\n                    bVar7 = false;\n                    iVar5 = 0;\n                }\n                *(*0x20 + -0x30) = iVar5;\n                if (bVar7) {\n                    *(*0x20 + -0x50) = 0x41f611;\n                    fcn.0041f7c0();\n                    if (*(*0x20 + -0x34) != '\\0') {\n                        *(*0x20 + -0x34) = 0;\n                        LOCK();\n                        iVar2 = *0x75b9b0 + -1;\n                        bVar7 = *0x75b9b0 == 1;\n                        *0x75b9b0 = iVar2;\n                        if ((bVar7 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                            *(*0x20 + -0x10) = *0x789e70;\n                            *(*0x20 + -0x18) = *0x75b9f0;\n                            *(*0x20 + -0x20) = *0x75b9e0;\n                            *(*0x20 + -0x28) = *0x75b9f8;\n                            *(*0x20 + -0x50) = 0x41f694;\n                            uVar4 = *0x75b9e0;\n                            fcn.00433860();\n                            *(*0x20 + -0x50) = 0x41f6a5;\n                            fcn.00434160();\n                            *(*0x20 + -0x50) = 0x41f6b3;\n                            fcn.00433e60();\n                            *(*0x20 + -0x50) = 0x41f6c5;\n                            fcn.00434160();\n                            uVar3 = *(*0x20 + -0x18);\n                            *(*0x20 + -0x50) = 0x41f6db;\n                            fcn.00433e60();\n                            *(*0x20 + -0x50) = 0x41f6ec;\n                            fcn.00434160();\n                            *(*0x20 + -0x50) = 0x41f6f6;\n                            fcn.00433e60();\n                            *(*0x20 + -0x50) = 0x41f707;\n                            fcn.00434160();\n                            *(*0x20 + -0x50) = 0x41f712;\n                            fcn.00433b60(uVar3, uVar4);\n                            *(*0x20 + -0x50) = 0x41f725;\n                            fcn.00434160();\n                            *(*0x20 + -0x50) = 0x41f72a;\n                            fcn.004338e0();\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(*0x20 + -0x34) != '\\0') {\n                    *(*0x20 + -0x34) = 0;\n                    LOCK();\n                    iVar2 = *0x75b9b0 + -1;\n                    bVar7 = *0x75b9b0 == 1;\n                    *0x75b9b0 = iVar2;\n                    if ((bVar7 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                        *(*0x20 + -0x10) = *0x789e70;\n                        *(*0x20 + -0x18) = *0x75b9f0;\n                        *(*0x20 + -0x20) = *0x75b9e0;\n                        *(*0x20 + -0x28) = *0x75b9f8;\n                        *(*0x20 + -0x50) = 0x41f565;\n                        uVar4 = *0x75b9e0;\n                        fcn.00433860();\n                        *(*0x20 + -0x50) = 0x41f576;\n                        fcn.00434160();\n                        *(*0x20 + -0x50) = 0x41f585;\n                        fcn.00433e60();\n                        *(*0x20 + -0x50) = 0x41f596;\n                        fcn.00434160();\n                        uVar3 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x50) = 0x41f5ac;\n                        fcn.00433e60();\n                        *(*0x20 + -0x50) = 0x41f5bd;\n                        fcn.00434160();\n                        *(*0x20 + -0x50) = 0x41f5c7;\n                        fcn.00433e60();\n                        *(*0x20 + -0x50) = 0x41f5d8;\n                        fcn.00434160();\n                        *(*0x20 + -0x50) = 0x41f5e5;\n                        fcn.00433b60(uVar3, uVar4);\n                        *(*0x20 + -0x50) = 0x41f5f6;\n                        fcn.00434160();\n                        *(*0x20 + -0x50) = 0x41f5fb;\n                        fcn.004338e0();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x38)) || (*(in_RAX + 0x58) == *(*0x20 + -0x38) + 3)) break;\n                    *(*0x20 + -0x48) = 0x69e5a0;\n                    *(*0x20 + -0x50) = 0x41f745;\n                    fcn.00459d60();\n                    in_RAX = *(*0x20 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x50) = 0x41f78b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x41f796;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1891
    },
    "00420680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420680(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x75b9f8 == 0.0) {\n        return;\n    }\n    if (*0x73b7b0 != '\\0') {\n        fcn.0044f440();\n    }\n    do {\n        iVar1 = *0x75b9e8;\n        uVar3 = (*0x789e70 - *0x75b9f0) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x75b9f8 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x75b9e0 - iVar1) {\ncode_r0x00420799:\n                if (*0x73b7b0 != '\\0') {\n                    fcn.0044f540();\n                }\n                return;\n            }\n            iVar2 = fcn.0041f0c0(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x75b9f8 = 0.0;\n                goto code_r0x00420799;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x75b9e8 == iVar1);\n    } while( true );\n}\n",
        "token_count": 463
    },
    "00420840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420840(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x4208d5;\n                fcn.004207e0();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x420899;\n                    fcn.004211a0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x4208a7;\n                    iVar2 = fcn.00420ec0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x7895f0 == 1)) {\n                    *(*0x20 + -0x28) = 0x420913;\n                    fcn.0041c4e0();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x420927;\n            in_RAX = fcn.0045c5a0(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x420937;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 791
    },
    "00420960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420960(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x4209a6;\n                fcn.004207e0();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 < 1) {\n                    if ((cVar6 != '\\0') && (*0x7895f0 == 1)) {\n                        *(*0x20 + -0x58) = 0x420aa5;\n                        fcn.0041c4e0();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x420ab7;\n                    fcn.004211a0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x420ac5;\n                    iVar3 = fcn.00420ec0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x00420b06;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x420a58;\n                    fcn.0045cee0(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x420b06;\n            fcn.0045c660(arg1);\ncode_r0x00420b06:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x420b13;\n            in_RAX = fcn.0045c660(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x420b2d;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1376
    },
    "00420b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00420b60(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x420b8a;\n                fcn.004207e0();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x420bbb;\n                    iVar3 = fcn.00421200();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x420bd4;\n                    fcn.00421140();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x420c25;\n            in_RAX = fcn.0045c5a0(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420c30;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "00420c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00420c40(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00421140();\n        }\n        else {\n            fcn.004211a0();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00421140();\n        }\n        else {\n            fcn.004211a0();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x78a0c0 = *0x78a0c0 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x789e88;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x789e88 = *0x789e88 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 372
    },
    "00420d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420d40(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.004212a0();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.004211a0();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.00420ec0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x7895f0 == 1) {\n            fcn.0041c4e0();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00420e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420e00(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x420e36;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x420e45;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00420e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420e60(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x420e96;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x420ea5;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00420ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420ec0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x78a048 == 0) {\n        piVar1 = NULL;\n        goto code_r0x00420ee9;\n    }\n    while( true ) {\n        if (*0x78a048 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x78a048 >> 0x13) << 3;\n            *0x78a048 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00420e60();\n            piVar1 = piStack32;\n        }\ncode_r0x00420ee9:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x78a098 != 0) {\n            fcn.00409e80();\n            iStack72 = *0x78a098;\n            if (*0x78a098 != 0) {\n                fcn.004237e0();\n                fcn.00423960();\n            }\n            fcn.0040a0a0();\n        }\n        if (iStack72 != 0) goto code_r0x00420fde;\n        auStack24 = CONCAT88(&iStack72, 0x4210e0);\n        fcn.00459d60();\n        if (iStack72 != 0) break;\n        fcn.004320e0();\n    }\n    fcn.00409e80();\n    fcn.00423960();\n    fcn.0040a0a0();\ncode_r0x00420fde:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.00409d80();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00421140();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 661
    },
    "00421360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421360(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x421385;\n            fcn.00409e80();\n            if (*0x78a040 == 0) {\n                *0x78a048 = 0;\n                if (*0x78a0a8 != NULL) {\n                    for (; *0x78a0a8 != NULL; *0x78a0a8 = **0x78a0a8) {\n                        (*0x78a0a8)[2] = 0x78a098;\n                    }\n                    if (*0x78a098 == 0) {\n                        *0x78a098 = *0x78a0a8;\n                        *0x78a0a0 = *0x78a0b0;\n                        *0x78a0a8 = in_XMM15;\n                    }\n                    else {\n                        **0x78a0b0 = *0x78a098;\n                        *(*0x78a098 + 8) = *0x78a0b0;\n                        *0x78a098 = *0x78a0a8;\n                        *0x78a0a8 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x4213b8;\n                fcn.0040a0a0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42144b;\n            fcn.004320e0();\n        }\n        *(puVar1 + -8) = 0x421451;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "00421460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00421460(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    if ((*0x7895f0 == 0) && (*0x78a098 != 0)) {\n        fcn.00459d60();\n        uVar1 = *0x78a098;\n        fcn.0040a0a0();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.0040a0a0();\n    return 0;\n}\n",
        "token_count": 182
    },
    "004217c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004217c1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x75ba18);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00421861": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00421861(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x75ba18);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00421900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421900(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *(in_RAX + 0x16a40) = 0x88;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16a48) = 0x69e520;\n        *(in_RAX + 0x16a50) = in_RAX;\n    }\n    else {\n        uVar2 = 0x69e520;\n        fcn.0045c220(arg1, 0x69e520, arg3, in_R9);\n        in_RAX = fcn.0045c100(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16a58) = in_XMM15;\n    *(in_RAX + 0x16a68) = 0;\n    *(in_RAX + 0x16a70) = 0;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16a78) = 0x78b488;\n    }\n    else {\n        in_RAX = fcn.0045c220(arg1, 0x78b488, arg3, in_R9);\n    }\n    *(in_RAX + 0x16a80) = 1;\n    *(in_RAX + 0x16a88) = 0x490;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16a90) = in_XMM15;\n    }\n    else {\n        uVar2 = 0;\n        fcn.0045c220(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.0045c260(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16aa0) = in_XMM15;\n    *(in_RAX + 0x16ab0) = 0;\n    *(in_RAX + 0x16ab8) = 0;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16ac0) = 0x78b498;\n    }\n    else {\n        in_RAX = fcn.0045c220(arg1, 0x78b498, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ac8) = 1;\n    *(in_RAX + 0x16ad0) = 0x30;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16ad8) = in_XMM15;\n    }\n    else {\n        uVar2 = 0;\n        fcn.0045c220(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.0045c260(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ae8) = in_XMM15;\n    *(in_RAX + 0x16af8) = 0;\n    *(in_RAX + 0x16b00) = 0;\n    if (*0x789810 == 0) {\n        uVar2 = 0x78b4c0;\n        *(in_RAX + 0x16b08) = 0x78b4c0;\n    }\n    else {\n        uVar2 = 0x78b4c0;\n        in_RAX = fcn.0045c220(arg1, 0x78b4c0, arg3, in_R9);\n    }\n    *(in_RAX + 0x16b10) = 1;\n    *(in_RAX + 0x16b18) = 0x18;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16b20) = in_XMM15;\n    }\n    else {\n        fcn.0045c260(arg1, uVar2, arg3, in_R9);\n        arg3 = 0;\n        in_RAX = fcn.0045c280(arg1, uVar2, 0, in_R9);\n    }\n    *(in_RAX + 0x16b30) = in_XMM15;\n    *(in_RAX + 0x16b40) = 0;\n    *(in_RAX + 93000) = 0;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16b50) = uVar2;\n    }\n    else {\n        in_RAX = fcn.0045c220(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16b58) = 1;\n    *(in_RAX + 0x16b60) = 0x18;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16b68) = in_XMM15;\n    }\n    else {\n        fcn.0045c260(arg1, uVar2, arg3, in_R9);\n        arg3 = 0;\n        in_RAX = fcn.0045c280(arg1, uVar2, 0, in_R9);\n    }\n    *(in_RAX + 0x16b78) = in_XMM15;\n    *(in_RAX + 0x16b88) = 0;\n    *(in_RAX + 0x16b90) = 0;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16b98) = uVar2;\n    }\n    else {\n        in_RAX = fcn.0045c220(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ba0) = 1;\n    *(in_RAX + 0x16bb0) = 0x18;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16bb8) = in_XMM15;\n    }\n    else {\n        fcn.0045c260(arg1, uVar2, arg3, in_R9);\n        in_RAX = fcn.0045c260(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16bc8) = in_XMM15;\n    *(in_RAX + 0x16bd8) = 0;\n    *(in_RAX + 0x16be0) = 0;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x16be8) = uVar2;\n    }\n    else {\n        in_RAX = fcn.0045c220(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16bf0) = 1;\n    *(in_RAX + 0x16a80) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10440 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00424860(0x78b4b8);\n    return;\n}\n",
        "token_count": 1745
    },
    "00421cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421cc0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10188)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x73b7b0 != '\\0') {\n        fcn.0044f440();\n    }\n    arg1 = *(in_RAX + 0x10400);\n    bVar6 = false;\ncode_r0x00421d6d:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00421e77:\n            if (bVar6) {\n                fcn.0040a0a0();\n            }\n            if (*0x73b7b0 != '\\0') {\n                fcn.0044f540();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10190);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10190;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00421d6d;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10188;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10188) = 0x8000000000000000;\n            goto code_r0x00421e77;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.00409e80();\n        }\n        uVar7 = fcn.00421f00(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10190) = *(in_RAX + 0x10190) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 861
    },
    "00421f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00421f00(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint8_t uVar3;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar5;\n    int64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uint64_t uVar10;\n    int64_t iVar11;\n    bool bVar12;\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RSI;\n        arg1_00 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0xa0) = *0x75b9a8;\n            *(*0x20 + -0x9c) = 0;\n            unaff_RDI = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x88) = unaff_RDI;\n                    if (*(*0x20 + -0x9c) != '\\0') {\n                        *(*0x20 + -0x9c) = 0;\n                        LOCK();\n                        iVar1 = *0x75b9b0 + -1;\n                        bVar12 = *0x75b9b0 == 1;\n                        *0x75b9b0 = iVar1;\n                        if ((bVar12 && *0x75b9ac != 0) && (0 < *0x7899f0)) {\n                            *(*0x20 + -0x40) = *0x789e70;\n                            *(*0x20 + -0x48) = *0x75b9f0;\n                            *(*0x20 + -0x50) = *0x75b9e0;\n                            *(*0x20 + -0x58) = *0x75b9f8;\n                            *(*0x20 + -0xc0) = 0x4220cd;\n                            arg2 = *0x75b9e0;\n                            fcn.00433860();\n                            *(*0x20 + -0xc0) = 0x4220de;\n                            fcn.00434160();\n                            *(*0x20 + -0xc0) = 0x4220ec;\n                            fcn.00433e60();\n                            *(*0x20 + -0xc0) = 0x4220fd;\n                            fcn.00434160();\n                            noname_0 = *(*0x20 + -0x48);\n                            *(*0x20 + -0xc0) = 0x422113;\n                            fcn.00433e60();\n                            *(*0x20 + -0xc0) = 0x422125;\n                            fcn.00434160();\n                            *(*0x20 + -0xc0) = 0x42212f;\n                            fcn.00433e60();\n                            *(*0x20 + -0xc0) = 0x422145;\n                            fcn.00434160();\n                            *(*0x20 + -0xc0) = 0x422150;\n                            fcn.00433b60(noname_0, arg2);\n                            *(*0x20 + -0xc0) = 0x422165;\n                            fcn.00434160();\n                            *(*0x20 + -0xc0) = 0x42216a;\n                            fcn.004338e0();\n                            unaff_RDI = *(*0x20 + -0x88);\n                        }\n                    }\n                    if (*0x73b7b0 != '\\0') {\n                        *(*0x20 + -0xc0) = 0x42218f;\n                        fcn.0040a0a0();\n                        *(*0x20 + -0xc0) = 0x4221a8;\n                        fcn.0044f4a0(*(*0x20 + -0x88));\n                        *(*0x20 + -0xc0) = 0x4221b7;\n                        fcn.00409e80();\n                        unaff_RDI = *(*0x20 + -0x88);\n                    }\n                    return unaff_RDI;\n                }\n                uVar5 = unaff_RSI >> 9;\n                arg1_00 = arg3;\n                if (arg1 <= uVar5) goto code_r0x004223ea;\n                uVar6 = *(unaff_RBX + uVar5 * 8);\n                uVar5 = uVar6 >> 0x14;\n                if (0x3f < uVar5) goto code_r0x004223dd;\n                uVar5 = *(*(in_RAX + 0x10198 + uVar5 * 8) + (uVar6 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar7 = uVar6 >> 3;\n                if (0x40 < uVar7) break;\n                iVar11 = uVar7 - 0x40;\n                uVar7 = iVar11 >> 0x3f & uVar7;\n                iVar8 = uVar5 + uVar7 + 0x21000;\n                iVar9 = uVar5 + uVar7 + 0x21040;\n                arg1_00 = arg3 >> 3;\n                if (-iVar11 < arg1_00 || -arg1_00 == iVar11) {\n                    arg1_00 = -iVar11;\n                }\n                *(*0x20 + -0x28) = arg3;\n                *(*0x20 + -0x70) = uVar5;\n                *(*0x20 + -0x30) = uVar6;\n                *(*0x20 + -0x18) = iVar8;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + -0x80) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RSI;\n                for (uVar7 = 0; uVar7 < arg1_00; uVar7 = uVar7 + 1) {\n                    *(*0x20 + -0x10) = iVar8 + uVar7;\n                    if (arg1_00 <= uVar7) {\ncode_r0x004223c5:\n                        *(*0x20 + -0xc0) = 0x4223d0;\n                        fcn.0045c5a0(arg1_00);\n                        goto code_r0x004223d0;\n                    }\n                    uVar3 = *(iVar8 + uVar7) & ~*(uVar7 + iVar9);\n                    if (uVar3 != 0) {\n                        *(*0x20 + -0x78) = uVar7;\n                        for (unaff_RBX = 0; unaff_RBX < 8; unaff_RBX = unaff_RBX + 1) {\n                            if ((1 << (unaff_RBX & 0x1f) & uVar3) != 0) {\n                                uVar10 = uVar6 + uVar7 * 8 + unaff_RBX;\n                                if (0x1ff < uVar10) {\n                                    *(*0x20 + -0xc0) = 0x4223c5;\n                                    fcn.0045c5c0(0x200);\n                                    goto code_r0x004223c5;\n                                }\n                                iVar11 = *(uVar5 + 0x20000 + uVar10 * 8);\n                                if (*(iVar11 + 0x58) == *(*0x20 + -0xa0) + -2) {\n                                    if (*(*0x20 + -0x9c) == '\\0') {\n                                        LOCK();\n                                        *0x75b9b0 = *0x75b9b0 + 1;\n                                        *(*0x20 + -0x9c) = 1;\n                                    }\n                                    LOCK();\n                                    if (*(*0x20 + -0xa0) + -2 == *(iVar11 + 0x58)) {\n                                        *(iVar11 + 0x58) = *(*0x20 + -0xa0) + -1;\n                                        in_RAX = *(*0x20 + 8);\n                                        bVar12 = true;\n                                    }\n                                    else {\n                                        in_RAX = *(*0x20 + 8);\n                                        iVar11 = 0;\n                                        bVar12 = false;\n                                    }\n                                }\n                                else {\n                                    iVar11 = 0;\n                                    bVar12 = false;\n                                }\n                                *(*0x20 + -0x98) = iVar11;\n                                if (bVar12) {\n                                    *(*0x20 + -0x60) = unaff_RBX;\n                                    *(*0x20 + -0x68) = unaff_RDI;\n                                    *(*0x20 + -0x90) = *(iVar11 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x422313;\n                                    fcn.0040a0a0();\n                                    *(*0x20 + -0xc0) = 0x42231f;\n                                    uVar2 = fcn.0041f7c0();\n                                    *(*0x20 + -0xa1) = uVar2;\n                                    *(*0x20 + -0xc0) = 0x422332;\n                                    fcn.00409e80();\n                                    unaff_RDI = *(*0x20 + -0x68);\n                                    if (*(*0x20 + -0xa1) != '\\0') {\n                                        unaff_RDI = *(*0x20 + -0x90) + *(*0x20 + -0x68);\n                                    }\n                                    uVar3 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x78) + *(*0x20 + -0x20));\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x60);\n                                    uVar5 = *(*0x20 + -0x70);\n                                    arg1_00 = *(*0x20 + -0x80);\n                                    iVar8 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x30);\n                                    uVar7 = *(*0x20 + -0x78);\n                                }\n                                unaff_RSI = *(*0x20 + -0x38);\n                                iVar9 = *(*0x20 + -0x20);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            arg3 = *(*0x20 + -0x28);\n                        }\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                unaff_RSI = unaff_RSI + arg1_00 * 8;\n                arg3 = arg3 + arg1_00 * -8;\n            }\ncode_r0x004223d0:\n            *(*0x20 + -0xc0) = 0x4223dd;\n            fcn.0045c680(0x40);\ncode_r0x004223dd:\n            arg1 = 0x40;\n            *(*0x20 + -0xc0) = 0x4223ea;\n            fcn.0045c5c0(0x40);\ncode_r0x004223ea:\n            *(*0x20 + -0xc0) = 0x4223f2;\n            in_RAX = fcn.0045c5c0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = uVar5;\n        *(puVar4 + 0x30) = arg1_00;\n        *(puVar4 + -8) = 0x422416;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2973
    },
    "004228e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004228e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x1228) != 0) goto code_r0x00422937;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0x1228) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00422937:\n                uVar1 = *(iVar2 + 0x1228) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0x1228 + *(iVar2 + 0x1228) * 8);\n                    *(iVar2 + 0x1228) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045c5a0(0x80);\n            }\n            uVar3 = fcn.00415780(iVar2 + 0x16a40);\n            *(iStack16 + 0x1230 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00415780();\n    return uVar3;\n}\n",
        "token_count": 470
    },
    "00423960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423960(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x4239dd;\n            fcn.00433860();\n            *(*0x20 + -0x38) = 0x4239ee;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x4239f8;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x4239fd;\n            fcn.00433a80();\n            *(*0x20 + -0x38) = 0x423a07;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x423a0c;\n            fcn.00433a80();\n            *(*0x20 + -0x38) = 0x423a16;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x423a1b;\n            fcn.00433a80();\n            *(*0x20 + -0x38) = 0x423a25;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x423a2a;\n            fcn.00433ac0();\n            *(*0x20 + -0x38) = 0x423a2f;\n            fcn.004338e0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x423a45;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x423a55;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 813
    },
    "00423a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00423a80(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x423aa7;\n            iVar6 = fcn.00421860();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x423ace;\n                fcn.0041f420();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x423afe;\n                fcn.00409e80();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x423b53;\n                        fcn.0040a0a0();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x75ba18) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x423c25;\n                        fcn.0040a0a0();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x423c6b;\n                    fcn.0045c5c0(0x40);\n                }\n                *(*0x20 + -0x48) = 0x423c78;\n                fcn.0045c5c0(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x423c89;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x423c99;\n        fcn.00459ea0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1423
    },
    "00423cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00423cc0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x423ce6;\n            iVar4 = fcn.00421860();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x423d0d;\n                fcn.0041f420();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x423d2f;\n                fcn.00409e80();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x00423d70;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x00423d70:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00423dfc;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x75ba18) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00423dfc:\n                        *(*0x20 + -0x48) = 0x423e06;\n                        fcn.0040a0a0();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x423e50;\n                    fcn.0045c5c0(0x40);\n                }\n                *(*0x20 + -0x48) = 0x423e5d;\n                fcn.0045c5c0(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x423e6e;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x423e7d;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1217
    },
    "00423ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00423ea0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    puVar5 = fcn.00415780();\n    fcn.0040a0a0();\n    *(puVar5 + 10) = 1;\n    if (*0x789810 == 0) {\n        puVar5[2] = unaff_RBX;\n    }\n    else {\n        fcn.0045c200(unaff_RBX);\n    }\n    puVar5[3] = arg1;\n    if (*0x789810 == 0) {\n        puVar5[4] = unaff_RDI;\n        puVar5[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045c220(puVar5 + 4, unaff_RDI, in_R8, in_R9);\n        fcn.0045c200(uStack0000000000000028);\n    }\n    cVar4 = fcn.00423a80();\n    if (cVar4 != '\\0') {\n        if (*0x7895f0 != 0) {\n            fcn.00410200(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.0041ace0();\n            fcn.0041ab40(0x71d180);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.00409e80();\n    *0x762380 = *0x762380 - *0x762350;\n    *puVar5 = *0x762368;\n    *0x762368 = puVar5;\n    fcn.0040a0a0();\n    return 0;\n}\n",
        "token_count": 640
    },
    "00424860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00424860(ulong arg1)\n\n{\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x71e700 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x789810 == 0) {\n                    *(in_RAX + 0x10110) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x4248af;\n                    in_RAX = fcn.0045c200();\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4248c6;\n                fcn.004296c0();\n                *(*0x20 + -0x28) = 0x4248d0;\n                fcn.00426b20();\n                arg1_00 = *0x71d2a0;\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x10078) = *0x71d2a0;\n                if (*0x789810 == 0) {\n                    *(arg2 + 0x10108) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x42490b;\n                    fcn.0045c100(arg1_00, arg2, in_R8, in_R9);\n                }\n                *(arg2 + 0x100f8) = *0x71d2a0;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x71e700;\n            *(*0x20 + -0x28) = 0x42492d;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x42493e;\n            fcn.00434160();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x42495a;\n            fcn.00433f60(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x42495f;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x424965;\n            fcn.004338e0();\n            *(*0x20 + -0x28) = 0x42496a;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x42497b;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x424985;\n            fcn.00433f60();\n            *(*0x20 + -0x28) = 0x42498a;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x42498f;\n            fcn.004338e0();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x4249a5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x4249ba;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1004
    },
    "004255a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004255a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10118) != '\\0') goto code_r0x00425613;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x75ba18);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00425613:\n                *(*0x20 + -0x20) = 0x42561e;\n                iVar1 = fcn.00429880();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x71d298;\n            }\n            *(*0x20 + -0x20) = 0x42564c;\n            in_RAX = fcn.0045c5c0(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42565c;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "00426420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00426420(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x10078);\n            uVar1 = uVar3 + 0x800000000000;\n            uVar5 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar5 || *(in_RAX + 0x10088) == uVar5) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = (uVar3 & 0x3fffff) >> 0xd;\n            if (-(uVar3 - 0x200) < unaff_RBX) goto code_r0x00426539;\n            uVar6 = *(in_RAX + 0x68);\n            if (uVar5 < uVar6) {\n                uVar6 = *(*(in_RAX + 0x60) + uVar5 * 8);\n                if (uVar6 < 0) {\n                    uVar6 = 0x200000;\n                }\n                else {\n                    uVar6 = uVar6 >> 0x15 & 0x1fffff;\n                }\n                if (uVar6 < unaff_RBX) {\ncode_r0x00426539:\n                    *(*0x20 + -0x40) = 0x42653e;\n                    iVar2 = fcn.00425680();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x71d2a0;\n                        }\n                        return 0;\n                    }\ncode_r0x00426578:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x426594;\n                    fcn.00425220(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar5;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x40) = 0x426505;\n                    iVar2 = fcn.00427f40(uVar3);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00426578;\n                    }\n                    *(*0x20 + -0x40) = 0x4265e7;\n                    fcn.00433860();\n                    *(*0x20 + -0x40) = 0x4265f8;\n                    fcn.00434160();\n                    *(*0x20 + -0x40) = 0x426605;\n                    fcn.00433e60();\n                    *(*0x20 + -0x40) = 0x426616;\n                    fcn.00434160();\n                    *(*0x20 + -0x40) = 0x426625;\n                    fcn.00433e60();\n                    *(*0x20 + -0x40) = 0x42662a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x40) = 0x42662f;\n                    fcn.004338e0();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x426645;\n                    fcn.00433860();\n                    *(*0x20 + -0x40) = 0x426656;\n                    fcn.00434160();\n                    *(*0x20 + -0x40) = 0x42666a;\n                    fcn.00433e60();\n                    *(*0x20 + -0x40) = 0x42667b;\n                    fcn.00434160();\n                    *(*0x20 + -0x40) = 0x426685;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x40) = 0x42668a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x40) = 0x42668f;\n                    fcn.004338e0();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x4266a5;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x40) = 0x4266b2;\n                fcn.0045c5c0(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x4266bd;\n            in_RAX = fcn.0045c5c0(uVar6);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4266cd;\n        fcn.0045e5a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1563
    },
    "004266e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004266e0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX + 0x800000000000;\n            if (uVar5 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            uVar7 = (arg1 * 0x2000 + unaff_RBX) - 1;\n            uVar6 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            if (*(in_RAX + 0x10100) + 0x800000000000U < uVar6) {\n                *(in_RAX + 0x10100) = uVar7;\n            }\n            if (arg1 == 1) {\n                if (uVar5 >> 0x23 < 0x2000) {\n                    uVar7 = (unaff_RBX & 0x3fffff) >> 0x13;\n                    if (uVar7 < 8) {\n                        puVar1 = (uVar5 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar5 >> 0x23) * 8) + uVar7 * 8;\n                        *puVar1 = *puVar1 & ~(1 << ((unaff_RBX & 0x3fffff) >> 0xd & 0x3f));\n                        goto code_r0x00426896;\n                    }\n                    *(*0x20 + -0x60) = 0x4268bc;\n                    fcn.0045c5c0(8);\n                }\n                *(*0x20 + -0x60) = 0x4268c9;\n                fcn.0045c5c0(0x2000);\n                goto code_r0x004268c9;\n            }\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar7 = (uVar7 & 0x3fffff) >> 0xd;\n            if (uVar6 >> 0x16 == uVar5 >> 0x16) {\n                uVar5 = uVar5 >> 0x23;\n                if (0x1fff < uVar5) {\n                    *(*0x20 + -0x60) = 0x4268e7;\n                    uVar7 = fcn.0045c5c0(0x2000);\n                    goto code_r0x004268e7;\n                }\n                *(*0x20 + -0x60) = 0x426834;\n                fcn.004279e0((uVar7 - unaff_RBX) + 1);\ncode_r0x004268c9:\n                arg1 = *(*0x20 + -0x10);\ncode_r0x00426896:\n                *(*0x20 + -0x60) = 0x4268a5;\n                fcn.00424c40(arg1);\n                return;\n            }\n            if (uVar5 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = uVar6 >> 0x16;\n                *(*0x20 + -0x28) = uVar5 >> 0x16;\n                *(*0x20 + -0x30) = uVar7;\n                *(*0x20 + -0x60) = 0x4267e8;\n                fcn.004279e0(-(unaff_RBX - 0x200));\n                uVar5 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x28);\n                uVar7 = *(*0x20 + -0x20);\n                while (arg1 = iVar2 + 1,  arg1 < uVar7) {\n                    uVar7 = arg1 >> 0xd;\n                    if (0x1fff < uVar7) goto code_r0x0042697d;\ncode_r0x004268e7:\n                    *(*0x20 + -0x38) = arg1;\n                    uVar3 = *(uVar5 + 0x78 + uVar7 * 8);\n                    *(*0x20 + -0x60) = 0x426907;\n                    fcn.00427b00(uVar3, (arg1 & 0x1fff) << 7);\n                    uVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x20);\n                    uVar7 = unaff_RBX;\n                    iVar2 = *(*0x20 + -0x38);\n                }\n                if (*(*0x20 + -0x18) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x42696e;\n                    fcn.004279e0(*(*0x20 + -0x30) + 1);\n                    goto code_r0x004268c9;\n                }\n                *(*0x20 + -0x60) = 0x42697d;\n                fcn.0045c5c0(0x2000);\ncode_r0x0042697d:\n                *(*0x20 + -0x60) = 0x426987;\n                fcn.0045c5c0(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x426994;\n            in_RAX = fcn.0045c5c0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4269a9;\n        fcn.0045e5a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1638
    },
    "00426b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426b20(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x71e740;\n            *(*0x20 + -0x28) = *0x71e748;\n            *(*0x20 + -0x24) = *0x71e74c;\n            *(*0x20 + -0x20) = *0x71e750;\n            *(*0x20 + -0x1c) = *0x71e754;\n            *(*0x20 + -0x18) = *0x71e758;\n            *(*0x20 + -0x14) = *0x71e75c;\n            *(*0x20 + -0x10) = *0x71e760;\n            *(*0x20 + -0xc) = *0x71e764;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    return;\n                }\n                *(*0x20 + -0x58) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar5 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x70) = 0x426bbd;\n                iVar3 = fcn.00414740(arg1, *0x789738 + uVar5 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar1 = *(*0x20 + -0x50);\n                *(*0x20 + -0x38) = uVar1;\n                iVar2 = *(*0x20 + 8);\n                iVar3 = *(*0x20 + -0x58);\n                noname_1 = *(*0x20 + -0x48);\n                *(iVar2 + 8 + iVar3 * 0x18) = 0;\n                *(iVar2 + 0x10 + iVar3 * 0x18) = uVar1;\n                if (*0x789810 == 0) {\n                    *(iVar2 + iVar3 * 0x18) = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x426c2d;\n                    fcn.0045c220(arg1, noname_1, iVar3, iVar3 * 3);\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x70) = 0x426c4d;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x426c58;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 925
    },
    "004271a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004271a0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.00427260();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "004273a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004273a0(void)\n\n{\n    uint64_t *puVar1;\n    uchar (*pauVar2) [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004273a0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar5 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        uVar3 = *in_RAX;\n        uVar7 = uVar3 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar6 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar6;\n        uVar4 = (uVar3 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar4;\n        uVar3 = 0;\n        do {\n            if (0x3f < uVar3) {\n                if (*in_RAX + 0x800000000000 < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42754c;\n                fcn.00424c40(0x40);\n                pauVar2 = *(*0x20 + 8);\n                *pauVar2 = in_XMM15;\n                *pauVar2[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar3 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00427585;\n                uVar8 = uVar4 + uVar3 >> 6;\n                if (7 < uVar8) goto code_r0x00427574;\n                puVar1 = (uVar6 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8) + uVar8 * 8;\n                *puVar1 = *puVar1 & ~(1 << (uVar4 + uVar3 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar3 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00427567;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x50) = 0x4274eb;\n                fcn.004278a0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar3 = *(*0x20 + -0x28);\n                uVar7 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x18);\n            }\n            uVar3 = uVar3 + 1;\n        } while( true );\n    }\n    goto code_r0x00427593;\ncode_r0x00427567:\n    *(*0x20 + -0x50) = 0x427574;\n    fcn.0045c5c0(0x2000);\ncode_r0x00427574:\n    *(*0x20 + -0x50) = 0x427585;\n    fcn.0045c5c0(8);\ncode_r0x00427585:\n    *(*0x20 + -0x50) = 0x427592;\n    in_RAX = fcn.0045c5c0(0x2000);\ncode_r0x00427593:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x4275a5;\n    fcn.0045e5a0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x004273a0;\n}\n",
        "token_count": 1187
    },
    "004278a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004278a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        uVar4 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | 1 << (uVar4 & 0x3f);\n            return;\n        }\n        uVar1 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar1 >> 6;\n        if (uVar6 == uVar5) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar4 & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | -1 << (uVar4 & 0x3f);\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0xffffffffffffffff;\n            }\n            uVar5 = (uVar1 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045c5c0(8);\n    }\n    fcn.0045c5c0(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 510
    },
    "004279e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004279e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        uVar4 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar4 & 0x3f));\n            return;\n        }\n        uVar1 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar1 >> 6;\n        if (uVar6 == uVar5) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar4 & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (uVar4 & 0x3f));\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0;\n            }\n            uVar5 = (uVar1 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar5 & 0x3f) & -(uVar5 < 0x40));\n            return;\n        }\n        fcn.0045c5c0(8);\n    }\n    fcn.0045c5c0(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 506
    },
    "00427b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00427b20(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar3 = unaff_RBX >> 6;\n                if (7 < uVar3) {\n                    *(*0x20 + -0x40) = 0x427c6a;\n                    in_RAX = fcn.0045c5c0(8);\n                    goto code_r0x00427c6a;\n                }\n                return *(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f) & 1;\n            }\n            uVar3 = unaff_RBX >> 6;\n            if (uVar3 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar3) {\n                    if (*0x7895ba == 0) {\n                        *(*0x20 + -0x40) = 0x427c29;\n                        uVar3 = fcn.00401d20();\n                    }\n                    else {\n                        uVar3 = popcnt(*(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar3;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    in_RDX = *0x7895ba;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x20) = uVar3;\n                        *(*0x20 + -0x40) = 0x427bb9;\n                        in_R8 = fcn.00401d20();\n                        in_RDX = *0x7895ba;\n                        uVar3 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f));\n                    }\n                    while( true ) {\n                        uVar3 = uVar3 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar3) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar3;\n                            *(*0x20 + -0x40) = 0x427c99;\n                            in_R9 = fcn.00401d20();\n                            in_RDX = *0x7895ba;\n                            uVar3 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar3 * 8));\n                        }\ncode_r0x00427c6a:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar3 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x427cf7;\n                        iVar2 = fcn.00401d20();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar2 = popcnt((-(uVar3 < 0x40) & 1 << (uVar3 & 0x3f)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar2 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x427d1a;\n                fcn.0045c5c0(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x427d27;\n            in_RAX = fcn.0045c5c0(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = uVar3;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x427d3c;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1397
    },
    "00427f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00427f40(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.00428100(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.00428000(arg1);\n    return iVar1;\n}\n",
        "token_count": 309
    },
    "00428320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428320(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX == 1) {\n                iVar1 = unaff_RBX * 8 + 0xb0;\n                goto code_r0x00428363;\n            }\n            if (in_RAX - 2U < 2) {\n                iVar1 = unaff_RBX * 8 + 0x40;\ncode_r0x00428363:\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x428379;\n                iVar1 = fcn.0040c2a0(0x78b4a0);\n                *0x789670 = *0x789670 + *(*0x20 + -0x10);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x30) = 0x4283b2;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4283c5;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 538
    },
    "004283e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004283e0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x428425;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x428430;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 286
    },
    "004288c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004288c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    if (*0x7896e4 == '\\0') {\n        fcn.00428920();\n        *0x7896e4 = '\\x01';\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 130
    },
    "00428dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428dc0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    double *pdVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x428e15;\n            fcn.0045c814();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x108;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x170) = 0x428e77;\n                uVar1 = fcn.00452c00(0x20);\n            }\n            else {\n                *(*0x20 + -0x168) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x170) = 0x428e5f;\n                uVar1 = fcn.0044fea0(0, in_RDX, *0x20 + -0x108, 0x20);\n            }\n            *(*0x20 + -0x118) = uVar1;\n            *(*0x20 + -0x170) = 0x428e8a;\n            fcn.00409e80();\n            arg1 = *(*0x20 + -0x118);\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x170) = 0x428f86;\n            in_RAX = fcn.0045c5e0(arg1, 0x20);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x428fa5;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n    *(*0x20 + -0x170) = 0x428ebb;\n    uVar1 = fcn.004284a0(*0x20 + -0x108);\n    *(*0x20 + -0x110) = uVar1;\n    if (*(*0x20 + 0x20) == 2) {\n        if (*(*0x20 + 8) < *(*0x20 + 0x10)) {\n            *(*0x20 + -0x170) = 0x428eea;\n            pdVar2 = fcn.00428440();\n            *pdVar2 = *(*0x20 + 0x10) / *(*0x20 + 8) + *pdVar2;\n            *(*0x20 + -0x170) = 0x428f25;\n            iVar3 = fcn.00428440();\n            *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 0x10);\n            goto code_r0x00428f60;\n        }\n    }\n    *(*0x20 + -0x170) = 0x428f38;\n    pdVar2 = fcn.00428440();\n    *pdVar2 = *0x6b52d0 + *pdVar2;\n    *(*0x20 + -0x170) = 0x428f52;\n    iVar3 = fcn.00428440();\n    *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 8);\ncode_r0x00428f60:\n    *(*0x20 + -0x170) = 0x428f6c;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 1157
    },
    "004296c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004296c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    arg1 = unaff_RBX;\n    uVar1 = fcn.0040c2a0(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x789810 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045c100(arg1, in_RAX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 245
    },
    "0042aac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042aac0(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x789815 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42ab25;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42ab30;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "0042ab40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ab40(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x16c0) = iVar1 + 0x16d0;\n        return;\n    }\n    if ((*0x789815 != '\\0') && (in_RAX != 0)) {\n        fcn.00403a60();\n        if (*0x789814 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x16c0) = iVar1 + 0x16d0;\n            return;\n        }\n    }\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 217
    },
    "0042ac00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ac00(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x16c0) - (in_RAX + 0x16d0) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x16c0) = 0;\n                if (*0x7895b6 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x16d0 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42ac7b;\n                        fcn.0041b2a0(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42ac9e;\n                    fcn.0042aac0();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar6 = arg1;\n                    if (0xfff < *(in_RAX + 0x16d0 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42ace5;\n                        iVar3 = fcn.00410200(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar8 = 1 << (uVar4 & 7);\n                            if ((uVar8 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar8;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042ae8d;\n                                iVar2 = *(*(uVar4 * 8 + 0x75ba18) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar8 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar8 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar8;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar6 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar6) goto code_r0x0042ae85;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x16d0 + uVar6 * 8) = iVar3;\n                                    uVar6 = uVar6 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x16a8) = *(in_RAX + 0x16a8) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar6;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42ae5c;\n                    fcn.00420960(arg1);\n                    *(*0x20 + -0x48) = 0x42ae6d;\n                    fcn.0042aac0();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42ae85;\n                fcn.0045c620(arg1, 0x200);\ncode_r0x0042ae85:\n                *(*0x20 + -0x48) = 0x42ae8d;\n                fcn.0045c5a0(arg1);\ncode_r0x0042ae8d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42ae9a;\n                fcn.0045c5c0(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42aea5;\n            in_RAX = fcn.0045c600(uVar4, 0x200);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42aeb0;\n        fcn.0045e5a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1590
    },
    "0042aec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042aec0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7895fc == 0) {\n        fcn.00409e80();\n        if (*0x7895fc == 0) {\n            fcn.0042b320();\n            *0x7895fc = 1;\n        }\n        fcn.0040a0a0();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042afc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042afc0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x28);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042afd6;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x28;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042afd6:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x88);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042afee;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x88;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042afee:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "0042b100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042b100(char param_1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar3 = in_RAX + 0x28;\n            if (unaff_EBX == 0x77) {\n                puVar3 = in_RAX + 0x88;\n            }\n            do {\n                if (*puVar3 == 1) {\n                    *puVar3 = 0;\n                    return 1;\n                }\n                if (*puVar3 != 0) goto code_r0x0042b226;\n                LOCK();\n                uVar1 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar1 == 0) * (*puVar3 ^ 2);\n            } while (uVar1 != 0);\n            if (param_1 == '\\0') {\n                if (*(in_RAX + 0x18) == '\\0') {\n                    if (((unaff_EBX == 0x72) && (*(in_RAX + 0x78) < 0)) ||\n                       ((unaff_EBX == 0x77 && (*(in_RAX + 0xd8) < 0)))) {\n                        uVar1 = 2;\n                    }\n                    else if ((unaff_EBX == 0x72) && (*(in_RAX + 0x19) != '\\0')) {\n                        uVar1 = 3;\n                    }\n                    else {\n                        uVar1 = 0;\n                    }\n                }\n                else {\n                    uVar1 = 1;\n                }\n                if (uVar1 == 0) goto code_r0x0042b1bb;\n            }\n            else {\ncode_r0x0042b1bb:\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x38) = 0x42b1de;\n                uVar1 = fcn.004349e0();\n                puVar3 = *(*0x20 + -0x10);\n            }\n            uVar2 = *puVar3;\n            *puVar3 = 0;\n            if (uVar2 < 3) {\n                return uVar1 & 0xffffffffffffff00 | uVar2 == 1;\n            }\n            *(*0x20 + -0x38) = 0x42b226;\n            fcn.004320e0();\n            param_1 = uVar2;\ncode_r0x0042b226:\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x42b237;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x42b24a;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 860
    },
    "0042b260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042b260(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040c2a0(0x78b4c0);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xe8) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xe8 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040a0a0();\n    return puVar1;\n}\n",
        "token_count": 272
    },
    "0042b420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042b420(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e820();\n    if (iStack16 == 0) {\n        fcn.0045da20();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 152
    },
    "0042b4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042b4e0(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x789604 != 0) {\n                return *0x789604;\n            }\n            *0x789604 = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x71d288;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42b53c;\n            uVar1 = fcn.0042e820();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42b567;\n            fcn.0045da20();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42b588;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x42b599;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x42b5a5;\n            fcn.00433e60();\n            *(*0x20 + -0x48) = 0x42b5b6;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x42b5bb;\n            fcn.004338e0();\n            *(*0x20 + -0x48) = 0x42b5cc;\n            fcn.004320e0();\n        }\n        *(puVar2 + -8) = 0x42b5d2;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 712
    },
    "0042b5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042b5e0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x71d288 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x7895f4;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x71d288;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42b747;\n                fcn.0042e920();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42b78c;\n                    fcn.0045da20();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42b7d7;\n                        fcn.00433860();\n                        *(*0x20 + -0x888) = 0x42b7e8;\n                        fcn.00434160();\n                        *(*0x20 + -0x888) = 0x42b7f4;\n                        fcn.00433f60();\n                        *(*0x20 + -0x888) = 0x42b805;\n                        fcn.00434160();\n                        *(*0x20 + -0x888) = 0x42b80a;\n                        fcn.004338e0();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42b81b;\n                        fcn.004320e0();\n                        goto code_r0x0042b81b;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x789604 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42b865;\n                            fcn.0042b4e0();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 0x10);\n                        *(*0x20 + -0x880) = *0x734c78;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42b8c5;\n                        fcn.0042e8a0();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42b8eb;\n                            fcn.0045da20();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42b917;\n                        fcn.0042b980(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042b81b:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42b94b;\n                fcn.0045c5a0(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42b950;\n            in_RAX = fcn.0042fa00();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42b95b;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2023
    },
    "0042bb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042bb00(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = unaff_RBX;\n            if (*0x789788 == 0) {\n                arg1 = 0x789f20;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x789f20;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42bb51;\n                fcn.0042e720();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x789f20) = 0x5c;\n                    *0x789788 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x10);\n                    goto code_r0x0042bb9f;\n                }\n            }\n            else {\ncode_r0x0042bb9f:\n                if (*0x7895b7 == '\\0') {\n                    uVar1 = *0x789788;\n                    if (*0x789788 < 0x106) {\n                        *(*0x20 + -0x20) = *0x789788 + arg1;\n                        if (*0x789788 + arg1 < 0x106) {\n                            uVar2 = 0x789f20;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x789788;\n                            *(*0x20 + -0x50) = 0x42bc4f;\n                            uVar2 = fcn.00445220(*0x789788);\n                            arg1 = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42bc78;\n                        fcn.0045cee0(arg1);\n                        uVar1 = *(*0x20 + -0x20);\n                        if (uVar1 != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42bc9f;\n                            fcn.0042e6a0();\n                            return *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x50) = 0x42bcc9;\n                        fcn.0045c5a0(0);\n                        arg1 = in_RAX;\n                    }\n                    *(*0x20 + -0x50) = 0x42bcd3;\n                    fcn.0045c600(uVar1, 0x105);\n                }\n                else if (arg1 != 0) {\n                    *(*0x20 + -0x48) = *0x734c38;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42bbd8;\n                    fcn.0042e7a0();\n                    return *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42bcdd;\n                fcn.0045c5a0(arg1);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42bcee;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42bd05;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1222
    },
    "0042bd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bd20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42bd85;\n            fcn.0042e6a0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42bde7;\n                iVar1 = fcn.0042ba40(0x10);\n                if (*0x789810 != 0) {\n                    *(*0x20 + -0x160) = 0x42be05;\n                    fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x734c20;\n                }\n                *0x734c20 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42be67;\n                uVar3 = fcn.0042ba40(0x1b);\n                if (*0x789810 != 0) {\n                    *(*0x20 + -0x160) = 0x42be85;\n                    fcn.0045c100(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x734c28;\n                }\n                *0x734c28 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42bec5;\n                iVar1 = fcn.0042ba40(0xf);\n                if (*0x789810 != 0) {\n                    *(*0x20 + -0x160) = 0x42bee5;\n                    fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x734c38;\n                }\n                *0x734c38 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42bf1d;\n                iVar2 = fcn.0042ba40(0xf);\n                iVar1 = iVar2;\n                if (*0x789810 != 0) {\n                    *(*0x20 + -0x160) = 0x42bf3b;\n                    iVar2 = fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x734c40;\n                }\n                *0x734c40 = iVar1;\n                if ((iVar2 == 0) || (*0x734c38 == 0)) {\n                    *0x7895b7 = false;\n                }\n                else {\n                    *0x7895b7 = *0x734c20 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42bf94;\n                iVar1 = fcn.0042bb00(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42bfe8;\n                    uVar3 = fcn.0042ba40(0x12);\n                    if (*0x789810 != 0) {\n                        *(*0x20 + -0x160) = 0x42c006;\n                        fcn.0045c100(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x734c60;\n                    }\n                    *0x734c60 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42c02e;\n                    iVar1 = fcn.0042bb00(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42c087;\n                        uVar3 = fcn.0042ba40(0x16);\n                        if (*0x789810 != 0) {\n                            *(*0x20 + -0x160) = 0x42c0a5;\n                            fcn.0045c100(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x734c48;\n                        }\n                        *0x734c48 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42c0f5;\n                        uVar3 = fcn.0042ba40(0x11);\n                        if (*0x789810 != 0) {\n                            *(*0x20 + -0x160) = 0x42c113;\n                            fcn.0045c100(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x734c68;\n                        }\n                        *0x734c68 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42c165;\n                        uVar3 = fcn.0042ba40(0x17);\n                        if (*0x789810 != 0) {\n                            *(*0x20 + -0x160) = 0x42c185;\n                            fcn.0045c100(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x734c70;\n                        }\n                        *0x734c70 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42c1ad;\n                        iVar1 = fcn.0042bb00(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42c1f4;\n                            iVar1 = fcn.0042ba40(0x10);\n                            if (*0x789810 != 0) {\n                                *(*0x20 + -0x160) = 0x42c212;\n                                fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x734c80;\n                            }\n                            *0x734c80 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42c247;\n                            iVar2 = fcn.0042ba40(0xe);\n                            iVar1 = iVar2;\n                            if (*0x789810 != 0) {\n                                *(*0x20 + -0x160) = 0x42c265;\n                                iVar2 = fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x734c88;\n                            }\n                            *0x734c88 = iVar1;\n                            if ((*0x734c80 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42c2ac;\n                                iVar1 = fcn.0042bb00(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42c305;\n                                    iVar2 = fcn.0042ba40(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x789810 != 0) {\n                                        *(*0x20 + -0x160) = 0x42c325;\n                                        iVar2 = fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x734c78;\n                                    }\n                                    *0x734c78 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42c37a;\n                                        iVar1 = fcn.0042ba40(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42c389;\n                                            fcn.0042cdc0();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42c3aa;\n                                    fcn.004320e0();\n                                }\n                                *(*0x20 + -0x160) = 0x42c3bb;\n                                fcn.004320e0();\n                            }\n                            *(*0x20 + -0x160) = 0x42c3cc;\n                            fcn.004320e0();\n                        }\n                        *(*0x20 + -0x160) = 0x42c3dd;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x160) = 0x42c3ee;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x160) = 0x42c3ff;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x160) = 0x42c410;\n            fcn.004320e0();\n        }\n        *(puVar6 + -8) = 0x42c416;\n        fcn.00459ea0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3536
    },
    "0042c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042c6a5)\n// WARNING: Removing unreachable block (ram,0x0042c6be)\n\nulong fcn.0042c5c0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e7a0();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.0042e6a0();\n    return 0;\n}\n",
        "token_count": 191
    },
    "0042c6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042c6e0(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7895ac == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.0042e6a0();\n            return uStack16;\n        }\n        fcn.0042e6a0();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "0042cdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cdc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42ce2a;\n            iVar1 = fcn.0042ba40(0x18);\n            iVar2 = iVar1;\n            if (*0x789810 != 0) {\n                *(*0x20 + -0x98) = 0x42ce48;\n                iVar1 = fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x734c30;\n            }\n            *0x734c30 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42ce95;\n                iVar2 = fcn.0042ba40(0x18);\n                if (*0x789810 != 0) {\n                    *(*0x20 + -0x98) = 0x42ceb3;\n                    fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x734c50;\n                }\n                *0x734c50 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42cf09;\n                iVar1 = fcn.0042ba40(0x1a);\n                iVar2 = iVar1;\n                if (*0x789810 != 0) {\n                    *(*0x20 + -0x98) = 0x42cf27;\n                    iVar1 = fcn.0045c100(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x734c58;\n                }\n                *0x734c58 = iVar2;\n                if ((*0x734c50 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x734c58;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42cf65;\n                    fcn.0042e6a0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x734c50;\n                            *(*0x20 + -0x88) = 0x789760;\n                            *(*0x20 + -0x98) = 0x42cfb6;\n                            fcn.0042e6a0();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x7895b8 = 1;\n                            *0x789758 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42d045;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x98) = 0x42d056;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x98) = 0x42d067;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x98) = 0x42d078;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42d085;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1546
    },
    "0042d140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d140(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0042d140:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42d165;\n        iVar1 = fcn.0042e640();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42d1af;\n                    iVar1 = fcn.00445140(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x735758 = uVar6;\n                    *0x735760 = uVar6;\n                    if (*0x789810 != 0) {\n                        *(*0x20 + -0x68) = 0x42d1e5;\n                        fcn.0045c100(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x735750;\n                    }\n                    *0x735750 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    uVar4 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042d220;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042d37a;\n    }\n    goto code_r0x0042d388;\ncode_r0x0042d220:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42d2b1;\n        fcn.0042e6a0();\n        *(*0x20 + -0x18) = 0x49d160;\n        *(*0x20 + -0x10) = 0x69e358;\n        *(*0x20 + -0x68) = 0x42d2ec;\n        uVar2 = fcn.00458020(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42d30a;\n        fcn.0042e720();\n        *(*0x20 + -0x68) = 0x42d325;\n        fcn.0042c420();\n        return;\n    }\n    if (uVar4 == 0) goto code_r0x0042d370;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = uVar4;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42d245;\n    uVar2 = fcn.00449c20();\n    iVar7 = *0x735750;\n    uVar4 = *(*0x20 + -0x30);\n    uVar6 = *0x735758;\n    if (*0x735758 <= uVar4) goto code_r0x0042d365;\n    *(*0x735750 + 8 + uVar4 * 0x10) = iVar1;\n    if (*0x789810 == 0) {\n        *(iVar7 + uVar4 * 0x10) = uVar2;\n        uVar6 = uVar4;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42d28d;\n        fcn.0045c100(iVar7, uVar4, param_3, param_4);\n        uVar6 = uVar4;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    uVar4 = *(*0x20 + -0x40);\n    while( true ) {\n        if (uVar4 == 0) {\n            *(*0x20 + -0x68) = 0x42d365;\n            fcn.0045c5a0(0);\n            goto code_r0x0042d365;\n        }\n        if (*piVar3 == 0) break;\n        uVar4 = uVar4 - 1;\n        piVar3 = piVar3 + (-uVar4 >> 0x3f & 2U);\n    }\n    iVar1 = uVar6 + 1;\n    uVar4 = uVar4 - 1;\n    iVar7 = piVar3 + (-uVar4 >> 0x3f & 2U);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042d220;\ncode_r0x0042d365:\n    *(*0x20 + -0x68) = 0x42d370;\n    fcn.0045c5a0(uVar6);\ncode_r0x0042d370:\n    *(*0x20 + -0x68) = 0x42d37a;\n    fcn.0045c5a0(uVar4);\ncode_r0x0042d37a:\n    *(*0x20 + -0x68) = 0x42d387;\n    fcn.0045c5a0(0x1000000);\ncode_r0x0042d388:\n    *(puVar8 + -8) = 0x42d38d;\n    fcn.00459ea0();\n    *0x20 = puVar8;\n    goto code_r0x0042d140;\n}\n",
        "token_count": 1574
    },
    "0042d420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042d420(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.0042e6a0();\n    }\n    else if (in_RAX == 2) {\n        fcn.0042e6a0();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045c5e0(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042d55b:\n            fcn.0042e8a0();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.0042e720();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042d5e0(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042d55b;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "0042d940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042d940(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.0042e720();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045de80();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.0042e820();\n            if (uStack56 != 1) break;\n            fcn.0045de80();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.00459d60();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.00459d60();\n            return 0xffffffff;\n        }\n    }\n    fcn.00459d60();\n    return 0xffffffff;\n}\n",
        "token_count": 425
    },
    "0042dc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042dc60(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.0042e6a0();\n    if (iStack16 == 0) {\n        fcn.00459d60();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0042dce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042dce0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x338) == 0) {\n        fcn.0042e820();\n        *(in_RAX + 0x338) = iStack16;\n        if (iStack16 == 0) {\n            fcn.00459d60();\n        }\n        fcn.0042e820();\n        *(in_RAX + 0x340) = iStack16;\n        if (iStack16 == 0) {\n            fcn.00459d60();\n            fcn.0042e6a0();\n            *(in_RAX + 0x338) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0042e000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e000(void)\n\n{\n    uint64_t uVar1;\n    uchar (*pauVar2) [16];\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar7;\n    uint in_XMM15_Db;\n    uint uVar8;\n    uint in_XMM15_Dc;\n    uint uVar9;\n    uint in_XMM15_Dd;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x42e073;\n            fcn.0042e9a0();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar3 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x10) = iVar3 + 0x328;\n                *(*0x20 + -0xb8) = 0x42e0b6;\n                fcn.00409e80();\n                iVar3 = *(*0x20 + -0x18);\n                *(iVar3 + 0x330) = *(*0x20 + -0x68);\n                if ((*(iVar3 + 0x348) == 0) && (*0x7895ac != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x42e105;\n                    fcn.0042e820();\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    iVar3 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x348) = iVar3;\n                    if (iVar3 != 0) goto code_r0x0042e138;\n                }\n                else {\ncode_r0x0042e138:\n                    *(*0x20 + -0xb8) = 0x42e145;\n                    fcn.0040a0a0();\n                    pauVar2 = *0x20 + -0x48;\n                    *pauVar2 = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = pauVar2;\n                    *(*0x20 + -0xa0) = pauVar2;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x42e186;\n                    fcn.0042e7a0();\n                    puVar4 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar3 = *(*0x20 + -0x40);\n                        uVar1 = iVar3 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar5 = puVar4[1];\n                        *(*0x20 + -0x50) = uVar5;\n                        if ((uVar1 <= uVar5) && ((uVar5 - iVar3) - 0x4000 < 0x4000001)) {\n                            *puVar4 = uVar1;\n                            puVar4[2] = iVar3 + 0x53a0U;\n                            puVar4[3] = iVar3 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x42e1ee;\n                            fcn.0045bf60();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x42e217;\n                        fcn.00433860();\n                        *(*0x20 + -0xb8) = 0x42e228;\n                        fcn.00434160();\n                        *(*0x20 + -0xb8) = 0x42e232;\n                        fcn.00433fc0();\n                        *(*0x20 + -0xb8) = 0x42e245;\n                        fcn.00434160();\n                        *(*0x20 + -0xb8) = 0x42e24f;\n                        fcn.00433fc0();\n                        *(*0x20 + -0xb8) = 0x42e265;\n                        fcn.00434160();\n                        *(*0x20 + -0xb8) = 0x42e26a;\n                        fcn.004338e0();\n                        *(*0x20 + -0xb8) = 0x42e27b;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0xb8) = 0x42e285;\n                    fcn.0045da20();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x42e2a6;\n                    fcn.00433860();\n                    *(*0x20 + -0xb8) = 0x42e2b7;\n                    fcn.00434160();\n                    *(*0x20 + -0xb8) = 0x42e2c5;\n                    fcn.00433e60();\n                    *(*0x20 + -0xb8) = 0x42e2ca;\n                    fcn.00433ac0();\n                    *(*0x20 + -0xb8) = 0x42e2cf;\n                    fcn.004338e0();\n                    *(*0x20 + -0xb8) = 0x42e2e5;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0xb8) = 0x42e2ea;\n                fcn.0045da20();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x42e30b;\n                fcn.00433860();\n                *(*0x20 + -0xb8) = 0x42e31c;\n                fcn.00434160();\n                *(*0x20 + -0xb8) = 0x42e326;\n                fcn.00433e60();\n                *(*0x20 + -0xb8) = 0x42e32b;\n                fcn.00433ac0();\n                *(*0x20 + -0xb8) = 0x42e330;\n                fcn.004338e0();\n                *(*0x20 + -0xb8) = 0x42e345;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0xb8) = 0x42e34a;\n            fcn.0045da20();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x42e36b;\n            fcn.00433860();\n            *(*0x20 + -0xb8) = 0x42e37c;\n            fcn.00434160();\n            *(*0x20 + -0xb8) = 0x42e386;\n            fcn.00433e60();\n            *(*0x20 + -0xb8) = 0x42e38b;\n            fcn.00433ac0();\n            *(*0x20 + -0xb8) = 0x42e390;\n            fcn.004338e0();\n            *(*0x20 + -0xb8) = 0x42e3a5;\n            fcn.004320e0();\n        }\n        *(puVar6 + -8) = 0x42e3ab;\n        fcn.00459ea0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2343
    },
    "0042e560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042e560(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x298) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2d0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2d8) = unaff_R14;\n        *(iVar1 + 0x2c8) = in_stack_00000000;\n        *(iVar1 + 0x2d0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.0045bce0();\n    if (bVar2) {\n        *(iVar1 + 0x2d0) = 0;\n    }\n    return *(iVar1 + 0x2b0);\n}\n",
        "token_count": 249
    },
    "0042eca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042eca0(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    char cVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    uint64_t **ppuVar10;\n    uint64_t *puVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint uVar14;\n    uint in_XMM15_Db;\n    uint uVar15;\n    uint in_XMM15_Dc;\n    uint uVar16;\n    uint in_XMM15_Dd;\n    uint uVar17;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x350) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 800;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x350) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x328;\n                *(*0x20 + -0x560) = 0x42ed0d;\n                fcn.00409e80();\n                if (*(*(*0x20 + -0x10) + 0x330) == 0) {\n                    *(*0x20 + -0x560) = 0x42ed2e;\n                    uVar7 = fcn.0040a0a0();\n                    iVar8 = *(*0x20 + -0x10);\n                    *(iVar8 + 0x350) = 0;\n                    LOCK();\n                    piVar1 = iVar8 + 800;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar7;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x330);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x42edab;\n                fcn.0042e9a0();\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                uVar17 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x42f0f7;\n                fcn.0045da20();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x42f118;\n                fcn.00433860();\n                *(*0x20 + -0x560) = 0x42f129;\n                fcn.00434160();\n                *(*0x20 + -0x560) = 0x42f133;\n                fcn.00433e60();\n                *(*0x20 + -0x560) = 0x42f138;\n                fcn.00433ac0();\n                *(*0x20 + -0x560) = 0x42f13d;\n                fcn.004338e0();\n                *(*0x20 + -0x560) = 0x42f14e;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x560) = 0x42f15f;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + -8) = 0x42f16a;\n        fcn.00459ea0();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n    *(*0x20 + -0x560) = 0x42edda;\n    fcn.0040a0a0();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n    puVar9 = *0x20 + -0x4f0;\n    for (iVar8 = 0x9a; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x42ee18;\n    fcn.00409e80();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42ee32;\n    fcn.0042e6a0();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x42f07a;\n        fcn.0040a0a0();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x42f094;\n        uVar7 = fcn.0042e6a0();\n        iVar8 = *(*0x20 + -0x10);\n        *(iVar8 + 0x350) = 0;\n        LOCK();\n        piVar1 = iVar8 + 800;\n        *piVar1 = *piVar1 + 1;\n        return uVar7;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x42ee7b;\n    fcn.0042e720();\n    *(*0x20 + -0x560) = 0x42ee9d;\n    fcn.0040a0a0();\n    iVar8 = *(*0x20 + -0x18);\n    uVar7 = *(iVar8 + 0x98);\n    ppuVar10 = *(*0x20 + -0x10);\n    puVar11 = *ppuVar10;\n    if (((((puVar11 == NULL) || (uVar7 <= *puVar11)) || (puVar11[1] < uVar7 || puVar11[1] == uVar7)) &&\n        (((puVar11 = ppuVar10[10],  puVar11 == NULL || (uVar7 <= *puVar11)) ||\n         (puVar11[1] < uVar7 || puVar11[1] == uVar7)))) &&\n       (((puVar11 = ppuVar10[0x12],  puVar11 == NULL || (uVar7 <= *puVar11)) ||\n        (puVar11[1] < uVar7 || puVar11[1] == uVar7)))) {\n        puVar11 = NULL;\n    }\n    if (puVar11 == NULL) {\n        bVar13 = false;\n        goto code_r0x0042ef4d;\n    }\n    if (*(puVar11 + 0xb1) == '\\0') {\n        if (*(puVar11[6] + 0xa0) == 0) {\n            bVar13 = false;\n            goto code_r0x0042ef4d;\n        }\n        if (*(*(puVar11[6] + 0xa0) + 0x2708) == '\\0') {\n            bVar13 = false;\n            goto code_r0x0042ef4d;\n        }\n    }\n    bVar13 = (*(puVar11 + 0x12) & 0xffffefff) == 2;\ncode_r0x0042ef4d:\n    if (bVar13) {\n        uVar4 = *(iVar8 + 0xf8);\n        uVar5 = *(iVar8 + 0x98);\n        *(*0x20 + -0x560) = 0x42ef71;\n        cVar6 = fcn.00433320(uVar5);\n        if (cVar6 != '\\0') {\n            iVar8 = *(*0x20 + -0x18);\n            puVar9 = *(iVar8 + 0x98) + -8;\n            uVar5 = CONCAT71(*0x69e2f1, *0x69e2f0);\n            *puVar9 = uVar4;\n            *(iVar8 + 0x98) = puVar9;\n            *(iVar8 + 0xf8) = uVar5;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar8;\n            *(*0x20 + -0x560) = 0x42efcf;\n            fcn.0042e720();\n        }\n        ppuVar10 = *(*0x20 + -0x10);\n    }\n    *(ppuVar10 + 0x6a) = 0;\n    LOCK();\n    *(ppuVar10 + 100) = *(ppuVar10 + 100) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42f01a;\n    fcn.0042e6a0();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42f048;\n    uVar7 = fcn.0042e6a0();\n    return uVar7;\n}\n",
        "token_count": 2766
    },
    "0042f180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f180(int64_t arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x42f1a7;\n            fcn.0044a780();\n            *(*0x20 + -0x28) = 0x42f1ac;\n            fcn.0044ae60();\n            if (unaff_RBX < 8) {\ncode_r0x0042f1c9:\n                if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) || (*(arg1 + 0xc0) == 0)) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x42f1fc;\n                fcn.004320e0();\n            }\n            else {\n                arg1 = 8;\n                *(*0x20 + -0x28) = 0x42f1c5;\n                cVar1 = fcn.004025e0(8, in_RDX);\n                if (cVar1 == '\\0') goto code_r0x0042f1c9;\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = 0x42f20b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42f225;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 617
    },
    "0042f240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f240(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42f286;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42f296;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 350
    },
    "0042fa60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fa60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [8];\n    \n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        if (in_EAX == 0) {\n            iVar2 = fcn.0042ff00(*(unaff_R14 + 0x30), unaff_R14);\n            if (*(iVar2 + 0x20) == 0) {\n                noname_1 = *(unaff_R14 + 0x28);\n                if (*0x789810 == 0) {\n                    *(iVar2 + 0x28) = noname_1;\n                    *(unaff_R14 + 0x28) = iVar2;\n                }\n                else {\n                    fcn.0045c220(unaff_R14, noname_1, param_3, param_4);\n                    iVar2 = fcn.0045c100(unaff_R14, noname_1, param_3, param_4);\n                }\n                if (*0x789810 == 0) {\n                    *(iVar2 + 0x18) = unaff_RBX;\n                }\n                else {\n                    iVar2 = fcn.0045c200();\n                }\n                *(iVar2 + 0x10) = in_stack_00000000;\n                *(iVar2 + 8) = auStackX8;\n                fcn.0045c0a0();\n                return;\n            }\n            fcn.004320e0();\n        }\n        fcn.004320e0();\n    }\n    fcn.004320e0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 445
    },
    "0042fb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fb60(void)\n\n{\n    int32_t *in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        if (*in_RAX == 0) {\n            *(in_RAX + 1) = 0;\n            *(in_RAX + 6) = 0;\n            *(in_RAX + 2) = auStackX8;\n            *(in_RAX + 4) = in_stack_00000000;\n            *(in_RAX + 0x10) = 0;\n            *(in_RAX + 0xe) = 0;\n            *(in_RAX + 8) = 0;\n            *(in_RAX + 0xc) = 0;\n            *(in_RAX + 10) = *(unaff_R14 + 0x28);\n            *(unaff_R14 + 0x28) = in_RAX;\n            fcn.0045c0a0();\n            return;\n        }\n        fcn.004320e0();\n    }\n    fcn.004320e0();\n    puVar5 = auStack24;\ncode_r0x0042fc20:\n    puVar6 = puVar5;\n    if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n        puVar6 = puVar5 + -0x48;\n        *(puVar5 + -8) = puVar7;\n        puVar7 = puVar5 + -8;\n        *(puVar5 + -0x1c) = 0;\n        *(puVar5 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n            *(puVar5 + iVar1 * 4 + -0x1c) = 0xffffffff;\n        }\n        uVar2 = 0;\n        do {\n            if (uVar2 < 9) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = uVar2 + 7 >> 4;\n            }\n            if (4 < uVar3) {\n                return;\n            }\n            if (uVar2 < 9) {\n                uVar4 = 0x50;\n            }\n            else {\n                uVar4 = uVar2 + 0x48;\n            }\n            if (uVar4 < 0x8000) {\n                if (uVar4 < 0x3f9) {\n                    uVar4 = uVar4 + 7 >> 3;\n                    if (0x80 < uVar4) goto code_r0x0042fe52;\n                    uVar4 = *(uVar4 + 0x720360);\n                    if (0x43 < uVar4) goto code_r0x0042fe45;\n                    uVar4 = *(uVar4 * 2 + 0x7204a0);\n                }\n                else {\n                    uVar4 = uVar4 - 0x381 >> 7;\n                    if (0xf8 < uVar4) goto code_r0x0042fe37;\n                    if (0x43 < \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                               [uVar4]) goto code_r0x0042fe2a;\n                    uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [uVar4] * 2 + 0x7204a0);\n                }\n            }\n            else if (uVar4 <= uVar4 + 0x2000) {\n                uVar4 = uVar4 + 0x1fff & 0xffffffffffffe000;\n            }\n            if (*(puVar5 + uVar3 * 4 + -0x1c) < 0) {\n                *(puVar5 + uVar3 * 4 + -0x1c) = uVar4;\n            }\n            else if (uVar4 != *(puVar5 + uVar3 * 4 + -0x1c)) goto code_r0x0042fda3;\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0042fe60;\ncode_r0x0042fda3:\n    *(puVar5 + -0x30) = uVar3;\n    *(puVar5 + -0x38) = uVar4;\n    *(puVar5 + -0x28) = uVar2;\n    *(puVar5 + -0x50) = 0x42fdb7;\n    fcn.00433860();\n    *(puVar5 + -0x50) = 0x42fdc8;\n    fcn.00434160();\n    *(puVar5 + -0x50) = 0x42fdd2;\n    fcn.00433e60();\n    *(puVar5 + -0x50) = 0x42fde5;\n    fcn.00434160();\n    *(puVar5 + -0x50) = 0x42fdef;\n    fcn.00433e60();\n    *(puVar5 + -0x50) = 0x42fe05;\n    fcn.00434160();\n    *(puVar5 + -0x50) = 0x42fe0f;\n    fcn.00433e60();\n    *(puVar5 + -0x50) = 0x42fe14;\n    fcn.00433ac0();\n    *(puVar5 + -0x50) = 0x42fe19;\n    fcn.004338e0();\n    *(puVar5 + -0x50) = 0x42fe2a;\n    fcn.004320e0();\ncode_r0x0042fe2a:\n    *(puVar5 + -0x50) = 0x42fe37;\n    fcn.0045c5a0(0x44);\ncode_r0x0042fe37:\n    *(puVar5 + -0x50) = 0x42fe45;\n    fcn.0045c5c0(0xf9);\ncode_r0x0042fe45:\n    *(puVar5 + -0x50) = 0x42fe52;\n    fcn.0045c5a0(0x44);\ncode_r0x0042fe52:\n    *(puVar5 + -0x50) = 0x42fe5f;\n    fcn.0045c5c0(0x81);\ncode_r0x0042fe60:\n    *(puVar6 + -8) = 0x42fe65;\n    fcn.00459ea0();\n    puVar5 = puVar6;\n    goto code_r0x0042fc20;\n}\n",
        "token_count": 1793
    },
    "0042ff00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0042ff00(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int32_t *piStack72;\n    int64_t iStack64;\n    ulong uStack56;\n    int32_t iStack48;\n    int32_t **ppiStack40;\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    piStack72 = NULL;\n    if (in_EAX < 9) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = in_EAX + 7U >> 4;\n    }\n    iStack48 = in_EAX;\n    if (uVar4 < 5) {\n        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n        arg3 = uVar4 * 3;\n        if ((*(iVar5 + 0x70 + uVar4 * 0x18) == 0) && (*(uVar4 * 8 + 0x7361b0) != 0)) {\n            auStack32 = CONCAT88(iVar5, 0x430240);\n            iStack64 = iVar5;\n            uStack16 = uVar4;\n            fcn.00459d60();\n            iVar5 = iStack64;\n        }\n        iVar1 = *(iVar5 + 0x70 + uVar4 * 0x18);\n        if (0 < iVar1) {\n            piStack72 = *(*(iVar5 + 0x68 + uVar4 * 0x18) + -8 + iVar1 * 8);\n            arg1 = iVar1 - 1;\n            arg4 = *(iVar5 + 0x70 + uVar4 * 0x18);\n            if (arg1 < arg4) {\n                if (*0x789810 == 0) {\n                    *(*(iVar5 + 0x68 + uVar4 * 0x18) + -8 + iVar1 * 8) = 0;\n                }\n                else {\n                    iStack48 = fcn.0045c240(arg1, arg2, arg3, arg4);\n                }\n                uVar4 = *(iVar5 + 0x78 + arg3 * 8);\n                if (arg1 <= uVar4) {\n                    *(iVar5 + 0x70 + arg3 * 8) = arg1;\n                    goto code_r0x0043003f;\n                }\n                fcn.0045c620(arg1, uVar4);\n            }\n            fcn.0045c5a0(arg4);\n            pcVar2 = swi(3);\n            piVar3 = (*pcVar2)();\n            return piVar3;\n        }\n    }\ncode_r0x0043003f:\n    if (piStack72 == NULL) {\n        uStack56 = 0x4300e0;\n        ppiStack40 = &piStack72;\n        fcn.00459d60();\n        iStack48 = in_EAX;\n    }\n    *piStack72 = iStack48;\n    *(piStack72 + 5) = 1;\n    return piStack72;\n}\n",
        "token_count": 761
    },
    "004303e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004303e0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    int64_t arg4;\n    int64_t iVar5;\n    int64_t arg3;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if (*(in_RAX + 8) != 0) {\n        fcn.00430760();\n    }\n    if (*(in_RAX + 6) != 0) {\n        fcn.004307a0();\n    }\n    if (*(in_RAX + 5) == '\\0') {\n        return;\n    }\n    if (*in_RAX < 9) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *in_RAX + 7U >> 4;\n    }\n    if (4 < uVar4) {\n        return;\n    }\n    arg3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    arg4 = uVar4 * 3;\n    if (*(arg3 + 0x78 + uVar4 * 0x18) == *(arg3 + 0x70 + uVar4 * 0x18)) {\n        fcn.00459d60();\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    *in_RAX = 0;\n    *(in_RAX + 1) = 0;\n    *(in_RAX + 6) = 0;\n    *(in_RAX + 2) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(in_RAX + 0x10) = 0;\n    *(in_RAX + 0xe) = 0;\n    iVar5 = arg3;\n    iVar6 = arg4;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0xc) = 0;\n        *(in_RAX + 10) = 0;\n        piVar2 = in_RAX;\n    }\n    else {\n        fcn.0045c220(arg1, 0, arg3, arg4);\n        piVar2 = fcn.0045c220(arg1, 0, iVar5, iVar6);\n    }\n    arg1_00 = *(iVar5 + 0x70 + iVar6 * 8);\n    iVar1 = *(iVar5 + 0x68 + iVar6 * 8);\n    iVar3 = iVar1;\n    if (*(iVar5 + 0x78 + iVar6 * 8) < arg1_00 + 1U) {\n        iVar3 = fcn.00445220(arg1_00);\n        *(arg3 + 0x78 + uVar4 * 0x18) = arg1_00;\n        if (*0x789810 == 0) {\n            *(arg3 + 0x68 + uVar4 * 0x18) = iVar3;\n            piVar2 = in_RAX;\n            arg1_00 = iVar1;\n            iVar5 = arg3;\n            iVar6 = arg4;\n        }\n        else {\n            iVar3 = fcn.0045c100(arg1_00, arg4, arg3, iVar6);\n            piVar2 = in_RAX;\n            arg1_00 = iVar1;\n            iVar5 = arg3;\n            iVar6 = arg4;\n        }\n    }\n    *(iVar5 + 0x70 + iVar6 * 8) = arg1_00 + 1;\n    if (*0x789810 == 0) {\n        *(iVar3 + arg1_00 * 8) = piVar2;\n    }\n    else {\n        fcn.0045c100(arg1_00, arg1_00 + 1, iVar5, iVar6);\n    }\n    return;\n}\n",
        "token_count": 954
    },
    "004307e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004307e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    ulong arg1;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    ulong auStackX8 [4];\n    \n    puVar4 = *(unaff_R14 + 0x28);\n    if (puVar4 == NULL) {\n        return;\n    }\n    if (*(puVar4 + 2) != auStackX8) {\n        return;\n    }\n    if (*(puVar4 + 6) == '\\0') {\n        uVar1 = *puVar4;\n        arg3 = uVar1;\n        if (uVar1 != 0) {\n            if (uVar1 == 8) {\n                auStackX8[0] = *(puVar4 + 0x12);\n            }\n            else {\n                fcn.0045cee0(uVar1);\n            }\n        }\n        arg1 = *(puVar4 + 6);\n        if (*0x789810 == 0) {\n            *(puVar4 + 6) = 0;\n        }\n        else {\n            arg3 = 0;\n            puVar4 = fcn.0045c280(arg1, puVar4 + 6, 0, param_4);\n        }\n        if (*0x789810 == 0) {\n            *(unaff_R14 + 0x28) = *(puVar4 + 10);\n        }\n        else {\n            fcn.0045c220(arg1, *(puVar4 + 10), arg3, param_4);\n        }\n        fcn.004303e0(arg1);\n        fcn.0045bcc0();\n        return;\n    }\n    cVar3 = fcn.00431000(param_1, auStackX8, param_3, param_4);\n    if (cVar3 != '\\0') {\n        if (*0x789810 == 0) {\n            *(unaff_R14 + 0x28) = *(puVar4 + 10);\n        }\n        else {\n            fcn.0045c220(unaff_R14, *(puVar4 + 10), param_3, param_4);\n        }\n        fcn.004303e0(unaff_R14);\n        return;\n    }\n    fcn.004320e0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 566
    },
    "00430960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430960(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.00409ac0(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00409ac0(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00409780();\n                    *(in_RAX + 8) = 0x49bea0;\n                    if (*0x789810 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045c100(0x49bea0, in_RAX, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00409780();\n                *(in_RAX + 8) = 0x49bea0;\n                if (*0x789810 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045c100(0x49bea0, in_RAX, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00456bc0();\n    return;\n}\n",
        "token_count": 449
    },
    "00430ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430ac0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.00430ac0(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.004338e0();\n    fcn.004077a0(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 290
    },
    "00431000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00431000(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    ulong in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint8_t *puVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uchar uVar15;\n    uint64_t arg4_00;\n    int32_t *piVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int64_t unaff_R14;\n    \ncode_r0x00431000:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar13 = 0;\n        puVar7 = *(unaff_RBX + 0xc);\n        do {\n            puVar12 = puVar7 + 1;\n            if (*puVar7 < 0x80) {\n                if (iVar13 < 0) goto code_r0x00431820;\n                iVar9 = 0;\n                uVar14 = 0;\n                goto code_r0x0043105f;\n            }\n            if (iVar13 < 0) goto code_r0x00431838;\n            iVar13 = iVar13 + 7;\n            puVar7 = puVar12;\n        } while (iVar13 < 0x1d);\n        goto code_r0x00431825;\n    }\n    goto code_r0x0043183e;\n    while( true ) {\n        if (uVar14 < 0) goto code_r0x00431818;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n        uVar14 = uVar14 + 7;\n        if (0x1c < uVar14) break;\ncode_r0x0043105f:\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar14 < 0) goto code_r0x00431800;\n            uVar10 = (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n            uVar8 = uVar10;\n            iVar9 = 0;\n            uVar14 = 0;\n            goto code_r0x004310b9;\n        }\n    }\n    goto code_r0x00431805;\n    while( true ) {\n        if (uVar14 < 0) goto code_r0x004317f8;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n        uVar14 = uVar14 + 7;\n        if (0x1c < uVar14) break;\ncode_r0x004310b9:\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar14 < 0) goto code_r0x004317e0;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = uVar10;\n            arg4_00 = *(*(unaff_RBX + 0xe) - uVar8);\n            uVar14 = (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n            goto code_r0x00431140;\n        }\n    }\n    goto code_r0x004317e5;\ncode_r0x00431140:\n    uVar14 = uVar14 - 1;\n    if (uVar14 < 0) {\n        return 1;\n    }\n    iVar9 = 0;\n    uVar5 = 0;\n    while( true ) {\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) break;\n        if (uVar5 < 0) goto code_r0x004317d8;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n        uVar5 = uVar5 + 7;\n        if (0x1c < uVar5) goto code_r0x004317c5;\n    }\n    if (uVar5 < 0) goto code_r0x004317c0;\n    uVar10 = (uVar1 << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n    puVar7 = uVar10;\n    iVar9 = 0;\n    uVar5 = 0;\n    while( true ) {\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) break;\n        if (uVar5 < 0) goto code_r0x004317b8;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n        uVar5 = uVar5 + 7;\n        if (0x1c < uVar5) goto code_r0x004317a5;\n    }\n    if (uVar5 < 0) goto code_r0x004317a0;\n    iVar18 = 0;\n    uVar6 = 0;\n    while( true ) {\n        uVar2 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar2 < 0x80) break;\n        if (uVar6 < 0) goto code_r0x00431798;\n        iVar18 = ((uVar2 & 0xffffff7f) << (uVar6 & 0x1f) & -(uVar6 < 0x20)) + iVar18;\n        uVar6 = uVar6 + 7;\n        if (0x1c < uVar6) goto code_r0x00431785;\n    }\n    if (uVar6 < 0) goto code_r0x00431780;\n    uVar17 = (uVar2 << (uVar6 & 0x1f) & -(uVar6 < 0x20)) + iVar18;\n    if (uVar10 != 0) goto code_r0x0043176a;\n    *(*0x20 + -0x38) = uVar14;\n    uVar10 = -(uVar14 < 0x20) & 1 << (uVar14 & 0x1f);\n    if ((uVar10 & arg4_00) == 0) {\n        for (uVar10 = 0; uVar10 < uVar17; uVar10 = uVar10 + 1) {\n            iVar13 = 0;\n            while (0x7f < *puVar12) {\n                if (iVar13 < 0) goto code_r0x00431765;\n                iVar13 = iVar13 + 7;\n                puVar12 = puVar12 + 1;\n                if (0x1c < iVar13) goto code_r0x00431750;\n            }\n            if (iVar13 < 0) {\ncode_r0x0043174b:\n                *(*0x20 + -0x80) = 0x431750;\n                fcn.0042f9a0();\ncode_r0x00431750:\n                *(*0x20 + -0x80) = 0x431765;\n                fcn.00431940();\ncode_r0x00431765:\n                *(*0x20 + -0x80) = 0x43176a;\n                fcn.0042f9a0();\n                goto code_r0x0043176a;\n            }\n            iVar13 = 0;\n            puVar7 = puVar12 + 1;\n            while (0x7f < *puVar7) {\n                if (iVar13 < 0) goto code_r0x00431746;\n                iVar13 = iVar13 + 7;\n                puVar7 = puVar7 + 1;\n                if (0x1c < iVar13) goto code_r0x00431733;\n            }\n            if (iVar13 < 0) {\ncode_r0x0043172e:\n                *(*0x20 + -0x80) = 0x431733;\n                fcn.0042f9a0();\ncode_r0x00431733:\n                *(*0x20 + -0x80) = 0x431746;\n                fcn.00431940();\ncode_r0x00431746:\n                *(*0x20 + -0x80) = 0x43174b;\n                fcn.0042f9a0();\n                goto code_r0x0043174b;\n            }\n            iVar13 = 0;\n            puVar7 = puVar7 + 1;\n            while (puVar12 = puVar7 + 1,  0x7f < *puVar7) {\n                if (iVar13 < 0) goto code_r0x00431729;\n                iVar13 = iVar13 + 7;\n                puVar7 = puVar12;\n                if (0x1c < iVar13) goto code_r0x00431716;\n            }\n            if (iVar13 < 0) {\n                *(*0x20 + -0x80) = 0x431716;\n                fcn.0042f9a0();\ncode_r0x00431716:\n                *(*0x20 + -0x80) = 0x431729;\n                fcn.00431940();\ncode_r0x00431729:\n                *(*0x20 + -0x80) = 0x43172e;\n                fcn.0042f9a0();\n                goto code_r0x0043172e;\n            }\ncode_r0x0043165d:\n        }\n        uVar10 = arg4_00;\n    }\n    else {\n        uVar3 = *(*(unaff_RBX + 0xe) - ((uVar1 << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9));\n        if (*0x789810 == 0) {\n            *(unaff_RBX + 6) = uVar3;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x431215;\n            fcn.0045c280(uVar14, uVar8, uVar3, arg4_00);\n        }\n        if (*unaff_RBX == 0) {\n            piVar16 = NULL;\n        }\n        else {\n            piVar16 = unaff_RBX + 0x12;\n        }\n        *(*0x20 + -0x44) = puVar7;\n        *(*0x20 + -0x4c) = uVar17;\n        *(*0x20 + -0x59) = uVar10;\n        *(*0x20 + -0x10) = unaff_RBX + 6;\n        *(*0x20 + -0x30) = piVar16;\n        *(*0x20 + -0x5a) = arg4_00;\n        uVar4 = 0;\n        while (uVar4 < uVar17) {\n            *(*0x20 + -0x40) = 0;\n            while (uVar1 = *puVar12,  puVar12 = puVar12 + 1,  0x7f < uVar1) {\n                uVar14 = *(*0x20 + -0x40);\n                if (uVar14 < 0) goto code_r0x00431658;\n                puVar7 = -(uVar14 < 0x20);\n                if (0x1c < uVar14 + 7) goto code_r0x00431645;\n                puVar7 = *(*0x20 + -0x44);\n                *(*0x20 + -0x40) = uVar14 + 7;\n            }\n            if (*(*0x20 + -0x40) < 0) goto code_r0x00431640;\n            puVar7 = NULL;\n            uVar14 = 0;\n            while( true ) {\n                *(*0x20 + -0x54) = puVar7;\n                uVar1 = *puVar12;\n                puVar7 = uVar1;\n                puVar12 = puVar12 + 1;\n                if (uVar1 < 0x80) break;\n                if (uVar14 < 0) goto code_r0x00431638;\n                puVar7 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + *(*0x20 + -0x54);\n                uVar14 = uVar14 + 7;\n                if (0x1c < uVar14) goto code_r0x00431625;\n            }\n            if (uVar14 < 0) {\ncode_r0x00431620:\n                *(*0x20 + -0x80) = 0x431625;\n                fcn.0042f9a0();\ncode_r0x00431625:\n                *(*0x20 + -0x80) = 0x431638;\n                fcn.00431940();\ncode_r0x00431638:\n                *(*0x20 + -0x80) = 0x43163d;\n                fcn.0042f9a0();\ncode_r0x00431640:\n                *(*0x20 + -0x80) = 0x431645;\n                fcn.0042f9a0();\ncode_r0x00431645:\n                unaff_RBX = 0x6b5808;\n                *(*0x20 + -0x80) = 0x431658;\n                fcn.00431940();\ncode_r0x00431658:\n                puVar12 = puVar7;\n                *(*0x20 + -0x80) = 0x43165d;\n                uVar10 = fcn.0042f9a0();\n                goto code_r0x0043165d;\n            }\n            uVar8 = 0;\n            puVar7 = NULL;\n            while( true ) {\n                uVar2 = *puVar12;\n                puVar12 = puVar12 + 1;\n                if (uVar2 < 0x80) break;\n                if (puVar7 < 0) goto code_r0x00431618;\n                *(*0x20 + -0x50) = uVar8;\n                uVar8 = *(*0x20 + -0x50) + ((uVar2 & 0xffffff7f) << (puVar7 & 0x1f) & -(puVar7 < 0x20));\n                puVar7 = puVar7 + 7;\n                if (0x1c < puVar7) goto code_r0x00431605;\n                arg4_00 = *(*0x20 + -0x5a);\n            }\n            if (puVar7 < 0) {\n                *(*0x20 + -0x80) = 0x431605;\n                fcn.0042f9a0();\n                uVar8 = arg4_00;\ncode_r0x00431605:\n                *(*0x20 + -0x80) = 0x431618;\n                fcn.00431940();\n                arg4_00 = uVar8;\ncode_r0x00431618:\n                *(*0x20 + -0x80) = 0x43161d;\n                fcn.0042f9a0();\n                goto code_r0x00431620;\n            }\n            *(*0x20 + -0x48) = uVar4;\n            *(*0x20 + -0x18) = puVar12;\n            *(*0x20 + -0x80) = 0x431410;\n            fcn.0045cee0(*(*0x20 + -0x54) + (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)));\n            puVar12 = *(*0x20 + -0x18);\n            uVar14 = *(*0x20 + -0x38);\n            uVar8 = *(*0x20 + -0x58);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg4_00 = *(*0x20 + -0x5a);\n            puVar7 = *(*0x20 + -0x44);\n            uVar17 = *(*0x20 + -0x4c);\n            uVar10 = *(*0x20 + -0x59);\n            uVar4 = *(*0x20 + -0x48) + 1;\n        }\n        *(*0x20 + -0x20) = puVar12;\n        iVar13 = *(unaff_RBX + 0xe);\n        uVar10 = arg4_00 & ~uVar10;\n        uVar15 = uVar10;\n        *(*0x20 + -0x59) = uVar15;\n        *(iVar13 - uVar8) = uVar15;\n        *(*0x20 + -0x28) = *(unaff_RBX + 8);\n        uVar3 = *(unaff_RBX + 6);\n        *(*0x20 + -0x80) = 0x43127b;\n        fcn.00431860(uVar3, uVar8, uVar14, uVar10);\n        if ((*(*0x20 + -0x28) != 0) && (*(*(*0x20 + -0x28) + 0x31) != '\\0')) {\n            return 1;\n        }\n        if (*0x789810 == 0) {\n            *(*(*0x20 + 0x10) + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x4312b6;\n            fcn.0045c200(0);\n        }\n        *(*0x20 + -0x80) = 0x4312c5;\n        uVar14 = fcn.0045cc20();\n        unaff_RBX = *(*0x20 + 0x10);\n        if ((*(unaff_RBX + 8) != 0) && (*(*(unaff_RBX + 8) + 0x30) != '\\0')) {\n            return uVar14 & 0xffffffffffffff00 | *(*0x20 + -0x59) == '\\0';\n        }\n        puVar12 = *(*0x20 + -0x20);\n        uVar10 = *(*0x20 + -0x59);\n    }\n    uVar14 = *(*0x20 + -0x38);\n    arg4_00 = uVar10;\n    uVar8 = *(*0x20 + -0x58);\n    goto code_r0x00431140;\ncode_r0x0043176a:\n    *(*0x20 + -0x80) = 0x43177b;\n    fcn.004320e0();\ncode_r0x00431780:\n    *(*0x20 + -0x80) = 0x431785;\n    fcn.0042f9a0();\ncode_r0x00431785:\n    *(*0x20 + -0x80) = 0x431798;\n    fcn.00431940();\ncode_r0x00431798:\n    *(*0x20 + -0x80) = 0x43179d;\n    fcn.0042f9a0();\ncode_r0x004317a0:\n    *(*0x20 + -0x80) = 0x4317a5;\n    fcn.0042f9a0();\ncode_r0x004317a5:\n    *(*0x20 + -0x80) = 0x4317b8;\n    fcn.00431940();\ncode_r0x004317b8:\n    *(*0x20 + -0x80) = 0x4317bd;\n    fcn.0042f9a0();\ncode_r0x004317c0:\n    *(*0x20 + -0x80) = 0x4317c5;\n    fcn.0042f9a0();\ncode_r0x004317c5:\n    *(*0x20 + -0x80) = 0x4317d8;\n    fcn.00431940();\ncode_r0x004317d8:\n    *(*0x20 + -0x80) = 0x4317dd;\n    fcn.0042f9a0();\ncode_r0x004317e0:\n    *(*0x20 + -0x80) = 0x4317e5;\n    fcn.0042f9a0();\ncode_r0x004317e5:\n    *(*0x20 + -0x80) = 0x4317f8;\n    fcn.00431940();\ncode_r0x004317f8:\n    *(*0x20 + -0x80) = 0x4317fd;\n    fcn.0042f9a0();\ncode_r0x00431800:\n    *(*0x20 + -0x80) = 0x431805;\n    fcn.0042f9a0();\ncode_r0x00431805:\n    *(*0x20 + -0x80) = 0x431818;\n    fcn.00431940();\ncode_r0x00431818:\n    *(*0x20 + -0x80) = 0x43181d;\n    fcn.0042f9a0();\ncode_r0x00431820:\n    *(*0x20 + -0x80) = 0x431825;\n    fcn.0042f9a0();\ncode_r0x00431825:\n    unaff_RBX = 0x6b5808;\n    *(*0x20 + -0x80) = 0x431838;\n    fcn.00431940();\ncode_r0x00431838:\n    *(*0x20 + -0x80) = 0x43183d;\n    in_RAX = fcn.0042f9a0();\ncode_r0x0043183e:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + -8) = 0x43184d;\n    fcn.00459ea0();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    *0x20 = puVar11;\n    goto code_r0x00431000;\n}\n",
        "token_count": 5283
    },
    "00431860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431860(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong *arg1_00;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1_00 = arg1;\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00432080();\n        arg1_00 = puStackX8;\n        if (*0x789810 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045c100(arg1, noname_1, arg3, arg4);\n        }\n        arg1_00[4] = in_stack_00000000;\n        if (*0x789810 == 0) {\n            arg1_00[5] = &puStackX8;\n        }\n        else {\n            fcn.0045c100(arg1_00, noname_1, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x789810 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045c100(arg1_00, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00431940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431940(ulong param_1, ulong param_2, ulong param_3, int64_t param_4)\n\n{\n    code *pcVar1;\n    ulong noname_1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0x90) == unaff_R14) {\n                if (*(iVar3 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar3 + 0xd0) == 0) {\n                        if (*(iVar3 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x789810 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x431a2c;\n                                fcn.0045c220(param_1, *0x20 + -0x40, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x789614 = *0x789614 + 1;\n                            *(*0x20 + -0xc0) = 0x431a54;\n                            fcn.00430bc0(*0x20 + 8);\ncode_r0x00431a54:\n                            do {\n                                iVar3 = *(*0x20 + -0x48);\n                                iVar6 = *(iVar3 + 0x28);\n                                if (iVar6 == 0) {\n                                    uVar4 = *(iVar3 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x431cda;\n                                    fcn.00430960(uVar4);\n                                    *(*0x20 + -0xc0) = 0x431ce8;\n                                    fcn.00432440();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar3 + 0x28;\n                                if (*(iVar6 + 4) != '\\0') {\n                                    if (*(iVar6 + 0x20) != 0) {\n                                        *(*(iVar6 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x789810 == 0) {\n                                        *(iVar6 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x431aad;\n                                        iVar3 = fcn.0045c260(iVar6 + 0x20, iVar7, param_3, param_4);\n                                    }\n                                    if (*(iVar6 + 6) == '\\0') {\n                                        if (*0x789810 == 0) {\n                                            *(iVar6 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x431ada;\n                                            iVar3 = fcn.0045c260(iVar6 + 0x18, iVar7, param_3, param_4);\n                                        }\n                                        uVar4 = *(iVar6 + 0x28);\n                                        if (*0x789810 == 0) {\n                                            *(iVar3 + 0x28) = uVar4;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x431af5;\n                                            fcn.0045c200();\n                                        }\n                                        *(*0x20 + -0xc0) = 0x431afd;\n                                        fcn.004303e0(uVar4);\n                                        goto code_r0x00431a54;\n                                    }\n                                }\n                                *(iVar6 + 4) = 1;\n                                iVar3 = iVar6 + 0x20;\n                                if (*0x789810 == 0) {\n                                    *(iVar6 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x431b33;\n                                    fcn.0045c260(iVar3, iVar7, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = iVar6;\n                                *(*0x20 + -0x60) = iVar3;\n                                if (*(iVar6 + 6) == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x431b92;\n                                    uVar4 = fcn.00432080();\n                                    *(*0x20 + -0x40) = uVar4;\n                                    pcVar1 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x431ba6;\n                                    (*pcVar1)();\n                                    iVar3 = *(*0x20 + -0x70);\n                                    cVar2 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x431b55;\n                                    cVar2 = fcn.00431000(iVar3, *0x20 + -0x40, param_3, param_4);\n                                    if (cVar2 == '\\0') {\n                                        iVar3 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar3 = *(*0x20 + -0x70);\n                                        if (*(*(iVar3 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar2;\n                                            *(*0x20 + -0xc0) = 0x431b7a;\n                                            fcn.00430bc0(0);\n                                            cVar2 = *(*0x20 + -0x9a);\n                                            iVar3 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar6 = *(*0x20 + -0x48);\n                                if (*(iVar6 + 0x28) != iVar3) goto code_r0x00431e6f;\n                                if (*0x789810 == 0) {\n                                    *(iVar3 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x431be9;\n                                    cVar2 = fcn.0045c260(iVar6, iVar3, param_3, param_4);\n                                }\n                                uVar4 = *(iVar3 + 0x10);\n                                *(*0x20 + -0x98) = uVar4;\n                                param_3 = *(iVar3 + 8);\n                                *(*0x20 + -0x88) = param_3;\n                                if (cVar2 != '\\0') {\n                                    if (*0x789810 == 0) {\n                                        *(iVar3 + 0x18) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x431c1d;\n                                        cVar2 = fcn.0045c240(iVar6, iVar3, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar2;\n                                    if (*0x789810 == 0) {\n                                        *(iVar6 + 0x28) = *(iVar3 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x431c3e;\n                                        fcn.0045c240(iVar6, iVar3, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x431c46;\n                                    fcn.004303e0(iVar6);\n                                    cVar2 = *(*0x20 + -0x99);\n                                    iVar6 = *(*0x20 + -0x48);\n                                    uVar4 = *(*0x20 + -0x98);\n                                    param_3 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar3 = *(*0x20 + -0x28);\n                            if (*0x789810 == 0) {\n                                *(iVar6 + 0x20) = iVar3;\n                                iVar7 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                iVar7 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x431c8e;\n                                cVar2 = fcn.0045c220(iVar6, iVar3, param_3, param_4);\n                            }\n                            if (((iVar3 == 0) || (*(iVar3 + 0x32) == '\\0')) || (*(iVar3 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x789614 = *0x789614 + -1;\n                                iVar3 = *(iVar6 + 0x28);\n                                if (cVar2 == '\\0') {\n                                    iVar5 = iVar3;\n                                    iVar3 = *(iVar3 + 0x28);\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                while ((iVar3 != 0 && (*(iVar3 + 4) == '\\0'))) {\n                                    if (*(iVar3 + 6) == '\\0') {\n                                        iVar5 = iVar3;\n                                        iVar3 = *(iVar3 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = iVar5;\n                                        if (iVar5 == 0) {\n                                            if (*0x789810 == 0) {\n                                                *(iVar6 + 0x28) = *(iVar3 + 0x28);\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x431d85;\n                                                fcn.0045c240(iVar6, iVar3, param_3, iVar7);\n                                                param_4 = iVar7;\n                                            }\n                                        }\n                                        else if (*0x789810 == 0) {\n                                            *(iVar5 + 0x28) = *(iVar3 + 0x28);\n                                        }\n                                        else {\n                                            param_4 = iVar5 + 0x28;\n                                            *(*0x20 + -0xc0) = 0x431d54;\n                                            fcn.0045c240(iVar6, iVar3, param_3, param_4);\n                                        }\n                                        uVar4 = *(iVar3 + 0x28);\n                                        *(*0x20 + -0x78) = uVar4;\n                                        *(*0x20 + -0xc0) = 0x431d96;\n                                        fcn.004303e0(uVar4);\n                                        iVar6 = *(*0x20 + -0x48);\n                                        uVar4 = *(*0x20 + -0x98);\n                                        iVar7 = *(*0x20 + -0x50);\n                                        param_3 = *(*0x20 + -0x88);\n                                        iVar3 = *(*0x20 + -0x78);\n                                        iVar5 = *(*0x20 + -0x80);\n                                    }\n                                }\n                                if (*0x789810 == 0) {\n                                    *(iVar6 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x431dd5;\n                                    fcn.0045c220(iVar6, *(*0x20 + -0x28), param_3, param_4);\n                                }\n                                while( true ) {\n                                    iVar3 = *(iVar6 + 0x20);\n                                    if (iVar3 == 0) goto code_r0x00431e30;\n                                    if (*(iVar3 + 0x31) == '\\0') break;\n                                    noname_1 = *(iVar3 + 0x18);\n                                    if (*0x789810 == 0) {\n                                        *(iVar6 + 0x20) = noname_1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x431dfc;\n                                        fcn.0045c220(iVar6, noname_1, param_3, param_4);\n                                    }\n                                }\n                                if (iVar3 == 0) goto code_r0x00431e30;\n                                do {\n                                    *(iVar6 + 0x110) = param_3;\n                                    *(iVar6 + 0x118) = uVar4;\n                                    *(*0x20 + -0xc0) = 0x431e1f;\n                                    fcn.00459ce0();\n                                    *(*0x20 + -0xc0) = 0x431e30;\n                                    fcn.004320e0();\ncode_r0x00431e30:\n                                    *(iVar6 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar6 + 0x110) = *(iVar3 + 0x28);\n                            *(iVar6 + 0x118) = *(iVar3 + 0x20);\n                            *(*0x20 + -0xc0) = 0x431e5e;\n                            fcn.00459ce0();\n                            *(*0x20 + -0xc0) = 0x431e6f;\n                            fcn.004320e0();\ncode_r0x00431e6f:\n                            *(*0x20 + -0xc0) = 0x431e85;\n                            fcn.004320e0();\n                        }\n                        *(*0x20 + -0xc0) = 0x431e8a;\n                        fcn.00433860();\n                        *(*0x20 + -0xc0) = 0x431e9b;\n                        fcn.00434160();\n                        *(*0x20 + -0xc0) = 0x431ea5;\n                        fcn.004338e0();\n                        *(*0x20 + -0xc0) = 0x431eba;\n                        fcn.004077a0();\n                        *(*0x20 + -0xc0) = 0x431ebf;\n                        fcn.00433860();\n                        *(*0x20 + -0xc0) = 0x431ec5;\n                        fcn.00433ac0();\n                        *(*0x20 + -0xc0) = 0x431eca;\n                        fcn.004338e0();\n                        *(*0x20 + -0xc0) = 0x431edb;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0xc0) = 0x431ee5;\n                    fcn.00433860();\n                    *(*0x20 + -0xc0) = 0x431ef6;\n                    fcn.00434160();\n                    *(*0x20 + -0xc0) = 0x431efb;\n                    fcn.004338e0();\n                    *(*0x20 + -0xc0) = 0x431f10;\n                    fcn.004077a0();\n                    *(*0x20 + -0xc0) = 0x431f15;\n                    fcn.00433860();\n                    *(*0x20 + -0xc0) = 0x431f1a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0xc0) = 0x431f1f;\n                    fcn.004338e0();\n                    *(*0x20 + -0xc0) = 0x431f25;\n                    fcn.00433860();\n                    *(*0x20 + -0xc0) = 0x431f36;\n                    fcn.00434160();\n                    *(*0x20 + -0xc0) = 0x431f3b;\n                    fcn.004338e0();\n                    iVar3 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar3 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar3 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x431f65;\n                    fcn.00433860();\n                    *(*0x20 + -0xc0) = 0x431f74;\n                    fcn.00434160();\n                    *(*0x20 + -0xc0) = 0x431f79;\n                    fcn.004338e0();\n                    *(*0x20 + -0xc0) = 0x431f7e;\n                    fcn.00433860();\n                    *(*0x20 + -0xc0) = 0x431f85;\n                    fcn.00433ac0();\n                    *(*0x20 + -0xc0) = 0x431f8a;\n                    fcn.004338e0();\n                    *(*0x20 + -0xc0) = 0x431f9b;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0xc0) = 0x431fa5;\n                fcn.00433860();\n                *(*0x20 + -0xc0) = 0x431fb6;\n                fcn.00434160();\n                *(*0x20 + -0xc0) = 0x431fbb;\n                fcn.004338e0();\n                *(*0x20 + -0xc0) = 0x431fd0;\n                fcn.004077a0();\n                *(*0x20 + -0xc0) = 0x431fd5;\n                fcn.00433860();\n                *(*0x20 + -0xc0) = 0x431fda;\n                fcn.00433ac0();\n                *(*0x20 + -0xc0) = 0x431fdf;\n                fcn.004338e0();\n                *(*0x20 + -0xc0) = 0x431ff0;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0xc0) = 0x431ff5;\n            fcn.00433860();\n            *(*0x20 + -0xc0) = 0x432006;\n            fcn.00434160();\n            *(*0x20 + -0xc0) = 0x43200b;\n            fcn.004338e0();\n            *(*0x20 + -0xc0) = 0x432025;\n            fcn.004077a0();\n            *(*0x20 + -0xc0) = 0x43202a;\n            fcn.00433860();\n            *(*0x20 + -0xc0) = 0x43202f;\n            fcn.00433ac0();\n            *(*0x20 + -0xc0) = 0x432034;\n            fcn.004338e0();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x432045;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x432055;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4653
    },
    "004320a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004320a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "004320e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004320e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    fcn.00459d60();\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*(iVar1 + 0xc4) == 0) {\n        *(iVar1 + 0xc4) = 1;\n    }\n    fcn.00432340();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "004325c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004325c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x762308 == 0) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00433860();\n                fcn.00434160();\n                fcn.004338e0();\n                fcn.0042d3a0();\n            }\n            fcn.0042d3a0();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x78960c;\n    LOCK();\n    *0x78960c = *0x78960c + 1;\n    fcn.00409e40(iVar2);\n    if ((0 < *0x789a10) || (0 < *0x789a0c)) {\n        fcn.0043f2c0();\n    }\n    fcn.00435e60();\n    return 1;\n}\n",
        "token_count": 498
    },
    "00432740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00432740(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.004338e0();\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    uVar4 = *0x71d188;\n    if (*(*(unaff_R14 + 0x30) + 0xc4) < 1) {\n        bVar6 = (*0x71d188 >> 1 & 1) != 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar5 = *0x71d188 >> 2;\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n    }\n    if (uVar5 != 0) {\n        iVar2 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar5) || (uVar5 = *(unaff_R14 + 0x30),  0 < *(uVar5 + 0xc4))) {\n                fcn.00433860(arg1, uVar5, *0x71d188);\n                fcn.00434160();\n                fcn.004338e0();\n                fcn.00452340(0);\n            }\n        }\n        else {\n            fcn.00433860(arg1, uVar5, *0x71d188);\n            fcn.00433ac0();\n            fcn.004338e0();\n            fcn.004530c0();\n            fcn.00452340(0);\n        }\n        if ((*0x7895a8 == '\\0') && (iVar2 != in_RAX | bVar6)) {\n            *0x7895a8 = '\\x01';\n            fcn.00453300();\n        }\n    }\n    fcn.0040a0a0();\n    LOCK();\n    iVar3 = *0x78960c + -1;\n    bVar6 = *0x78960c != 1;\n    *0x78960c = iVar3;\n    if (bVar6) {\n        fcn.00409e80();\n        fcn.00409e80();\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 751
    },
    "004329e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004329e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2d0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "00432a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00432a60(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044a780();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x28) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00433000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433000(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x433054;\n                fcn.00435f00(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x43306e;\n                    fcn.00435c40(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x28) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x4330a5;\n            fcn.00433860();\n            *(*0x20 + -0x50) = 0x4330b6;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x4330c5;\n            fcn.004340e0();\n            *(*0x20 + -0x50) = 0x4330d6;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x4330e5;\n            fcn.00433f60();\n            *(*0x20 + -0x50) = 0x4330f6;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x433105;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x43310a;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x43310f;\n            fcn.004338e0();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x24) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x43312f;\n            fcn.00433860();\n            *(*0x20 + -0x50) = 0x433145;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x43314f;\n            fcn.004340e0();\n            *(*0x20 + -0x50) = 0x433165;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x43316f;\n            fcn.00433f60();\n            *(*0x20 + -0x50) = 0x433185;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x433190;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x433195;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x43319a;\n            fcn.004338e0();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x4331ab;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x4331be;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1158
    },
    "004338e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004338e0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040a0a0();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00433940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433940(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x43397d;\n            fcn.004336e0(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x00433a1d:\n                *(*0x20 + -0x38) = 0x433a31;\n                fcn.00456000(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x00433a1d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x4339ec;\n                fcn.0045cee0(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x433a4d;\n            in_RAX = fcn.0045c620(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x433a65;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 868
    },
    "004349e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004349e0(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x789810 == 0) {\n                    *(arg2 + 600) = unaff_RBX;\n                    *(arg2 + 0x250) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 600;\n                    *(*0x20 + -0x20) = 0x434a5e;\n                    fcn.0045c240(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x434a6a;\n                    fcn.0045c100(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 0x260) = unaff_DIL;\n                *(arg2 + 0x268) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x434ab6;\n                fcn.00459ce0();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x434ad2;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x434af0;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 831
    },
    "00434c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00434c00(ulong param_1, uint64_t param_2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar9 + 0xa0);\n    uVar8 = uVar7;\n    if (*(uVar7 + 0xe18) != 0) goto code_r0x00434c65;\n    arg4 = unaff_R14;\n    fcn.00409e80();\n    param_2 = uVar7 + 0xe10;\n    iStack40 = iVar9;\n    uStack24 = param_2;\n    uStack16 = uVar7;\n    do {\n        while ((uVar8 = *0x7361a0,  uVar10 = *(uVar7 + 0xe20) >> 1,  *(uVar7 + 0xe18) < uVar10 &&\n               (uVar10 = *0x7361a0,  *0x7361a0 != 0))) {\n            if (*0x789810 == 0) {\n                puVar1 = *0x7361a0 + 8;\n                *0x7361a0 = *(*0x7361a0 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045c2a0(uVar7, param_2, *0x7361a0);\n                fcn.0045c2a0(uVar7, param_2, uVar8);\n            }\n            arg4 = *(uVar7 + 0xe18);\n            iVar9 = *(uVar7 + 0xe10);\n            iVar4 = iVar9;\n            if (*(uVar7 + 0xe20) < arg4 + 1U) {\n                uVar10 = uVar8;\n                arg4_00 = arg4;\n                iVar4 = fcn.00445220(arg4);\n                *(uStack16 + 0xe20) = arg4;\n                uVar7 = uStack16;\n                param_2 = uStack24;\n                if (*0x789810 == 0) {\n                    *(uStack16 + 0xe10) = iVar4;\n                    arg4 = iVar9;\n                }\n                else {\n                    iVar4 = fcn.0045c100(arg4, uStack16, uVar10, arg4_00);\n                    arg4 = iVar9;\n                }\n            }\n            *(uVar7 + 0xe18) = arg4 + 1;\n            if (*0x789810 == 0) {\n                *(iVar4 + arg4 * 8) = uVar8;\n            }\n            else {\n                fcn.0045c280(uVar7, param_2, uVar8, arg4);\n            }\n        }\n        fcn.0040a0a0();\n        iVar9 = iStack40;\n        uVar8 = uStack16;\n        if (*(uStack16 + 0xe18) == 0) {\n            uVar5 = fcn.0040bf40();\n            param_2 = *(uStack16 + 0xe18);\n            uVar7 = *(uStack16 + 0xe10);\n            uVar6 = uVar7;\n            if (*(uStack16 + 0xe20) < param_2 + 1) {\n                uVar6 = fcn.00445220(param_2);\n                *(uStack16 + 0xe20) = param_2;\n                if (*0x789810 == 0) {\n                    *(uStack16 + 0xe10) = uVar6;\n                    param_2 = uVar7;\n                }\n                else {\n                    uVar6 = fcn.0045c100(param_2, uStack16, uVar10, arg4);\n                    param_2 = uVar7;\n                }\n            }\n            *(uVar8 + 0xe18) = param_2 + 1;\n            if (*0x789810 == 0) {\n                *(uVar6 + param_2 * 8) = uVar5;\n            }\n            else {\n                fcn.0045c100(uVar8, param_2, uVar10, arg4);\n            }\n        }\ncode_r0x00434c65:\n        uVar7 = *(uVar8 + 0xe18);\n        arg4 = *(uVar8 + 0xe10);\n        uVar10 = uVar7 - 1;\n        if (uVar10 < uVar7) {\n            iVar4 = *(arg4 + -8 + uVar7 * 8);\n            if (*0x789810 == 0) {\n                *(arg4 + -8 + uVar7 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                uVar10 = fcn.0045c2a0(uVar7, param_2, uVar8);\n            }\n            param_2 = *(uVar8 + 0xe20);\n            if (uVar10 <= param_2) {\n                *(uVar8 + 0xe18) = uVar10;\n                if (*(iVar4 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar4;\n                }\n                uVar10 = fcn.004320e0();\n            }\n            fcn.0045c620(uVar10, param_2);\n            uVar7 = uVar10;\n        }\n        fcn.0045c5a0(uVar7);\n    } while( true );\n}\n",
        "token_count": 1444
    },
    "00434f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434f00(void)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0xe18) == *(arg2 + 0xe20)) {\n                                    iVar5 = 0;\n                                    iVar6 = 0;\n                                    iVar7 = arg3;\n                                    iVar4 = arg2;\n                                    while( true ) {\n                                        arg1_01 = *(iVar4 + 0xe18);\n                                        if (arg1_01 <= *(iVar4 + 0xe20) >> 1) break;\n                                        arg1 = arg1_01 - 1;\n                                        if (arg1_01 <= arg1) {\ncode_r0x004351b1:\n                                            fcn.0045c5a0(arg1_01);\n                                            goto code_r0x004351bc;\n                                        }\n                                        iVar8 = *(*(iVar4 + 0xe10) + -8 + arg1_01 * 8);\n                                        if (*0x789810 == 0) {\n                                            *(*(iVar4 + 0xe10) + -8 + arg1_01 * 8) = 0;\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        else {\n                                            fcn.0045c240(iVar5, iVar6, iVar7, iVar4);\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        if (*(iVar4 + 0xe20) < arg1) {\n                                            fcn.0045c620(arg1, *(iVar4 + 0xe20));\n                                            goto code_r0x004351b1;\n                                        }\n                                        *(iVar4 + 0xe18) = arg1;\n                                        iVar6 = iVar5;\n                                        if (arg2_00 != 0) {\n                                            if (*0x789810 == 0) {\n                                                *(arg1_00 + 8) = iVar5;\n                                                iVar6 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045c240(arg1_00, arg2_00, iVar7, iVar4);\n                                                iVar6 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    fcn.00409e80();\n                                    if (*0x789810 == 0) {\n                                        *(iVar5 + 8) = *0x7361a0;\n                                        *0x7361a0 = iVar6;\n                                    }\n                                    else {\n                                        fcn.0045c220(iVar5, *0x7361a0, iVar7, iVar4);\n                                        fcn.0045c200(iVar6);\n                                    }\n                                    fcn.0040a0a0();\n                                }\n                                iVar6 = *(arg2 + 0xe18);\n                                iVar7 = *(arg2 + 0xe10);\n                                iVar4 = iVar7;\n                                if (*(arg2 + 0xe20) < iVar6 + 1U) {\n                                    iVar5 = arg3;\n                                    iVar8 = arg2;\n                                    iVar4 = fcn.00445220(iVar6);\n                                    *(arg2 + 0xe20) = iVar6;\n                                    if (*0x789810 == 0) {\n                                        *(arg2 + 0xe10) = iVar4;\n                                        iVar6 = iVar7;\n                                    }\n                                    else {\n                                        iVar4 = fcn.0045c100(iVar6, arg2, iVar5, iVar8);\n                                        iVar6 = iVar7;\n                                    }\n                                }\n                                *(arg2 + 0xe18) = iVar6 + 1;\n                                if (*0x789810 == 0) {\n                                    *(iVar4 + iVar6 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045c100(iVar6, iVar6 + 1, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x004351bc:\n                            fcn.004320e0();\n                        }\n                        fcn.004320e0();\n                    }\n                    fcn.004320e0();\n                }\n                fcn.004320e0();\n            }\n            fcn.004320e0();\n        }\n        fcn.004320e0();\n    }\n    fcn.004320e0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1313
    },
    "004353a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004353a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x4353db;\n                fcn.00409e80();\n                uVar2 = *0x735710;\n                arg1_00 = *0x735718;\n                uVar3 = *0x735710;\n                if (*0x735720 < *0x735718 + 1) {\n                    *(*0x20 + -0x58) = 0x435405;\n                    arg1 = *0x735718;\n                    uVar3 = fcn.00445220(*0x735718);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar3;\n                    *0x735720 = arg1;\n                    if (*0x789810 != 0) {\n                        *(*0x20 + -0x58) = 0x43542a;\n                        uVar3 = fcn.0045c100(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x735710;\n                    }\n                }\n                *0x735710 = uVar2;\n                *0x735718 = arg1_00 + 1;\n                if (*0x789810 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(uVar3 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x43545d;\n                    fcn.0045c220(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x735718 != 0) {\n                    uVar2 = *0x734c98;\n                    if ((*0x734c98 != *0x735710) && (uVar2 = *0x735710,  *0x789810 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x735710;\n                        *(*0x20 + -0x58) = 0x435494;\n                        fcn.00403140();\n                        uVar2 = *(*0x20 + -0x10);\n                    }\n                    *0x734c98 = uVar2;\n                    uVar1 = *0x789648;\n                    *0x789648 = *0x735718;\n                    *(*0x20 + -0x58) = 0x4354c5;\n                    fcn.0040a0a0(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x4354d6;\n                fcn.0045c5a0(0);\n            }\n            *(*0x20 + -0x58) = 0x4354e7;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4354f2;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 926
    },
    "00435a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435a60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00452c00(0x20);\n    }\n    fcn.00409e80();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00435a00();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    arg2 = in_RAX;\n    uVar2 = fcn.0045c040();\n    *(in_RAX + 0xf0) = uVar2;\n    fcn.0045bfa0(in_RAX, arg2);\n    uVar3 = fcn.0045c040();\n    *(in_RAX + 0xf4) = uVar3;\n    if ((*(in_RAX + 0xf0) | uVar3) == 0) {\n        *(in_RAX + 0xf4) = 1;\n    }\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2;\n    }\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x128) = *0x734ca0;\n    }\n    else {\n        fcn.0045c200();\n    }\n    if (*0x789810 != '\\0') {\n        fcn.00403140();\n    }\n    *0x734ca0 = in_RAX;\n    fcn.0040a0a0();\n    uVar4 = fcn.0040bf40();\n    if (*0x789810 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045c100(in_RAX, arg2, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "00435c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435c40(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x73b7b0 != '\\0') {\n                *(*0x20 + -0x58) = 0x435c6f;\n                fcn.0044f920();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x435cb1;\n                fcn.004363a0(1);\n                *(*0x20 + -0x58) = 0x435cd0;\n                fcn.00440140(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x435cd5;\n                fcn.004389c0();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x30) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x435d2c;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x435d3d;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x435d47;\n            fcn.004340e0();\n            *(*0x20 + -0x58) = 0x435d58;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x435d65;\n            fcn.00433f60();\n            *(*0x20 + -0x58) = 0x435d76;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x435d85;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x435d8a;\n            fcn.00433ac0();\n            *(*0x20 + -0x58) = 0x435d8f;\n            fcn.004338e0();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x2c) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x435daf;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x435dc5;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x435dcf;\n            fcn.004340e0();\n            *(*0x20 + -0x58) = 0x435de5;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x435def;\n            fcn.00433f60();\n            *(*0x20 + -0x58) = 0x435e05;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x435e10;\n            fcn.00433e60();\n            *(*0x20 + -0x58) = 0x435e15;\n            fcn.00433ac0();\n            *(*0x20 + -0x58) = 0x435e1a;\n            fcn.004338e0();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x435e2b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x435e3f;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1399
    },
    "004363a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.004363a0(ulong arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x436720));\n        uStack64 = auStack24;\n        fcn.00459d60();\n    }\n    iVar8 = 0;\n    piVar3 = NULL;\n    while( true ) {\n        LOCK();\n        if (unaff_EBX == *(in_RAX + 0x90)) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.004320e0();\n            pcVar1 = swi(3);\n            piVar3 = (*pcVar1)();\n            return piVar3;\n        }\n        if (iVar8 == 0) {\n            fcn.0045de80();\n            piVar3 = uStack64 + 0x271;\n        }\n        fcn.0045de80();\n        piStack40 = piVar3;\n        iStack32 = iVar8;\n        if (uStack64 < piVar3) {\n            uVar5 = 0;\n            while ((piVar3 = piStack40,  uVar5 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x0043669c:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045bc80();\n                uVar5 = uVar5 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x69e5a0;\n            fcn.00459d60();\n            fcn.0045de80();\n            piVar3 = 0x69ef64;\n        }\n        iVar8 = iStack32 + 1;\n    }\n    *(in_RAX + 0x90) = arg1;\n    uVar2 = unaff_EBX;\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        uVar2 = *(in_RAX + 0xbd) + 1;\n        *(in_RAX + 0xbd) = uVar2;\n    }\n    piVar3 = uVar2;\n    if (*(in_RAX + 0xbc) != '\\0') {\n        fcn.0045de80();\n        piVar3 = uStack64;\n        if (unaff_EBX == 1) {\n            piVar3 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar3;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar5 = *(in_RAX + 200);\n            if (uVar5 < 0) {\n                LOCK();\n                piVar3 = *0x7378c8;\n                *0x7378c8 = *0x7378c8 + 1;\n            }\n            else {\n                if (uVar5 < 0x10) {\n                    iVar8 = 0;\n                    uVar7 = uVar5;\n                }\n                else {\n                    iVar6 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                        }\n                    }\n                    if (uVar5 == 0) {\n                        iVar6 = -1;\n                    }\n                    iVar8 = iVar6 + -3;\n                    if (iVar8 * 0x10 < 0x2d0) {\n                        iVar6 = uVar5 >> ((iVar6 - 4U | ~-(iVar6 - 4U < 0x40)) & 0x3f);\n                        iVar4 = ((iVar6 >> 0x3f) >> 0x3c) + iVar6 >> 4;\n                        uVar5 = iVar4 * 0x10;\n                        uVar7 = iVar6 + iVar4 * -0x10;\n                    }\n                    else {\n                        iVar8 = 0x2c;\n                        uVar7 = 0xf;\n                    }\n                }\n                uVar7 = iVar8 * 0x10 + uVar7;\n                if (0x2cf < uVar7) {\n                    fcn.0045c5c0(0x2d0);\n                    goto code_r0x0043669c;\n                }\n                piVar3 = uVar7 * 8 + 0x736248;\n                LOCK();\n                *piVar3 = *piVar3 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 1280
    },
    "004367c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004367c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x436825;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x436838;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 401
    },
    "00436b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00436b60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00436b60:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x7895fc != 0) {\n            *(*0x20 + -0x60) = 0x436ba5;\n            uVar4 = fcn.0042b5e0();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x436bb4;\n            fcn.0043a240();\n        }\n        *(*0x20 + -0x60) = 0x436bc5;\n        fcn.00409e80();\n        if (*0x789608 != 0) {\n            *0x789608 = 0;\n        }\n        *(*0x20 + -0x60) = 0x436beb;\n        uVar4 = fcn.0043db20();\n        *(*0x20 + -0x18) = uVar4;\n        *0x7361e0 = 0;\n        if (*0x7361f0 != 0) {\n            *0x7361f0 = 0;\n            *(*0x20 + -0x60) = 0x436c19;\n            fcn.0040a180();\n        }\n        *(*0x20 + -0x60) = 0x436c27;\n        fcn.0040a0a0();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x436c95;\n                fcn.0045de80();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x436cd4;\n                    fcn.0044e500(0);\n                }\n                *(*0x20 + -0x60) = 0x436cd9;\n                fcn.004389c0();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x436c8d;\n                fcn.00437da0(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00436d14;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x436c7a;\n                fcn.0040a180();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00436d26;\ncode_r0x00436d14:\n    *(*0x20 + -0x60) = 0x436d25;\n    in_AL = fcn.004320e0();\ncode_r0x00436d26:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x436d2f;\n    fcn.00459ea0();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x00436b60;\n}\n",
        "token_count": 1136
    },
    "00436ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436ee0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7895a7 == '\\0') {\n        *0x7895a7 = '\\x01';\n        fcn.004379e0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00436f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436f80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar in_AL;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (iVar4 != 0x735ce0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x28) = 0x436fba;\n                fcn.0042e3c0();\n                if (*(*(*0x20 + -0x10) + 0x50) != 0) {\n                    *(*0x20 + -0x28) = 0x436fd4;\n                    fcn.004462e0();\n                    if (*0x789810 == 0) {\n                        *(*(*0x20 + -0x10) + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x436ffc;\n                        fcn.0045c220(*(*0x20 + -0x10), 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x28) = 0x437009;\n                fcn.00409e80();\n                iVar4 = *(*0x20 + -0x10);\n                piVar3 = 0x734ca0;\n                while (iVar2 = *piVar3,  iVar2 != 0) {\n                    if (iVar2 == iVar4) {\n                        iVar2 = *(iVar4 + 0x128);\n                        if (*0x789810 == 0) {\n                            *piVar3 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x43704c;\n                            fcn.0045c220(iVar4, iVar2, param_3, param_4);\n                        }\n                        uVar1 = *(*0x20 + 8);\n                        if (uVar1 == 0) {\n                            *(iVar4 + 0xec) = 1;\n                            if (*0x789810 == 0) {\n                                *(iVar4 + 0x278) = *0x7361d8;\n                                *0x7361d8 = iVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = 0x43708e;\n                                fcn.0045c240(iVar4, uVar1, param_3, param_4);\n                                *(*0x20 + -0x28) = 0x43709a;\n                                fcn.0045c200();\n                            }\n                        }\n                        *(*0x20 + -0x28) = 0x4370a8;\n                        fcn.0040a0a0();\n                        iVar4 = *0x789708;\n                        LOCK();\n                        *0x789708 = *0x789708 + *(*(*0x20 + -0x10) + 0x100);\n                        *(*0x20 + -0x28) = 0x4370c5;\n                        fcn.0043e4e0(*(*0x20 + -0x10), iVar4);\n                        *(*0x20 + -0x28) = 0x4370ca;\n                        fcn.004386e0();\n                        *(*0x20 + -0x28) = 0x4370d8;\n                        fcn.00409e80();\n                        *0x736120 = *0x736120 + 1;\n                        *(*0x20 + -0x28) = 0x4370e5;\n                        fcn.0043e6a0();\n                        *(*0x20 + -0x28) = 0x4370f3;\n                        fcn.0040a0a0();\n                        *(*0x20 + -0x28) = 0x4370fd;\n                        fcn.0042e460();\n                        if (*(*0x20 + 8) != '\\0') {\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x437125;\n                        fcn.0042dfc0(*(*0x20 + -0x10));\n                        return;\n                    }\n                    piVar3 = iVar2 + 0x128;\n                }\n                *(*0x20 + -0x28) = 0x437145;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x28) = 0x43714a;\n            fcn.0043e4e0();\n            *(*0x20 + -0x28) = 0x43714f;\n            fcn.004386e0();\n            *(*0x20 + -0x28) = 0x43715d;\n            fcn.00409e80();\n            *0x736120 = *0x736120 + 1;\n            *(*0x20 + -0x28) = 0x437169;\n            fcn.0043e6a0();\n            *(*0x20 + -0x28) = 0x437177;\n            fcn.0040a0a0();\n            *(*0x20 + -0x28) = 0x43717c;\n            fcn.00436f20();\n            *(*0x20 + -0x28) = 0x43718d;\n            in_AL = fcn.004320e0();\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x437197;\n        fcn.00459ea0();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1414
    },
    "004371c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004371c0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x437219;\n            fcn.00409e80();\n            if (*0x736210 == 0) {\n                *0x736210 = *0x7895f4 + -1;\n                if (*0x789810 == 0) {\n                    *0x736208 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x43725c;\n                    fcn.0045c100(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x735738;\n                iVar9 = *0x735730;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x26d0;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x43729b;\n                fcn.0043f180();\n                for (iVar8 = *0x736130; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x26d0) == 1) {\n                        *(iVar8 + 0x26d0) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x4372da;\n                        (*pcVar6)();\n                        *0x736210 = *0x736210 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x736210;\n                *(*0x20 + -0x68) = 0x437305;\n                fcn.0040a0a0();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x437314;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x735730;\n                *(*0x20 + -0x40) = *0x735738;\n                iVar9 = *0x735730;\n                iVar10 = *0x735738;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x26d0) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                        }\n                        else {\n                            bVar13 = false;\n                        }\n                    }\n                    else {\n                        bVar13 = false;\n                    }\n                    if (bVar13) {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x73b7b0 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x437398;\n                            fcn.0044fb20();\n                            *(*0x20 + -0x68) = 0x4373a5;\n                            fcn.0044f380();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x4373b5;\n                        fcn.004386e0();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                    param_3 = 0;\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x4373ec;\n                        cVar7 = fcn.0040a5e0();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x4373db;\n                        fcn.0043f180();\n                    }\n                    *0x736218 = 0;\n                }\n                if (*0x736210 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x735738 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x437445;\n                            fcn.00409e80();\n                            if (*0x789810 == 0) {\n                                *0x736208 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x437469;\n                                fcn.0045c200(0);\n                            }\n                            *(*0x20 + -0x68) = 0x437477;\n                            fcn.0040a0a0();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x735730 + iVar8 * 8) + 0x26d0) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x4374be;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x68) = 0x4374cf;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x68) = 0x4374e5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x4374f0;\n        fcn.0045e5a0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1922
    },
    "00437500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00437500(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x26d0;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x736208)();\n    fcn.00409e80();\n    iVar3 = *0x736210 + -1;\n    bVar4 = *0x736210 == 1;\n    *0x736210 = iVar3;\n    if (bVar4) {\n        fcn.0040a180();\n    }\n    uVar2 = fcn.0040a0a0();\n    return uVar2;\n}\n",
        "token_count": 258
    },
    "004375c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004375c0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t arg2;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = *(unaff_R14 + 0x30);\n    iVar6 = unaff_R14;\n    if (*(arg2 + 0xa0) == 0) {\n        fcn.0043e360();\n    }\n    if (*0x7361d8 != 0) {\n        fcn.00409e80(arg1);\n        iStack40 = *0x7361d8;\n        iVar4 = 0;\n        while (iStack40 != 0) {\n            if (*(iStack40 + 0xec) == 0) {\n                fcn.00459d60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iStack40 = *(iStack40 + 0x278);\n            }\n            else {\n                arg2 = *(iStack40 + 0x278);\n                if (*0x789810 == 0) {\n                    *(iStack40 + 0x278) = iVar4;\n                    iVar4 = iStack40;\n                    iStack40 = arg2;\n                }\n                else {\n                    fcn.0045c100(iStack40, arg2, in_R8, in_R9);\n                    iVar4 = iStack40;\n                    iStack40 = arg2;\n                }\n            }\n        }\n        if (*0x789810 != 0) {\n            fcn.0045c100(0, arg2, in_R8, in_R9);\n            iVar4 = *0x7361d8;\n        }\n        *0x7361d8 = iVar4;\n        fcn.0040a0a0();\n    }\n    piVar3 = fcn.0040bf40();\n    if (*0x789810 == 0) {\n        piVar3[0x11] = unaff_RBX;\n    }\n    else {\n        piVar3 = fcn.0045c200();\n    }\n    fcn.00435a60();\n    iVar4 = fcn.0043c5a0();\n    if (*0x789810 == 0) {\n        *piVar3 = iVar4;\n    }\n    else {\n        iVar4 = fcn.0045c100(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    piVar5 = piVar3;\n    if (*0x789810 == 0) {\n        *(iVar4 + 0x30) = piVar3;\n    }\n    else {\n        fcn.0045c200();\n    }\n    if (in_RAX == *(*(iVar6 + 0x30) + 0xa0)) {\n        fcn.0043e4e0();\n        piVar5 = piVar3;\n    }\n    iVar2 = *(*(iVar6 + 0x30) + 0xd8);\n    *(*(iVar6 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return piVar5;\n}\n",
        "token_count": 896
    },
    "00437a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437a60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = fcn.004375c0(0xffffffffffffffff);\n    iVar3 = fcn.0043c5a0();\n    *(iVar3 + 0x40) = 0x45c0c1;\n    iVar5 = *(iVar3 + 8) + -0x20;\n    *(iVar3 + 0x38) = iVar5;\n    *(iVar3 + 0x60) = 0;\n    *(iVar3 + 0x48) = iVar3;\n    *(iVar3 + 0x78) = *(iVar3 + 0x40);\n    *(iVar3 + 0x70) = iVar5;\n    uVar4 = *(iVar3 + 0x38);\n    *(iVar3 + 0x80) = uVar4;\n    fcn.004363a0(6);\n    iVar5 = iVar2;\n    if (*0x789810 == 0) {\n        *(iVar3 + 0x30) = iVar2;\n    }\n    else {\n        iVar3 = fcn.0045c200();\n    }\n    if (*0x789810 == 0) {\n        *(iVar5 + 0x90) = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045c100(iVar5, uVar4, param_3, param_4);\n    }\n    *(iVar5 + 0x244) = *(iVar5 + 0x244) + 1;\n    *(iVar5 + 0x138) = iVar3;\n    *(iVar3 + 0xe8) = iVar5;\n    LOCK();\n    iVar5 = *0x7360e0 + 1;\n    *0x7360e0 = *0x7360e0 + 1;\n    *(iVar3 + 0x98) = iVar5;\n    fcn.004353a0();\n    iVar1 = *0x736128;\n    LOCK();\n    *0x736128 = *0x736128 + 1;\n    uVar4 = fcn.00437ca0(iVar1);\n    *(iVar2 + 0x130) = uVar4;\n    *0x7895d4 = *0x7895d4 + 1;\n    *0x789698 = iVar2;\n    return;\n}\n",
        "token_count": 624
    },
    "00437ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437d40)\n\nuint64_t fcn.00437ca0(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x789698 == 1) {\n            fcn.0045de60();\n        }\n        if ((*0x789698 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x7895d8 = *0x7895d8 + 1;\n        }\n        fcn.0045dd80();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x789698;\n    *0x789698 = *0x789698 ^ *0x789698 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 201
    },
    "00437da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437da0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x437dcb;\n            iVar2 = fcn.004375c0(arg1);\n            iVar1 = *(*0x20 + 0x10);\n            *(iVar2 + 0x118) = iVar1 != 0;\n            *(iVar2 + 0xa8) = iVar1;\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar2,  *(arg1 + 0x240) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x437e79;\n                fcn.00437ec0();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x437e1c;\n            fcn.00409e80();\n            if (*0x7898e0 != 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 0x130) = *0x7898c8;\n                *0x7898c8 = iVar1;\n                if (*0x7898d0 != '\\0') {\n                    *0x7898d0 = '\\0';\n                    *(*0x20 + -0x30) = 0x437e5c;\n                    fcn.0040a180();\n                }\n                *(*0x20 + -0x30) = 0x437e6a;\n                fcn.0040a0a0();\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x437e94;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x437ea9;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 728
    },
    "00437ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437ec0(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7895af == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x437f8d;\n                fcn.00441a40();\n                *(*0x20 + -0x40) = 0x437f97;\n                fcn.0042de40();\n                *(*0x20 + -0x40) = 0x437fa5;\n                fcn.00441b80();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x734a30 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = CONCAT71(*0x69e4d1, vtable.I_f.0);\n                *(*0x20 + -0x40) = 0x437f38;\n                fcn.00441a40();\n                *(*0x20 + -0x38) = *0x734a30;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x437f52;\n                fcn.0045bce0();\n                *(*0x20 + -0x40) = 0x437f72;\n                fcn.00441b80();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x437fc5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x437fd0;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 664
    },
    "00437fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437fe0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x7898e0 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x7898e0 = 1;\n    fcn.00437da0(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "004380c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004380c0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0x288) == 0) {\n        return 0;\n    }\n    fcn.00409e80();\n    ppcVar1 = *(*(unaff_R14 + 0x30) + 0x290);\n    if (ppcVar1 != NULL) {\n        if (*0x7895f0 != 0) {\n            fcn.004320e0();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        (**ppcVar1)();\n        *(*(unaff_R14 + 0x30) + 0x290) = 0;\n        *(*(unaff_R14 + 0x30) + 0x288) = 0;\n    }\n    uVar3 = fcn.0040a0a0();\n    return uVar3 & 0xffffffffffffff00 | ppcVar1 != NULL;\n}\n",
        "token_count": 264
    },
    "00438300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438300(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x28) = 0x438355;\n                        fcn.00409e80();\n                        *(*0x20 + -0x28) = 0x438365;\n                        fcn.0043fc60();\n                        *(*0x20 + -0x28) = 0x438373;\n                        fcn.0040a0a0();\n                        *(*0x20 + -0x28) = 0x438378;\n                        fcn.00436f20();\n                        *(*0x20 + -0x28) = 0x43838d;\n                        fcn.0043e360();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x28) = 0x4383bc;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x28) = 0x4383cd;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x28) = 0x4383de;\n            fcn.004320e0();\n        }\n        *(puVar2 + -8) = 0x4383e5;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 522
    },
    "00438420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438420(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uchar unaff_BL;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint64_t uVar8;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x438465;\n            fcn.00409e80();\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 == 0) {\n                *(*0x20 + -0x48) = 0x438474;\n                iVar5 = fcn.00440020();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x48) = 0x438585;\n                    fcn.0040a0a0();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x004385a5:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x73613c + -1;\n                    uVar7 = *0x73613c - 1;\n                    uVar8 = uVar7;\n                    *0x73613c = iVar2;\n                    if (-1 < uVar7) goto code_r0x004385a5;\n                    *(*0x20 + -0x48) = 0x4385eb;\n                    cVar4 = fcn.004320e0();\n                    goto code_r0x004385eb;\n                }\n            }\n            iVar3 = *0x736100;\n            if (*0x736100 != 0) {\n                *0x736100 = *(*0x736100 + 0x130);\n                *0x736108 = *0x736108 + -1;\n            }\n            *(*0x20 + -0x18) = iVar5;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x4384b0;\n                uVar6 = fcn.00435a00();\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x48) = 0x4384c5;\n                fcn.0040a0a0();\n                *(*0x20 + -0x48) = 0x4384ef;\n                fcn.00437da0(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x438538;\n            fcn.0040a0a0();\n            uVar8 = *(*0x20 + -0x10);\n            if (*(uVar8 + 0xe4) == '\\0') {\n                if (*(uVar8 + 0xa8) == 0) {\n                    cVar4 = *(*0x20 + 0x10);\n                    if (cVar4 == '\\0') {\n                        cVar4 = '\\0';\ncode_r0x004385eb:\n                        *(uVar8 + 0xe4) = cVar4;\n                        *(uVar8 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x438609;\n                        fcn.0040a180();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar5 + 0x5f4) != *(iVar5 + 0x5f4));\n                    if ((*(iVar5 + 0x5f4) == *(iVar5 + 0x5f0)) && (*(iVar5 + 0xdf8) == 0)) goto code_r0x004385eb;\n                    *(*0x20 + -0x48) = 0x438687;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x48) = 0x438698;\n                fcn.004320e0();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x4386a9;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        puVar9[0x10] = unaff_BL;\n        *(puVar9 + -8) = 0x4386b8;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_BL = puVar9[0x10];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "004386e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004386e0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    do {\n    } while (*(in_RAX + 0x5f4) != *(in_RAX + 0x5f4));\n    if (((*(in_RAX + 0x5f4) != *(in_RAX + 0x5f0)) || (*(in_RAX + 0xdf8) != 0)) || (*0x736150 != 0)) {\n        fcn.00438420();\n        return;\n    }\n    if (*0x7895e8 != 0) {\n        if ((*(in_RAX + 0x1698) == 0) || ((*(*(in_RAX + 0x1698) + 0x10) == 0 && (*(*(in_RAX + 0x16a0) + 0x10) == 0)))) {\n            if (*0x78a040 == 0) {\n                if (*0x78a0c8 < *0x78a0cc) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00438420();\n            return;\n        }\n    }\n    uVar2 = *0x73613c + *0x736138;\n    if ((*0x73613c + *0x736138 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x73613c == 0)) {\n        *0x73613c = 1;\n        fcn.00438420();\n        return;\n    }\n    fcn.00409e80(uVar2);\n    if (*0x7361e0 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x7361e4 + -1;\n        bVar5 = *0x7361e4 == 1;\n        *0x7361e4 = iVar3;\n        if (bVar5) {\n            fcn.0040a180();\n        }\n        fcn.0040a0a0();\n        return;\n    }\n    if (*(in_RAX + 0x26d0) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x26d0) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x26d0) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x736208)();\n        iVar3 = *0x736210 + -1;\n        bVar5 = *0x736210 == 1;\n        *0x736210 = iVar3;\n        if (bVar5) {\n            fcn.0040a180();\n        }\n    }\n    if (*0x736150 == 0) {\n        if ((*0x736138 == *0x7895f4 + -1) && (*0x7360e8 != 0)) {\n            fcn.0040a0a0();\n            fcn.00438420();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1668);\n        iVar4 = *(in_RAX + 0x1670);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.0043ff00();\n        fcn.0040a0a0();\n        if (iVar4 != 0) {\n            fcn.0043a160();\n        }\n        return;\n    }\n    fcn.0040a0a0();\n    fcn.00438420();\n    return;\n}\n",
        "token_count": 955
    },
    "00438a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438a40(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x138) != 0) && (*(*(iVar2 + 0x138) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x438a90;\n                    fcn.0043e4e0();\n                    *(*0x20 + -0x50) = 0x438a95;\n                    fcn.004386e0();\n                }\n                *(*0x20 + -0x50) = 0x438a9f;\n                fcn.0043e640();\n                *(*0x20 + -0x50) = 0x438aa5;\n                fcn.00436f20();\n                uVar1 = *(*(*(*(*0x20 + -0x20) + 0x30) + 0x138) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x438ad6;\n                    fcn.0043e360();\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x438afd;\n                fcn.00433860();\n                *(*0x20 + -0x50) = 0x438b0e;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438b19;\n                fcn.00433e60();\n                *(*0x20 + -0x50) = 0x438b2a;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438b2f;\n                fcn.004338e0();\n                iVar2 = *(*(*(*0x20 + -0x20) + 0x30) + 0x138);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x34) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x438b65;\n                fcn.00433860();\n                *(*0x20 + -0x50) = 0x438b76;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438b85;\n                fcn.004340e0();\n                *(*0x20 + -0x50) = 0x438b96;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438ba5;\n                fcn.00433f60();\n                *(*0x20 + -0x50) = 0x438bb6;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438bc5;\n                fcn.00433e60();\n                *(*0x20 + -0x50) = 0x438bca;\n                fcn.00433ac0();\n                *(*0x20 + -0x50) = 0x438bcf;\n                fcn.004338e0();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x50) = 0x438bef;\n                fcn.00433860();\n                *(*0x20 + -0x50) = 0x438c05;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438c0f;\n                fcn.004340e0();\n                *(*0x20 + -0x50) = 0x438c25;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438c2f;\n                fcn.00433f60();\n                *(*0x20 + -0x50) = 0x438c45;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x438c50;\n                fcn.00433e60();\n                *(*0x20 + -0x50) = 0x438c55;\n                fcn.00433ac0();\n                *(*0x20 + -0x50) = 0x438c5a;\n                fcn.004338e0();\n                *(*0x20 + -0x50) = 0x438c6b;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x50) = 0x438c7c;\n            fcn.004320e0();\n        }\n        *(puVar3 + -8) = 0x438c85;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1383
    },
    "00438ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438ca0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x438cdf;\n                    fcn.0043e640();\n                    *(*0x20 + -0x28) = 0x438ce5;\n                    uVar2 = fcn.0043e4e0();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x438cfe;\n                    fcn.0040a180();\n                    *(*0x20 + -0x28) = 0x438d05;\n                    fcn.00438300();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x438d25;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x28) = 0x438d36;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x438d45;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 492
    },
    "00438d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438d60(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7361e0 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x00438db0:\n                    *(*0x20 + -0x28) = 0x438db5;\n                    uVar2 = fcn.0043e4e0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x438dc8;\n                    fcn.00409e80();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x7361e4 + -1;\n                    bVar5 = *0x7361e4 == 1;\n                    *0x7361e4 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x438df4;\n                        fcn.0040a180();\n                    }\n                    *(*0x20 + -0x28) = 0x438e05;\n                    fcn.0040a0a0();\n                    *(*0x20 + -0x28) = 0x438e0a;\n                    fcn.00438300();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x73613c + -1;\n                iVar3 = *0x73613c + -1;\n                *0x73613c = iVar1;\n                if (-1 < iVar3) goto code_r0x00438db0;\n                *(*0x20 + -0x28) = 0x438e25;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x28) = 0x438e36;\n            fcn.004320e0();\n        }\n        *(puVar4 + -8) = 0x438e3c;\n        fcn.00459ea0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 633
    },
    "00438e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438e60(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x789810 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045c100(arg1, *(unaff_R14 + 0x30), arg3, arg4);\n    }\n    if (*0x789810 == 0) {\n        in_RAX[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        in_RAX = fcn.0045c260(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.004363a0(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe0) != *0x736220) {\n        fcn.0042ebc0();\n    }\n    if (*0x73b7b0 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.0044fa40();\n        }\n        fcn.0044f6e0();\n    }\n    fcn.00459cc0();\n    return;\n}\n",
        "token_count": 485
    },
    "00438fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439218)\n// WARNING: Removing unreachable block (ram,0x0043921d)\n\nuint64_t fcn.00438fe0(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong arg3;\n    ulong noname_2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\ncode_r0x0043900e:\n    while (uVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x7361e0 != 0) {\n        fcn.00438d60();\n    }\n    if (*(uVar2 + 0x26d0) != 0) {\n        fcn.00437500();\n    }\n    uVar3 = fcn.0043a960();\n    if (((*0x7895aa != '\\0') && (*0x7895ab != '\\0')) && (iVar4 = fcn.00414b20(),  iVar4 != 0)) {\n        fcn.00435c40(1);\n    }\n    iVar4 = **0x72dbb8;\n    if (iVar4 != 0) {\n        fcn.0045bce0();\n        iStack232 = iVar4;\n    }\n    uVar5 = fcn.00440580();\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*0x736150 != 0) {\n        fcn.00409e80();\n        uStack64 = fcn.0043fcc0();\n        fcn.0040a0a0();\n        if (uStack64 != 0) {\n            return uStack64;\n        }\n    }\n    if (*0x7895fc == 0) {\n        bVar12 = false;\n    }\n    else if (*0x789600 == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x7360e8 != 0;\n    }\n    if ((bVar12) && (uVar5 = fcn.0042b5e0(),  uVar5 != 0)) {\n        fcn.0043a240();\n        fcn.004363a0(1);\n        if (*0x73b7b0 != '\\0') {\n            fcn.0044f920();\n        }\n        return uVar5;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar11 = *0x7895f4 - *0x736138;\n        bVar12 = *0x73613c << 1 < uVar11;\n    }\n    else {\n        bVar12 = true;\n        uVar11 = *0x7895f4;\n    }\n    uVar5 = uVar11;\n    if (bVar12) goto code_r0x004391c8;\n    uVar5 = 0;\n    goto code_r0x00439227;\ncode_r0x004391c8:\n    uVar3 = *(unaff_R14 + 0x30);\n    if (*(uVar3 + 0xe4) == '\\0') {\n        *(uVar3 + 0xe4) = 1;\n        LOCK();\n        uVar3 = *0x73613c;\n        *0x73613c = *0x73613c + 1;\n    }\n    uVar9 = fcn.00439a80();\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (!bVar12) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\ncode_r0x00439227:\n        if (*0x7895e8 == 0) {\n            bVar12 = false;\n        }\n        else if ((*(uVar2 + 0x1698) == 0) || ((*(*(uVar2 + 0x1698) + 0x10) == 0 && (*(*(uVar2 + 0x16a0) + 0x10) == 0))))\n        {\n            if (*0x78a040 == 0) {\n                if (*0x78a0c8 < *0x78a0cc) {\n                    bVar12 = true;\n                }\n                else {\n                    bVar12 = false;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n        }\n        else {\n            bVar12 = true;\n        }\n        uVar9 = uVar2;\n        if (!bVar12) goto code_r0x004392ac;\n        while( true ) {\n            if (*0x7896c8 == 0) {\n                piVar10 = NULL;\n            }\n            else {\n                piVar10 = (*0x7896c8 >> 0x13) << 3;\n                *0x7896c8 = *piVar10;\n                LOCK();\n            }\n            if (piVar10 != NULL) {\n                *(uVar9 + 0x1688) = 3;\n                uVar2 = piVar10[2];\n                fcn.004363a0(1);\n                if (*0x73b7b0 != '\\0') {\n                    fcn.0044f920();\n                }\n                return uVar2;\n            }\ncode_r0x004392ac:\n            noname_2 = *0x7357e0;\n            arg3 = *0x7357a0;\n            uStack48 = *0x735730;\n            uStack104 = *0x735738;\n            uStack96 = *0x735740;\n            uStack72 = *0x735790;\n            uStack80 = *0x7357d0;\n            uVar9 = *0x735738;\n            fcn.00409e80();\n            if ((*0x7361e0 != 0) || (*(uVar2 + 0x26d0) != 0)) break;\n            if (*0x736150 != 0) {\n                uStack56 = fcn.0043fcc0();\n                fcn.0040a0a0();\n                return uStack56;\n            }\n            uVar6 = fcn.0043e4e0();\n            if (uVar6 == uVar2) {\n                fcn.0043ff00();\n                fcn.0040a0a0();\n                uVar6 = uStack104;\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar5;\n                if (cVar1 == '\\0') {\ncode_r0x004394a3:\n                    iVar4 = *0x7360e8;\n                    if (*0x7895fc == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x789600 == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x7360e8 = 0;\n                        bVar12 = iVar4 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x7895fc != 0) && ((*0x7360f0 == 0 || (uVar7 < *0x7360f0)))) {\n                            fcn.0042b4e0();\n                        }\ncode_r0x00439860:\n                        fcn.00438300();\n                        goto code_r0x0043900e;\n                    }\n                    uVar9 = 0x7360f0;\n                    *0x7360f0 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            if ((uVar7 != 0) && (uVar3 == 0)) {\n                                uStack88 = uVar7;\n                                fcn.0045de80();\n                            }\n                            uVar3 = fcn.0042b5e0(unaff_R14, 0x7360f0);\n                            uVar2 = *0x7360f0;\n                            *0x7360f0 = 0;\n                            fcn.0045de80(uVar2);\n                            iVar4 = *0x7360e8;\n                            *0x7360e8 = iStack232;\n                            if ((*0x7896a0 == 0) || (uVar3 != 0)) {\n                                fcn.00409e80(iVar4);\n                                iStack40 = fcn.00440020();\n                                fcn.0040a0a0();\n                                if (iStack40 == 0) {\n                                    fcn.0043a240();\n                                    goto code_r0x00439860;\n                                }\n                                fcn.0043e360();\n                                if (uVar3 != 0) {\n                                    fcn.0043a240();\n                                    fcn.004363a0(1);\n                                    if (*0x73b7b0 != '\\0') {\n                                        fcn.0044f920();\n                                    }\n                                    return uVar3;\n                                }\n                                if (cVar1 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x73613c = *0x73613c + 1;\n                                }\n                            }\n                            else {\n                                fcn.00438300();\n                            }\n                            goto code_r0x0043900e;\n                        }\n                        fcn.004320e0();\n                    }\n                    fcn.004320e0();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    uVar11 = *0x73613c - 1;\n                    uVar8 = *0x73613c - 1;\n                    uVar9 = uVar8;\n                    *0x73613c = uVar11;\n                    if (-1 < uVar8) {\n                        iVar4 = fcn.00439e00(uStack96, uVar9, arg3);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.00439fe0();\n                            if (iVar4 != 0) {\n                                iStack40 = iVar4;\n                                fcn.0043e360();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x73613c = *0x73613c + 1;\n                                *(iStack40 + 0x1688) = 3;\n                                fcn.004363a0(1);\n                                if (*0x73b7b0 != '\\0') {\n                                    fcn.0044f920();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.00439f40(uStack96, uVar9, noname_2, uVar5);\n                            goto code_r0x004394a3;\n                        }\n                        fcn.0043e360();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x73613c = *0x73613c + 1;\n                        goto code_r0x0043900e;\n                    }\n                }\n                fcn.004320e0();\n            }\n            fcn.004320e0();\n        }\n        fcn.0040a0a0();\n    }\n    goto code_r0x0043900e;\n}\n",
        "token_count": 2756
    },
    "00439fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a0b9)\n\nint64_t fcn.00439fe0(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7895e8 == 0) {\n        return 0;\n    }\n    if (*0x78a040 == 0) {\n        if (*0x78a0c8 < *0x78a0cc) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.00409e80();\n        iVar2 = fcn.00440020();\n        if (iVar2 == 0) {\n            fcn.0040a0a0();\n            return 0;\n        }\n        if (*0x7895e8 != 0) {\n            if (*0x7896c8 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                piVar3 = (*0x7896c8 >> 0x13) << 3;\n                *0x7896c8 = *piVar3;\n                LOCK();\n            }\n            if (piVar3 == NULL) {\n                fcn.0043ff00();\n                fcn.0040a0a0();\n                return 0;\n            }\n            fcn.0040a0a0();\n            return iVar2;\n        }\n        fcn.0043ff00();\n        fcn.0040a0a0();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 425
    },
    "0043a1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a1c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x73613c + -1) {\n                    *(*0x20 + -0x20) = 0x43a205;\n                    *0x73613c = *0x73613c + -1;\n                    fcn.004389c0();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43a225;\n                *0x73613c = *0x73613c + -1;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x20) = 0x43a236;\n            fcn.004320e0();\n        }\n        *(puVar1 + -8) = 0x43a23c;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 372
    },
    "0043a240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043a240(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x73b7b0 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.0044f920();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.004363a0(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.00409e80();\n        iVar2 = *0x736140;\n        iVar4 = *0x736148;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x736148 != 0)) {\n            *(*0x736148 + 0xa0) = iStack64;\n            iVar2 = *0x736140;\n        }\n        *0x736148 = iVar4;\n        *0x736140 = iVar2;\n        *0x736150 = *0x736150 + arg1;\n        piVar1 = fcn.0040a0a0();\n        while ((arg1 != 0 && (*0x736138 != 0))) {\n            piVar1 = fcn.00438420();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x736138;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.00409e80();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x736148 == 0) {\n                *0x736140 = auStack48._0_8_;\n            }\n            else {\n                *(*0x736148 + 0xa0) = auStack48._0_8_;\n            }\n            *0x736148 = auStack48._8_8_;\n        }\n        *0x736150 = *0x736150 + iVar2;\n        fcn.0040a0a0();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x736138 != 0))) {\n            fcn.00438420();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.00440440(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1028
    },
    "0043a560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a560(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar3 + 0x138) != 0) {\n                    *(*0x20 + -0x48) = 0x43a59d;\n                    fcn.00438a40();\n                    uVar4 = *(*(*(*0x20 + -0x20) + 0x30) + 0x138);\n                    *(*0x20 + -0x48) = 0x43a5b7;\n                    fcn.00438e60(uVar4, param_2, param_3, param_4);\n                }\n                uVar5 = *(*0x20 + -0x20);\n                param_2 = *(uVar5 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        while( true ) {\n                            iVar3 = *(*(uVar5 + 0x30) + 0xa0);\n                            *(iVar3 + 0x2708) = 0;\n                            if (*0x7361e0 == 0) break;\n                            *(*0x20 + -0x48) = 0x43a8fa;\n                            fcn.00438d60();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        if (*(iVar3 + 0x26d0) != 0) {\n                            *(*0x20 + -0x10) = iVar3;\n                            *(*0x20 + -0x48) = 0x43a60c;\n                            fcn.00437500();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        param_2 = *(uVar5 + 0x30);\n                        if ((*(param_2 + 0xe4) != '\\0') &&\n                           ((*(iVar3 + 0xdf8) != 0 ||\n                            (param_2 = *(iVar3 + 0x5f0),  *(iVar3 + 0x5f4) != *(iVar3 + 0x5f0))))) break;\n                        *(*0x20 + -0x48) = 0x43a653;\n                        fcn.0043a960();\n                        if ((*0x73b7b0 == '\\0') && (*0x73b7b1 == '\\0')) {\n                            iVar3 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43a66a;\n                            iVar3 = fcn.0044e380();\n                            bVar9 = iVar3 == 0;\n                            if (!bVar9) {\n                                *(*0x20 + -0x28) = iVar3;\n                                uVar5 = 0;\n                                *(*0x20 + -0x48) = 0x43a685;\n                                fcn.004363a0(1);\n                                *(*0x20 + -0x48) = 0x43a691;\n                                fcn.0044f920();\n                                iVar3 = *(*0x20 + -0x28);\n                                bVar9 = iVar3 == 0;\n                            }\n                            uVar5 = uVar5 & 0xffffffffffffff00 | !bVar9;\n                        }\n                        uVar7 = 0;\n                        if ((iVar3 == 0) && (*0x7895e8 != 0)) {\n                            *(*0x20 + -0x2b) = uVar5;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = *(*(iVar6 + 0x30) + 0xa0);\n                            *(*0x20 + -0x48) = 0x43a6d4;\n                            iVar3 = fcn.0041c640();\n                            uVar5 = iVar6 & 0xffffff00 | iVar3 != 0 | *(*0x20 + -0x2b);\n                        }\n                        *(*0x20 + -0x29) = uVar5;\n                        if (iVar3 == 0) {\n                            iVar6 = *(*0x20 + -0x20);\n                            if ((*(*(*(iVar6 + 0x30) + 0xa0) + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x736150)) {\n                                *(*0x20 + -0x48) = 0x43a729;\n                                fcn.00409e80();\n                                uVar7 = 1;\n                                *(*0x20 + -0x48) = 0x43a745;\n                                uVar4 = fcn.0043fcc0();\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x48) = 0x43a758;\n                                fcn.0040a0a0();\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                iVar3 = *(*0x20 + -0x18);\n                            }\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43a785;\n                            iVar3 = fcn.00440580();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43a799;\n                            iVar3 = fcn.00438fe0();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x2a) = uVar7;\n                        *(*0x20 + -0x18) = iVar3;\n                        if (*(*(iVar6 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x48) = 0x43a7be;\n                            fcn.0043a1c0();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (*0x736158 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43a7e9;\n                            uVar1 = fcn.00453740();\n                            uVar1 = uVar1 ^ 1;\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043a8bb:\n                            if (uVar5 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43a8c5;\n                                fcn.004389c0();\n                                iVar3 = *(*0x20 + -0x18);\n                                iVar6 = *(*0x20 + -0x20);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x48) = 0x43a8eb;\n                                fcn.00438e60(uVar5, iVar6, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x48) = 0x43a5d3;\n                            fcn.00438ca0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43a819;\n                            fcn.00409e80();\n                            if (*0x736158 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x43a838;\n                                cVar2 = fcn.00453740();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43a8a7;\n                                fcn.0040a0a0();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                goto code_r0x0043a8bb;\n                            }\n                            iVar3 = *(*0x20 + -0x18);\n                            *(iVar3 + 0xa0) = 0;\n                            iVar6 = iVar3;\n                            if (*0x736168 != 0) {\n                                *(*0x736168 + 0xa0) = iVar3;\n                                iVar6 = *0x736160;\n                            }\n                            *0x736160 = iVar6;\n                            *0x736170 = *0x736170 + 1;\n                            *(*0x20 + -0x48) = 0x43a88f;\n                            *0x736168 = iVar3;\n                            fcn.0040a0a0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x43a918;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x48) = 0x43a929;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x48) = 0x43a93a;\n            fcn.004320e0();\n        }\n        *(puVar8 + -8) = 0x43a945;\n        fcn.00459ea0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2481
    },
    "0043a960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043a960(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(in_RAX + 0x1668);\n    iVar2 = *(in_RAX + 0x1670);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045de80();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x26fc) <= *(in_RAX + 0x26f8) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.00409e80();\n    if (0 < *(in_RAX + 0x26e8)) {\n        fcn.0044d160();\n        do {\n            if (*(in_RAX + 0x26e8) < 1) break;\n            iVar1 = fcn.0044d580();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x26e8) >> 2 < *(in_RAX + 0x26fc))) {\n        fcn.0044d9e0();\n    }\n    fcn.0040a0a0();\n    return unaff_RBX;\n}\n",
        "token_count": 497
    },
    "0043ad20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043ad20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43ad5f;\n                fcn.004363a0(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43ad8e;\n                fcn.00409e80();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x736148 != 0) {\n                    *(*0x736148 + 0xa0) = iVar1;\n                    iVar2 = *0x736140;\n                }\n                *0x736140 = iVar2;\n                *0x736150 = *0x736150 + 1;\n                *(*0x20 + -0x38) = 0x43addf;\n                *0x736148 = iVar1;\n                fcn.0040a0a0();\n                *(*0x20 + -0x38) = 0x43ade5;\n                fcn.0043a560();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43ae10;\n            fcn.00433860();\n            *(*0x20 + -0x38) = 0x43ae25;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x43ae2f;\n            fcn.004340e0();\n            *(*0x20 + -0x38) = 0x43ae45;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x43ae4f;\n            fcn.00433f60();\n            *(*0x20 + -0x38) = 0x43ae65;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x43ae70;\n            fcn.00433e60();\n            *(*0x20 + -0x38) = 0x43ae75;\n            fcn.00433ac0();\n            *(*0x20 + -0x38) = 0x43ae7a;\n            fcn.004338e0();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43ae9a;\n            fcn.00433860();\n            *(*0x20 + -0x38) = 0x43aeab;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x43aeb5;\n            fcn.004340e0();\n            *(*0x20 + -0x38) = 0x43aec6;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x43aed0;\n            fcn.00433f60();\n            *(*0x20 + -0x38) = 0x43aee5;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x43aef0;\n            fcn.00433e60();\n            *(*0x20 + -0x38) = 0x43aef5;\n            fcn.00433ac0();\n            *(*0x20 + -0x38) = 0x43aefa;\n            fcn.004338e0();\n            *(*0x20 + -0x38) = 0x43af0b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43af16;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1204
    },
    "0043b080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x73b7b0 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044e500(0);\n    }\n    fcn.0043ad20();\n    return;\n}\n",
        "token_count": 141
    },
    "0043b100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b100(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x73b7b0 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43b132;\n                fcn.0044f8a0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043b17e;\n                *(*0x20 + -0x48) = 0x43b167;\n                iVar1 = fcn.0044a780();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x29) & 2) == 0) {\ncode_r0x0043b17e:\n                        *(*0x20 + -0x48) = 0x43b18d;\n                        fcn.004367c0(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43b1c5;\n                        fcn.00435f00(9);\n                        *(*0x20 + -0x48) = 0x43b1ca;\n                        fcn.0043a560();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43b1d9;\n                    uVar2 = fcn.0044ae60();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43b1e8;\n                    fcn.00433860();\n                    *(*0x20 + -0x48) = 0x43b1f9;\n                    fcn.00434160();\n                    *(*0x20 + -0x48) = 0x43b208;\n                    fcn.00434160();\n                    *(*0x20 + -0x48) = 0x43b219;\n                    fcn.00434160();\n                    *(*0x20 + -0x48) = 0x43b21e;\n                    fcn.004338e0();\n                    *(*0x20 + -0x48) = 0x43b22f;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x48) = 0x43b245;\n                in_RAX = fcn.004320e0();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43b266;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x43b277;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43b285;\n            fcn.004340e0();\n            *(*0x20 + -0x48) = 0x43b296;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43b2a5;\n            fcn.00433f60();\n            *(*0x20 + -0x48) = 0x43b2b6;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43b2c5;\n            fcn.00433e60();\n            *(*0x20 + -0x48) = 0x43b2ca;\n            fcn.00433ac0();\n            *(*0x20 + -0x48) = 0x43b2cf;\n            fcn.004338e0();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43b2ef;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x43b305;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43b30f;\n            fcn.004340e0();\n            *(*0x20 + -0x48) = 0x43b325;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43b32f;\n            fcn.00433f60();\n            *(*0x20 + -0x48) = 0x43b345;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x43b350;\n            fcn.00433e60();\n            *(*0x20 + -0x48) = 0x43b355;\n            fcn.00433ac0();\n            *(*0x20 + -0x48) = 0x43b35a;\n            fcn.004338e0();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43b36b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43b376;\n        fcn.0045e5a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1552
    },
    "0045e3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e3a0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    while (puVar1 = iVar2 + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n        fcn.00459ea0();\n    }\n    if (*0x73b7b0 != '\\0') {\n        fcn.0044e500(0);\n    }\n    fcn.00459ce0();\n    return;\n}\n",
        "token_count": 145
    },
    "0043b780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b780(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x60) = 0;\n        *(unaff_R14 + 0x58) = 0;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00435380();\n        }\n        return;\n    }\n    fcn.004320e0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 213
    },
    "0043b800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b800(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043b780();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.004363a0(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.00459d60();\n    }\n    if (*0x73b7b0 != '\\0') {\n        fcn.00459d60();\n        fcn.0043b780();\n    }\n    if (*0x7361f0 != 0) {\n        fcn.00459d60();\n        fcn.0043b780();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x26d0) != 0) {\n        fcn.00459d60();\n        fcn.0043b780();\n    }\n    *(unaff_R14[6] + 0x274) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x7361e0 != 0) {\n        fcn.00459d60();\n        fcn.0043b780();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 556
    },
    "0043c0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043c199)\n\nulong fcn.0043c0c0(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x7361e4 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043e3c0();\n            fcn.0043c280();\n            return 1;\n        }\n    }\n    if (*0x736130 != 0) {\n        fcn.00459d60();\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "0043c280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c280(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x274)) {\n        if (*0x73b7b0 != '\\0') {\n            fcn.00459d60();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0043c820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043c820(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    char cVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    ulong arg2;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uint32_t uVar13;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                if (in_RAX != 0) {\n                    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar2 = *piVar2 + 1;\n                    *(*0x20 + -0x10) = unaff_R14;\n                    *(*0x20 + -0x34) = 0;\n                    *(*0x20 + -0x18) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x20) = *(*(unaff_R14 + 0x30) + 0xa0);\n                    *(*0x20 + -0x50) = 0x43c8a5;\n                    iVar7 = fcn.0043d0c0();\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x50) = 0x43c8b4;\n                        uVar8 = fcn.0043c5a0();\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0x50) = 0x43c8c5;\n                        fcn.004363a0(6);\n                        *(*0x20 + -0x50) = 0x43c8cf;\n                        fcn.004353a0();\n                        iVar7 = *(*0x20 + -0x28);\n                    }\n                    if (*(iVar7 + 8) != 0) {\n                        if (*(iVar7 + 0x90) == 6) {\n                            *(*0x20 + -0x28) = iVar7;\n                            uVar8 = *(iVar7 + 8);\n                            *(*0x20 + -0x30) = uVar8;\n                            *(*0x20 + -0x50) = 0x43c90d;\n                            fcn.0045cc20(uVar8, iVar7 + 0x38);\n                            iVar7 = (*(*0x20 + -0x30) - (*(*0x20 + -0x34) + (-(*(*0x20 + -0x34) + 0x20) & 7U))) + -0x20;\n                            iVar10 = *(*0x20 + -0x28);\n                            *(iVar10 + 0x38) = iVar7;\n                            *(iVar10 + 0x80) = iVar7;\n                            *(iVar10 + 0x40) = 0x45c0c1;\n                            *(iVar10 + 0x48) = iVar10;\n                            puVar11 = *(iVar10 + 0x38) + -8;\n                            puVar5 = *(*0x20 + 8);\n                            uVar8 = *puVar5;\n                            arg4 = *(iVar10 + 0x40);\n                            *puVar11 = arg4;\n                            *(iVar10 + 0x38) = puVar11;\n                            *(iVar10 + 0x40) = uVar8;\n                            if (*0x789810 == 0) {\n                                *(iVar10 + 0x50) = puVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x43c997;\n                                fcn.0045c100(iVar10, iVar10 + 0x50, uVar8, arg4);\n                            }\n                            arg2 = *(*0x20 + 0x28);\n                            *(iVar10 + 0x128) = arg2;\n                            *(*0x20 + -0x50) = 0x43c9ad;\n                            uVar9 = fcn.0043cc00();\n                            if (*0x789810 == 0) {\n                                iVar7 = *(*0x20 + -0x28);\n                                *(iVar7 + 0x130) = uVar9;\n                            }\n                            else {\n                                iVar7 = *(*0x20 + -0x28);\n                                *(*0x20 + -0x50) = 0x43c9d5;\n                                fcn.0045c100(iVar7, arg2, uVar8, arg4);\n                            }\n                            *(iVar7 + 0x138) = **(*0x20 + 8);\n                            iVar10 = *(*(*(*0x20 + -0x10) + 0x30) + 0x90);\n                            if (iVar10 != 0) {\n                                if (*0x789810 == 0) {\n                                    *(iVar7 + 0x168) = *(iVar10 + 0x168);\n                                }\n                                else {\n                                    *(*0x20 + -0x50) = 0x43ca1e;\n                                    fcn.0045c260(iVar7, *(*0x20 + -0x10), uVar8, arg4);\n                                }\n                            }\n                            *(*0x20 + -0x50) = 0x43ca28;\n                            cVar6 = fcn.00453740();\n                            if (cVar6 != '\\0') {\n                                LOCK();\n                                *0x736128 = *0x736128 + 1;\n                            }\n                            iVar7 = *(unaff_R14 + 0x30);\n                            uVar13 = *(iVar7 + 0xf0);\n                            uVar3 = *(iVar7 + 0xf4);\n                            *(iVar7 + 0xf0) = uVar3;\n                            uVar13 = uVar13 ^ uVar13 << 0x11;\n                            uVar13 = uVar3 >> 0x10 ^ uVar13 >> 7 ^ uVar3 ^ uVar13;\n                            *(iVar7 + 0xf4) = uVar13;\n                            uVar3 = uVar3 + uVar13;\n                            iVar7 = *(*0x20 + -0x28);\n                            *(iVar7 + 0xbd) = uVar3;\n                            if ((uVar3 & 7) == 0) {\n                                *(iVar7 + 0xbc) = 1;\n                            }\n                            *(*0x20 + -0x50) = 0x43ca9e;\n                            fcn.004363a0(1);\n                            iVar10 = *0x7360e0;\n                            iVar7 = *(*0x20 + -0x20);\n                            if (*(iVar7 + 0x5e8) == *(iVar7 + 0x5e0)) {\n                                LOCK();\n                                iVar1 = *0x7360e0 + 1;\n                                *0x7360e0 = *0x7360e0 + 0x10;\n                                *(iVar7 + 0x5e0) = iVar1;\n                                *(iVar7 + 0x5e8) = iVar10 + 0x11;\n                            }\n                            iVar10 = *(*0x20 + -0x28);\n                            *(iVar10 + 0x98) = *(iVar7 + 0x5e0);\n                            *(iVar7 + 0x5e0) = *(iVar7 + 0x5e0) + 1;\n                            if (*0x73b7b0 != '\\0') {\n                                *(*0x20 + -0x50) = 0x43cb09;\n                                fcn.0044f600();\n                                iVar10 = *(*0x20 + -0x28);\n                            }\n                            iVar4 = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8);\n                            *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return iVar10;\n                        }\n                        *(*0x20 + -0x50) = 0x43cb58;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x50) = 0x43cb69;\n                    fcn.004320e0();\n                    *(*0x20 + -0x50) = 0x43cb7a;\n                    fcn.004320e0();\n                }\n                iVar7 = *(unaff_R14 + 0x30);\n                *(iVar7 + 0xc4) = 0xffffffff;\n                *(*0x20 + -0x50) = 0x43cb99;\n                fcn.004320e0();\n                arg1._0_4_ = iVar7;\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x50) = 0x43cbaa;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + 0x28) = unaff_RSI;\n        *(puVar12 + -8) = 0x43cbc8;\n        fcn.0045e5a0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1._0_4_ = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        unaff_RSI = *(puVar12 + 0x28);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 2397
    },
    "0043cc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043cc00(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x789a14 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar6 = *(in_RAX + 0x130);\n            if (puVar6 == NULL) {\n                uVar8 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar6;\n                uVar8 = puVar6[1];\n            }\n            *(*0x20 + -0x378) = uVar8;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar8 + 1;\n            if (*0x789a14 < iVar9) {\n                iVar9 = *0x789a14;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43cca5;\n            uVar4 = fcn.00445140(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43ccee;\n                fcn.0040fcc0(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43cd0f;\n                fcn.0045c74e();\n                *(*0x20 + -0x3d0) = 0;\n                *(*0x20 + -0x3d8) = 0x43cd48;\n                uVar4 = fcn.0044fea0(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43cd5f;\n                puVar5 = fcn.00445140(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43cd8f;\n                    fcn.0045cee0(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x128);\n                if (*0x789810 == 0) {\n                    puVar6 = *(*0x20 + -0x38);\n                    *puVar6 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar6 + 1) = *(*0x20 + -0x28);\n                    *(puVar6 + 0xc) = uVar1;\n                    *(puVar6 + 2) = uVar2;\n                    *(puVar6 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar6 + 3) = *(*0x20 + -0x18);\n                    *(puVar6 + 0x1c) = uVar1;\n                    *(puVar6 + 4) = uVar2;\n                    *(puVar6 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ce50;\n                    fcn.0040fb00(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43ce5c;\n                puVar6 = fcn.0040bf40();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x789810 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ce8f;\n                    puVar6 = fcn.0045c200(*(*0x20 + -0x38));\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43cea9;\n            in_RAX = fcn.0045c660(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43ceb4;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1616
    },
    "0043cec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cec0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*(*unaff_RBX + 8) - **unaff_RBX != 0x2000) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43cf14;\n                    fcn.004462e0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0xe00);\n                *(in_RAX + 0xe00) = unaff_RBX;\n                iVar2 = *(in_RAX + 0xe08) + 1;\n                *(in_RAX + 0xe08) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0xe08)) {\n                        piVar1 = *(in_RAX + 0xe00);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0xe00) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43d005;\n                    fcn.00409e80();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x736188;\n                        *0x736188 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x736180;\n                        *0x736180 = *(*0x20 + -0x38);\n                    }\n                    *0x736190 = *0x736190 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43d085;\n                    fcn.0040a0a0();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43d09b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43d0ab;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1187
    },
    "0043d0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043d0c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    do {\n        piVar1 = *(in_RAX + 0xe00);\n        if ((piVar1 != NULL) || ((*0x736180 == 0 && (*0x736188 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0xe00) = piVar1[0x14];\n                *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n                if (*piVar1 == 0) {\n                    fcn.00459d60();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.00409e80();\n        while (*(in_RAX + 0xe08) < 0x20) {\n            if (*0x736180 == 0) {\n                if (*0x736188 == 0) break;\n                iVar2 = *0x736188;\n                *0x736188 = *(*0x736188 + 0xa0);\n            }\n            else {\n                iVar2 = *0x736180;\n                *0x736180 = *(*0x736180 + 0xa0);\n            }\n            *0x736190 = *0x736190 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0xe00);\n            *(in_RAX + 0xe00) = iVar2;\n            *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + 1;\n        }\n        fcn.0040a0a0();\n    } while( true );\n}\n",
        "token_count": 471
    },
    "0043d2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043d2c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0xe00);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0xe00) = piVar1[0x14];\n        }\n        *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00409e80();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x736188;\n        *0x736188 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x736180;\n        *0x736180 = auStack72._0_8_;\n    }\n    *0x736190 = *0x736190 + iVar2;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 586
    },
    "0043d420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d420(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x244) == 0) {\n        fcn.00459d60();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x244;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x244) == 0) && (*(iVar2 + 0x240) == 0)) {\n        *(iVar2 + 0x138) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0043d500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d500(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint unaff_EBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x386) = 0;\n            *(in_RAX + 0x388) = 0x80;\n            if (*0x789810 == 0) {\n                *(in_RAX + 900) = in_RAX + 0x38a;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43d55c;\n                in_RAX = fcn.0045c200();\n            }\n            for (iVar5 = 0; iVar5 < 5; iVar5 = iVar5 + 1) {\n                *(in_RAX + iVar5 * 6 + 0x1c) = 0;\n                *(in_RAX + iVar5 * 6 + 0x1e) = 0x20;\n                if (*0x789810 == 0) {\n                    *(in_RAX + iVar5 * 6 + 0x1a) = in_RAX + iVar5 * 0x40 + 0x38;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x43d5b1;\n                    in_RAX = fcn.0045c200();\n                }\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x20) = 0x43d5cb;\n            fcn.0042aac0(in_RAX + 0x5b0);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                iVar6 = *(*0x20 + 0x10);\n                if (iVar6 != 0) {\n                    *(*0x20 + -0x20) = 0x43d605;\n                    uVar2 = fcn.004129a0();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    iVar6 = *(*0x20 + 0x10);\n                    goto code_r0x0043d612;\n                }\n                if (*0x7896f0 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x7896f0;\n                    goto code_r0x0043d612;\n                }\n            }\n            else {\n                iVar6 = *(*0x20 + 0x10);\ncode_r0x0043d612:\n                arg1 = *0x7357d8;\n                iVar7 = ((iVar6 >> 0x1f) >> 0x1b) + iVar6 >> 5;\n                uVar4 = iVar6 + iVar7 * -0x20;\n                if (-1 < uVar4) {\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    uVar3 = iVar7;\n                    if (uVar3 < *0x7357d8) {\n                        puVar1 = *0x7357d0 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x735798) {\n                            puVar1 = *0x735790 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43d686;\n                        fcn.0045c5a0(*0x735798);\n                    }\n                    *(*0x20 + -0x20) = 0x43d68e;\n                    fcn.0045c5a0(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43d693;\n                fcn.0042f9a0();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43d6a5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_EBX;\n        *(puVar8 + -8) = 0x43d6b4;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_EBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1237
    },
    "0043d6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d6e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    while (*(in_RAX + 0x5f0) != *(in_RAX + 0x5f4)) {\n        uVar2 = *(in_RAX + 0x5f4) - 1;\n        *(in_RAX + 0x5f4) = uVar2;\n        iVar1 = *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8);\n        *(iVar1 + 0xa0) = *0x736140;\n        if (*0x736148 == 0) {\n            *0x736148 = iVar1;\n        }\n        *0x736150 = *0x736150 + 1;\n        *0x736140 = iVar1;\n    }\n    iVar1 = *(in_RAX + 0xdf8);\n    if (iVar1 != 0) {\n        *(iVar1 + 0xa0) = *0x736140;\n        if (*0x736148 == 0) {\n            *0x736148 = iVar1;\n        }\n        *0x736150 = *0x736150 + 1;\n        *0x736140 = iVar1;\n        *(in_RAX + 0xdf8) = 0;\n    }\n    if (0 < *(in_RAX + 0x26e8)) {\n        fcn.00409e80();\n        fcn.00409e80();\n        fcn.0044cf00(*(in_RAX + 0x26e8));\n        *(in_RAX + 0x26e8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        iVar1 = in_RAX;\n        if (*0x789810 == 0) {\n            *(in_RAX + 0x26e0) = 0;\n        }\n        else {\n            fcn.0045c220(in_RAX, 0, param_3, param_4);\n        }\n        *(iVar1 + 0x26f8) = 0;\n        *(iVar1 + 0x1668) = 0;\n        fcn.0040a0a0();\n        fcn.0040a0a0();\n    }\n    if (*0x7895f0 != 0) {\n        fcn.0042ac00();\n        fcn.00420c40(in_RAX);\n    }\n    fcn.0040fe00(in_RAX + 0xe28);\n    *(in_RAX + 0xe18) = 0;\n    *(in_RAX + 0xe20) = 0x80;\n    if (*0x789810 == 0) {\n        *(in_RAX + 0xe10) = in_RAX + 0xe28;\n    }\n    else {\n        fcn.0045c220(in_RAX, in_RAX + 0xe28, param_3, param_4);\n    }\n    for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n        fcn.0040fe00();\n        *(in_RAX + 0x70 + iVar1 * 0x18) = 0;\n        *(in_RAX + 0x78 + iVar1 * 0x18) = 0x20;\n        if (*0x789810 == 0) {\n            *(in_RAX + 0x68 + iVar1 * 0x18) = in_RAX + iVar1 * 0x100 + 0xe0;\n        }\n        else {\n            fcn.0045c100(iVar1, iVar1 * 3, in_RAX + iVar1 * 0x18 + 0x68, param_4);\n        }\n    }\n    fcn.00459d60();\n    fcn.00412b00(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043d2c0();\n    fcn.0044e440();\n    *(in_RAX + 0x1678) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1075
    },
    "0043db20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043db20(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t in_EAX;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *unaff_RBX;\n    int64_t *piVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint64_t arg4;\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x7895f4) && (0 < in_EAX)) {\n                *(*0x20 + -0x68) = *0x7895f4;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x73b7b0 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb0) = 0x43db9c;\n                    fcn.0044e500(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x43dba5;\n                fcn.0045de80();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar6 = *(*0x20 + -0xa8);\n                if (*0x736228 == 0) {\n                    uVar13 = *(*0x20 + -0x68);\n                }\n                else {\n                    uVar13 = *(*0x20 + -0x68);\n                    *0x736230 = *0x736230 + uVar13 * (iVar6 - *0x736228);\n                }\n                uVar14 = *(*0x20 + 8);\n                uVar7 = uVar14;\n                uVar18 = ((uVar14 + 0x1f >> 0x1f) >> 0x1b) + uVar14 + 0x1f >> 5;\n                arg4 = uVar18;\n                *(*0x20 + -100) = uVar18;\n                *0x736228 = iVar6;\n                if (*0x735738 < uVar14) {\n                    *(*0x20 + -0xb0) = 0x43dc37;\n                    fcn.00409e80();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x735740 < iVar1) {\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0xb0) = 0x43dc7c;\n                        uVar5 = fcn.00445140(iVar1);\n                        *(*0x20 + -0x10) = uVar5;\n                        uVar5 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xb0) = 0x43dca6;\n                        fcn.0040fcc0(uVar5);\n                        *0x735738 = *(*0x20 + -0x48);\n                        *0x735740 = *0x735738;\n                        if (*0x789810 == 0) {\n                            *0x735730 = *(*0x20 + -0x10);\n                            piVar16 = *0x735738;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43dce7;\n                            fcn.0045c260(uVar5, *0x735738, uVar7, arg4);\n                            piVar16 = *0x735738;\n                        }\ncode_r0x0043dcee:\n                        *0x735738 = piVar16;\n                        unaff_RSI = *0x735798;\n                        uVar13 = *(*0x20 + -100);\n                        uVar7 = uVar13;\n                        if (*0x7357a0 < uVar13) {\n                            *(*0x20 + -0x50) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43dd53;\n                            uVar5 = fcn.00444fe0(*0x735798);\n                            unaff_RBX = *(*0x20 + -0x50);\n                            piVar16 = unaff_RBX;\n                            piVar15 = unaff_RBX;\n                            if (*0x789810 != 0) {\n                                *(*0x20 + -0xb0) = 0x43dd85;\n                                piVar16 = *0x735798;\n                                *0x735798 = unaff_RBX;\n                                piVar15 = *0x7357a0;\n                                *0x7357a0 = unaff_RBX;\n                                fcn.0045c100(piVar16, piVar15, uVar7, arg4);\n                                uVar5 = *0x735790;\n                                piVar16 = *0x735798;\n                                piVar15 = *0x7357a0;\n                            }\n                            *0x7357a0 = piVar15;\n                            *0x735798 = piVar16;\n                            *0x735790 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43dd9f;\n                            uVar5 = fcn.00444fe0(*0x7357d8);\n                            *0x7357e0 = *(*0x20 + -0x50);\n                            piVar16 = *0x7357e0;\n                            if (*0x789810 != 0) {\n                                *(*0x20 + -0xb0) = 0x43ddd0;\n                                piVar16 = *0x7357d8;\n                                *0x7357d8 = *0x7357e0;\n                                fcn.0045c100(piVar16, *0x7357e0, uVar7, arg4);\n                                uVar5 = *0x7357d0;\n                                piVar16 = *0x7357d8;\n                            }\ncode_r0x0043ddd2:\n                            *0x7357d8 = piVar16;\n                            *0x7357d0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43ddde;\n                            fcn.0040a0a0();\n                            uVar13 = *(*0x20 + -0x68);\n                            uVar7 = *(*0x20 + 8);\n                            arg4 = *(*0x20 + -100);\n                            goto code_r0x0043de20;\n                        }\n                        unaff_RBX = uVar13;\n                        piVar15 = *0x7357a0;\n                        if (unaff_RBX <= *0x7357a0) {\n                            piVar15 = *0x7357e0;\n                            *0x735798 = unaff_RBX;\n                            uVar5 = *0x7357d0;\n                            piVar16 = unaff_RBX;\n                            if (unaff_RBX <= *0x7357e0) goto code_r0x0043ddd2;\n                            goto code_r0x0043e319;\n                        }\n                        goto code_r0x0043e325;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar15 = *0x735740;\n                    piVar16 = unaff_RSI;\n                    if (unaff_RSI <= *0x735740) goto code_r0x0043dcee;\n                }\n                else {\ncode_r0x0043de20:\n                    while( true ) {\n                        piVar16 = uVar13;\n                        if (uVar7 <= uVar13) break;\n                        unaff_RSI = uVar13;\n                        piVar12 = *0x735738;\n                        piVar15 = piVar16;\n                        if (*0x735738 <= unaff_RSI) goto code_r0x0043e311;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x40) = unaff_RSI;\n                        iVar6 = (*0x735730)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb0) = 0x43de67;\n                            iVar6 = fcn.0040bf40();\n                            piVar16 = *(*0x20 + -0x58);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb0) = 0x43de85;\n                        fcn.0043d500();\n                        piVar12 = *0x735738;\n                        piVar15 = *0x735730;\n                        if (*0x735738 <= *(*0x20 + -0x40)) goto code_r0x0043e30c;\n                        piVar15 = *0x735730 + *(*0x20 + -0x40);\n                        if (*0x789810 != '\\0') {\n                            *(*0x20 + -0x18) = piVar15;\n                            piVar16 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb0) = 0x43decf;\n                            fcn.00403140();\n                            piVar15 = *(*0x20 + -0x18);\n                        }\n                        *piVar15 = *(*0x20 + -0x28);\n                        uVar13 = *(*0x20 + -0x58) + 1;\n                        uVar7 = *(*0x20 + 8);\n                        arg4 = *(*0x20 + -100);\n                        unaff_RBX = piVar16;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043df98:\n                        piVar15 = *(*0x20 + -0x20);\ncode_r0x0043dfa0:\n                        *(piVar15[6] + 0xa0) = 0;\n                        piVar16 = *0x735730;\n                        piVar12 = *0x735738;\n                        if (*0x735738 != NULL) {\n                            iVar6 = **0x735730;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb0) = 0x43dfe5;\n                            fcn.0043e360();\n                            if (*0x73b7b0 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x43dff3;\n                                fcn.0044f6e0();\n                            }\n                            goto code_r0x0043dff3;\n                        }\n                    }\n                    else {\n                        if (uVar7 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043df98;\n                            if (*0x73b7b0 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb0) = 0x43df35;\n                                fcn.0044e500(0);\n                                *(*0x20 + -0xb0) = 0x43df4d;\n                                fcn.0044f380();\n                                arg4 = *(*0x20 + -100);\n                            }\n                            piVar15 = *(*0x20 + -0x20);\n                            *(*(piVar15[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043dfa0;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb0) = 0x43df96;\n                        fcn.00413340();\n                        piVar16 = unaff_RBX;\ncode_r0x0043dff3:\n                        *0x7896f0 = 0;\n                        uVar14 = *(*0x20 + -0x68);\n                        uVar13 = *(*0x20 + 8);\n                        uVar18 = uVar13;\n                        while (piVar12 = *0x735738,  piVar15 = uVar14,  uVar13 < uVar14) {\n                            piVar16 = uVar13;\n                            unaff_RSI = *0x735738;\n                            if (*0x735738 <= piVar16) goto code_r0x0043e2f8;\n                            *(*0x20 + -0x5c) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43e01a;\n                            fcn.0043d6e0();\n                            uVar18 = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0x68);\n                            unaff_RSI = piVar12;\n                            uVar13 = *(*0x20 + -0x5c) + 1;\n                        }\n                        if (uVar18 == *0x735738) {\ncode_r0x0043e0e5:\n                            uVar9 = uVar18;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = 0;\n                            while( true ) {\n                                uVar18 = uVar18 - 1;\n                                piVar12 = uVar18;\n                                *(*0x20 + -0x30) = uVar7;\n                                if (uVar18 < 0) {\n                                    *0x735860 = uVar9;\n                                    *0x735870 = 0;\n                                    for (uVar13 = 1; uVar7 = *0x735868,  uVar11 = uVar9,  uVar14 = uVar13, \n                                        uVar13 <= uVar9; uVar13 = uVar13 + 1) {\n                                        while (uVar18 = uVar11,  uVar18 != 0) {\n                                            uVar11 = uVar14 % uVar11;\n                                            uVar14 = uVar18;\n                                        }\n                                        if (uVar14 == 1) {\n                                            uVar11 = *0x735870 + 1;\n                                            uVar10 = *0x735870;\n                                            uVar8 = *0x735868;\n                                            if (*0x735878 < uVar11) {\n                                                *(*0x20 + -0x54) = uVar13;\n                                                *(*0x20 + -0xb0) = 0x43e21e;\n                                                uVar9 = *0x735870;\n                                                uVar10 = *0x735868;\n                                                uVar8 = fcn.00445220(*0x735870);\n                                                uVar4 = uVar8;\n                                                *0x735878 = uVar9;\n                                                if (*0x789810 != 0) {\n                                                    *(*0x20 + -0xb0) = 0x43e245;\n                                                    uVar8 = fcn.0045c100(uVar9, uVar11, uVar10, arg4);\n                                                    uVar4 = *0x735868;\n                                                }\n                                                *0x735868 = uVar4;\n                                                uVar9 = *(*0x20 + 8);\n                                                uVar13 = *(*0x20 + -0x54);\n                                                uVar10 = uVar7;\n                                            }\n                                            *0x735870 = uVar10 + 1;\n                                            *(uVar8 + uVar10 * 4) = uVar13;\n                                        }\n                                    }\n                                    *0x7895f4 = uVar9;\n                                    return;\n                                }\n                                if (*0x735738 <= uVar18) break;\n                                uVar11 = (*0x735730)[uVar18];\n                                arg4 = uVar7;\n                                if (*(*(iVar6 + 0x30) + 0xa0) != uVar11) {\n                                    *(uVar11 + 4) = 0;\n                                    iVar3 = *0x736100;\n                                    do {\n                                    } while (*(uVar11 + 0x5f4) != *(uVar11 + 0x5f4));\n                                    if ((*(uVar11 + 0x5f4) == *(uVar11 + 0x5f0)) && (*(uVar11 + 0xdf8) == 0)) {\n                                        *(*0x20 + -0x60) = uVar18;\n                                        *(*0x20 + -0xb0) = 0x43e165;\n                                        fcn.0043ff00();\n                                        uVar9 = *(*0x20 + 8);\n                                        uVar18 = *(*0x20 + -0x60);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        uVar7 = *(*0x20 + -0x30);\n                                        arg4 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x736100 != 0) {\n                                            *0x736100 = *(*0x736100 + 0x130);\n                                            *0x736108 = *0x736108 + -1;\n                                        }\n                                        *(uVar11 + 0x38) = iVar3;\n                                        *(uVar11 + 8) = uVar7;\n                                        uVar7 = uVar11;\n                                        arg4 = uVar11;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb0) = 0x43e2da;\n                            fcn.0045c5a0(*0x735738);\ncode_r0x0043e2da:\n                            *(*0x20 + -0xb0) = 0x43e2e5;\n                            fcn.0045c620(piVar16, piVar12);\ncode_r0x0043e2e5:\n                            *(*0x20 + -0xb0) = 0x43e2ed;\n                            fcn.0045c620(piVar16, piVar12);\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43e06c;\n                            fcn.00409e80();\n                            piVar15 = *(*0x20 + 8);\n                            piVar12 = piVar15;\n                            piVar16 = *0x735740;\n                            if (piVar15 <= *0x735740) {\n                                piVar16 = *(*0x20 + -100);\n                                piVar12 = *0x7357a0;\n                                *0x735738 = piVar15;\n                                if (piVar16 <= *0x7357a0) {\n                                    piVar12 = *0x7357e0;\n                                    *0x735798 = piVar16;\n                                    if (piVar16 <= *0x7357e0) {\n                                        *(*0x20 + -0xb0) = 0x43e0de;\n                                        *0x7357d8 = piVar16;\n                                        fcn.0040a0a0();\n                                        uVar18 = *(*0x20 + 8);\n                                        goto code_r0x0043e0e5;\n                                    }\n                                    goto code_r0x0043e2da;\n                                }\n                                goto code_r0x0043e2e5;\n                            }\n                        }\n                        *(*0x20 + -0xb0) = 0x43e2f8;\n                        piVar15 = piVar16;\n                        fcn.0045c620(piVar12, piVar16);\ncode_r0x0043e2f8:\n                        *(*0x20 + -0xb0) = 0x43e305;\n                        piVar12 = unaff_RSI;\n                        fcn.0045c5a0(unaff_RSI);\n                    }\n                    *(*0x20 + -0xb0) = 0x43e30c;\n                    fcn.0045c5a0(piVar12);\ncode_r0x0043e30c:\n                    *(*0x20 + -0xb0) = 0x43e311;\n                    fcn.0045c5a0(piVar12);\n                    unaff_RBX = piVar16;\ncode_r0x0043e311:\n                    *(*0x20 + -0xb0) = 0x43e319;\n                    fcn.0045c5a0(piVar12);\ncode_r0x0043e319:\n                    *(*0x20 + -0xb0) = 0x43e325;\n                    fcn.0045c620(unaff_RBX, piVar15);\ncode_r0x0043e325:\n                    *(*0x20 + -0xb0) = 0x43e32d;\n                    fcn.0045c620(unaff_RBX, piVar15);\n                }\n                *(*0x20 + -0xb0) = 0x43e335;\n                fcn.0045c620(unaff_RSI, piVar15);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb0) = 0x43e346;\n            in_EAX = fcn.004320e0();\n        }\n        *(puVar17 + 8) = in_EAX;\n        *(puVar17 + -8) = 0x43e350;\n        fcn.00459ea0();\n        in_EAX = *(puVar17 + 8);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 4919
    },
    "0043e360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e360(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0043e3c0();\n    fcn.00413340();\n    if (*0x73b7b0 != '\\0') {\n        fcn.0044f320();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0043e3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e3c0(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.004320e0();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00433ac0();\n        fcn.004338e0();\n        fcn.004320e0();\n    } while( true );\n}\n",
        "token_count": 286
    },
    "0043e4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043e4e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x73b7b0 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43e53e;\n                        fcn.0044f380();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43e57d;\n                fcn.00433860();\n                *(*0x20 + -0x48) = 0x43e58e;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x43e598;\n                fcn.004340e0();\n                *(*0x20 + -0x48) = 0x43e5a9;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x43e5b3;\n                fcn.004340e0();\n                *(*0x20 + -0x48) = 0x43e5c5;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x43e5cf;\n                fcn.00433fc0();\n                *(*0x20 + -0x48) = 0x43e5e5;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x43e5ef;\n                fcn.00433e60();\n                *(*0x20 + -0x48) = 0x43e5f4;\n                fcn.00433ac0();\n                *(*0x20 + -0x48) = 0x43e5f9;\n                fcn.004338e0();\n                *(*0x20 + -0x48) = 0x43e60a;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x48) = 0x43e61b;\n            fcn.004320e0();\n        }\n        *(puVar4 + -8) = 0x43e625;\n        fcn.00459ea0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 851
    },
    "0043e6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e6a0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x7895b0 != '\\0') || (*0x7895ae != '\\0')) {\n                return;\n            }\n            if (*0x78960c != 0) {\n                return;\n            }\n            if ((*0x7895af == '\\0') && (*0x7895a7 != '\\0')) {\n                *(*0x20 + -0x50) = 0x43e706;\n                *0x789698 = fcn.00437ca0();\n                uVar5 = *0x7895d4 != 0;\n            }\n            else {\n                uVar5 = 0;\n            }\n            iVar1 = *0x73610c;\n            uVar6 = *0x736108;\n            iVar8 = *0x736110 - *0x736120;\n            uVar12 = *0x73611c;\n            uVar7 = ((iVar8 - *0x736108) - *0x73610c) - *0x73611c;\n            uVar9 = uVar7;\n            if (uVar5 < uVar7) {\n                return;\n            }\n            uVar5 = *0x736108;\n            uVar11 = *0x73611c;\n            if (-1 < uVar7) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x43e980;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43e78e;\n                fcn.00435500();\n                uVar11 = uVar12;\n                uVar5 = uVar6;\n                if (*(*0x20 + -0x28) != 0) {\n                    if (*0x7896a0 == 0) {\ncode_r0x0043e7be:\n                        uVar6 = *0x735738;\n                        iVar2 = 0;\n                        while( true ) {\n                            if (*0x735738 <= iVar2) {\n                                uVar4 = *(unaff_R14 + 0x30);\n                                *(uVar4 + 0xc4) = 0xffffffff;\n                                *(*0x20 + -0x50) = 0x43e81b;\n                                fcn.0040a0a0();\n                                uVar9 = 0x25;\n                                *(*0x20 + -0x50) = 0x43e82c;\n                                fcn.004320e0();\n                                goto code_r0x0043e82c;\n                            }\n                            if (0 < *(*(*0x735730 + iVar2 * 8) + 0x26e8)) break;\n                            iVar2 = iVar2 + 1;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43e7a9;\n                    iVar2 = fcn.0044de80();\n                    if (uVar9 == 0) goto code_r0x0043e7be;\n                    puVar3 = 0x736130;\n                    *0x7896a0 = iVar2;\n                    while( true ) {\n                        uVar11 = uVar12;\n                        uVar4 = *puVar3;\n                        if (uVar4 == 0) break;\n                        if (uVar9 == uVar4) {\n                            *puVar3 = *(uVar9 + 8);\n                            break;\n                        }\ncode_r0x0043e82c:\n                        puVar3 = uVar4 + 8;\n                    }\n                    uVar12 = *0x736100;\n                    if (*0x736100 != 0) {\n                        uVar6 = *(*0x736100 + 0x130);\n                        *0x736108 = *0x736108 - 1;\n                        *0x736100 = uVar6;\n                    }\n                    uVar5 = uVar6;\n                    if (uVar12 != 0) {\n                        *(uVar12 + 0xa8) = uVar9;\n                        *(*0x20 + -0x50) = 0x43e885;\n                        fcn.0040a180();\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43e8a5;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x50) = 0x43e8b3;\n                fcn.0040a0a0();\n                *(*0x20 + -0x50) = 0x43e8c5;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*0x20 + -0x2c) = uVar5;\n            *(*0x20 + -0x30) = iVar1;\n            *(*0x20 + -0x34) = uVar11;\n            *(*0x20 + -0x50) = 0x43e8dc;\n            fcn.00433860();\n            *(*0x20 + -0x50) = 0x43e8ed;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x43e8f9;\n            fcn.00433f60();\n            *(*0x20 + -0x50) = 0x43e90a;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x43e916;\n            fcn.00433f60();\n            *(*0x20 + -0x50) = 0x43e927;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x43e934;\n            fcn.00433f60();\n            *(*0x20 + -0x50) = 0x43e945;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x43e951;\n            fcn.00433f60();\n            *(*0x20 + -0x50) = 0x43e956;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x43e95b;\n            fcn.004338e0();\n            *(*0x20 + -0x50) = 0x43e96c;\n            fcn.004320e0();\n        }\n        *(puVar10 + -8) = 0x43e972;\n        fcn.00459ea0();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1711
    },
    "0043ef40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0043ef40(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x735738; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x735730 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.0043f220();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x5f4) != *(iVar2 + 0x5f4));\n                    if (*(iVar2 + 0x5f4) == *(iVar2 + 0x5f0)) {\n                        if (*(iVar2 + 0xdf8) == 0) {\n                            bVar6 = *0x73613c + *0x736138 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040a0a0();\n                        fcn.0043e640();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x73b7b0 != '\\0') {\n                                fcn.0044fb20();\n                                fcn.0044f380();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.004386e0();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.0043e640();\n                        fcn.00409e80();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040a0a0();\n    return iVar4;\n}\n",
        "token_count": 757
    },
    "0043f180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043f180(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x735738,  iVar1 = *0x735730,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.0043f220();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 225
    },
    "0043f220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0043f220(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x789a18 == 0) {\n                *(in_RAX + 0x2708) = 1;\n                fcn.0042eca0();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0043f2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f2c0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack56 < *(unaff_R14 + 0x10) || &uStack56 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0045de80();\n    if (*0x789778 == 0) {\n        *0x789778 = iStack184;\n    }\n    fcn.00409e80();\n    iStack40 = *0x789778;\n    uStack48 = *0x736138;\n    uStack56 = *0x73613c;\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433f60(iStack184 - iStack40 >> 0x3f, (iStack184 - iStack40) / 1000000);\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.004338e0();\n    if (in_AL != '\\0') {\n        uStack48 = *0x7361e0;\n        iStack40 = *0x73610c;\n        uStack56 = *0x7361f0;\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00433ac0();\n        fcn.004338e0();\n    }\n    iVar3 = *0x735738;\n    iStack16 = *0x735730;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 0x5f0);\n        if (in_AL == '\\0') {\n            fcn.00433860();\n            fcn.00433a80();\n            fcn.004338e0();\n            if (iVar4 == 0) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.004338e0();\n            }\n            fcn.00433860();\n            fcn.00433e60(uVar1);\n            fcn.004338e0();\n            if (iVar4 == *0x735738 + -1) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.004338e0();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            uStack56 = *(iVar2 + 0x10);\n            iStack40 = *(iVar2 + 0xe08);\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433e60(uVar1);\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00433ac0();\n            fcn.004338e0();\n        }\n    }\n    iVar4 = *0x734ca0;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00434160();\n            fcn.00433b00();\n            fcn.00434160();\n            fcn.00433b00();\n            fcn.00434160();\n            fcn.00433f60();\n            fcn.00433ac0();\n            fcn.004338e0();\n            iVar4 = *(iStack32 + 0x128);\n        }\n        fcn.00435500();\n        fcn.0040a060();\n        return;\n    }\n    fcn.0040a060();\n    return;\n}\n",
        "token_count": 1306
    },
    "0043fac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043fac0(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar2 = *0x736170;\n    uVar1 = in_AL ^ 1;\n    if (*0x736158 != uVar1) {\n        *0x736158 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040a0a0();\n        }\n        else {\n            *0x736170 = 0;\n            if (*0x736168 != 0) {\n                *(*0x736168 + 0xa0) = 0;\n                if (*0x736148 == 0) {\n                    *0x736140 = *0x736160;\n                }\n                else {\n                    *(*0x736148 + 0xa0) = *0x736160;\n                }\n                *0x736148 = *0x736168;\n            }\n            *0x736150 = *0x736150 + iVar2;\n            *0x736160 = in_XMM15;\n            fcn.0040a0a0();\n            while ((iVar2 != 0 && (*0x736138 != 0))) {\n                fcn.00438420();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 384
    },
    "0043fc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0043fc00(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x736158 != '\\0') {\n        uVar1 = fcn.00453740();\n        return uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00440440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440440(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(in_RAX + 0x5f0);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x5f4); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x5f8 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x5f4) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.00409e80();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x736140;\n        iVar3 = *0x736148;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x736148 != 0)) {\n            *(*0x736148 + 0xa0) = uVar4;\n            uVar5 = *0x736140;\n        }\n        *0x736148 = iVar3;\n        *0x736140 = uVar5;\n        *0x736150 = *0x736150 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040a0a0();\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "00440760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00440760(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 0x5f0);\n            uVar6 = *(in_RAX + 0x5f4) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x5f8 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 0x5f0)) {\n                    *(in_RAX + 0x5f0) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0xdf8),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.00459d60();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 579
    },
    "00440900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00440900(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x5f4);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x44093d;\n            iVar5 = fcn.00440760(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x5f8 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 0x5f0)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x5f4) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x4409ba;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x4409ce;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 613
    },
    "00440a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440a00(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    ulong uVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *piVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar6 = 0;\n                while (uVar6 <= in_RAX[1] && in_RAX[1] != uVar6) {\n                    *(*0x20 + -0xf0) = uVar6;\n                    *(*0x20 + -0x138) = 0x440a71;\n                    fcn.00440a00();\n                    in_RAX = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0xf0) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x789860 == '\\0') {\n                    uVar4 = 0;\n                    uVar5 = 0;\n                    uVar8 = 0;\n                }\n                else {\n                    *(*0x20 + -0x138) = 0x440aa5;\n                    fcn.0045de80();\n                    uVar4 = *(*0x20 + -0x130);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *0x789878;\n                    uVar8 = *0x789870;\n                }\n                *(*0x20 + -0xe8) = uVar5;\n                *(*0x20 + -0xe0) = uVar8;\n                *(*0x20 + -0x108) = uVar4;\n                iVar1 = in_RAX[1];\n                *(*0x20 + -0xc0) = iVar1;\n                piVar10 = in_RAX + iVar1 + 3;\n                *(*0x20 + -0x20) = piVar10;\n                uVar6 = 0;\n                while (uVar6 <= in_RAX[2] && in_RAX[2] != uVar6) {\n                    *(*0x20 + -0xf8) = uVar6;\n                    pcVar2 = piVar10[uVar6];\n                    *(*0x20 + -0x138) = 0x440b2a;\n                    (*pcVar2)(uVar5, piVar10 + uVar6);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8);\n                    uVar4 = *(*0x20 + -0x108);\n                    piVar10 = *(*0x20 + -0x20);\n                    uVar6 = *(*0x20 + -0xf8) + 1;\n                }\n                if (*0x789860 == '\\0') goto code_r0x00440d22;\n                *(*0x20 + -0x138) = 0x440b70;\n                fcn.0045de80(uVar5, uVar4);\n                uVar11 = 0;\n                uVar12 = 0;\n                uVar13 = 0;\n                uVar14 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -200) = *0x789870;\n                *(*0x20 + -0xd0) = *0x789878;\n                *(*0x20 + -0x110) = *(*0x20 + -0x130);\n                uVar5 = *(*(*0x20 + 8) + 0x18 + *(*0x20 + -0xc0) * 8);\n                *(*0x20 + -0x138) = 0x440bc9;\n                fcn.0044a780();\n                *(*0x20 + -0x138) = 0x440bce;\n                uVar4 = fcn.0044af20();\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x100) = uVar5;\n                *(*0x20 + -0xb8) = 0;\n                *(*0x20 + -0xb0) = CONCAT412(uVar14, CONCAT48(uVar13, CONCAT44(uVar12, uVar11)));\n                *(*0x20 + -0x138) = 0x440bf5;\n                fcn.00433860();\n                *(*0x20 + -0x138) = 0x440c06;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440c18;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440c29;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440c2e;\n                fcn.004338e0();\n                *(*0x20 + -0x138) = 0x440c4f;\n                uVar5 = fcn.00418380(0x18);\n                *(*0x20 + -0x138) = 0x440c65;\n                uVar4 = fcn.00448f60(0x18);\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0xd8) = uVar5;\n                *(*0x20 + -0x138) = 0x440c77;\n                fcn.00433860();\n                *(*0x20 + -0x138) = 0x440c89;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440c9a;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440c9f;\n                fcn.004338e0();\n                *(*0x20 + -0x138) = 0x440cbe;\n                uVar5 = fcn.00418380(0x18);\n                *(*0x20 + -0x138) = 0x440cd1;\n                uVar4 = fcn.00448f60(0x18);\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0xd8) = uVar5;\n                *(*0x20 + -0x138) = 0x440ce5;\n                fcn.00433860();\n                *(*0x20 + -0x138) = 0x440cf7;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440d08;\n                fcn.00434160();\n                *(*0x20 + -0x138) = 0x440d0d;\n                fcn.004338e0();\n                uVar6 = *(*0x20 + -0xd0) - *(*0x20 + -0xe8);\n                uVar7 = 0x17;\n                while (cVar3 = uVar6,  9 < uVar6) {\n                    uVar6 = uVar6 / 10;\n                    if (0x17 < uVar7) goto code_r0x00440f05;\n                    *(*0x20 + (uVar7 - 0xb8)) = cVar3 + uVar6 * -10 + '0';\n                    uVar7 = uVar7 - 1;\n                }\n                if (uVar7 < 0x18) {\n                    *(*0x20 + (uVar7 - 0xb8)) = cVar3 + '0';\n                    *(*0x20 + -0x138) = 0x440db8;\n                    uVar5 = fcn.00448f60(-(uVar7 - 0x18));\n                    *(*0x20 + -0x10) = uVar5;\n                    *(*0x20 + -0xd8) = *0x20 + ((uVar7 & uVar7 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x138) = 0x440dca;\n                    fcn.00433860();\n                    *(*0x20 + -0x138) = 0x440ddc;\n                    fcn.00434160();\n                    *(*0x20 + -0x138) = 0x440ded;\n                    fcn.00434160();\n                    *(*0x20 + -0x138) = 0x440df2;\n                    fcn.004338e0();\n                    uVar7 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                    uVar6 = 0x17;\n                    while (cVar3 = uVar7,  9 < uVar7) {\n                        uVar7 = uVar7 / 10;\n                        if (0x17 < uVar6) goto code_r0x00440ee6;\n                        *(*0x20 + (uVar6 - 0xb8)) = cVar3 + uVar7 * -10 + '0';\n                        uVar6 = uVar6 - 1;\n                    }\n                    if (uVar6 < 0x18) {\n                        *(*0x20 + (uVar6 - 0xb8)) = cVar3 + '0';\n                        *(*0x20 + -0x138) = 0x440e85;\n                        uVar5 = fcn.00448f60(-(uVar6 - 0x18));\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0xd8) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x138) = 0x440e97;\n                        fcn.00433860();\n                        *(*0x20 + -0x138) = 0x440ea9;\n                        fcn.00434160();\n                        *(*0x20 + -0x138) = 0x440eba;\n                        fcn.00434160();\n                        *(*0x20 + -0x138) = 0x440ebf;\n                        fcn.004338e0();\n                        *(*0x20 + -0x138) = 0x440ec5;\n                        fcn.00433860();\n                        *(*0x20 + -0x138) = 0x440eca;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x138) = 0x440ecf;\n                        fcn.004338e0();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00440d22:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x138) = 0x440ee6;\n                    fcn.0045c5a0(0x18);\ncode_r0x00440ee6:\n                    *(*0x20 + -0x138) = 0x440ef3;\n                    fcn.0045c5a0(0x18);\n                }\n                *(*0x20 + -0x138) = 0x440f05;\n                fcn.0045c5a0(0x18);\ncode_r0x00440f05:\n                *(*0x20 + -0x138) = 0x440f12;\n                fcn.0045c5a0(0x18);\n            }\n            *(*0x20 + -0x138) = 0x440f25;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x440f30;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2877
    },
    "00440f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440f40(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = unaff_RBX;\n    *0x7895c8 = in_EAX;\n    if (*0x789810 != 0) {\n        fcn.0045c240(arg1, arg2, arg3, arg4);\n        uVar1 = *0x734ca8;\n    }\n    *0x734ca8 = uVar1;\n    return;\n}\n",
        "token_count": 188
    },
    "00440fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004410da)\n// WARNING: Removing unreachable block (ram,0x004410eb)\n// WARNING: Removing unreachable block (ram,0x004410fc)\n// WARNING: Removing unreachable block (ram,0x0044110d)\n// WARNING: Removing unreachable block (ram,0x0044111e)\n// WARNING: Removing unreachable block (ram,0x0044112f)\n// WARNING: Removing unreachable block (ram,0x00441145)\n// WARNING: Removing unreachable block (ram,0x00441156)\n// WARNING: Removing unreachable block (ram,0x00441167)\n// WARNING: Removing unreachable block (ram,0x00441178)\n\nulong fcn.00440fa0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x789790 = 0x2a;\n    *0x789798 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 268
    },
    "00441b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441b80(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00441bf6;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x441bd0;\n                    fcn.00409e80();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x441bea;\n                        fcn.0040a180();\n                    }\n                    *(*0x20 + -0x20) = 0x441bf6;\n                    fcn.0040a0a0();\n                }\ncode_r0x00441bf6:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x441c3b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x441c46;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 636
    },
    "00441f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00441f20(uint64_t *arg1)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    ulong *puVar6;\n    uint64_t *arg4;\n    uint64_t *arg3;\n    ulong uVar7;\n    uint64_t *puVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t *puVar11;\n    uint64_t *puVar12;\n    uchar uVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint64_t *noname_1;\n    uint64_t *unaff_RBX;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t *unaff_RDI;\n    uint64_t *in_R8;\n    ulong uVar17;\n    uint64_t uVar18;\n    uint64_t *puVar19;\n    uint64_t *arg4_00;\n    int64_t iVar20;\n    uint64_t *puVar21;\n    uint64_t *puVar22;\n    int64_t iVar23;\n    uint32_t uVar24;\n    uint64_t *unaff_R13;\n    int64_t *piVar25;\n    uint64_t *unaff_R14;\n    uint64_t *unaff_R15;\n    int64_t in_GS_OFFSET;\n    bool bVar26;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar19 = *0x20 + -0xc0;\n        puVar16 = *0x20;\n        if (unaff_R14[2] <= puVar19 && puVar19 != unaff_R14[2]) {\n            puVar16 = *0x20 + -0x140;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar21 = unaff_RSI + unaff_RDI;\n            puVar11 = puVar21;\n            if (puVar21 < 0x10001) {\n                iVar20 = unaff_RDI + unaff_RSI + -0x20000;\n                uVar14 = puVar21 * 2 & iVar20 >> 0x3f;\n                puVar11 = unaff_RBX + uVar14;\n                if (puVar21 <= -iVar20) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 0x30) = in_R8;\n                    *(*0x20 + -0xa8) = puVar21;\n                    *(*0x20 + -0xb0) = uVar14;\n                    *(*0x20 + -0x88) = puVar11;\n                    *(*0x20 + 8) = in_RAX;\n                    if (*0x789668 == 0) {\n                        unaff_RSI = 0;\n                        puVar12 = puVar21;\n                    }\n                    else {\n                        *(*0x20 + -0x148) = 0x441fd4;\n                        fcn.0045bfa0(puVar21, uVar14);\n                        in_XMM15_Da = 0;\n                        in_XMM15_Db = 0;\n                        in_XMM15_Dc = 0;\n                        in_XMM15_Dd = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        unaff_RSI = *(*0x20 + -0x140);\n                        puVar12 = *(*0x20 + -0xa8);\n                        uVar14 = *(*0x20 + -0xb0);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        in_R8 = *(*0x20 + 0x30);\n                        puVar11 = *(*0x20 + -0x88);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    puVar8 = NULL;\n                    puVar21 = NULL;\n                    while (puVar22 = puVar21,  puVar22 < puVar12) {\n                        iVar20 = puVar22 * 0x10;\n                        if (*(in_RAX + iVar20) == 0) {\n                            unaff_R13 = in_RAX + iVar20 + 8;\n                            if (*0x789810 == 0) {\n                                *(in_RAX + 8 + iVar20) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x148) = 0x442116;\n                                in_RAX = fcn.0045c2a0(puVar12, uVar14, in_R8);\n                                unaff_R15 = puVar11;\n                            }\n                        }\n                        else {\n                            uVar10 = unaff_R14[6];\n                            iVar4 = *(uVar10 + 0xf0);\n                            *(*0x20 + -0x104) = iVar4;\n                            uVar5 = *(uVar10 + 0xf4);\n                            *(uVar10 + 0xf0) = uVar5;\n                            uVar24 = iVar4 << 0x11 ^ *(*0x20 + -0x104);\n                            unaff_R15 = uVar5;\n                            uVar24 = uVar5 >> 0x10 ^ uVar24 >> 7 ^ uVar5 ^ uVar24;\n                            *(uVar10 + 0xf4) = uVar24;\n                            unaff_R13 = puVar8 + 1U & 0xffffffff;\n                            puVar19 = (uVar24 + uVar5) * unaff_R13 >> 0x20;\n                            puVar21 = puVar12;\n                            if (puVar12 <= puVar19) goto code_r0x004433e5;\n                            uVar3 = *(unaff_RBX + puVar19 * 2);\n                            unaff_R13 = uVar3;\n                            if (puVar12 <= puVar8) goto code_r0x004433d8;\n                            *(unaff_RBX + puVar8 * 2) = uVar3;\n                            *(unaff_RBX + puVar19 * 2) = puVar22;\n                            puVar11 = *(*0x20 + -0x88);\n                            puVar8 = puVar8 + 1U;\n                        }\n                        puVar19 = puVar22;\n                        puVar21 = puVar22 + 1;\n                    }\n                    puVar21 = puVar8;\n                    if (puVar8 <= puVar12) {\n                        puVar21 = NULL;\ncode_r0x00442140:\n                        puVar22 = puVar8;\n                        if (puVar8 <= puVar21) {\n                            while (puVar21 = puVar22 - 1,  -1 < puVar21) {\n                                uVar3 = *(puVar11 + puVar21 * 2);\n                                arg4_00 = puVar11;\n                                if (puVar12 <= uVar3) goto code_r0x00443325;\n                                *(*0x20 + -0xe8) = puVar21;\n                                *(*0x20 + -0x108) = uVar3;\n                                puVar19 = *(in_RAX + uVar3 * 0x10);\n                                *(*0x20 + -0x68) = puVar19;\n                                *(puVar11 + puVar21 * 2) = *(unaff_RBX + uVar14);\n                                puVar22 = puVar21;\n                                unaff_R15 = NULL;\n                                while (puVar11 = unaff_RDI,  noname_1 = unaff_R15 * 2 + 1,  unaff_RDI = puVar11, \n                                      noname_1 < puVar22) {\n                                    unaff_R13 = unaff_R15 * 2 + 2;\n                                    if (unaff_R13 < puVar22) {\n                                        puVar21 = puVar22;\n                                        if (puVar8 <= noname_1) goto code_r0x00443318;\n                                        puVar22 = *(arg4_00 + unaff_R15 * 4 + 2);\n                                        if (puVar12 <= puVar22) goto code_r0x00443310;\n                                        puVar22 = *(in_RAX + puVar22 * 0x10);\n                                        if (puVar8 <= unaff_R13) goto code_r0x00443305;\n                                        *(*0x20 + -0xf0) = unaff_R15;\n                                        unaff_R15 = *(arg4_00 + unaff_R15 * 4 + 4);\n                                        if (puVar12 <= unaff_R15) goto code_r0x004432fd;\n                                        if (puVar22 < *(in_RAX + unaff_R15 * 0x10)) {\n                                            puVar22 = *(*0x20 + -0xe8);\n                                            unaff_R15 = *(*0x20 + -0xf0);\n                                            noname_1 = unaff_R13;\n                                        }\n                                        else {\n                                            puVar22 = *(*0x20 + -0xe8);\n                                            unaff_R15 = *(*0x20 + -0xf0);\n                                        }\n                                    }\n                                    if (puVar8 <= noname_1) goto code_r0x004432f2;\n                                    uVar3 = *(arg4_00 + noname_1 * 2);\n                                    unaff_R13 = uVar3;\n                                    if (puVar12 <= unaff_R13) goto code_r0x004432ea;\n                                    *(*0x20 + -0x106) = uVar3;\n                                    unaff_R13 = *(in_RAX + unaff_R13 * 0x10);\n                                    if (unaff_R13 <= puVar19) {\n                                        uVar3 = *(*0x20 + -0x108);\n                                        break;\n                                    }\n                                    if (puVar8 <= unaff_R15) goto code_r0x004432df;\ncode_r0x004431ea:\n                                    *(arg4_00 + unaff_R15 * 2) = *(*0x20 + -0x106);\n                                    puVar19 = *(*0x20 + -0x68);\n                                    uVar3 = *(*0x20 + -0x108);\n                                    unaff_RDI = puVar11;\n                                    unaff_R15 = noname_1;\n                                }\n                                unaff_R13 = uVar3;\n                                if (puVar8 <= unaff_R15) goto code_r0x004432d4;\n                                *(arg4_00 + unaff_R15 * 2) = uVar3;\n                                uVar14 = *(*0x20 + -0xb0);\n                                puVar11 = arg4_00;\n                            }\n                            *(*0x20 + -0x100) = unaff_RSI;\n                            *(*0x20 + -0xf8) = puVar8;\n                            *(*0x20 + -0x148) = 0x442210;\n                            fcn.00441c60(puVar12, uVar14, puVar12);\n                            noname_1 = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 8);\n                            unaff_RSI = *(*0x20 + -0xf8);\n                            arg4_00 = *(*0x20 + 0x10);\n                            arg3 = NULL;\n                            unaff_RBX = puVar12;\n                            puVar12 = *(*0x20 + -0xa8);\n                            break;\n                        }\n                        puVar19 = *(unaff_RBX + puVar21 * 2);\n                        if (puVar19 < puVar12) {\n                            uVar10 = *(in_RAX + puVar19 * 0x10);\n                            *(*0x20 + -0x70) = uVar10;\n                            arg4_00 = puVar11;\n                            unaff_R13 = puVar21;\n                            goto code_r0x0044334e;\n                        }\ncode_r0x004433c5:\n                        *(*0x20 + -0x148) = 0x4433cd;\n                        fcn.0045c5a0(puVar12);\n                        puVar21 = puVar8;\n                    }\n                    *(*0x20 + -0x148) = 0x4433d8;\n                    fcn.0045c620(puVar21, puVar12);\ncode_r0x004433d8:\n                    *(*0x20 + -0x148) = 0x4433e5;\n                    fcn.0045c5a0(puVar21);\ncode_r0x004433e5:\n                    *(*0x20 + -0x148) = 0x4433ed;\n                    fcn.0045c5a0(puVar21);\n                }\n                *(*0x20 + -0x148) = 0x4433f8;\n                puVar11 = puVar21;\n                fcn.0045c6e0(puVar21, puVar21);\n                arg1 = puVar21;\n            }\n            unaff_RBX = 0x10000;\n            *(*0x20 + -0x148) = 0x443405;\n            in_RAX = fcn.0045c6a0(arg1, puVar11);\n        }\n        *(puVar16 + 8) = in_RAX;\n        *(puVar16 + 0x10) = unaff_RBX;\n        *(puVar16 + 0x18) = arg1;\n        *(puVar16 + 0x20) = unaff_RDI;\n        *(puVar16 + 0x28) = unaff_RSI;\n        puVar16[0x30] = in_R8;\n        *(puVar16 + -8) = 0x443429;\n        fcn.00459ea0();\n        in_RAX = *(puVar16 + 8);\n        unaff_RBX = *(puVar16 + 0x10);\n        arg1 = *(puVar16 + 0x18);\n        unaff_RDI = *(puVar16 + 0x20);\n        unaff_RSI = *(puVar16 + 0x28);\n        in_R8 = puVar16[0x30];\n        *0x20 = puVar16;\n    } while( true );\ncode_r0x00442240:\n    if (arg3 < unaff_RSI) {\n        puVar22 = *(arg4_00 + arg3 * 2);\n        if (puVar12 <= puVar22) {\n            *(*0x20 + -0x148) = 0x4431ea;\n            in_R8 = puVar12;\n            in_RAX = fcn.0045c5a0(puVar12);\n            goto code_r0x004431ea;\n        }\n        *(*0x20 + -0xb0) = puVar22;\n        puVar21 = puVar22 * 0x10;\n        puVar19 = arg4[puVar22 * 2];\n        *(*0x20 + -0x60) = puVar19;\n        puVar11 = puVar22;\n        if (puVar22 < noname_1) {\n            if (*(puVar19 + 0x1c) != 0) {\n                puVar11 = *(*0x20 + -0x88);\ncode_r0x00442c65:\n                *(*0x20 + -0x148) = 0x442c73;\n                arg3 = puVar12;\n                fcn.00441d60(puVar12, noname_1, puVar12);\n                *(*0x20 + -0x148) = 0x442c86;\n                fcn.00431940();\n                goto code_r0x00442c86;\n            }\n            goto code_r0x00442cc1;\n        }\n        do {\n            piVar25 = puVar19[9];\n            if (piVar25 == NULL) {\n                piVar25 = NULL;\n                break;\n            }\n            uVar14 = piVar25[1];\n            if (uVar14 == 0) {\n                if (*0x789810 == 0) {\n                    *(puVar19 + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x148) = 0x442f9a;\n                    fcn.0045c220(arg3, 0, puVar12, arg4_00);\n                    *(*0x20 + -0x148) = 0x442fa5;\n                    arg4 = fcn.0045c220(arg3, uVar7, puVar12, arg4_00);\n                }\n            }\n            else if (*0x789810 == 0) {\n                *(uVar14 + 0x10) = 0;\n                puVar19[9] = uVar14;\n                piVar25[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = puVar19 + 9;\n                uVar7 = 0;\n                *(*0x20 + -0x148) = 0x442f53;\n                fcn.0045c220(arg3, 0, puVar12, arg4_00);\n                *(*0x20 + -0x148) = 0x442f66;\n                fcn.0045c2a0(arg3, uVar7, puVar12);\n                *(*0x20 + -0x148) = 0x442f6f;\n                arg4 = fcn.0045c220(arg3, uVar7, puVar12, uVar14);\n                noname_1 = *(*0x20 + 0x20);\n            }\n            if (*(piVar25 + 0x34) == '\\0') {\n                unaff_R15 = NULL;\n            }\n            else {\n                iVar20 = *piVar25;\n                LOCK();\n                piVar2 = iVar20 + 0x178;\n                bVar26 = *piVar2 == 0;\n                if (bVar26) {\n                    *piVar2 = 1;\n                }\n                unaff_R15 = (iVar20 & 0xffffff00 | bVar26) ^ 1;\n            }\n        } while (unaff_R15 != '\\0');\n        if (piVar25 != NULL) {\n            *(*0x20 + -0x40) = 0;\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x40) = 0x4434c0;\n            *(*0x20 + -0x38) = arg4;\n            *(*0x20 + -0x30) = puVar12;\n            *(*0x20 + -0x28) = puVar12;\n            *(*0x20 + -0x20) = *(*0x20 + -0x88);\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x10) = puVar12;\n            uVar7 = *(arg4 + 1 + puVar21);\n            *(*0x20 + -0x148) = 0x4431c6;\n            fcn.00405ac0(uVar7);\n            iVar20 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 1;\n            goto code_r0x00442328;\n        }\n        if (*puVar19 != 0) {\n            iVar20 = puVar19[6] * *(puVar19 + 3) + puVar19[2];\n            if (*(arg4 + 1 + puVar21) != 0) {\n                *(*0x20 + -0x98) = iVar20;\n                *(*0x20 + -0x148) = 0x4430ae;\n                fcn.0040fb00(iVar20);\n                iVar20 = *(*0x20 + -0x98);\n            }\n            *(*0x20 + -0x148) = 0x4430cb;\n            fcn.0040fda0(iVar20);\n            piVar25 = *(*0x20 + -0x60);\n            iVar20 = piVar25[6] + 1;\n            piVar25[6] = iVar20;\n            if (piVar25[1] == iVar20) {\n                piVar25[6] = 0;\n            }\n            *piVar25 = *piVar25 + -1;\n            *(*0x20 + -0x148) = 0x443119;\n            fcn.00441d60(*(*0x20 + -0xa8), iVar20, *(*0x20 + -0xa8));\n            iVar20 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 1;\n            goto code_r0x00442328;\n        }\n        if (*(puVar19 + 0x1c) != 0) {\n            *(*0x20 + -0xa8) = puVar21;\n            *(*0x20 + -0x148) = 0x44303a;\n            fcn.00441d60(puVar12, noname_1, puVar12);\n            if (*(*(*0x20 + 8) + 8 + *(*0x20 + -0xa8)) != 0) {\n                *(*0x20 + -0x148) = 0x443065;\n                fcn.0040fda0();\n            }\n            iVar20 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 0;\ncode_r0x00442328:\n            if (0 < iVar20) {\n                *(*0x20 + -0x10a) = uVar13;\n                *(*0x20 + -0xe0) = uVar7;\n                *(*0x20 + -0x148) = 0x442348;\n                fcn.00428cc0(*(*0x20 + -0x100));\n                uVar7 = *(*0x20 + -0xe0);\n            }\n            return uVar7;\n        }\n    }\n    else {\n        arg4_00 = *(*0x20 + 0x30);\n        if (*(*0x20 + 0x30) == 0) {\n            *(*0x20 + -0x148) = 0x442318;\n            fcn.00441d60(puVar12, noname_1, puVar12);\n            iVar20 = -1;\n            uVar7 = 0xffffffffffffffff;\n            uVar13 = 0;\n            goto code_r0x00442328;\n        }\n        if (unaff_R14[0x29] == 0) {\n            *(*0x20 + -0x80) = unaff_R14;\n            puVar8 = unaff_R14 + 0x29;\n            *(*0x20 + -0x48) = puVar8;\n            puVar11 = *(*0x20 + -0x88);\n            iVar20 = 0;\n            arg4_00 = unaff_R14;\n            puVar21 = puVar8;\n            while (iVar20 < unaff_RSI) {\n                puVar11 = *(puVar11 + iVar20 * 2);\n                arg3 = puVar12;\n                if (puVar12 <= puVar11) goto code_r0x00442c9f;\n                *(*0x20 + -0xb0) = iVar20;\n                *(*0x20 + -0xb8) = puVar11;\n                *(*0x20 + -0x90) = puVar21;\n                *(*0x20 + -0xc0) = puVar11 * 0x10;\n                *(*0x20 + -0x60) = arg4[puVar11 * 2];\n                *(*0x20 + -0x148) = 0x4423fe;\n                puVar6 = fcn.00434c00();\n                if (*0x789810 == 0) {\n                    uVar7 = *(*0x20 + -0x80);\n                    *puVar6 = uVar7;\n                }\n                else {\n                    uVar7 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x148) = 0x442426;\n                    puVar6 = fcn.0045c220(puVar8, uVar7, puVar12, arg4_00);\n                }\n                *(puVar6 + 0x34) = 1;\n                arg4 = *(*0x20 + 8);\n                uVar17 = *(arg4 + *(*0x20 + -0xc0) + 8);\n                if (*0x789810 == 0) {\n                    puVar6[3] = uVar17;\n                }\n                else {\n                    *(*0x20 + -0x148) = 0x442457;\n                    puVar6 = fcn.0045c280(puVar8, uVar7, uVar17, arg4);\n                }\n                puVar6[5] = 0;\n                iVar20 = *(*0x20 + -0x100);\n                if (iVar20 != 0) {\n                    puVar6[5] = 0xffffffffffffffff;\n                }\n                if (*0x789810 == 0) {\n                    iVar23 = *(*0x20 + -0x60);\n                    puVar6[10] = iVar23;\n                    **(*0x20 + -0x90) = puVar6;\n                }\n                else {\n                    iVar23 = *(*0x20 + -0x60);\n                    *(*0x20 + -0x148) = 0x4424a7;\n                    fcn.0045c280(iVar20, uVar7, iVar23, arg4);\n                    *(*0x20 + -0x148) = 0x4424b4;\n                    puVar6 = fcn.0045c100(iVar20, uVar7, iVar23, arg4);\n                }\n                noname_1 = *(*0x20 + 0x20);\n                if (*(*0x20 + -0xb8) < noname_1) {\n                    if (*0x789810 == 0) {\n                        puVar6[1] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x148) = 0x4424f8;\n                        puVar6 = fcn.0045c280(iVar20, uVar7, 0, arg4);\n                    }\n                    iVar15 = *(iVar23 + 0x50);\n                    if (iVar15 == 0) {\n                        if (*0x789810 == 0) {\n                            puVar6[2] = 0;\n                            *(iVar23 + 0x48) = puVar6;\n                            *(iVar23 + 0x50) = puVar6;\n                        }\n                        else {\n                            uVar17 = 0;\n                            *(*0x20 + -0x148) = 0x44257a;\n                            fcn.0045c280(iVar20, uVar7, 0, arg4);\n                            *(*0x20 + -0x148) = 0x442585;\n                            fcn.0045c100(iVar20, uVar7, uVar17, arg4);\n                            *(*0x20 + -0x148) = 0x44258d;\n                            puVar6 = fcn.0045c100(iVar20, uVar7, uVar17, arg4);\n                        }\n                    }\n                    else if (*0x789810 == 0) {\n                        puVar6[2] = iVar15;\n                        *(iVar15 + 8) = puVar6;\n                        *(iVar23 + 0x50) = puVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x148) = 0x442534;\n                        fcn.0045c280(iVar20, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x148) = 0x44253d;\n                        fcn.0045c100(iVar20, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x148) = 0x442545;\n                        puVar6 = fcn.0045c100(iVar20, uVar7, iVar15, arg4);\n                    }\n                }\n                else {\n                    if (*0x789810 == 0) {\n                        puVar6[1] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x148) = 0x4425bb;\n                        puVar6 = fcn.0045c280(iVar20, uVar7, 0, arg4);\n                    }\n                    iVar15 = *(iVar23 + 0x40);\n                    if (iVar15 == 0) {\n                        if (*0x789810 == 0) {\n                            puVar6[2] = 0;\n                            *(iVar23 + 0x38) = puVar6;\n                            *(iVar23 + 0x40) = puVar6;\n                        }\n                        else {\n                            uVar17 = 0;\n                            *(*0x20 + -0x148) = 0x44263a;\n                            fcn.0045c280(iVar20, uVar7, 0, arg4);\n                            *(*0x20 + -0x148) = 0x442645;\n                            fcn.0045c100(iVar20, uVar7, uVar17, arg4);\n                            *(*0x20 + -0x148) = 0x44264d;\n                            puVar6 = fcn.0045c100(iVar20, uVar7, uVar17, arg4);\n                        }\n                    }\n                    else if (*0x789810 == 0) {\n                        puVar6[2] = iVar15;\n                        *(iVar15 + 8) = puVar6;\n                        *(iVar23 + 0x40) = puVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x148) = 0x4425f4;\n                        fcn.0045c280(iVar20, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x148) = 0x4425fd;\n                        fcn.0045c100(iVar20, uVar7, iVar15, arg4);\n                        *(*0x20 + -0x148) = 0x442605;\n                        puVar6 = fcn.0045c100(iVar20, uVar7, iVar15, arg4);\n                    }\n                }\n                puVar21 = puVar6 + 8;\n                unaff_RSI = *(*0x20 + -0xf8);\n                puVar11 = *(*0x20 + -0x88);\n                puVar8 = *(*0x20 + -0x48);\n                puVar12 = *(*0x20 + -0xa8);\n                arg4_00 = *(*0x20 + -0x80);\n                puVar19 = puVar11;\n                iVar20 = *(*0x20 + -0xb0) + 1;\n            }\n            *(*0x20 + -0x50) = arg4_00 + 0x11;\n            if (*0x789810 == 0) {\n                arg4_00[0x11] = 0;\n            }\n            else {\n                *(*0x20 + -0x148) = 0x442685;\n                fcn.0045c240(puVar8, noname_1, puVar12, arg4_00);\n            }\n            puVar1 = arg4_00 + 0xb9;\n            uVar13 = *puVar1;\n            *puVar1 = 1;\n            *(*0x20 + -0x148) = 0x4426b2;\n            fcn.004349e0(9, puVar1, uVar13);\n            iVar20 = *(*0x20 + -0x80);\n            *(iVar20 + 0xb8) = 0;\n            iVar23 = *(*0x20 + -0xa8);\n            *(*0x20 + -0x148) = 0x4426e9;\n            fcn.00441c60(iVar23, iVar20, iVar23);\n            iVar20 = *(*0x20 + -0x80);\n            *(iVar20 + 0x178) = 0;\n            arg3 = *(iVar20 + 0x88);\n            if (*0x789810 == 0) {\n                *(iVar20 + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x148) = 0x442728;\n                fcn.0045c2a0(iVar23, iVar20, arg3);\n            }\n            puVar21 = *(iVar20 + 0x148);\n            for (puVar19 = puVar21; puVar19 != NULL; puVar19 = puVar19[8]) {\n                *(puVar19 + 0x34) = 0;\n                if (*0x789810 == 0) {\n                    puVar19[3] = 0;\n                    puVar19[10] = 0;\n                }\n                else {\n                    *(*0x20 + -0x148) = 0x44276b;\n                    fcn.0045c220(iVar20, 0, arg3, puVar19);\n                    *(*0x20 + -0x148) = 0x442776;\n                    puVar21 = fcn.0045c220(iVar20, 0, arg3, puVar19);\n                    iVar23 = iVar20;\n                }\n            }\n            if (*0x789810 == 0) {\n                *(iVar20 + 0x148) = 0;\n            }\n            else {\n                *(*0x20 + -0x148) = 0x4427a5;\n                puVar21 = fcn.0045c220(iVar23, 0, arg3, 0);\n            }\n            *(*0x20 + -0x58) = arg3;\n            noname_1 = *(*0x20 + 0x20);\n            arg4 = *(*0x20 + 8);\n            puVar12 = *(*0x20 + -0xa8);\n            unaff_RSI = *(*0x20 + -0xf8);\n            puVar11 = *(*0x20 + -0x88);\n            arg4_00 = NULL;\n            iVar23 = -1;\n            puVar19 = NULL;\n            uVar14 = 0xffffffffffffffff;\n            iVar20 = 0;\n            while (iVar20 < unaff_RSI) {\n                unaff_R15 = *(puVar11 + iVar20 * 2);\n                if (puVar12 <= unaff_R15) goto code_r0x00442c97;\n                *(*0x20 + -0xb0) = unaff_R15;\n                puVar11 = arg4 + unaff_R15 * 2;\n                if (puVar21 == arg3) {\n                    if (0 < puVar21[5]) {\n                        uVar14 = puVar21[5];\n                    }\n                    puVar19 = *(puVar21 + 0x35);\n                    iVar23 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar10 = arg4[unaff_R15 * 2];\n                    puVar11 = arg4_00;\n                    if (*(*0x20 + -0xb0) < noname_1) {\n                        uVar9 = puVar21[2];\n                        puVar12 = puVar21 + 1;\n                        uVar18 = puVar21[1];\n                        if (uVar9 == 0) {\n                            if (uVar18 == 0) {\n                                if (*(uVar10 + 0x48) == puVar21) {\n                                    if (*0x789810 == 0) {\n                                        *(uVar10 + 0x48) =\n                                             CONCAT412(in_XMM15_Dd, \n                                                       CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    }\n                                    else {\n                                        iVar15 = uVar10 + 0x48;\n                                        uVar7 = 0;\n                                        *(*0x20 + -0x148) = 0x442a3b;\n                                        fcn.0045c280(uVar10, iVar15, 0, arg4_00);\n                                        *(*0x20 + -0x148) = 0x442a45;\n                                        puVar21 = fcn.0045c280(uVar10, iVar15, uVar7, arg4_00);\n                                        puVar11 = arg4_00;\n                                    }\n                                }\n                            }\n                            else if (*0x789810 == 0) {\n                                *(uVar18 + 0x10) = 0;\n                                *(uVar10 + 0x48) = uVar18;\n                                puVar21[1] = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x148) = 0x4429e6;\n                                fcn.0045c260(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x148) = 0x4429ef;\n                                fcn.0045c280(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x148) = 0x4429f7;\n                                puVar21 = fcn.0045c260(uVar10, puVar12, uVar18, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (uVar18 == 0) {\n                            if (*0x789810 == 0) {\n                                *(uVar9 + 8) = 0;\n                                *(uVar10 + 0x50) = uVar9;\n                                puVar21[2] = 0;\n                            }\n                            else {\n                                iVar15 = uVar9 + 8;\n                                uVar7 = 0;\n                                *(*0x20 + -0x148) = 0x442988;\n                                fcn.0045c280(uVar10, iVar15, 0, arg4_00);\n                                *(*0x20 + -0x148) = 0x442994;\n                                fcn.0045c200();\n                                *(*0x20 + -0x148) = 0x44299c;\n                                puVar21 = fcn.0045c280(uVar9, iVar15, uVar7, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (*0x789810 == 0) {\n                            *(uVar9 + 8) = uVar18;\n                            *(uVar18 + 0x10) = uVar9;\n                            *(puVar21 + 1) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            *(*0x20 + -0x148) = 0x442925;\n                            fcn.0045c280(uVar9 + 8, puVar12, uVar18, arg4_00);\n                            *(*0x20 + -0x148) = 0x442931;\n                            fcn.0045c200(uVar9);\n                            *(*0x20 + -0x148) = 0x44293b;\n                            fcn.0045c200(0);\n                            *(*0x20 + -0x148) = 0x442945;\n                            puVar21 = fcn.0045c200();\n                            puVar11 = arg4_00;\n                        }\n                    }\n                    else {\n                        uVar9 = puVar21[2];\n                        puVar12 = puVar21 + 1;\n                        uVar18 = puVar21[1];\n                        if (uVar9 == 0) {\n                            if (uVar18 == 0) {\n                                if (*(uVar10 + 0x38) == puVar21) {\n                                    if (*0x789810 == 0) {\n                                        *(uVar10 + 0x38) =\n                                             CONCAT412(in_XMM15_Dd, \n                                                       CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    }\n                                    else {\n                                        iVar15 = uVar10 + 0x38;\n                                        uVar7 = 0;\n                                        *(*0x20 + -0x148) = 0x442bab;\n                                        fcn.0045c280(uVar10, iVar15, 0, arg4_00);\n                                        *(*0x20 + -0x148) = 0x442bb4;\n                                        puVar21 = fcn.0045c280(uVar10, iVar15, uVar7, arg4_00);\n                                        puVar11 = arg4_00;\n                                    }\n                                }\n                            }\n                            else if (*0x789810 == 0) {\n                                *(uVar18 + 0x10) = 0;\n                                *(uVar10 + 0x38) = uVar18;\n                                puVar21[1] = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x148) = 0x442b57;\n                                fcn.0045c260(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x148) = 0x442b65;\n                                fcn.0045c280(uVar10, puVar12, uVar18, arg4_00);\n                                *(*0x20 + -0x148) = 0x442b6d;\n                                puVar21 = fcn.0045c260(uVar10, puVar12, uVar18, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (uVar18 == 0) {\n                            if (*0x789810 == 0) {\n                                *(uVar9 + 8) = 0;\n                                *(uVar10 + 0x40) = uVar9;\n                                puVar21[2] = 0;\n                            }\n                            else {\n                                iVar15 = uVar9 + 8;\n                                uVar7 = 0;\n                                *(*0x20 + -0x148) = 0x442afa;\n                                fcn.0045c280(uVar10, iVar15, 0, arg4_00);\n                                *(*0x20 + -0x148) = 0x442b06;\n                                fcn.0045c200();\n                                *(*0x20 + -0x148) = 0x442b0e;\n                                puVar21 = fcn.0045c280(uVar9, iVar15, uVar7, arg4_00);\n                                puVar11 = arg4_00;\n                            }\n                        }\n                        else if (*0x789810 == 0) {\n                            *(uVar9 + 8) = uVar18;\n                            *(uVar18 + 0x10) = uVar9;\n                            *(puVar21 + 1) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            *(*0x20 + -0x148) = 0x442a96;\n                            fcn.0045c280(uVar9 + 8, puVar12, uVar18, arg4_00);\n                            *(*0x20 + -0x148) = 0x442aa5;\n                            fcn.0045c200(uVar9);\n                            *(*0x20 + -0x148) = 0x442aaf;\n                            fcn.0045c200(0);\n                            *(*0x20 + -0x148) = 0x442ab7;\n                            puVar21 = fcn.0045c200();\n                            puVar11 = arg4_00;\n                        }\n                    }\n                    arg3 = *(*0x20 + -0x58);\n                }\n                *(*0x20 + -0xb0) = iVar20;\n                *(*0x20 + -0x109) = puVar19;\n                *(*0x20 + -0xe0) = iVar23;\n                *(*0x20 + -0x78) = puVar11;\n                *(*0x20 + -0xd8) = uVar14;\n                uVar14 = puVar21[8];\n                *(*0x20 + -0xa0) = uVar14;\n                if (*0x789810 == 0) {\n                    puVar21[8] = 0;\n                }\n                else {\n                    *(*0x20 + -0x148) = 0x442c19;\n                    fcn.0045c220(puVar11, 0, arg3, uVar14);\n                }\n                *(*0x20 + -0x148) = 0x4427f2;\n                fcn.00434f00();\n                puVar12 = *(*0x20 + -0xa8);\n                unaff_RSI = *(*0x20 + -0xf8);\n                puVar11 = *(*0x20 + -0x88);\n                iVar23 = *(*0x20 + -0xe0);\n                arg4_00 = *(*0x20 + -0x78);\n                puVar21 = *(*0x20 + -0xa0);\n                noname_1 = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x58);\n                arg4 = *(*0x20 + 8);\n                puVar19 = *(*0x20 + -0x109);\n                uVar14 = *(*0x20 + -0xd8);\n                unaff_R15 = puVar21;\n                iVar20 = *(*0x20 + -0xb0) + 1;\n            }\n            if (arg4_00 != NULL) {\n                *(*0x20 + -200) = iVar23;\n                *(*0x20 + -0xd0) = uVar14;\n                if (iVar23 < noname_1) {\n                    if (puVar19 == '\\0') goto code_r0x00442c65;\n                    puVar19 = NULL;\n                }\n                *(*0x20 + -0x10a) = puVar19;\n                *(*0x20 + -0x148) = 0x442c4f;\n                fcn.00441d60(puVar12, noname_1, puVar12);\n                iVar20 = *(*0x20 + -0xd0);\n                uVar7 = *(*0x20 + -200);\n                uVar13 = *(*0x20 + -0x10a);\n                goto code_r0x00442328;\n            }\ncode_r0x00442c86:\n            *(*0x20 + -0x148) = 0x442c97;\n            fcn.004320e0();\ncode_r0x00442c97:\n            *(*0x20 + -0x148) = 0x442c9f;\n            fcn.0045c5a0(puVar12);\n            puVar21 = arg4;\ncode_r0x00442c9f:\n            *(*0x20 + -0x148) = 0x442caa;\n            puVar12 = arg3;\n            fcn.0045c5a0(arg3);\n        }\n        arg4 = 0x11;\n        *(*0x20 + -0x148) = 0x442cbb;\n        fcn.004320e0();\ncode_r0x00442cc1:\n        do {\n            piVar25 = puVar19[7];\n            if (piVar25 == NULL) {\n                piVar25 = NULL;\n                break;\n            }\n            uVar14 = piVar25[1];\n            if (uVar14 == 0) {\n                if (*0x789810 == 0) {\n                    *(puVar19 + 7) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x148) = 0x442d5d;\n                    fcn.0045c220(arg3, 0, puVar12, arg4_00);\n                    *(*0x20 + -0x148) = 0x442d67;\n                    arg4 = fcn.0045c220(arg3, uVar7, puVar12, arg4_00);\n                }\n            }\n            else if (*0x789810 == 0) {\n                *(uVar14 + 0x10) = 0;\n                puVar19[7] = uVar14;\n                piVar25[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = puVar19 + 7;\n                uVar7 = 0;\n                *(*0x20 + -0x148) = 0x442d16;\n                fcn.0045c220(arg3, 0, puVar12, arg4_00);\n                *(*0x20 + -0x148) = 0x442d29;\n                fcn.0045c2a0(arg3, uVar7, puVar12);\n                *(*0x20 + -0x148) = 0x442d32;\n                arg4 = fcn.0045c220(arg3, uVar7, puVar12, uVar14);\n                noname_1 = *(*0x20 + 0x20);\n            }\n            if (*(piVar25 + 0x34) == '\\0') {\n                unaff_R15 = NULL;\n            }\n            else {\n                iVar20 = *piVar25;\n                LOCK();\n                piVar2 = iVar20 + 0x178;\n                bVar26 = *piVar2 == 0;\n                if (bVar26) {\n                    *piVar2 = 1;\n                }\n                unaff_R15 = (iVar20 & 0xffffff00 | bVar26) ^ 1;\n            }\n        } while (unaff_R15 != '\\0');\n        if (piVar25 != NULL) {\n            *(*0x20 + -0x40) = 0;\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x40) = 0x443460;\n            *(*0x20 + -0x38) = arg4;\n            *(*0x20 + -0x30) = puVar12;\n            *(*0x20 + -0x28) = puVar12;\n            *(*0x20 + -0x20) = *(*0x20 + -0x88);\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x10) = puVar12;\n            uVar7 = *(arg4 + 1 + puVar21);\n            *(*0x20 + -0x148) = 0x442ecf;\n            fcn.00404d00(uVar7);\n            iVar20 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 0;\n            goto code_r0x00442328;\n        }\n        if (*puVar19 <= puVar19[1] && puVar19[1] != *puVar19) {\n            uVar7 = *(arg4 + 1 + puVar21);\n            *(*0x20 + -0x148) = 0x442dd9;\n            fcn.0040fb00(uVar7);\n            piVar25 = *(*0x20 + -0x60);\n            iVar20 = piVar25[5];\n            piVar25[5] = iVar20 + 1;\n            if (piVar25[1] == iVar20 + 1) {\n                piVar25[5] = 0;\n            }\n            *piVar25 = *piVar25 + 1;\n            *(*0x20 + -0x148) = 0x442e25;\n            fcn.00441d60(*(*0x20 + -0xa8), piVar25, *(*0x20 + -0xa8));\n            iVar20 = -1;\n            uVar7 = *(*0x20 + -0xb0);\n            uVar13 = 0;\n            goto code_r0x00442328;\n        }\n    }\n    puVar8 = 0x1;\n    arg3 = arg3 + 1;\n    unaff_RBX = arg4;\n    goto code_r0x00442240;\ncode_r0x004432d4:\n    *(*0x20 + -0x148) = 0x4432df;\n    fcn.0045c5a0(puVar8);\ncode_r0x004432df:\n    puVar12 = puVar8;\n    *(*0x20 + -0x148) = 0x4432ea;\n    puVar8 = puVar12;\n    fcn.0045c5a0(puVar12);\ncode_r0x004432ea:\n    *(*0x20 + -0x148) = 0x4432f2;\n    fcn.0045c5a0(puVar12);\ncode_r0x004432f2:\n    puVar12 = puVar8;\n    *(*0x20 + -0x148) = 0x4432fd;\n    puVar8 = puVar12;\n    fcn.0045c5a0(puVar12);\ncode_r0x004432fd:\n    *(*0x20 + -0x148) = 0x443305;\n    fcn.0045c5a0(puVar12);\ncode_r0x00443305:\n    puVar12 = puVar8;\n    *(*0x20 + -0x148) = 0x443310;\n    puVar8 = puVar12;\n    fcn.0045c5a0(puVar12);\ncode_r0x00443310:\n    *(*0x20 + -0x148) = 0x443318;\n    fcn.0045c5a0(puVar12);\n    puVar21 = puVar22;\ncode_r0x00443318:\n    puVar12 = puVar8;\n    *(*0x20 + -0x148) = 0x443325;\n    puVar8 = puVar12;\n    fcn.0045c5a0(puVar12);\ncode_r0x00443325:\n    *(*0x20 + -0x148) = 0x44332d;\n    in_RAX = fcn.0045c5a0(puVar12);\n    while( true ) {\n        uVar3 = *(*0x20 + -0x106);\n        *(arg4_00 + puVar21 * 2) = uVar3;\n        uVar10 = *(*0x20 + -0x70);\n        uVar14 = *(*0x20 + -0xb0);\n        puVar21 = unaff_R15;\n        unaff_R15 = uVar3;\ncode_r0x0044334e:\n        if (puVar21 < 1) goto code_r0x00442173;\n        unaff_R15 = puVar21 + (-1 - (puVar21 + -1 >> 0x3f)) >> 1;\n        if (puVar8 <= unaff_R15) goto code_r0x004433b7;\n        uVar3 = *(arg4_00 + unaff_R15 * 2);\n        if (puVar12 <= uVar3) goto code_r0x004433b0;\n        *(*0x20 + -0x106) = uVar3;\n        if (uVar10 <= *(in_RAX + uVar3 * 0x10)) break;\n        if (puVar8 <= puVar21) goto code_r0x004433a5;\n    }\n    uVar14 = *(*0x20 + -0xb0);\ncode_r0x00442173:\n    uVar3 = *(unaff_RBX + unaff_R13 * 2);\n    puVar19 = uVar3;\n    if (puVar8 <= puVar21) {\n        *(*0x20 + -0x148) = 0x4433a5;\n        fcn.0045c5a0(puVar8);\ncode_r0x004433a5:\n        puVar12 = puVar8;\n        *(*0x20 + -0x148) = 0x4433b0;\n        puVar8 = puVar12;\n        fcn.0045c5a0(puVar12);\ncode_r0x004433b0:\n        *(*0x20 + -0x148) = 0x4433b7;\n        fcn.0045c5a0(puVar12);\ncode_r0x004433b7:\n        puVar12 = puVar8;\n        *(*0x20 + -0x148) = 0x4433c5;\n        puVar8 = puVar12;\n        fcn.0045c5a0(puVar12);\n        goto code_r0x004433c5;\n    }\n    *(arg4_00 + puVar21 * 2) = uVar3;\n    puVar21 = unaff_R13 + 1;\n    puVar11 = arg4_00;\n    goto code_r0x00442140;\n}\n",
        "token_count": 12987
    },
    "00443520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443520(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045bfa0(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00434b20();\n    return;\n}\n",
        "token_count": 155
    },
    "004435c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004435c0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x4438bc;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x4438d5;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x39) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x443632;\n    iVar5 = fcn.00434c00();\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x28) = 0;\n    *(iVar5 + 0x20) = 0;\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x789668 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x4436a5;\n        fcn.0045bfa0(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x789700 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x4436ff;\n            fcn.0045bfa0(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x7378e0;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x7378e0;\n        *(*0x20 + -0x68) = 0x443765;\n        fcn.00409e80();\n        piVar1 = *(*0x20 + -0x30) + 0x7378f0;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            if (iVar2 == 0) goto code_r0x0044378f;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\ncode_r0x0044378f:\n        if (iVar2 != 0) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x443846;\n            fcn.0040a0a0(iVar2);\ncode_r0x00443846:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x443870;\n                fcn.00428cc0(iVar5 - *(*0x20 + -0x38), *(*0x20 + 0x20));\n            }\n            *(*0x20 + -0x68) = 0x44387a;\n            uVar6 = fcn.00434f00();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x4437ac;\n        fcn.00443b20(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x4437d3;\n        fcn.004349e0(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x004437fe;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x004437fe:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x00443846;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1801
    },
    "00443900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00443900(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uchar unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar3 = in_RAX >> 3;\n            uVar5 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3) >> 0x40, 0);\n            iVar7 = (uVar3 + ((uVar5 + uVar3 >> 1 | CARRY8(uVar5, uVar3) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar7 + 0x7378f0) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar7 + 0x7378f0;\n            *(*0x20 + -0x30) = iVar7;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar7 + 0x7378e0;\n            *(*0x20 + -0x50) = 0x443994;\n            fcn.00409e80();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x443a46;\n                uVar4 = fcn.0040a0a0();\n                return uVar4;\n            }\n            uVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x4439c5;\n            iVar7 = fcn.00443ec0(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x38) = uVar4;\n            if (iVar7 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x4439ee;\n            fcn.0040a0a0();\n            iVar7 = *(*0x20 + -0x28);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar7 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x50) = 0x443a1b;\n                fcn.004570e0();\n                iVar7 = *(*0x20 + -0x28);\n            }\n            if (*(iVar7 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x443ae5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x443af9;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + 0x10) != '\\0') {\n        piVar2 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *piVar2;\n            if (iVar1 == 0) goto code_r0x00443ac0;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\ncode_r0x00443ac0:\n        if (iVar1 != 0) {\n            *(iVar7 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x443a72;\n    uVar4 = fcn.00443520(*(*0x20 + 0x18));\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x443a97;\n        uVar4 = fcn.00459ce0();\n    }\n    return uVar4;\n}\n",
        "token_count": 1280
    },
    "00443b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443b20(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    uint64_t uVar5;\n    int64_t **arg3;\n    int64_t *arg4;\n    int64_t *noname_1;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00443b20:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = arg1 + 1;\n        if (*0x789810 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x20) = 0x443b6a;\n            fcn.0045c2a0(arg1, arg2, uVar5);\n            *(*0x20 + -0x20) = 0x443b76;\n            fcn.0045c240(arg1, arg2, uVar5, arg1 + 3);\n            *(*0x20 + -0x20) = 0x443b85;\n            fcn.0045c2a0(arg1, arg2, uVar5);\n            *(*0x20 + -0x20) = 0x443b8d;\n            in_RAX = fcn.0045c2a0(arg1, arg2, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar2 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar2,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x789810 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443d77;\n                            fcn.0045c200();\n                        }\n                    }\n                    else if (*0x789810 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443d5d;\n                        fcn.0045c200();\n                    }\n                    if (*0x789810 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443d99;\n                        fcn.0045c200();\n                        *(*0x20 + -0x20) = 0x443da5;\n                        fcn.0045c100(arg1, arg2, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x789810 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443bf1;\n                        fcn.0045c200();\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x789810 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443c1c;\n                        fcn.0045c100(arg1, arg2, arg3, arg4);\n                    }\n                    iVar3 = arg4[2];\n                    if (*0x789810 == 0) {\n                        arg1[2] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443c37;\n                        iVar3 = fcn.0045c100(arg1, arg2, arg3, arg4);\n                    }\n                    if (*0x789810 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443c52;\n                        iVar3 = fcn.0045c240(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar3 != 0) {\n                        if (*0x789810 == 0) {\n                            *(iVar3 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443c71;\n                            fcn.0045c200();\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x789810 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443c92;\n                            fcn.0045c200();\n                        }\n                    }\n                    if (*0x789810 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443cab;\n                        fcn.0045c2a0(arg1, arg2, arg3);\n                    }\n                    iVar3 = arg4[9];\n                    if (*0x789810 == 0) {\n                        arg1[9] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443cc7;\n                        iVar3 = fcn.0045c100(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar3 == 0) {\n                        if (*0x789810 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443ce5;\n                            fcn.0045c2a0(arg1, arg2, arg3);\n                        }\n                    }\n                    if (*0x789810 == 0) {\n                        arg4[7] = 0;\n                        arg4[2] = 0;\n                        arg4[1] = 0;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443d1e;\n                        fcn.0045c100(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x443d27;\n                        fcn.0045c100(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x443d30;\n                        fcn.0045c100(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x443d39;\n                        fcn.0045c100(arg1, arg2, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar2 = *arg3;\n        }\n        iVar3 = *(unaff_R14 + 0x30);\n        uVar6 = *(iVar3 + 0xf0);\n        uVar1 = *(iVar3 + 0xf4);\n        *(iVar3 + 0xf0) = uVar1;\n        uVar6 = uVar6 ^ uVar6 << 0x11;\n        uVar5 = uVar1;\n        uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n        *(iVar3 + 0xf4) = uVar6;\n        *(arg1 + 6) = uVar1 + uVar6 | 1;\n        if (*0x789810 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x20) = 0x443e14;\n            unaff_RDI = arg3;\n            fcn.0045c220(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x20) = 0x443e1c;\n            arg3 = unaff_RDI;\n            in_RAX = fcn.0045c200();\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        do {\n            iVar3 = arg1[7];\n            if ((iVar3 == 0) || (uVar6 = *(iVar3 + 0x30),  uVar6 <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar3 + 0x10) == arg1) {\n                *(*0x20 + -0x20) = 0x443e5d;\n                fcn.00444340(arg1, uVar6, arg3, uVar5);\n            }\n            else {\n                if (*(iVar3 + 8) != arg1) goto code_r0x00443e69;\n                *(*0x20 + -0x20) = 0x443e56;\n                fcn.00444200(arg1, uVar6, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00443e7d;\ncode_r0x00443e69:\n    unaff_RBX = 0x6b56f8;\n    *(*0x20 + -0x20) = 0x443e7c;\n    in_RAX = fcn.00431940();\ncode_r0x00443e7d:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    puVar4[0x20] = unaff_RDI;\n    *(puVar4 + -8) = 0x443e96;\n    fcn.00459ea0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = puVar4[0x20];\n    *0x20 = puVar4;\n    goto code_r0x00443b20;\n}\n",
        "token_count": 2559
    },
    "00443ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00443ec0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    int64_t noname_0;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar4 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar4 = noname_0 + 0x10;\n        }\n        else {\n            piVar4 = noname_0 + 8;\n        }\n        noname_0 = *piVar4;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045bfa0(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x00444147;\n                fcn.00444200(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x00444147:\n            fcn.00444340(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x789810 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045c220(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x789810 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045c220(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x789810 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045c220(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x789810 == 0) {\n            *piVar4 = iVar3;\n        }\n        else {\n            fcn.0045c260(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        if (*0x789810 == 0) {\n            *(iVar3 + 0x38) = *(noname_0 + 0x38);\n        }\n        else {\n            fcn.0045c220(noname_0, *(noname_0 + 0x38), param_3, param_4);\n        }\n        iVar5 = *(noname_0 + 0x10);\n        if (*0x789810 == 0) {\n            *(iVar3 + 0x10) = iVar5;\n        }\n        else {\n            fcn.0045c220(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x789810 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045c260(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        iVar5 = *(noname_0 + 8);\n        if (*0x789810 == 0) {\n            *(iVar3 + 8) = iVar5;\n        }\n        else {\n            fcn.0045c220(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x789810 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045c260(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x789810 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045c220(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x789810 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045c220(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x789810 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045c220(noname_0, 0, param_3, param_4);\n            fcn.0045c220(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x789810 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045c220(noname_0, 0, param_3, param_4);\n        fcn.0045c260(noname_0, uVar6, param_3, param_4);\n        fcn.0045c220(noname_0, uVar6, param_3, param_4);\n        fcn.0045c220(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1840
    },
    "00444200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444200(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 8);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 0x10);\n            if (*0x789810 == 0) {\n                *(arg1 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 8) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x444245;\n                fcn.0045c240(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44424e;\n                fcn.0045c200();\n                *(*0x20 + -0x20) = 0x444257;\n                in_RAX = fcn.0045c260(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x789810 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x444274;\n                    in_RAX = fcn.0045c240(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x789810 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44428c;\n                in_RAX = fcn.0045c220(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x789810 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4442ed;\n                fcn.0045c200();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x789810 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4442b1;\n                fcn.0045c200();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x789810 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4442d1;\n                    fcn.0045c200();\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x444308;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x444318;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 948
    },
    "00444340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444340(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 0x10);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 8);\n            if (*0x789810 == 0) {\n                *(arg1 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 0x10) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x444385;\n                fcn.0045c240(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44438e;\n                fcn.0045c200();\n                *(*0x20 + -0x20) = 0x444397;\n                in_RAX = fcn.0045c260(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x789810 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4443b4;\n                    in_RAX = fcn.0045c240(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x789810 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x4443cc;\n                in_RAX = fcn.0045c220(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x789810 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44442d;\n                fcn.0045c200();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x789810 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4443f1;\n                fcn.0045c200();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x789810 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x444411;\n                    fcn.0045c200();\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x444448;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x444458;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 948
    },
    "00444520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444520(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e720();\n    if (*0x734c28 == 0) {\n        fcn.0042e6a0();\n    }\n    else {\n        fcn.0042e720();\n        fcn.0042e720();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00444660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444660(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x723030) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x723038) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.00432a60(),  cVar2 != '\\0')) {\n            fcn.00444940(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != 0) && (CONCAT71(*0x69e2f1, *0x69e2f0) != *(unaff_RBX + 0xf8))) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = CONCAT71(*0x69e579, *0x69e578);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 614
    },
    "004448e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004448e0(ulong arg1)\n\n{\n    if ((*0x7895b0 == '\\0') && (*0x7895ae == '\\0')) {\n        if (*0x7895b3 != '\\0') {\n            return 0;\n        }\n        fcn.00444940(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00444940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444940(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    ulong *unaff_R14;\n    ulong *puVar3;\n    \n    puVar3 = unaff_R14;\n    if (*0x78960c != 0) {\n        fcn.0042d3a0();\n    }\n    *0x78960c = 1;\n    *puVar3 = 0;\n    puVar3[2] = 0x13a0;\n    puVar3[3] = 0x13a0;\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433a80();\n    fcn.00433fc0();\n    fcn.00433a80();\n    fcn.00433fc0();\n    fcn.00433a80();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    piVar1 = puVar3[6];\n    if (((piVar1[0x27] != 0) && (0 < *(piVar1 + 0x21))) && (*piVar1 == arg1)) {\n        if (*0x7895af != '\\0') {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.004338e0();\n        }\n        arg1 = *(puVar3[6] + 0x138);\n    }\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    *(puVar3[6] + 0xc4) = 1;\n    *(puVar3[6] + 0x98) = arg1;\n    uVar2 = *0x71d188 >> 2;\n    if (*(unaff_R14[6] + 0xf9) != 0) {\n        uVar2 = *(unaff_R14[6] + 0xf9);\n    }\n    if (uVar2 != 0) {\n        fcn.004523a0(0);\n        fcn.00453300();\n        fcn.00406620();\n    }\n    fcn.0042d3a0();\n    return;\n}\n",
        "token_count": 557
    },
    "00444fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444fe0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x0044504a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x0044504a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x445069;\n                    iVar3 = fcn.0040b560(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44508c;\n                        fcn.0045cc20(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x4450a5;\n                    iVar3 = fcn.0040b560(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x789810 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x4450c7;\n                        fcn.00410a00(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x4450e5;\n                fcn.0045cee0(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x6b5708;\n            *(*0x20 + -0x48) = 0x445108;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x445125;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1013
    },
    "00445220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00445220(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x6b5728;\n            *(*0x20 + -0x68) = 0x4458a5;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x4458c5;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x7897b8;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0x3ff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = (unaff_RDI >> 2) + unaff_RDI) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x0044528e;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x0044528e:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00445359:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x00445689;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xe4234);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x7204a0);\n                        goto code_r0x00445359;\n                    }\n                    goto code_r0x00445819;\n                }\n                goto code_r0x00445826;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x720360;\n                piVar6 = *(piVar6 + 0xe406c);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x7204a0);\n                    goto code_r0x00445359;\n                }\n                goto code_r0x00445833;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00445434:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x00445689;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xe4234);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x7204a0);\n                            goto code_r0x00445434;\n                        }\n                        goto code_r0x004457e5;\n                    }\n                    goto code_r0x004457f2;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x720360;\n                    piVar10 = *(piVar10 + 0xe406c);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x7204a0);\n                        goto code_r0x00445434;\n                    }\n                    goto code_r0x004457ff;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00445554:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x00445689:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x4456cc;\n                                uVar4 = fcn.0040b560(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x4456e9;\n                                fcn.0045cc20();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x44570a;\n                                uVar4 = fcn.0040b560(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x789810 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x44573b;\n                                    fcn.00410a00((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x445754;\n                            fcn.0045cee0(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x6b5728;\n                        *(*0x20 + -0x68) = 0x445785;\n                        fcn.00431940();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x00445785:\n                        *(*0x20 + -0x68) = 0x44578f;\n                        fcn.0045c5a0(0x44);\ncode_r0x0044578f:\n                        *(*0x20 + -0x68) = 0x445799;\n                        fcn.0045c5c0(0xf9);\ncode_r0x00445799:\n                        *(*0x20 + -0x68) = 0x4457a5;\n                        fcn.0045c5a0(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x004457a5;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xe4234);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x7204a0);\n                                goto code_r0x00445554;\n                            }\n                            goto code_r0x004457af;\n                        }\n                        goto code_r0x004457bc;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xe406c);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x7204a0);\n                            goto code_r0x00445554;\n                        }\n                        goto code_r0x004457c9;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00445655:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x00445689;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x7204a0);\n                                goto code_r0x00445655;\n                            }\n                            goto code_r0x00445785;\n                        }\n                        goto code_r0x0044578f;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x720360);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x7204a0);\n                            goto code_r0x00445655;\n                        }\n                        goto code_r0x00445799;\n                    }\ncode_r0x004457a5:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x4457af;\n                    fcn.0045c5c0(0x81);\ncode_r0x004457af:\n                    *(*0x20 + -0x68) = 0x4457bc;\n                    fcn.0045c5a0(0x44);\ncode_r0x004457bc:\n                    *(*0x20 + -0x68) = 0x4457c9;\n                    fcn.0045c5c0(0xf9);\ncode_r0x004457c9:\n                    *(*0x20 + -0x68) = 0x4457d6;\n                    fcn.0045c5a0(0x44);\n                }\n                *(*0x20 + -0x68) = 0x4457e5;\n                fcn.0045c5c0(0x81);\n                piVar8 = piVar7;\ncode_r0x004457e5:\n                *(*0x20 + -0x68) = 0x4457f2;\n                fcn.0045c5a0(0x44);\ncode_r0x004457f2:\n                *(*0x20 + -0x68) = 0x4457ff;\n                fcn.0045c5c0(0xf9);\ncode_r0x004457ff:\n                *(*0x20 + -0x68) = 0x44580c;\n                fcn.0045c5a0(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x445819;\n            fcn.0045c5c0(0x81);\n            piVar8 = piVar10;\ncode_r0x00445819:\n            *(*0x20 + -0x68) = 0x445826;\n            fcn.0045c5a0(0x44);\ncode_r0x00445826:\n            *(*0x20 + -0x68) = 0x445833;\n            fcn.0045c5c0(0xf9);\ncode_r0x00445833:\n            *(*0x20 + -0x68) = 0x445845;\n            fcn.0045c5a0(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x445852;\n        in_RAX = fcn.0045c5c0(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4188
    },
    "00445900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445900(void)\n\n{\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 2; iVar1 = iVar1 + 1) {\n        *(iVar1 * 0x40 + 0x789b48) = 0;\n        *(iVar1 * 0x40 + 0x789b50) = 0;\n    }\n    for (iVar1 = 0; iVar1 < 0x23; iVar1 = iVar1 + 1) {\n        *(iVar1 * 0x10 + 0x78a608) = 0;\n        *(iVar1 * 0x10 + 0x78a610) = 0;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00445960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00445960(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x789b48);\n                if (iVar1 != 0) goto code_r0x004459fe;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x789b48;\n                *(*0x20 + -0x40) = 0x4459c6;\n                iVar1 = fcn.00422620();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x445a8f;\n                                    fcn.00423960();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x004459fe:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x445a35;\n                                            fcn.004237e0();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x445a58;\n                                    iVar1 = fcn.004320e0();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x445aaf;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x40) = 0x445ac5;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x40) = 0x445ad6;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x40) = 0x445ae5;\n            in_AL = fcn.0045c5a0(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x445aef;\n        fcn.00459ea0();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 897
    },
    "00445b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445b00(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x75ba18) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x445bb6;\n                            fcn.00423960(0x789b40);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00445bc5;\n                        }\n                    }\n                    else {\ncode_r0x00445bc5:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x7895f0 != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x445c13;\n                            fcn.004237e0(0x789b40);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x445c31;\n                            fcn.004233c0(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x445c45;\n                        fcn.0045c5a0(2);\n                    }\n                    *(*0x20 + -0x38) = 0x445c4f;\n                    fcn.0045c5a0(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x445c65;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x38) = 0x445c72;\n            in_RAX = fcn.0045c5c0(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x445c85;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 913
    },
    "00445ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445ca0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x789b40;\n                *(*0x20 + -0x40) = 0x445cf1;\n                fcn.00409e80();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x445d05;\n                    puVar3 = fcn.00445960();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x445d54;\n                fcn.0040a0a0();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x445d95;\n            in_RAX = fcn.0045c5a0(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445da5;\n        fcn.0045e5a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 707
    },
    "00445dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445dc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x789b40;\n                *(*0x20 + -0x40) = 0x445e34;\n                fcn.00409e80();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x445e57;\n                    fcn.00445b00();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x445e8f;\n                fcn.0040a0a0();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x445eca;\n            in_RAX = fcn.0045c5a0(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445ed9;\n        fcn.0045e5a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 783
    },
    "00445f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445f00(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.00409e80();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.00445b00();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.0040a0a0();\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00446000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00446000(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x7899e8 != 0) {\n                        uVar6 = -*0x789738;\n                        piVar8 = (*0x789738 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44608c;\n                        puVar2 = fcn.00414140();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x4460b5;\n                        fcn.004320e0();\n                        goto code_r0x004460b5;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x004460b5:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x4460e5;\n                        fcn.00409e80();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x78a608);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x446119;\n                                fcn.004237e0();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x446131;\n                            fcn.0040a0a0();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x446151;\n                                iVar3 = fcn.00422620(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44618e;\n                                    fcn.004320e0();\n                                    goto code_r0x0044618e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044618e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x446198;\n                        uVar1 = fcn.0045c5a0(0x23);\n                        goto code_r0x00446198;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00446198:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x789b40;\n                            *(*0x20 + -0x78) = 0x4461e7;\n                            fcn.00409e80();\n                            *(*0x20 + -0x78) = 0x4461f1;\n                            uVar4 = fcn.00445960();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x446205;\n                            fcn.0040a0a0();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x446245;\n                                fcn.00445ca0();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x446292;\n                        fcn.0045c5a0(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44629c;\n                    fcn.0045c5a0(2);\n                }\n                *(*0x20 + -0x78) = 0x4462ad;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x78) = 0x4462be;\n            uVar1 = fcn.004320e0();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x4462c8;\n        fcn.0045e5a0();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1837
    },
    "004462e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004462e0(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX - in_RAX;\n            if ((uVar5 & uVar5 - 1) == 0) {\n                if (unaff_RBX <= uVar5 + in_RAX) {\n                    if (*0x7899e8 != 0) {\n                        *(*0x20 + -0x80) = 0x4463d3;\n                        fcn.004141c0();\n                        return;\n                    }\n                    puVar4 = in_RAX;\n                    uVar6 = uVar5;\n                    if (0x7fff < uVar5) {\n                        uVar5 = in_RAX + 0x100000000000 >> 0x2a;\n                        if (uVar5 < 0x40) {\n                            iVar8 = *(*(*(uVar5 * 8 + 0x75ba18) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) +\n                                      0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                            puVar4 = in_RAX >> 0xd & 0x100 | *(iVar8 + 99);\n                            if (*(iVar8 + 99) == 2) {\n                                if (*0x7895f0 == 0) {\n                                    *(*0x20 + -0x80) = 0x4463cb;\n                                    fcn.004233c0(1);\n                                    return;\n                                }\n                                iVar9 = 0;\n                                for (uVar5 = *(iVar8 + 0x20); 1 < uVar5; uVar5 = uVar5 >> 1) {\n                                    iVar9 = iVar9 + 1;\n                                }\n                                *(*0x20 + -0x58) = iVar8;\n                                *(*0x20 + -0x48) = iVar9;\n                                *(*0x20 + -0x80) = 0x44640b;\n                                fcn.00409e80();\n                                if (*(*0x20 + -0x48) < 0x23) {\n                                    *(*0x20 + -0x80) = 0x44642e;\n                                    fcn.00423960(0x78a608);\n                                    *(*0x20 + -0x80) = 0x44643c;\n                                    fcn.0040a0a0();\n                                    return;\n                                }\n                                *(*0x20 + -0x80) = 0x446448;\n                                in_RAX = fcn.0045c5a0(0x23);\n                            }\n                            *(*0x20 + -0x20) = in_RAX;\n                            *(*0x20 + -0x50) = *(iVar8 + 0x18);\n                            *(*0x20 + -0x80) = 0x44645b;\n                            fcn.00433860();\n                            *(*0x20 + -0x80) = 0x446465;\n                            fcn.00433fc0();\n                            *(*0x20 + -0x80) = 0x44646a;\n                            fcn.00433a80();\n                            *(*0x20 + -0x80) = 0x446474;\n                            fcn.004340e0();\n                            *(*0x20 + -0x80) = 0x446479;\n                            fcn.00433ac0();\n                            *(*0x20 + -0x80) = 0x44647e;\n                            fcn.004338e0();\n                            uVar6 = 0xe;\n                            *(*0x20 + -0x80) = 0x44648f;\n                            fcn.004320e0();\n                        }\n                        iVar2 = 0x40;\n                        *(*0x20 + -0x80) = 0x44649c;\n                        uVar5 = fcn.0045c5c0(0x40);\n                        goto code_r0x0044649c;\n                    }\n                    *(*0x20 + -0x10) = unaff_R14;\n                    uVar3 = 0;\n                    for (; iVar2 = uVar3,  0x2000 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x0044649c:\n                        uVar3 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x28) = puVar4;\n                    iVar8 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                    if ((iVar8 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                        if ((uVar3 & 0xff) < 2) {\n                            *(*0x20 + -0x59) = uVar3;\n                            *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x789b40;\n                            *(*0x20 + -0x80) = 0x4464f9;\n                            fcn.00409e80();\n                            *(*0x20 + -0x80) = 0x446508;\n                            fcn.00445b00();\n                            *(*0x20 + -0x80) = 0x446514;\n                            fcn.0040a0a0();\n                            return;\n                        }\n                    }\n                    else {\n                        iVar8 = *(iVar8 + 0x40);\n                        if ((uVar3 & 0xff) < 2) {\n                            iVar9 = (uVar3 & 0xff) * 0x10;\n                            if (0x7fff < *(iVar8 + 0x470 + iVar9)) {\n                                *(*0x20 + -0x30) = uVar5;\n                                *(*0x20 + -0x40) = iVar8;\n                                *(*0x20 + -0x38) = iVar9;\n                                *(*0x20 + -0x80) = 0x446556;\n                                fcn.00445dc0();\n                                uVar5 = *(*0x20 + -0x30);\n                                puVar4 = *(*0x20 + -0x28);\n                                iVar8 = *(*0x20 + -0x40);\n                                iVar9 = *(*0x20 + -0x38);\n                            }\n                            *puVar4 = *(iVar8 + 0x468 + iVar9);\n                            *(iVar8 + 0x468 + iVar9) = puVar4;\n                            piVar1 = iVar8 + 0x470 + iVar9;\n                            *piVar1 = *piVar1 + uVar5;\n                            return;\n                        }\n                        *(*0x20 + -0x80) = 0x44659a;\n                        fcn.0045c5a0(2);\n                    }\n                    *(*0x20 + -0x80) = 0x4465a5;\n                    fcn.0045c5a0(2);\n                }\n                *(*0x20 + -0x80) = 0x4465b6;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x4465c7;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x4465d7;\n        fcn.0045e5a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1925
    },
    "00446600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446600(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x004467d1:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x4467ef;\n        fcn.00459ea0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x789a00 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x446750;\n                            uVar9 = fcn.0044ae60();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x44675f;\n                            fcn.00433860();\n                            *(*0x20 + -0x68) = 0x446770;\n                            fcn.00434160();\n                            *(*0x20 + -0x68) = 0x44677f;\n                            fcn.00434160();\n                            *(*0x20 + -0x68) = 0x446790;\n                            fcn.00434160();\n                            *(*0x20 + -0x68) = 0x44679a;\n                            fcn.004340e0();\n                            *(*0x20 + -0x68) = 0x4467ab;\n                            fcn.00434160();\n                            *(*0x20 + -0x68) = 0x4467b5;\n                            fcn.00433fc0();\n                            *(*0x20 + -0x68) = 0x4467ba;\n                            fcn.00433ac0();\n                            *(*0x20 + -0x68) = 0x4467bf;\n                            fcn.004338e0();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x4467d0;\n                            in_RAX = fcn.004320e0();\n                            goto code_r0x004467d1;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x0044667e;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x0044667e;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x0044667e:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1595
    },
    "00446e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446e20(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x128 && *0x20 + -0x128 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x1a8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar7 = in_RAX[1];\n                iVar4 = *in_RAX;\n                if (iVar4 != 0) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar7;\n                    *(*0x20 + -0x138) = iVar4;\n                    *(*0x20 + -0x140) = in_RAX[7];\n                    *(*0x20 + -0x1b0) = 0x446e94;\n                    uVar2 = fcn.00446000();\n                    *(*0x20 + -0x148) = uVar2;\n                    *(*0x20 + -0x150) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = unaff_RBP;\n                    *(*0x20 + -0x1b0) = 0x446eb9;\n                    fcn.0045c806();\n                    uVar3 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar3;\n                    uVar8 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar8;\n                    *(*0x20 + -0x118) = unaff_RBX - uVar8;\n                    iVar4 = uVar8 - *(*0x20 + -0x140);\n                    *(*0x20 + -0x158) = iVar4;\n                    iVar7 = *(*0x20 + 8);\n                    if (*(iVar7 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + 0x10);\n                        if ((uVar9 < uVar8 - uVar3) &&\n                           (uVar6 = uVar8 - uVar3 & 0xffffffffffffff00 | *(iVar7 + 0xb9),  *(iVar7 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b0) = 0x4470e6;\n                            fcn.004320e0();\n                            goto code_r0x004470e6;\n                        }\n                        for (iVar7 = *(iVar7 + 0x148); iVar7 != 0; iVar7 = *(iVar7 + 0x40)) {\n                            uVar3 = *(iVar7 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                               (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                                *(iVar7 + 0x18) = uVar3 + *(*0x20 + -0x118);\n                            }\n                        }\n                    }\n                    else {\n                        uVar9 = 0;\n                        uVar6 = uVar8;\n                        for (uVar8 = *(iVar7 + 0x148); uVar8 != 0; uVar8 = *(uVar8 + 0x40)) {\n                            uVar10 = *(*(uVar8 + 0x50) + 0x18) + *(uVar8 + 0x18);\n                            if (((uVar3 <= uVar10) && (uVar10 < uVar6)) && (uVar9 < uVar10)) {\n                                uVar9 = uVar10;\n                            }\ncode_r0x004470e6:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b0) = 0x44712f;\n                        iVar4 = fcn.00446ca0(*0x20 + -0x128);\n                        iVar4 = *(*0x20 + -0x158) - iVar4;\n                    }\n                    *(*0x20 + -0x1b0) = 0x446f8f;\n                    fcn.0045cee0(iVar4);\n                    iVar7 = *(*0x20 + 8);\n                    uVar3 = *(iVar7 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        *(iVar7 + 0x50) = *(*0x20 + -0x118) + uVar3;\n                    }\n                    uVar3 = *(iVar7 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        *(iVar7 + 0x68) = uVar3 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b0) = 0x446ff8;\n                    fcn.00446b60();\n                    piVar1 = *(*0x20 + 8);\n                    uVar3 = piVar1[4];\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        piVar1[4] = *(*0x20 + -0x118) + uVar3;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar7 = *(*0x20 + -0x148);\n                    *piVar1 = iVar7;\n                    iVar4 = *(*0x20 + -0x150);\n                    piVar1[1] = iVar4;\n                    piVar1[2] = iVar7 + 0x13a0;\n                    piVar1[7] = iVar4 - *(*0x20 + -0x158);\n                    iVar7 = *(*0x20 + -0x118);\n                    piVar1[0x10] = piVar1[0x10] + iVar7;\n                    *(*0x20 + -0x1a8) = 0;\n                    *(*0x20 + -0x1b0) = 0x4470b3;\n                    fcn.0044fea0(0, iVar7, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b0) = 0x4470c5;\n                    fcn.004462e0();\n                    return;\n                }\n                *(*0x20 + -0x1b0) = 0x447157;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b0) = 0x447168;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x447178;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1961
    },
    "00447d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00447d80(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2d0) == 0)) {\n                            if (0 < *0x7899f4) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x447e49;\n                            iVar2 = fcn.0044a780(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x28) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x447ea6;\n                            fcn.00446e20();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x447ed5;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x20) = 0x447ee6;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x20) = 0x447ef7;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x20) = 0x447f08;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x447f13;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "004480c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004480c0(uchar param_1)\n\n{\n    int32_t iVar1;\n    int64_t **in_RAX;\n    ulong uVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *piVar10;\n    int32_t iVar11;\n    int64_t *piVar12;\n    int32_t iVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            piVar3 = in_RAX[3];\n            if (piVar3 == NULL) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            piVar10 = *in_RAX;\n            *(*0x20 + -0x28) = piVar10;\n            piVar12 = in_RAX[1];\n            *(*0x20 + -0x30) = piVar12;\n            if (*piVar10 == piVar3) {\n                iVar1 = -1;\n            }\n            else {\n                *(*0x20 + -0x98) = piVar3 + -1;\n                *(*0x20 + -0xd8) = 0x448150;\n                iVar1 = fcn.0044b560(1);\n                piVar10 = *(*0x20 + -0x28);\n                piVar12 = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x98);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0x98) = piVar3;\n            if (iVar1 == -1) {\n                iVar1 = 0;\n            }\n            *(*0x20 + -0xa4) = iVar1;\n            if (in_RAX[7] - in_RAX[5] == 0) {\n                iVar13 = 0;\n                iVar6 = 0;\n                goto code_r0x004482a7;\n            }\n            *(*0x20 + -0x90) = in_RAX[7] - in_RAX[5];\n            if (*(piVar10 + 0x2b) < 2) {\n                piVar4 = NULL;\n            }\n            else {\n                iVar6 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                if ((iVar6 >> 2 & 1) != 0) {\n                    if ((piVar10 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x50) = iVar6;\n                        *(*0x20 + -0xd8) = 0x4481df;\n                        fcn.00433860();\n                        *(*0x20 + -0xd8) = 0x4481f0;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x4481fd;\n                        fcn.004340e0();\n                        *(*0x20 + -0xd8) = 0x448205;\n                        fcn.00433ac0();\n                        *(*0x20 + -0xd8) = 0x44820a;\n                        fcn.004338e0();\n                        in_RAX = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0xa4);\n                        piVar12 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + -0x50);\n                        piVar10 = *(*0x20 + -0x28);\n                    }\n                    iVar6 = iVar6 + 4;\n                }\n                piVar4 = *(iVar6 + 8);\n            }\n            piVar3 = piVar12;\n            if ((piVar4 != NULL) && (iVar11 = *piVar4,  0 < iVar11)) {\n                iVar13 = piVar4[1];\n                if (iVar13 < 1) {\n                    iVar13 = 0;\n                    iVar6 = 0;\ncode_r0x004482a7:\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x9c) = iVar13;\n                    if (in_RAX[9] == NULL) {\n                        iVar11 = 0;\n                        iVar6 = 0;\n                        goto code_r0x00448402;\n                    }\n                    piVar3 = in_RAX[10];\n                    if (piVar3 != NULL) {\n                        iVar1 = in_RAX[9] >> 3;\n                        iVar11 = *piVar3;\n                        if (iVar1 < *piVar3) {\n                            iVar11 = iVar1;\n                        }\n                        iVar6 = piVar3[1];\n                        goto code_r0x00448402;\n                    }\n                    if (*(piVar10 + 0x2b) == '\\0') {\n                        piVar4 = NULL;\n                    }\n                    else {\n                        ppiVar5 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                        if ((ppiVar5 >> 2 & 1) != 0) {\n                            if ((piVar10 >> 2 & 1) != 0) {\n                                *(*0x20 + -0x68) = ppiVar5;\n                                *(*0x20 + -0xd8) = 0x448333;\n                                fcn.00433860();\n                                *(*0x20 + -0xd8) = 0x448345;\n                                fcn.00434160();\n                                *(*0x20 + -0xd8) = 0x448352;\n                                fcn.004340e0();\n                                *(*0x20 + -0xd8) = 0x448357;\n                                fcn.00433ac0();\n                                *(*0x20 + -0xd8) = 0x44835c;\n                                fcn.004338e0();\n                                in_RAX = *(*0x20 + 8);\n                                iVar1 = *(*0x20 + -0xa4);\n                                ppiVar5 = *(*0x20 + -0x68);\n                                piVar12 = *(*0x20 + -0x30);\n                                iVar13 = *(*0x20 + -0x9c);\n                                piVar10 = *(*0x20 + -0x28);\n                            }\n                            ppiVar5 = ppiVar5 + 4;\n                        }\n                        piVar4 = *ppiVar5;\n                    }\n                    piVar3 = piVar12;\n                    if ((piVar4 != NULL) && (iVar11 = *piVar4,  0 < iVar11)) {\n                        *(*0x20 + -0x48) = piVar4;\n                        if ((-1 < iVar1) && (iVar1 < iVar11)) {\n                            iVar11 = piVar4[1];\n                            if (iVar11 < 1) {\n                                iVar11 = 0;\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = piVar4 + iVar1 * (iVar11 + 7 >> 3) + 8;\n                            }\ncode_r0x00448402:\n                            if (in_RAX[10] == NULL) {\n                                if (*(piVar10 + 0x2b) < 3) {\n                                    puVar7 = NULL;\n                                }\n                                else {\n                                    iVar8 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                                    if ((iVar8 >> 2 & 1) != 0) {\n                                        if ((piVar10 >> 2 & 1) != 0) {\n                                            *(*0x20 + -0x60) = iVar8;\n                                            *(*0x20 + -0x40) = iVar6;\n                                            *(*0x20 + -0xa0) = iVar11;\n                                            *(*0x20 + -0xd8) = 0x44848a;\n                                            fcn.00433860();\n                                            *(*0x20 + -0xd8) = 0x44849b;\n                                            fcn.00434160();\n                                            *(*0x20 + -0xd8) = 0x4484a8;\n                                            fcn.004340e0();\n                                            *(*0x20 + -0xd8) = 0x4484ad;\n                                            fcn.00433ac0();\n                                            *(*0x20 + -0xd8) = 0x4484b2;\n                                            fcn.004338e0();\n                                            iVar8 = *(*0x20 + -0x60);\n                                            iVar13 = *(*0x20 + -0x9c);\n                                        }\n                                        iVar8 = iVar8 + 4;\n                                    }\n                                    puVar7 = *(iVar8 + 0x10);\n                                }\n                                if (puVar7 != NULL) {\n                                    uVar2 = *puVar7;\n                                    *(*0x20 + -0x20) = puVar7 + 1;\n                                    *(*0x20 + -0x18) = uVar2;\n                                    *(*0x20 + -0x10) = uVar2;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = *0x72e660;\n                                *(*0x20 + -0x18) = *0x72e668;\n                                *(*0x20 + -0x10) = *0x72e670;\n                            }\n                            return iVar13;\n                        }\n                        *(*0x20 + -0xd8) = 0x448565;\n                        uVar2 = fcn.0044ae60();\n                        *(*0x20 + -0x38) = uVar2;\n                        *(*0x20 + -0x70) = piVar12;\n                        *(*0x20 + -0x78) = **(*0x20 + -0x48);\n                        *(*0x20 + -0xd8) = 0x448587;\n                        fcn.00433860();\n                        *(*0x20 + -0xd8) = 0x448598;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x4485a5;\n                        fcn.00433f60(*(*0x20 + -0xa4));\n                        *(*0x20 + -0xd8) = 0x4485b6;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x4485c5;\n                        fcn.00433f60();\n                        *(*0x20 + -0xd8) = 0x4485d6;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x4485e8;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x4485f9;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x448605;\n                        fcn.00433fc0();\n                        *(*0x20 + -0xd8) = 0x448616;\n                        fcn.00434160();\n                        *(*0x20 + -0xd8) = 0x44861b;\n                        fcn.004338e0();\n                        *(*0x20 + -0xd8) = 0x44862c;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0xd8) = 0x448637;\n                    piVar12 = piVar3;\n                    uVar2 = fcn.0044ae60();\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x70) = piVar3;\n                    *(*0x20 + -0x80) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x88) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -0xd8) = 0x448665;\n                    fcn.00433860();\n                    *(*0x20 + -0xd8) = 0x448676;\n                    fcn.00434160();\n                    *(*0x20 + -0xd8) = 0x448688;\n                    fcn.00434160();\n                    *(*0x20 + -0xd8) = 0x448699;\n                    fcn.00434160();\n                    *(*0x20 + -0xd8) = 0x4486a5;\n                    fcn.00433fc0();\n                    *(*0x20 + -0xd8) = 0x4486b6;\n                    fcn.00434160();\n                    *(*0x20 + -0xd8) = 0x4486c5;\n                    fcn.00433fc0();\n                    *(*0x20 + -0xd8) = 0x4486ca;\n                    fcn.00433ac0();\n                    *(*0x20 + -0xd8) = 0x4486cf;\n                    fcn.004338e0();\n                    *(*0x20 + -0xd8) = 0x4486e5;\n                    fcn.004320e0();\n                }\n                else {\n                    *(*0x20 + -0x58) = piVar4;\n                    if ((-1 < iVar1) && (iVar1 < iVar11)) {\n                        iVar6 = piVar4 + (iVar13 + 7 >> 3) * iVar1 + 8;\n                        goto code_r0x004482a7;\n                    }\n                }\n                *(*0x20 + -0xd8) = 0x4486f0;\n                piVar3 = piVar12;\n                uVar2 = fcn.0044ae60();\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -0x70) = piVar12;\n                *(*0x20 + -0x78) = **(*0x20 + -0x58);\n                *(*0x20 + -0xd8) = 0x44870f;\n                fcn.00433860();\n                *(*0x20 + -0xd8) = 0x448725;\n                fcn.00434160();\n                *(*0x20 + -0xd8) = 0x448731;\n                fcn.00433f60(*(*0x20 + -0xa4));\n                *(*0x20 + -0xd8) = 0x448745;\n                fcn.00434160();\n                *(*0x20 + -0xd8) = 0x44874f;\n                fcn.00433f60();\n                *(*0x20 + -0xd8) = 0x448765;\n                fcn.00434160();\n                *(*0x20 + -0xd8) = 0x448777;\n                fcn.00434160();\n                *(*0x20 + -0xd8) = 0x448788;\n                fcn.00434160();\n                *(*0x20 + -0xd8) = 0x448792;\n                fcn.00433fc0();\n                *(*0x20 + -0xd8) = 0x4487a5;\n                fcn.00434160();\n                *(*0x20 + -0xd8) = 0x4487aa;\n                fcn.004338e0();\n                *(*0x20 + -0xd8) = 0x4487bb;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0xd8) = 0x4487c6;\n            uVar2 = fcn.0044ae60();\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x70) = piVar3;\n            *(*0x20 + -0x80) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xd8) = 0x4487e9;\n            fcn.00433860();\n            *(*0x20 + -0xd8) = 0x4487fa;\n            fcn.00434160();\n            *(*0x20 + -0xd8) = 0x44880c;\n            fcn.00434160();\n            *(*0x20 + -0xd8) = 0x44881d;\n            fcn.00434160();\n            param_1 = *(*0x20 + -0x90);\n            *(*0x20 + -0xd8) = 0x44882f;\n            fcn.00433fc0();\n            *(*0x20 + -0xd8) = 0x448845;\n            fcn.00434160();\n            *(*0x20 + -0xd8) = 0x44884f;\n            fcn.00433fc0();\n            *(*0x20 + -0xd8) = 0x448854;\n            fcn.00433ac0();\n            *(*0x20 + -0xd8) = 0x448859;\n            fcn.004338e0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xd8) = 0x44886a;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x44887e;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4095
    },
    "00448900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00448900(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x00448900:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 < 1) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x00448940;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x00448b45;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x00448940:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x004489a7;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x004489a7;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x004489a7:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x448a1b;\n                            iVar2 = fcn.0045c5a0(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x4489c5;\n                    iVar2 = fcn.00449060();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX < 1) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x448a7c;\n                            fcn.0045cee0(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x448af0;\n                    fcn.0045c660(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x448af8;\n                in_RAX = fcn.0045c5a0(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x00448b57;\ncode_r0x00448b45:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x448b56;\n    in_RAX = fcn.004320e0();\ncode_r0x00448b57:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x448b70;\n    fcn.00459ea0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x00448900;\n}\n",
        "token_count": 1886
    },
    "00448f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00448f60(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040b560(0);\n            }\n            fcn.0045cee0(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x729ec0;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00449e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00449e80(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t *arg2;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = 0x449ea5;\n            ppiVar3 = fcn.0040bf40();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar6 = 0x722f80; iVar6 != 0; iVar6 = *(iVar6 + 0x210)) {\n                if (*(iVar6 + 0x208) == '\\0') {\n                    *(*0x20 + -0x10) = iVar6;\n                    piVar7 = ppiVar3[1];\n                    piVar9 = *ppiVar3;\n                    piVar4 = piVar9;\n                    if (ppiVar3[2] < piVar7 + 1U) {\n                        *(*0x20 + -0x60) = 0x449efa;\n                        arg2 = piVar7;\n                        piVar4 = fcn.00445220(piVar7);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar7;\n                        if (*0x789810 == 0) {\n                            *ppiVar3 = piVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x449f16;\n                            piVar4 = fcn.0045c100(piVar7, arg2, param_3, param_4);\n                        }\n                        iVar6 = *(*0x20 + -0x10);\n                        piVar7 = piVar9;\n                    }\n                    param_3 = piVar7 + 1;\n                    ppiVar3[1] = param_3;\n                    if (*0x789810 == 0) {\n                        piVar4[piVar7] = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x60) = 0x449f45;\n                        ppiVar3 = fcn.0045c200();\n                    }\n                    if ((*(iVar6 + 0x1e0) == 0) && (*(iVar6 + 0x1e8) == 0)) {\n                        iVar1 = *(iVar6 + 0xd8);\n                        iVar6 = *(iVar6 + 0xd0);\n                        *(*0x20 + -0x60) = 0x449f85;\n                        uVar2 = fcn.00412180();\n                        iVar8 = *(*0x20 + -0x10);\n                        *(iVar8 + 0x1e0) = uVar2;\n                        if (*0x789810 == 0) {\n                            *(iVar8 + 0x1e8) = iVar1 - iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x449fae;\n                            fcn.0045c240(iVar8, piVar7, param_3, param_4);\n                        }\n                        iVar1 = *(iVar8 + 0xe8);\n                        iVar8 = *(iVar8 + 0xe0);\n                        *(*0x20 + -0x60) = 0x449fc8;\n                        uVar2 = fcn.00412180();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x1f0) = uVar2;\n                        if (*0x789810 == 0) {\n                            *(iVar6 + 0x1f8) = iVar1 - iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x449ff1;\n                            fcn.0045c240(iVar6, piVar7, param_3, param_4);\n                        }\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar7 = ppiVar3[1];\n            piVar9 = NULL;\n            while( true ) {\n                if (piVar7 <= piVar9) goto code_r0x0044a066;\n                iVar6 = (*ppiVar3)[piVar9];\n                if (*(iVar6 + 0x1d8) != '\\0') break;\n                piVar9 = piVar9 + 1;\n            }\n            if (*0x789810 == 0) {\n                **ppiVar3 = iVar6;\n            }\n            else {\n                *(*0x20 + -0x60) = 0x44a02e;\n                ppiVar3 = fcn.0045c260(piVar9, piVar7, param_3, param_4);\n            }\n            piVar7 = ppiVar3[1];\n            if (piVar9 < piVar7) {\n                if (*0x789810 == 0) {\n                    (*ppiVar3)[piVar9] = 0x722f80;\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x44a065;\n                    ppiVar3 = fcn.0045c200(0x722f80);\n                }\ncode_r0x0044a066:\n                if (*0x789810 != '\\0') {\n                    *(*0x20 + -0x60) = 0x44a07e;\n                    fcn.00403140();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar5 = *0x734cf0;\n                *0x734cf0 = ppiVar3;\n                return uVar5;\n            }\n            *(*0x20 + -0x60) = 0x44a0a5;\n            fcn.0045c5a0(piVar7);\n        }\n        *(puVar10 + -8) = 0x44a0ab;\n        fcn.00459ea0();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1497
    },
    "0044a0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044a0c0(void)\n\n{\n    int32_t **ppiVar1;\n    int64_t arg1;\n    char cVar2;\n    int32_t **in_RAX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int32_t *arg1_00;\n    ulong *puVar6;\n    int32_t *piVar7;\n    int64_t unaff_R14;\n    int32_t *piStack112;\n    int32_t *piStack96;\n    ulong uStack80;\n    ulong *puStack72;\n    int32_t *piStack64;\n    int64_t iStack56;\n    ulong uStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    while (&uStack80 < *(unaff_R14 + 0x10) || &uStack80 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar4 = *in_RAX;\n    if ((((*piVar4 == -6) && (*(piVar4 + 1) == '\\0')) && (*(piVar4 + 5) == '\\0')) &&\n       ((*(piVar4 + 6) == '\\x01' && (*(piVar4 + 7) == '\\b')))) {\n        ppiVar1 = in_RAX[0x10];\n        arg1_00 = in_RAX[0x11];\n        iVar5 = arg1_00 + -1;\n        piVar4 = NULL;\ncode_r0x0044a14a:\n        piVar7 = piVar4;\n        if (piVar7 < iVar5) {\n            piVar4 = piVar7 + 1;\n            if (piVar4 < arg1_00) goto code_r0x0044a16b;\n            goto code_r0x0044a655;\n        }\n        if (arg1_00 != NULL) {\n            if ((*ppiVar1 == in_RAX[0x14]) && (ppiVar1[iVar5 * 2] == in_RAX[0x15])) {\n                piVar4 = in_RAX[0x39];\n                puVar6 = in_RAX[0x38];\n                if (piVar4 < 1) {\n                    return;\n                }\n                iVar5 = 0;\n                while( true ) {\n                    uStack48 = *puVar6;\n                    iStack40 = *(puVar6 + 1);\n                    iStack36 = *(puVar6 + 0xc);\n                    iStack32 = *(puVar6 + 2);\n                    iStack28 = *(puVar6 + 0x14);\n                    iStack24 = *(puVar6 + 3);\n                    iStack20 = *(puVar6 + 0x1c);\n                    arg1 = puVar6[3];\n                    iStack16 = *(puVar6 + 4);\n                    iStack12 = *(puVar6 + 0x24);\n                    if ((*(puVar6[4] + 8) != arg1) ||\n                       (puStack72 = puVar6,  cVar2 = fcn.004025e0(arg1, piVar4),  cVar2 == '\\0')) break;\n                    iVar5 = iVar5 + 1;\n                    if (piVar4 <= iVar5) {\n                        return;\n                    }\n                    puVar6 = puStack72 + 5;\n                }\n                arg1_00 = in_RAX[0x36];\n                piStack96 = in_RAX[0x37];\n                uStack80 = uStack48;\n                piStack64 = arg1_00;\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00434160();\n                fcn.00433ac0();\n                fcn.004338e0();\n                fcn.004320e0();\n            }\n            fcn.004320e0();\n        }\n        piVar4 = fcn.0045c5a0(arg1_00);\n        do {\n            piStack64 = piVar4;\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.00433a80();\n            fcn.00434160();\n            fcn.00433ac0();\n            fcn.004338e0();\n            piStack112 = piStack112 + 1;\ncode_r0x0044a586:\n            arg1_00 = piStack112;\n            if (piStack96 < piStack112) goto code_r0x0044a61b;\n            piVar7 = in_RAX[0xe];\n            piVar3 = in_RAX[0x11];\n            if (piVar3 <= piStack112) goto code_r0x0044a610;\n            arg1_00 = piStack112 * 0x10;\n            piVar3 = piStack112;\n            if (piVar7 <= *(arg1_00 + 2 + in_RAX[0x10])) goto code_r0x0044a605;\n            piVar4 = fcn.0044ae60();\n            arg1_00 = in_RAX[0x11];\n            piVar7 = in_RAX[0x10];\n        } while (piStack112 < arg1_00);\n        fcn.0045c5a0(arg1_00);\ncode_r0x0044a605:\n        fcn.0045c5c0(piVar7);\ncode_r0x0044a610:\n        fcn.0045c5a0(piVar3);\ncode_r0x0044a61b:\n        fcn.004320e0();\n        goto code_r0x0044a62c;\n    }\ncode_r0x0044a65d:\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433fc0();\n    fcn.00433fc0();\n    fcn.00433fc0();\n    fcn.00433fc0();\n    fcn.004338e0();\n    piVar4 = in_RAX[0x31];\n    if (in_RAX[0x32] != NULL) goto code_r0x0044a70f;\n    do {\n        fcn.00433860();\n        fcn.00433ac0();\n        fcn.004338e0();\n        piVar4 = fcn.004320e0();\ncode_r0x0044a70f:\n        piStack64 = piVar4;\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00434160();\n        fcn.004338e0();\n    } while( true );\ncode_r0x0044a16b:\n    if (ppiVar1[piVar4 * 2] < ppiVar1[piVar7 * 2]) goto code_r0x0044a17b;\n    goto code_r0x0044a14a;\ncode_r0x0044a17b:\n    arg1_00 = in_RAX[0xe];\n    if (ppiVar1[piVar7 * 2 + 1] < arg1_00) {\n        if (ppiVar1[piVar4 * 2 + 1] < arg1_00) {\n            if (piVar4 < iVar5) {\n                iStack56 = ppiVar1[piVar7 * 2 + 1] + in_RAX[0xd];\n                fcn.0044ae60(ppiVar1[piVar4 * 2 + 1] + in_RAX[0xd]);\n            }\n            piVar3 = fcn.0044ae60();\n            arg1_00 = in_RAX[0x11];\n            if (piVar7 < arg1_00) {\n                if (piVar4 < arg1_00) {\n                    piStack64 = piVar3;\n                    fcn.00433860();\n                    fcn.00434160();\n                    fcn.00433fc0();\n                    fcn.00434160();\n                    fcn.00434160();\n                    fcn.00433fc0();\n                    fcn.00434160();\n                    fcn.004338e0();\n                    if (in_RAX[0x32] != NULL) {\n                        piStack64 = in_RAX[0x31];\n                        fcn.00433860();\n                        fcn.00434160();\n                        fcn.00434160();\n                        fcn.004338e0();\n                    }\n                    fcn.00433860();\n                    fcn.00433ac0();\n                    fcn.004338e0();\n                    piStack112 = NULL;\n                    piStack96 = piVar7;\n                    goto code_r0x0044a586;\n                }\ncode_r0x0044a62c:\n                fcn.0045c5a0(arg1_00);\n            }\n            fcn.0045c5a0(arg1_00);\n        }\n        fcn.0045c5c0(arg1_00);\n    }\n    fcn.0045c5c0(arg1_00);\ncode_r0x0044a655:\n    fcn.0045c5a0(arg1_00);\n    goto code_r0x0044a65d;\n}\n",
        "token_count": 2107
    },
    "0044a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044ab9a)\n// WARNING: Removing unreachable block (ram,0x0044aba7)\n// WARNING: Removing unreachable block (ram,0x0044acdd)\n// WARNING: Removing unreachable block (ram,0x0044abb7)\n// WARNING: Removing unreachable block (ram,0x0044aca9)\n// WARNING: Removing unreachable block (ram,0x0044ad70)\n// WARNING: Removing unreachable block (ram,0x0044ad9d)\n// WARNING: Removing unreachable block (ram,0x0044acf4)\n// WARNING: Removing unreachable block (ram,0x0044adae)\n\nuint fcn.0044a940(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t *in_RAX;\n    int32_t iVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_R8;\n    uint64_t **ppuVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    uint64_t **ppuVar11;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack100;\n    uint64_t uStack88;\n    uint64_t *apuStack24 [2];\n    \n    while( true ) {\n        ppuVar11 = apuStack24;\n        iVar5 = arg1;\n        if (*(unaff_R14 + 0x10) <= ppuVar11 && ppuVar11 != *(unaff_R14 + 0x10)) break;\n        fcn.00459ea0();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    arg1_00 = arg1;\n    if (unaff_RSI == 0) goto code_r0x0044a9aa;\n    uVar6 = unaff_RDI >> 3 & 1;\n    ppuVar8 = NULL;\n    do {\n        arg1_00 = arg1;\n        if (ppuVar8 < 8) {\n            iVar1 = unaff_RSI + uVar6 * 0x80;\n            iVar10 = ppuVar8 * 0x10;\n            ppuVar11 = ppuVar8;\n            if ((*(iVar1 + 8 + iVar10) == arg1) && (*(iVar1 + iVar10) == unaff_RDI)) {\n                return *(iVar1 + 0xc + iVar10);\n            }\n        }\n        else {\ncode_r0x0044a9aa:\n            if (in_RAX == NULL) {\n                if ((in_R8 == '\\0') || (*0x78960c != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.00433860();\n                fcn.00434160();\n                fcn.00433fc0();\n                fcn.00433ac0();\n                fcn.004338e0();\n                fcn.004320e0();\ncode_r0x0044aaa1:\n                do {\n                    fcn.0044b6a0(arg1_00);\n                } while (uStack88 <= uStackX32);\n                if (in_stack_00000028 != 0) {\n                    iVar1 = *(unaff_R14 + 0x30);\n                    uVar7 = *(iVar1 + 0xf0);\n                    uVar2 = *(iVar1 + 0xf4);\n                    *(iVar1 + 0xf0) = uVar2;\n                    uVar7 = uVar7 ^ uVar7 << 0x11;\n                    uVar7 = uVar2 >> 0x10 ^ uVar7 >> 7 ^ uVar2 ^ uVar7;\n                    *(iVar1 + 0xf4) = uVar7;\n                    iVar9 = (uStackX32 >> 3 & 1) * 0x80;\n                    iVar1 = in_stack_00000028 + iVar9;\n                    iVar10 = (uVar7 + uVar2 & 7) * 0x10;\n                    uVar3 = *(in_stack_00000028 + 8 + iVar9);\n                    uVar4 = *(in_stack_00000028 + 0xc + iVar9);\n                    *(iVar1 + iVar10) = *(in_stack_00000028 + iVar9);\n                    *(iVar1 + 8 + iVar10) = uVar3;\n                    *(iVar1 + 0xc + iVar10) = uVar4;\n                    *(in_stack_00000028 + iVar9) = uStackX32;\n                    *(in_stack_00000028 + 8 + iVar9) = iStackX24;\n                    *(in_stack_00000028 + 0xc + iVar9) = uStack100;\n                }\n                return uStack100;\n            }\n            arg1 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x60);\n            iVar5 = arg1_00;\n            if ((arg1_00 & 0xffffffff) <= arg1) {\n                uStack88 = *in_RAX;\n                uStack100 = 0xffffffff;\n                arg1_00 = uVar6 - (arg1_00 & 0xffffffff);\n                iStackX24 = iVar5;\n                uStackX32 = unaff_RDI;\n                in_stack_00000028 = unaff_RSI;\n                apuStack24[0] = in_RAX;\n                goto code_r0x0044aaa1;\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        ppuVar8 = ppuVar11 + 1;\n    } while( true );\n}\n",
        "token_count": 1383
    },
    "0044b840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044b840(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44b8ce;\n                        cVar8 = fcn.0044bb20(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x789810 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44b945;\n                                fcn.0045c220(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & (*(piVar15 + 0x15) + piVar14[4]) - 1;\n                            *(*0x20 + -0x38) = 0;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar9 = piVar14[3];\n                            *(*0x20 + -0x30) = iVar9;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar10 = *piVar15;\n                            *(*0x20 + -0x18) = iVar10;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((iVar9 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg4 == *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3)) {\n                                        *(iVar1 + -8 + iVar2 * 0x28) = iVar3 + iVar10;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                iVar10 = piVar14[1];\n                                iVar1 = *piVar14;\n                                uVar11 = piVar14[2];\n                                iVar9 = iVar1;\n                                if (uVar11 < iVar10 + 1U) {\n                                    *(*0x20 + -0x90) = 0x44ba27;\n                                    iVar9 = fcn.00445220(iVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = iVar10;\n                                    if (*0x789810 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44ba47;\n                                        iVar9 = fcn.0045c100(iVar10, uVar11, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                    iVar10 = iVar1;\n                                }\n                                piVar14[1] = iVar10 + 1;\n                                *(iVar9 + iVar10 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + iVar10 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + 8) = *(*0x20 + -0x30);\n                                *(iVar9 + 0xc) = uVar4;\n                                *(iVar9 + 0x10) = uVar5;\n                                *(iVar9 + 0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar9 + 0x1c) = uVar4;\n                                *(iVar9 + 0x20) = uVar5;\n                                *(iVar9 + 0x24) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar11 = *(piVar15 + 0x15);\n                            uVar11 = -uVar11 & (piVar14[5] + uVar11) - 1;\n                            piVar14[5] = uVar11;\n                            piVar14[5] = *piVar15 + uVar11;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44badc;\n                fcn.00431940();\n            }\n            unaff_RBX = 0x6b5738;\n            *(*0x20 + -0x90) = 0x44baef;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x44baff;\n        fcn.00459ea0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1905
    },
    "0044bb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044bb20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    bool bVar16;\n    bool bVar17;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar11 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar6 = uVar11;\n            uVar10 = uVar11;\n            if (uVar10 < 0xc) {\n                if (uVar10 < 7) {\n                    if (4 < uVar10 - 1) {\n                        if (uVar10 == 6) {\ncode_r0x0044bd19:\n                            uVar12 = *unaff_RBX;\n                            iVar13 = in_RAX[6];\n                            bVar17 = SBORROW8(*0x71d280, iVar13);\n                            iVar7 = *0x71d280 - iVar13;\n                            bVar16 = *0x71d280 == iVar13;\n                            if (iVar13 < *0x71d280) {\n                                *(*0x20 + -0x58) = 0;\n                                *(*0x20 + -0x50) = in_XMM15;\n                                *(*0x20 + -0x40) = in_XMM15;\n                                *(*0x20 + -0x58) = 2;\n                                *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                                *(*0x20 + -0x40) = in_RAX[6];\n                                *(*0x20 + -0x38) = uVar12;\n                                iVar8 = in_RAX[1];\n                                iVar1 = *in_RAX;\n                                iVar7 = iVar1;\n                                iVar15 = *0x71d280;\n                                if (in_RAX[2] < iVar8 + 1U) {\n                                    *(*0x20 + -0x60) = iVar13;\n                                    *(*0x20 + -0x68) = *0x71d280;\n                                    *(*0x20 + -0xb8) = 0x44bd9b;\n                                    iVar7 = fcn.00445220(iVar8);\n                                    in_RAX = *(*0x20 + 8);\n                                    in_RAX[2] = iVar8;\n                                    if (*0x789810 == 0) {\n                                        *in_RAX = iVar7;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x44bdba;\n                                        iVar7 = fcn.0045c100(iVar8, uVar12, iVar13, iVar15);\n                                    }\n                                    iVar13 = *(*0x20 + -0x60);\n                                    iVar15 = *(*0x20 + -0x68);\n                                    iVar8 = iVar1;\n                                }\n                                in_RAX[1] = iVar8 + 1;\n                                *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                                iVar7 = iVar7 + iVar8 * 0x28;\n                                uVar2 = *(*0x20 + -0x4c);\n                                uVar3 = *(*0x20 + -0x48);\n                                uVar4 = *(*0x20 + -0x44);\n                                *(iVar7 + 8) = *(*0x20 + -0x50);\n                                *(iVar7 + 0xc) = uVar2;\n                                *(iVar7 + 0x10) = uVar3;\n                                *(iVar7 + 0x14) = uVar4;\n                                uVar2 = *(*0x20 + -0x3c);\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x34);\n                                *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                                *(iVar7 + 0x1c) = uVar2;\n                                *(iVar7 + 0x20) = uVar3;\n                                *(iVar7 + 0x24) = uVar4;\n                                in_RAX[6] = in_RAX[6] + 1;\n                                bVar17 = SBORROW8(iVar15, iVar13);\n                                iVar7 = iVar15 - iVar13;\n                                bVar16 = iVar15 == iVar13;\n                            }\n                            return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n                        }\ncode_r0x0044be15:\n                        *(*0x20 + -0xb8) = 0x44be1d;\n                        fcn.00453cc0();\n                        *(*0x20 + -0xb8) = 0x44be45;\n                        fcn.00448c40(0x16, uVar6, 0x4b51b9, 0x37);\n                        *(*0x20 + -0xb8) = 0x44be4a;\n                        fcn.00409780();\n                        *(*0x20 + -0xb8) = 0x44be59;\n                        fcn.00431940();\n                        goto code_r0x0044be59;\n                    }\n                }\n                else if (10 < uVar10) {\n                    if (uVar10 == 0xb) goto code_r0x0044bd19;\n                    goto code_r0x0044be15;\n                }\ncode_r0x0044bbf7:\n                uVar12 = *unaff_RBX;\n                iVar13 = in_RAX[6];\n                bVar17 = SBORROW8(*0x71d280, iVar13);\n                iVar7 = *0x71d280 - iVar13;\n                bVar16 = *0x71d280 == iVar13;\n                if (iVar13 < *0x71d280) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar12;\n                    iVar8 = in_RAX[1];\n                    iVar1 = *in_RAX;\n                    iVar7 = iVar1;\n                    iVar15 = *0x71d280;\n                    if (in_RAX[2] < iVar8 + 1U) {\n                        *(*0x20 + -0x60) = iVar13;\n                        *(*0x20 + -0x68) = *0x71d280;\n                        *(*0x20 + -0xb8) = 0x44bc8b;\n                        iVar7 = fcn.00445220(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x789810 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44bcac;\n                            iVar7 = fcn.0045c100(iVar8, uVar12, iVar13, iVar15);\n                        }\n                        iVar13 = *(*0x20 + -0x60);\n                        iVar15 = *(*0x20 + -0x68);\n                        iVar8 = iVar1;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar2;\n                    *(iVar7 + 0x10) = uVar3;\n                    *(iVar7 + 0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar2;\n                    *(iVar7 + 0x20) = uVar3;\n                    *(iVar7 + 0x24) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar17 = SBORROW8(iVar15, iVar13);\n                    iVar7 = iVar15 - iVar13;\n                    bVar16 = iVar15 == iVar13;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n            }\n            if (uVar10 < 0x12) {\n                if (uVar10 != 0xc) {\n                    if ((uVar10 == 0x11) && (unaff_RBX[8] == 1)) {\n                        *(*0x20 + -0xb8) = 0x44bbbd;\n                        uVar6 = fcn.0044bb20(arg1);\n                        return uVar6;\n                    }\n                    goto code_r0x0044be15;\n                }\n                goto code_r0x0044bbf7;\n            }\n            if (uVar10 == 0x16) goto code_r0x0044bbf7;\n            if (uVar10 != 0x19) {\n                if (uVar10 != 0x1a) goto code_r0x0044be15;\n                goto code_r0x0044bbf7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar13 = unaff_RBX[8];\n            *(*0x20 + -0x60) = iVar13;\n            uVar6 = 0;\n            uVar9 = arg1;\n            while( true ) {\n                if (iVar13 <= uVar6) {\n                    return 1;\n                }\n                iVar13 = unaff_RBX[7];\n                arg1 = unaff_RBX[8];\n                if (arg1 <= uVar6) break;\n                *(*0x20 + -0x70) = uVar6;\n                uVar6 = *(iVar13 + 0x10 + uVar6 * 0x18);\n                *(*0x20 + -0xb8) = 0x44beb3;\n                cVar5 = fcn.0044bb20((uVar6 >> 1) + uVar9);\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\ncode_r0x0044be59:\n                uVar6 = *(*0x20 + -0x70) + 1;\n                iVar13 = *(*0x20 + -0x60);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar9 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0xb8) = 0x44bee9;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x44befe;\n        fcn.00459ea0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2914
    },
    "0044c1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044c1e0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg3_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x7895fc == 0) {\n                *(*0x20 + -0x58) = 0x44c210;\n                fcn.0042aec0();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x26e8);\n                arg3_00 = *(in_RAX + 0x26e0);\n                arg4 = *(in_RAX + 0x26f0);\n                if (arg4 < iVar4 + 1U) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44c26c;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00445220(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x26f0) = iVar4;\n                    if (*0x789810 == 0) {\n                        *(in_RAX + 0x26e0) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44c297;\n                        iVar3 = fcn.0045c100(iVar4, in_RAX, arg3, arg4);\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    param_1 = iVar4;\n                    iVar4 = arg3_00;\n                    arg3_00 = iVar3;\n                }\n                *(in_RAX + 0x26e8) = iVar4 + 1;\n                if (*0x789810 == 0) {\n                    *(arg3_00 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44c2cd;\n                    fcn.0045c240(param_1, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x26f0);\n                *(*0x20 + -0x58) = 0x44c2ed;\n                fcn.0044df60(arg1, in_RAX, arg3_00, arg4);\n                iVar4 = *(*0x20 + 8);\n                param_1 = *(iVar4 + 0x26e8);\n                if (param_1 != 0) {\n                    if (**(iVar4 + 0x26e0) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1668) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x26f8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44c338;\n                fcn.0045c5a0(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44c349;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44c359;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1102
    },
    "0044c380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044c380(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    do {\n        while( true ) {\n            while (uVar2 = *(in_RAX + 8),  5 < uVar2) {\n                if (uVar2 < 8) {\n                    if (uVar2 == 6) {\n                        fcn.00459d60();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    }\n                    else {\n                        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                        *piVar1 = *piVar1 + 1;\n                        iVar4 = *(unaff_R14 + 0x30);\n                        LOCK();\n                        if (uVar2 == *(in_RAX + 8)) {\n                            *(in_RAX + 8) = 6;\n                            iVar5 = *in_RAX;\n                            LOCK();\n                            if (*(in_RAX + 8) == 6) {\n                                *(in_RAX + 8) = 3;\n                            }\n                            else {\n                                fcn.0044e2e0();\n                            }\n                            iVar3 = *(iVar4 + 0xd8);\n                            *(iVar4 + 0xd8) = iVar3 + -1;\n                            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            LOCK();\n                            *(iVar5 + 0x26fc) = *(iVar5 + 0x26fc) + 1;\n                            return 1;\n                        }\n                        iVar3 = *(iVar4 + 0xd8);\n                        *(iVar4 + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 8) goto code_r0x0044c470;\n                    if (uVar2 == 9) goto code_r0x0044c4d8;\n                    fcn.0044e2e0();\n                }\n            }\n            if (1 < uVar2) break;\n            if (uVar2 == 0) {\n                return 0;\n            }\ncode_r0x0044c470:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar4 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar5 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044e2e0();\n                }\n                iVar3 = *(iVar4 + 0xd8);\n                *(iVar4 + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar5 + 0x26fc) = *(iVar5 + 0x26fc) + 1;\n                return 1;\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        if (uVar2 != 2) {\n            return 0;\n        }\ncode_r0x0044c4d8:\n        fcn.00459d60();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    } while( true );\n}\n",
        "token_count": 1041
    },
    "0044c640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c640(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1_00 = *(in_RAX + 0x26e8);\n            if (unaff_RBX < arg1_00) {\n                piVar1 = *(*(in_RAX + 0x26e0) + unaff_RBX * 8);\n                if (in_RAX == *piVar1) {\n                    *piVar1 = 0;\n                    arg1_00 = *(in_RAX + 0x26e8);\n                    arg3 = arg1_00 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044c6d6:\n                        arg4 = *(in_RAX + 0x26e8);\n                        if (arg3 < arg4) {\n                            if (*0x789810 == 0) {\n                                *(*(in_RAX + 0x26e0) + -8 + arg1_00 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x30) = 0x44c710;\n                                in_RAX = fcn.0045c260(arg1_00, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x26f0);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x26e8) = arg3;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar2 = *(in_RAX + 0x26e0);\n                                    arg1 = *(in_RAX + 0x26f0);\n                                    *(*0x20 + -0x30) = 0x44c75b;\n                                    fcn.0044df60(arg1, uVar2, arg3, arg4);\n                                    uVar2 = *(*(*0x20 + 8) + 0x26f0);\n                                    *(*0x20 + -0x30) = 0x44c77f;\n                                    fcn.0044e0c0(uVar2);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x26e8) == 0) {\n                                        *(in_RAX + 0x1668) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n                                    }\n                                }\n                                LOCK();\n                                *(in_RAX + 0x26f8) = *(in_RAX + 0x26f8) + -1;\n                                return;\n                            }\n                            *(*0x20 + -0x30) = 0x44c7da;\n                            fcn.0045c620(arg3, arg2);\n                        }\n                        arg1_00 = arg4;\n                        *(*0x20 + -0x30) = 0x44c7e5;\n                        fcn.0045c5a0(arg1_00);\ncode_r0x0044c7e5:\n                        *(*0x20 + -0x30) = 0x44c7ed;\n                        fcn.0045c5a0(arg1_00);\n                    }\n                    else if (arg3 < arg1_00) {\n                        if (unaff_RBX < arg1_00) {\n                            if (*0x789810 == 0) {\n                                *(*(in_RAX + 0x26e0) + unaff_RBX * 8) = *(*(in_RAX + 0x26e0) + -8 + arg1_00 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x30) = 0x44c6d6;\n                                in_RAX = fcn.0045c2a0(arg1_00, arg2, arg3);\n                            }\n                            goto code_r0x0044c6d6;\n                        }\n                        goto code_r0x0044c7e5;\n                    }\n                    *(*0x20 + -0x30) = 0x44c7f5;\n                    fcn.0045c5a0(arg1_00);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x30) = 0x44c806;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x30) = 0x44c80e;\n            in_RAX = fcn.0045c5a0(arg1_00);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44c81e;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1350
    },
    "0044c840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c840(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    uint64_t arg4;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg4 = *(in_RAX + 0x26e8);\n            if (arg4 != 0) {\n                if (in_RAX == ***(in_RAX + 0x26e0)) {\n                    ***(in_RAX + 0x26e0) = 0;\n                    iVar1 = *(in_RAX + 0x26e8);\n                    arg1 = iVar1 - 1;\n                    if (0 < arg1) {\n                        uVar2 = (*(in_RAX + 0x26e0))[iVar1 + -1];\n                        if (*0x789810 == 0) {\n                            **(in_RAX + 0x26e0) = uVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44c8bf;\n                            in_RAX = fcn.0045c280(arg1, arg2, uVar2, in_R9);\n                        }\n                    }\n                    arg3 = *(in_RAX + 0x26e0);\n                    arg4 = *(in_RAX + 0x26e8);\n                    if (arg1 < arg4) {\n                        if (*0x789810 == 0) {\n                            *(arg3 + -8 + iVar1 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44c8f9;\n                            in_RAX = fcn.0045c260(arg1, arg2, arg3, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x26f0);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x26e8) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                uVar2 = *(in_RAX + 0x26f0);\n                                *(*0x20 + -0x30) = 0x44c934;\n                                fcn.0044e0c0(uVar2);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x26e8) == 0) {\n                                *(in_RAX + 0x1668) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n                            }\n                            LOCK();\n                            *(in_RAX + 0x26f8) = *(in_RAX + 0x26f8) + -1;\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44c985;\n                        fcn.0045c620(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44c990;\n                    in_R9 = arg4;\n                    fcn.0045c5a0(arg4);\n                }\n                *(*0x20 + -0x30) = 0x44c9a5;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x30) = 0x44c9ac;\n            in_RAX = fcn.0045c5a0(arg4);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44c9b7;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 985
    },
    "0044d840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044d840(int64_t arg1)\n\n{\n    code **arg2;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    uVar1 = *(unaff_RBX + 0x30);\n    iVar2 = *(unaff_RBX + 0x10);\n    if (iVar2 < 1) {\n        fcn.0044c840(arg1, arg2);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044e2e0();\n        }\n    }\n    else {\n        iVar2 = iVar2 * ((arg1 - *(unaff_RBX + 8)) / iVar2 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar2;\n        if (iVar2 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044e0c0(*(in_RAX + 0x26f0));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044e2e0();\n        }\n        if (*(in_RAX + 0x26e8) == 0) {\n            *(in_RAX + 0x1668) = 0;\n        }\n        else {\n            *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n        }\n    }\n    fcn.0040a0a0();\n    (**arg2)(uVar1);\n    fcn.00409e80();\n    return;\n}\n",
        "token_count": 506
    },
    "0044df60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044df60(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44df91;\n                fcn.0044e2e0();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44dfc8;\n                    fcn.0044e2e0();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044e071;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044e066;\n                    if (*0x789810 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44e026;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045c2a0(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x789810 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44e051;\n                            fcn.0045c260(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44e066;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e066:\n                *(*0x20 + -0x28) = 0x44e071;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e071:\n                *(*0x20 + -0x28) = 0x44e07c;\n                fcn.0045c5a0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44e087;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44e0a5;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1277
    },
    "0044e0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e0c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44e0f1;\n                fcn.0044e2e0();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44e128;\n                    fcn.0044e2e0();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044e287;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044e27c;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044e271;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x0044e266;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0044e25b;\n                    if (unaff_RBX <= arg3) goto code_r0x0044e250;\n                    if (*0x789810 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44e210;\n                        in_RAX = fcn.0045c2a0(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x789810 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44e23b;\n                            fcn.0045c260(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44e250;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e250:\n                *(*0x20 + -0x28) = 0x44e25b;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e25b:\n                *(*0x20 + -0x28) = 0x44e266;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e266:\n                *(*0x20 + -0x28) = 0x44e271;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e271:\n                *(*0x20 + -0x28) = 0x44e27c;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e27c:\n                *(*0x20 + -0x28) = 0x44e287;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0044e287:\n                *(*0x20 + -0x28) = 0x44e292;\n                fcn.0045c5a0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44e29d;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44e2b7;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1851
    },
    "0044e380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044e380(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((*0x73b808 != 0) && ((*0x73b7f8 != 0 || (*0x73b7b1 != '\\0')))) {\n        fcn.00409e80();\n        iVar1 = *0x73b808;\n        if ((*0x73b808 != 0) && ((*0x73b7f8 != 0 || (*0x73b7b1 != '\\0')))) {\n            *0x73b808 = 0;\n            fcn.0040a0a0();\n            return iVar1;\n        }\n        fcn.0040a0a0();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 229
    },
    "0044e440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e440(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    puVar1 = *(in_RAX + 0x1630);\n    *(in_RAX + 0x1630) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.00409e80();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x73b7f8 != NULL) {\n        **0x73b800 = puVar1;\n        puVar2 = *0x73b7f8;\n    }\n    *0x73b7f8 = puVar2;\n    *0x73b800 = puVar1;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 248
    },
    "0044e500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e500(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.0044eba0();\n    if ((*0x73b7b0 == '\\0') && (*(iVar1 + 0x270) == '\\0')) {\n        fcn.0044ec20();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044e600(unaff_RBX & 0xffffffff, noname_1, noname_1, arg1);\n    fcn.0044ec20();\n    return;\n}\n",
        "token_count": 249
    },
    "0044ea80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044ea80(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x10) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x40) = 0x44eaf6;\n                arg1 = fcn.00452c00(arg1);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x44ead9;\n                arg1 = fcn.00452d80(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x40) = 0x44eb36;\n                uVar1 = fcn.0044ef20(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x40) = 0x44eb4a;\n            in_RAX = fcn.0045c620(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44eb69;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 809
    },
    "0044ec20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ec20(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_EAX == -1) {\n        fcn.0040a0a0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044eca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044eca0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint unaff_EBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x73b7a8 == 0) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = *0x73b7a8 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x73b7a8;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar4;\n            if (uVar4 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44ecf9;\n                fcn.00409e80();\n                in_RAX = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x73b7f8;\n            puVar2 = *0x73b800;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x73b7f8 != NULL)) {\n                **0x73b800 = in_RAX;\n                puVar3 = *0x73b7f8;\n                puVar2 = in_RAX;\n            }\n            *0x73b800 = puVar2;\n            *0x73b7f8 = puVar3;\n            if (*0x73b7f0 == NULL) {\n                *(*0x20 + -0x38) = 0x44ed68;\n                puVar3 = fcn.00414140();\n                if (puVar3 != NULL) goto code_r0x0044ed71;\n            }\n            else {\n                puVar3 = *0x73b7f0;\n                *0x73b7f0 = **0x73b7f0;\ncode_r0x0044ed71:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44ed8d;\n                fcn.0045bfa0(uVar4, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar4 = *(*0x20 + -0x30) >> 6;\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 8) = uVar4;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar5 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar5;\n                    for (uVar6 = *(*0x20 + 0x10); 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                        if (0xfbe7 < uVar5) goto code_r0x0044eed2;\n                        *(iVar1 + 0x418 + uVar5) = uVar6 | 0x80;\n                        uVar5 = uVar5 + 1;\n                    }\n                    if (uVar5 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar5) = uVar6;\n                        uVar5 = uVar5 + 1;\n                        *(iVar1 + 0x10) = uVar5;\n                        for (; 0x7f < uVar4; uVar4 = uVar4 >> 7) {\n                            if (0xfbe7 < uVar5) goto code_r0x0044eeb5;\n                            *(iVar1 + 0x418 + uVar5) = uVar4 | 0x80;\n                            uVar5 = uVar5 + 1;\n                        }\n                        if (uVar5 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar5) = uVar4;\n                            *(iVar1 + 0x10) = uVar5 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44ee99;\n                                fcn.0040a0a0();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44eeb5;\n                        fcn.0045c5a0(0xfbe8);\ncode_r0x0044eeb5:\n                        *(*0x20 + -0x38) = 0x44eec5;\n                        fcn.0045c5a0(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44eed2;\n                    fcn.0045c5a0(0xfbe8);\ncode_r0x0044eed2:\n                    *(*0x20 + -0x38) = 0x44eedf;\n                    fcn.0045c5a0(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44eeec;\n                fcn.0045c5a0(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44eefd;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44ef0c;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1581
    },
    "0044f200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044f200(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x44f268;\n                    piVar1 = fcn.00414140();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0044f28c;\n                    }\n                    goto code_r0x0044f2c5;\n                }\n            }\n            else {\ncode_r0x0044f28c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x44f2c5;\n                fcn.0045c5c0(0xfff8);\ncode_r0x0044f2c5:\n                *(*0x20 + -0x28) = 0x44f2d6;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x44f2e7;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44f2f7;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 688
    },
    "0044f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f380(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044e500(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044f440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f440(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x1638) == '\\0') {\n                *(iVar1 + 0x1638) = 1;\n                *(iVar1 + 0x1640) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44f494;\n            fcn.004320e0();\n        }\n        *(puVar2 + -8) = 0x44f49a;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "0044f4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f4a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x1638) != '\\0') {\n        if (*(iVar1 + 0x1640) == 0) {\n            fcn.0044e500(0);\n        }\n        *(iVar1 + 0x1640) = *(iVar1 + 0x1640) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0044f540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f540(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x1638) != '\\0') {\n                if (*(iVar1 + 0x1640) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x1640);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x1648);\n                    *(*0x20 + -0x50) = 0x44f5b7;\n                    fcn.0044e500(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x1638) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x44f5de;\n            fcn.004320e0();\n        }\n        *(puVar2 + -8) = 0x44f5e5;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 429
    },
    "0044f6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f6e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1688) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x44f7dc;\n                    fcn.0044e500(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x44f81f;\n                fcn.0044e500(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1688) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1688) * 8 + 0x74b848);\n                *(*0x20 + -0x68) = 0x44f798;\n                fcn.0044e500(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44f833;\n            fcn.0045c5a0(4);\n        }\n        *(puVar3 + -8) = 0x44f839;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 693
    },
    "0044fb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044fb20(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044e500(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044fc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044fc80(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    code **unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t *piVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044fc80:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0xa8;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x60) = 0;\n        *(*0x20 + -0xb8) = *0x20 + -8;\n        *(*0x20 + -0xb0) = 0x44fcd4;\n        iVar5 = fcn.0045c850();\n        unaff_RBP = *(*0x20 + -0xb8);\n        iVar5 = *(iVar5 + 0x28);\n        do {\n            if (iVar5 == 0) {\n                return;\n            }\n            *(*0x20 + -0x70) = iVar5;\n            puVar2 = *(iVar5 + 0x18);\n            if (puVar2 == NULL) {\n                *(*0x20 + -0x50) = 0;\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                *(*0x20 + -0x10) = 0;\n            }\n            else {\n                *(*0x20 + -0x78) = puVar2;\n                *(*0x20 + -0x50) = *puVar2;\n                *(*0x20 + -0xb0) = 0x44fd46;\n                iVar5 = fcn.0044a780();\n                if (iVar5 == 0) goto code_r0x0044fe18;\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x58) = unaff_RBX;\n                if (**(*0x20 + -0x70) == 0) {\n                    piVar8 = NULL;\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x70) + 0x12;\n                }\n                *(*0x20 + -0x20) = piVar8;\n                iVar1 = *(iVar5 + 0xc);\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x10) = 0;\n                if (iVar1 == -0x80000000) {\n                    *(*0x20 + -0xb0) = 0x44fdb4;\n                    uVar6 = fcn.00451ca0(unaff_RBX);\n                    *(*0x20 + -0x18) = uVar6;\n                    *(*0x20 + -0x10) = iVar5;\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            *(*0x20 + -0x48) = *(*0x20 + -0x50);\n            pcVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = 0x44fdf0;\n            cVar4 = (*pcVar3)();\n            if (cVar4 == '\\0') {\n                return;\n            }\n            iVar5 = *(*(*0x20 + -0x70) + 0x28);\n            arg1 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n        } while( true );\n    }\n    goto code_r0x0044fe66;\ncode_r0x0044fe18:\n    *(*0x20 + -0x80) = *(*0x20 + -0x50);\n    *(*0x20 + -0xb0) = 0x44fe27;\n    fcn.00433860();\n    *(*0x20 + -0xb0) = 0x44fe38;\n    fcn.00434160();\n    *(*0x20 + -0xb0) = 0x44fe45;\n    fcn.00433fc0();\n    *(*0x20 + -0xb0) = 0x44fe4a;\n    fcn.00433ac0();\n    *(*0x20 + -0xb0) = 0x44fe4f;\n    fcn.004338e0();\n    unaff_RBX = 0xa;\n    *(*0x20 + -0xb0) = 0x44fe65;\n    in_RAX = fcn.004320e0();\ncode_r0x0044fe66:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + -8) = 0x44fe7a;\n    fcn.00459ea0();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    *0x20 = puVar7;\n    goto code_r0x0044fc80;\n}\n",
        "token_count": 1295
    },
    "00451900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451900(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x2b) < 6) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = in_RAX + *(in_RAX + 0x20) * 4 + 0x2c;\n                if ((iVar4 >> 2 & 1) != 0) {\n                    if ((in_RAX >> 2 & 1) != 0) {\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x30) = iVar4;\n                        *(*0x20 + 0x18) = arg1;\n                        *(*0x20 + -0x60) = 0x451965;\n                        fcn.00433860();\n                        unaff_RBX = 0x19;\n                        *(*0x20 + -0x60) = 0x451976;\n                        fcn.00434160();\n                        *(*0x20 + -0x60) = 0x451985;\n                        fcn.004340e0();\n                        *(*0x20 + -0x60) = 0x45198a;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x60) = 0x45198f;\n                        fcn.004338e0();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    iVar4 = iVar4 + 4;\n                }\n                iVar4 = *(iVar4 + 0x28);\n            }\n            if (iVar4 == 0) {\n                return;\n            }\n            *(*0x20 + -0x28) = iVar4;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x18) = 0x451c20;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x42) = 1;\n            uVar2 = 0;\n            while (uVar2 < 0xab) {\n                uVar1 = *(iVar4 + uVar2);\n                uVar5 = uVar2 + 1;\n                *(*0x20 + -0x40) = uVar5;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x60) = 0x451a1d;\n                            fcn.00433860();\n                            *(*0x20 + -0x60) = 0x451a2e;\n                            fcn.00434160();\n                            *(*0x20 + -0x60) = 0x451a33;\n                            fcn.004338e0();\n                        }\n                        *(*0x20 + -0x60) = 0x451a38;\n                        fcn.00433860();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x60) = 0x451a49;\n                        fcn.00434160();\n                        *(*0x20 + -0x60) = 0x451a4e;\n                        fcn.004338e0();\n                        uVar2 = *(*0x20 + -0x40);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x60) = 0x451a77;\n                            fcn.00433860();\n                            *(*0x20 + -0x60) = 0x451a88;\n                            fcn.00434160();\n                            *(*0x20 + -0x60) = 0x451a8d;\n                            fcn.004338e0();\n                        }\n                        *(*0x20 + -0x60) = 0x451a92;\n                        fcn.00433860();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x60) = 0x451aa5;\n                        fcn.00434160();\n                        *(*0x20 + -0x60) = 0x451aaa;\n                        fcn.004338e0();\n                        uVar2 = *(*0x20 + -0x40);\n                    }\n                    else {\ncode_r0x00451b2a:\n                        *(*0x20 + -0x38) = uVar2;\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x41) = uVar1;\n                            *(*0x20 + -0x60) = 0x451b45;\n                            fcn.00433860();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x60) = 0x451b56;\n                            fcn.00434160();\n                            *(*0x20 + -0x60) = 0x451b5b;\n                            fcn.004338e0();\n                            uVar2 = *(*0x20 + -0x38);\n                            iVar4 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x40);\n                        }\n                        if (0xaa < uVar5) {\n                            *(*0x20 + -0x60) = 0x451bdc;\n                            fcn.0045c5a0(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar2 + 1 + iVar4);\n                        *(*0x20 + -0x60) = 0x451b8b;\n                        (**(*0x20 + -0x18))(*(*0x20 + -0x18), *0x20 + -0x18);\n                        uVar2 = *(*0x20 + -0x38) + 2;\n                    }\ncode_r0x00451bb6:\n                    *(*0x20 + -0x42) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x60) = 0x451b9b;\n                        fcn.00433860();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x60) = 0x451bac;\n                        fcn.00434160();\n                        *(*0x20 + -0x60) = 0x451bb1;\n                        fcn.004338e0();\n                        uVar2 = *(*0x20 + -0x40);\n                        goto code_r0x00451bb6;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x00451b2a;\n                    }\n                    if (*(*0x20 + -0x42) == '\\0') {\n                        *(*0x20 + -0x60) = 0x451ad3;\n                        fcn.00433860();\n                        *(*0x20 + -0x60) = 0x451ae5;\n                        fcn.00434160();\n                        *(*0x20 + -0x60) = 0x451aea;\n                        fcn.004338e0();\n                    }\n                    *(*0x20 + -0x60) = 0x451aef;\n                    fcn.00433860();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x60) = 0x451b05;\n                    fcn.00434160();\n                    *(*0x20 + -0x60) = 0x451b0a;\n                    fcn.004338e0();\n                    *(*0x20 + -0x42) = 1;\n                    uVar2 = *(*0x20 + -0x40);\n                }\n                iVar4 = *(*0x20 + -0x28);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x60) = 0x451be6;\n            in_RAX = fcn.0045c5a0(0xab);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x451bfb;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2143
    },
    "00452100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00452100(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044a780();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00452e20(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.004521a0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "00452760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00452760(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.004338e0();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044a780();\n        cVar1 = fcn.00452ee0(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.00452920(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    iVar2 = fcn.0044a780();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00452ee0();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.004521a0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 470
    },
    "00452e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00452e20(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((0 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00452ee0(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00452ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00452ee0(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    bool bVar4;\n    uint64_t noname_0;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        param_1 = param_1 & 0xff;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    arg2 = *0x71d188 >> 2;\n    if (uVar1 != 0) {\n        arg2 = uVar1;\n    }\n    if (1 < arg2) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x16') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x13')) && (unaff_SIL != '\\x0f')) {\n        return false;\n    }\n    noname_0 = param_1;\n    piVar3 = fcn.0044ae60();\n    if ((((unaff_RBX == 0xf) && (noname_0 = 0x2e656d69746e7572,  *piVar3 == 0x2e656d69746e7572)) &&\n        ((*(piVar3 + 1) == 0x61706f67 && ((*(piVar3 + 0xc) == 0x696e && (*(piVar3 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402a80(noname_0, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            cVar2 = '\\0';\n        }\n        else {\n            cVar2 = fcn.004025e0(8, unaff_RBX);\n        }\n        if (cVar2 == '\\0') {\n            bVar4 = true;\n        }\n        else if (((unaff_RBX < 9) || (*piVar3 != 0x2e656d69746e7572)) || (*(piVar3 + 1) < 0x41)) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *(piVar3 + 1) < 0x5b;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 663
    },
    "00453820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00453820(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong auStack64 [7];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x734cc0 != 0) {\n        auStack64[0] = 0;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00453960(auStack64);\n        }\n        auStack64[0] = 0;\n        fcn.00453b60();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00433ac0();\n        fcn.004338e0();\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00453960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00453960(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.00453b60();\n        if (arg1[3] == 0) {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.004338e0();\n        }\n        else {\n            fcn.00449b60();\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433ac0();\n            fcn.004338e0();\n        }\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n        if (arg1[1] != 0) {\n            fcn.00449b60();\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00433a80();\n            fcn.004338e0();\n        }\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00433ac0();\n        fcn.004338e0();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 403
    },
    "00453b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00453b60(void)\n\n{\n    code **ppcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((*0x78960c == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        ppcVar1 = 0x69e338;\n    }\n    else {\n        ppcVar1 = 0x69e2d8;\n    }\n    (**ppcVar1)(ppcVar1, ppcVar1);\n    return;\n}\n",
        "token_count": 171
    },
    "00453be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00453be0(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    code **ppcVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x734cc8 == 0) {\n                return;\n            }\n            if ((*0x78960c == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                ppcVar2 = 0x69e338;\n            }\n            else {\n                ppcVar2 = 0x69e2d8;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *ppcVar2;\n                *(*0x20 + -0x40) = 0x453c6a;\n                (*pcVar1)();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x453c85;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x453c9f;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 638
    },
    "00453cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00453cc0(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x453ce5;\n            fcn.00453ea0();\n            *(*0x20 + -0x20) = 0x453cea;\n            iVar1 = fcn.00454700(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1U);\n            }\n            *(*0x20 + -0x20) = 0x453d36;\n            in_RAX = fcn.0045c660(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x453d45;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00454400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00454400(ulong param_1, uint64_t param_2)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_EBX == 0xffffffff) {\n        return CONCAT71(*0x69e5d9, *0x69e5d8);\n    }\n    for (uVar4 = 0x722f80; uVar4 != 0; uVar4 = *(uVar4 + 0x210)) {\n        if ((*(uVar4 + 0x118) < in_RAX || *(uVar4 + 0x118) == in_RAX) &&\n           (in_RAX <= *(uVar4 + 0x120) && *(uVar4 + 0x120) != in_RAX)) goto code_r0x00454464;\n    }\n    uVar4 = 0;\ncode_r0x00454464:\n    if (uVar4 == 0) {\n        fcn.00409e80();\n        puVar2 = fcn.0040df80(unaff_EBX);\n        uVar5 = *puVar2;\n        uVar4 = uVar5;\n        fcn.0040a0a0();\n        if (uVar5 != 0) {\n            return uVar5;\n        }\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.004338e0();\n        for (iVar3 = 0x722f80; iVar3 != 0; iVar3 = *(iVar3 + 0x210)) {\n            uVar4 = *(iVar3 + 0x118);\n            param_2 = *(iVar3 + 0x120);\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.00433ac0();\n            fcn.004338e0();\n        }\n        fcn.004320e0();\n        goto code_r0x004545db;\n    }\n    param_2 = *(uVar4 + 0x128);\n    uVar5 = *(uVar4 + 0x130);\n    if (uVar5 < 2) {\n        param_2 = unaff_EBX + *(uVar4 + 0xb0);\n        goto code_r0x004545db;\n    }\n    iVar3 = 0;\n    do {\n        if (iVar3 < uVar5) {\n            uVar1 = *(param_2 + iVar3 * 0x18);\n            uVar6 = unaff_EBX;\n            if ((uVar1 <= uVar6) && (uVar6 < *(param_2 + 8 + iVar3 * 0x18) + uVar1)) {\n                param_2 = (*(param_2 + 0x10 + iVar3 * 0x18) + uVar6) - uVar1;\n                goto code_r0x004545db;\n            }\n        }\n        else {\n            param_2 = 0;\ncode_r0x004545db:\n            uVar5 = *(uVar4 + 0xb8);\n            if (param_2 <= uVar5) {\n                return param_2;\n            }\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.00434160();\n            fcn.00433fc0();\n            fcn.00433ac0();\n            fcn.004338e0();\n            unaff_EBX = 0x21;\n            iVar3 = fcn.004320e0();\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 981
    },
    "00454a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00454a20(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    uchar (*arg1) [16];\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t arg4;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x723190 == 0) {\n                return in_RAX;\n            }\n            arg1 = *0x20 + -0x1b8;\n            *arg1 = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x7230c8 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x454aaf;\n                fcn.0045c818();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x454acf;\n            uVar5 = fcn.0040cae0(arg1);\n            if (*0x734cf0 == NULL) {\n                piVar16 = NULL;\n                piVar7 = NULL;\n                piVar12 = NULL;\n            }\n            else {\n                piVar7 = **0x734cf0;\n                piVar16 = (*0x734cf0)[1];\n                piVar12 = (*0x734cf0)[2];\n            }\n            if (piVar16 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar19 = *piVar7;\n                iVar13 = (-(piVar12 + -1) >> 0x3f & 8U) + piVar7;\n                *(*0x20 + -0x1f0) = iVar13;\n                iVar21 = piVar16 + -1;\n                *(*0x20 + -0x240) = iVar21;\n                iVar9 = 0;\n                do {\n                    if (iVar21 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar19;\n                    iVar17 = *(iVar13 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar17;\n                    arg4 = *(iVar19 + 0x140);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar20 = *(iVar19 + 0x148);\n                    *(*0x20 + -0x250) = iVar20;\n                    iVar14 = 0;\n                    while (iVar14 < iVar20) {\n                        *(*0x20 + -600) = iVar14;\n                        uVar1 = *(arg4 + iVar14 * 4);\n                        if (*(iVar19 + 0x200) == 0) {\n                            iVar21 = uVar1 + *(iVar19 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x454d27;\n                            piVar7 = fcn.0040df80(uVar1);\n                            iVar21 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar21;\n                        uVar1 = *(iVar21 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x454d4d;\n                        piVar7 = fcn.0040df80(uVar1);\n                        uVar11 = piVar7[1];\n                        iVar21 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar13 = 0; iVar13 < uVar11; iVar13 = iVar13 + 1) {\n                            if (*(iVar21 + iVar13 * 8) == iVar9) goto code_r0x00454cab;\n                        }\n                        uVar10 = uVar11 + 1;\n                        uVar6 = uVar11;\n                        iVar13 = iVar21;\n                        uVar18 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar11;\n                            *(*0x20 + -0x2c0) = 0x454d85;\n                            iVar13 = fcn.00445220(uVar11);\n                            uVar10 = iVar21 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar18 = uVar11;\n                        }\n                        *(*0x20 + -0x210) = iVar13;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar18;\n                        iVar21 = iVar13 + uVar6 * 8;\n                        if (*0x789810 == 0) {\n                            *(iVar13 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x454dca;\n                            fcn.0045c220(uVar6, iVar9, iVar21, arg4);\n                        }\n                        uVar11 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x454de5;\n                        puVar8 = fcn.0040e2c0(uVar11);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x789810 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x454e25;\n                            fcn.0045c220(uVar11, *(*0x20 + -0x210), iVar21, arg4);\n                        }\ncode_r0x00454cab:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                        iVar19 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar20 = *(*0x20 + -0x250);\n                        iVar14 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar17 + 0x200) == 0) {\n                        *(*0x20 + -0x2c0) = 0x454ba5;\n                        uVar5 = fcn.0040cae0(0);\n                        uVar11 = *0x7357b0;\n                        uVar10 = *0x7357b8;\n                        uVar6 = *0x7357b0;\n                        if (*0x7357c0 < *0x7357b8 + 1) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x454bd9;\n                            uVar6 = fcn.00445220(*0x7357b8);\n                            uVar18 = uVar6;\n                            *0x7357c0 = uVar10;\n                            if (*0x789810 != 0) {\n                                *(*0x20 + -0x2c0) = 0x454bfe;\n                                uVar6 = fcn.0045c100(uVar10, iVar13, iVar19, arg4);\n                                uVar18 = *0x7357b0;\n                            }\n                            *0x7357b0 = uVar18;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar10 = uVar11;\n                        }\n                        *0x7357b8 = uVar10 + 1;\n                        if (*0x789810 == 0) {\n                            *(uVar6 + uVar10 * 8) = uVar5;\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(iVar21 + 0x200) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x454c3e;\n                            fcn.0045c100(uVar10, *0x7357b8, iVar19, arg4);\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x454c52;\n                            fcn.0045c100(uVar10, iVar21, iVar19, arg4);\n                        }\n                        iVar13 = *(iVar21 + 0x140);\n                        *(*0x20 + -0x200) = iVar13;\n                        iVar19 = *(iVar21 + 0x148);\n                        *(*0x20 + -0x250) = iVar19;\n                        iVar9 = 0;\n                        while (iVar9 < iVar19) {\n                            *(*0x20 + -600) = iVar9;\n                            iVar2 = *(iVar13 + iVar9 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar19 = iVar2 + *(iVar21 + 0x118);\n                            *(*0x20 + -0x208) = iVar19;\n                            uVar1 = *(iVar19 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x454e87;\n                            piVar7 = fcn.0040df80(uVar1);\n                            iVar9 = *piVar7;\n                            *(*0x20 + -0x210) = iVar9;\n                            iVar13 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar13;\n                            iVar21 = 0;\n                            while (iVar21 < iVar13) {\n                                *(*0x20 + -0x268) = iVar21;\n                                *(*0x20 + -0x228) = *(iVar9 + iVar21 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x454f79;\n                                fcn.0045c839();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x454f92;\n                                uVar4 = fcn.00449e40();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x454fb6;\n                                cVar3 = fcn.00455000(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x00454eb7;\n                                }\n                                iVar19 = *(*0x20 + -0x268);\n                                iVar9 = *(*0x20 + -0x210);\n                                iVar13 = *(*0x20 + -0x260);\n                                iVar21 = iVar19 + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x00454eb7:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar11 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x454ede;\n                            puVar8 = fcn.0040e2c0(uVar11);\n                            if (*0x789810 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x454f09;\n                                fcn.0045c220(uVar11, *(*0x20 + -0x228), iVar19, arg4);\n                            }\n                            iVar21 = *(*0x20 + -0x1f8);\n                            iVar13 = *(*0x20 + -0x200);\n                            iVar19 = *(*0x20 + -0x250);\n                            iVar9 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar19 = iVar17;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x454fe9;\n            fcn.0045c5a0(0);\n        }\n        *(puVar15 + -8) = 0x454fef;\n        in_RAX = fcn.00459ea0();\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 3324
    },
    "00457020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457020(void)\n\n{\n    if (*0x789810 != '\\0') {\n        fcn.00403140();\n    }\n    fcn.00461b60();\n    return;\n}\n",
        "token_count": 46
    },
    "00457080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457080(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = in_RAX;\n    if (*0x789810 != 0) {\n        fcn.0045c100(arg1, arg2, arg3, arg4);\n        uVar1 = *0x734d00;\n    }\n    *0x734d00 = uVar1;\n    return;\n}\n",
        "token_count": 166
    },
    "00457200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00457200(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x457229;\n            iVar2 = fcn.0042b260();\n            *(*0x20 + -0x18) = iVar2;\n            *(*0x20 + -0x10) = iVar2 + 8;\n            *(*0x20 + -0x38) = 0x457245;\n            fcn.00409e80();\n            iVar2 = *(*0x20 + -0x18);\n            if ((*(iVar2 + 0x88) == 0) || (*(iVar2 + 0x88) == 1)) {\n                if ((*(iVar2 + 0x28) == 0) || (*(iVar2 + 0x28) == 1)) {\n                    *(iVar2 + 0x10) = *(*0x20 + 8);\n                    *(iVar2 + 0x18) = 0;\n                    *(iVar2 + 0x20) = *(iVar2 + 0x20) + 1;\n                    *(iVar2 + 0x28) = 0;\n                    *(iVar2 + 0x78) = 0;\n                    *(iVar2 + 0x80) = *(iVar2 + 0x80) + 1;\n                    *(iVar2 + 0x88) = 0;\n                    *(iVar2 + 0xd8) = 0;\n                    *(iVar2 + 0xe0) = iVar2;\n                    *(*0x20 + -0x38) = 0x4572d0;\n                    fcn.0040a0a0();\n                    *(*0x20 + -0x38) = 0x4572df;\n                    iVar1 = fcn.0042b420();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x1c) = iVar1;\n                        *(*0x20 + -0x38) = 0x4572f9;\n                        fcn.0042af40();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x45732e;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x38) = 0x45733f;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x45734a;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 752
    },
    "00457360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457360(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x18) != '\\0') {\n                if ((*(in_RAX + 0x88) == 0) || (*(in_RAX + 0x88) == 1)) {\n                    if ((*(in_RAX + 0x28) == 0) || (*(in_RAX + 0x28) == 1)) {\n                        *(*0x20 + -0x20) = 0x4573ae;\n                        fcn.0042af40();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x4573c9;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x20) = 0x4573da;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x20) = 0x4573eb;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4573f6;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 419
    },
    "00457420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00457420(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int32_t unaff_EBX;\n    uint unaff_0000001c;\n    \n    if (*(in_RAX + 0x18) == '\\0') {\n        if (((unaff_EBX == 0x72) && (*(in_RAX + 0x78) < 0)) || ((unaff_EBX == 0x77 && (*(in_RAX + 0xd8) < 0)))) {\n            iVar1 = 2;\n        }\n        else if ((unaff_EBX == 0x72) && (*(in_RAX + 0x19) != '\\0')) {\n            iVar1 = 3;\n        }\n        else {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = 1;\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    if (CONCAT44(unaff_0000001c, unaff_EBX) == 0x72) {\n        *(in_RAX + 0x28) = 0;\n    }\n    else if (CONCAT44(unaff_0000001c, unaff_EBX) == 0x77) {\n        *(in_RAX + 0x88) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "004574a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004574a0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 0x18) == '\\0') {\n        if (((unaff_EBX == 0x72) && (*(in_RAX + 0x78) < 0)) || ((unaff_EBX == 0x77 && (*(in_RAX + 0xd8) < 0)))) {\n            iVar2 = 2;\n        }\n        else if ((unaff_EBX == 0x72) && (*(in_RAX + 0x19) != '\\0')) {\n            iVar2 = 3;\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    else {\n        iVar2 = 1;\n    }\n    if (iVar2 == 0) {\n        do {\n            cVar1 = fcn.0042b100();\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            if (*(in_RAX + 0x18) == '\\0') {\n                if (((unaff_EBX == 0x72) && (*(in_RAX + 0x78) < 0)) || ((unaff_EBX == 0x77 && (*(in_RAX + 0xd8) < 0))))\n                {\n                    iVar2 = 2;\n                }\n                else if ((unaff_EBX == 0x72) && (*(in_RAX + 0x19) != '\\0')) {\n                    iVar2 = 3;\n                }\n                else {\n                    iVar2 = 0;\n                }\n            }\n            else {\n                iVar2 = 1;\n            }\n        } while (iVar2 == 0);\n        return iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 461
    },
    "00457640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457640(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 8;\n            *(*0x20 + -0x48) = 0x457671;\n            fcn.00409e80();\n            arg1 = *(*0x20 + 8);\n            if (*(arg1 + 0x18) == '\\0') break;\n            *(*0x20 + -0x48) = 0x45782a;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x457835;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n    *(arg1 + 0x18) = 1;\n    *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n    *(arg1 + 0x80) = *(arg1 + 0x80) + 1;\n    *(*0x20 + -0x18) = 0;\n    *(*0x20 + -0x18) = 0;\n    do {\n        uVar2 = *(arg1 + 0x28);\n        if (uVar2 == 1) {\n            iVar5 = 0;\n            goto code_r0x004576e1;\n        }\n        if (uVar2 == 0) {\n            iVar5 = 0;\n            goto code_r0x004576e1;\n        }\n        *(*0x20 + -0x30) = uVar2;\n        LOCK();\n        puVar1 = arg1 + 0x28;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * *puVar1;\n    } while (uVar2 != uVar3);\n    iVar5 = *(*0x20 + -0x30);\n    if (*(*0x20 + -0x30) == 2) {\n        iVar5 = 0;\n    }\ncode_r0x004576e1:\n    *(*0x20 + -0x18) = iVar5;\n    while( true ) {\n        uVar2 = *(arg1 + 0x88);\n        if (uVar2 == 1) {\n            iVar5 = 0;\n            goto code_r0x00457724;\n        }\n        if (uVar2 == 0) break;\n        *(*0x20 + -0x28) = uVar2;\n        LOCK();\n        puVar1 = arg1 + 0x88;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * *puVar1;\n        if (uVar2 == uVar3) {\n            iVar5 = *(*0x20 + -0x28);\n            if (*(*0x20 + -0x28) == 2) {\n                iVar5 = 0;\n            }\ncode_r0x00457724:\n            *(*0x20 + -0x20) = iVar5;\n            if (*(arg1 + 0x48) != 0) {\n                *(*0x20 + -0x48) = 0x457739;\n                fcn.0044c380();\n                if (*0x789810 == 0) {\n                    arg1 = *(*0x20 + 8);\n                    *(arg1 + 0x48) = 0;\n                }\n                else {\n                    arg1 = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x457765;\n                    fcn.0045c220(arg1, 0, param_3, param_4);\n                }\n            }\n            if (*(arg1 + 0xa8) != 0) {\n                *(*0x20 + -0x48) = 0x457785;\n                fcn.0044c380();\n                if (*0x789810 == 0) {\n                    *(*(*0x20 + 8) + 0xa8) = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x4577b5;\n                    fcn.0045c200(0);\n                }\n            }\n            *(*0x20 + -0x48) = 0x4577c5;\n            fcn.0040a0a0();\n            iVar4 = *0x789600;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x789600 = *0x789600 + -1;\n                *(*0x20 + -0x48) = 0x4577ea;\n                fcn.00434b20(iVar4);\n            }\n            iVar4 = *0x789600;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x789600 = *0x789600 + -1;\n                *(*0x20 + -0x48) = 0x45780f;\n                fcn.00434b20(iVar4);\n            }\n            return;\n        }\n    }\n    iVar5 = 0;\n    goto code_r0x00457724;\n}\n",
        "token_count": 1388
    },
    "004578c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004578c0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack40;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.004320e0();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar5 = fcn.0043c0c0();\n    if (cVar5 != '\\0') {\n        if (*0x73b7b0 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x274))) {\n                fcn.00459d60();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.004363a0(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x736158 != '\\0') && (cVar5 = fcn.0043fc00(),  cVar5 == '\\0')) {\n            fcn.004349a0();\n        }\n        return;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x73b7b0 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x274) == *(iVar2 + 0x14)))) {\n            iStack40 = 0x69e5a0;\n            fcn.00459d60();\n        }\n        fcn.0045bfa0(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack40;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    fcn.00459ce0();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return;\n}\n",
        "token_count": 800
    },
    "00457b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00457b00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x7895f8 < 2)) || (*0x7895f4 <= *0x736138 + *0x73613c + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x5f4) != *(iVar1 + 0x5f4));\n    if ((*(iVar1 + 0x5f4) == *(iVar1 + 0x5f0)) && (*(iVar1 + 0xdf8) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00458020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00458020(uchar param_1)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    int64_t **ppiVar2;\n    ulong *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t *arg1;\n    uint64_t arg2;\n    ulong uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar *arg1_00;\n    int64_t *piVar9;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar6 = 0x38;\n                }\n                else {\n                    iVar6 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar6 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar6 = 0;\n                    while (iVar6 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar6;\n                        *(*0x20 + -0x100) = 0x4580f6;\n                        fcn.0044b840();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar6 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x30);\n                    piVar9 = uVar1;\n                    arg1_00 = (*(in_RAX + 0x32) & 0x7fff) + uVar1;\n                    arg1 = arg1_00 & 0xffff;\n                    if (piVar9 <= arg1) {\n                        arg4 = uVar1;\n                        arg3 = piVar9 << 3;\n                        arg1_00 = piVar9 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((*(in_RAX + 0x14) & 1) == 0) {\n                                iVar6 = 0x38;\n                            }\n                            else {\n                                iVar6 = 0x48;\n                            }\n                            arg1 = *(arg1_00 + iVar6 + in_RAX);\n                            if (*arg1 == 8) {\n                                if ((*(in_RAX + 0x14) & 1) == 0) {\n                                    iVar6 = 0x38;\n                                }\n                                else {\n                                    iVar6 = 0x48;\n                                }\n                                uVar5 = *(*(arg1_00 + iVar6 + in_RAX) + 0x17) & 0x1f;\n                                arg1 = uVar5;\n                                cVar4 = uVar5;\n                                if ((cVar4 != '\\r') && (cVar4 != '\\x0e')) {\n                                    if (*0x71d280 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x45823b;\n                                        fcn.00409e80();\n                                        iVar6 = *0x789588;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x458265;\n                                        ppiVar2 = fcn.0040cf00(*0x20 + -0xa8);\n                                        arg1 = *ppiVar2;\n                                        if (iVar6 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x458408;\n                                            fcn.0040a0a0();\n                                            return *(*0x20 + -0xd8) * 5 + CONCAT71(*0x69e329, *0x69e328);\n                                        }\n                                        iVar6 = *0x789588;\n                                        if (*0x789588 == 0) {\n                                            *(*0x20 + -0x100) = 0x45827f;\n                                            iVar6 = fcn.0040ca60();\n                                            if (*0x789810 != 0) {\n                                                arg1_00 = 0x789588;\n                                                *(*0x20 + -0x100) = 0x45829d;\n                                                fcn.0045c100(arg1, arg2, arg3, arg4);\n                                                iVar6 = *0x789588;\n                                            }\n                                        }\n                                        *0x789588 = iVar6;\n                                        bVar10 = *0x789590 < 2000;\n                                        if (*0x789590 < 2000) {\n                                            arg1_00 = *0x20 + -0x88;\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x4582cf;\n                                            iVar6 = fcn.0045c850();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar7 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar7;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar10) {\n                                                *(*0x20 + -0xe0) = iVar6;\n                                                *(*0x20 + -200) = iVar6 * 5;\n                                                if (*0x789810 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45836f;\n                                                    fcn.0045cbba();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x45838c;\n                                                    fcn.0040fb00(*0x20 + -0x58);\n                                                    uVar7 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar7;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x4583b3;\n                                                puVar3 = fcn.0040d140(*0x20 + -0xa8);\n                                                *puVar3 = *(*0x20 + -0xe0);\n                                                *0x789590 = *0x789590 + 1;\n                                                *(*0x20 + -0x100) = 0x4583d0;\n                                                fcn.0040a0a0();\n                                                return *(*0x20 + -200) + CONCAT71(*0x69e329, *0x69e328);\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x45843b;\n                                            fcn.0045c5a0(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x458449;\n                                        fcn.0040a0a0();\n                                        *(*0x20 + -0x100) = 0x45845a;\n                                        fcn.004320e0();\n                                    }\n                                    *(*0x20 + -0x100) = 0x45846d;\n                                    fcn.00431940();\n                                }\n                                *(*0x20 + -0x100) = 0x458485;\n                                fcn.00431940();\n                            }\n                            *(*0x20 + -0x100) = 0x458498;\n                            fcn.00431940();\n                        }\n                        *(*0x20 + -0x100) = 0x4584ab;\n                        fcn.00431940();\n                    }\n                    *(*0x20 + -0x100) = 0x4584b3;\n                    fcn.0045c660(arg1);\n                }\n                *(*0x20 + -0x100) = 0x4584c5;\n                fcn.0045c5e0(arg1_00, 0x100000);\n                param_1 = SUB81(arg1_00, 0);\n            }\n            unaff_RBX = 0x6b5758;\n            *(*0x20 + -0x100) = 0x4584d8;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x4584ec;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2791
    },
    "00458520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458520(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uint64_t uStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [16];\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x7895b7 == '\\0') {\n        *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2e8) = 1;\n        *(iVar2 + 0x2f0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2e0) = *0x734c40;\n        *(iVar2 + 0x2e8) = 3;\n        auStack32 = ZEXT816(uStackX8);\n        uStack16 = 0x800;\n        *(iVar2 + 0x2f0) = auStack32;\n    }\n    fcn.004031e0();\n    iStackX24 = *(iVar2 + 0x2f8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x308);\n    }\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 447
    },
    "0045bce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045bce0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar6 = *(in_GS_OFFSET + 0x28);\n    if (*piVar6 != 0) {\n        piVar1 = *(*piVar6 + 0x30);\n        iVar2 = *piVar6;\n        if ((*piVar1 != iVar2) && (piVar1[10] != iVar2)) {\n            iVar3 = *piVar1;\n            pcVar5 = fcn.00458f60();\n            *piVar6 = iVar3;\n            uVar7 = *(iVar3 + 0x38) - 0x40U & 0xfffffffffffffff0;\n            *(uVar7 + 0x30) = iVar2;\n            *(uVar7 + 0x28) = *(iVar2 + 8) - *0x20;\n            *(uVar7 - 8) = 0x45bd53;\n            uVar4 = (*pcVar5)(uStackX16);\n            iVar2 = *(*(uVar7 + 0x30) + 8);\n            iVar3 = *(uVar7 + 0x28);\n            **(in_GS_OFFSET + 0x28) = *(uVar7 + 0x30);\n            *((iVar2 - iVar3) + 0x18) = uVar4;\n            return;\n        }\n    }\n    uVar4 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar4;\n    return;\n}\n",
        "token_count": 414
    },
    "0045bdc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045bdc0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStack32;\n    int64_t *piStack16;\n    \n    piVar3 = *(in_GS_OFFSET + 0x28);\n    iVar4 = 0;\n    if (piVar3 != NULL) {\n        iVar4 = *piVar3;\n    }\n    if (iVar4 == 0) {\n        fcn.0045dd60();\n        (*0x437880)();\n        piStack16 = NULL;\n        piVar3 = *(in_GS_OFFSET + 0x28);\n        piVar5 = *(*piVar3 + 0x30);\n        *(*piVar5 + 0x38) = &stack0xffffffffffffffe0;\n    }\n    else {\n        piVar5 = *(iVar4 + 0x30);\n        piStack16 = piVar5;\n    }\n    uStack32 = *(*piVar5 + 0x38);\n    *(*piVar5 + 0x38) = &stack0xffffffffffffffe0;\n    iVar4 = piVar5[0x12];\n    *piVar3 = iVar4;\n    iVar1 = *(iVar4 + 0x38);\n    *(iVar1 + -8) = *(iVar4 + 0x40);\n    *(iVar1 + -0x28) = uStackX8;\n    *(iVar1 + -0x20) = uStackX16;\n    *(iVar1 + -0x18) = uStackX24;\n    *(iVar1 + -0x30) = 0x45be97;\n    (*0x45dfe0)();\n    piVar3 = *(in_GS_OFFSET + 0x28);\n    iVar4 = *piVar3;\n    *(iVar4 + 0x40) = *(iVar1 + -8);\n    *(iVar4 + 0x38) = iVar1;\n    iVar4 = **(*piVar3 + 0x30);\n    *piVar3 = iVar4;\n    puVar2 = *(iVar4 + 0x38);\n    *(iVar4 + 0x38) = *puVar2;\n    if (puVar2[2] == 0) {\n        puVar2[-1] = 0x45bef6;\n        (*0x45e380)();\n        puVar2[-1] = 0x45befe;\n        fcn.0045dd60();\n    }\n    return;\n}\n",
        "token_count": 596
    },
    "0045bfa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045bfa0(ulong noname_0, ulong arg2)\n\n{\n    rdtsc();\n    return;\n}\n",
        "token_count": 31
    },
    "0045bfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045bfc0(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x7895b5 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x789840 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x789ac0, auVar5 ^ *0x789ac0);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x6b8180));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x6b8080);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x789ad0, auVar5 ^ *0x789ad0);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x789ad0, auVar5 ^ *0x789ad0);\n                auVar8 = aesenc(auVar5 ^ *0x789ae0, auVar5 ^ *0x789ae0);\n                auVar5 = aesenc(auVar5 ^ *0x789af0, auVar5 ^ *0x789af0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x789ad0, auVar5 ^ *0x789ad0);\n                auVar8 = aesenc(auVar5 ^ *0x789ae0, auVar5 ^ *0x789ae0);\n                auVar9 = aesenc(auVar5 ^ *0x789af0, auVar5 ^ *0x789af0);\n                auVar10 = aesenc(auVar5 ^ *0x789b00, auVar5 ^ *0x789b00);\n                auVar11 = aesenc(auVar5 ^ *0x789b10, auVar5 ^ *0x789b10);\n                auVar12 = aesenc(auVar5 ^ *0x789b20, auVar5 ^ *0x789b20);\n                auVar5 = aesenc(auVar5 ^ *0x789b30, auVar5 ^ *0x789b30);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x789ad0, auVar5 ^ *0x789ad0);\n            auVar8 = aesenc(auVar5 ^ *0x789ae0, auVar5 ^ *0x789ae0);\n            auVar9 = aesenc(auVar5 ^ *0x789af0, auVar5 ^ *0x789af0);\n            auVar10 = aesenc(auVar5 ^ *0x789b00, auVar5 ^ *0x789b00);\n            auVar11 = aesenc(auVar5 ^ *0x789b10, auVar5 ^ *0x789b10);\n            auVar12 = aesenc(auVar5 ^ *0x789b20, auVar5 ^ *0x789b20);\n            auVar5 = aesenc(auVar5 ^ *0x789b30, auVar5 ^ *0x789b30);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3944
    },
    "0045c040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c040(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x7895b5 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x789ac0);\n        auVar1 = aesenc(auVar1, *0x789ad0);\n        auVar1 = aesenc(auVar1, *0x789ae0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x789840 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 291
    },
    "0045cc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045cc20(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar in_YMM0 [32];\n    uchar auVar7 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        if (unaff_RBX == 0) {\n            return;\n        }\n        if (unaff_RBX < 3) {\n            (*in_RAX)[0] = 0;\n            in_RAX[-1][unaff_RBX + 0x1f] = 0;\n            return;\n        }\n        if (unaff_RBX < 5) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n            return;\n        }\n        if (unaff_RBX < 8) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n            return;\n        }\n        if (unaff_RBX == 8) {\n            **in_RAX = 0;\n            return;\n        }\n        if (unaff_RBX < 0x11) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n            return;\n        }\n        if (unaff_RBX < 0x21) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x41) break;\n        if (unaff_RBX < 0x81) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x101) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (*0x789de3 == '\\x01') {\n            auVar7 = vpxor_avx2(in_YMM0, in_YMM0);\n            if (0x1ffffff < unaff_RBX) {\n                auVar2 = vmovdqu_avx(auVar7);\n                *in_RAX = auVar2;\n                uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n                pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n                do {\n                    pauVar6 = pauVar5;\n                    uVar4 = uVar3;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    *pauVar6 = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[1] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[2] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[3] = auVar2;\n                    uVar3 = uVar4 - 0x80;\n                    pauVar5 = pauVar6[4];\n                } while (0x7f < uVar4 - 0x80);\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-1] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-2] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-3] + uVar4) = auVar2;\n                auVar7 = vmovdqu_avx(auVar7);\n                *(pauVar6[-4] + uVar4) = auVar7;\n                vzeroupper_avx();\n                return;\n            }\n            do {\n                pauVar5 = in_RAX;\n                uVar3 = unaff_RBX;\n                auVar2 = vmovdqu_avx(auVar7);\n                *pauVar5 = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[1] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[2] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[3] = auVar2;\n                unaff_RBX = uVar3 - 0x80;\n                in_RAX = pauVar5[4];\n            } while (0x7f < uVar3 - 0x80);\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-1] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-2] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-3] + uVar3) = auVar2;\n            auVar7 = vmovdqu_avx(auVar7);\n            *(pauVar5[-4] + uVar3) = auVar7;\n            vzeroupper_avx();\n            return;\n        }\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    **in_RAX = in_XMM15_Da;\n    *(*in_RAX + 4) = in_XMM15_Db;\n    *(*in_RAX + 8) = in_XMM15_Dc;\n    *(*in_RAX + 0xc) = in_XMM15_Dd;\n    *(*in_RAX + 0x10) = in_XMM15_Da;\n    *(*in_RAX + 0x14) = in_XMM15_Db;\n    *(*in_RAX + 0x18) = in_XMM15_Dc;\n    *(*in_RAX + 0x1c) = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4866
    },
    "0045cee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045cee0(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x7895b4 & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x789de6 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13218
    },
    "0045de80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045de80(void)\n\n{\n    if (*0x7895b8 != '\\0') {\n        fcn.0042cc40();\n        return;\n    }\n    do {\n    } while (*0x7ffe000c != *0x7ffe0010);\n    return;\n}\n",
        "token_count": 66
    },
    "0045dee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0045dee0(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x7895b8 != '\\0') {\n        iVar1 = fcn.0042ccc0();\n        return iVar1;\n    }\n    do {\n    } while (*0x7ffe000c != *0x7ffe0010);\n    do {\n    } while (*0x7ffe0018 != *0x7ffe001c);\n    return (CONCAT44(*0x7ffe0018, *0x7ffe0014) + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n}\n",
        "token_count": 160
    },
    "0045e180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e180(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t in_GS_OFFSET;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    while (puVar1 = iVar2 + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n        fcn.00459ea0();\n    }\n    uVar3 = CONCAT71(*0x69e2e1, *0x69e2e0);\n    if (*0x789810 != 0) {\n        fcn.0045c100(arg1, arg2, arg3, arg4);\n        uVar3 = *0x734cb0;\n    }\n    *0x734cb0 = uVar3;\n    fcn.00444dc0();\n    fcn.0042bd20();\n    fcn.00444480();\n    fcn.00444520();\n    fcn.0042c7a0();\n    *0x789618 = fcn.0042c6e0();\n    fcn.0042c860();\n    *0x7895f8 = fcn.0042c5c0();\n    fcn.0042e6a0();\n    *0x789738 = uVar4;\n    fcn.0042e720();\n    return;\n}\n",
        "token_count": 347
    },
    "0045e220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e220(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.00459ce0();\n    }\n    else {\n        fcn.00459ce0();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 118
    },
    "0045e320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00435804)\n\nvoid fcn.0045e320(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x736118 = 10000;\n            iVar2 = 0x722f80;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x43571a;\n                fcn.0044a0c0();\n                iVar2 = *(*(puVar4 + -0x20) + 0x210);\n            }\n            *(puVar4 + -0x58) = 0x435730;\n            fcn.00445900();\n            *(puVar4 + -0x58) = 0x435735;\n            fcn.0040a820();\n            *(puVar4 + -0x58) = 0x43574a;\n            fcn.0042d0a0(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x435765;\n            fcn.00435a60(uVar1);\n            *(puVar4 + -0x58) = 0x43576a;\n            fcn.00435660();\n            *(puVar4 + -0x58) = 0x43576f;\n            fcn.00403080();\n            *(puVar4 + -0x58) = 0x435774;\n            fcn.00449e80();\n            *(puVar4 + -0x58) = 0x435779;\n            fcn.00454a20();\n            *(puVar4 + -0x58) = 0x43577e;\n            fcn.004093c0();\n            *(puVar4 + -0x58) = 0x43578e;\n            fcn.0042d140();\n            *(puVar4 + -0x58) = 0x435793;\n            fcn.004415a0();\n            *(puVar4 + -0x58) = 0x435798;\n            fcn.004158c0();\n            *(puVar4 + -0x58) = 0x4357a6;\n            fcn.00409e80();\n            *(puVar4 + -0x58) = 0x4357ab;\n            fcn.0045de80();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x7360e8 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x7895f8;\n            *(puVar4 + -0x58) = 0x4357e5;\n            fcn.00406b60();\n            *(puVar4 + -0x58) = 0x4357ea;\n            fcn.00449a80();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x435813;\n            iVar3 = fcn.0043db20();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x43582a;\n                fcn.0040a0a0();\n                if (1 < *0x7899e0) {\n                    *0x789815 = 1;\n                    *0x789810 = CONCAT31(*0x789811, 1);\n                    *(puVar4 + -0x10) = *0x735730;\n                    *(puVar4 + -0x28) = *0x735738;\n                    iVar2 = 0;\n                    arg1 = *0x735730;\n                    param_2 = *0x735738;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x435905;\n                        fcn.0042aac0(arg1, iVar2 + 0x16c0);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x72e4b8 == 0) {\n                    *0x72e4b8 = 7;\n                    if (*0x789810 == 0) {\n                        *0x72e4b0 = 0x4ad220;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x4358a6;\n                        fcn.0045c100(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x7355f8 == 1) {\n                    *0x7355f8 = 0;\n                    if (*0x789810 == 0) {\n                        *0x7355f0 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x4358df;\n                        fcn.0045c100(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x435936;\n            fcn.004320e0();\n        }\n        *(puVar5 + -8) = 0x43593c;\n        fcn.00459ea0();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1462
    },
    "0045e360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e360(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00436de0();\n    fcn.00436f80();\n    return;\n}\n",
        "token_count": 199
    },
    "0045e440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004413a6)\n// WARNING: Removing unreachable block (ram,0x004413a8)\n// WARNING: Removing unreachable block (ram,0x004413ae)\n// WARNING: Removing unreachable block (ram,0x004413c9)\n// WARNING: Removing unreachable block (ram,0x004413cf)\n// WARNING: Removing unreachable block (ram,0x004413d1)\n// WARNING: Removing unreachable block (ram,0x004413d7)\n// WARNING: Removing unreachable block (ram,0x004413ea)\n// WARNING: Removing unreachable block (ram,0x004413f0)\n// WARNING: Removing unreachable block (ram,0x00441409)\n// WARNING: Removing unreachable block (ram,0x0044140b)\n// WARNING: Removing unreachable block (ram,0x00441417)\n// WARNING: Removing unreachable block (ram,0x00441431)\n// WARNING: Removing unreachable block (ram,0x00441433)\n// WARNING: Removing unreachable block (ram,0x00441452)\n// WARNING: Removing unreachable block (ram,0x0044145c)\n// WARNING: Removing unreachable block (ram,0x0044146d)\n// WARNING: Removing unreachable block (ram,0x00441414)\n// WARNING: Removing unreachable block (ram,0x0044147e)\n// WARNING: Removing unreachable block (ram,0x0044148f)\n// WARNING: Removing unreachable block (ram,0x004414a5)\n// WARNING: Removing unreachable block (ram,0x004414b6)\n// WARNING: Removing unreachable block (ram,0x004414c7)\n\nvoid fcn.0045e440(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0;\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0;\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x4414e9;\n                                                fcn.004320e0();\n                                            }\n                                            *(puVar8 + -0x48) = 0x4414fa;\n                                            fcn.004320e0();\n                                        }\n                                        *(puVar8 + -0x48) = 0x44150b;\n                                        fcn.004320e0();\n                                    }\n                                    *(puVar8 + -0x48) = 0x44151c;\n                                    fcn.004320e0();\n                                }\n                                *(puVar8 + -0x48) = 0x44152d;\n                                fcn.004320e0();\n                            }\n                            *(puVar8 + -0x48) = 0x44153e;\n                            fcn.004320e0();\n                        }\n                        *(puVar8 + -0x48) = 0x44154f;\n                        fcn.004320e0();\n                    }\n                    *(puVar8 + -0x48) = 0x441565;\n                    fcn.004320e0();\n                }\n                *(puVar8 + -0x48) = 0x441576;\n                fcn.004320e0();\n            }\n            *(puVar8 + -0x48) = 0x441587;\n            fcn.004320e0();\n        }\n        *(puVar9 + -8) = 0x44158d;\n        fcn.00459ea0();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1685
    },
    "0045e580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e580(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t **ppuVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    ulong *puVar12;\n    ulong uVar13;\n    uint64_t uVar14;\n    ulong unaff_RBX;\n    uchar *puVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar15 = *0x20;\n    do {\n        puVar16 = puVar15;\n        if (*(iVar9 + 0x10) <= puVar15 + -0x128 && puVar15 + -0x128 != *(iVar9 + 0x10)) {\n            puVar16 = puVar15 + -0x1a8;\n            *(puVar15 + -8) = unaff_RBP;\n            unaff_RBP = puVar15 + -8;\n            puVar12 = *(iVar9 + 0x30);\n            puVar1 = puVar12[3];\n            if (puVar1[2] != 0xfffffffffffffb2e) {\n                *(puVar15 + -0xf0) = iVar9;\n                puVar10 = puVar12[0x12];\n                *(puVar15 + -0xe0) = puVar10;\n                if (puVar1 == puVar10) break;\n                *(puVar15 + -200) = puVar12;\n                *(puVar15 + -0x130) = puVar1;\n                *(puVar15 + -0xd0) = *puVar12;\n                *(puVar15 + -0xd8) = puVar12[10];\n                *(puVar15 + -0x1b0) = 0x447c3e;\n                fcn.00433860();\n                *(puVar15 + -0x1b0) = 0x447c4f;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447c59;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x447c6a;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447c77;\n                fcn.004340e0();\n                *(puVar15 + -0x1b0) = 0x447c88;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447c95;\n                fcn.004340e0();\n                *(puVar15 + -0x1b0) = 0x447ca6;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447cb3;\n                fcn.004340e0();\n                *(puVar15 + -0x1b0) = 0x447cc5;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447cd2;\n                fcn.004340e0();\n                *(puVar15 + -0x1b0) = 0x447cd7;\n                fcn.00433ac0();\n                *(puVar15 + -0x1b0) = 0x447cdc;\n                fcn.004338e0();\n                iVar4 = *(*(puVar15 + -0xf0) + 0x30);\n                *(puVar15 + -0x40) = *(iVar4 + 8);\n                uVar5 = *(iVar4 + 0x14);\n                uVar6 = *(iVar4 + 0x18);\n                uVar7 = *(iVar4 + 0x1c);\n                *(puVar15 + -0x38) = *(iVar4 + 0x10);\n                *(puVar15 + -0x34) = uVar5;\n                *(puVar15 + -0x30) = uVar6;\n                *(puVar15 + -0x2c) = uVar7;\n                uVar5 = *(iVar4 + 0x24);\n                uVar6 = *(iVar4 + 0x28);\n                uVar7 = *(iVar4 + 0x2c);\n                *(puVar15 + -0x28) = *(iVar4 + 0x20);\n                *(puVar15 + -0x24) = uVar5;\n                *(puVar15 + -0x20) = uVar6;\n                *(puVar15 + -0x1c) = uVar7;\n                uVar5 = *(iVar4 + 0x34);\n                uVar6 = *(iVar4 + 0x38);\n                uVar7 = *(iVar4 + 0x3c);\n                *(puVar15 + -0x18) = *(iVar4 + 0x30);\n                *(puVar15 + -0x14) = uVar5;\n                *(puVar15 + -0x10) = uVar6;\n                *(puVar15 + -0xc) = uVar7;\n                *(puVar15 + -0x1b0) = 0x447d45;\n                fcn.00452440(*(puVar15 + -0x18));\n                *(puVar15 + -0x1b0) = 0x447d56;\n                fcn.004320e0();\n            }\n            unaff_RBX = 0x17;\n            *(puVar15 + -0x1b0) = 0x447d67;\n            fcn.004320e0();\n        }\n        *(puVar16 + -8) = 0x447d6d;\n        fcn.00459ea0();\n        puVar15 = puVar16;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar15 + -0xb0) = puVar12[1];\n        uVar5 = *(puVar12 + 0x14);\n        uVar6 = *(puVar12 + 3);\n        uVar7 = *(puVar12 + 0x1c);\n        *(puVar15 + -0xa8) = *(puVar12 + 2);\n        *(puVar15 + -0xa4) = uVar5;\n        *(puVar15 + -0xa0) = uVar6;\n        *(puVar15 + -0x9c) = uVar7;\n        uVar5 = *(puVar12 + 0x24);\n        uVar6 = *(puVar12 + 5);\n        uVar7 = *(puVar12 + 0x2c);\n        *(puVar15 + -0x98) = *(puVar12 + 4);\n        *(puVar15 + -0x94) = uVar5;\n        *(puVar15 + -0x90) = uVar6;\n        *(puVar15 + -0x8c) = uVar7;\n        uVar5 = *(puVar12 + 0x34);\n        uVar6 = *(puVar12 + 7);\n        uVar7 = *(puVar12 + 0x3c);\n        *(puVar15 + -0x88) = *(puVar12 + 6);\n        *(puVar15 + -0x84) = uVar5;\n        *(puVar15 + -0x80) = uVar6;\n        *(puVar15 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar12 = puVar10[2];\n        *(puVar15 + -0x138) = puVar12;\n        if ((puVar12 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar15 + -0x1a8) = puVar10 + 7;\n            *(puVar15 + -0x1b0) = 0x4472d1;\n            fcn.00459cc0();\n            puVar10 = *(puVar15 + -0xe0);\n            puVar12 = *(puVar15 + -0x138);\n        }\n        uVar14 = *puVar10;\n        if (uVar14 != 0) {\n            uVar2 = puVar10[7];\n            uVar11 = uVar2 - 8;\n            *(puVar15 + -0x178) = uVar11;\n            if (uVar11 < uVar14) {\n                *(puVar15 + -0x140) = uVar14;\n                *(puVar15 + -0x148) = uVar2;\n                *(puVar15 + -0x150) = puVar10[1];\n                *(puVar15 + -0xf8) = *(puVar15 + -0xa8);\n                *(puVar15 + -0x100) = *(puVar15 + -0xb0);\n                *(puVar15 + -0x108) = *(puVar15 + -0x88);\n                *(puVar15 + -0x110) = puVar10[8];\n                *(puVar15 + -0x118) = puVar10[0xc];\n                *(puVar15 + -0xb8) = puVar10[10];\n                *(puVar15 + -0x1b0) = 0x447385;\n                fcn.00433860();\n                *(puVar15 + -0x1b0) = 0x447396;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x4473a5;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x4473b6;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x4473c5;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x4473d6;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x4473e5;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x4473f6;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447405;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x447416;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447425;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x447436;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447445;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x447456;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447465;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x447476;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x447485;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x447496;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x4474a5;\n                fcn.00433fc0();\n                *(puVar15 + -0x1b0) = 0x4474b6;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x4474c5;\n                fcn.004340e0();\n                *(puVar15 + -0x1b0) = 0x4474d6;\n                fcn.00434160();\n                *(puVar15 + -0x1b0) = 0x4474db;\n                fcn.004338e0();\n                puVar10 = *(puVar15 + -0xe0);\n                puVar12 = *(puVar15 + -0x138);\n                uVar11 = *(puVar15 + -0x178);\n            }\n            if (*puVar10 < uVar11 || *puVar10 == uVar11) {\n                if (puVar12 != 0xfffffffffffffade) {\ncode_r0x0044757a:\n                    uVar14 = puVar10[1];\n                    uVar11 = *puVar10;\n                    *(puVar15 + -0x160) = uVar14 - uVar11;\n                    uVar2 = puVar10[8];\n                    *(puVar15 + -0x1b0) = 0x447592;\n                    iVar9 = fcn.0044a780(uVar14 - uVar11, uVar2);\n                    uVar14 = *(puVar15 + -0x160);\n                    uVar11 = uVar14 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar15 + -0x120) = uVar11;\n                        *(puVar15 + -0x1b0) = 0x4475b2;\n                        iVar8 = fcn.0044b460();\n                        for (uVar11 = *(puVar15 + -0x120);\n                            uVar11 - (*(*(puVar15 + -0xe0) + 8) - *(*(puVar15 + -0xe0) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar11 = uVar11 << 1) {\n                        }\n                        uVar14 = *(puVar15 + -0x160);\n                    }\n                    if (*(*(puVar15 + -0xe0) + 0x10) == -0x113) {\n                        uVar11 = uVar14;\n                    }\n                    if ((uVar11 <= *0x71d2b0) && (uVar11 <= *0x71d2a8)) {\n                        *(puVar15 + -0x158) = uVar11;\n                        *(puVar15 + -0x1b0) = 0x44761d;\n                        fcn.004363a0(8);\n                        *(puVar15 + -0x1b0) = 0x44762f;\n                        fcn.00446e20();\n                        *(puVar15 + -0x1b0) = 0x447646;\n                        fcn.004363a0(2);\n                        *(puVar15 + -0x1a8) = *(puVar15 + -0xe0) + 0x38;\n                        *(puVar15 + -0x1b0) = 0x44765b;\n                        fcn.00459cc0();\n                        return;\n                    }\n                    if (*0x71d2a8 <= *0x71d2b0) goto code_r0x0044776c;\n                    *(puVar15 + -0x1b0) = 0x447692;\n                    fcn.00433860();\n                    *(puVar15 + -0x1b0) = 0x4476a5;\n                    fcn.00434160();\n                    *(puVar15 + -0x1b0) = 0x4476b1;\n                    fcn.00433e60();\n                    *(puVar15 + -0x1b0) = 0x4476c5;\n                    fcn.00434160();\n                    *(puVar15 + -0x1b0) = 0x4476ca;\n                    fcn.004338e0();\n                    do {\n                        *(puVar15 + -0x140) = **(puVar15 + -0xe0);\n                        *(puVar15 + -0x148) = (*(puVar15 + -0xe0))[1];\n                        *(puVar15 + -0x1b0) = 0x4476e8;\n                        fcn.00433860();\n                        *(puVar15 + -0x1b0) = 0x4476f9;\n                        fcn.00434160();\n                        *(puVar15 + -0x1b0) = 0x447705;\n                        fcn.00433fc0();\n                        *(puVar15 + -0x1b0) = 0x447716;\n                        fcn.00434160();\n                        *(puVar15 + -0x1b0) = 0x447725;\n                        fcn.00433fc0();\n                        *(puVar15 + -0x1b0) = 0x447736;\n                        fcn.00434160();\n                        *(puVar15 + -0x1b0) = 0x447745;\n                        fcn.00433fc0();\n                        *(puVar15 + -0x1b0) = 0x447756;\n                        fcn.00434160();\n                        *(puVar15 + -0x1b0) = 0x44775b;\n                        fcn.004338e0();\n                        *(puVar15 + -0x1b0) = 0x44776c;\n                        fcn.004320e0();\ncode_r0x0044776c:\n                        *(puVar15 + -0x1b0) = 0x447771;\n                        fcn.00433860();\n                        *(puVar15 + -0x1b0) = 0x447785;\n                        fcn.00434160();\n                        *(puVar15 + -0x1b0) = 0x447791;\n                        fcn.00433e60();\n                        *(puVar15 + -0x1b0) = 0x4477a5;\n                        fcn.00434160();\n                        *(puVar15 + -0x1b0) = 0x4477aa;\n                        fcn.004338e0();\n                    } while( true );\n                }\n                ppuVar3 = *(*(puVar15 + -0xf0) + 0x30);\n                if (*ppuVar3 != puVar10) {\n                    if ((ppuVar3[0x14] != NULL) || (*(ppuVar3 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar15 + -0x1b0) = 0x447545;\n                            fcn.00447d80();\n                            puVar10 = *(puVar15 + -0xe0);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar15 + -0x1b0) = 0x447565;\n                            fcn.0043b100();\n                        }\n                        *(puVar15 + -0x1b0) = 0x447572;\n                        fcn.0043b080();\n                        puVar10 = *(puVar15 + -0xe0);\n                        goto code_r0x0044757a;\n                    }\n                    *(puVar15 + -0x1b0) = 0x4477e5;\n                    fcn.004320e0();\n                }\n                *(puVar15 + -0x1b0) = 0x4477f6;\n                puVar10 = fcn.004320e0();\n            }\n            puVar12 = *(puVar10 + 0x12);\n            *(puVar15 + -0x17c) = *(puVar10 + 0x12);\n            *(puVar15 + -0x128) = puVar10[0x13];\n            *(puVar15 + -0x1b0) = 0x447814;\n            fcn.00433860();\n            *(puVar15 + -0x1b0) = 0x447825;\n            fcn.00434160();\n            *(puVar15 + -0x1b0) = 0x447832;\n            fcn.004340e0();\n            *(puVar15 + -0x1b0) = 0x447845;\n            fcn.00434160();\n            *(puVar15 + -0x1b0) = 0x447852;\n            fcn.00433f60();\n            *(puVar15 + -0x1b0) = 0x447865;\n            fcn.00434160();\n            *(puVar15 + -0x1b0) = 0x447870;\n            fcn.00433fc0();\n            *(puVar15 + -0x1b0) = 0x447885;\n            fcn.00434160();\n            *(puVar15 + -0x1b0) = 0x44788a;\n            fcn.004338e0();\n            *(puVar15 + -0x140) = **(puVar15 + -0xe0);\n            *(puVar15 + -0x1b0) = 0x44789f;\n            fcn.00433860();\n            *(puVar15 + -0x1b0) = 0x4478b0;\n            fcn.00434160();\n            *(puVar15 + -0x1b0) = 0x4478ba;\n            fcn.00433fc0();\n            *(puVar15 + -0x1b0) = 0x4478cb;\n            fcn.00434160();\n            *(puVar15 + -0x1b0) = 0x4478d5;\n            fcn.00433fc0();\n            *(puVar15 + -0x1b0) = 0x4478da;\n            fcn.00433ac0();\n            *(puVar15 + -0x1b0) = 0x4478df;\n            fcn.004338e0();\n            *(puVar15 + -0x1b0) = 0x4478f0;\n            fcn.004320e0();\n        }\n        unaff_RBX = 0x19;\n        *(puVar15 + -0x1b0) = 0x447905;\n        puVar10 = fcn.004320e0();\n    }\n    *(puVar15 + -0x78) = puVar12[1];\n    uVar5 = *(puVar12 + 0x14);\n    uVar6 = *(puVar12 + 3);\n    uVar7 = *(puVar12 + 0x1c);\n    *(puVar15 + -0x70) = *(puVar12 + 2);\n    *(puVar15 + -0x6c) = uVar5;\n    *(puVar15 + -0x68) = uVar6;\n    *(puVar15 + -100) = uVar7;\n    uVar5 = *(puVar12 + 0x24);\n    uVar6 = *(puVar12 + 5);\n    uVar7 = *(puVar12 + 0x2c);\n    *(puVar15 + -0x60) = *(puVar12 + 4);\n    *(puVar15 + -0x5c) = uVar5;\n    *(puVar15 + -0x58) = uVar6;\n    *(puVar15 + -0x54) = uVar7;\n    uVar5 = *(puVar12 + 0x34);\n    uVar6 = *(puVar12 + 7);\n    uVar7 = *(puVar12 + 0x3c);\n    *(puVar15 + -0x50) = *(puVar12 + 6);\n    *(puVar15 + -0x4c) = uVar5;\n    *(puVar15 + -0x48) = uVar6;\n    *(puVar15 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar15 + -0x78);\n    puVar10[0xf] = *(puVar15 + -0x70);\n    uVar14 = puVar10[8];\n    *(puVar15 + -0x1b0) = 0x447959;\n    iVar9 = fcn.0044a780(uVar14);\n    if (iVar9 != 0) goto code_r0x00447be6;\n    unaff_RBX = 9;\n    uVar13 = 0x4ad599;\n    iVar9 = 0;\n    do {\n        *(puVar15 + -0x168) = unaff_RBX;\n        *(puVar15 + -0xe8) = uVar13;\n        *(puVar15 + -0x170) = iVar9;\n        puVar12 = *(puVar15 + -0xe0);\n        *(puVar15 + -0x140) = puVar12[7];\n        *(puVar15 + -0x148) = *puVar12;\n        *(puVar15 + -0x150) = puVar12[1];\n        *(puVar15 + -0xf8) = *(puVar15 + -0x70);\n        *(puVar15 + -0x100) = *(puVar15 + -0x78);\n        *(puVar15 + -0x108) = *(puVar15 + -0x50);\n        *(puVar15 + -0x110) = puVar12[8];\n        *(puVar15 + -0x118) = puVar12[0xc];\n        *(puVar15 + -0xb8) = puVar12[10];\n        *(puVar15 + -0x1b0) = 0x447a05;\n        fcn.00433860();\n        *(puVar15 + -0x1b0) = 0x447a16;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447a28;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447a39;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447a45;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447a56;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447a65;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447a76;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447a85;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447a96;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447aa5;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447ab6;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447ac5;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447ad6;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447ae5;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447af6;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447b05;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447b16;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447b25;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447b36;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447b45;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447b56;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447b65;\n        fcn.00433fc0();\n        *(puVar15 + -0x1b0) = 0x447b76;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447b85;\n        fcn.004340e0();\n        *(puVar15 + -0x1b0) = 0x447b96;\n        fcn.00434160();\n        *(puVar15 + -0x1b0) = 0x447b9b;\n        fcn.004338e0();\n        *(*(*(puVar15 + -0xf0) + 0x30) + 0xf9) = 2;\n        *(puVar15 + -0x1b0) = 0x447bd5;\n        fcn.00452440(*(puVar15 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar15 + -0x1b0) = 0x447be6;\n        iVar9 = fcn.004320e0();\ncode_r0x00447be6:\n        *(puVar15 + -0xc0) = iVar9;\n        *(puVar15 + -0x1b0) = 0x447bf3;\n        uVar13 = fcn.0044ae60();\n        iVar9 = *(*(puVar15 + -0xe0) + 0x40) - **(puVar15 + -0xc0);\n    } while( true );\n}\n",
        "token_count": 6932
    },
    "00462020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00462020(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00457b00();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.00457b80();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00457840();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.00457fa0();\n        }\n        fcn.00457e60(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.00457fa0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00457840();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 796
    },
    "00462400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00462400(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack64 [16];\n    uchar auStack48 [16];\n    uint uStack32;\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.00462020();\n    }\n    auStack64 = CONCAT88(in_RAX + 1, 0x4625a0);\n    ppcStack16 = auStack64;\n    if (*in_RAX == 0) {\n        auStack48 = CONCAT88(in_RAX, 0x462560);\n        uStack32 = 1;\n        ppcStack24 = auStack48;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 326
    },
    "00462840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00462840(uint64_t arg1, ulong noname_1, code *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00462840:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x38) = arg4;\n        *(*0x20 + 0x30) = arg3;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x80) = 0x4628a5;\n        iVar3 = fcn.00409940(unaff_RDI);\n        if (iVar3 != 0) {\n            pcVar1 = *(iVar3 + 0x18);\n            *(*0x20 + -0x80) = 0x4629ae;\n            iVar3 = (*pcVar1)(*(*0x20 + 0x10));\n            return iVar3;\n        }\n        *(*0x20 + -0x80) = 0x4628ca;\n        iVar3 = fcn.00409940(*(*0x20 + 0x10));\n        if (iVar3 != 0) {\n            pcVar1 = *(iVar3 + 0x18);\n            *(*0x20 + -0x80) = 0x46298b;\n            iVar3 = (*pcVar1)(*(*0x20 + 0x20));\n            return iVar3;\n        }\n        unaff_RBX = *(*0x20 + 0x28);\n        if (unaff_RBX == 0) {\n            if ((*(*0x20 + 0x18) == 0x6b5900) && (iVar3 = *(*(*0x20 + 0x20) + 0x10),  iVar3 < 0x8000)) {\n                if (iVar3 < 1) {\n                    iVar3 = 1;\n                }\n            }\n            else {\n                iVar3 = 0x8000;\n            }\n            *(*0x20 + -0x50) = iVar3;\n            *(*0x20 + -0x80) = 0x462957;\n            unaff_RBX = fcn.00445140(iVar3);\n            unaff_RDI = *(*0x20 + -0x50);\n            uVar5 = unaff_RDI;\n        }\n        else {\n            unaff_RDI = *(*0x20 + 0x38);\n            uVar5 = *(*0x20 + 0x30);\n        }\n        *(*0x20 + -0x20) = uVar5;\n        *(*0x20 + -0x10) = unaff_RBX;\n        *(*0x20 + -0x28) = unaff_RDI;\n        iVar3 = 0;\n        do {\n            *(*0x20 + -0x30) = iVar3;\n            unaff_RSI = *(*0x20 + 0x18);\n            arg3 = *(unaff_RSI + 0x18);\n            *(*0x20 + -0x80) = 0x4629f2;\n            arg1 = (*arg3)();\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = uVar5;\n            if (arg1 < 1) {\n                iVar3 = *(*0x20 + -0x30);\n            }\n            else {\n                if (*(*0x20 + -0x28) < arg1) goto code_r0x00462afd;\n                *(*0x20 + -0x48) = arg1;\n                pcVar1 = *(*(*0x20 + 8) + 0x18);\n                iVar7 = *(*0x20 + -0x10);\n                *(*0x20 + -0x80) = 0x462a44;\n                iVar4 = (*pcVar1)(arg1);\n                if (iVar4 < 0) {\n                    iVar6 = *(*0x20 + -0x48);\ncode_r0x00462a5a:\n                    if (iVar7 == 0) {\n                        iVar7 = *0x735410;\n                    }\n                    iVar4 = 0;\n                }\n                else {\n                    iVar6 = *(*0x20 + -0x48);\n                    if (iVar6 < iVar4) goto code_r0x00462a5a;\n                }\n                iVar3 = *(*0x20 + -0x30) + iVar4;\n                if (iVar7 != 0) {\n                    return iVar3;\n                }\n                if (iVar6 != iVar4) {\n                    return iVar3;\n                }\n                unaff_RBX = *(*0x20 + -0x40);\n            }\n            if (unaff_RBX != 0) {\n                if (*0x7353b0 == unaff_RBX) {\n                    *(*0x20 + -0x38) = iVar3;\n                    *(*0x20 + -0x80) = 0x462abc;\n                    cVar2 = fcn.00402fa0(*0x7353b8);\n                    if (cVar2 == '\\0') {\n                        iVar3 = *(*0x20 + -0x38);\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x38);\n                    }\n                }\n                return iVar3;\n            }\n            unaff_RBX = *(*0x20 + -0x10);\n            unaff_RDI = *(*0x20 + -0x28);\n            uVar5 = *(*0x20 + -0x20);\n        } while( true );\n    }\n    goto code_r0x00462b06;\ncode_r0x00462afd:\n    *(*0x20 + -0x80) = 0x462b05;\n    in_RAX = fcn.0045c620(arg1, *(*0x20 + -0x28));\ncode_r0x00462b06:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + 0x18) = arg1;\n    *(puVar8 + 0x20) = unaff_RDI;\n    *(puVar8 + 0x28) = unaff_RSI;\n    *(puVar8 + 0x30) = arg3;\n    *(puVar8 + 0x38) = arg4;\n    *(puVar8 + -8) = 0x462b2e;\n    fcn.00459ea0();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    arg1 = *(puVar8 + 0x18);\n    unaff_RDI = *(puVar8 + 0x20);\n    unaff_RSI = *(puVar8 + 0x28);\n    arg3 = *(puVar8 + 0x30);\n    arg4 = *(puVar8 + 0x38);\n    *0x20 = puVar8;\n    goto code_r0x00462840;\n}\n",
        "token_count": 1788
    },
    "00463c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00463c80(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar6;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x51) = in_R9B;\n            *(*0x20 + -0x52) = in_R10B;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 8) = in_RAX;\n                iVar2 = unaff_RSI + unaff_RBX + 2;\n                *(*0x20 + -0x48) = iVar2;\n                *(*0x20 + -0xa0) = 0x463d06;\n                in_RAX = fcn.00445140(iVar2);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0xa0) = 0x463d28;\n                    fcn.0045cee0(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = *(*0x20 + -0x48);\n            }\n            arg1_00 = unaff_RBX + 1;\n            iVar2 = in_RAX;\n            uVar4 = unaff_RBX;\n            if (arg1 < arg1_00) {\n                *(*0x20 + -0xa0) = 0x463d85;\n                iVar2 = fcn.00445220(unaff_RBX);\n                arg1_00 = in_RAX + 1;\n                uVar4 = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = unaff_RBX;\n            }\n            *(iVar2 + uVar4) = in_R8B;\n            while( true ) {\n                *(*0x20 + -0x28) = arg1_00;\n                if (uVar6 < 1) {\n                    if (arg1 < arg1_00 + 1) {\n                        *(*0x20 + -0xa0) = 0x46404a;\n                        iVar2 = fcn.00445220(arg1_00);\n                        in_R8B = *(*0x20 + 0x30);\n                        arg1_00 = *(*0x20 + -0x28);\n                    }\n                    *(iVar2 + arg1_00) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x30) = uVar6;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    unaff_RBX = 1;\n                    unaff_RSI = uVar6;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0xa0) = 0x463e25;\n                    uVar1 = fcn.004630a0();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    arg1_00 = *(*0x20 + -0x28);\n                    iVar2 = *(*0x20 + -0x20);\n                    unaff_RBX = uVar6;\n                }\n                *(*0x20 + -0x50) = unaff_RBX;\n                if ((unaff_RBX == 1) && (uVar1 == 0xfffd)) {\n                    uVar6 = arg1_00 + 2;\n                    uVar4 = arg1_00;\n                    if (arg1 < uVar6) {\n                        *(*0x20 + -0x40) = uVar6;\n                        *(*0x20 + -0xa0) = 0x463ea5;\n                        iVar2 = fcn.00445220(arg1_00);\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x40);\n                        arg1 = arg1_00;\n                    }\n                    *(iVar2 + uVar4) = 0x785c;\n                    arg1_01 = uVar4 + 3;\n                    uVar7 = *((*unaff_RDI >> 4) + 0x4aea49);\n                    iVar3 = iVar2;\n                    if (arg1 < arg1_01) {\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x463f1f;\n                        iVar3 = fcn.00445220(uVar6);\n                        arg1_01 = iVar2 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = uVar6;\n                    }\n                    *(uVar4 + 2 + iVar3) = uVar7;\n                    arg1_00 = arg1_01 + 1;\n                    uVar7 = *((*unaff_RDI & 0xf) + 0x4aea49);\n                    iVar2 = iVar3;\n                    uVar6 = arg1_01;\n                    if (arg1 < arg1_00) {\n                        *(*0x20 + -0x28) = arg1_01;\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x463f9e;\n                        iVar2 = fcn.00445220(arg1_01);\n                        arg1_00 = iVar3 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar6 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = arg1_01;\n                    }\n                    *(iVar2 + uVar6) = uVar7;\n                }\n                else {\n                    *(*0x20 + -0xa0) = 0x463ff4;\n                    iVar2 = fcn.00464100(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    unaff_RBX = *(*0x20 + -0x50);\n                }\n                if (unaff_RSI < unaff_RBX) break;\n                uVar6 = unaff_RSI - unaff_RBX;\n                unaff_RDI = unaff_RDI + (unaff_RBX & -uVar6 >> 0x3f);\n            }\n            *(*0x20 + -0xa0) = 0x464085;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045c660(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8B;\n        puVar5[0x31] = in_R9B;\n        puVar5[0x32] = in_R10B;\n        *(puVar5 + -8) = 0x4640b3;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8B = puVar5[0x30];\n        in_R9B = puVar5[0x31];\n        in_R10B = puVar5[0x32];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2685
    },
    "00469a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00469a00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = (**(in_RAX + 0x18))();\n    iVar2 = fcn.0040b560(0);\n    fcn.0045cee0(unaff_RDI);\n    arg1_00 = (**(in_RAX + 0x18))();\n    iVar3 = fcn.00445140(arg1_00);\n    piVar4 = fcn.0040bf40();\n    *piVar4 = in_RAX;\n    if (*0x789810 == 0) {\n        piVar4[1] = unaff_RBX;\n    }\n    else {\n        piVar4 = fcn.0045c200(unaff_RBX);\n    }\n    piVar4[2] = iVar1;\n    piVar4[4] = unaff_RDI;\n    piVar4[5] = unaff_RDI;\n    if (*0x789810 == 0) {\n        piVar4[3] = iVar2;\n    }\n    else {\n        piVar4 = fcn.0045c200(iVar2);\n    }\n    piVar4[7] = arg1_00;\n    piVar4[8] = arg1_00;\n    if (*0x789810 == 0) {\n        piVar4[6] = iVar3;\n    }\n    else {\n        fcn.0045c200(iVar3);\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "0046a340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046a340(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int64_t iStackX8;\n    int64_t iStackX16;\n    int64_t iStackX24;\n    uint64_t uStackX32;\n    \n    uVar10 = uStackX32 & 0xf;\n    do {\n        if (uVar10 == 0) {\ncode_r0x0046a35d:\n            uVar10 = 0;\n            do {\n                puVar1 = iStackX16 + uVar10;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                puVar2 = iStackX24 + uVar10;\n                uVar7 = puVar2[1];\n                uVar8 = puVar2[2];\n                uVar9 = puVar2[3];\n                puVar3 = iStackX8 + uVar10;\n                *puVar3 = *puVar1 ^ *puVar2;\n                puVar3[1] = uVar4 ^ uVar7;\n                puVar3[2] = uVar5 ^ uVar8;\n                puVar3[3] = uVar6 ^ uVar9;\n                uVar10 = uVar10 + 0x10;\n            } while (uStackX32 != uVar10);\n            return;\n        }\n        if ((uStackX32 & 7) == 0) {\n            uStackX32 = uStackX32 - 8;\n            *(iStackX8 + uStackX32) = *(iStackX16 + uStackX32) ^ *(iStackX24 + uStackX32);\n            if (uStackX32 < 0x10) {\n                return;\n            }\n            goto code_r0x0046a35d;\n        }\n        do {\n            uStackX32 = uStackX32 - 1;\n            *(iStackX8 + uStackX32) = *(iStackX16 + uStackX32) ^ *(iStackX24 + uStackX32);\n        } while ((uStackX32 & 7) != 0);\n        if (uStackX32 == 0) {\n            return;\n        }\n        uVar10 = uStackX32 & 0xf;\n    } while( true );\n}\n",
        "token_count": 591
    },
    "0046acc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0046acc0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint *noname_1;\n    ulong uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [8];\n    uint uStack48;\n    uint uStack44;\n    uchar auStack40 [12];\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    while (auStack40 + 8 < *(unaff_R14 + 0x10) || auStack40 + 8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    noname_1 = fcn.0040bf40();\n    arg1_00 = unaff_RBX + 0x1c;\n    uVar1 = fcn.00445140(arg1_00);\n    uVar2 = fcn.00445140(arg1_00);\n    _auStack56 = CONCAT88(arg1_00, uVar1);\n    _auStack40 = CONCAT88(uVar2, arg1_00);\n    auStack24 = CONCAT88(arg1_00, arg1_00);\n    if (*0x789810 == 0) {\n        auStack56._0_4_ = uVar1;\n        auStack56._4_4_ = uVar1 >> 0x20;\n        uStack48 = arg1_00;\n        uStack44 = arg1_00 >> 0x20;\n        *noname_1 = auStack56._0_4_;\n        noname_1[1] = auStack56._4_4_;\n        noname_1[2] = uStack48;\n        noname_1[3] = uStack44;\n        auStack40._8_4_ = uVar2;\n        uStack28 = uVar2 >> 0x20;\n        noname_1[4] = uStack48;\n        noname_1[5] = uStack44;\n        noname_1[6] = auStack40._8_4_;\n        noname_1[7] = uStack28;\n        noname_1[8] = uStack48;\n        noname_1[9] = uStack44;\n        noname_1[10] = uStack48;\n        noname_1[0xb] = uStack44;\n    }\n    else {\n        fcn.0040fb00(auStack56);\n    }\n    fcn.0046a880(arg1, noname_1, *(noname_1 + 4), *(noname_1 + 6));\n    return 0x6b6c30;\n}\n",
        "token_count": 612
    },
    "0046afa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046afa0(int64_t arg1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    ulong uVar6;\n    uint *puVar7;\n    ulong *puVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x7895a0 == '\\0') {\n                *(*0x20 + -0x88) = 0x46b1d7;\n                uVar5 = fcn.0046acc0(arg1);\n                return uVar5;\n            }\n            *(*0x20 + -0x58) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x88) = 0x46afe6;\n            uVar5 = fcn.0040bf40();\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x60) = *(*0x20 + -0x58) + 0x1c;\n            *(*0x20 + -0x88) = 0x46b008;\n            uVar5 = fcn.00445140(*(*0x20 + -0x58) + 0x1c);\n            *(*0x20 + -0x48) = uVar5;\n            unaff_RBX = *(*0x20 + -0x60);\n            *(*0x20 + -0x88) = 0x46b025;\n            uVar6 = fcn.00445140(unaff_RBX);\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x38) = *(*0x20 + -0x48);\n            uVar5 = *(*0x20 + -0x60);\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x18) = uVar5;\n            *(*0x20 + -0x10) = uVar5;\n            if (*0x789810 == 0) {\n                uVar2 = *(*0x20 + -0x34);\n                uVar3 = *(*0x20 + -0x30);\n                uVar4 = *(*0x20 + -0x2c);\n                puVar8 = *(*0x20 + -0x40);\n                *puVar8 = *(*0x20 + -0x38);\n                *(puVar8 + 4) = uVar2;\n                *(puVar8 + 1) = uVar3;\n                *(puVar8 + 0xc) = uVar4;\n                uVar2 = *(*0x20 + -0x24);\n                uVar3 = *(*0x20 + -0x20);\n                uVar4 = *(*0x20 + -0x1c);\n                *(puVar8 + 2) = *(*0x20 + -0x28);\n                *(puVar8 + 0x14) = uVar2;\n                *(puVar8 + 3) = uVar3;\n                *(puVar8 + 0x1c) = uVar4;\n                uVar2 = *(*0x20 + -0x14);\n                uVar3 = *(*0x20 + -0x10);\n                uVar4 = *(*0x20 + -0xc);\n                *(puVar8 + 4) = *(*0x20 + -0x18);\n                *(puVar8 + 0x24) = uVar2;\n                *(puVar8 + 5) = uVar3;\n                *(puVar8 + 0x2c) = uVar4;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x40);\n                *(*0x20 + -0x88) = 0x46b0a5;\n                fcn.0040fb00(*0x20 + -0x38);\n                puVar8 = *(*0x20 + -0x40);\n            }\n            arg1 = *(*0x20 + -0x58);\n            if (arg1 == 0x10) {\n                uVar5 = 10;\n            }\n            else if (arg1 == 0x18) {\n                uVar5 = 0xc;\n            }\n            else if (arg1 == 0x20) {\n                uVar5 = 0xe;\n            }\n            else {\n                uVar5 = 0;\n            }\n            if (arg1 != 0) {\n                arg1 = puVar8[1];\n                unaff_RBX = *puVar8;\n                if (arg1 != 0) {\n                    arg1 = puVar8[4];\n                    uVar6 = puVar8[3];\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x80) = uVar5;\n                        *(*0x20 + -0x78) = *(*0x20 + 8);\n                        *(*0x20 + -0x70) = unaff_RBX;\n                        *(*0x20 + -0x68) = uVar6;\n                        *(*0x20 + -0x88) = 0x46b12a;\n                        fcn.0046b640();\n                        if ((*0x7895a0 != '\\0') && (*0x7895a1 != '\\0')) {\n                            *(*0x20 + -0x88) = 0x46b15c;\n                            puVar7 = fcn.0040bf40();\n                            if (*0x789810 == 0) {\n                                puVar1 = *(*0x20 + -0x40);\n                                uVar2 = puVar1[1];\n                                uVar3 = puVar1[2];\n                                uVar4 = puVar1[3];\n                                *puVar7 = *puVar1;\n                                puVar7[1] = uVar2;\n                                puVar7[2] = uVar3;\n                                puVar7[3] = uVar4;\n                                uVar2 = puVar1[5];\n                                uVar3 = puVar1[6];\n                                uVar4 = puVar1[7];\n                                puVar7[4] = puVar1[4];\n                                puVar7[5] = uVar2;\n                                puVar7[6] = uVar3;\n                                puVar7[7] = uVar4;\n                                uVar2 = puVar1[9];\n                                uVar3 = puVar1[10];\n                                uVar4 = puVar1[0xb];\n                                puVar7[8] = puVar1[8];\n                                puVar7[9] = uVar2;\n                                puVar7[10] = uVar3;\n                                puVar7[0xb] = uVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = puVar7;\n                                *(*0x20 + -0x88) = 0x46b19b;\n                                fcn.0040fb00(*(*0x20 + -0x40));\n                            }\n                            return 0x6b6c90;\n                        }\n                        return 0x6b6c60;\n                    }\n                    *(*0x20 + -0x88) = 0x46b1e8;\n                    fcn.0045c5a0(0);\n                }\n                *(*0x20 + -0x88) = 0x46b1ef;\n                fcn.0045c5a0(arg1);\n            }\n            *(*0x20 + -0x88) = 0x46b1f6;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x46b20b;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2146
    },
    "0046d040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0046d040(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xb0) = 0x46d078;\n            uVar1 = fcn.0046fd80();\n            iVar3 = *0x734be8;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0046d08f;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x0046d08f:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xb0) = 0x46d0c5;\n                pcVar2 = fcn.0040ea40(*(*0x20 + 8));\n                unaff_RBX = *0x735620;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xb0) = 0x46d14c;\n                    uVar1 = fcn.0045e680();\n                    goto code_r0x0046d14c;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xb0) = 0x46d0ef;\n                fcn.00448ba0(*0x735628);\n                *(*0x20 + -0xb0) = 0x46d0f4;\n                iVar3 = fcn.0046fd80();\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x0046d10d;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x0046d10d:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xb0) = 0x46d125;\n                    uVar1 = fcn.0045e620();\ncode_r0x0046d14c:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x58) = iVar3;\n                        *(*0x20 + -0xb0) = 0x46d165;\n                        uVar1 = fcn.0046fee0();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xb0) = 0x46d17e;\n                        uVar1 = fcn.0040bf40();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xb0) = 0x46d190;\n                        uVar1 = fcn.00409700();\n                        uVar5 = 0x6b5ac0;\n                        puVar4 = *(*0x20 + -0x18);\n                        *puVar4 = 0x6b5ac0;\n                        if (*0x789810 == 0) {\n                            puVar4[1] = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x46d1ba;\n                            fcn.0045c100(0x6b5ac0, puVar4, param_3, param_4);\n                        }\n                        puVar4[3] = *(*0x20 + -0x48);\n                        if (*0x789810 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + 8);\n                            *(*0x20 + -0xb0) = 0x46d1eb;\n                            fcn.0045c220(uVar5, puVar4, param_3, param_4);\n                        }\n                        uVar5 = 0x4ac9f1;\n                        arg4 = 2;\n                        *(*0x20 + -0xb0) = 0x46d21b;\n                        uVar1 = fcn.00448d20(0xf, puVar4, 0x4ac9f1, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4ae7bf;\n                        if (*0x789810 == 0) {\n                            *(iVar3 + 0x20) = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x46d23f;\n                            fcn.0045c100(iVar3, puVar4, uVar5, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x60) = uVar1;\n                    *(*0x20 + -0xb0) = 0x46d269;\n                    puVar4 = fcn.0040bf40();\n                    uVar1 = *(*0x20 + -0x48);\n                    puVar4[1] = uVar1;\n                    if (*0x789810 == 0) {\n                        *puVar4 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xb0) = 0x46d298;\n                        puVar4 = fcn.0045c220(uVar1, *(*0x20 + 8), param_3, param_4);\n                    }\n                    puVar4[2] = *(*0x20 + -0x60);\n                    return puVar4;\n                }\n                *(*0x20 + -0xb0) = 0x46d2d7;\n                fcn.0045c5a0(0);\n            }\n            *(*0x20 + -0xb0) = 0x46d2e5;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x46d2f5;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1676
    },
    "0046d320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0046d320(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x80) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            for (iVar4 = 0; iVar4 < arg1; iVar4 = iVar4 + 1) {\n                if (*(unaff_RBX + iVar4) == '\\0') {\n                    arg1 = 0;\n                    iVar6 = 0x6b5ac0;\n                    iVar4 = 0;\n                    goto code_r0x0046d3c6;\n                }\n            }\n            *(*0x20 + -0xa0) = arg1 + 1;\n            *(*0x20 + -200) = 0x46d3a5;\n            iVar4 = fcn.00444fe0(arg1);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg1 = *(*0x20 + -0xa0);\n            iVar6 = 0;\n            in_RAX = *(*0x20 + 8);\ncode_r0x0046d3c6:\n            if (iVar6 != 0) {\n                iVar4 = 0;\n                goto code_r0x0046d3e0;\n            }\n            if (arg1 != 0) {\n                iVar6 = 0;\ncode_r0x0046d3e0:\n                if (iVar6 != 0) {\n                    return NULL;\n                }\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -200) = 0x46d3f8;\n                iVar6 = iVar4;\n                uVar1 = fcn.0045e6c0();\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x98) = iVar4;\n                    *(*0x20 + -200) = 0x46d416;\n                    uVar2 = fcn.0046fee0();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x88) = iVar4;\n                    *(*0x20 + -200) = 0x46d42c;\n                    uVar2 = fcn.0040bf40();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -200) = 0x46d43b;\n                    uVar2 = fcn.00409700();\n                    uVar1 = 0x6b5ac0;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x6b5ac0;\n                    if (*0x789810 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -200) = 0x46d465;\n                        fcn.0045c100(0x6b5ac0, puVar3, iVar6, in_R9);\n                    }\n                    uVar2 = *(*0x20 + -0x80);\n                    puVar3[3] = uVar2;\n                    if (*0x789810 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -200) = 0x46d496;\n                        fcn.0045c280(uVar1, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -0xd0) = unaff_RBP;\n                    *(*0x20 + -200) = 0x46d4af;\n                    fcn.0045c84b();\n                    *(*0x20 + -0x68) = 0x4ae7b0;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4ae445;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4ac9f1;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -200) = 0x46d552;\n                    uVar1 = fcn.00448900(6);\n                    iVar4 = *(*0x20 + -0x78);\n                    *(iVar4 + 0x28) = *0x20 + -0x68;\n                    if (*0x789810 == 0) {\n                        *(iVar4 + 0x20) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -200) = 0x46d573;\n                        fcn.0045c100(iVar4, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x90) = uVar1;\n                *(*0x20 + -200) = 0x46d59d;\n                puVar3 = fcn.0040bf40();\n                if (*0x789810 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -200) = 0x46d5c5;\n                    puVar3 = fcn.0045c220(uVar2, *(*0x20 + 8), iVar6, in_R9);\n                }\n                puVar3[2] = *(*0x20 + -0x80);\n                if (*0x789810 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -200) = 0x46d5f6;\n                    puVar3 = fcn.0045c220(uVar2, *(*0x20 + 0x10), iVar6, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x90);\n                return puVar3;\n            }\n            *(*0x20 + -200) = 0x46d635;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x46d64a;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1871
    },
    "0046d660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046d660(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00462020();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x46d7c0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.0046d040();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00457020(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 351
    },
    "0046d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046d820(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00462020();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x46d9e0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.0046d660();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.0046d320(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00457020(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 394
    },
    "0046dba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046dba0(void)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t arg1;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t arg1_01;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    ppcStack16 = NULL;\n    iStack40 = 0;\n    iVar1 = fcn.00472300();\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    auStack56 = CONCAT88(iVar1, 0x46de40);\n    ppcStack16 = auStack56;\n    arg2 = fcn.00445140(0x32);\n    arg1 = 0;\n    uVar5 = 0;\n    arg1_01 = 0x32;\n    arg1_00 = 0;\n    do {\n        if (0xffffff < arg1) {\ncode_r0x0046ddf2:\n            fcn.0045c5a0(0x1000000);\n            fcn.004307e0();\n            return iStack40;\n        }\n        uVar6 = arg1_00;\n        if (*(iVar1 + arg1 * 2) == 0) {\n            if (arg1 <= uVar5) {\n                auStack32 = CONCAT88(arg1_01, arg1_00);\n                iStack40 = arg2;\n                (**ppcStack16)();\n                return iStack40;\n            }\n            if (arg1 < uVar5) {\n                fcn.0045c660(arg1);\n                goto code_r0x0046ddf2;\n            }\n            uVar2 = fcn.0046cd80(-(uVar5 - 0x1000000));\n            uVar3 = fcn.004493a0(arg1 - uVar5);\n            uVar6 = arg1_00 + 1;\n            if (arg1_01 < uVar6) {\n                arg1_01 = arg1_00;\n                iVar4 = fcn.00445220(arg1_00);\n                uVar6 = arg2 + 1;\n                arg2 = iVar4;\n            }\n            iVar4 = arg1_00 * 0x10;\n            *(arg2 + 8 + iVar4) = uVar2;\n            if (*0x789810 == 0) {\n                *(arg2 + iVar4) = uVar3;\n            }\n            else {\n                fcn.0045c100(arg1_01, arg2, arg2 + iVar4, in_R9);\n            }\n            uVar5 = arg1 + 1;\n        }\n        arg1 = arg1 + 1;\n        arg1_00 = uVar6;\n    } while( true );\n}\n",
        "token_count": 727
    },
    "0046e960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * fcn.0046e960(int64_t param_1)\n\n{\n    char *pcVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    pcVar1 = fcn.0046e820();\n    if (param_1 == 0) {\n        if (((2 < unaff_RBX) && ((*pcVar1 == '\\\\' || (*pcVar1 == '/')))) && ((pcVar1[1] == '\\\\' || (pcVar1[1] == '/'))))\n        {\n            return NULL;\n        }\n        return pcVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 184
    },
    "0046ea20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint8_t * fcn.0046ea20(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong in_RAX;\n    uint8_t *puVar3;\n    uint8_t *in_RDX;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                return NULL;\n            }\n            if (2 < unaff_RDI) {\n                uVar1 = *arg1;\n                in_RDX = uVar1;\n                if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                    uVar1 = arg1[1];\n                    in_RDX = uVar1;\n                    if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                        return arg1;\n                    }\n                }\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RDI < 2) || (arg1[1] != 0x3a)) {\n                *(*0x20 + -0xa8) = 0x46ebe5;\n                fcn.0046e960();\n                if (arg1 != NULL) {\n                    return NULL;\n                }\n                cVar2 = **(*0x20 + 0x18);\n                if ((cVar2 != '\\\\') && (cVar2 != '/')) {\n                    *(*0x20 + -0xa8) = 0x46ec6c;\n                    fcn.00448c40(unaff_RBX, in_RDX, *(*0x20 + 0x18), *(*0x20 + 0x20));\n                    *(*0x20 + -0xa8) = 0x46ec71;\n                    puVar3 = fcn.0046e820();\n                    return puVar3;\n                }\n                if (0x1 < unaff_RBX) {\n                    *(*0x20 + -0xa8) = 0x46ec33;\n                    fcn.00448ba0(2);\n                    *(*0x20 + -0xa8) = 0x46ec38;\n                    puVar3 = fcn.0046e820();\n                    return puVar3;\n                }\n                *(*0x20 + -0xa8) = 0x46ecc5;\n                in_RDX = unaff_RBX;\n                fcn.0045c5e0(2, unaff_RBX);\n            }\n            else {\n                if (unaff_RDI == 2) {\n                    return NULL;\n                }\n                if ((arg1[2] == 0x5c) || (arg1[2] == 0x2f)) {\n                    return arg1;\n                }\n                *(*0x20 + -0xa8) = 0x46eafd;\n                puVar3 = fcn.0046e960();\n                if (arg1 != NULL) {\n                    return NULL;\n                }\n                in_RDX = *(*0x20 + 0x18);\n                uVar5 = *in_RDX;\n                if (uVar5 - 0x61 < 0x1a) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                if (unaff_RBX != NULL) {\n                    uVar6 = *puVar3;\n                    if (uVar6 - 0x61 < 0x1a) {\n                        uVar6 = uVar6 - 0x20;\n                    }\n                    if (uVar6 == uVar5) {\n                        *(*0x20 + -0xa8) = 0x46eb73;\n                        fcn.00448c40(unaff_RBX, *(*0x20 + 0x20), in_RDX + 2, *(*0x20 + 0x20) + -2);\n                        *(*0x20 + -0xa8) = 0x46eb78;\n                        puVar3 = fcn.0046e820();\n                        return puVar3;\n                    }\n                    *(*0x20 + -0xa8) = 0x46eb98;\n                    puVar3 = fcn.0046e820();\n                    return puVar3;\n                }\n            }\n            *(*0x20 + -0xa8) = 0x46eccf;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x46ece9;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1336
    },
    "004705a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.004705a0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint auStack32 [2];\n    ulong uStack24;\n    uint uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == 2) {\n        uStack24 = 0;\n        auStack32[0] = 0x18;\n        uStack16 = 1;\n        iVar1 = fcn.004714e0(auStack32);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *in_RAX = 0;\n        in_RAX[1] = 0;\n        return 0;\n    }\n    return 0x6b5ac0;\n}\n",
        "token_count": 230
    },
    "00479080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00479080(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *arg1;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    uint64_t uVar7;\n    ulong arg4;\n    ulong arg3;\n    int64_t unaff_R14;\n    \ncode_r0x00479080:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x210 && *0x20 + -0x210 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x290;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + -0x228) = in_RAX;\n        *(*0x20 + -0x298) = 0x4790bf;\n        fcn.00445140(0);\n        *(*0x20 + -0x2a0) = *0x20 + -8;\n        *(*0x20 + -0x298) = 0x4790d3;\n        iVar2 = fcn.0045c7b8();\n        unaff_RBP = *(*0x20 + -0x2a0);\n        arg1_00 = 0x100;\n        arg1 = *0x20 + -0x220;\n        piVar5 = NULL;\n        uVar7 = 0;\n        arg1_01 = 0;\n        do {\n            *(*0x20 + -0x248) = uVar7;\n            *(*0x20 + -0x240) = arg1_01;\n            *(*0x20 + -0x20) = iVar2;\n            *(*0x20 + -0x24c) = piVar5;\n            *(*0x20 + -0x250) = arg1_00;\n            while( true ) {\n                if (arg1_00 == 0) goto code_r0x004792e5;\n                *(*0x20 + -0x238) = arg1_00;\n                *(*0x20 + -0x18) = arg1;\n                arg4 = 0;\n                arg3 = 0;\n                *(*0x20 + -0x298) = 0x479245;\n                iVar2 = fcn.00470d00(arg1, arg1, 0, 0);\n                if (iVar2 == 0) break;\n                if (iVar2 == 0) {\ncode_r0x004792b4:\n                    return *(*0x20 + -0x20);\n                }\n                if ((*(iVar2 + 8) != 0x4a1100) || (*piVar5 != 0xea)) {\n                    if ((iVar2 != 0) && ((*(iVar2 + 8) == 0x4a1100 && (*piVar5 == 0x103)))) {\n                        return *(*0x20 + -0x20);\n                    }\n                    goto code_r0x004792b4;\n                }\n                *(*0x20 + -0x250) = *(*0x20 + -0x238) << 1;\n                *(*0x20 + -0x298) = 0x4791f5;\n                arg1 = fcn.00445140(*(*0x20 + -0x238) << 1 & 0xffffffff);\n                arg1_00 = *(*0x20 + -0x250);\n                piVar5 = *(*0x20 + -0x24c);\n            }\n            arg1_00 = *(*0x20 + -0x250);\n            uVar7 = *(*0x20 + -0x238);\n            if (uVar7 < arg1_00) goto code_r0x004792e0;\n            *(*0x20 + -0x298) = 0x47914a;\n            uVar3 = fcn.0046fe60(uVar7);\n            arg1_01 = *(*0x20 + -0x248);\n            uVar7 = arg1_01 + 1;\n            if (*(*0x20 + -0x240) < uVar7) {\n                *(*0x20 + -0x230) = arg1_00;\n                *(*0x20 + -0x10) = uVar3;\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x298) = 0x479188;\n                iVar2 = fcn.00445220(arg1_01);\n                uVar7 = iVar1 + 1;\n                arg1_00 = *(*0x20 + -0x230);\n                uVar3 = *(*0x20 + -0x10);\n                uVar4 = *(*0x20 + -0x248);\n            }\n            else {\n                iVar2 = *(*0x20 + -0x20);\n                uVar4 = arg1_01;\n                arg1_01 = *(*0x20 + -0x240);\n            }\n            *(iVar2 + 8 + uVar4 * 0x10) = arg1_00;\n            if (*0x789810 == 0) {\n                *(iVar2 + uVar4 * 0x10) = uVar3;\n            }\n            else {\n                *(*0x20 + -0x298) = 0x4791d0;\n                fcn.0045c100(arg1_01, iVar2, arg3, arg4);\n            }\n            piVar5 = *(*0x20 + -0x24c) + 1;\n            arg1_00 = *(*0x20 + -0x238);\n            arg1 = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x004792ed;\ncode_r0x004792e0:\n    *(*0x20 + -0x298) = 0x4792e5;\n    fcn.0045c620(arg1_00, uVar7);\ncode_r0x004792e5:\n    *(*0x20 + -0x298) = 0x4792ec;\n    in_RAX = fcn.0045c5a0(arg1_00);\ncode_r0x004792ed:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x4792f7;\n    fcn.00459ea0();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x00479080;\n}\n",
        "token_count": 1496
    },
    "00479520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00479576)\n// WARNING: Removing unreachable block (ram,0x004795cc)\n// WARNING: Removing unreachable block (ram,0x00479586)\n// WARNING: Removing unreachable block (ram,0x004795b7)\n// WARNING: Removing unreachable block (ram,0x0047958b)\n// WARNING: Removing unreachable block (ram,0x00479597)\n// WARNING: Removing unreachable block (ram,0x00479603)\n\nulong fcn.00479520(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00479320(arg1, auStack24, 0x40);\n    return 0;\n}\n",
        "token_count": 211
    },
    "00479640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00479740)\n// WARNING: Removing unreachable block (ram,0x00479749)\n// WARNING: Removing unreachable block (ram,0x00479752)\n\nulong fcn.00479640(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *noname_1;\n    ulong arg1_00;\n    ulong uVar1;\n    int64_t iVar2;\n    uchar *arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg1_02;\n    uchar *unaff_RDI;\n    ulong *puVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x7e8 && *0x20 + -0x7e8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x868;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x828) = in_RAX;\n            *(*0x20 + -0x870) = 0x479685;\n            noname_1 = fcn.0046fd80();\n            if (unaff_RDI == NULL) {\n                unaff_RBX = arg1;\n                if (arg1 != 0) {\n                    unaff_RDI = NULL;\n                    goto code_r0x004796a0;\n                }\n            }\n            else {\n                noname_1 = NULL;\ncode_r0x004796a0:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = noname_1;\n                puVar4 = *0x20 + -0x820;\n                for (iVar2 = 0x100; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + 1;\n                }\n                *(*0x20 + -0x830) = 0;\n                arg1_01 = *0x20 + -0x820;\n                *(*0x20 + -0x870) = 0x4796ed;\n                iVar2 = fcn.00479ae0(arg1_01, noname_1, 0, 0);\n                if (((iVar2 != 0) && (*(iVar2 + 8) == 0x4a1100)) && (*noname_1 == 2)) {\n                    *(*0x20 + -0x870) = 0x479728;\n                    fcn.00479940();\n                    if (arg1_01 != NULL) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x870) = 0x479736;\n                    fcn.0046fd80();\n                    return 0;\n                }\n                *(*0x20 + -0x18) = 0;\n                arg1_02 = 0x400;\n                unaff_RDI = *0x20 + -0x820;\n                while( true ) {\n                    uVar1 = 0x4a1100;\n                    if (((iVar2 == 0) || (*(iVar2 + 8) != 0x4a1100)) ||\n                       ((*noname_1 != 0xea || (*(*0x20 + -0x830) <= arg1_02)))) {\n                        if (iVar2 == 0) {\n                            *(*0x20 + -0x870) = 0x4798d0;\n                            uVar1 = fcn.0046fe60(arg1_02);\n                            return uVar1;\n                        }\n                        return 0;\n                    }\n                    unaff_RBX = *(*0x20 + -0x830);\n                    *(*0x20 + -0x870) = 0x47988a;\n                    arg1_00 = fcn.00445140(unaff_RBX);\n                    if (*(*0x20 + -0x830) == 0) break;\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x82c) = *(*0x20 + -0x830);\n                    noname_1 = *(*0x20 + -0x20);\n                    *(*0x20 + -0x870) = 0x479832;\n                    iVar2 = fcn.00479ae0(arg1_00, uVar1, 0, *(*0x20 + -0x18));\n                    arg1_02 = *(*0x20 + -0x82c);\n                    unaff_RDI = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x870) = 0x4798eb;\n                fcn.0045c5a0(0);\n                *(*0x20 + -0x870) = 0x4798f5;\n                fcn.0045c5a0(unaff_RBX);\n            }\n            *(*0x20 + -0x870) = 0x4798ff;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x479914;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1340
    },
    "0047eae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047eae0(void)\n\n{\n    uchar uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar7;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x68) = 0x47eb05;\n            iVar3 = fcn.0047ea20();\n            uVar4 = *(iVar3 + 0x10);\n            arg1 = *(iVar3 + 0x18);\n            if (arg1 == 0) {\n                return 0x4acb2d;\n            }\n            uVar7 = unaff_RSI;\n            if (*(iVar3 + 0x60) == NULL) {\n                iVar11 = *(*0x20 + 0x10);\n            }\n            else {\n                iVar11 = *(*0x20 + 0x10);\n                if ((*(iVar3 + 0x50) <= iVar11) && (uVar7 = *(iVar3 + 0x58),  iVar11 < *(iVar3 + 0x58))) {\n                    return **(iVar3 + 0x60);\n                }\n            }\n            unaff_RBX = *(iVar3 + 0x30);\n            piVar12 = *(iVar3 + 0x28);\n            if ((unaff_RBX == 0) || (*piVar12 != iVar11 && iVar11 <= *piVar12)) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x68) = 0x47eb88;\n                uVar9 = unaff_RBX;\n                uVar4 = fcn.0047ed80();\n                arg1 = *(*(*0x20 + -0x10) + 0x10);\n                unaff_RBX = *(*(*0x20 + -0x10) + 0x18);\n                if (uVar4 < unaff_RBX) {\n                    return *(uVar4 * 0x20 + arg1);\n                }\n                *(*0x20 + -0x68) = 0x47ec25;\n                uVar4 = unaff_RBX;\n                iVar3 = fcn.0045c5a0(unaff_RBX);\n                uVar10 = unaff_R13;\n            }\n            else {\n                uVar7 = 0;\n                uVar9 = 0x7fffffffffffffff;\n                uVar10 = unaff_RBX;\n            }\n            while (uVar8 = uVar10,  arg1_00 = uVar9,  uVar9 = uVar8 - uVar7,  unaff_RSI = uVar7,  1 < uVar9) {\n                uVar10 = uVar9 / 2 + uVar7;\n                unaff_R13 = uVar9;\n                if (unaff_RBX <= uVar10) goto code_r0x0047ed50;\n                uVar9 = piVar12[uVar10 * 2];\n                unaff_R13 = uVar10;\n                if (piVar12[uVar10 * 2] <= iVar11) {\n                    uVar7 = uVar10;\n                    uVar9 = arg1_00;\n                    uVar10 = uVar8;\n                    unaff_R13 = uVar8;\n                }\n            }\n            if (uVar7 < unaff_RBX) {\n                unaff_RSI = uVar7 * 0x10;\n                if (*(piVar12 + uVar7 * 2 + 1) < arg1) {\n                    iVar13 = *(piVar12 + uVar7 * 2 + 1) * 0x20;\n                    uVar5 = *(iVar13 + uVar4);\n                    uVar2 = *(iVar13 + 8 + uVar4);\n                    iVar11 = piVar12[uVar7 * 2];\n                    uVar1 = *(iVar13 + 0x18 + uVar4);\n                    if ((uVar7 == unaff_RBX - 1) && (*(iVar3 + 0x48) != 0)) {\n                        *(*0x20 + -0x20) = *(iVar13 + 0x10 + uVar4);\n                        *(*0x20 + -0x28) = uVar2;\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x30) = iVar11;\n                        *(*0x20 + -0x39) = uVar1;\n                        *(*0x20 + -0x38) = arg1_00;\n                        *(*0x20 + -0x68) = 0x47ecee;\n                        uVar5 = fcn.0047eec0(arg1_00);\n                        if (uVar7 != '\\0') {\n                            return uVar5;\n                        }\n                        uVar5 = *(*0x20 + -0x18);\n                    }\n                    return uVar5;\n                }\n                *(*0x20 + -0x68) = 0x47ed45;\n                fcn.0045c5a0(arg1);\n            }\n            *(*0x20 + -0x68) = 0x47ed50;\n            fcn.0045c5a0(unaff_RBX);\ncode_r0x0047ed50:\n            *(*0x20 + -0x68) = 0x47ed5b;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x47ed6b;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "0047ed80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0047ed80(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x47eda5;\n            cVar2 = fcn.0047ee80();\n            if (cVar2 == '\\0') {\n                return 0;\n            }\n            iVar1 = *(*0x20 + 8);\n            if (*(iVar1 + 0x30) < 1) goto code_r0x0047edef;\n            uVar3 = *(iVar1 + 0x18);\n            uVar4 = *(*(iVar1 + 0x28) + 8);\n            if (uVar4 < uVar3) {\n                if (*(uVar4 * 0x20 + 0x18 + *(iVar1 + 0x10)) != '\\0') {\n                    while (uVar4 = uVar4 - 1,  -1 < uVar4) {\n                        if (*(uVar4 * 0x20 + 0x18 + *(iVar1 + 0x10)) == '\\0') {\n                            return uVar4;\n                        }\n                    }\n                }\ncode_r0x0047edef:\n                uVar3 = 0;\n                while( true ) {\n                    if (*(iVar1 + 0x18) <= uVar3) {\n                        return 0;\n                    }\n                    if (*(uVar3 * 0x20 + 0x18 + *(iVar1 + 0x10)) == '\\0') break;\n                    uVar3 = uVar3 + 1;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x20) = 0x47ee57;\n            in_RAX = fcn.0045c5a0(uVar3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x47ee65;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "0047ee80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047ee80(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = *(in_RAX + 0x28);\n    if (0 < *(in_RAX + 0x30)) {\n        iVar1 = 0;\n        while( true ) {\n            if (*(iVar2 + 8) == '\\0') {\n                return 1;\n            }\n            iVar1 = iVar1 + 1;\n            if (*(in_RAX + 0x30) <= iVar1) break;\n            iVar2 = iVar2 + 0x10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00480000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00480000(int64_t arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t iVar6;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    int64_t iStack0000000000000030;\n    \n    iVar4 = in_RAX >> 0x3f;\n    if (unaff_RBX == 0) {\n        iVar3 = arg1 * 0x15180;\n        if ((((in_RAX & 3) != 0) ||\n            ((in_RAX == ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                        100 &&\n             (0xa3d70a3d70a3d6 <\n              (in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4))))) ||\n           (arg1 < 0x3c)) {\n            iVar3 = iVar3 + -0x15180;\n        }\n    }\n    else if (unaff_RBX == 1) {\n        iVar3 = arg1 * 0x15180;\n    }\n    else if (unaff_RBX == 2) {\n        uVar2 = in_RAX;\n        if (unaff_RSI < 3) {\n            uVar2 = in_RAX - 1;\n        }\n        iVar5 = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar2) >> 0x40, 0) + uVar2 >> 6) - (uVar2 >> 0x3f);\n        iVar7 = uVar2 + iVar5 * -100;\n        iVar6 = (unaff_RSI +\n                ((unaff_RSI + SUB168(SEXT816(-0x5555555555555555) * SEXT816(unaff_RSI + 9) >> 0x40, 0) + 9 >> 3) -\n                (unaff_RSI + 9 >> 0x3f)) * -0xc) * 0x1a;\n        iVar3 = iVar6 + 0x102;\n        iVar5 = ((iVar6 + SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + 0x102 >> 3) -\n                (iVar3 >> 0x3f)) + iVar7 + (iVar7 + ((iVar7 >> 0x3f) >> 0x3e) >> 2) +\n                (((iVar5 >> 0x3f) >> 0x3e) + iVar5 >> 2) + iVar5 * -2;\n        iVar5 = iVar5 + ((iVar5 + 1) / 7) * -7;\n        iVar3 = iVar5 + 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar5 + 8;\n        }\n        arg1 = arg1 - iVar3;\n        if (arg1 < 0) {\n            arg1 = arg1 + 7;\n        }\n        for (iVar3 = 1; iStack0000000000000030 = arg3,  iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n            if (((unaff_RSI == 2) && ((in_RAX & 3) == 0)) &&\n               ((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                           100 ||\n                ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n                 0xa3d70a3d70a3d7)))) {\n                iVar5 = 0x1d;\n            }\n            else {\n                if (0xc < unaff_RSI) goto code_r0x004803a7;\n                if (0xc < unaff_RSI - 1) goto code_r0x0048039d;\n                iVar5 = *(unaff_RSI * 4 + 0x71ec80) - *(unaff_RSI * 4 + 0x71ec7c);\n            }\n            if (iVar5 <= arg1 + 7) break;\n            arg1 = arg1 + 7;\n        }\n        if (0xc < unaff_RSI - 1) {\n            fcn.0045c5a0(0xd);\ncode_r0x0048039d:\n            fcn.0045c5a0(0xd);\ncode_r0x004803a7:\n            fcn.0045c5a0(0xd);\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        iVar5 = *(unaff_RSI * 4 + 0x71ec7c);\n        iVar3 = iVar5 + arg1;\n        if (((in_RAX & 3) == 0) &&\n           (((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                        100 ||\n             ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n              0xa3d70a3d70a3d7)) && (2 < unaff_RSI)))) {\n            iVar3 = arg1 + iVar5 + 1;\n        }\n        iVar3 = iVar3 * 0x15180;\n    }\n    else {\n        iVar3 = 0;\n    }\n    return (iVar3 + arg3) - arg4;\n}\n",
        "token_count": 1519
    },
    "00480800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00480890)\n// WARNING: Removing unreachable block (ram,0x004808df)\n// WARNING: Removing unreachable block (ram,0x004808ca)\n// WARNING: Removing unreachable block (ram,0x004808d3)\n// WARNING: Removing unreachable block (ram,0x00480a61)\n// WARNING: Removing unreachable block (ram,0x00480ab4)\n// WARNING: Removing unreachable block (ram,0x00480acf)\n// WARNING: Removing unreachable block (ram,0x00480ab8)\n// WARNING: Removing unreachable block (ram,0x00480aca)\n// WARNING: Removing unreachable block (ram,0x00480981)\n// WARNING: Removing unreachable block (ram,0x004809e3)\n// WARNING: Removing unreachable block (ram,0x004809d9)\n// WARNING: Removing unreachable block (ram,0x004809f0)\n// WARNING: Removing unreachable block (ram,0x00480a52)\n\nulong fcn.00480800(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uVar1;\n    uchar in_XMM15 [16];\n    uchar auStack64 [48];\n    ulong uStack16;\n    \n    while (uVar1 = SUB168(in_XMM15, 0),  auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uStack16 = 0;\n    fcn.00478f80(0x37);\n    return uVar1;\n}\n",
        "token_count": 360
    },
    "00480ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.00480ea0(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong arg1;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t unaff_RBX;\n    uint64_t noname_1;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        noname_1 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            noname_1 = *(unaff_RBX + 2);\n            uVar1 = *(unaff_RBX + 0xc);\n            arg1 = 1;\n            *(*0x20 + -0x68) = 0x480eea;\n            uVar4 = fcn.0047e4a0(1, noname_1, uVar1, 0);\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x18) = noname_1;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x480efe;\n            iVar5 = fcn.0047e0a0(arg1);\n            iVar8 = *(*0x20 + 0x10);\n            iVar5 = *(iVar8 + 4) - iVar5;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 7;\n            }\n            if (*(iVar8 + 6) - 1 < 4) {\n                iVar8 = iVar5 + *(iVar8 + 6) * 7 + -6;\n                goto code_r0x00480ffc;\n            }\n            uVar6 = *(iVar8 + 2);\n            if (((uVar6 == 2) && (uVar3 = *(*0x20 + 8),  (uVar3 & 3) == 0)) &&\n               ((uVar3 != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar3) >> 0x40, 0) + uVar3 >> 6) -\n                          (uVar3 >> 0x3f)) * 100 ||\n                (noname_1 = 0xa3d70a3d70a3d6, \n                (uVar3 * -0x70a3d70a3d70a3d7 << 0x3c | uVar3 * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n                0xa3d70a3d70a3d7)))) {\n                iVar7 = 0x1d;\ncode_r0x00480fed:\n                iVar8 = iVar5 + 0x1d;\n                if (iVar7 < iVar5 + 0x1d) {\n                    iVar8 = iVar5 + 0x16;\n                }\ncode_r0x00480ffc:\n                if (*(*0x20 + -0x20) < 0) {\n                    iVar5 = ((*(*0x20 + -0x20) << 1) >> 0x1f) + 0xdd7b17f80;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                return iVar5 + (iVar8 + -1) * 0x15180 + -0xe7791f700;\n            }\n            if (uVar6 < 0xd) {\n                uVar2 = *(uVar6 * 4 + 0x71ec80);\n                noname_1 = uVar2;\n                if (uVar6 - 1 < 0xd) {\n                    iVar7 = uVar2 - *(uVar6 * 4 + 0x71ec7c);\n                    goto code_r0x00480fed;\n                }\n                *(*0x20 + -0x68) = 0x481052;\n                fcn.0045c5a0(0xd);\n            }\n            *(*0x20 + -0x68) = 0x48105f;\n            in_RAX = fcn.0045c5a0(0xd);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = noname_1;\n        *(puVar9 + -8) = 0x48106f;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1197
    },
    "00481080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00481080(int32_t *arg1, ulong noname_1, int32_t *arg3)\n\n{\n    bool bVar1;\n    int32_t *arg1_00;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    ulong uVar7;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int32_t *piVar13;\n    int64_t unaff_RDI;\n    int32_t *in_R9;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x7359a8 = 5;\n            if (*0x789810 == 0) {\n                *0x7359a0 = 0x4acd94;\n            }\n            else {\n                unaff_RDI = 0x7359a0;\n                *(*0x20 + -0x98) = 0x4810dd;\n                in_RAX = fcn.0045c220(arg1, 0x4acd94, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            uVar7 = 1;\n            if (*(in_RAX + 0x46) != 0) {\n                uVar7 = 2;\n            }\n            *(*0x20 + -0x58) = uVar7;\n            *(*0x20 + -0x98) = 0x48110c;\n            uVar4 = uVar7;\n            puVar2 = fcn.00445140(uVar7);\n            *0x7359b8 = *(*0x20 + -0x58);\n            *0x7359c0 = *0x7359b8;\n            if (*0x789810 != 0) {\n                unaff_RDI = 0x7359b0;\n                *(*0x20 + -0x98) = 0x48113d;\n                fcn.0045c100(uVar4, *0x7359b8, arg3, in_R9);\n                puVar2 = *0x7359b0;\n            }\n            *0x7359b0 = puVar2;\n            *(*0x20 + -0x98) = 0x48114a;\n            uVar3 = fcn.00480d40();\n            puVar2 = *0x7359b0;\n            arg1 = *0x7359b8;\n            if (*0x7359b8 != NULL) {\n                (*0x7359b0)[1] = uVar7;\n                if (*0x789810 == 0) {\n                    *puVar2 = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x481186;\n                    fcn.0045c100(uVar4, puVar2, arg3, in_R9);\n                }\n                if (*(*0x20 + -0x58) == 1) {\n                    puVar2[2] = **(*0x20 + 8) * -0x3c;\n                    *0x7359f0 = 0x8000000000000000;\n                    arg1 = 0x7fffffffffffffff;\n                    *0x7359f8 = 0x7fffffffffffffff;\n                    puVar6 = puVar2;\n                    if (*0x789810 != 0) {\n                        *(*0x20 + -0x98) = 0x48138e;\n                        fcn.0045c220(uVar4, puVar2, arg3, in_R9);\n                        puVar6 = *0x735a00;\n                    }\n                    *0x735a00 = puVar6;\n                    uVar7 = 1;\n                    *(*0x20 + -0x98) = 0x4813a5;\n                    puVar6 = fcn.00445140(1);\n                    *0x7359d0 = 0x1;\n                    *0x7359d8 = 1;\n                    if (*0x789810 != 0) {\n                        *(*0x20 + -0x98) = 0x4813d9;\n                        fcn.0045c100(uVar7, puVar2, arg3, in_R9);\n                        puVar6 = *0x7359c8;\n                    }\n                    *0x7359c8 = puVar6;\n                    **0x7359c8 = *0x7359f0;\n                    if (*0x7359d0 == NULL) {\n                        *(*0x20 + -0x98) = 0x481418;\n                        puVar2 = *0x7359c8;\n                        iVar5 = fcn.0045c5a0(0);\n                        goto code_r0x00481418;\n                    }\n                    *(*0x7359c8 + 1) = 0;\n                    return;\n                }\n                arg1 = *(*0x20 + 8);\n                puVar2[2] = (arg1[0x15] + *arg1) * -0x3c;\n                puVar2 = *0x7359b0;\n                arg3 = *0x7359b8;\n                if (0x1 < *0x7359b8) {\n                    (*0x7359b0)[5] = unaff_RDI;\n                    if (*0x789810 == 0) {\n                        puVar2[4] = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x98) = 0x4811e6;\n                        fcn.0045c200();\n                    }\n                    puVar2[6] = (arg1[0x2a] + *arg1) * -0x3c;\n                    *(puVar2 + 7) = 1;\n                    *(*0x20 + -0x72) = *(arg1 + 0x46);\n                    *(*0x20 + -0x74) = *(arg1 + 0x9a);\n                    uVar7 = 400;\n                    *(*0x20 + -0x98) = 0x481226;\n                    puVar2 = fcn.00445140(400);\n                    *0x7359d0 = 0x190;\n                    *0x7359d8 = 400;\n                    iVar5 = *(*0x20 + 8) + 0x44;\n                    iVar10 = *(*0x20 + 8) + 0x98;\n                    uVar9 = *(*0x20 + -0x72);\n                    iVar12 = iVar5;\n                    if (*(*0x20 + -0x74) < uVar9) {\n                        iVar12 = iVar10;\n                    }\n                    *(*0x20 + -0x30) = iVar12;\n                    if (*(*0x20 + -0x74) < uVar9) {\n                        iVar10 = iVar5;\n                    }\n                    *(*0x20 + -0x38) = iVar10;\n                    if (*0x789810 != 0) {\n                        *(*0x20 + -0x98) = 0x481291;\n                        fcn.0045c100(uVar7, iVar10, uVar9, iVar5);\n                        puVar2 = *0x7359c8;\n                    }\n                    *0x7359c8 = puVar2;\n                    *(*0x20 + -0x98) = 0x481296;\n                    uVar4 = fcn.0047e400(uVar7);\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x18) = 400;\n                    *(*0x20 + -0x10) = uVar7;\n                    if (*(*0x20 + -0x20) < 0) {\n                        *(*0x20 + -0x18) = ((*(*0x20 + -0x20) << 1) >> 0x1f) + 0xdd7b17f80;\n                        *(*0x20 + -0x20) = *(*0x20 + -0x20) & 0x3fffffff;\n                    }\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x98) = 0x4812f5;\n                    iVar5 = fcn.0047e040(0);\n                    *(*0x20 + -0x70) = iVar5;\n                    bVar14 = *(*0x20 + -0x74) < *(*0x20 + -0x72);\n                    uVar9 = *(*0x20 + -0x74) & 0xff00 | bVar14;\n                    *(*0x20 + -0x75) = bVar14;\n                    bVar1 = !bVar14;\n                    piVar13 = *(*0x20 + -0x72) & 0xff00 | bVar1;\n                    *(*0x20 + -0x76) = bVar1;\n                    unaff_RDI = iVar5 + -100;\n                    arg3 = bVar1;\n                    *(*0x20 + -0x50) = arg3;\n                    *(*0x20 + -0x48) = bVar14;\n                    piVar8 = NULL;\n                    in_R9 = bVar14;\n                    while( true ) {\n                        arg1_00 = *0x7359d0;\n                        if (iVar5 + 100 <= unaff_RDI) {\n                            return;\n                        }\n                        arg1 = piVar13;\n                        if (*0x7359d0 <= piVar8) goto code_r0x00481572;\n                        *(*0x20 + -0x28) = *0x7359c8;\n                        *(*0x20 + -0x68) = unaff_RDI;\n                        *(*0x20 + -0x60) = piVar8;\n                        *(*0x20 + -0x98) = 0x4814a5;\n                        iVar5 = fcn.00480ea0(piVar8, uVar9);\n                        arg1 = *(*0x20 + -0x50);\n                        piVar8 = *0x7359b8;\n                        if (*0x7359b8 <= arg1) goto code_r0x0048156a;\n                        arg3 = *(*0x20 + -0x60);\n                        unaff_RDI = arg3 * 0x10;\n                        iVar10 = *(*0x20 + -0x28);\n                        *(iVar10 + unaff_RDI) = iVar5 - (*0x7359b0)[arg1 * 4 + 2];\n                        arg1 = *(*0x20 + -0x75);\n                        *(iVar10 + 8 + unaff_RDI) = *(*0x20 + -0x75);\n                        piVar8 = *0x7359d0;\n                        if (*0x7359d0 <= arg3 + 1U) goto code_r0x00481565;\n                        *(*0x20 + -0x28) = *0x7359c8;\n                        *(*0x20 + -0x40) = arg3 + 1U;\n                        *(*0x20 + -0x98) = 0x481525;\n                        iVar5 = fcn.00480ea0();\n                        arg1 = *(*0x20 + -0x48);\n                        puVar2 = *0x7359b0;\n                        if (*0x7359b8 <= arg1) break;\ncode_r0x00481418:\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar12 = *(*0x20 + -0x28);\n                        *(iVar12 + iVar10 * 0x10) = iVar5 - puVar2[arg1 * 4 + 2];\n                        piVar13 = *(*0x20 + -0x76);\n                        *(iVar12 + 8 + iVar10 * 0x10) = *(*0x20 + -0x76);\n                        unaff_RDI = *(*0x20 + -0x68) + 1;\n                        piVar8 = *(*0x20 + -0x60) + 2;\n                        iVar5 = *(*0x20 + -0x70);\n                        uVar9 = *(*0x20 + -0x75);\n                        arg3 = *(*0x20 + -0x50);\n                        in_R9 = arg1;\n                    }\n                    *(*0x20 + -0x98) = 0x481565;\n                    piVar8 = *0x7359b8;\n                    fcn.0045c5a0(*0x7359b8);\ncode_r0x00481565:\n                    *(*0x20 + -0x98) = 0x48156a;\n                    fcn.0045c5a0(piVar8);\ncode_r0x0048156a:\n                    *(*0x20 + -0x98) = 0x481572;\n                    fcn.0045c5a0(piVar8);\ncode_r0x00481572:\n                    *(*0x20 + -0x98) = 0x48157d;\n                    fcn.0045c5a0(arg1_00);\n                }\n                *(*0x20 + -0x98) = 0x48158a;\n                fcn.0045c5a0(arg3);\n            }\n            *(*0x20 + -0x98) = 0x481594;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x48159f;\n        fcn.00459ea0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 3176
    },
    "00482620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00482620(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.0046cd80(arg1);\n        uVar1 = fcn.004493a0(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "004840c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004840c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    char unaff_BL;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_BL == '\\0') {\n                puVar3 = in_RAX + 0xc;\n                uVar4 = 4;\n                uVar5 = 0x7ffff80000000000;\n                iVar7 = 0x80000000000;\n            }\n            else {\n                puVar3 = in_RAX + 1;\n                uVar4 = 2;\n                uVar5 = 0x7ffff800000;\n                iVar7 = 0x800000;\n            }\n            while ((uVar1 = *in_RAX,  (uVar1 & uVar4) != 0 && ((uVar1 & 0x7ffff8) != 0))) {\n                uVar8 = ~uVar4 & uVar1;\n                if ((uVar1 & uVar5) != 0) {\n                    uVar8 = (~uVar4 & uVar1) - iVar7;\n                }\n                uVar8 = uVar8 - 8;\n                LOCK();\n                bVar9 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ uVar8);\n                uVar2 = uVar1 ^ !bVar9 * (uVar1 ^ *in_RAX);\n                if (bVar9) {\n                    if ((uVar1 & uVar5) != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x28) = 0x484172;\n                        uVar2 = fcn.00457ec0();\n                        uVar8 = *(*0x20 + -0x10);\n                    }\n                    return uVar2 & 0xffffffffffffff00 | (uVar8 & 0x7ffff9) == 1;\n                }\n            }\n            unaff_BL = -0x58;\n            *(*0x20 + -0x28) = 0x4841a5;\n            in_RAX = fcn.00431940(puVar3);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x4841b4;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 754
    },
    "004841e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004841e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x484234;\n                    uVar3 = fcn.00485320();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x48425f;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x48426a;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "004848a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.004848a0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar5 = *(in_RAX + 0x38);\n            if (*(iVar5 + 0x1b8) == 0) {\n                *(*0x20 + -0x58) = 0x484b85;\n                puVar7 = fcn.0040bf40();\n                puVar7[1] = 0x36;\n                *puVar7 = 0x4b5117;\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = iVar5;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar5 + 0x1b8;\n            iVar2 = *(in_RAX + 0x28);\n            uVar1 = *(iVar5 + 0x21f);\n            *(*0x20 + -0x58) = 0x4848f8;\n            iVar5 = fcn.00484420(uVar1);\n            if (iVar5 != 0) {\n                return 0;\n            }\n            pcVar3 = **(*0x20 + 0x10);\n            *(*0x20 + -0x58) = 0x484918;\n            iVar5 = (*pcVar3)();\n            if (iVar5 == 0) {\n                iVar5 = *(*0x20 + 8);\n                if (*(*(iVar5 + 0x38) + 0x21c) != '\\0') {\n                    return *(iVar5 + 0x30);\n                }\n            }\n            else {\n                if (((iVar5 == 0) || (*(iVar5 + 8) != 0x4a1100)) || (*iVar2 != 0x3e5)) {\n                    return 0;\n                }\n                iVar5 = *(*0x20 + 8);\n            }\n            iVar2 = *(iVar5 + 0x28);\n            uVar1 = *(*(*0x20 + -0x10) + 0x21f);\n            *(*0x20 + -0x58) = 0x484985;\n            iVar5 = fcn.00484560(uVar1);\n            if (iVar5 == 0) {\n                if (*(*(*0x20 + 8) + 0x2c) == 0) {\n                    return *(*(*0x20 + 8) + 0x30);\n                }\n                *(*0x20 + -0x58) = 0x484ae6;\n                piVar6 = fcn.00409700();\n                if (((*0x6b5ac8 != 0x4a1100) || (*piVar6 != 0xea)) && ((*0x6b5ac8 != 0x4a1100 || (*piVar6 != 0x2738))))\n                {\n                    return 0;\n                }\n                return *(*(*0x20 + 8) + 0x30);\n            }\n            *(*0x20 + -0x20) = iVar2;\n            *(*0x20 + -0x28) = iVar5;\n            if ((iVar5 != 0) && (*(iVar5 + 8) == 0x4a1900)) goto code_r0x004849fa;\n            if (*0x735350 == iVar5) {\n                *(*0x20 + -0x58) = 0x4849bc;\n                cVar4 = fcn.00402fa0(*0x735358);\n                if (cVar4 != '\\0') {\ncode_r0x004849fa:\n                    piVar6 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x484a0d;\n                    iVar5 = fcn.00471160();\n                    if ((iVar5 != 0) && (((iVar5 == 0 || (*(iVar5 + 8) != 0x4a1100)) || (*piVar6 != 0x490)))) {\n                        do {\n                            *(*0x20 + -0x58) = 0x484bbb;\n                            fcn.00431940();\n                        } while( true );\n                    }\n                    iVar5 = *(*0x20 + 8);\n                    if (*(*(*0x20 + -0x10) + 0x1b8) != 0) {\n                        *(*0x20 + -0x58) = 0x484a5e;\n                        fcn.004575e0();\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    if (*(iVar5 + 0x2c) == 0) {\n                        return *(iVar5 + 0x30);\n                    }\n                    *(*0x20 + -0x58) = 0x484a79;\n                    fcn.00409700();\n                    return 0;\n                }\n                iVar5 = *(*0x20 + -0x28);\n            }\n            if (*0x72e330 == iVar5) {\n                *(*0x20 + -0x58) = 0x4849f2;\n                cVar4 = fcn.00402fa0(*0x72e338);\n                if (cVar4 != '\\0') goto code_r0x004849fa;\n            }\n            pcVar3 = *(*(*0x20 + -0x28) + 0x18);\n            *(*0x20 + -0x58) = 0x484bd2;\n            (*pcVar3)();\n            *(*0x20 + -0x58) = 0x484beb;\n            fcn.00448ba0(0x22);\n            *(*0x20 + -0x58) = 0x484bf0;\n            unaff_RBX = fcn.00409780();\n            *(*0x20 + -0x58) = 0x484bff;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x484c0f;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1586
    },
    "00485440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00485440(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    cVar1 = fcn.00483e40();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x735350;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x6b5a60;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.00471160(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.00457640();\n    }\n    uVar2 = fcn.004841e0();\n    fcn.00457da0(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "00485540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00485540(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    cVar1 = fcn.00483f60();\n    if (cVar1 == '\\0') {\n        iVar3 = *0x735350;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            iVar3 = 0x6b5a60;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (iVar3 == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x485940);\n        ppcStack16 = auStack40;\n        if (0x40000000 < arg1) {\n            arg1 = 0x40000000;\n        }\n        if (*(in_RAX + 0x21f) == '\\0') {\n            *(in_RAX + 0x58) = arg1;\n            if (*0x789810 == 0) {\n                *(in_RAX + 0x60) = 0;\n            }\n            else {\n                fcn.0045c200();\n            }\n            if (arg1 != NULL) {\n                if (*0x789810 == 0) {\n                    *(in_RAX + 0x60) = unaff_RBX;\n                }\n                else {\n                    fcn.0045c200();\n                }\n            }\n            uVar2 = fcn.004848a0();\n            bVar4 = false;\n        }\n        else {\n            LOCK();\n            bVar4 = *(in_RAX + 0x1c0) == 0;\n            if (bVar4) {\n                *(in_RAX + 0x1c0) = 1;\n            }\n            if (!bVar4) {\n                fcn.00462020();\n            }\n            auStack56 = CONCAT88(in_RAX + 0x1c0, 0x4858e0);\n            ppcStack24 = auStack56;\n            if (*(in_RAX + 0x220) == '\\x02') {\n                uVar2 = fcn.004859a0(arg1);\n            }\n            else {\n                uVar2 = fcn.00470360(arg1, in_RAX);\n                if ((((*(in_RAX + 0x220) == '\\x04') && (unaff_RBX != 0)) && (*(unaff_RBX + 8) == 0x4a1100)) &&\n                   (*arg1 == 0x3e3)) {\n                    unaff_RBX = *0x735350;\n                }\n            }\n            if (unaff_RBX != 0) {\n                uVar2 = 0;\n            }\n            bVar4 = true;\n        }\n        if (bVar4) {\n            (**ppcStack24)();\n        }\n        (**ppcStack16)();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 786
    },
    "004859a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004859a0(uint32_t *arg1)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    uint32_t *in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    ulong uVar9;\n    uint32_t *puVar10;\n    uint32_t *arg1_00;\n    uint32_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t *in_R8;\n    uint32_t *in_R9;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t unaff_R14;\n    \n    while (puVar11 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00485e33:\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x485e4c;\n        fcn.00459ea0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    }\n    puVar11 = *0x20 + -0x70;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == NULL) {\n        return 0;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (*(in_RAX + 0x78) == 0) {\n        uVar9 = 10000;\n        *(*0x20 + -0x78) = 0x4859ff;\n        uVar4 = fcn.00445140(10000);\n        iVar6 = *(*0x20 + 8);\n        *(iVar6 + 0x1e8) = 0;\n        *(iVar6 + 0x1f0) = 10000;\n        if (*0x789810 == 0) {\n            *(iVar6 + 0x1e0) = uVar4;\n        }\n        else {\n            *(*0x20 + -0x78) = 0x485a38;\n            fcn.0045c100(uVar9, iVar6, in_R8, in_R9);\n        }\n        uVar9 = 40000;\n        *(*0x20 + -0x78) = 0x485a4b;\n        uVar4 = fcn.00445140(40000);\n        in_RAX = *(*0x20 + 8);\n        *(in_RAX + 0x80) = 0;\n        *(in_RAX + 0x82) = 40000;\n        if (*0x789810 == 0) {\n            *(in_RAX + 0x7e) = uVar4;\n        }\n        else {\n            *(*0x20 + -0x78) = 0x485a85;\n            fcn.0045c100(uVar9, in_RAX, in_R8, in_R9);\n        }\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\ncode_r0x00485abd:\n    if (*(in_RAX + 0x80) != *(in_RAX + 0x84) && *(in_RAX + 0x84) <= *(in_RAX + 0x80)) goto code_r0x00485c51;\n    *(*0x20 + -0x40) = *(in_RAX + 0x7c) - *(in_RAX + 0x7a);\n    *(*0x20 + -0x78) = 0x485af0;\n    uVar5 = fcn.0040bf40();\n    iVar6 = *(*0x20 + -0x40);\n    if (*(*0x20 + 0x18) < *(*0x20 + -0x40)) {\n        iVar6 = *(*0x20 + 0x18);\n    }\n    unaff_RBX = *(*0x20 + 8);\n    in_RAX = *(unaff_RBX + 0x7c);\n    unaff_RDI = *(unaff_RBX + 0x78);\n    in_R8 = *(unaff_RBX + 0x7a);\n    arg1 = in_R8 + 1;\n    if (arg1 <= in_RAX) {\n        if (in_R8 < arg1) {\n            *(*0x20 + -0x10) = uVar5;\n            pcVar3 = **0x72dbb0;\n            unaff_RBX = unaff_RDI + in_R8 * 2;\n            *(*0x20 + -0x78) = 0x485b5c;\n            iVar6 = (*pcVar3)(iVar6, *0x72dbb0);\n            if (iVar6 != 0) {\n                return 0;\n            }\n            in_RAX = *(*0x20 + 8);\n            in_R8 = *(in_RAX + 0x78);\n            arg1_00 = *(in_RAX + 0x7c);\n            arg1 = *(*0x20 + -0x10);\n            puVar10 = *arg1 + *(in_RAX + 0x7a);\n            if (puVar10 <= arg1_00) {\n                *(*0x20 + -0x48) = puVar10;\n                *(*0x20 + -0x20) = in_R8;\n                *(in_RAX + 0x7a) = 0;\n                unaff_RBX = *(in_RAX + 0x82);\n                *(*0x20 + -0x28) = unaff_RBX;\n                iVar6 = *(in_RAX + 0x7e);\n                *(*0x20 + -0x18) = iVar6;\n                puVar7 = NULL;\n                arg1_00 = NULL;\n                do {\n                    if (puVar7 < puVar10) {\n                        if (puVar7 < puVar10) {\n                            uVar2 = *(in_R8 + puVar7 * 2);\n                            uVar13 = uVar2;\n                            puVar8 = puVar7;\n                            if (uVar13 - 0xd800 < 0x800) {\n                                puVar8 = puVar7 + 1;\n                                if (puVar10 != puVar8) {\n                                    if (puVar8 < puVar10) {\n                                        if ((uVar13 < 0xdc00) &&\n                                           (uVar14 = *(in_R8 + puVar7 * 2 + 2) - 0xdc00,  uVar14 < 0x400)) {\n                                            uVar13 = ((uVar13 - 0xd800) * 0x400 | uVar14) + 0x10000;\n                                        }\n                                        else {\n                                            uVar13 = 0xfffd;\n                                        }\n                                        if (uVar13 == 0xfffd) {\n                                            puVar8 = puVar7;\n                                        }\n                                        goto code_r0x00485d8f;\n                                    }\n                                    goto code_r0x00485dfb;\n                                }\n                                if (*arg1 == 0) {\n                                    uVar13 = 0xfffd;\n                                    puVar8 = puVar7;\n                                    goto code_r0x00485d8f;\n                                }\n                                in_R8 = *(in_RAX + 0x7c);\n                                if (*(in_RAX + 0x7c) != NULL) {\n                                    *(in_RAX + 0x7a) = 1;\n                                    in_R8 = *(in_RAX + 0x78);\n                                    *in_R8 = uVar2;\n                                    goto code_r0x00485bf1;\n                                }\n                            }\n                            else {\ncode_r0x00485d8f:\n                                *(*0x20 + -0x30) = arg1_00;\n                                *(*0x20 + -0x38) = puVar8;\n                                in_RAX = unaff_RBX - arg1_00;\n                                in_R8 = (-in_RAX >> 0x3f & arg1_00) + iVar6;\n                                uVar5 = uVar13;\n                                *(*0x20 + -0x78) = 0x485dc5;\n                                iVar6 = fcn.00463380();\n                                puVar10 = iVar6 + *(*0x20 + -0x30);\n                                unaff_RBX = *(*0x20 + -0x28);\n                                arg1_00 = puVar10;\n                                if (puVar10 <= unaff_RBX) goto code_r0x00485cd5;\n                                *(*0x20 + -0x78) = 0x485dfb;\n                                fcn.0045c620(puVar10, unaff_RBX);\n                                unaff_RBX = in_RAX;\ncode_r0x00485dfb:\n                                *(*0x20 + -0x78) = 0x485e05;\n                                fcn.0045c5a0(puVar10);\n                            }\n                            arg1_00 = in_R8;\n                            puVar10 = 0x1;\n                            *(*0x20 + -0x78) = 0x485e12;\n                            in_R8 = arg1_00;\n                            fcn.0045c620(1, arg1_00);\n                        }\n                        *(*0x20 + -0x78) = 0x485e17;\n                        fcn.0045c5a0(puVar10);\n                        break;\n                    }\ncode_r0x00485bf1:\n                    *(in_RAX + 0x80) = arg1_00;\n                    *(in_RAX + 0x82) = unaff_RBX;\n                    if (*0x789810 == 0) {\n                        *(in_RAX + 0x7e) = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x485c25;\n                        fcn.0045c220(puVar10, iVar6, in_R8, arg1);\n                    }\n                    *(in_RAX + 0x84) = 0;\n                    if (*arg1 != 0) goto code_r0x00485aaa;\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\ncode_r0x00485c51:\n                    arg1_00 = *(in_RAX + 0x80);\n                    iVar6 = *(in_RAX + 0x7e);\n                    uVar5 = *(in_RAX + 0x82);\n                    puVar10 = *(in_RAX + 0x84);\n                    if (puVar10 <= arg1_00) {\n                        iVar12 = 0;\n                        goto code_r0x00485c90;\n                    }\n                    *(*0x20 + -0x78) = 0x485cd5;\n                    unaff_RBX = arg1_00;\n                    fcn.0045c660(arg1_00);\ncode_r0x00485cd5:\n                    puVar7 = *(*0x20 + -0x38) + 1;\n                    arg1 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                    puVar10 = *(*0x20 + -0x48);\n                    in_R8 = *(*0x20 + -0x20);\n                    in_RAX = *(*0x20 + 8);\n                } while( true );\n            }\n            *(*0x20 + -0x78) = 0x485e1c;\n            fcn.0045c620(puVar10, arg1_00);\n            unaff_RDI = uVar5;\n        }\n        *(*0x20 + -0x78) = 0x485e27;\n        fcn.0045c5a0(arg1);\n    }\n    *(*0x20 + -0x78) = 0x485e32;\n    in_R9 = arg1;\n    in_RAX = fcn.0045c620(arg1, in_RAX);\n    goto code_r0x00485e33;\ncode_r0x00485aaa:\n    arg1 = *(*0x20 + 0x18);\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x00485abd;\ncode_r0x00485c90:\n    if ((arg1_00 - puVar10 <= iVar12) || (arg1 <= iVar12)) goto code_r0x00485cb2;\n    cVar1 = *(iVar6 + (puVar10 - uVar5 >> 0x3f & puVar10) + iVar12);\n    if (cVar1 == '\\x1a') {\n        if (iVar12 == 0) {\n            *(in_RAX + 0x84) = *(in_RAX + 0x84) + 1;\n        }\ncode_r0x00485cb2:\n        *(in_RAX + 0x84) = *(in_RAX + 0x84) + iVar12;\n        return iVar12;\n    }\n    *(unaff_RBX + iVar12) = cVar1;\n    iVar12 = iVar12 + 1;\n    goto code_r0x00485c90;\n}\n",
        "token_count": 3142
    },
    "00485e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485e80(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    int64_t *arg3;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          auStack40 + 8 < *(unaff_R14 + 0x10) || auStack40 + 8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    cVar1 = fcn.00483f60();\n    if (cVar1 == '\\0') {\n        iVar6 = *0x735350;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            iVar6 = 0x6b5a60;\n        }\n    }\n    else {\n        iVar6 = 0;\n    }\n    if (iVar6 == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x4863a0);\n        ppcStack16 = auStack40;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            bVar7 = false;\n        }\n        else {\n            LOCK();\n            bVar7 = *(in_RAX + 0x1c0) == 0;\n            if (bVar7) {\n                *(in_RAX + 0x1c0) = 1;\n            }\n            if (!bVar7) {\n                fcn.00462020();\n            }\n            auStack56 = CONCAT88(in_RAX + 0x1c0, 0x486340);\n            ppcStack24 = auStack56;\n            bVar7 = true;\n        }\n        iVar6 = 0;\n        while( true ) {\n            if (arg1 < 1) {\n                if (bVar7) {\n                    (**ppcStack24)();\n                }\n                (**ppcStack16)();\n                return iVar6;\n            }\n            arg3 = arg1;\n            if (0x40000000 < arg1) {\n                arg3 = 0x40000000;\n            }\n            if (*(in_RAX + 0x21f) == '\\0') {\n                *(in_RAX + 0x128) = arg3;\n                iVar4 = in_RAX + 0x130;\n                iVar3 = in_RAX;\n                piVar2 = arg1;\n                iVar5 = iVar6;\n                if (*0x789810 == 0) {\n                    *(in_RAX + 0x130) = 0;\n                }\n                else {\n                    fcn.0045c260(in_RAX, arg1, arg3, iVar4);\n                }\n                if (arg3 != NULL) {\n                    if (*0x789810 == 0) {\n                        *(iVar3 + 0x130) = unaff_RBX;\n                    }\n                    else {\n                        fcn.0045c240(iVar3, piVar2, iVar5, iVar4);\n                    }\n                }\n                iVar4 = 0x69e280;\n                piVar2 = fcn.004848a0();\n            }\n            else {\n                iVar4 = unaff_RBX;\n                if (*(in_RAX + 0x220) == '\\x02') {\n                    piVar2 = fcn.00486400(arg3);\n                }\n                else {\n                    piVar2 = fcn.00470420(arg3, arg1);\n                    if ((((*(in_RAX + 0x220) == '\\x04') && (unaff_RBX != 0)) && (*(unaff_RBX + 8) == 0x4a1100)) &&\n                       (*arg3 == 0x3e3)) {\n                        iVar4 = *0x735350;\n                    }\n                }\n                if (iVar4 != 0) {\n                    piVar2 = NULL;\n                }\n            }\n            iVar6 = iVar6 + piVar2;\n            if (iVar4 != 0) break;\n            if (arg1 < piVar2) {\n                fcn.0045c660(arg1);\n                fcn.004307e0();\n                return 0;\n            }\n            unaff_RDI = unaff_RDI - piVar2;\n            arg1 = arg1 - piVar2;\n            unaff_RBX = unaff_RBX + (piVar2 & -unaff_RDI >> 0x3f);\n        }\n        if (bVar7) {\n            (**ppcStack24)();\n        }\n        (**ppcStack16)();\n        return iVar6;\n    }\n    return 0;\n}\n",
        "token_count": 1104
    },
    "00486400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint8_t * fcn.00486400(uint8_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *arg4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint8_t *unaff_RDI;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00486400:\n    puVar8 = *0x20;\n    puVar9 = unaff_RDI;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x448 && *0x20 + -0x448 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x4c8;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x4d8) = *0x20 + -8;\n        *(*0x20 + -0x4d0) = 0x48645b;\n        iVar3 = fcn.0045c700();\n        unaff_RBP = *(*0x20 + -0x4d8);\n        puVar9 = *(iVar3 + 0x1d0);\n        puVar10 = *(iVar3 + 0x1d8);\n        uVar4 = *(iVar3 + 0x1c8);\n        *(*0x20 + -0x10) = iVar3 + 0x1c8;\n        puVar7 = arg1;\n        if (0 < puVar9) {\n            *(*0x20 + -0x438) = puVar9 + arg1;\n            if (puVar10 < puVar9 + arg1) {\n                *(*0x20 + -0x440) = puVar9;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x4d0) = 0x4864bf;\n                uVar4 = fcn.00445220(puVar9);\n                arg1 = *(*0x20 + 0x18);\n                puVar10 = puVar9;\n            }\n            *(*0x20 + -0x440) = puVar10;\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0x4d0) = 0x4864f6;\n            fcn.0045cee0(arg1);\n            iVar3 = *(*0x20 + 8);\n            *(iVar3 + 0x1d0) = in_XMM15;\n            if (*0x789810 == 0) {\n                *(iVar3 + 0x1c8) = 0;\n            }\n            else {\n                *(*0x20 + -0x4d0) = 0x486535;\n                fcn.0045c200(0);\n            }\n            unaff_RDI = *(*0x20 + -0x440);\n            arg1 = *(*0x20 + -0x438);\n            unaff_RBX = *(*0x20 + -0x18);\n            puVar7 = *(*0x20 + 0x18);\n        }\n        puVar9 = 0x100;\n        puVar10 = NULL;\n        arg4 = *0x20 + -0x430;\n        do {\n            *(*0x20 + -0x468) = puVar9;\n            *(*0x20 + -0x470) = puVar10;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x460) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (arg1 < 4) {\n                if (arg1 == NULL) {\ncode_r0x00486713:\n                    if (0 < arg1) {\n                        *(*0x20 + -0x4d0) = 0x486728;\n                        uVar5 = fcn.00445140(arg1);\n                        uVar4 = *(*0x20 + -0x460);\n                        iVar3 = *(*0x20 + 8);\n                        *(iVar3 + 0x1d0) = uVar4;\n                        *(iVar3 + 0x1d8) = uVar4;\n                        if (*0x789810 == 0) {\n                            *(iVar3 + 0x1c8) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x4d0) = 0x486765;\n                            fcn.0045c100(uVar4, iVar3, puVar10, arg4);\n                        }\n                        unaff_RBX = *(*0x20 + -0x20);\n                        if (unaff_RBX != *(iVar3 + 0x1c8)) {\n                            *(*0x20 + -0x4d0) = 0x48677e;\n                            fcn.0045cee0(uVar4);\n                        }\n                        puVar7 = *(*0x20 + 0x18);\n                        puVar9 = *(*0x20 + -0x468);\n                        puVar10 = *(*0x20 + -0x470);\n                        arg4 = *(*0x20 + -0x28);\n                    }\n                    goto code_r0x004867c0;\n                }\n                if (arg1 < (*(*unaff_RBX + 0x7215a0) & 7)) {\n                    iVar3 = (*(*unaff_RBX + 0x7215a0) >> 4) * 2;\n                    if ((arg1 < 2) ||\n                       (((*(iVar3 + 0x71e020) <= unaff_RBX[1] && (unaff_RBX[1] <= *(iVar3 + 0x71e021))) &&\n                        ((arg1 < 3 || ((0x7f < unaff_RBX[2] && (unaff_RBX[2] < 0xc0)))))))) goto code_r0x00486713;\n                }\n            }\n            *(*0x20 + -0x458) = unaff_RDI;\n            *(*0x20 + -0x4d0) = 0x486685;\n            uVar2 = fcn.00462ee0(unaff_RDI);\n            puVar9 = *(*0x20 + -0x470);\n            puVar10 = puVar9 + 1;\n            if (*(*0x20 + -0x468) < puVar10) {\n                *(*0x20 + -0x484) = uVar2;\n                *(*0x20 + -0x448) = arg1;\n                iVar3 = *(*0x20 + -0x28);\n                *(*0x20 + -0x4d0) = 0x4866c5;\n                arg4 = fcn.00445220(puVar9);\n                puVar10 = iVar3 + 1;\n                unaff_RBX = *(*0x20 + -0x448);\n                uVar2 = *(*0x20 + -0x484);\n                puVar7 = *(*0x20 + -0x470);\n            }\n            else {\n                arg4 = *(*0x20 + -0x28);\n                puVar7 = puVar9;\n                unaff_RBX = arg1;\n                puVar9 = *(*0x20 + -0x468);\n            }\n            *(arg4 + puVar7 * 4) = uVar2;\n            arg1 = *(*0x20 + -0x460);\n            if (arg1 < unaff_RBX) goto code_r0x0048693e;\n            unaff_RDI = *(*0x20 + -0x458) - unaff_RBX;\n            arg1 = arg1 + -unaff_RBX;\n            unaff_RBX = (unaff_RBX & -unaff_RDI >> 0x3f) + *(*0x20 + -0x20);\n            puVar7 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00486947;\ncode_r0x004867c0:\n    if (puVar10 < 1) {\n        return puVar7;\n    }\n    arg1 = puVar10;\n    if (16000 < puVar10) {\n        arg1 = 0x3e80;\n    }\n    if (puVar9 < arg1) goto code_r0x00486936;\n    if (puVar10 < arg1) goto code_r0x0048692b;\n    *(*0x20 + -0x468) = puVar9;\n    *(*0x20 + -0x470) = puVar10;\n    *(*0x20 + -0x28) = arg4;\n    *(*0x20 + -0x450) = arg1;\n    *(*0x20 + -0x4d0) = 0x486817;\n    unaff_RBX = fcn.0046cbe0(puVar9);\n    iVar3 = *(*0x20 + -0x468);\n    iVar1 = *(*0x20 + -0x450);\n    *(*0x20 + -0x468) = iVar3 - iVar1;\n    puVar10 = *(*0x20 + -0x470) - iVar1;\n    *(*0x20 + -0x470) = puVar10;\n    arg4 = *(*0x20 + -0x28) + (iVar1 << 2 & -(iVar3 - iVar1) >> 0x3f);\n    *(*0x20 + -0x28) = arg4;\n    while (0 < arg1) {\n        *(*0x20 + -0x478) = puVar9;\n        *(*0x20 + -0x480) = arg1;\n        *(*0x20 + -0x30) = unaff_RBX;\n        *(*0x20 + -0x488) = 0;\n        puVar10 = *(*(*0x20 + 8) + 0x10);\n        puVar9 = *0x20 + -0x488;\n        *(*0x20 + -0x4d0) = 0x4868f5;\n        iVar3 = fcn.00473460(arg1);\n        if (iVar3 != 0) {\n            return NULL;\n        }\n        uVar6 = *(*0x20 + -0x488);\n        arg1_00 = *(*0x20 + -0x480);\n        if (arg1_00 < uVar6) {\n            *(*0x20 + -0x4d0) = 0x48692b;\n            fcn.0045c660(arg1_00);\n            goto code_r0x0048692b;\n        }\n        puVar9 = *(*0x20 + -0x478) - uVar6;\n        unaff_RBX = (uVar6 << 1 & -puVar9 >> 0x3f) + *(*0x20 + -0x30);\n        arg4 = *(*0x20 + -0x28);\n        puVar10 = *(*0x20 + -0x470);\n        arg1 = arg1_00 - uVar6;\n    }\n    puVar7 = *(*0x20 + 0x18);\n    puVar9 = *(*0x20 + -0x468);\n    unaff_RBX = arg1;\n    goto code_r0x004867c0;\ncode_r0x0048692b:\n    arg1 = puVar10;\n    *(*0x20 + -0x4d0) = 0x486936;\n    fcn.0045c660(arg1);\ncode_r0x00486936:\n    *(*0x20 + -0x4d0) = 0x48693e;\n    fcn.0045c620(arg1, puVar9);\ncode_r0x0048693e:\n    *(*0x20 + -0x4d0) = 0x486946;\n    in_RAX = fcn.0045c660(arg1);\ncode_r0x00486947:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + 0x18) = arg1;\n    *(puVar8 + 0x20) = puVar9;\n    *(puVar8 + -8) = 0x486965;\n    fcn.00459ea0();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    arg1 = *(puVar8 + 0x18);\n    unaff_RDI = *(puVar8 + 0x20);\n    *0x20 = puVar8;\n    goto code_r0x00486400;\n}\n",
        "token_count": 2948
    },
    "00486bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t fcn.00486bc0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int16_t *piVar5;\n    uint64_t arg1;\n    uint64_t uVar6;\n    int16_t *noname_0;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uint64_t uStack40;\n    uint64_t uStack24;\n    uchar auStack32 [16];\n    \n    while (auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uStack40 = 0;\n    if ((in_RAX != 0) && (*(in_RAX + 0x20) != 0)) {\n        iVar1 = fcn.00482b20(0);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        auStack56 = ZEXT816(0x486ee0);\n        noname_0 = NULL;\n        auStack32 = in_XMM15;\n        while( true ) {\n            for (piVar5 = noname_0; *piVar5 != 0; piVar5 = piVar5 + 1) {\n            }\n            uVar2 = piVar5 - noname_0 >> 1;\n            if (uVar2 == 0) break;\n            if (0x3fffffff < uVar2) {\n                fcn.0045c6c0(noname_0, uVar2);\n                fcn.004307e0();\n                return uStack40;\n            }\n            uVar3 = fcn.0046cd80(uVar2);\n            uVar4 = fcn.004493a0(uVar2);\n            uVar2 = uStack40;\n            arg1 = SUB168(auStack32, 0);\n            uVar6 = arg1;\n            if (uStack24 < arg1 + 1) {\n                uStack40 = fcn.00445220(arg1);\n                uVar6 = uVar2;\n                uStack24 = arg1;\n            }\n            auStack32 = CONCAT88(uStack24, uVar6 + 1);\n            iVar1 = uVar6 * 0x10;\n            *(uStack40 + 8 + iVar1) = uVar3;\n            piVar5 = noname_0 + (piVar5 - noname_0) + 2U;\n            if (*0x789810 == 0) {\n                *(uStack40 + iVar1) = uVar4;\n                noname_0 = piVar5;\n            }\n            else {\n                fcn.0045c100(iVar1, uStack40, noname_0, in_R9);\n                noname_0 = piVar5;\n            }\n        }\n        (*auStack56._0_8_)();\n        return uStack40;\n    }\n    uVar2 = fcn.0046dba0();\n    return uVar2;\n}\n",
        "token_count": 729
    },
    "00487120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00487120(int64_t arg1, ulong noname_1, ulong *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong *puVar8;\n    int64_t arg1_00;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong *unaff_RDI;\n    int64_t iVar12;\n    ulong uVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x60 && *0x20 + -0x60 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xe0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x70) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if ((arg3 == NULL) || (arg3[8] != 0)) {\ncode_r0x00487227:\n                *(*0x20 + -0x50) = 0;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                uVar13 = arg3[1];\n                *(*0x20 + -0x50) = *arg3;\n                *(*0x20 + -0x48) = uVar13;\n                iVar10 = arg3[2];\n                uVar13 = arg3[3];\n                uVar4 = arg3[4];\n                *(*0x20 + -0x40) = iVar10;\n                *(*0x20 + -0x38) = uVar13;\n                *(*0x20 + -0x30) = uVar4;\n                uVar13 = arg3[8];\n                *(*0x20 + -0x10) = uVar13;\n                if (iVar10 == 0) {\n                    *(*0x20 + -0xe8) = 0x4872b7;\n                    uVar4 = fcn.00486bc0();\n                    *(*0x20 + -0x38) = unaff_RBX;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x40) = uVar4;\n                    if (unaff_RDI != NULL) {\n                        return 0;\n                    }\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar4 = arg3[6];\n                *(*0x20 + -0x78) = uVar4;\n                *(*0x20 + -0xe8) = 0x4872f3;\n                uVar4 = fcn.00445140(uVar4);\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = *(*0x20 + -0x78);\n                *(*0x20 + -0x28) = uVar4;\n                iVar10 = *(*0x20 + 0x30);\n                iVar9 = *(iVar10 + 0x28);\n                *(*0x20 + -0x58) = iVar9;\n                iVar12 = *(iVar10 + 0x30);\n                *(*0x20 + -0x78) = iVar12;\n                for (iVar5 = 0; iVar5 < iVar12; iVar5 = iVar5 + 1) {\n                    piVar1 = *(iVar9 + iVar5 * 8);\n                    if (piVar1 == NULL) {\n                        uVar13 = 0xffffffffffffffff;\n                    }\n                    else {\n                        uVar13 = *(*piVar1 + 0x10);\n                    }\n                    arg1_00 = *(*0x20 + -0x20);\n                    iVar2 = *(*0x20 + -0x28);\n                    iVar6 = iVar2;\n                    if (*(*0x20 + -0x18) < arg1_00 + 1U) {\n                        *(*0x20 + -0x80) = iVar5;\n                        *(*0x20 + -0xa0) = uVar13;\n                        *(*0x20 + -0xe8) = 0x4873c5;\n                        iVar6 = fcn.00445220(arg1_00);\n                        *(*0x20 + -0x18) = arg1_00;\n                        *(*0x20 + -0x28) = iVar6;\n                        iVar10 = *(*0x20 + 0x30);\n                        iVar9 = *(*0x20 + -0x58);\n                        iVar12 = *(*0x20 + -0x78);\n                        uVar13 = *(*0x20 + -0xa0);\n                        iVar5 = *(*0x20 + -0x80);\n                        arg1_00 = iVar2;\n                    }\n                    *(*0x20 + -0x20) = arg1_00 + 1;\n                    *(iVar6 + arg1_00 * 8) = uVar13;\n                }\n                uVar4 = *(*0x20 + -0x70);\n                iVar9 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x20);\n                puVar11 = *0x20 + -0x50;\n                *(*0x20 + -0xe8) = 0x487431;\n                uVar7 = fcn.0046ed20(iVar9, iVar10, puVar11);\n                if (iVar9 != 0) {\n                    *(*0x20 + -0x60) = uVar3;\n                    *(*0x20 + -0x88) = iVar9;\n                    *(*0x20 + -0xe8) = 0x487453;\n                    puVar8 = fcn.0040bf40();\n                    puVar8[1] = 9;\n                    *puVar8 = 0x4ad6d4;\n                    uVar4 = *(*0x20 + -0x70);\n                    puVar8[3] = uVar4;\n                    if (*0x789810 == 0) {\n                        puVar8[2] = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xe8) = 0x487496;\n                        puVar8 = fcn.0045c220(uVar4, *(*0x20 + 8), puVar11, uVar13);\n                    }\n                    puVar8[4] = *(*0x20 + -0x88);\n                    if (*0x789810 == 0) {\n                        puVar8[5] = *(*0x20 + -0x60);\n                    }\n                    else {\n                        *(*0x20 + -0xe8) = 0x4874c7;\n                        fcn.0045c220(uVar4, *(*0x20 + -0x60), puVar11, uVar13);\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x98) = uVar7;\n                *(*0x20 + -0x90) = uVar4;\n                *(*0x20 + -0xe8) = 0x4874f9;\n                puVar8 = fcn.0040bf40();\n                *(*0x20 + -0x68) = puVar8;\n                *puVar8 = *(*0x20 + -0x98);\n                puVar8[1] = *(*0x20 + -0x90);\n                *(*0x20 + -0xe8) = 0x48752c;\n                fcn.00415080(0x49cc20);\n                return *(*0x20 + -0x68);\n            }\n            uVar13 = *arg3;\n            if (arg3[1] == 0) goto code_r0x00487227;\n            *(*0x20 + -0xe8) = 0x4871a5;\n            fcn.00489c40();\n            if (arg1 == 0) {\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + -0x70);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                goto code_r0x00487227;\n            }\n            if (arg1 == 0x6b5920) {\n                unaff_RDI[1] = 5;\n                if (*0x789810 == 0) {\n                    *unaff_RDI = 0x4acdd0;\n                }\n                else {\n                    *(*0x20 + -0xe8) = 0x487212;\n                    fcn.0045c220(0x6b5920, 0x4acdd0, arg3, uVar13);\n                }\n                return 0;\n            }\n            unaff_RBX = 0x4a0580;\n            arg1 = 0x49fe00;\n            *(*0x20 + -0xe8) = 0x48755b;\n            in_RAX = fcn.00409580(0x49fe00);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + 0x28) = unaff_RSI;\n        *(puVar11 + 0x30) = arg3;\n        *(puVar11 + -8) = 0x48757f;\n        fcn.00459ea0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        unaff_RSI = *(puVar11 + 0x28);\n        arg3 = *(puVar11 + 0x30);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2437
    },
    "004875c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004875c0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    ppcStack16 = NULL;\n    iVar4 = *(in_RAX + 8);\n    if (iVar4 != -1) {\n        if (*(in_RAX + 0x10) != 0) {\n            return *0x735570;\n        }\n        if (*0x72e410 == unaff_RBX) {\n            iVar2 = iVar4;\n            cVar1 = fcn.00402fa0(*0x72e418);\n            if (cVar1 != '\\0') {\n                iVar2 = fcn.00471940(0xffffffffffffffff, iVar2, 0, 0);\n                if (iVar2 != 0) {\n                    iStack40 = iVar4;\n                    puVar3 = fcn.0040bf40();\n                    puVar3[1] = 0xf;\n                    *puVar3 = 0x4ae7a1;\n                    puVar3[2] = iVar2;\n                    if (*0x789810 == 0) {\n                        puVar3[3] = iStack40;\n                    }\n                    else {\n                        fcn.0045c200(iStack40);\n                    }\n                    return 0x6b59c0;\n                }\n                auStack56 = ZEXT816(0x4878c0);\n                ppcStack16 = auStack56;\n                iVar4 = fcn.004731a0();\n                if (iVar4 == 0) {\n                    uVar5 = 0;\n                    puVar3 = NULL;\n                }\n                else {\n                    iStack40 = 1;\n                    puVar3 = fcn.0040bf40();\n                    puVar3[1] = 0x10;\n                    *puVar3 = 0x4aebb9;\n                    puVar3[2] = iVar4;\n                    if (*0x789810 == 0) {\n                        puVar3[3] = iStack40;\n                    }\n                    else {\n                        puVar3 = fcn.0045c200(iStack40);\n                    }\n                    uVar5 = 0x6b59c0;\n                }\n                auStack32 = CONCAT88(puVar3, uVar5);\n                (**ppcStack16)();\n                return auStack32._0_8_;\n            }\n        }\n        return 0x6b5ac0;\n    }\n    return 0x6b5ac0;\n}\n",
        "token_count": 678
    },
    "00487920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00487920(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = -1;\n    if (iVar1 != -1) {\n        iVar1 = fcn.00471260();\n        if (iVar1 != 0) {\n            puVar2 = fcn.0040bf40();\n            puVar2[1] = 0xb;\n            *puVar2 = 0x4adb21;\n            puVar2[2] = iVar1;\n            if (*0x789810 == 0) {\n                puVar2[3] = unaff_RBX;\n            }\n            else {\n                fcn.0045c200(unaff_RBX);\n            }\n            return 0x6b59c0;\n        }\n        fcn.00415080(0);\n        return 0;\n    }\n    return 0x6b5ac0;\n}\n",
        "token_count": 289
    },
    "00487b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00487b20(void)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    int64_t *arg1;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint8_t uVar11;\n    int64_t *piVar12;\n    int64_t in_R11;\n    int64_t unaff_R14;\n    int64_t *piStack64;\n    int64_t iStack24;\n    uint8_t *puStack16;\n    \n    while (piVar10 = &iStack24,  piVar10 < *(unaff_R14 + 0x10) || piVar10 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar5 = NULL;\n    piVar4 = NULL;\n    iVar6 = 0;\n    arg1 = NULL;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX < 1) {\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445220(arg1);\n                    piVar10 = iVar6 + 1;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n            }\n            return iVar6;\n        }\n        uVar1 = *in_RAX;\n        uVar9 = uVar8;\n        iStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                    piVar10 = arg1 + 1;\n                    iVar3 = iVar6;\n                    if (piVar4 < piVar10) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00445220(arg1);\n                        piVar10 = iVar6 + 1;\n                    }\n                    *(iVar3 + arg1) = 0x5c;\n                    arg1 = piVar10;\n                    iVar6 = iVar3;\n                }\n                return iVar6;\n            }\ncode_r0x00487ce2:\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar12 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445220(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar12;\n                iVar6 = iVar3;\n            }\n            piVar12 = arg1 + 1;\n            iVar3 = iVar6;\n            if (piVar4 < piVar12) {\n                piVar4 = arg1;\n                iVar3 = fcn.00445220(arg1);\n                piVar12 = iVar6 + 1;\n                uVar9 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = iStack24;\n            }\n            *(iVar3 + arg1) = uVar1;\n            piVar5 = NULL;\n            iVar6 = iVar3;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                in_R11 = piVar5 / 2;\n                piVar2 = uVar1;\n                piVar12 = piVar5;\n                piStack64 = piVar5;\n                goto code_r0x00487d5f;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00487ce2;\n            piVar5 = piVar5 + 1;\n            piVar12 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.0045c660(0);\n            iVar3 = iVar6;\n            while( true ) {\n                *(iVar3 + arg1) = 0x5c;\n                in_R11 = in_R11 + -1;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n                piVar2 = piVar5;\ncode_r0x00487d5f:\n                piVar5 = piVar2;\n                uVar7 = uVar9;\n                if (in_R11 < 1) break;\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445220(arg1);\n                    piVar10 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    piVar5 = uVar1;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    piVar12 = piStack64;\n                }\n            }\n            if ((piVar12 & 1) == 0) {\n                piVar12 = arg1;\n                if (((uVar9 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    piVar12 = arg1 + 1;\n                    iVar3 = iVar6;\n                    uVar11 = piVar5;\n                    if (piVar4 < piVar12) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00445220(arg1);\n                        piVar12 = iVar6 + 1;\n                        uVar7 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = iStack24;\n                        uVar11 = uVar1;\n                    }\n                    *(iVar3 + arg1) = uVar11;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX + -1;\n                    iVar6 = iVar3;\n                }\n                uVar9 = uVar7 ^ 1;\n            }\n            else {\n                piVar12 = arg1 + 1;\n                uVar11 = piVar5;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445220(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    iVar6 = iVar3;\n                    uVar11 = uVar1;\n                }\n                *(iVar6 + arg1) = uVar11;\n            }\n            piVar5 = NULL;\n        }\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = piVar12;\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1708
    },
    "00487f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00487f60(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar6 = 0;\n    while (0 < unaff_RBX) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.00487b20();\n            uVar3 = fcn.00448f60(unaff_RBX);\n            uVar7 = uVar5 + 1;\n            arg2 = iVar6;\n            if (arg1 < uVar7) {\n                arg1 = uVar5;\n                arg2 = fcn.00445220(uVar5);\n                uVar7 = iVar6 + 1;\n            }\n            iVar4 = uVar5 * 0x10;\n            *(arg2 + 8 + iVar4) = uVar2;\n            in_RAX = uVar1;\n            uVar5 = uVar7;\n            unaff_RBX = iVar6;\n            if (*0x789810 == 0) {\n                *(arg2 + iVar4) = uVar3;\n                iVar6 = arg2;\n            }\n            else {\n                fcn.0045c100(arg1, arg2, arg2 + iVar4, in_R9);\n                iVar6 = arg2;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 503
    },
    "00488600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00488600(ulong arg1)\n\n{\n    ulong noname_1;\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = *0x735530;\n    if (in_RAX != NULL) {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        iVar2 = fcn.00485e80(arg1);\n        if (iVar2 < 0) {\n            iVar2 = 0;\n        }\n        if (unaff_RBX != 0) {\n            if (*0x7353b0 == unaff_RBX) {\n                cVar1 = fcn.00402fa0(*0x7353b8);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') {\n                if ((*0x735350 == unaff_RBX) && (cVar1 = fcn.00402fa0(*0x735358),  cVar1 != '\\0')) {\n                    arg1 = *0x735508;\n                    unaff_RBX = *0x735500;\n                }\n                puVar3 = fcn.0040bf40();\n                puVar3[1] = 5;\n                *puVar3 = 0x4ace5c;\n                noname_1 = *(*in_RAX + 0x228);\n                arg1_00 = *(*in_RAX + 0x230);\n                puVar3[3] = arg1_00;\n                if (*0x789810 == 0) {\n                    puVar3[2] = noname_1;\n                }\n                else {\n                    puVar3 = fcn.0045c220(arg1_00, noname_1, in_R8, in_R9);\n                }\n                puVar3[4] = unaff_RBX;\n                if (*0x789810 == 0) {\n                    puVar3[5] = arg1;\n                }\n                else {\n                    fcn.0045c220(arg1_00, arg1, in_R8, in_R9);\n                }\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 577
    },
    "00488c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00488daf)\n// WARNING: Removing unreachable block (ram,0x00488e27)\n\nint64_t * fcn.00488c00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    char cVar1;\n    ulong in_RAX;\n    int64_t *piVar2;\n    uint64_t arg2_00;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        piVar2 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xf0) = 0x488c3b;\n            piVar2 = fcn.00489960();\n            *(*0x20 + -0x20) = piVar2;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            if ((unaff_RBX == 0x2) && (*(piVar2 + 1) == ':')) {\n                unaff_RDI = 0x6b4757;\n                *(*0x20 + -0xf0) = 0x488c70;\n                arg2_00 = fcn.00448ba0(2);\n            }\n            else if (unaff_RBX < 1) {\n                piVar2 = 0x2;\n                arg2_00 = 0x4aca37;\n            }\n            else {\n                cVar1 = *(unaff_RBX + -1 + piVar2);\n                if ((cVar1 == '/') || (cVar1 == '\\\\')) {\n                    unaff_RDI = 0x6b4757;\n                    *(*0x20 + -0xf0) = 0x488ca8;\n                    arg2_00 = fcn.00448ba0(unaff_RBX);\n                }\n                else {\n                    unaff_RDI = 0x4aca37;\n                    *(*0x20 + -0xf0) = 0x488cc6;\n                    arg2_00 = fcn.00448ba0(unaff_RBX);\n                }\n            }\n            *(*0x20 + -0xf0) = 0x488cf2;\n            piVar6 = piVar2;\n            uVar3 = fcn.0046fd80();\n            if (unaff_RDI == 0) {\n                if (piVar2 != NULL) {\n                    unaff_RDI = 0;\n                    goto code_r0x00488d0d;\n                }\n            }\n            else {\n                uVar3 = 0;\ncode_r0x00488d0d:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0xf0) = 0x488d2a;\n                iVar4 = fcn.0040bf40();\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0xf0) = 0x488d45;\n                uVar3 = fcn.004706a0();\n                *(*0x20 + -0xc0) = uVar3;\n                if (iVar4 == 0) {\n                    iVar4 = *(*0x20 + -0x18);\n                    goto code_r0x00488e59;\n                }\n                if (((iVar4 == 0) || (*(iVar4 + 8) != 0x4a1100)) || (*piVar6 != 2)) {\n                    return NULL;\n                }\n                *(*0x20 + -0x4c) = 0;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                piVar2 = *(*0x20 + -0xb8);\n                *(*0x20 + -0xf0) = 0x488daa;\n                fcn.0046fd80();\n                if (piVar2 != NULL) {\n                    *(*0x20 + -0xf0) = 0x488dd4;\n                    iVar4 = fcn.00472500(*0x20 + -0x4c);\n                    if (iVar4 != 0) {\n                        return NULL;\n                    }\n                    arg2_00 = *(*0x20 + -0x4c);\n                    if ((*(*0x20 + -0x4c) >> 4 & 1) == 0) {\n                        return NULL;\n                    }\n                    iVar4 = *(*0x20 + -0x18);\n                    *(iVar4 + 0x260) = 1;\ncode_r0x00488e59:\n                    *(iVar4 + 600) = *(*0x20 + -0xb8);\n                    *(*0x20 + -0x10) = iVar4 + 0x250;\n                    if (*0x789810 == 0) {\n                        *(iVar4 + 0x250) = *(*0x20 + -0x20);\n                    }\n                    else {\n                        *(*0x20 + -0xf0) = 0x488e9b;\n                        fcn.0045c100(iVar4, arg2_00, param_3, param_4);\n                    }\n                    *(*0x20 + -0xf0) = 0x488ea5;\n                    cVar1 = fcn.00489760();\n                    if (cVar1 == '\\0') {\n                        iVar4 = *(*0x20 + -0x18);\n                        uVar3 = *(iVar4 + 600);\n                        *(*0x20 + -0xf0) = 0x488ec5;\n                        uVar5 = fcn.0046e820();\n                        arg2 = *(*0x20 + -0x18);\n                        *(arg2 + 600) = uVar3;\n                        if (*0x789810 == 0) {\n                            *(arg2 + 0x250) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0xf0) = 0x488ef6;\n                            fcn.0045c100(iVar4, arg2, param_3, param_4);\n                        }\n                        if (iVar4 != 0) {\n                            return NULL;\n                        }\n                    }\n                    uVar3 = *(*0x20 + 0x10);\n                    *(*0x20 + -0xf0) = 0x488f25;\n                    piVar2 = fcn.00488940(uVar3);\n                    if (*0x789810 == 0) {\n                        *(*piVar2 + 0x238) = *(*0x20 + -0x18);\n                    }\n                    else {\n                        *(*0x20 + -0xf0) = 0x488f5a;\n                        piVar2 = fcn.0045c220(uVar3, *(*0x20 + -0x18), param_3, param_4);\n                    }\n                    return piVar2;\n                }\n                *(*0x20 + -0xf0) = 0x488fa8;\n                fcn.0045c5a0(0);\n            }\n            *(*0x20 + -0xf0) = 0x488fb2;\n            in_RAX = fcn.0045c5a0(piVar2);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = piVar2;\n        *(puVar7 + -8) = 0x488fc5;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1889
    },
    "00488fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00488fe0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    uint64_t noname_1;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = fcn.0040bf40();\n        puVar1[1] = 4;\n        *puVar1 = 0x4acc94;\n        puVar1[3] = 0;\n        if (*0x789810 == 0) {\n            puVar1[2] = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045c220(0, in_RAX, in_R8, in_R9);\n        }\n        puVar1[4] = 0x6b5ac0;\n        puVar1[5] = 0x69e228;\n        return 0;\n    }\n    noname_1 = arg1;\n    iVar2 = fcn.00488b00(arg1);\n    if (unaff_RBX == 0) {\n        return iVar2;\n    }\n    iVar2 = fcn.00488c00();\n    if (unaff_RBX == 0) {\n        if (((arg1 & 1) == 0) && ((arg1 >> 1 & 1) == 0)) {\n            return iVar2;\n        }\n        if (iVar2 != 0) {\n            fcn.00489240();\n        }\n        puVar1 = fcn.0040bf40();\n        puVar1[1] = 4;\n        *puVar1 = 0x4acc94;\n        puVar1[3] = 0;\n        if (*0x789810 == 0) {\n            puVar1[2] = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045c220(0, in_RAX, in_R8, in_R9);\n        }\n        puVar1[4] = 0x6b5ac0;\n        puVar1[5] = 0x6b5358;\n        return 0;\n    }\n    puVar1 = fcn.0040bf40();\n    puVar1[1] = 4;\n    *puVar1 = 0x4acc94;\n    puVar1[3] = unaff_RBX;\n    iVar2 = unaff_RBX;\n    if (*0x789810 == 0) {\n        puVar1[2] = in_RAX;\n    }\n    else {\n        puVar1 = fcn.0045c220(unaff_RBX, in_RAX, in_R8, in_R9);\n    }\n    puVar1[4] = unaff_RBX;\n    if (*0x789810 == 0) {\n        puVar1[5] = noname_1;\n    }\n    else {\n        fcn.0045c220(iVar2, noname_1, in_R8, in_R9);\n    }\n    return 0;\n}\n",
        "token_count": 745
    },
    "00489240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00489240(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX == 0) {\n        return 0x6b5ac0;\n    }\n    if ((*(in_RAX + 0x238) != 0) && (*(*(in_RAX + 0x238) + 0x260) != '\\0')) {\n        return 0;\n    }\n    iVar2 = fcn.00485440();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        if ((*0x735350 == iVar2) && (cVar1 = fcn.00402fa0(*0x735358),  cVar1 != '\\0')) {\n            iVar2 = *0x735500;\n            unaff_RBX = *0x735508;\n        }\n        puVar3 = fcn.0040bf40();\n        puVar3[1] = 5;\n        *puVar3 = 0x4acdd5;\n        uVar4 = *(in_RAX + 0x228);\n        puVar3[3] = *(in_RAX + 0x230);\n        if (*0x789810 == 0) {\n            puVar3[2] = uVar4;\n        }\n        else {\n            puVar3 = fcn.0045c200();\n        }\n        puVar3[4] = iVar2;\n        if (*0x789810 == 0) {\n            puVar3[5] = unaff_RBX;\n        }\n        else {\n            fcn.0045c220(uVar4, unaff_RBX, param_3, param_4);\n        }\n        uVar4 = 0x6b5920;\n    }\n    fcn.00415080(0);\n    return uVar4;\n}\n",
        "token_count": 511
    },
    "004893e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004893e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong arg1_00;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00489960();\n    arg1_00 = fcn.00489960();\n    iVar1 = fcn.004826c0(arg1_00);\n    if (iVar1 != 0) {\n        puVar2 = fcn.0040bf40();\n        puVar2[1] = 6;\n        *puVar2 = 0x4acfed;\n        puVar2[3] = unaff_RBX;\n        if (*0x789810 == 0) {\n            puVar2[2] = in_RAX;\n        }\n        else {\n            puVar2 = fcn.0045c200(in_RAX);\n        }\n        puVar2[5] = unaff_RDI;\n        if (*0x789810 == 0) {\n            puVar2[4] = arg1;\n        }\n        else {\n            puVar2 = fcn.0045c200(arg1);\n        }\n        puVar2[6] = iVar1;\n        if (*0x789810 == 0) {\n            puVar2[7] = unaff_RBX;\n        }\n        else {\n            fcn.0045c200(unaff_RBX);\n        }\n        return 0x6b59a0;\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "00489560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00489560(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg1;\n    ulong *puVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1 = fcn.004705a0(2);\n    if (arg1 != 0) {\n        puVar1 = fcn.0040bf40();\n        puVar1[1] = 4;\n        *puVar1 = 0x4acc9c;\n        puVar1[2] = arg1;\n        if (*0x789810 == 0) {\n            puVar1[3] = 2;\n        }\n        else {\n            fcn.0045c220(arg1, 2, param_3, param_4);\n        }\n        return 0;\n    }\n    uVar2 = fcn.00488940(2);\n    fcn.00488940(2);\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "00489680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00489680(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    \n    if ((unaff_RBX == 2) && (*(in_RAX + 1) == ':')) {\n        in_RAX = 0x4ac9c5;\n        unaff_RBX = 1;\n    }\n    else if ((2 < unaff_RBX) && (*(in_RAX + 1) == ':')) {\n        in_RAX = in_RAX + 2;\n        unaff_RBX = unaff_RBX - 2;\n    }\n    do {\n        arg1 = unaff_RBX;\n        unaff_RBX = arg1 - 1;\n        if (unaff_RBX < 1) break;\n        if (arg1 <= unaff_RBX) goto code_r0x00489745;\n    } while ((*(in_RAX + unaff_RBX) == '/') || (*(in_RAX + unaff_RBX) == '\\\\'));\n    while( true ) {\n        unaff_RBX = unaff_RBX - 1;\n        if (unaff_RBX < 0) {\n            return;\n        }\n        if (arg1 <= unaff_RBX) break;\n        if (*(in_RAX + unaff_RBX) == '/') {\n            return;\n        }\n        if (*(in_RAX + unaff_RBX) == '\\\\') {\n            return;\n        }\n    }\n    fcn.0045c5a0(arg1);\ncode_r0x00489745:\n    fcn.0045c5a0(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 378
    },
    "00489820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * fcn.00489820(void)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    char *in_RAX;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    \n    if (unaff_RBX < 2) {\n        return NULL;\n    }\n    cVar1 = *in_RAX;\n    cVar2 = in_RAX[1];\n    if ((cVar2 == ':') && (((cVar1 - 0x30U < 10 || (cVar1 + 0x9fU < 0x1a)) || (cVar1 + 0xbfU < 0x1a)))) {\n        return in_RAX;\n    }\n    if ((((4 < unaff_RBX) && ((cVar1 == '\\\\' || (cVar1 == '/')))) && ((cVar2 == '\\\\' || (cVar2 == '/')))) &&\n       (((cVar1 = in_RAX[2],  cVar1 != '\\\\' && (cVar1 != '/')) && (cVar1 != '.')))) {\n        for (iVar5 = 3; iVar5 < unaff_RBX - 1; iVar5 = iVar5 + 1) {\n            if ((in_RAX[iVar5] == '\\\\') || (in_RAX[iVar5] == '/')) {\n                arg1 = iVar5 + 1;\n                if (arg1 < unaff_RBX) {\n                    cVar1 = in_RAX[iVar5 + 1];\n                    if (cVar1 == '\\\\') {\n                        return NULL;\n                    }\n                    if (cVar1 == '/') {\n                        return NULL;\n                    }\n                    if (cVar1 == '.') {\n                        return NULL;\n                    }\n                    for (; ((arg1 < unaff_RBX && (in_RAX[arg1] != '\\\\')) && (in_RAX[arg1] != '/')); arg1 = arg1 + 1) {\n                    }\n                    if (arg1 <= unaff_RBX) {\n                        return in_RAX;\n                    }\n                    fcn.0045c5e0(arg1, unaff_RBX);\n                }\n                fcn.0045c5a0(unaff_RBX);\n                pcVar3 = swi(3);\n                pcVar4 = (*pcVar3)();\n                return pcVar4;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 527
    },
    "0048a6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.0048a6a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack120;\n    ulong uStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    ulong uStack88;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    uchar auStack56 [12];\n    uint uStack44;\n    uchar auStack40 [12];\n    uint uStack28;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uStack76 = 0;\n    uStack72 = SUB164(in_XMM15, 0);\n    uStack68 = SUB164(in_XMM15 >> 0x20, 0);\n    uStack64 = SUB168(in_XMM15 >> 0x40, 0);\n    puStack16 = &uStack76;\n    uStack96 = arg1;\n    uStack88 = unaff_RBX;\n    _auStack56 = in_XMM15;\n    _auStack40 = in_XMM15;\n    iVar1 = fcn.00472620();\n    if (iVar1 != 0) {\n        iStack104 = iVar1;\n        puVar2 = fcn.0040bf40();\n        puVar2[1] = 0x1a;\n        *puVar2 = 0x4b16d1;\n        puVar2[3] = uStack88;\n        if (*0x789810 == 0) {\n            puVar2[2] = in_RAX;\n        }\n        else {\n            puVar2 = fcn.0045c220(uStack88, in_RAX, in_R8, in_R9);\n        }\n        puVar2[4] = iStack104;\n        if (*0x789810 == 0) {\n            puVar2[5] = puStack16;\n        }\n        else {\n            fcn.0045c220(uStack88, puStack16, in_R8, in_R9);\n        }\n        return NULL;\n    }\n    uStack120 = 0;\n    iVar1 = fcn.004827c0(&uStack120);\n    if (iVar1 != 0) {\n        iVar3 = *0x9;\n        if (iVar1 != 0x6b5ac0) {\n            iVar3 = 0;\n        }\n        uStack24 = 9;\n        iStack104 = iVar1;\n        if ((iVar1 != 0x6b5ac0) || (iVar3 != 0x57)) {\n            puVar2 = fcn.0040bf40();\n            puVar2[1] = 0x1c;\n            *puVar2 = 0x4b1e05;\n            puVar2[3] = uStack88;\n            if (*0x789810 == 0) {\n                puVar2[2] = in_RAX;\n            }\n            else {\n                puVar2 = fcn.0045c220(uStack88, in_RAX, in_R8, in_R9);\n            }\n            puVar2[4] = iStack104;\n            if (*0x789810 == 0) {\n                puVar2[5] = uStack24;\n            }\n            else {\n                fcn.0045c220(uStack88, uStack24, in_R8, in_R9);\n            }\n            return NULL;\n        }\n        uStack120 = uStack120 & 0xffffffff;\n    }\n    puStack16 = fcn.00489680();\n    uStack112 = uStack88;\n    puVar2 = fcn.0040bf40();\n    puVar2[1] = uStack112;\n    if (*0x789810 == 0) {\n        *puVar2 = puStack16;\n    }\n    else {\n        puVar2 = fcn.0045c220(uStack112, puStack16, in_R8, in_R9);\n    }\n    *(puVar2 + 2) = uStack76;\n    *(puVar2 + 0x14) = CONCAT44(uStack68, uStack72);\n    *(puVar2 + 0x1c) = uStack64;\n    *(puVar2 + 0x24) = auStack56._0_8_;\n    *(puVar2 + 0x2c) = uStack44;\n    *(puVar2 + 6) = auStack40._0_4_;\n    *(puVar2 + 0xb) = auStack56._8_4_;\n    *(puVar2 + 0x5c) = auStack40._8_4_;\n    *(puVar2 + 0xc) = uStack28;\n    *(puVar2 + 0x34) = uStack120._4_4_;\n    return puVar2;\n}\n",
        "token_count": 1169
    },
    "0048a9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048a9c0(ulong *arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong *arg1_00;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    in_RAX[10] = arg1;\n    if (*0x789810 == 0) {\n        in_RAX[9] = unaff_RBX;\n    }\n    else {\n        fcn.0045c240(arg1, arg2, arg3, arg4);\n    }\n    arg1_00 = arg1;\n    cVar1 = fcn.00489760();\n    if (cVar1 == '\\0') {\n        uVar3 = in_RAX[10];\n        arg1_00 = in_RAX;\n        uVar2 = fcn.0046e820();\n        in_RAX[10] = uVar3;\n        arg2 = in_RAX;\n        if (*0x789810 == 0) {\n            in_RAX[9] = uVar2;\n        }\n        else {\n            fcn.0045c100(arg1_00, in_RAX, arg3, arg4);\n        }\n        if (arg1_00 != NULL) {\n            puVar4 = fcn.0040bf40();\n            puVar4[1] = 8;\n            *puVar4 = 0x4ad306;\n            puVar4[3] = arg1;\n            if (*0x789810 == 0) {\n                puVar4[2] = unaff_RBX;\n            }\n            else {\n                puVar4 = fcn.0045c200(unaff_RBX);\n            }\n            puVar4[4] = arg1_00;\n            if (*0x789810 == 0) {\n                puVar4[5] = in_RAX + 9;\n            }\n            else {\n                fcn.0045c200(in_RAX + 9);\n            }\n            return 0x6b5920;\n        }\n    }\n    uVar3 = fcn.00489680();\n    in_RAX[1] = arg1;\n    if (*0x789810 == 0) {\n        *in_RAX = uVar3;\n    }\n    else {\n        fcn.0045c100(arg1_00, arg2, arg3, arg4);\n    }\n    return 0;\n}\n",
        "token_count": 602
    },
    "0048b640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0048b640(uint64_t arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *arg3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *in_RAX;\n            if (arg3 == NULL) {\n                if (*0x789810 == 0) {\n                    *in_RAX = in_RAX;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x48b685;\n                    in_RAX = fcn.0045c100(arg1, arg2, 0, arg4);\n                }\ncode_r0x0048b685:\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_EBX;\n                if (unaff_EBX < 0x80) {\n                    iVar4 = in_RAX[2];\n                    iVar2 = in_RAX[1];\n                    iVar1 = iVar2;\n                    if (in_RAX[3] < iVar4 + 1U) {\n                        *(*0x20 + -0x68) = 0x48b6ba;\n                        iVar1 = fcn.00445220(iVar4);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[3] = iVar4;\n                        if (*0x789810 == 0) {\n                            in_RAX[1] = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x48b6db;\n                            iVar1 = fcn.0045c100(iVar4, in_RAX, arg3, arg4);\n                        }\n                        unaff_EBX = *(*0x20 + 0x10);\n                        iVar4 = iVar2;\n                    }\n                    in_RAX[2] = iVar4 + 1;\n                    *(iVar1 + iVar4) = unaff_EBX;\n                    return 1;\n                }\n                arg1_01 = in_RAX[2];\n                *(*0x20 + -0x20) = arg1_01;\n                arg4 = in_RAX[3];\n                iVar4 = arg4 - arg1_01;\n                if (iVar4 < 4) {\n                    iVar2 = arg4 * 2 + 4;\n                    *(*0x20 + -0x18) = iVar2;\n                    *(*0x20 + -0x68) = 0x48b747;\n                    iVar2 = fcn.00445140(iVar2);\n                    in_RAX = *(*0x20 + 8);\n                    arg1_01 = *(*0x20 + -0x20);\n                    arg1_00 = arg1_01;\n                    if (in_RAX[2] < arg1_01) {\n                        arg1_00 = in_RAX[2];\n                    }\n                    if (iVar2 != in_RAX[1]) {\n                        *(*0x20 + -0x10) = iVar2;\n                        *(*0x20 + -0x68) = 0x48b772;\n                        fcn.0045cee0(arg1_00);\n                        iVar2 = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                        arg1_01 = *(*0x20 + -0x20);\n                    }\n                    in_RAX[2] = arg1_01;\n                    in_RAX[3] = *(*0x20 + -0x18);\n                    if (*0x789810 == 0) {\n                        in_RAX[1] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x48b7ac;\n                        fcn.0045c100(arg1_01, in_RAX, iVar4, arg4);\n                    }\n                }\n                arg2 = in_RAX[3];\n                iVar4 = in_RAX[1];\n                arg1 = arg1_01 + 4;\n                if (arg1 <= arg2) {\n                    if (arg1_01 <= arg1) {\n                        *(*0x20 + -0x68) = 0x48b7ef;\n                        iVar4 = fcn.00463380(arg2 - arg1_01, -(arg2 - arg1_01) >> 0x3f & arg1_01, iVar4);\n                        arg2 = *(*(*0x20 + 8) + 0x18);\n                        arg1 = *(*0x20 + -0x20) + iVar4;\n                        if (arg1 <= arg2) {\n                            *(*(*0x20 + 8) + 0x10) = arg1;\n                            return iVar4;\n                        }\n                        *(*0x20 + -0x68) = 0x48b825;\n                        fcn.0045c620(arg1, arg2);\n                    }\n                    *(*0x20 + -0x68) = 0x48b82d;\n                    fcn.0045c660(arg1);\n                }\n                *(*0x20 + -0x68) = 0x48b832;\n                fcn.0045c620(arg1, arg2);\n            }\n            else if (in_RAX == arg3) goto code_r0x0048b685;\n            unaff_EBX = 0x6b56c8;\n            *(*0x20 + -0x68) = 0x48b845;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x48b854;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1469
    },
    "0048b880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048b880(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t arg4;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x48b8ac;\n            iVar2 = fcn.004634e0();\n            iVar3 = *(*0x20 + 0x18);\n            if ((-1 < iVar3) && (iVar3 <= iVar2)) {\n                iVar2 = iVar3;\n            }\n            *(*0x20 + -0x28) = iVar2;\n            *(*0x20 + -0x50) = 0x48b8d5;\n            arg4 = fcn.00445140(iVar2);\n            *(*0x20 + -0x10) = arg4;\n            iVar3 = 0;\n            iVar2 = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n            while( true ) {\n                iVar6 = *(*0x20 + -0x28) + -1;\n                if (iVar6 <= iVar3) {\n                    if (0 < *(*0x20 + -0x28)) {\n                        iVar6 = iVar6 * 0x10;\n                        *(arg4 + 8 + iVar6) = unaff_RBX;\n                        if (*0x789810 == 0) {\n                            *(arg4 + iVar6) = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x48b9f1;\n                            fcn.0045c220(iVar3, iVar2, iVar6, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x30) = iVar3;\n                *(*0x20 + -0x20) = unaff_RBX;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x50) = 0x48b925;\n                iVar1 = fcn.004630a0();\n                uVar4 = *(*0x20 + -0x20);\n                if (uVar4 < unaff_RBX) goto code_r0x0048ba09;\n                arg3 = *(*0x20 + -0x30);\n                arg1_00 = *(*0x20 + -0x28);\n                if (arg1_00 <= arg3) break;\n                iVar6 = arg3 * 0x10;\n                arg4 = *(*0x20 + -0x10);\n                *(arg4 + 8 + iVar6) = unaff_RBX;\n                uVar4 = uVar4 - unaff_RBX;\n                iVar3 = *(*0x20 + -0x18);\n                iVar2 = iVar3 + (unaff_RBX & -uVar4 >> 0x3f);\n                if (*0x789810 == 0) {\n                    *(arg4 + iVar6) = iVar3;\n                    unaff_RBX = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x50) = 0x48b98d;\n                    iVar1 = fcn.0045c220(arg1_00, iVar3, arg3, arg4);\n                    unaff_RBX = uVar4;\n                }\n                if (iVar1 == 0xfffd) {\n                    *(arg4 + 8 + iVar6) = 3;\n                    if (*0x789810 == 0) {\n                        *(arg4 + iVar6) = 0x4acb75;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = 0x48b9c6;\n                        fcn.0045c220(arg1_00, 0x4acb75, arg3, arg4);\n                    }\n                }\n                iVar3 = arg3 + 1;\n                in_R9 = arg4;\n            }\n            *(*0x20 + -0x50) = 0x48ba09;\n            fcn.0045c5a0(arg1_00);\ncode_r0x0048ba09:\n            *(*0x20 + -0x50) = 0x48ba11;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5e0(unaff_RBX, uVar4);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x48ba26;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1303
    },
    "0048ba40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0048ba40(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    int64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x48) = 0x48bab8;\n                iVar2 = fcn.004634e0();\n                return iVar2 + 1;\n            }\n            if (unaff_RDI == 1) {\n                uVar1 = *arg1;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = uVar1;\n                *(*0x20 + -0x48) = 0x48ba90;\n                fcn.00402460(uVar1, in_RDX);\n                return *(*0x20 + -0x28);\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            in_RDX = 0;\n            while( true ) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RDX;\n                *(*0x20 + -0x48) = 0x48baff;\n                iVar2 = fcn.0048dec0(arg1, in_RDX);\n                if (iVar2 == -1) {\n                    return *(*0x20 + -0x20);\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                puVar3 = iVar2 + unaff_RDI;\n                arg1 = *(*0x20 + -0x18);\n                if (arg1 < puVar3) break;\n                in_RDX = *(*0x20 + -0x20) + 1;\n                unaff_RBX = arg1 - puVar3;\n                in_RAX = (puVar3 & -unaff_RBX >> 0x3f) + *(*0x20 + -0x10);\n                arg1 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0x48) = 0x48bb2e;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x48bb48;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 889
    },
    "0048bb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0048bb80(uint8_t *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RDI == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RDI == 1) {\n        uVar2 = *arg1;\n        unaff_RDI = unaff_RBX;\n        goto code_r0x0048be54;\n    }\n    if (unaff_RBX == unaff_RDI) {\n        cVar1 = fcn.004025e0(unaff_RDI, arg2);\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n        return 0xffffffffffffffff;\n    }\n    if (unaff_RBX < unaff_RDI) {\n        return 0xffffffffffffffff;\n    }\n    iVar4 = 0;\n    uVar2 = unaff_RDI;\n    while (uVar2 = uVar2 - 1,  -1 < uVar2) {\n        iVar4 = iVar4 * 0x1000193 + arg1[uVar2];\n    }\n    iVar7 = 0x1000193;\n    iVar6 = 1;\n    for (uVar2 = unaff_RDI; 0 < uVar2; uVar2 = uVar2 >> 1) {\n        if ((uVar2 & 1) != 0) {\n            iVar6 = iVar6 * iVar7;\n        }\n        iVar7 = iVar7 * iVar7;\n    }\n    uVar3 = unaff_RBX - unaff_RDI;\n    iVar7 = 0;\n    uVar5 = unaff_RBX;\n    while (uVar5 = uVar5 - 1,  uVar3 <= uVar5) {\n        uVar2 = unaff_RBX;\n        if (unaff_RBX <= uVar5) goto code_r0x0048be46;\n        iVar7 = *(in_RAX + uVar5) + iVar7 * 0x1000193;\n    }\n    uVar2 = uVar3;\n    if (iVar7 == iVar4) {\n        uVar2 = unaff_RBX;\n        if (uVar3 <= unaff_RBX) {\n            if (unaff_RDI == unaff_RBX - uVar3) {\n                cVar1 = fcn.004025e0(unaff_RBX - uVar3, unaff_RDI);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            uVar2 = uVar3;\n            if (cVar1 != '\\0') {\n                return uVar3;\n            }\n            goto code_r0x0048bd50;\n        }\n    }\n    else {\ncode_r0x0048bd50:\n        while( true ) {\n            uVar2 = uVar2 - 1;\n            if (uVar2 < 0) {\n                return 0xffffffffffffffff;\n            }\n            if (unaff_RBX <= uVar2) break;\n            uVar5 = uVar2 + unaff_RDI;\n            if (unaff_RBX <= uVar5) {\ncode_r0x0048be25:\n                fcn.0045c5a0(unaff_RBX);\n                break;\n            }\n            iVar7 = (iVar7 * 0x1000193 + *(uVar2 + in_RAX)) - *(uVar5 + in_RAX) * iVar6;\n            if (iVar4 == iVar7) {\n                if (uVar5 < uVar2) {\n                    fcn.0045c660(uVar5);\n                    goto code_r0x0048be25;\n                }\n                cVar1 = fcn.004025e0(unaff_RDI, (-unaff_RDI >> 0x3f & uVar2) + in_RAX);\n                if (cVar1 != '\\0') {\n                    return uVar2;\n                }\n            }\n        }\n        fcn.0045c5a0(unaff_RBX);\n    }\n    fcn.0045c660(uVar2);\ncode_r0x0048be46:\n    in_RAX = fcn.0045c5a0(uVar2);\ncode_r0x0048be54:\n    do {\n        unaff_RDI = unaff_RDI - 1;\n        if (unaff_RDI < 0) {\n            return 0xffffffffffffffff;\n        }\n    } while (*(in_RAX + unaff_RDI) != uVar2);\n    return unaff_RDI;\n}\n",
        "token_count": 1120
    },
    "0048c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.0048c020(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint32_t auStack72 [7];\n    uint uStack44;\n    uchar auStack40 [8];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RDI == 0) {\n        return -1;\n    }\n    if (unaff_RDI == 1) {\n        uVar4 = *arg1;\n        if (0x7f < *arg1) {\n            uVar4 = 0xfffd;\n        }\n        iVar5 = fcn.0048bec0(uVar4);\n        return iVar5;\n    }\n    if (8 < unaff_RBX) {\n        _auStack40 = in_XMM15;\n        for (iVar5 = 0; (iVar5 < unaff_RDI && (uVar1 = arg1[iVar5],  uVar1 < 0x80)); iVar5 = iVar5 + 1) {\n            *(auStack40 + (uVar1 >> 5) * 4) = *(auStack40 + (uVar1 >> 5) * 4) | 1 << (uVar1 & 0x1f);\n        }\n        auStack72[0] = auStack40._0_4_;\n        auStack72[1] = auStack40._4_4_;\n        auStack72[2] = uStack32;\n        auStack72[3] = uStack28;\n        uStack24 = SUB164(in_XMM15, 0);\n        uStack20 = SUB164(in_XMM15 >> 0x20, 0);\n        uStack16 = SUB164(in_XMM15 >> 0x40, 0);\n        uStack12 = SUB164(in_XMM15 >> 0x60, 0);\n        uStack44 = uStack12;\n        auStack72[4] = uStack24;\n        auStack72[5] = uStack20;\n        auStack72[6] = uStack16;\n        if (unaff_RDI <= iVar5) {\n            iVar5 = 0;\n            while( true ) {\n                if (unaff_RBX <= iVar5) {\n                    return -1;\n                }\n                if ((auStack72[*(iVar5 + in_RAX) >> 5] >> (*(iVar5 + in_RAX) & 0x1f) & 1) != 0) break;\n                iVar5 = iVar5 + 1;\n            }\n            return iVar5;\n        }\n    }\n    iVar5 = 0;\n    do {\n        arg1_00 = iVar5;\n        if (unaff_RBX <= arg1_00) {\n            return -1;\n        }\n        uVar4 = *(in_RAX + arg1_00);\n        if (*(in_RAX + arg1_00) < 0x80) {\n            iVar5 = arg1_00 + 1;\n        }\n        else {\n            uVar2 = fcn.00455cc0(arg1_00);\n            uVar4 = uVar2;\n            iVar5 = unaff_RBX;\n        }\n        iVar3 = fcn.0048bec0(uVar4);\n    } while (iVar3 < 0);\n    return arg1_00;\n}\n",
        "token_count": 885
    },
    "0048c220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * fcn.0048c220(uint8_t *arg1)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t *in_RAX;\n    int64_t iVar4;\n    uint64_t arg1_00;\n    uint8_t *puVar5;\n    uint8_t *arg2;\n    uint8_t *unaff_RBX;\n    uint8_t uVar6;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint32_t uStack100;\n    uint32_t auStack72 [7];\n    uint uStack44;\n    uchar auStack40 [8];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [8];\n    uint uStack16;\n    uint uStack12;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RDI == NULL) {\n        return 0xffffffffffffffff;\n    }\n    if (unaff_RBX != 0x1) {\n        arg2 = unaff_RBX;\n        if (unaff_RBX < 9) goto code_r0x0048c2c3;\n        _auStack40 = in_XMM15;\n        _auStack24 = in_XMM15;\n        arg2 = NULL;\n        do {\n            if ((unaff_RDI <= arg2) || (uVar6 = arg1[arg2],  0x7f < uVar6)) {\n                auStack72[0] = auStack40._0_4_;\n                auStack72[1] = auStack40._4_4_;\n                auStack72[2] = uStack32;\n                auStack72[3] = uStack28;\n                uStack44 = uStack12;\n                auStack72[4] = auStack24._0_4_;\n                auStack72[5] = auStack24._4_4_;\n                auStack72[6] = uStack16;\n                bVar1 = unaff_RDI <= arg2;\n                arg2 = unaff_RBX;\n                if (bVar1) {\n                    do {\n                        unaff_RBX = unaff_RBX + -1;\n                        if (unaff_RBX < 0) {\n                            return 0xffffffffffffffff;\n                        }\n                    } while ((auStack72[in_RAX[unaff_RBX] >> 5] >> (in_RAX[unaff_RBX] & 0x1f) & 1) == 0);\n                    return unaff_RBX;\n                }\ncode_r0x0048c2c3:\n                unaff_RBX = arg2;\n                if (unaff_RDI == 0x1) {\n                    uStack100 = *arg1;\n                    unaff_RDI = 0xfffd;\n                    uVar2 = uStack100;\n                    if (0x7f < *arg1) {\n                        uStack100 = 0xfffd;\n                        uVar2 = uStack100;\n                    }\n                }\n                else {\n                    while( true ) {\n                        if (unaff_RBX < 1) {\n                            return 0xffffffffffffffff;\n                        }\n                        if (arg2 < unaff_RBX) break;\n                        uVar2 = fcn.00463260();\n                        iVar4 = fcn.0048bec0(uVar2);\n                        unaff_RBX = NULL;\n                        if (-1 < iVar4) {\n                            return NULL;\n                        }\n                    }\n                    puVar5 = arg2;\n                    fcn.0045c5e0(unaff_RBX, arg2);\n                    uVar2 = puVar5;\n                    unaff_RDI = arg2;\n                }\n                while( true ) {\n                    uVar6 = uVar2;\n                    if (unaff_RBX < 1) {\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg2 < unaff_RBX) break;\n                    uVar3 = fcn.00463260();\n                    unaff_RBX = NULL;\n                    unaff_RDI = arg2;\n                    uVar2 = uStack100;\n                    if (uVar3 == uStack100) {\n                        return NULL;\n                    }\n                }\n                arg1 = unaff_RBX;\n                in_RAX = fcn.0045c5e0(unaff_RBX, arg2);\n            }\n            *(auStack40 + (uVar6 >> 5) * 4) = *(auStack40 + (uVar6 >> 5) * 4) | 1 << (uVar6 & 0x1f);\n            arg2 = arg2 + 1;\n        } while( true );\n    }\n    arg1_00 = *in_RAX;\n    if (0x7f < *in_RAX) {\n        arg1_00 = 0xfffd;\n    }\n    iVar4 = fcn.0048bec0(arg1_00);\n    if (iVar4 < 0) {\n        return 0xffffffffffffffff;\n    }\n    return NULL;\n}\n",
        "token_count": 1142
    },
    "0048c4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0048c4e0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t in_R9;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (arg3 == 0) {\n                return 0;\n            }\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x60) = 0x48c576;\n                iVar1 = fcn.0048b880(arg3);\n                return iVar1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            if (arg3 < 0) {\n                *(*0x20 + -0x60) = 0x48c532;\n                iVar1 = fcn.0048ba40(arg1);\n                arg3 = iVar1 + 1;\n            }\n            *(*0x20 + -0x30) = arg3;\n            *(*0x20 + -0x60) = 0x48c54d;\n            iVar1 = fcn.00445140(arg3);\n            *(*0x20 + -0x10) = iVar1;\n            arg1_00 = *(*0x20 + -0x30);\n            arg2 = arg1_00 - 1;\n            *(*0x20 + -0x20) = arg2;\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 8);\n            for (uVar4 = 0; unaff_RSI = unaff_RBX,  uVar4 < arg2; uVar4 = uVar4 + 1) {\n                *(*0x20 + -0x38) = uVar4;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x28) = unaff_RBX;\n                unaff_RDI = *(*0x20 + 0x20);\n                *(*0x20 + -0x60) = 0x48c5ed;\n                iVar2 = fcn.0048dec0(*(*0x20 + 0x18), arg2);\n                if (iVar2 < 0) {\n                    iVar1 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + -0x30);\n                    uVar4 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x28);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    break;\n                }\n                unaff_RSI = *(*0x20 + 0x28);\n                arg1 = unaff_RSI + iVar2;\n                arg2 = *(*0x20 + -0x28);\n                if (arg2 < arg1) goto code_r0x0048c6e5;\n                uVar4 = *(*0x20 + -0x38);\n                arg1_00 = *(*0x20 + -0x30);\n                arg3 = uVar4;\n                if (arg1_00 <= uVar4) goto code_r0x0048c6d9;\n                arg3 = uVar4 * 0x10;\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 8 + arg3) = arg1;\n                unaff_RDI = iVar1 + arg3;\n                uVar3 = iVar2 + *(*0x20 + 0x20);\n                if (*0x789810 == 0) {\n                    uVar6 = *(*0x20 + -0x18);\n                    *(iVar1 + arg3) = uVar6;\n                }\n                else {\n                    arg3 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x60) = 0x48c665;\n                    uVar3 = fcn.0045c280(arg1, arg2, arg3, arg1_00);\n                    uVar6 = arg3;\n                }\n                if (arg2 < uVar3) goto code_r0x0048c6d1;\n                unaff_RBX = arg2 - uVar3;\n                unaff_RDI = uVar6 + (uVar3 & -unaff_RBX >> 0x3f);\n                arg2 = *(*0x20 + -0x20);\n                arg3 = unaff_RBX;\n                in_R9 = arg1_00;\n            }\n            if (uVar4 < arg1_00) {\n                *(iVar1 + 8 + uVar4 * 0x10) = unaff_RSI;\n                if (*0x789810 == 0) {\n                    *(iVar1 + uVar4 * 0x10) = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x48c6bb;\n                    iVar1 = fcn.0045c240(arg1_00, uVar4, arg3, in_R9);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x60) = 0x48c6d1;\n            fcn.0045c5a0(arg1_00);\n            unaff_RBX = uVar4;\n            arg1_00 = in_R9;\ncode_r0x0048c6d1:\n            *(*0x20 + -0x60) = 0x48c6d9;\n            fcn.0045c660(arg2);\ncode_r0x0048c6d9:\n            arg1 = arg1_00;\n            *(*0x20 + -0x60) = 0x48c6e5;\n            in_R9 = arg1;\n            fcn.0045c5a0(arg1);\ncode_r0x0048c6e5:\n            *(*0x20 + -0x60) = 0x48c6ea;\n            in_RAX = fcn.0045c5e0(arg1, arg2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x48c70e;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1837
    },
    "0048c740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0048c740(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar7;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0048c740:\n    puVar6 = *0x20;\n    uVar7 = unaff_RSI;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xc0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX == 0) {\n            return 0;\n        }\n        if (unaff_RBX == 1) {\n            return *in_RAX;\n        }\n        uVar7 = unaff_RSI * (unaff_RBX + -1);\n        for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n            uVar7 = uVar7 + in_RAX[iVar1 * 2 + 1];\n        }\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x28) = *0x20 + -0x28;\n        if (-1 < uVar7) {\n            *(*0x20 + -0x58) = unaff_RBX + -1;\n            *(*0x20 + -0x60) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < uVar7) {\n                *(*0x20 + -0x88) = *(*0x20 + -0x18);\n                iVar1 = uVar7 + *(*0x20 + -0x10) * 2;\n                *(*0x20 + -0x80) = iVar1;\n                *(*0x20 + -200) = 0x48c865;\n                iVar1 = fcn.00445140(iVar1);\n                uVar7 = *(*0x20 + -0x88);\n                uVar4 = uVar7;\n                if (*(*0x20 + -0x18) < uVar7) {\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                if (iVar1 != *(*0x20 + -0x20)) {\n                    *(*0x20 + -0x30) = iVar1;\n                    *(*0x20 + -200) = 0x48c896;\n                    fcn.0045cee0(uVar4);\n                    iVar1 = *(*0x20 + -0x30);\n                    uVar7 = *(*0x20 + -0x88);\n                }\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x10) = *(*0x20 + -0x80);\n                *(*0x20 + -0x20) = iVar1;\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            iVar1 = in_RAX[1];\n            uVar3 = *in_RAX;\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\ncode_r0x0048c912:\n                uVar7 = *(*0x20 + -0x18);\n                *(*0x20 + -0x68) = iVar1 + uVar7;\n                uVar4 = *(*0x20 + -0x10);\n                uVar2 = *(*0x20 + -0x20);\n                if (uVar4 < iVar1 + uVar7) {\n                    *(*0x20 + -0x70) = uVar7;\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -200) = 0x48c95c;\n                    uVar2 = fcn.00445220(uVar7);\n                    iVar1 = *(*0x20 + -0x90);\n                    unaff_RDI = uVar4;\n                    uVar4 = uVar7;\n                }\n                *(*0x20 + -0x70) = uVar4;\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -200) = 0x48c98b;\n                fcn.0045cee0(iVar1);\n                *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                *(*0x20 + -0x10) = *(*0x20 + -0x70);\n                *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                puVar5 = (-(*(*0x20 + 0x18) + -1) >> 0x3f & 0x10U) + *(*0x20 + 8);\n                uVar7 = *(*0x20 + -0x58);\n                if (uVar7 < 1) {\ncode_r0x0048c9f6:\n                    return *(*0x20 + -0x20);\n                }\n                arg1 = *(*0x20 + -0x60);\n                iVar1 = 0;\n                do {\n                    uVar3 = puVar5[1];\n                    uVar2 = *puVar5;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x0048cc25;\n                    *(*0x20 + -0x98) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x68) = iVar1;\n                    *(*0x20 + -0x40) = puVar5;\n                    arg1_00 = *(*0x20 + -0x18);\n                    uVar4 = arg1 + arg1_00;\n                    *(*0x20 + -0x70) = uVar4;\n                    uVar3 = *(*0x20 + -0x20);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < uVar4) {\n                        *(*0x20 + -0x78) = arg1_00;\n                        *(*0x20 + -200) = 0x48cacc;\n                        uVar3 = fcn.00445220(arg1_00);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar7 = uVar4;\n                        unaff_RDI = arg1_00;\n                    }\n                    *(*0x20 + -0x78) = unaff_RDI;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x48cafb;\n                    fcn.0045cee0(arg1);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x0048cc11;\n                    uVar7 = *(*0x20 + -0x18);\n                    iVar1 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x70) = iVar1 + uVar7;\n                    uVar3 = *(*0x20 + -0x20);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar1 + uVar7) {\n                        *(*0x20 + -0x78) = uVar7;\n                        *(*0x20 + -200) = 0x48cb9e;\n                        uVar3 = fcn.00445220(uVar7);\n                        iVar1 = *(*0x20 + -0x98);\n                        unaff_RDI = uVar7;\n                    }\n                    *(*0x20 + -0x78) = unaff_RDI;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x48cbcc;\n                    fcn.0045cee0(iVar1);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    iVar1 = *(*0x20 + -0x68) + 1;\n                    uVar7 = *(*0x20 + -0x58);\n                    if (uVar7 <= iVar1) goto code_r0x0048c9f6;\n                    puVar5 = *(*0x20 + -0x40) + 0x10;\n                    arg1 = *(*0x20 + -0x60);\n                } while( true );\n            }\n            if (*(*0x20 + -0x28) == *0x20 + -0x28) goto code_r0x0048c912;\n            goto code_r0x0048cc38;\n        }\n        goto code_r0x0048cc4b;\n    }\n    goto code_r0x0048cc5f;\ncode_r0x0048cc11:\n    *(*0x20 + -200) = 0x48cc25;\n    fcn.00431940();\ncode_r0x0048cc25:\n    *(*0x20 + -200) = 0x48cc38;\n    fcn.00431940();\ncode_r0x0048cc38:\n    *(*0x20 + -200) = 0x48cc4b;\n    fcn.00431940();\ncode_r0x0048cc4b:\n    unaff_RBX = 0x6b5828;\n    *(*0x20 + -200) = 0x48cc5e;\n    in_RAX = fcn.00431940();\ncode_r0x0048cc5f:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = uVar7;\n    *(puVar6 + -8) = 0x48cc7d;\n    fcn.00459ea0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x0048c740;\n}\n",
        "token_count": 2810
    },
    "0048cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\ncode ** fcn.0048cca0(code **arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code **in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uchar *arg1_00;\n    int64_t iVar8;\n    code **unaff_RBX;\n    code **ppcVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar *puVar11;\n    uchar *in_R8;\n    uchar *in_R9;\n    int64_t unaff_R14;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \ncode_r0x0048cca0:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = 0;\n        while (iVar8 < arg1) {\n            *(*0x20 + -0x70) = iVar8;\n            uVar3 = *(unaff_RBX + iVar8);\n            if (*(unaff_RBX + iVar8) < 0x80) {\n                arg1 = iVar8 + 1;\n            }\n            else {\n                *(*0x20 + -0xd0) = 0x48cd3f;\n                uVar3 = fcn.00455cc0(iVar8);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = arg1;\n            }\n            *(*0x20 + -0x7c) = uVar3;\n            *(*0x20 + -0x50) = arg1;\n            pcVar1 = *in_RAX;\n            *(*0x20 + -0xd0) = 0x48cd5f;\n            uVar2 = (*pcVar1)();\n            *(*0x20 + -0x84) = uVar2;\n            uVar3 = *(*0x20 + -0x7c);\n            if (uVar2 != uVar3) {\n                if (uVar3 == 0xfffd) {\n                    arg1 = *(*0x20 + -0x48);\n                    ppcVar9 = *(*0x20 + -0x70);\n                    bVar12 = arg1 < ppcVar9;\n                    goto code_r0x0048cda3;\n                }\n                if (uVar3 < 0) {\n                    arg1 = 0xffffffffffffffff;\n                }\n                else if (uVar3 < 0x80) {\n                    arg1 = 0x1;\n                }\n                else if (uVar3 < 0x800) {\n                    arg1 = 0x2;\n                }\n                else if (uVar3 - 0xd800 < 0x800) {\n                    arg1 = 0xffffffffffffffff;\n                }\n                else if (uVar3 < 0x10000) {\n                    arg1 = 0x3;\n                }\n                else if (uVar3 < 0x110000) {\n                    arg1 = 0x4;\n                }\n                else {\n                    arg1 = 0xffffffffffffffff;\n                }\n                in_R8 = uVar2;\n                ppcVar9 = arg1;\ncode_r0x0048ce60:\n                in_R9 = *(*0x20 + -0x28);\n                if (in_R9 == NULL) {\n                    *(*0x20 + -0x28) = *0x20 + -0x28;\n                }\n                else if (in_R9 != *0x20 + -0x28) goto code_r0x0048d258;\n                in_RAX = *(*0x20 + -0x48);\n                in_R9 = in_RAX + 4;\n                if (in_R9 < 0) goto code_r0x0048d245;\n                *(*0x20 + -0x78) = ppcVar9;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < in_R9) {\n                    *(*0x20 + -0x68) = *(*0x20 + -0x18);\n                    iVar8 = in_RAX + *(*0x20 + -0x10) * 2 + 4;\n                    *(*0x20 + -0x60) = iVar8;\n                    *(*0x20 + -0xd0) = 0x48cefb;\n                    iVar5 = fcn.00445140(iVar8);\n                    iVar8 = *(*0x20 + -0x68);\n                    iVar7 = iVar8;\n                    if (*(*0x20 + -0x18) < iVar8) {\n                        iVar7 = *(*0x20 + -0x18);\n                    }\n                    if (iVar5 == *(*0x20 + -0x20)) {\n                        in_RAX = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x70);\n                        bVar12 = in_RAX < arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = iVar5;\n                        *(*0x20 + -0xd0) = 0x48cf3e;\n                        fcn.0045cee0(iVar7);\n                        in_RAX = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x70);\n                        bVar12 = in_RAX < arg1;\n                        iVar5 = *(*0x20 + -0x30);\n                        iVar8 = *(*0x20 + -0x68);\n                    }\n                    *(*0x20 + -0x18) = iVar8;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x20) = iVar5;\n                    in_R8 = *(*0x20 + -0x84);\n                }\n                else {\n                    arg1 = *(*0x20 + -0x70);\n                    bVar12 = in_RAX < arg1;\n                }\n                if (bVar12) goto code_r0x0048d240;\n                in_R9 = *(*0x20 + -0x28);\n                if (in_R9 == NULL) {\n                    *(*0x20 + -0x28) = *0x20 + -0x28;\n                }\n                else if (in_R9 != *0x20 + -0x28) goto code_r0x0048d22a;\n                arg1_00 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = arg1 + arg1_00;\n                uVar6 = *(*0x20 + -0x20);\n                puVar11 = *(*0x20 + -0x10);\n                in_R9 = arg1_00;\n                if (*(*0x20 + -0x10) < arg1 + arg1_00) {\n                    *(*0x20 + -0x58) = arg1_00;\n                    *(*0x20 + -0xd0) = 0x48cfef;\n                    uVar6 = fcn.00445220(arg1_00);\n                    in_R9 = *(*0x20 + -0x58);\n                    arg1 = *(*0x20 + -0x70);\n                    puVar11 = arg1_00;\n                }\n                *(*0x20 + -0x58) = puVar11;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0xd0) = 0x48d01d;\n                fcn.0045cee0(arg1);\n                *(*0x20 + -0x18) = *(*0x20 + -0x50);\n                *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                in_RAX = *(*0x20 + -0x38);\n                *(*0x20 + -0x20) = in_RAX;\n                if (-1 < *(*0x20 + -0x84)) {\n                    *(*0x20 + -0xd0) = 0x48d05c;\n                    fcn.0048b640(arg1, in_RAX, in_R8, in_R9);\n                }\n                ppcVar9 = *(*0x20 + -0x78) + *(*0x20 + -0x70);\n                arg1 = *(*0x20 + -0x48);\n                if (arg1 < ppcVar9) goto code_r0x0048d225;\n                arg1 = arg1 - ppcVar9;\n                unaff_RBX = (ppcVar9 & -arg1 >> 0x3f) + *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                break;\n            }\n            if (uVar3 == 0xfffd) {\n                arg1 = *(*0x20 + -0x48);\n                ppcVar9 = *(*0x20 + -0x70);\n                bVar12 = arg1 < ppcVar9;\ncode_r0x0048cda3:\n                if (!bVar12) {\n                    ppcVar9 = arg1 - ppcVar9;\n                    *(*0x20 + -0xd0) = 0x48cdd0;\n                    uVar3 = fcn.004630a0();\n                    if (ppcVar9 == 0x1) {\n                        in_R8 = *(*0x20 + -0x84);\n                    }\n                    else {\n                        in_R8 = *(*0x20 + -0x84);\n                        if (uVar3 == *(*0x20 + -0x84)) goto code_r0x0048ccf4;\n                    }\n                    goto code_r0x0048ce60;\n                }\n                goto code_r0x0048d26b;\n            }\ncode_r0x0048ccf4:\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar8 = *(*0x20 + -0x50);\n        }\n        if (*(*0x20 + -0x10) == 0) {\n            return unaff_RBX;\n        }\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + -0x40) = unaff_RBX;\n        iVar8 = 0;\n        do {\n            if (arg1 <= iVar8) {\n                return *(*0x20 + -0x20);\n            }\n            if (*(iVar8 + unaff_RBX) < 0x80) {\n                arg1 = iVar8 + 1;\n            }\n            else {\n                *(*0x20 + -0xd0) = 0x48d11e;\n                fcn.00455cc0(iVar8);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0x50) = arg1;\n            arg1 = *in_RAX;\n            *(*0x20 + -0xd0) = 0x48d13a;\n            iVar4 = (*arg1)();\n            if (-1 < iVar4) {\n                if (iVar4 < 0x80) {\n                    in_R8 = *(*0x20 + -0x28);\n                    if (in_R8 == NULL) {\n                        in_R8 = *0x20 + -0x28;\n                        *(*0x20 + -0x28) = in_R8;\n                    }\n                    else {\n                        in_R9 = *0x20 + -0x28;\n                        if (in_R8 != in_R9) goto code_r0x0048d20f;\n                    }\n                    iVar8 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar7 = iVar5;\n                    if (*(*0x20 + -0x10) < iVar8 + 1U) {\n                        *(*0x20 + -0x80) = iVar4;\n                        *(*0x20 + -0xd0) = 0x48d1ad;\n                        iVar7 = fcn.00445220(iVar8);\n                        *(*0x20 + -0x10) = iVar8;\n                        *(*0x20 + -0x20) = iVar7;\n                        iVar4 = *(*0x20 + -0x80);\n                        iVar8 = iVar5;\n                    }\n                    *(*0x20 + -0x18) = iVar8 + 1;\n                    *(iVar7 + iVar8) = iVar4;\n                }\n                else {\n                    *(*0x20 + -0xd0) = 0x48d1ea;\n                    fcn.0048b640(arg1, in_RAX, in_R8, in_R9);\n                }\n            }\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x40);\n            iVar8 = *(*0x20 + -0x50);\n        } while( true );\n    }\n    goto code_r0x0048d274;\ncode_r0x0048d20f:\n    *(*0x20 + -0xd0) = 0x48d225;\n    fcn.00431940();\ncode_r0x0048d225:\n    *(*0x20 + -0xd0) = 0x48d22a;\n    fcn.0045c660(arg1);\ncode_r0x0048d22a:\n    *(*0x20 + -0xd0) = 0x48d23d;\n    fcn.00431940();\ncode_r0x0048d240:\n    *(*0x20 + -0xd0) = 0x48d245;\n    fcn.0045c5e0(arg1, in_RAX);\ncode_r0x0048d245:\n    *(*0x20 + -0xd0) = 0x48d258;\n    fcn.00431940();\ncode_r0x0048d258:\n    unaff_RBX = 0x6b56c8;\n    *(*0x20 + -0xd0) = 0x48d26b;\n    fcn.00431940();\ncode_r0x0048d26b:\n    *(*0x20 + -0xd0) = 0x48d273;\n    in_RAX = fcn.0045c660(arg1);\ncode_r0x0048d274:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x48d288;\n    fcn.00459ea0();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1 = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0048cca0;\n}\n",
        "token_count": 3482
    },
    "0048dec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0048dec0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint8_t uVar5;\n    uint8_t *unaff_RDI;\n    uint64_t noname_2;\n    uint8_t *arg1_00;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar8 = *0x20 + -8;\n        puVar2 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar8 && puVar8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == NULL) {\n                return 0;\n            }\n            if (unaff_RDI == 0x1) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x88) = in_RAX;\n                *(*0x20 + -0x80) = unaff_RBX;\n                *(*0x20 + -0x78) = uVar5;\n                *(*0x20 + -0x90) = 0x48e051;\n                fcn.00402a80(uVar5, arg2);\n                return *(*0x20 + -0x70);\n            }\n            if (unaff_RBX == unaff_RDI) {\n                *(*0x20 + -0x90) = 0x48e00f;\n                cVar1 = fcn.004025e0(unaff_RDI, arg2);\n                if (cVar1 == '\\0') {\n                    return -1;\n                }\n                return 0;\n            }\n            if (unaff_RBX < unaff_RDI) {\n                return -1;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            if (*0x789620 < unaff_RDI) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x59) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x5b) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x18) = puVar2;\n                arg1_00 = puVar2 + 1;\n                *(*0x20 + -0x58) = arg1_00;\n                iVar3 = 0;\n                puVar7 = NULL;\n                while( true ) {\n                    puVar6 = puVar7;\n                    if (arg1_00 <= puVar6) {\n                        return -1;\n                    }\n                    puVar7 = puVar8;\n                    if (unaff_RBX <= puVar6) goto code_r0x0048e305;\n                    *(*0x20 + -0x30) = iVar3;\n                    puVar7 = puVar6[in_RAX];\n                    if (puVar6[in_RAX] != uVar5) {\n                        if (unaff_RBX < arg1_00) goto code_r0x0048e2fb;\n                        puVar7 = puVar6 + 1;\n                        if (arg1_00 < puVar7) goto code_r0x0048e2f0;\n                        *(*0x20 + -0x40) = puVar6;\n                        iVar3 = puVar2 - puVar6;\n                        *(*0x20 + -0x88) = (-iVar3 >> 0x3f & puVar7) + in_RAX;\n                        *(*0x20 + -0x80) = iVar3;\n                        *(*0x20 + -0x78) = uVar5;\n                        *(*0x20 + -0x90) = 0x48e105;\n                        fcn.00402a80(arg1, iVar3);\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x70) < 0) {\n                            return -1;\n                        }\n                        puVar6 = *(*0x20 + -0x70) + *(*0x20 + -0x40) + 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + -0x10);\n                        puVar2 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x59);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x5b);\n                        arg1_00 = *(*0x20 + -0x58);\n                        iVar3 = *(*0x20 + -0x30);\n                    }\n                    puVar7 = puVar6 + 1;\n                    if (unaff_RBX <= puVar7) goto code_r0x0048e2e5;\n                    *(*0x20 + -0x20) = puVar6;\n                    if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x0048e216:\n                    iVar3 = iVar3 + 1;\n                    puVar8 = (puVar7 >> 4) + 4;\n                    if ((puVar8 <= iVar3) && (puVar7 < arg1_00)) {\n                        *(*0x20 + -0x90) = 0x48e255;\n                        iVar3 = fcn.00401da0(arg1, unaff_RBX + (-1 - puVar6), noname_2, arg1_00);\n                        if (-1 < iVar3) {\n                            return iVar3 + *(*0x20 + -0x20) + 1;\n                        }\n                        return -1;\n                    }\n                }\n                puVar8 = puVar6 + unaff_RDI;\n                if (puVar8 <= unaff_RBX) {\n                    if (puVar6 <= puVar8) {\n                        *(*0x20 + -0x28) = puVar7;\n                        *(*0x20 + -0x90) = 0x48e1cd;\n                        cVar1 = fcn.004025e0(unaff_RDI, unaff_RDI);\n                        if (cVar1 != '\\0') {\n                            return *(*0x20 + -0x20);\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + -0x10);\n                        puVar2 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x59);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x5b);\n                        arg1_00 = *(*0x20 + -0x58);\n                        puVar6 = *(*0x20 + -0x20);\n                        iVar3 = *(*0x20 + -0x30);\n                        puVar7 = *(*0x20 + -0x28);\n                        goto code_r0x0048e216;\n                    }\n                    *(*0x20 + -0x90) = 0x48e2dc;\n                    fcn.0045c660(puVar8);\n                }\n                *(*0x20 + -0x90) = 0x48e2e5;\n                fcn.0045c5e0(puVar8, unaff_RBX);\ncode_r0x0048e2e5:\n                *(*0x20 + -0x90) = 0x48e2f0;\n                fcn.0045c5a0(unaff_RBX);\ncode_r0x0048e2f0:\n                *(*0x20 + -0x90) = 0x48e2fb;\n                fcn.0045c660(arg1_00);\ncode_r0x0048e2fb:\n                *(*0x20 + -0x90) = 0x48e305;\n                fcn.0045c5e0(arg1_00, unaff_RBX);\ncode_r0x0048e305:\n                arg1 = unaff_RBX;\n                *(*0x20 + -0x90) = 0x48e310;\n                unaff_RBX = arg1;\n                in_RAX = fcn.0045c5a0(arg1);\n            }\n            else {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + -0x88) = in_RAX;\n                    *(*0x20 + -0x80) = unaff_RBX;\n                    *(*0x20 + -0x78) = arg1;\n                    *(*0x20 + -0x70) = unaff_RDI;\n                    *(*0x20 + -0x90) = 0x48df8f;\n                    fcn.00402920(arg1);\n                    return *(*0x20 + -0x68);\n                }\n                uVar5 = *arg1;\n                *(*0x20 + -0x5a) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x5c) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x18) = puVar2;\n                arg1_00 = puVar2 + 1;\n                *(*0x20 + -0x50) = arg1_00;\n                iVar3 = 0;\n                puVar7 = NULL;\n            }\n            while( true ) {\n                puVar8 = puVar7;\n                if (arg1_00 <= puVar8) {\n                    return -1;\n                }\n                if (unaff_RBX <= puVar8) goto code_r0x0048e5af;\n                *(*0x20 + -0x38) = iVar3;\n                if (puVar8[in_RAX] != uVar5) {\n                    if (unaff_RBX < arg1_00) goto code_r0x0048e5a7;\n                    if (arg1_00 < puVar8 + 1) goto code_r0x0048e59c;\n                    *(*0x20 + -0x48) = puVar8;\n                    iVar3 = puVar2 - puVar8;\n                    *(*0x20 + -0x88) = in_RAX + (puVar8 + 1 & -iVar3 >> 0x3f);\n                    *(*0x20 + -0x80) = iVar3;\n                    *(*0x20 + -0x78) = uVar5;\n                    *(*0x20 + -0x90) = 0x48e385;\n                    fcn.00402a80(arg1, iVar3);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x70) < 0) {\n                        return -1;\n                    }\n                    puVar8 = *(*0x20 + -0x48) + *(*0x20 + -0x70) + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    puVar2 = *(*0x20 + -0x18);\n                    uVar5 = *(*0x20 + -0x5a);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x5c);\n                    arg1_00 = *(*0x20 + -0x50);\n                    iVar3 = *(*0x20 + -0x38);\n                }\n                puVar7 = puVar8 + 1;\n                if (unaff_RBX <= puVar7) goto code_r0x0048e591;\n                *(*0x20 + -0x20) = puVar8;\n                if (puVar8[in_RAX + 1] == noname_2) break;\ncode_r0x0048e496:\n                iVar3 = iVar3 + 1;\n                if (puVar8 + ((puVar8 + 0x11 >> 0x3f) >> 0x3d) + 0x11 >> 3 < iVar3) {\n                    *(*0x20 + -0x88) = in_RAX + (puVar7 & -(unaff_RBX + (-1 - puVar8)) >> 0x3f);\n                    *(*0x20 + -0x80) = unaff_RBX + (-1 - puVar8);\n                    *(*0x20 + -0x78) = arg1;\n                    *(*0x20 + -0x70) = unaff_RDI;\n                    *(*0x20 + -0x90) = 0x48e4e9;\n                    fcn.00402920(arg1);\n                    if (*(*0x20 + -0x68) < 0) {\n                        return -1;\n                    }\n                    return *(*0x20 + -0x68) + *(*0x20 + -0x20) + 1;\n                }\n            }\n            puVar6 = puVar8 + unaff_RDI;\n            if (puVar6 <= unaff_RBX) {\n                if (puVar8 <= puVar6) {\n                    *(*0x20 + -0x28) = puVar7;\n                    *(*0x20 + -0x90) = 0x48e44d;\n                    cVar1 = fcn.004025e0(unaff_RDI, unaff_RDI);\n                    if (cVar1 != '\\0') {\n                        return *(*0x20 + -0x20);\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    puVar2 = *(*0x20 + -0x18);\n                    uVar5 = *(*0x20 + -0x5a);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x5c);\n                    arg1_00 = *(*0x20 + -0x50);\n                    puVar8 = *(*0x20 + -0x20);\n                    iVar3 = *(*0x20 + -0x38);\n                    puVar7 = *(*0x20 + -0x28);\n                    goto code_r0x0048e496;\n                }\n                *(*0x20 + -0x90) = 0x48e589;\n                fcn.0045c660(puVar6);\n            }\n            *(*0x20 + -0x90) = 0x48e591;\n            fcn.0045c5e0(puVar6, unaff_RBX);\ncode_r0x0048e591:\n            *(*0x20 + -0x90) = 0x48e59c;\n            fcn.0045c5a0(unaff_RBX);\ncode_r0x0048e59c:\n            *(*0x20 + -0x90) = 0x48e5a7;\n            fcn.0045c660(arg1_00);\ncode_r0x0048e5a7:\n            *(*0x20 + -0x90) = 0x48e5af;\n            fcn.0045c5e0(arg1_00, unaff_RBX);\ncode_r0x0048e5af:\n            arg1 = unaff_RBX;\n            *(*0x20 + -0x90) = 0x48e5ba;\n            arg2 = arg1;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = puVar2;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x48e5d4;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 3861
    },
    "0048e600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048ec57)\n\nvoid fcn.0048e600(ulong param_1, uint64_t param_2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t arg1;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    char cVar10;\n    char cVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xf0) = 0x48e63b;\n            uVar3 = fcn.0048f360();\n            uVar4 = *(*0x20 + 0x10);\n            if (uVar3 <= uVar4) {\n                uVar7 = uVar4 - uVar3;\n                unaff_RBX = -uVar7 >> 0x3f & uVar3;\n                iVar2 = *(*0x20 + 8);\n                uVar6 = iVar2 + unaff_RBX;\n                if (uVar7 == 0) {\n                    if ((1 < uVar3) && (*(iVar2 + 1) != ':')) {\n                        *(*0x20 + -0xf0) = 0x48e82f;\n                        fcn.0048d520(0x4ac9c6, param_2, 1, 0xffffffffffffffff);\n                        return;\n                    }\n                    *(*0x20 + -0xf0) = 0x48e855;\n                    fcn.00448ba0(uVar4);\n                    return;\n                }\n                if (*(unaff_RBX + iVar2) == '\\\\') {\n                    uVar12 = 1;\n                }\n                else {\n                    uVar12 = *(unaff_RBX + iVar2) == '/';\n                }\n                *(*0x20 + -0x80) = uVar7;\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0xaa) = uVar12;\n                *(*0x20 + -0x50) = 0;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x50) = uVar6;\n                *(*0x20 + -0x48) = uVar7;\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                if (uVar12 == '\\0') {\n                    uVar5 = 0;\n                    uVar4 = uVar5;\n                    uVar3 = uVar7;\ncode_r0x0048e868:\n                    uVar7 = uVar4;\n                    if (uVar3 <= uVar7) {\n                        uVar3 = *(*0x20 + -0x28);\n                        if (uVar3 == 0) {\n                            if (*(*0x20 + -0x40) == 0) {\n                                iVar2 = *(*0x20 + -0x48);\n                                if ((0 < iVar2) && (**(*0x20 + -0x50) == '.')) {\n                                    uVar3 = 1;\n                                    *(*0x20 + -0x28) = 1;\n                                    goto code_r0x0048ee88;\n                                }\n                                *(*0x20 + -0x80) = iVar2;\n                                *(*0x20 + -0xf0) = 0x48ee0a;\n                                uVar7 = fcn.00445140(iVar2);\n                                uVar4 = *(*0x20 + -0x80);\n                                *(*0x20 + -0x38) = uVar4;\n                                *(*0x20 + -0x30) = uVar4;\n                                *(*0x20 + -0x40) = uVar7;\n                                unaff_RBX = *(*0x20 + -0x50);\n                                param_2 = *(*0x20 + -0x48);\n                                unaff_RSI = *(*0x20 + -0x28);\n                                uVar6 = param_2;\n                                if (param_2 < unaff_RSI) goto code_r0x0048ef7f;\n                                if (unaff_RSI < uVar4) {\n                                    uVar4 = unaff_RSI;\n                                }\n                                if (uVar7 != unaff_RBX) {\n                                    *(*0x20 + -0xf0) = 0x48ee5a;\n                                    fcn.0045cee0(uVar4);\n                                }\n                            }\n                            uVar4 = *(*0x20 + -0x38);\n                            uVar3 = *(*0x20 + -0x40);\n                            if (*(*0x20 + -0x28) < uVar4) {\n                                *(uVar3 + *(*0x20 + -0x28)) = 0x2e;\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                goto code_r0x0048ee88;\n                            }\n                        }\n                        else {\ncode_r0x0048ee88:\n                            unaff_RBX = *(*0x20 + -0x40);\n                            uVar6 = *(*0x20 + -0x30);\n                            if (unaff_RBX == 0) {\n                                uVar6 = *(*0x20 + -0x18);\n                                uVar3 = *(*0x20 + -0x20);\n                                if (*(*0x20 + -0x10) + *(*0x20 + -0x28) <= uVar6) {\ncode_r0x0048ef33:\n                                    *(*0x20 + -0xf0) = 0x48ef55;\n                                    fcn.0048d520(0x4ac9c6, uVar6, 1, 0xffffffffffffffff);\n                                    return;\n                                }\n                                *(*0x20 + -0xf0) = 0x48ef6a;\n                                fcn.0045c5e0(*(*0x20 + -0x10) + *(*0x20 + -0x28), uVar6);\ncode_r0x0048ef6a:\n                                *(*0x20 + -0xf0) = 0x48ef72;\n                                uVar4 = unaff_RSI;\n                                fcn.0045c620(unaff_RSI, uVar6);\n                            }\n                            else {\n                                unaff_RSI = *(*0x20 + -0x18);\n                                uVar4 = *(*0x20 + -0x10);\n                                if (uVar4 <= unaff_RSI) {\n                                    unaff_RSI = *(*0x20 + -0x28);\n                                    if (unaff_RSI <= uVar6) {\n                                        *(*0x20 + -0x58) = *(*0x20 + -0x20);\n                                        *(*0x20 + -0x80) = uVar4;\n                                        *(*0x20 + -0xf0) = 0x48eee9;\n                                        fcn.00448f60(unaff_RSI);\n                                        *(*0x20 + -0xf0) = 0x48ef05;\n                                        fcn.00448ba0(*(*0x20 + -0x80));\n                                        goto code_r0x0048ef33;\n                                    }\n                                    goto code_r0x0048ef6a;\n                                }\n                            }\n                            *(*0x20 + -0xf0) = 0x48ef7a;\n                            param_2 = unaff_RSI;\n                            fcn.0045c5e0(uVar4, unaff_RSI);\n                        }\n                        *(*0x20 + -0xf0) = 0x48ef7f;\n                        fcn.0045c5a0(uVar4);\n                        uVar6 = param_2;\ncode_r0x0048ef7f:\n                        *(*0x20 + -0xf0) = 0x48ef87;\n                        uVar5 = unaff_RSI;\n                        uVar7 = fcn.0045c5e0(unaff_RSI, uVar6);\n                        goto code_r0x0048ef87;\n                    }\n                    if (uVar3 <= uVar7) goto code_r0x0048f1dc;\n                    cVar10 = *(uVar6 + uVar7);\n                    if ((cVar10 == '\\\\') || (cVar10 == '/')) {\n                        uVar4 = uVar7 + 1;\n                        goto code_r0x0048e868;\n                    }\n                    cVar11 = uVar12;\n                    if (cVar10 != '.') {\ncode_r0x0048ec62:\n                        *(*0x20 + -0xa0) = uVar5;\n                        if (cVar11 == '\\0') {\ncode_r0x0048ec7d:\n                            if (*(*0x20 + -0x28) != 0) {\ncode_r0x0048ec8c:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0xa8) = uVar7;\n                                    uVar9 = *(*0x20 + -0x28);\n                                    unaff_RBX = *(*0x20 + -0x48);\n                                    if (unaff_RBX <= uVar9) {\ncode_r0x0048ece5:\n                                        *(*0x20 + -0x90) = unaff_RBX;\n                                        *(*0x20 + -0xf0) = 0x48ecf9;\n                                        uVar7 = fcn.00445140(unaff_RBX);\n                                        uVar4 = *(*0x20 + -0x90);\n                                        *(*0x20 + -0x38) = uVar4;\n                                        *(*0x20 + -0x30) = uVar4;\n                                        *(*0x20 + -0x40) = uVar7;\n                                        unaff_RBX = *(*0x20 + -0x50);\n                                        uVar6 = *(*0x20 + -0x48);\n                                        unaff_RSI = *(*0x20 + -0x28);\n                                        if (unaff_RSI <= uVar6) {\n                                            if (unaff_RSI < uVar4) {\n                                                uVar4 = unaff_RSI;\n                                            }\n                                            if (uVar7 != unaff_RBX) {\n                                                *(*0x20 + -0xf0) = 0x48ed4a;\n                                                fcn.0045cee0(uVar4);\n                                            }\n                                            uVar7 = *(*0x20 + -0xa8);\n                                            uVar5 = *(*0x20 + -0xa0);\n                                            uVar6 = *(*0x20 + -0x58);\n                                            uVar3 = *(*0x20 + -0x80);\n                                            uVar12 = *(*0x20 + -0xaa);\n                                            goto code_r0x0048ed67;\n                                        }\n                                        goto code_r0x0048f0f0;\n                                    }\n                                    if (uVar9 < unaff_RBX) {\n                                        if (*(*(*0x20 + -0x50) + uVar9) == '\\\\') {\n                                            *(*0x20 + -0x28) = uVar9 + 1;\n                                            goto code_r0x0048ef8a;\n                                        }\n                                        goto code_r0x0048ece5;\n                                    }\n                                }\n                                else {\ncode_r0x0048ed67:\n                                    uVar9 = *(*0x20 + -0x38);\n                                    if (*(*0x20 + -0x28) < uVar9) {\n                                        *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x5c;\n                                        *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                        goto code_r0x0048ef8a;\n                                    }\ncode_r0x0048f0e5:\n                                    *(*0x20 + -0xf0) = 0x48f0f0;\n                                    fcn.0045c5a0(uVar9);\ncode_r0x0048f0f0:\n                                    *(*0x20 + -0xf0) = 0x48f0f8;\n                                    fcn.0045c5e0(unaff_RSI, uVar6);\n                                }\n                                *(*0x20 + -0xf0) = 0x48f105;\n                                uVar5 = unaff_RBX;\n                                fcn.0045c5a0(unaff_RBX);\n                                uVar4 = uVar9;\n                                param_2 = uVar6;\n                                goto code_r0x0048e868;\n                            }\n                        }\n                        else {\n                            if (*(*0x20 + -0x28) != 1) goto code_r0x0048ec8c;\n                            if (cVar11 == '\\0') goto code_r0x0048ec7d;\n                        }\ncode_r0x0048ef8a:\n                        for (; uVar4 = uVar7,  param_2 = uVar6,  uVar7 < uVar3; uVar7 = uVar7 + 1) {\n                            uVar1 = *(uVar7 + uVar6);\n                            uVar9 = uVar1;\n                            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) break;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x98) = uVar7;\n                                *(*0x20 + -0xa9) = uVar1;\n                                uVar4 = *(*0x20 + -0x28);\n                                unaff_RBX = *(*0x20 + -0x48);\n                                if (unaff_RBX <= uVar4) {\ncode_r0x0048f00f:\n                                    *(*0x20 + -0x90) = unaff_RBX;\n                                    *(*0x20 + -0xf0) = 0x48f025;\n                                    uVar7 = fcn.00445140(unaff_RBX);\n                                    uVar4 = *(*0x20 + -0x90);\n                                    *(*0x20 + -0x38) = uVar4;\n                                    *(*0x20 + -0x30) = uVar4;\n                                    *(*0x20 + -0x40) = uVar7;\n                                    unaff_RBX = *(*0x20 + -0x50);\n                                    uVar6 = *(*0x20 + -0x48);\n                                    unaff_RSI = *(*0x20 + -0x28);\n                                    if (unaff_RSI <= uVar6) {\n                                        if (unaff_RSI < uVar4) {\n                                            uVar4 = unaff_RSI;\n                                        }\n                                        if (uVar7 != unaff_RBX) {\n                                            *(*0x20 + -0xf0) = 0x48f070;\n                                            fcn.0045cee0(uVar4);\n                                        }\n                                        uVar7 = *(*0x20 + -0x98);\n                                        uVar5 = *(*0x20 + -0xa0);\n                                        uVar6 = *(*0x20 + -0x58);\n                                        uVar3 = *(*0x20 + -0x80);\n                                        uVar9 = *(*0x20 + -0xa9);\n                                        uVar12 = *(*0x20 + -0xaa);\n                                        goto code_r0x0048f093;\n                                    }\n                                    goto code_r0x0048f0d2;\n                                }\n                                if (uVar4 < unaff_RBX) {\n                                    if (*(*(*0x20 + -0x50) + uVar4) != uVar1) goto code_r0x0048f00f;\n                                    *(*0x20 + -0x28) = uVar4 + 1;\n                                    goto code_r0x0048ef87;\n                                }\ncode_r0x0048f0da:\n                                *(*0x20 + -0xf0) = 0x48f0e5;\n                                fcn.0045c5a0(unaff_RBX);\n                                goto code_r0x0048f0e5;\n                            }\ncode_r0x0048f093:\n                            unaff_RBX = uVar12 & 0xffffffff;\n                            uVar12 = *(*0x20 + -0x28);\n                            if (*(*0x20 + -0x38) <= uVar12) {\n                                *(*0x20 + -0xf0) = 0x48f0d2;\n                                fcn.0045c5a0(*(*0x20 + -0x38));\ncode_r0x0048f0d2:\n                                *(*0x20 + -0xf0) = 0x48f0da;\n                                fcn.0045c5e0(unaff_RSI, uVar6);\n                                goto code_r0x0048f0da;\n                            }\n                            *(*(*0x20 + -0x40) + uVar12) = uVar9;\n                            *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                            uVar12 = unaff_RBX;\ncode_r0x0048ef87:\n                        }\n                        goto code_r0x0048e868;\n                    }\n                    uVar4 = uVar7 + 1;\n                    if (uVar3 == uVar4) goto code_r0x0048e868;\n                    if (uVar3 <= uVar4) goto code_r0x0048f1d1;\n                    cVar10 = *(uVar7 + 1 + uVar6);\n                    param_2 = uVar6;\n                    if ((cVar10 == '\\\\') || (cVar10 == '/')) goto code_r0x0048e868;\n                    if (uVar4 < uVar3) {\n                        if (cVar10 != '.') goto code_r0x0048ec62;\n                        uVar4 = uVar7 + 2;\n                        if (uVar3 != uVar4) {\n                            if (uVar3 <= uVar4) {\ncode_r0x0048f1bb:\n                                *(*0x20 + -0xf0) = 0x48f1c6;\n                                fcn.0045c5a0(uVar3);\n                                goto code_r0x0048f1c6;\n                            }\n                            cVar10 = *(uVar7 + 2 + uVar6);\n                            if ((cVar10 != '\\\\') && (cVar10 != '/')) goto code_r0x0048ec62;\n                        }\n                        iVar2 = *(*0x20 + -0x28);\n                        if (uVar5 < iVar2) {\n                            *(*0x20 + -0x28) = iVar2 + -1;\n                            while (uVar7 = *(*0x20 + -0x28),  param_2 = uVar6,  uVar5 < uVar7) {\n                                uVar9 = *(*0x20 + -0x38);\n                                if (*(*0x20 + -0x40) == 0) {\n                                    uVar9 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x48) <= uVar7) {\n                                        *(*0x20 + -0xf0) = 0x48f1b3;\n                                        fcn.0045c5a0(*(*0x20 + -0x48));\n                                        goto code_r0x0048f1b3;\n                                    }\n                                    cVar10 = *(uVar9 + uVar7);\n                                }\n                                else {\n                                    if (uVar9 <= uVar7) {\ncode_r0x0048f1b3:\n                                        *(*0x20 + -0xf0) = 0x48f1bb;\n                                        fcn.0045c5a0(uVar9);\n                                        goto code_r0x0048f1bb;\n                                    }\n                                    cVar10 = *(*(*0x20 + -0x40) + uVar7);\n                                }\n                                if ((cVar10 == '\\\\') || (cVar10 == '/')) break;\ncode_r0x0048f13f:\n                                *(*0x20 + -0x28) = uVar7 - 1;\n                            }\n                            goto code_r0x0048e868;\n                        }\n                        if (cVar11 != '\\0') goto code_r0x0048e868;\n                        *(*0x20 + -0x88) = uVar4;\n                        if (iVar2 < 1) {\ncode_r0x0048ea40:\n                            if (*(*0x20 + -0x40) == 0) {\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar7 = *(*0x20 + -0x48);\n                                if (uVar7 <= uVar5) {\ncode_r0x0048ea8e:\n                                    *(*0x20 + -0x90) = uVar7;\n                                    *(*0x20 + -0xf0) = 0x48eaa5;\n                                    uVar5 = fcn.00445140(uVar7);\n                                    uVar7 = *(*0x20 + -0x90);\n                                    *(*0x20 + -0x38) = uVar7;\n                                    *(*0x20 + -0x30) = uVar7;\n                                    *(*0x20 + -0x40) = uVar5;\n                                    unaff_RBX = *(*0x20 + -0x50);\n                                    uVar6 = *(*0x20 + -0x48);\n                                    unaff_RSI = *(*0x20 + -0x28);\n                                    if (unaff_RSI <= uVar6) {\n                                        if (unaff_RSI < uVar7) {\n                                            uVar7 = unaff_RSI;\n                                        }\n                                        if (uVar5 != unaff_RBX) {\n                                            *(*0x20 + -0xf0) = 0x48eafa;\n                                            fcn.0045cee0(uVar7);\n                                        }\n                                        uVar6 = *(*0x20 + -0x58);\n                                        uVar3 = *(*0x20 + -0x80);\n                                        uVar4 = *(*0x20 + -0x88);\n                                        uVar12 = *(*0x20 + -0xaa);\n                                        goto code_r0x0048eb12;\n                                    }\n                                    goto code_r0x0048f125;\n                                }\n                                if (uVar5 < uVar7) {\n                                    if (*(uVar5 + *(*0x20 + -0x50)) != '.') goto code_r0x0048ea8e;\n                                    *(*0x20 + -0x28) = uVar5 + 1;\n                                    goto code_r0x0048eb40;\n                                }\n                            }\n                            else {\ncode_r0x0048eb12:\n                                uVar7 = *(*0x20 + -0x38);\n                                if (*(*0x20 + -0x28) < uVar7) {\n                                    *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x2e;\n                                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\ncode_r0x0048eb40:\n                                    if (*(*0x20 + -0x40) == 0) {\n                                        uVar5 = *(*0x20 + -0x28);\n                                        uVar7 = *(*0x20 + -0x48);\n                                        if (uVar7 <= uVar5) {\ncode_r0x0048eb8e:\n                                            *(*0x20 + -0x90) = uVar7;\n                                            *(*0x20 + -0xf0) = 0x48eba5;\n                                            uVar5 = fcn.00445140(uVar7);\n                                            uVar7 = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x38) = uVar7;\n                                            *(*0x20 + -0x30) = uVar7;\n                                            *(*0x20 + -0x40) = uVar5;\n                                            unaff_RBX = *(*0x20 + -0x50);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RSI = *(*0x20 + -0x28);\n                                            if (unaff_RSI <= uVar6) {\n                                                if (unaff_RSI < uVar7) {\n                                                    uVar7 = unaff_RSI;\n                                                }\n                                                if (uVar5 != unaff_RBX) {\n                                                    *(*0x20 + -0xf0) = 0x48ebfa;\n                                                    fcn.0045cee0(uVar7);\n                                                }\n                                                uVar6 = *(*0x20 + -0x58);\n                                                uVar3 = *(*0x20 + -0x80);\n                                                uVar4 = *(*0x20 + -0x88);\n                                                uVar12 = *(*0x20 + -0xaa);\n                                                goto code_r0x0048ec12;\n                                            }\n                                            goto code_r0x0048f112;\n                                        }\n                                        if (uVar5 < uVar7) {\n                                            if (*(*(*0x20 + -0x50) + uVar5) != '.') goto code_r0x0048eb8e;\n                                            *(*0x20 + -0x28) = uVar5 + 1;\n                                            goto code_r0x0048ec40;\n                                        }\n                                    }\n                                    else {\ncode_r0x0048ec12:\n                                        if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n                                            *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x2e;\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\ncode_r0x0048ec40:\n                                            uVar5 = *(*0x20 + -0x28);\n                                            param_2 = uVar6;\n                                            goto code_r0x0048e868;\n                                        }\n                                        *(*0x20 + -0xf0) = 0x48f112;\n                                        fcn.0045c5a0(*(*0x20 + -0x38));\ncode_r0x0048f112:\n                                        *(*0x20 + -0xf0) = 0x48f11a;\n                                        uVar7 = unaff_RSI;\n                                        fcn.0045c5e0(unaff_RSI, uVar6);\n                                    }\n                                    *(*0x20 + -0xf0) = 0x48f11f;\n                                    fcn.0045c5a0(uVar7);\n                                }\n                                *(*0x20 + -0xf0) = 0x48f125;\n                                fcn.0045c5a0(uVar7);\ncode_r0x0048f125:\n                                *(*0x20 + -0xf0) = 0x48f12d;\n                                uVar7 = unaff_RSI;\n                                fcn.0045c5e0(unaff_RSI, uVar6);\n                            }\n                            *(*0x20 + -0xf0) = 0x48f132;\n                            fcn.0045c5a0(uVar7);\n                        }\n                        else {\n                            if (*(*0x20 + -0x40) == 0) {\n                                arg1 = *(*0x20 + -0x48);\n                                if ((iVar2 < arg1) && (*(*(*0x20 + -0x50) + iVar2) == '\\\\')) {\n                                    *(*0x20 + -0x28) = iVar2 + 1;\n                                    goto code_r0x0048ea40;\n                                }\n                                *(*0x20 + -0x90) = arg1;\n                                *(*0x20 + -0xf0) = 0x48e9aa;\n                                uVar5 = fcn.00445140(arg1);\n                                uVar7 = *(*0x20 + -0x90);\n                                *(*0x20 + -0x38) = uVar7;\n                                *(*0x20 + -0x30) = uVar7;\n                                *(*0x20 + -0x40) = uVar5;\n                                unaff_RBX = *(*0x20 + -0x50);\n                                uVar6 = *(*0x20 + -0x48);\n                                unaff_RSI = *(*0x20 + -0x28);\n                                if (uVar6 < unaff_RSI) goto code_r0x0048f137;\n                                if (unaff_RSI < uVar7) {\n                                    uVar7 = unaff_RSI;\n                                }\n                                if (uVar5 != unaff_RBX) {\n                                    *(*0x20 + -0xf0) = 0x48e9fa;\n                                    fcn.0045cee0(uVar7);\n                                }\n                                uVar6 = *(*0x20 + -0x58);\n                                uVar3 = *(*0x20 + -0x80);\n                                uVar4 = *(*0x20 + -0x88);\n                                uVar12 = *(*0x20 + -0xaa);\n                            }\n                            uVar7 = *(*0x20 + -0x38);\n                            if (*(*0x20 + -0x28) < uVar7) {\n                                *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x5c;\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                goto code_r0x0048ea40;\n                            }\n                        }\n                        *(*0x20 + -0xf0) = 0x48f137;\n                        fcn.0045c5a0(uVar7);\ncode_r0x0048f137:\n                        *(*0x20 + -0xf0) = 0x48f13f;\n                        uVar5 = unaff_RSI;\n                        uVar7 = fcn.0045c5e0(unaff_RSI, uVar6);\n                        goto code_r0x0048f13f;\n                    }\ncode_r0x0048f1c6:\n                    *(*0x20 + -0xf0) = 0x48f1d1;\n                    fcn.0045c5a0(uVar3);\n                    param_2 = uVar6;\ncode_r0x0048f1d1:\n                    *(*0x20 + -0xf0) = 0x48f1dc;\n                    fcn.0045c5a0(uVar3);\ncode_r0x0048f1dc:\n                    *(*0x20 + -0xf0) = 0x48f1e5;\n                    fcn.0045c5a0(uVar3);\ncode_r0x0048f1e5:\n                    *(*0x20 + -0xf0) = 0x48f1ea;\n                    fcn.0045c5a0(uVar3);\n                }\n                else {\n                    if (*(*0x20 + -0x40) != 0) {\ncode_r0x0048e7bd:\n                        uVar3 = *(*0x20 + -0x38);\n                        if (*(*0x20 + -0x28) < uVar3) {\n                            *(*(*0x20 + -0x40) + *(*0x20 + -0x28)) = 0x5c;\n                            *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\ncode_r0x0048e7eb:\n                            uVar5 = 1;\n                            uVar4 = uVar5;\n                            uVar3 = uVar7;\n                            goto code_r0x0048e868;\n                        }\n                        goto code_r0x0048f1e5;\n                    }\n                    if ((0 < uVar7) && (**(*0x20 + -0x50) == '\\\\')) {\n                        *(*0x20 + -0x28) = 1;\n                        goto code_r0x0048e7eb;\n                    }\n                    *(*0x20 + -0xf0) = 0x48e757;\n                    uVar4 = fcn.00445140(uVar7);\n                    uVar7 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x30) = uVar7;\n                    *(*0x20 + -0x40) = uVar4;\n                    unaff_RBX = *(*0x20 + -0x50);\n                    param_2 = *(*0x20 + -0x48);\n                    unaff_RSI = *(*0x20 + -0x28);\n                    if (unaff_RSI <= param_2) {\n                        uVar3 = uVar7;\n                        if (unaff_RSI < uVar7) {\n                            uVar3 = unaff_RSI;\n                        }\n                        if (uVar4 != unaff_RBX) {\n                            *(*0x20 + -0xf0) = 0x48e7aa;\n                            fcn.0045cee0(uVar3);\n                            uVar7 = *(*0x20 + -0x80);\n                        }\n                        uVar6 = *(*0x20 + -0x58);\n                        uVar12 = *(*0x20 + -0xaa);\n                        goto code_r0x0048e7bd;\n                    }\n                }\n                *(*0x20 + -0xf0) = 0x48f1f2;\n                uVar4 = unaff_RSI;\n                fcn.0045c5e0(unaff_RSI, param_2);\n            }\n            *(*0x20 + -0xf0) = 0x48f1f7;\n            in_RAX = fcn.0045c660(uVar4);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x48f207;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 7775
    },
    "0048f360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0048f360(void)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    char *in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    \n    if (unaff_RBX < 2) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    cVar2 = in_RAX[1];\n    if ((cVar2 == ':') && ((cVar1 + 0x9fU < 0x1a || (cVar1 + 0xbfU < 0x1a)))) {\n        return 2;\n    }\n    if ((((4 < unaff_RBX) && ((cVar1 == '\\\\' || (cVar1 == '/')))) && ((cVar2 == '\\\\' || (cVar2 == '/')))) &&\n       (((cVar1 = in_RAX[2],  cVar1 != '\\\\' && (cVar1 != '/')) && (cVar1 != '.')))) {\n        for (iVar4 = 3; iVar4 < unaff_RBX - 1; iVar4 = iVar4 + 1) {\n            if ((in_RAX[iVar4] == '\\\\') || (in_RAX[iVar4] == '/')) {\n                uVar5 = iVar4 + 1;\n                if (unaff_RBX <= uVar5) {\n                    fcn.0045c5a0(unaff_RBX);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                cVar1 = in_RAX[iVar4 + 1];\n                if (cVar1 == '\\\\') {\n                    return 0;\n                }\n                if (cVar1 == '/') {\n                    return 0;\n                }\n                if (cVar1 == '.') {\n                    return 0;\n                }\n                for (; ((uVar5 < unaff_RBX && (in_RAX[uVar5] != '\\\\')) && (in_RAX[uVar5] != '/')); uVar5 = uVar5 + 1) {\n                }\n                return uVar5;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 487
    },
    "0048f480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0048f480(void)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint32_t uVar6;\n    uint64_t arg1;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    ulong arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t arg3;\n    ulong arg3_00;\n    ulong *arg4;\n    ulong arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0x7897b8;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            uVar9 = 0;\n            arg1_00 = 0;\n            arg3 = 0;\n            arg4 = 0x7897b8;\n            for (arg1 = 0; *(*0x20 + -0x48) = arg1_00,  arg1 < unaff_RBX; arg1 = arg1 + 1) {\n                if (*(in_RAX + arg1) == '\\\"') {\n                    uVar3 = uVar3 ^ 1;\n                }\n                else if ((*(in_RAX + arg1) == ';') && (uVar3 == '\\0')) {\n                    if (arg1 < uVar9) goto code_r0x0048f765;\n                    iVar7 = arg1 - uVar9;\n                    iVar4 = in_RAX + (uVar9 & -iVar7 >> 0x3f);\n                    uVar10 = arg1_00;\n                    uVar9 = arg1_00 + 1;\n                    if (arg3 < arg1_00 + 1) {\n                        *(*0x20 + -0x28) = arg1;\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x10) = iVar4;\n                        *(*0x20 + -0x49) = 0;\n                        *(*0x20 + -0x98) = 0x48f589;\n                        puVar2 = fcn.00445220(arg1_00);\n                        uVar9 = arg4 + 1;\n                        uVar3 = *(*0x20 + -0x49);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar10 = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x28);\n                        iVar7 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = arg1_00;\n                        arg4 = puVar2;\n                    }\n                    arg1_00 = uVar9;\n                    arg4[uVar10 * 2 + 1] = iVar7;\n                    if (*0x789810 == 0) {\n                        arg4[uVar10 * 2] = iVar4;\n                    }\n                    else {\n                        uVar6 = uVar3;\n                        *(*0x20 + -0x98) = 0x48f5e8;\n                        in_RAX = fcn.0045c220(uVar3, iVar4, arg3, arg4);\n                        uVar3 = uVar6;\n                    }\n                    uVar9 = arg1 + 1;\n                }\n            }\n            if (uVar9 <= unaff_RBX) {\n                uVar3 = arg1_00 + 1;\n                iVar7 = unaff_RBX - uVar9;\n                iVar4 = (uVar9 & -iVar7 >> 0x3f) + in_RAX;\n                uVar9 = arg1_00;\n                puVar2 = arg4;\n                if (arg3 < uVar3) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x98) = 0x48f64b;\n                    puVar2 = fcn.00445220(arg1_00);\n                    uVar3 = arg4 + 1;\n                    uVar9 = *(*0x20 + -0x48);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar4 = *(*0x20 + -0x10);\n                    arg1 = arg1_00;\n                    arg3 = arg1_00;\n                }\n                puVar2[uVar9 * 2 + 1] = iVar7;\n                if (*0x789810 == 0) {\n                    puVar2[uVar9 * 2] = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x48f691;\n                    uVar3 = fcn.0045c220(arg1, iVar4, arg3, puVar2);\n                }\n                if (0 < uVar3) {\n                    *(*0x20 + -0x20) = puVar2;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x40) = arg3;\n                    iVar4 = 0;\n                    while( true ) {\n                        *(*0x20 + -0x38) = iVar4;\n                        *(*0x20 + -0x18) = puVar2;\n                        uVar5 = *puVar2;\n                        uVar1 = puVar2[1];\n                        arg1_01 = 0x4ac9d5;\n                        arg3_00 = 0;\n                        arg4_00 = 0xffffffffffffffff;\n                        *(*0x20 + -0x98) = 0x48f705;\n                        uVar5 = fcn.0048d520(0x4ac9d5, uVar5, 0, 0xffffffffffffffff);\n                        iVar4 = *(*0x20 + -0x38);\n                        puVar2 = *(*0x20 + -0x20);\n                        puVar2[iVar4 * 2 + 1] = uVar1;\n                        if (*0x789810 == 0) {\n                            puVar2[iVar4 * 2] = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x98) = 0x48f733;\n                            fcn.0045c100(arg1_01, iVar4 * 0x10, arg3_00, arg4_00);\n                        }\n                        iVar4 = iVar4 + 1;\n                        if (*(*0x20 + -0x48) <= iVar4) break;\n                        puVar2 = *(*0x20 + -0x18) + 0x10;\n                    }\n                }\n                return puVar2;\n            }\n            *(*0x20 + -0x98) = 0x48f765;\n            arg1 = unaff_RBX;\n            fcn.0045c660(unaff_RBX);\ncode_r0x0048f765:\n            *(*0x20 + -0x98) = 0x48f76d;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x48f77d;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1861
    },
    "0048f7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048f7a0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (0 < unaff_RBX) {\n        iVar2 = 0;\n        while( true ) {\n            if (*(in_RAX + 8) != 0) {\n                uVar1 = fcn.0048f860(arg1 - iVar2);\n                return uVar1;\n            }\n            iVar2 = iVar2 + 1;\n            if (unaff_RBX <= iVar2) break;\n            in_RAX = in_RAX + 0x10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 217
    },
    "0048f860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0048f860(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                if ((in_RAX[1] != 2) || (*(*in_RAX + 1) != ':')) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x20) = arg1;\n                    *(*0x20 + -0x70) = 0x48f8c5;\n                    fcn.0048c740(arg1);\n                    *(*0x20 + -0x70) = 0x48f8ca;\n                    uVar3 = fcn.0048e600();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x70) = 0x48f8d9;\n                    iVar1 = fcn.0048f360();\n                    if (iVar1 < 3) {\n                        return *(*0x20 + -0x18);\n                    }\n                    uVar3 = *(*(*0x20 + 8) + 8);\n                    *(*0x20 + -0x70) = 0x48f8fb;\n                    uVar2 = fcn.0048e600();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x70) = 0x48f90a;\n                    iVar1 = fcn.0048f360();\n                    if (2 < iVar1) {\n                        return *(*0x20 + -0x18);\n                    }\n                    uVar4 = *(*0x20 + 0x10);\n                    unaff_RBX = uVar4 - 1;\n                    *(*0x20 + -0x70) = 0x48f951;\n                    fcn.0048c740(*(*0x20 + -0x20) + -1);\n                    *(*0x20 + -0x70) = 0x48f956;\n                    uVar3 = fcn.0048e600();\n                    arg1 = *(*0x20 + -0x28);\n                    if (arg1 <= arg1 - 1) {\n                        *(*0x20 + -0x70) = 0x48f9e6;\n                        in_RAX = fcn.0045c5a0(arg1);\n                        goto code_r0x0048f9e6;\n                    }\n                    if (*((arg1 - 1) + *(*0x20 + -0x10)) != '\\\\') {\n                        *(*0x20 + -0x70) = 0x48f9ac;\n                        uVar3 = fcn.00448c40(arg1, *(*0x20 + -0x10), uVar3, unaff_RBX);\n                        return uVar3;\n                    }\n                    *(*0x20 + -0x70) = 0x48f986;\n                    uVar3 = fcn.00448ba0(arg1);\n                    return uVar3;\n                }\n                uVar4 = 1;\n                while ((uVar4 < unaff_RBX && (in_RAX[uVar4 * 2 + 1] == 0))) {\ncode_r0x0048f9e6:\n                    uVar4 = uVar4 + 1;\n                }\n                if (uVar4 <= unaff_RBX) {\n                    *(*0x20 + -0x70) = 0x48fa45;\n                    fcn.0048c740(arg1 - uVar4);\n                    uVar3 = *(*(*0x20 + 8) + 8);\n                    *(*0x20 + -0x70) = 0x48fa65;\n                    fcn.00448ba0(uVar3);\n                    *(*0x20 + -0x70) = 0x48fa6a;\n                    uVar3 = fcn.0048e600();\n                    return uVar3;\n                }\n                *(*0x20 + -0x70) = 0x48fa7f;\n                fcn.0045c660(unaff_RBX);\n            }\n            *(*0x20 + -0x70) = 0x48fa89;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x48fa9e;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1299
    },
    "0048fca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0048fca0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t arg1_00;\n    ulong noname_1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong *unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x58) = 0x48fcd8;\n            puVar3 = fcn.0040bf40();\n            uVar7 = *(*0x20 + 0x10);\n            puVar3[1] = uVar7;\n            if (*0x789810 == 0) {\n                *puVar3 = *(*0x20 + 8);\n                puVar4 = puVar3;\n            }\n            else {\n                *(*0x20 + -0x58) = 0x48fd05;\n                puVar4 = fcn.0045c220(uVar7, *(*0x20 + 8), in_R8, in_R9);\n                unaff_RDI = puVar3;\n            }\n            unaff_RSI = *(*0x20 + 0x20);\n            arg1 = unaff_RSI + 1;\n            *(*0x20 + -0x20) = arg1;\n            if (arg1 < 2) {\n                unaff_RBX = 1;\n                uVar1 = arg1;\n            }\n            else {\n                unaff_RBX = 1;\n                unaff_RDI = 0x1;\n                *(*0x20 + -0x58) = 0x48fd3c;\n                puVar4 = fcn.00445220(1);\n                uVar1 = *(*0x20 + -0x20);\n                unaff_RSI = *(*0x20 + 0x20);\n                arg1 = *(*0x20 + -0x20);\n            }\n            if (uVar1 != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x10) = puVar4;\n                puVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0x58) = 0x48fd99;\n                fcn.0040fcc0(unaff_RSI);\n                *(*0x20 + -0x58) = 0x48fda5;\n                puVar3 = fcn.0040bf40();\n                arg1_00 = *(*0x20 + 0x10);\n                puVar3[1] = arg1_00;\n                if (*0x789810 == 0) {\n                    uVar7 = *(*0x20 + 8);\n                    *puVar3 = uVar7;\n                    puVar5 = puVar3;\n                    puVar3 = puVar4;\n                }\n                else {\n                    uVar7 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x48fdcf;\n                    puVar5 = fcn.0045c200();\n                }\n                *(*0x20 + -0x18) = puVar5;\n                puVar5[3] = *(*0x20 + -0x20);\n                puVar5[4] = *(*0x20 + -0x28);\n                if (*0x789810 == 0) {\n                    noname_1 = *(*0x20 + -0x10);\n                    puVar5[2] = noname_1;\n                }\n                else {\n                    puVar3 = puVar5 + 2;\n                    noname_1 = *(*0x20 + -0x10);\n                    *(*0x20 + -0x58) = 0x48fe08;\n                    fcn.0045c220(uVar7, noname_1, arg1, in_R9);\n                }\n                *(*0x20 + -0x58) = 0x48fe10;\n                fcn.0048f220();\n                if (arg1_00 == *(*0x20 + 0x10)) {\n                    *(*0x20 + -0x58) = 0x48fe27;\n                    cVar2 = fcn.004025e0(arg1_00, noname_1);\n                    if (cVar2 != '\\0') {\n                        uVar7 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x58) = 0x48fe45;\n                        uVar6 = fcn.00492220();\n                        if (arg1_00 == 0) {\n                            puVar3 = *(*0x20 + -0x18);\n                            puVar3[1] = uVar7;\n                            if (*0x789810 == 0) {\n                                *puVar3 = uVar6;\n                                return puVar3;\n                            }\n                            *(*0x20 + -0x58) = 0x48fe98;\n                            fcn.0045c100(0, noname_1, arg1, in_R9);\n                            return puVar3;\n                        }\n                        puVar4 = *(*0x20 + -0x18);\n                        puVar4[0x18] = arg1_00;\n                        if (*0x789810 == 0) {\n                            puVar4[0x19] = puVar3;\n                            return puVar4;\n                        }\n                        *(*0x20 + -0x58) = 0x48fe7a;\n                        puVar3 = fcn.0045c220(puVar4 + 0x19, puVar3, arg1, in_R9);\n                        return puVar3;\n                    }\n                }\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x48feb2;\n            in_R8 = arg1;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + -8) = 0x48fed1;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1721
    },
    "004905a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004908ae)\n// WARNING: Removing unreachable block (ram,0x004908d4)\n// WARNING: Removing unreachable block (ram,0x00490916)\n// WARNING: Removing unreachable block (ram,0x0049090d)\n// WARNING: Removing unreachable block (ram,0x00490925)\n// WARNING: Removing unreachable block (ram,0x0049093a)\n// WARNING: Removing unreachable block (ram,0x0049096c)\n// WARNING: Removing unreachable block (ram,0x00490965)\n// WARNING: Removing unreachable block (ram,0x00490971)\n\nint64_t fcn.004905a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong noname_1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == 0) {\n        iVar6 = fcn.00488820(1);\n        return iVar6;\n    }\n    if (unaff_RBX == 0x6b5980) {\n        return arg1;\n    }\n    iVar6 = arg1;\n    noname_1 = fcn.00489560();\n    if (iVar6 == 0) {\n        iVar6 = *(in_RAX + 0xf8);\n        iVar1 = *(in_RAX + 0xf0);\n        iVar5 = in_RAX;\n        iVar2 = iVar1;\n        if (*(in_RAX + 0x100) < iVar6 + 1U) {\n            iVar7 = iVar1;\n            iVar2 = fcn.00445220(iVar6);\n            *(in_RAX + 0x100) = iVar6;\n            if (*0x789810 == 0) {\n                *(in_RAX + 0xf0) = iVar2;\n                iVar6 = iVar1;\n            }\n            else {\n                iVar2 = fcn.0045c100(iVar6, in_RAX, iVar7, in_R9);\n                iVar6 = iVar1;\n            }\n        }\n        *(iVar5 + 0xf8) = iVar6 + 1;\n        iVar6 = iVar6 * 0x10;\n        arg4 = 0x6b5940;\n        *(iVar2 + iVar6) = 0x6b5940;\n        if (*0x789810 == 0) {\n            *(iVar2 + 8 + iVar6) = unaff_RBX;\n            uVar3 = noname_1;\n        }\n        else {\n            uVar3 = fcn.0045c240(iVar6, iVar5, iVar2, 0x6b5940);\n        }\n        iVar6 = *(iVar5 + 0x110);\n        iVar1 = *(iVar5 + 0x108);\n        iVar2 = iVar1;\n        if (*(iVar5 + 0x118) < iVar6 + 1U) {\n            iVar7 = iVar1;\n            iVar2 = fcn.00445220(iVar6);\n            *(in_RAX + 0x118) = iVar6;\n            if (*0x789810 == 0) {\n                *(in_RAX + 0x108) = iVar2;\n                iVar5 = in_RAX;\n            }\n            else {\n                iVar5 = in_RAX;\n                iVar2 = fcn.0045c100(iVar6, in_RAX, iVar7, arg4);\n            }\n            arg4 = 0x6b5940;\n            uVar3 = noname_1;\n            iVar6 = iVar1;\n        }\n        *(iVar5 + 0x110) = iVar6 + 1;\n        iVar6 = iVar6 * 0x10;\n        *(iVar2 + iVar6) = arg4;\n        if (*0x789810 == 0) {\n            *(iVar2 + 8 + iVar6) = uVar3;\n        }\n        else {\n            fcn.0045c100(iVar6, iVar5, iVar2, arg4);\n        }\n        puVar4 = fcn.0040bf40();\n        *puVar4 = 0x4909c0;\n        puVar4[1] = unaff_RBX;\n        if (*0x789810 == 0) {\n            puVar4[2] = arg1;\n            puVar4[3] = noname_1;\n        }\n        else {\n            iVar6 = unaff_RBX;\n            fcn.0045c220(unaff_RBX, arg1, iVar2, arg4);\n            puVar4 = fcn.0045c220(iVar6, noname_1, iVar2, arg4);\n        }\n        iVar6 = *(in_RAX + 0x128);\n        iVar1 = *(in_RAX + 0x120);\n        iVar5 = iVar1;\n        if (*(in_RAX + 0x130) < iVar6 + 1U) {\n            iVar5 = fcn.00445220(iVar6);\n            *(in_RAX + 0x130) = iVar6;\n            if (*0x789810 == 0) {\n                *(in_RAX + 0x120) = iVar5;\n                iVar6 = iVar1;\n            }\n            else {\n                iVar5 = fcn.0045c100(iVar6, in_RAX, iVar2, arg4);\n                iVar6 = iVar1;\n            }\n        }\n        *(in_RAX + 0x128) = iVar6 + 1;\n        if (*0x789810 == 0) {\n            *(iVar5 + iVar6 * 8) = puVar4;\n        }\n        else {\n            fcn.0045c100(iVar6, in_RAX, iVar2, arg4);\n        }\n        return unaff_RBX;\n    }\n    return 0;\n}\n",
        "token_count": 1376
    },
    "00490ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00490ae0(uint64_t arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0xa8) = 0x490b2b;\n            fcn.0048f220();\n            uVar6 = *(*0x20 + 0x10);\n            if (unaff_RBX == uVar6) {\n                *(*0x20 + -0xa8) = 0x490b48;\n                cVar1 = fcn.004025e0(unaff_RBX, in_RDX);\n                if (cVar1 == '\\0') {\n                    uVar6 = *(*0x20 + 0x10);\n                    goto code_r0x00490b54;\n                }\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = 0x4ac9c5;\n                *(*0x20 + -0x20) = 1;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                unaff_RBX = 2;\n                *(*0x20 + -0xa8) = 0x490bbc;\n                uVar3 = fcn.0048f7a0(2);\n            }\n            else {\ncode_r0x00490b54:\n                uVar3 = *(*0x20 + 8);\n                unaff_RBX = uVar6;\n            }\n            if (*(*0x20 + 0x20) == 0) {\n                *(*0x20 + -0xa8) = 0x490d46;\n                uVar3 = fcn.00492220();\n                return uVar3;\n            }\n            *(*0x20 + -0x70) = unaff_RBX;\n            *(*0x20 + -0x58) = uVar3;\n            *(*0x20 + -0xa8) = 0x490bdc;\n            arg1 = fcn.0048f360();\n            in_RDX = *(*0x20 + -0x70);\n            if (arg1 <= in_RDX) {\n                if (arg1 != 0) {\n                    *(*0x20 + -0xa8) = 0x490d31;\n                    uVar3 = fcn.00492220();\n                    return uVar3;\n                }\n                if (in_RDX < 2) {\n                    pcVar4 = *(*0x20 + -0x58);\n                }\n                else {\n                    pcVar4 = *(*0x20 + -0x58);\n                    if ((*pcVar4 == '\\\\') || (*pcVar4 == '/')) {\n                        *(*0x20 + -0xa8) = 0x490c15;\n                        uVar3 = fcn.00492220();\n                        return uVar3;\n                    }\n                }\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x48) = *(*0x20 + 0x18);\n                unaff_RDI = *(*0x20 + 0x20);\n                *(*0x20 + -0x40) = unaff_RDI;\n                *(*0x20 + -0x38) = pcVar4;\n                *(*0x20 + -0x30) = in_RDX;\n                unaff_RBX = 2;\n                iVar5 = 2;\n                *(*0x20 + -0xa8) = 0x490c70;\n                uVar3 = fcn.0048f7a0(2);\n                *(*0x20 + -0x60) = uVar3;\n                *(*0x20 + -0x78) = 2;\n                *(*0x20 + -0xa8) = 0x490c7f;\n                uVar3 = fcn.00492220();\n                if (iVar5 != 0) {\n                    return 0;\n                }\n                uVar6 = *(*0x20 + -0x78);\n                if (uVar6 < 3) {\n                    *(*0x20 + -0x68) = 2;\n                    *(*0x20 + -0x50) = uVar3;\n                    *(*0x20 + -0xa8) = 0x490cab;\n                    uVar2 = fcn.004025e0(uVar6, in_RDX);\n                    uVar6 = *(*0x20 + -0x78);\n                    unaff_RBX = *(*0x20 + -0x68);\n                    in_RDX = uVar2;\n                }\n                else {\n                    in_RDX = 0;\n                }\n                if ((in_RDX == '\\0') || (uVar6 <= unaff_RBX)) {\n                    *(*0x20 + -0xa8) = 0x490cfc;\n                    uVar3 = fcn.00448ba0(*(*0x20 + -0x70));\n                    return uVar3;\n                }\n                *(*0x20 + -0xa8) = 0x490d65;\n                arg1 = fcn.0045c660(unaff_RBX);\n            }\n            *(*0x20 + -0xa8) = 0x490d6d;\n            in_RAX = fcn.0045c5e0(arg1, in_RDX);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x490d87;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1640
    },
    "00491980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00491980(uint64_t arg1)\n\n{\n    uchar in_AL;\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    uint64_t *puVar4;\n    uchar (*arg1_01) [16];\n    ulong *puVar5;\n    int64_t iVar6;\n    uint64_t arg1_02;\n    uint64_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00491980:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x1a0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x1a8) = 0x4919ce;\n        uVar1 = fcn.00445140(arg1);\n        *(*0x20 + -0x110) = uVar1;\n        arg1_01 = *0x20 + -0x108;\n        *arg1_01 = in_XMM15;\n        *(*0x20 + -0xf8) = in_XMM15;\n        *(*0x20 + -0xe8) = in_XMM15;\n        if (*(*0x20 + 0x18) < 9) {\n            *(*0x20 + -0x1b0) = unaff_RBP;\n            *(*0x20 + -0x1a8) = 0x491a2f;\n            fcn.0045c822();\n            unaff_RBP = *(*0x20 + -0x1b0);\n            *(*0x20 + -0xf8) = *0x20 + -0xd8;\n        }\n        *(*0x20 + -0x1a8) = 0x491a4f;\n        uVar1 = fcn.0040cae0(arg1_01);\n        uVar2 = *(*0x20 + 0x18);\n        if (uVar2 < 1) {\n            return *(*0x20 + -0x110);\n        }\n        *(*0x20 + -0x138) = uVar1;\n        puVar5 = *(*0x20 + 0x10);\n        iVar6 = 0;\n        arg1_02 = 0;\n        iVar3 = *(*0x20 + -0x110);\n        do {\n            *(*0x20 + -0x158) = uVar2;\n            *(*0x20 + -0x140) = iVar6;\n            *(*0x20 + -0x118) = puVar5;\n            *(*0x20 + -0x160) = arg1_02;\n            *(*0x20 + -0x130) = iVar3;\n            *(*0x20 + -0x128) = *puVar5;\n            unaff_RBX = puVar5[1];\n            *(*0x20 + -0x150) = unaff_RBX;\n            *(*0x20 + -0x1a8) = 0x491af0;\n            uVar1 = unaff_RBX;\n            uVar2 = fcn.0048dec0(0x4ac9cb, uVar2);\n            if (uVar2 < 0) {\n                uVar2 = *(*0x20 + -0x160);\n                arg1_02 = uVar2 + 1;\n                if (*(*0x20 + -0x158) < arg1_02) {\n                    iVar6 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x1a8) = 0x491b25;\n                    iVar3 = fcn.00445220(uVar2);\n                    arg1_02 = iVar6 + 1;\n                    uVar7 = *(*0x20 + -0x160);\n                }\n                else {\n                    iVar3 = *(*0x20 + -0x130);\n                    uVar7 = uVar2;\n                    uVar2 = *(*0x20 + -0x158);\n                }\n                iVar6 = uVar7 * 0x10;\n                *(iVar3 + 8 + iVar6) = *(*0x20 + -0x150);\n                if (*0x789810 == 0) {\n                    *(iVar3 + iVar6) = *(*0x20 + -0x128);\n                }\n                else {\n                    *(*0x20 + -0x1a8) = 0x491b6a;\n                    iVar3 = fcn.0045c280(uVar2, iVar3 + iVar6, *(*0x20 + -0x128), in_R9);\n                }\n            }\n            else {\n                uVar7 = *(*0x20 + -0x150);\n                arg1 = uVar2;\n                unaff_RDI = 1;\n                if (uVar7 < uVar2) goto code_r0x00491cee;\n                if (*(*0x20 + 8) == '\\0') {\n                    arg1_00 = *(*0x20 + -0x128);\n                }\n                else {\n                    *(*0x20 + -0x1a8) = 0x491baa;\n                    arg1_00 = fcn.0048d2a0();\n                }\n                *(*0x20 + -0x120) = arg1_00;\n                *(*0x20 + -0x148) = uVar2;\n                unaff_RBX = *(*0x20 + -0x138);\n                *(*0x20 + -0x1a8) = 0x491bd1;\n                puVar4 = fcn.0040ee20(arg1_00);\n                if (unaff_RBX == '\\0') {\n                    *(*0x20 + -0x1a8) = 0x491c4e;\n                    puVar4 = fcn.0040f240(*(*0x20 + -0x120));\n                    uVar2 = *(*0x20 + -0x160);\n                    *puVar4 = uVar2;\n                    arg1_02 = uVar2 + 1;\n                    if (*(*0x20 + -0x158) < arg1_02) {\n                        iVar6 = *(*0x20 + -0x130);\n                        *(*0x20 + -0x1a8) = 0x491c7d;\n                        iVar3 = fcn.00445220(uVar2);\n                        arg1_02 = iVar6 + 1;\n                        uVar7 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x130);\n                        uVar7 = uVar2;\n                        uVar2 = *(*0x20 + -0x158);\n                    }\n                    iVar6 = uVar7 * 0x10;\n                    *(iVar3 + 8 + iVar6) = *(*0x20 + -0x150);\n                    if (*0x789810 == 0) {\n                        *(iVar3 + iVar6) = *(*0x20 + -0x128);\n                    }\n                    else {\n                        *(*0x20 + -0x1a8) = 0x491cbf;\n                        iVar3 = fcn.0045c280(uVar2, iVar3 + iVar6, *(*0x20 + -0x128), in_R9);\n                    }\n                }\n                else {\n                    arg1_02 = *(*0x20 + -0x160);\n                    if (arg1_02 <= *puVar4) goto code_r0x00491ce9;\n                    iVar6 = *puVar4 * 0x10;\n                    iVar3 = *(*0x20 + -0x130);\n                    *(iVar3 + 8 + iVar6) = *(*0x20 + -0x150);\n                    if (*0x789810 == 0) {\n                        *(iVar3 + iVar6) = *(*0x20 + -0x128);\n                    }\n                    else {\n                        *(*0x20 + -0x1a8) = 0x491c1e;\n                        fcn.0045c220(arg1_02, *(*0x20 + -0x128), uVar1, in_R9);\n                    }\n                    uVar2 = *(*0x20 + -0x158);\n                    iVar3 = *(*0x20 + -0x130);\n                }\n            }\n            iVar6 = *(*0x20 + -0x140) + 1;\n            if (*(*0x20 + 0x18) <= iVar6) {\n                return iVar3;\n            }\n            in_R9 = *(*0x20 + -0x118);\n            puVar5 = in_R9 + 0x10;\n        } while( true );\n    }\n    goto code_r0x00491cf7;\ncode_r0x00491ce9:\n    *(*0x20 + -0x1a8) = 0x491cee;\n    arg1 = fcn.0045c5a0(arg1_02);\n    unaff_RDI = uVar2;\ncode_r0x00491cee:\n    *(*0x20 + -0x1a8) = 0x491cf6;\n    in_AL = fcn.0045c5e0(arg1, uVar7);\ncode_r0x00491cf7:\n    puVar8[8] = in_AL;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + 0x18) = arg1;\n    *(puVar8 + 0x20) = unaff_RDI;\n    *(puVar8 + -8) = 0x491d0f;\n    fcn.00459ea0();\n    in_AL = puVar8[8];\n    unaff_RBX = *(puVar8 + 0x10);\n    arg1 = *(puVar8 + 0x18);\n    unaff_RDI = *(puVar8 + 0x20);\n    *0x20 = puVar8;\n    goto code_r0x00491980;\n}\n",
        "token_count": 2344
    },
    "00491d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00491d40(uint64_t arg1)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    ulong uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uint64_t uVar4;\n    \ncode_r0x00491d40:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x28) = arg1;\n        if (unaff_RBX < 1) {\ncode_r0x00491d79:\n            *(*0x20 + -0x80) = 0x491d8a;\n            fcn.00486f40();\n            uVar6 = 0x4adbfd;\n            *(*0x20 + -0x80) = 0x491da5;\n            uVar2 = fcn.00448ba0(0xb);\n            arg1_00 = *(*0x20 + 0x10);\n            if (*(*0x20 + -0x28) < arg1_00 + 1) {\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x30) = 0x4adbfd;\n                *(*0x20 + -0x80) = 0x491de5;\n                iVar5 = fcn.00445220(arg1_00);\n                uVar6 = *(*0x20 + -0x30);\n                uVar2 = *(*0x20 + -0x10);\n                uVar4 = *(*0x20 + 0x10);\n            }\n            else {\n                iVar5 = *(*0x20 + 8);\n                uVar4 = arg1_00;\n                arg1_00 = *(*0x20 + -0x28);\n            }\n            iVar3 = uVar4 * 0x10;\n            *(iVar5 + 8 + iVar3) = uVar6;\n            if (*0x789810 == 0) {\n                *(iVar5 + iVar3) = uVar2;\n            }\n            else {\n                *(*0x20 + -0x80) = 0x491e28;\n                fcn.0045c100(arg1_00, iVar5, iVar5 + iVar3, in_R9);\n            }\n            return iVar5;\n        }\n        iVar5 = 0;\n        do {\n            *(*0x20 + -0x30) = iVar5;\n            *(*0x20 + -0x18) = in_RAX;\n            unaff_RBX = in_RAX[1];\n            *(*0x20 + -0x38) = unaff_RBX;\n            *(*0x20 + -0x20) = *in_RAX;\n            *(*0x20 + -0x80) = 0x491e76;\n            arg1 = fcn.0048dec0(0x4ac9cb, iVar5);\n            if (-1 < arg1) {\n                if (*(*0x20 + -0x38) < arg1) goto code_r0x00491edd;\n                *(*0x20 + -0x80) = 0x491e9e;\n                cVar1 = fcn.0048dc60(0x4ad919);\n                if (cVar1 != '\\0') {\n                    return *(*0x20 + 8);\n                }\n            }\n            iVar5 = *(*0x20 + -0x30) + 1;\n            if (*(*0x20 + 0x10) <= iVar5) goto code_r0x00491d79;\n            in_RAX = *(*0x20 + -0x18) + 0x10;\n        } while( true );\n    }\n    goto code_r0x00491ee6;\ncode_r0x00491edd:\n    *(*0x20 + -0x80) = 0x491ee5;\n    in_RAX = fcn.0045c5e0(arg1, *(*0x20 + -0x38));\ncode_r0x00491ee6:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + -8) = 0x491efa;\n    fcn.00459ea0();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    *0x20 = puVar7;\n    goto code_r0x00491d40;\n}\n",
        "token_count": 1178
    },
    "00492220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004922a5)\n// WARNING: Removing unreachable block (ram,0x004922b0)\n\nulong fcn.00492220(ulong param_1, ulong param_2)\n\n{\n    ulong in_RAX;\n    char **ppcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    char *arg4;\n    int64_t iVar5;\n    uint64_t arg2;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    uchar *arg3;\n    char *pcVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    int64_t iStack168;\n    uint64_t uStack160;\n    char *pcStack152;\n    uchar (*pauStack144) [16];\n    uchar auStack136 [16];\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    \n    while (&iStack168 < *(unaff_R14 + 0x10) || &iStack168 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00486f40();\n    fcn.0048d2a0();\n    ppcVar1 = fcn.0048c4e0(0x4ac9c9, param_2, 0xffffffffffffffff);\n    iVar6 = 0;\n    arg2 = 0;\n    uStack160 = 0;\n    iVar5 = 0;\n    while( true ) {\n        pcVar7 = ppcVar1[1];\n        arg4 = *ppcVar1;\n        if (pcVar7 != NULL) {\n            iVar2 = iVar5;\n            pauStack144 = ppcVar1;\n            if (*arg4 != '.') {\n                iStack168 = iVar5;\n                arg4 = fcn.00448ba0(1);\n                pcVar7 = 0x4ac9c5;\n                iVar2 = iStack168;\n            }\n            uVar8 = uStack160 + 1;\n            iVar5 = iVar2;\n            if (arg2 < uVar8) {\n                arg2 = uStack160;\n                pcStack152 = arg4;\n                iVar5 = fcn.00445220(uStack160);\n                uVar8 = iVar2 + 1;\n                arg4 = pcStack152;\n            }\n            iVar2 = uStack160 * 0x10;\n            *(iVar5 + 8 + iVar2) = pcVar7;\n            if (*0x789810 == 0) {\n                *(iVar5 + iVar2) = arg4;\n                ppcVar1 = pauStack144;\n                uStack160 = uVar8;\n            }\n            else {\n                ppcVar1 = fcn.0045c2a0(iVar6, arg2, iVar5 + iVar2);\n                uStack160 = uVar8;\n            }\n        }\n        iVar6 = iVar6 + 1;\n        if (6 < iVar6) break;\n        ppcVar1 = ppcVar1 + 2;\n    }\n    iStack168 = iVar5;\n    iVar2 = fcn.0048c020(0x4acab8);\n    if (iVar2 < 0) {\n        auStack104 = CONCAT88(1, 0x4ac9c5);\n        uVar3 = in_RAX;\n        fcn.0048f7a0(2);\n        iVar6 = iStack168;\n        uVar3 = fcn.004920c0(iStack168, uVar3);\n        if (iVar6 == 0) {\n            return uVar3;\n        }\n        fcn.00486f40();\n        pauStack144 = fcn.0048f480();\n        iVar6 = 0;\n        while( true ) {\n            auStack136 = *pauStack144;\n            arg3 = auStack120;\n            uVar3 = in_RAX;\n            fcn.0048f7a0(2);\n            iVar5 = iStack168;\n            uVar3 = fcn.004920c0(iStack168, uVar3);\n            if (iVar5 == 0) {\n                return uVar3;\n            }\n            iVar6 = iVar6 + 1;\n            if (3 < iVar6) break;\n            pauStack144 = pauStack144[1];\n        }\n        puVar4 = fcn.0040bf40();\n        puVar4[1] = unaff_RBX;\n        if (*0x789810 == 0) {\n            *puVar4 = in_RAX;\n        }\n        else {\n            puVar4 = fcn.0045c220(unaff_RBX, in_RAX, arg3, arg4);\n        }\n        uVar3 = *0x7355a8;\n        puVar4[2] = *0x7355a0;\n        if (*0x789810 == 0) {\n            puVar4[3] = uVar3;\n        }\n        else {\n            fcn.0045c220(unaff_RBX, uVar3, arg3, arg4);\n        }\n        return 0;\n    }\n    iVar2 = iStack168;\n    uVar3 = fcn.004920c0(iStack168, iVar5);\n    if (iVar2 != 0) {\n        puVar4 = fcn.0040bf40();\n        puVar4[1] = unaff_RBX;\n        if (*0x789810 == 0) {\n            *puVar4 = in_RAX;\n        }\n        else {\n            puVar4 = fcn.0045c220(unaff_RBX, in_RAX, iVar6, arg4);\n        }\n        puVar4[2] = iVar2;\n        if (*0x789810 == 0) {\n            puVar4[3] = uStack160;\n        }\n        else {\n            fcn.0045c220(unaff_RBX, uStack160, iVar6, arg4);\n        }\n        return 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1331
    },
    "00412180": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00412180(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x4121cb;\n            arg1 = fcn.0040c2a0(0x78b4a0);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x412205;\n                    fcn.00412280(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x412233;\n                    fcn.004320e0();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x41223b;\n                fcn.0045c5a0(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x412245;\n            in_RAX = fcn.0045c600(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x412255;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 662
    },
    "0042fc20": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0042fc20(void)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0042fc20:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x1c) = 0;\n        *(*0x20 + -0x18) = in_XMM15;\n        for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n            *(*0x20 + iVar1 * 4 + -0x1c) = 0xffffffff;\n        }\n        uVar2 = 0;\n        do {\n            if (uVar2 < 9) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = uVar2 + 7 >> 4;\n            }\n            if (4 < uVar3) {\n                return;\n            }\n            if (uVar2 < 9) {\n                uVar4 = 0x50;\n            }\n            else {\n                uVar4 = uVar2 + 0x48;\n            }\n            if (uVar4 < 0x8000) {\n                if (uVar4 < 0x3f9) {\n                    uVar4 = uVar4 + 7 >> 3;\n                    if (0x80 < uVar4) goto code_r0x0042fe52;\n                    uVar4 = *(uVar4 + 0x720360);\n                    if (0x43 < uVar4) goto code_r0x0042fe45;\n                    uVar4 = *(uVar4 * 2 + 0x7204a0);\n                }\n                else {\n                    uVar4 = uVar4 - 0x381 >> 7;\n                    if (0xf8 < uVar4) goto code_r0x0042fe37;\n                    if (0x43 < \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                               [uVar4]) goto code_r0x0042fe2a;\n                    uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [uVar4] * 2 + 0x7204a0);\n                }\n            }\n            else if (uVar4 <= uVar4 + 0x2000) {\n                uVar4 = uVar4 + 0x1fff & 0xffffffffffffe000;\n            }\n            if (*(*0x20 + uVar3 * 4 + -0x1c) < 0) {\n                *(*0x20 + uVar3 * 4 + -0x1c) = uVar4;\n            }\n            else if (uVar4 != *(*0x20 + uVar3 * 4 + -0x1c)) goto code_r0x0042fda3;\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0042fe60;\ncode_r0x0042fda3:\n    *(*0x20 + -0x30) = uVar3;\n    *(*0x20 + -0x38) = uVar4;\n    *(*0x20 + -0x28) = uVar2;\n    *(*0x20 + -0x50) = 0x42fdb7;\n    fcn.00433860();\n    *(*0x20 + -0x50) = 0x42fdc8;\n    fcn.00434160();\n    *(*0x20 + -0x50) = 0x42fdd2;\n    fcn.00433e60();\n    *(*0x20 + -0x50) = 0x42fde5;\n    fcn.00434160();\n    *(*0x20 + -0x50) = 0x42fdef;\n    fcn.00433e60();\n    *(*0x20 + -0x50) = 0x42fe05;\n    fcn.00434160();\n    *(*0x20 + -0x50) = 0x42fe0f;\n    fcn.00433e60();\n    *(*0x20 + -0x50) = 0x42fe14;\n    fcn.00433ac0();\n    *(*0x20 + -0x50) = 0x42fe19;\n    fcn.004338e0();\n    *(*0x20 + -0x50) = 0x42fe2a;\n    fcn.004320e0();\ncode_r0x0042fe2a:\n    *(*0x20 + -0x50) = 0x42fe37;\n    fcn.0045c5a0(0x44);\ncode_r0x0042fe37:\n    *(*0x20 + -0x50) = 0x42fe45;\n    fcn.0045c5c0(0xf9);\ncode_r0x0042fe45:\n    *(*0x20 + -0x50) = 0x42fe52;\n    fcn.0045c5a0(0x44);\ncode_r0x0042fe52:\n    *(*0x20 + -0x50) = 0x42fe5f;\n    fcn.0045c5c0(0x81);\ncode_r0x0042fe60:\n    *(puVar5 + -8) = 0x42fe65;\n    fcn.00459ea0();\n    *0x20 = puVar5;\n    goto code_r0x0042fc20;\n}\n",
        "token_count": 1460
    },
    "00433b60": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433c4b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00433b60(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00434160();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00434160();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x6b5330) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x6b52f0 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x6b52f0)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x6b52d0;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x6b52f0)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x6b52e8;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x6b52f0;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x6b52f0 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x6b52f0;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x6b52f0;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00433940(0xe);\n    return;\n}\n",
        "token_count": 1142
    },
    "00449700": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00449700(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x004497d9;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x720360);\n                    if (0x43 < uVar3) goto code_r0x00449857;\n                    in_RAX = *(uVar3 * 2 + 0x7204a0);\ncode_r0x004497d9:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x4497ea;\n                    uVar1 = fcn.0040b560(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x449810;\n                        fcn.0045cc20(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x7204a0);\n                        goto code_r0x004497d9;\n                    }\n                    *(*0x20 + -0x50) = 0x44984a;\n                    fcn.0045c5a0(0x44);\n                }\n                *(*0x20 + -0x50) = 0x449857;\n                fcn.0045c5c0(0xf9);\ncode_r0x00449857:\n                *(*0x20 + -0x50) = 0x449865;\n                fcn.0045c5a0(0x44);\n            }\n            *(*0x20 + -0x50) = 0x449872;\n            in_RAX = fcn.0045c5c0(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x44987d;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1085
    },
    "004498a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.004498a0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x00449999;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x720360);\n                        if (0x43 < uVar1) goto code_r0x00449a25;\n                        uVar1 = *(uVar1 * 2 + 0x7204a0);\ncode_r0x00449999:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x4499aa;\n                        uVar2 = fcn.0040b560(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x4499d5;\n                            fcn.0045cc20(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x7204a0);\n                            goto code_r0x00449999;\n                        }\n                        *(*0x20 + -0x58) = 0x449a13;\n                        fcn.0045c5a0(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x449a25;\n                    fcn.0045c5c0(0xf9);\ncode_r0x00449a25:\n                    *(*0x20 + -0x58) = 0x449a32;\n                    fcn.0045c5a0(0x44);\n                }\n                *(*0x20 + -0x58) = 0x449a3f;\n                fcn.0045c5c0(0x81);\n            }\n            *(*0x20 + -0x58) = 0x449a50;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x449a5b;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1152
    },
    "0044b6a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044b6a0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044b6f5;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044b6f5:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044b748;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044b748:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045c660(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045c5a0(unaff_RBX);\n                    }\n                    fcn.0045c5a0(unaff_RBX);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045c660(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045c5a0(unaff_RBX);\n    }\n    fcn.0045c5a0(unaff_RBX);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1028
    },
    "00464100": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.00464100(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uint64_t in_R8;\n    uchar uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar10 = in_R9;\n        cVar1 = in_R8;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                uVar2 = unaff_RBX + 1;\n                iVar7 = in_RAX;\n                uVar5 = unaff_RBX;\n                if (arg1 < uVar2) {\n                    *(*0x20 + -0x80) = 0x46426f;\n                    iVar7 = fcn.00445220(unaff_RBX);\n                    uVar2 = in_RAX + 1;\n                    uVar5 = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                uVar10 = unaff_EDI;\n                *(iVar7 + uVar5) = 0x5c;\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x80) = 0x4642ac;\n                    iVar7 = fcn.00445220(uVar2);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar10 = *(*0x20 + 0x20);\n                }\n                *(iVar7 + uVar2) = uVar10;\n                return iVar7;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x46417d;\n                    cVar1 = fcn.00464920();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x4641c6;\n                        in_RAX = fcn.00445220(unaff_RBX);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(in_RAX + unaff_RBX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x004643a3;\n            }\n            *(*0x20 + 0x26) = uVar10;\n            *(*0x20 + -0x80) = 0x4641f9;\n            cVar1 = fcn.00464920();\n            if (cVar1 != '\\0') goto code_r0x004642cd;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x0046438b;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x0046438b;\n            unaff_RBX = 0;\n            uVar2 = *0x72e688;\n            while (uVar5 = uVar2,  unaff_RBX < uVar5) {\n                iVar7 = uVar5 - unaff_RBX >> 1;\n                in_R9 = iVar7 + unaff_RBX;\n                arg1 = *0x72e688;\n                in_R8 = uVar5;\n                if (*0x72e688 <= in_R9) goto code_r0x004648b9;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x72e680 + in_R9 * 2) < unaff_EDI) {\n                    unaff_RBX = iVar7 + unaff_RBX + 1;\n                    uVar2 = uVar5;\n                    in_R8 = uVar5;\n                }\n            }\n            if (*0x72e688 <= unaff_RBX) goto code_r0x0046438b;\n            if (unaff_RBX < *0x72e688) {\n                if (*(*0x72e680 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x004642cd:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x4642e6;\n                    uVar2 = fcn.00463380(4);\n                    if (uVar2 < 5) {\n                        uVar5 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x18) = uVar5 + uVar2;\n                        if (*(*0x20 + 0x18) < uVar5 + uVar2) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x464331;\n                            uVar3 = fcn.00445220(uVar5);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            uVar5 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x20) = uVar5;\n                        *(*0x20 + -0x80) = 0x464365;\n                        fcn.0045cee0(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x46438b;\n                    fcn.0045c5e0(uVar2, 4);\n                }\ncode_r0x0046438b:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x004643a3:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x464468;\n                            in_RAX = fcn.00445220(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x464428;\n                            in_RAX = fcn.00445220(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x4643ec;\n                            in_RAX = fcn.00445220(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x18) = unaff_RBX + 2;\n                                *(*0x20 + -0x80) = 0x4646e8;\n                                in_RAX = fcn.00445220(unaff_RBX);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x464725;\n                            in_RAX = fcn.00445220(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x4646a8;\n                            in_RAX = fcn.00445220(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x464668;\n                            in_RAX = fcn.00445220(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if (unaff_EDI < 0x20) {\n                    uVar2 = unaff_RBX + 2;\n                    uVar5 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x46457f;\n                        in_RAX = fcn.00445220(unaff_RBX);\n                        uVar5 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar5) = 0x785c;\n                    uVar8 = uVar5 + 3;\n                    uVar10 = *((unaff_EDI >> 4) + 0x4aea49);\n                    iVar7 = in_RAX;\n                    if (arg1 < uVar8) {\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x4645d6;\n                        iVar7 = fcn.00445220(uVar2);\n                        uVar8 = in_RAX + 1;\n                        uVar5 = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar10 = *(*0x20 + -0x31);\n                        arg1 = uVar2;\n                    }\n                    *(uVar5 + 2 + iVar7) = uVar10;\n                    uVar10 = *((unaff_EDI & 0xf) + 0x4aea49);\n                    if (arg1 < uVar8 + 1) {\n                        *(*0x20 + -0x18) = uVar8;\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x46462d;\n                        iVar7 = fcn.00445220(uVar8);\n                        uVar8 = *(*0x20 + -0x18);\n                        uVar10 = *(*0x20 + -0x31);\n                    }\n                    *(iVar7 + uVar8) = uVar10;\n                }\n                else {\n                    if (unaff_EDI < 0x110000) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            uVar5 = unaff_RBX;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x18) = uVar2;\n                                *(*0x20 + -0x80) = 0x464535;\n                                in_RAX = fcn.00445220(unaff_RBX);\n                                uVar5 = *(*0x20 + 0x10);\n                                uVar2 = *(*0x20 + -0x18);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                arg1 = unaff_RBX;\n                            }\n                            *(in_RAX + uVar5) = 0x555c;\n                            for (iVar7 = 0x1c; -1 < iVar7; iVar7 = iVar7 + -4) {\n                                uVar10 = *((unaff_EDI >> (iVar7 & 0x1f) & 0xf) + 0x4aea49);\n                                iVar6 = in_RAX;\n                                uVar5 = uVar2;\n                                uVar8 = uVar2 + 1;\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x20) = uVar2;\n                                    *(*0x20 + -0x18) = iVar7;\n                                    *(*0x20 + -0x31) = uVar10;\n                                    *(*0x20 + -0x80) = 0x4647a5;\n                                    iVar6 = fcn.00445220(uVar2);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    uVar5 = *(*0x20 + -0x20);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar10 = *(*0x20 + -0x31);\n                                    arg1 = uVar2;\n                                    uVar8 = in_RAX + 1;\n                                }\n                                uVar2 = uVar8;\n                                *(iVar6 + uVar5) = uVar10;\n                                in_RAX = iVar6;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    uVar5 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x4644f1;\n                        in_RAX = fcn.00445220(unaff_RBX);\n                        uVar5 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar5) = 0x755c;\n                    iVar7 = in_RAX;\n                    for (iVar6 = 0xc; -1 < iVar6; iVar6 = iVar6 + -4) {\n                        uVar10 = *((unaff_EDI >> (iVar6 & 0x1f) & 0xf) + 0x4aea49);\n                        iVar4 = iVar7;\n                        uVar5 = uVar2;\n                        uVar8 = uVar2 + 1;\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x20) = uVar2;\n                            *(*0x20 + -0x18) = iVar6;\n                            *(*0x20 + -0x31) = uVar10;\n                            *(*0x20 + -0x80) = 0x464833;\n                            iVar4 = fcn.00445220(uVar2);\n                            iVar6 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x20);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar10 = *(*0x20 + -0x31);\n                            arg1 = uVar2;\n                            uVar8 = iVar7 + 1;\n                        }\n                        uVar2 = uVar8;\n                        *(iVar4 + uVar5) = uVar10;\n                        iVar7 = iVar4;\n                    }\n                }\n                return iVar7;\n            }\n            *(*0x20 + -0x80) = 0x4648b9;\n            arg1 = fcn.0045c5a0(*0x72e688);\ncode_r0x004648b9:\n            uVar10 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x4648c5;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_EDI;\n        puVar9[0x24] = unaff_SIL;\n        puVar9[0x25] = cVar1;\n        puVar9[0x26] = uVar10;\n        *(puVar9 + -8) = 0x4648ed;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_EDI = *(puVar9 + 0x20);\n        unaff_SIL = puVar9[0x24];\n        in_R8 = puVar9[0x25];\n        in_R9 = puVar9[0x26];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4510
    },
    "00406b60": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00406b60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x735750 != NULL) {\n                if (*0x735758 < 1) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x735750;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x00406bce:\n                    iVar2 = iVar2 + 1;\n                    if (*0x735758 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x406c53;\n                        fcn.0045c5a0(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x00406bce;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x406c65;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x406c75;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 761
    },
    "0041ea00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ea00(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x41ea38;\n                iVar2 = fcn.00420ec0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0041eaeb:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41eb3b;\n                fcn.0045c5a0(0x3f);\ncode_r0x0041eb3b:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x41eb4c;\n                fcn.004320e0();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x41eab9;\n                            iVar2 = fcn.00420ec0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0041eaeb;\n                    }\n                    goto code_r0x0041eb3b;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x41eb59;\n            in_RAX = fcn.0045c5a0(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41eb6e;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1127
    },
    "0041eba0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.0041eba0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x41ebe5;\n            uVar3 = fcn.0041eba0(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x41ec45;\n                uVar3 = fcn.0041eba0((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x41ec8c;\n            in_RAX = fcn.0045c5a0(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41eca5;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 703
    },
    "00428920": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00428920(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x7896e0,  iVar4 = *0x7896e8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (; iVar4 != 0; iVar4 = *(iVar4 + 8)) {\n        piVar2 = fcn.004283e0(uVar1);\n        uVar3 = uVar1 % 3;\n        *piVar2 = *piVar2 + piVar2[uVar3 * 4 + 4];\n        piVar2[1] = piVar2[1] + piVar2[uVar3 * 4 + 5];\n        piVar2[2] = piVar2[2] + piVar2[uVar3 * 4 + 6];\n        piVar2[3] = piVar2[3] + piVar2[uVar3 * 4 + 7];\n        piVar2[uVar3 * 4 + 4] = 0;\n        piVar2[uVar3 * 4 + 5] = 0;\n        piVar2[uVar3 * 4 + 6] = 0;\n        piVar2[uVar3 * 4 + 7] = 0;\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "00428a00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00428a00(void)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x428a4f;\n            fcn.0045c814();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RBX = *0x20 + -0x120;\n            *(*0x20 + -0x170) = 0x428a6a;\n            uVar2 = fcn.00452c00(0x20);\n            *(*0x20 + -0x130) = uVar2;\n            *(*0x20 + -0x170) = 0x428a7d;\n            fcn.00409e80();\n            if (*(*0x20 + -0x130) < 0x21) {\n                *(*0x20 + -0x170) = 0x428ab1;\n                uVar2 = fcn.004284a0(*0x20 + -0x120);\n                *(*0x20 + -0x128) = uVar2;\n                *(*0x20 + -0x134) = *0x7896e0;\n                *(*0x20 + -0x170) = 0x428ac5;\n                iVar3 = fcn.004283e0();\n                iVar4 = (*(*0x20 + -0x134) + ((*(*0x20 + -0x134) + 2U) / 3) * -3 + 2) * 0x20;\n                piVar1 = iVar3 + 0x20 + iVar4;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar3 + 0x30 + iVar4;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x170) = 0x428b0b;\n                fcn.0040a0a0();\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x428bc0;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + -0x128);\n                *(*0x20 + -0x168) = *0x20 + -0x20;\n                *(*0x20 + -0x170) = 0x428b5d;\n                fcn.00459d60();\n                return;\n            }\n            *(*0x20 + -0x170) = 0x428b8b;\n            in_RAX = fcn.0045c5e0(*(*0x20 + -0x130), 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x428b9b;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1005
    },
    "00428c00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00428c00(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar2 = *0x7896e0;\n    iVar3 = fcn.004283e0();\n    iVar4 = (iVar2 + ((iVar2 + 1U) / 3) * -3 + 1) * 0x20;\n    piVar1 = iVar3 + 0x28 + iVar4;\n    *piVar1 = *piVar1 + 1;\n    piVar1 = iVar3 + 0x38 + iVar4;\n    *piVar1 = *piVar1 + unaff_RBX;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 251
    },
    "004299a0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.004299a0(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x429a05;\n                arg1_00 = fcn.00429780();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x00429a4e:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x00429a8a;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x00429a8a:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x00429bb4:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x00429db1;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x429cad;\n                                        piVar1 = fcn.0040c2a0(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x429cee;\n                                                    fcn.0045cee0(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x429d71;\n                                                        fcn.0045cee0(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x00429d8b;\n                                                }\ncode_r0x00429dd2:\n                                                *(*0x20 + -0x68) = 0x429dda;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045c660(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x429de5;\n                                            fcn.0045c620(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x429ded;\n                                        fcn.0045c620(arg1_00, arg2);\ncode_r0x00429ded:\n                                        *(*0x20 + -0x68) = 0x429df8;\n                                        fcn.0045c660(arg1_01);\ncode_r0x00429df8:\n                                        *(*0x20 + -0x68) = 0x429e05;\n                                        fcn.0045c660(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x00429df8;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x00429ded;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x429c65;\n                                            fcn.0045cee0(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x00429d8b:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x429dd2;\n                                            fcn.0045c5a0(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x00429dd2;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x00429db1;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x429e0d;\n                                    fcn.0045c620(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x429e15;\n                                fcn.0045c5a0(ppiVar2);\n                                goto code_r0x00429e15;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x00429e32;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x00429e2a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x00429e1f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x429b3e;\n                                    fcn.0045cee0(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] - 1;\n                                if (arg2 < ppiVar2) goto code_r0x00429e1a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x00429db1:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x00429bb4;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x00429db1;\n                            }\ncode_r0x00429e15:\n                            *(*0x20 + -0x68) = 0x429e1a;\n                            fcn.0045c5a0(ppiVar2);\ncode_r0x00429e1a:\n                            *(*0x20 + -0x68) = 0x429e1f;\n                            fcn.0045c620(ppiVar2, arg2);\ncode_r0x00429e1f:\n                            *(*0x20 + -0x68) = 0x429e2a;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045c660(unaff_R13);\ncode_r0x00429e2a:\n                            *(*0x20 + -0x68) = 0x429e32;\n                            fcn.0045c660(ppiVar2);\ncode_r0x00429e32:\n                            *(*0x20 + -0x68) = 0x429e37;\n                            fcn.0045c5a0(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x429e3f;\n                        fcn.0045c5a0(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x429e45;\n                    fcn.0045c5a0(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x00429a4e;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x429e4d;\n                fcn.0045c5a0(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x429e52;\n            fcn.00433860();\n            *(*0x20 + -0x68) = 0x429e65;\n            fcn.00434160();\n            *(*0x20 + -0x68) = 0x429e6f;\n            fcn.00433fc0();\n            *(*0x20 + -0x68) = 0x429e85;\n            fcn.00434160();\n            *(*0x20 + -0x68) = 0x429e8f;\n            fcn.00433fc0();\n            *(*0x20 + -0x68) = 0x429ea5;\n            fcn.00434160();\n            *(*0x20 + -0x68) = 0x429eaa;\n            fcn.004338e0();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x429ebb;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x429ed0;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3757
    },
    "0043fe00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0043fe00(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x26f8) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x26d8;\n            *(*0x20 + -0x28) = 0x43fe45;\n            fcn.00409e80();\n            if ((*(*0x20 + 8))[0x9be] != 0) goto code_r0x0043fea1;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x7357d8) {\n                    puVar1 = *0x7357d0 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x0043fea1:\n                    *(*0x20 + -0x28) = 0x43feab;\n                    fcn.0040a0a0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43fec7;\n                fcn.0045c5a0(*0x7357d8);\n            }\n            *(*0x20 + -0x28) = 0x43fecc;\n            in_RAX = fcn.0042f9a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43fed7;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 617
    },
    "0043ff00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.0043ff00(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x5f4) != *(in_RAX + 0x5f4));\n            if ((*(in_RAX + 0x5f4) == *(in_RAX + 0x5f0)) && (*(in_RAX + 0xdf8) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = 0x43ff53;\n                fcn.0043fe00();\n                piVar2 = *(*0x20 + 8);\n                iVar3 = *piVar2;\n                iVar5 = ((iVar3 >> 0x1f) >> 0x1b) + iVar3 >> 5;\n                uVar6 = iVar3 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    if (iVar5 < *0x735798) {\n                        puVar1 = *0x735790 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar2 + 2) = *0x736130;\n                        LOCK();\n                        iVar3 = *0x736138;\n                        *0x736130 = piVar2;\n                        *0x736138 = *0x736138 + 1;\n                        return iVar3;\n                    }\n                    *(*0x20 + -0x20) = 0x43ffe5;\n                    fcn.0045c5a0(*0x735798);\n                }\n                *(*0x20 + -0x20) = 0x43ffea;\n                fcn.0042f9a0();\n            }\n            *(*0x20 + -0x20) = 0x43fffb;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x440006;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "00440020": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00440020(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    piVar4 = *0x736130;\n    if (*0x736130 == NULL) {\n        return;\n    }\n    iVar2 = **0x736130;\n    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n    uVar5 = iVar2 + iVar6 * -0x20;\n    if (-1 < uVar5) {\n        arg1 = *0x7357d8;\n        if (iVar6 < *0x7357d8) {\n            puVar1 = *0x7357d0 + iVar6 * 4;\n            LOCK();\n            *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n            iVar2 = *piVar4;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            arg1 = *0x735798;\n            if (-1 < uVar5) {\n                if (iVar6 < *0x735798) {\n                    puVar1 = *0x735790 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                    LOCK();\n                    *0x736130 = *(piVar4 + 2);\n                    *0x736138 = *0x736138 + -1;\n                    return;\n                }\n                fcn.0045c5a0(*0x735798);\n            }\n            fcn.0042f9a0();\n        }\n        fcn.0045c5a0(arg1);\n    }\n    fcn.0042f9a0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 500
    },
    "00402ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402ec0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x402f0c;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x402f2a;\n            fcn.00453cc0();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402f45;\n            fcn.00448ba0(0x1c);\n            *(*0x20 + -0x38) = 0x402f4a;\n            unaff_RBX = fcn.00409780();\n            *(*0x20 + -0x38) = 0x402f59;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x402f6e;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402fa0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x402fef;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40300d;\n            fcn.00453cc0();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x403026;\n            fcn.00448ba0(0x1c);\n            *(*0x20 + -0x38) = 0x40302b;\n            unaff_RBX = fcn.00409780();\n            *(*0x20 + -0x38) = 0x40303a;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40304f;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 580
    },
    "004031e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.004031e0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.004320e0();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.00457880();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x350) == 0) break;\n        fcn.00459d60();\n    }\n    *(iVar2 + 0x350) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045bce0();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x350);\n    *(iVar2 + 0x350) = 0;\n    fcn.004578c0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 366
    },
    "00404e40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e40(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00410da0(arg1);\n    fcn.0045cee0(*in_RAX);\n    return;\n}\n",
        "token_count": 107
    },
    "00404ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ec0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00410da0(*(unaff_RBX + 0x18));\n    fcn.0045cee0(*in_RAX);\n    return;\n}\n",
        "token_count": 124
    },
    "00409680": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00409680(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040b560(1, *in_RAX);\n    fcn.0040fb00(unaff_RBX);\n    return in_RAX;\n}\n",
        "token_count": 119
    },
    "00409820": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00409820(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040b560(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045cee0(*in_RAX);\n    return in_RAX;\n}\n",
        "token_count": 151
    },
    "0040fe60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0040fe60(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x40ff65;\n                            fcn.0040fe40();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x40fec5;\n                    fcn.0040fe40();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x40ffa7;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40ffb2;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "004104e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004104e0(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.00410400(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00412900": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00412900(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.00422620(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.00412280(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "00418120": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00418120(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x418145;\n            fcn.00435500();\n            *(*0x20 + -0x38) = 0x418153;\n            fcn.00409e80();\n            *(*0x20 + -0x20) = *0x75bc68;\n            *(*0x20 + -0x10) = *0x75bc60;\n            *(*0x20 + -0x38) = 0x418179;\n            fcn.0040a0a0();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x78a0c0 = 0;\n                    *0x78a150 = *0x789e70;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x4181bb;\n                fcn.0045cc20();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x418218;\n            fcn.0045c5c0(0x40);\n        }\n        *(puVar4 + -8) = 0x41821e;\n        fcn.0045e5a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 551
    },
    "00418dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00418dc0(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return;\n    }\n    fcn.0041ab40(arg1 + unaff_RSI * 0x1000);\n    return;\n}\n",
        "token_count": 142
    },
    "004198e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.004198e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar2 = *0x78a168;\n    iVar1 = *0x78a160;\n    if (*0x7895e8 == 0) {\n        fcn.0040a0a0();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x78a168 != 0) {\n        *(*0x78a168 + 0xa0) = unaff_R14;\n        iVar3 = *0x78a160;\n    }\n    *0x78a160 = iVar3;\n    if (*0x789e90 < 1) {\n        *0x78a168 = unaff_R14;\n        fcn.004349e0(0xb);\n        return 1;\n    }\n    *0x78a160 = iVar1;\n    *0x78a168 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040a0a0();\n    return 0;\n}\n",
        "token_count": 344
    },
    "0041d840": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d840(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n    }\n    iVar2 = *(in_RAX + 0x100e8);\n    uVar1 = fcn.00429f00();\n    if (uVar1 + 0x800000000000 < iVar2 + 0x800000000000U) {\n        iVar2 = iVar2 - uVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        return uVar1;\n    }\n    fcn.00429f80();\n    return uVar1 & 0xffffffffffc00000;\n}\n",
        "token_count": 220
    },
    "004237e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004237e0(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x423877;\n            fcn.00433860();\n            *(*0x20 + -0x38) = 0x423888;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x423892;\n            fcn.00433e60();\n            *(*0x20 + -0x38) = 0x4238a5;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x4238af;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x4238c5;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x4238cf;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x4238e5;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x4238ef;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x423905;\n            fcn.00434160();\n            *(*0x20 + -0x38) = 0x42390f;\n            fcn.00434120();\n            *(*0x20 + -0x38) = 0x423914;\n            fcn.00433ac0();\n            *(*0x20 + -0x38) = 0x423919;\n            fcn.004338e0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x42392a;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42393a;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 927
    },
    "00428240": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428240(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004278a0(arg1);\n    fcn.004279e0(arg1);\n    return;\n}\n",
        "token_count": 97
    },
    "0042e3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0042e3c0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.00409e80();\n    if (*(iVar1 + 0x330) != 0) {\n        fcn.0042e6a0();\n        *(iVar1 + 0x330) = 0;\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 113
    },
    "00432340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432340(void)\n\n{\n    fcn.00459d60();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 34
    },
    "004336e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004336e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x43370c;\n            fcn.00433860();\n            if (*0x78960c != 0) {\ncode_r0x00433729:\n                *(*0x20 + -0x38) = 0x43372e;\n                fcn.004338e0();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00433729;\n                if (0x200 < *0x789740) goto code_r0x00433818;\n                iVar6 = *0x789740 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x789740) + 0x78a1e0) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x4337ee;\n                    fcn.0045cee0(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x789740 + arg1_01;\n                *0x789740 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x433818;\n            fcn.0045c660(arg1_00);\ncode_r0x00433818:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x433825;\n            in_RAX = fcn.0045c660(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x43383a;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 997
    },
    "0044ae60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044ae60(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 8),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044aea6;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044aea6:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44aeb3;\n                uVar2 = fcn.00449b60();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44aee5;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44aef5;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 586
    },
    "0044afc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044afc0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044affd;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044affd:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44b00a;\n                uVar1 = fcn.00449b60();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44b03c;\n            in_RAX = fcn.0045c5a0(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44b050;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 617
    },
    "0044b080": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044b080(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4ac9cd;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x24);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4ac9cd;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44b0d9;\n                    uVar2 = fcn.00449b60();\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44b134;\n                fcn.0045c5a0(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44b13e;\n            in_RAX = fcn.0045c5a0(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44b152;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 737
    },
    "0044d4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044d4a0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044c1e0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044e2e0();\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0044f840": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f840(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044e500(0);\n    return;\n}\n",
        "token_count": 115
    },
    "00452340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452340(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00452440(arg1);\n    return;\n}\n",
        "token_count": 85
    },
    "004523a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004523a0(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2d0) != 0) {\n        fcn.00452440(0);\n        return;\n    }\n    fcn.00452440(arg1);\n    return;\n}\n",
        "token_count": 137
    },
    "004586a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004586a0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2e8) = 1;\n    *(iVar2 + 0x2f0) = auStackX8;\n    fcn.004031e0();\n    iStackX16 = *(iVar2 + 0x2f8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x308);\n    }\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 328
    },
    "00458800": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00458800(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2e8) = 2;\n    *(iVar2 + 0x2f0) = auStackX8;\n    fcn.004031e0();\n    iStackX24 = *(iVar2 + 0x2f8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x308);\n    }\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 326
    },
    "00458960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nvoid fcn.00458960(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000030;\n    ulong uStack0000000000000038;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000030 = 0;\n    uStack0000000000000038 = 0;\n    uStack0000000000000040 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    uStack0000000000000030 = *(iVar2 + 0x2f8);\n    uStack0000000000000038 = *(iVar2 + 0x300);\n    uStack0000000000000040 = *(iVar2 + 0x308);\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 389
    },
    "00458ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458ac0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000048;\n    ulong uStack0000000000000050;\n    ulong uStack0000000000000058;\n    \n    uStack0000000000000048 = 0;\n    uStack0000000000000050 = 0;\n    uStack0000000000000058 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    uStack0000000000000048 = *(iVar2 + 0x2f8);\n    uStack0000000000000050 = *(iVar2 + 0x300);\n    uStack0000000000000058 = *(iVar2 + 0x308);\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 390
    },
    "00458f20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458f20(ulong arg1, ulong arg2)\n\n{\n    fcn.0045e0e0();\n    return;\n}\n",
        "token_count": 34
    },
    "0045d9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045d9a0(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.0045bf40();\n    return;\n}\n",
        "token_count": 50
    },
    "0045dd80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045dd80(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x734c48)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0045de60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045de60(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "0045e0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e0e0(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.0040fba0(uStackX24);\n    return;\n}\n",
        "token_count": 40
    },
    "00464e00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00464e00(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_EAX < 0x80) {\n        if (in_EAX - 0x61 < 0x1a) {\n            in_EAX = in_EAX - 0x20;\n        }\n        return in_EAX;\n    }\n    uVar1 = fcn.00464d00(*0x72e760);\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "00464e80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00464e80(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_EAX < 0x80) {\n        if (in_EAX - 0x41 < 0x1a) {\n            in_EAX = in_EAX + 0x20;\n        }\n        return in_EAX;\n    }\n    uVar1 = fcn.00464d00(*0x72e760);\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "0046a1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0046a1a0(uint64_t arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar2;\n    ulong unaff_RDI;\n    int64_t in_R10;\n    int64_t iVar3;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        iVar2 = unaff_RSI;\n        iVar3 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x38) = arg4;\n            if (in_R10 < unaff_RSI) {\n                iVar2 = in_R10;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar2 - 1U < unaff_RBX) {\n                if (unaff_RSI != 0) {\n                    if (in_R10 != 0) {\n                        *(*0x20 + -0x10) = iVar2;\n                        *(*0x20 + -0x30) = in_RAX;\n                        *(*0x20 + -0x28) = unaff_RDI;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0x18) = iVar2;\n                        *(*0x20 + -0x38) = 0x46a207;\n                        fcn.0046a340();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x38) = 0x46a245;\n                    fcn.0045c5a0(0);\n                    unaff_RSI = in_R10;\n                }\n                *(*0x20 + -0x38) = 0x46a24c;\n                fcn.0045c5a0(unaff_RSI);\n            }\n            *(*0x20 + -0x38) = 0x46a257;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = iVar2;\n        *(puVar1 + 0x30) = arg3;\n        *(puVar1 + 0x38) = arg4;\n        *(puVar1 + 0x40) = iVar3;\n        *(puVar1 + 0x48) = in_R11;\n        *(puVar1 + -8) = 0x46a28a;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        arg3 = *(puVar1 + 0x30);\n        arg4 = *(puVar1 + 0x38);\n        in_R10 = *(puVar1 + 0x40);\n        in_R11 = *(puVar1 + 0x48);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 917
    },
    "0046cbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0046cbe0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x46cc3b;\n            iVar1 = fcn.00445140(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x0046cd3d;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x0046cd35;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x0046cd2d;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x0046cd25;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x46cd25;\n            fcn.0045c620(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x0046cd25:\n            *(*0x20 + -0x38) = 0x46cd2d;\n            fcn.0045c5a0(arg1);\ncode_r0x0046cd2d:\n            *(*0x20 + -0x38) = 0x46cd35;\n            fcn.0045c5a0(arg1);\ncode_r0x0046cd35:\n            *(*0x20 + -0x38) = 0x46cd3d;\n            fcn.0045c5a0(arg1);\ncode_r0x0046cd3d:\n            *(*0x20 + -0x38) = 0x46cd45;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x46cd5a;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1130
    },
    "00470800": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00470800(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((in_RAX < 0x10) && (*(in_RAX * 0x10 + 0x7326a8) != 0)) {\n        return *(in_RAX * 0x10 + 0x7326a0);\n    }\n    fcn.00468c00(in_RAX);\n    uVar1 = fcn.00448ba0(7);\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "0047fe60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.0047fe60(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = 0;\n            iVar5 = 0;\n            uVar3 = unaff_RBX;\n            while( true ) {\n                if (uVar3 <= arg1_00) {\n                    if (arg1 <= iVar5) {\n                        return iVar5;\n                    }\n                    return 0;\n                }\n                uVar1 = *(in_RAX + arg1_00);\n                if (*(in_RAX + arg1_00) < 0x80) {\n                    uVar2 = arg1_00;\n                    unaff_RBX = uVar3;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = arg1_00;\n                    *(*0x20 + -0x10) = iVar5;\n                    *(*0x20 + -0x38) = 0x47feef;\n                    uVar1 = fcn.00455cc0(arg1_00);\n                    arg1 = *(*0x20 + 0x18);\n                    uVar2 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    arg1_00 = uVar3;\n                }\n                if (9 < uVar1 - 0x30) break;\n                iVar5 = uVar1 + iVar5 * 10 + -0x30;\n                uVar3 = unaff_RBX;\n                if (unaff_RDI < iVar5) {\n                    return 0;\n                }\n            }\n            if ((uVar2 == 0) || (iVar5 < arg1)) {\n                return 0;\n            }\n            if (uVar2 <= unaff_RBX) {\n                return iVar5;\n            }\n            *(*0x20 + -0x38) = 0x47ffc5;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c660(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x47ffdf;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 932
    },
    "00482380": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00482380(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x7353a0 == 0) || (*0x7353a0 == -1)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x7353a0;\n                *(*0x20 + -0x10) = *0x7353a8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x00482400;\n            }\n            if (*(*0x20 + -0x18) == 0x498de0) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x00482400:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x20);\n                    *(*0x20 + -0x38) = 0x482414;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x498de0;\n            *(*0x20 + -0x38) = 0x482430;\n            in_RAX = fcn.004094a0(0x49dc40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x482445;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "00482460": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00482460(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x7353a0 == 0) || (*0x7353a0 == -1)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x7353a0;\n                *(*0x20 + -0x10) = *0x7353a8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x004824e0;\n            }\n            if (*(*0x20 + -0x18) == 0x498de0) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x004824e0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x28);\n                    *(*0x20 + -0x38) = 0x4824f4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x498de0;\n            *(*0x20 + -0x38) = 0x482510;\n            in_RAX = fcn.004094a0(0x49dc40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x482525;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 586
    },
    "00482540": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00482540(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x7353a0 == 0) || (*0x7353a0 == -1)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x7353a0;\n                *(*0x20 + -0x10) = *0x7353a8;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x004825c0;\n            }\n            if (*(*0x20 + -0x18) == 0x498de0) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x004825c0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x30);\n                    *(*0x20 + -0x38) = 0x4825d4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x498de0;\n            *(*0x20 + -0x38) = 0x4825f0;\n            in_RAX = fcn.004094a0(0x49dc40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x482605;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00488820": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t * fcn.00488820(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00482460();\n    piVar1 = fcn.00488fe0(arg1);\n    if (unaff_RBX != 0) {\n        return NULL;\n    }\n    *(*piVar1 + 0x240) = (arg1 >> 10 & 1) != 0;\n    return piVar1;\n}\n",
        "token_count": 166
    },
    "00488b00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00488b00(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00489960();\n    fcn.004700c0(arg1 | 0x80000);\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    uVar1 = fcn.00488940(0);\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00489c40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00489c40(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00482540();\n    fcn.00489cc0(in_RAX);\n    return;\n}\n",
        "token_count": 99
    },
    "0048ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar fcn.0048ff00(int64_t arg1)\n\n{\n    uchar uVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (arg1 == in_RAX) {\n        uVar1 = fcn.00402ec0(unaff_RDI);\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.004927e0();\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00492020": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00492020(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.0048bb80(0x4ac9c5, arg2, arg3, in_R9);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = fcn.0048c220(0x4acab8);\n    return uVar2 & 0xffffffffffffff00 | uVar2 < iVar1;\n}\n",
        "token_count": 191
    },
    "00401d20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00401d20(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    uVar1 = (uVar1 >> 0x10) + uVar1;\n    return (uVar1 >> 0x20) + uVar1 & 0x7f;\n}\n",
        "token_count": 206
    },
    "00404120": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00404120(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00403980(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.004320e0();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00408840": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00408840(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x789840 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 939
    },
    "00413c20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00413c20(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x71f2e0);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x7204a0);\n                *(*0x20 + -0x48) = 0x413c85;\n                iVar2 = fcn.00422440();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x75ba18) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x413d45;\n                    fcn.00410fe0(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x413d6e;\n                fcn.0045c5c0(0x40);\n            }\n            *(*0x20 + -0x48) = 0x413d78;\n            in_RAX = fcn.0045c5a0(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x413d85;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 680
    },
    "0041ab40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041ab40(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.00410200(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.0041e780(0);\n                        }\n                    }\n                    else {\n                        fcn.0041b320(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "0041bf80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041bf80(void)\n\n{\n    uint64_t uVar1;\n    double dVar2;\n    int32_t *in_RAX;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    iVar3 = *in_RAX;\n    uVar1 = *(in_RAX + 0xe);\n    iVar6 = *(in_RAX + 8);\n    if (iVar3 < 0) {\n        iVar3 = 100000;\n    }\n    if (uVar1 < 0) {\n        dVar2 = uVar1 >> 1 | uVar1 & 1;\n        dVar2 = dVar2 + dVar2;\n        uVar7 = SUB84(dVar2, 0);\n        uVar8 = dVar2 >> 0x20;\n    }\n    else {\n        uVar7 = SUB84(uVar1, 0);\n        uVar8 = uVar1 >> 0x20;\n    }\n    if ((iVar6 < *(in_RAX + 0xc)) ||\n       (uVar4 = (*0x6b5300 * CONCAT44(uVar8, uVar7)) / (iVar3 + 100),  uVar4 < *(in_RAX + 0x12))) {\n        iVar6 = *0x6b52d8 * iVar6;\n        uVar4 = uVar1;\n    }\n    iVar5 = uVar4 - *(in_RAX + 0x12);\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar6 = iVar6 - *(in_RAX + 0xc);\n    if (iVar6 < 1) {\n        iVar6 = 1;\n    }\n    *(in_RAX + 0x22) = iVar5 / iVar6;\n    *(in_RAX + 0x24) = iVar6 / iVar5;\n    return;\n}\n",
        "token_count": 443
    },
    "0041cc60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0041cc60(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    iVar1 = *in_RAX;\n    *in_RAX = unaff_EBX;\n    *(in_RAX + 2) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    fcn.0041c8c0(*(in_RAX + 4));\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "00440240": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00440240(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    uchar *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uchar *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b8 && *0x20 + -0x3b8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x438;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = 0;\n            *(*0x20 + -0x448) = *0x20 + -8;\n            *(*0x20 + -0x440) = 0x44028f;\n            puVar5 = fcn.0045c700();\n            unaff_RBP = *(*0x20 + -0x448);\n            uVar7 = unaff_EDI - arg1 >> 1;\n            puVar10 = *0x20 + -0x408;\n            if (uVar7 == 0x80) {\n                uVar6 = 0;\n                while (uVar9 = uVar6,  uVar9 < 0x80) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(puVar5 + (uVar9 + arg1 & 0xff) * 8 + 0x5f8);\n                    uVar6 = uVar9 + 1;\n                }\n                LOCK();\n                if (arg1 != *(puVar5 + 0x5f0)) {\n                    return 0;\n                }\n                *(puVar5 + 0x5f0) = arg1 + 0x80;\n                *(*0x20 + uVar7 * 8 + -0x410) = unaff_RBX;\n                uVar6 = 0;\n                while( true ) {\n                    if (0x7f < uVar6) {\n                        *(*0x20 + -0x424) = 0x80;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + uVar7 * 8 + -0x410);\n                        *(*0x20 + -0x440) = 0x440359;\n                        fcn.00409e80();\n                        iVar1 = *(*0x20 + -0x418);\n                        uVar2 = *(*0x20 + -0x420);\n                        uVar3 = *0x736140;\n                        iVar4 = *0x736148;\n                        if ((iVar1 != 0) && (*(iVar1 + 0xa0) = 0,  uVar3 = uVar2,  iVar4 = iVar1,  *0x736148 != 0)) {\n                            *(*0x736148 + 0xa0) = uVar2;\n                            uVar3 = *0x736140;\n                        }\n                        *0x736148 = iVar4;\n                        *0x736140 = uVar3;\n                        *0x736150 = *0x736150 + *(*0x20 + -0x424) + 1;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x440) = 0x4403c6;\n                        fcn.0040a0a0();\n                        return 1;\n                    }\n                    iVar1 = uVar6 * 8;\n                    uVar6 = uVar6 + 1;\n                    if (0x80 < uVar6) break;\n                    *(*(*0x20 + iVar1 + -0x410) + 0xa0) = *(*0x20 + uVar6 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x440) = 0x4403e5;\n                fcn.0045c5a0(0x81);\n                puVar10 = puVar5;\n            }\n            unaff_EDI = puVar10;\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x440) = 0x4403f6;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x1c) = unaff_EDI;\n        *(puVar8 + -8) = 0x44040e;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_4_ = *(puVar8 + 0x18);\n        unaff_EDI = *(puVar8 + 0x1c);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1257
    },
    "00463740": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00463740(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uchar *in_RAX;\n    uchar *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uint64_t uVar6;\n    char cVar7;\n    uint64_t in_R8;\n    uchar uVar8;\n    uint64_t in_R9;\n    uchar uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar8 = in_R9;\n        cVar7 = in_R8;\n        puVar2 = *0x20 + -0x18;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar2 && puVar2 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = 0;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar7 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar3 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar4 = unaff_RDI / unaff_RSI;\n                            uVar6 = unaff_RDI - puVar4 * unaff_RSI;\n                            puVar10 = in_RAX;\n                            if (0x23 < uVar6) goto code_r0x004639d0;\n                            uVar1 = *(uVar6 + 0x4b35d4);\n                            puVar2 = uVar1;\n                            if (0x40 < puVar3 + -1) goto code_r0x004639c6;\n                            (*0x20 + -0x52)[puVar3] = uVar1;\n                            puVar3 = puVar3 + -1;\n                            unaff_RDI = puVar4;\n                        }\n                        puVar10 = puVar3 + -1;\n                        puVar11 = unaff_RDI[0x4b35d4];\n                        puVar4 = puVar3;\n                        if (0x40 < puVar10) goto code_r0x004639b9;\n                        (*0x20 + -0x52)[puVar3] = unaff_RDI[0x4b35d4];\n                        bVar12 = cVar7 == '\\0';\n                        goto code_r0x00463872;\n                    }\n                    uVar6 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                        }\n                    }\n                    puVar4 = uVar6 & 7;\n                    puVar10 = unaff_RSI + -1;\n                    puVar11 = 0x41;\n                    goto code_r0x004639f4;\n                }\n                puVar3 = 0x41;\n                puVar10 = unaff_RDI;\ncode_r0x00463a80:\n                uVar8 = in_R9;\n                cVar7 = in_R8;\n                if (puVar10 < 0x64) {\n                    unaff_RDI = puVar10;\n                    if (puVar10 * 2 + 1U < 200) {\n                        puVar2 = puVar3 + -1;\n                        puVar11 = 0x4b5950;\n                        if (puVar2 < 0x41) {\n                            (*0x20 + -0x52)[puVar3] = *(puVar10 * 2 + 0x4b5951);\n                            if (puVar10 < 0xa) {\ncode_r0x00463bab:\n                                bVar12 = cVar7 == '\\0';\n                                puVar10 = puVar2;\ncode_r0x00463872:\n                                do {\n                                    puVar4 = puVar10;\n                                    if (bVar12) {\ncode_r0x00463895:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar4 < 0x42) {\n                                                *(*0x20 + -0xa0) = 0x463975;\n                                                fcn.00448f60(-(puVar4 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0xa0) = 0x46399f;\n                                            fcn.0045c660(0x41);\n                                        }\n                                        else if (puVar4 < 0x42) {\n                                            uVar6 = (unaff_RBX - puVar4) + 0x41;\n                                            *(*0x20 + -0x60) = uVar6;\n                                            puVar2 = puVar4 + -0x41;\n                                            if (arg1 < uVar6) {\n                                                *(*0x20 + -0x68) = puVar2;\n                                                *(*0x20 + -0x70) = unaff_RBX;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar4 & puVar2 >> 0x3f) - 0x51);\n                                                *(*0x20 + -0xa0) = 0x4638f8;\n                                                in_RAX = fcn.00445220(unaff_RBX);\n                                                puVar2 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0xa0) = 0x463929;\n                                            fcn.0045cee0(-puVar2);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0xa0) = 0x4639ac;\n                                        fcn.0045c660(0x41);\n                                    }\n                                    else {\n                                        puVar4 = puVar10 + -1;\n                                        if (puVar4 < 0x41) {\n                                            (*0x20 + -0x52)[puVar10] = 0x2d;\n                                            goto code_r0x00463895;\n                                        }\n                                    }\n                                    *(*0x20 + -0xa0) = 0x4639b9;\n                                    fcn.0045c5a0(0x41);\ncode_r0x004639b9:\n                                    puVar3 = puVar11;\n                                    *(*0x20 + -0xa0) = 0x4639c6;\n                                    fcn.0045c5a0(0x41);\n                                    in_RAX = puVar10;\ncode_r0x004639c6:\n                                    *(*0x20 + -0xa0) = 0x4639d0;\n                                    fcn.0045c5a0(0x41);\n                                    puVar10 = in_RAX;\ncode_r0x004639d0:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0xa0) = 0x4639dd;\n                                    in_RAX = fcn.0045c5c0(0x24);\n                                    unaff_RDI = puVar2;\n                                    while( true ) {\n                                        puVar11 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar3] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar4 & 0x3f);\n                                        puVar2 = unaff_RDI;\n                                        unaff_R13 = puVar11;\ncode_r0x004639f4:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar3 = puVar11;\n                                        if (0x23 < (unaff_RDI & puVar10)) goto code_r0x00463a5f;\n                                        unaff_R13 = puVar11 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar10) + 0x4b35d4);\n                                        if (0x40 < unaff_R13) goto code_r0x00463a52;\n                                    }\n                                    puVar4 = puVar11 + -1;\n                                    puVar10 = unaff_RDI[0x4b35d4];\n                                    if (0x40 < puVar4) goto code_r0x00463a45;\n                                    (*0x20 + -0x52)[puVar11] = unaff_RDI[0x4b35d4];\n                                    bVar12 = in_R8 == '\\0';\n                                    puVar10 = puVar4;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar10 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar2 = puVar3 + -2;\n                                if (puVar2 < 0x41) {\n                                    (*0x20 + -0x53)[puVar3] = *(puVar10 * 2 + 0x4b5950);\n                                    goto code_r0x00463bab;\n                                }\n                                *(*0x20 + -0xa0) = 0x463bc5;\n                                fcn.0045c5a0(0x41);\n                            }\n                            *(*0x20 + -0xa0) = 0x463bd2;\n                            fcn.0045c5c0(200);\n                        }\n                        *(*0x20 + -0xa0) = 0x463bdf;\n                        fcn.0045c5a0(0x41);\n                    }\n                    *(*0x20 + -0xa0) = 0x463bec;\n                    fcn.0045c5c0(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar10 >> 1;\n                    puVar4 = unaff_RDI / 0x32;\n                    puVar10 = puVar10 + puVar4 * -100;\n                    if (199 < puVar10 * 2 + 1U) goto code_r0x00463c0f;\n                    uVar1 = *(puVar10 * 2 + 0x4b5951);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar3 + -1) goto code_r0x00463c05;\n                    (*0x20 + -0x52)[puVar3] = uVar1;\n                    if (199 < puVar10 * 2) goto code_r0x00463bf6;\n                    puVar2 = puVar3 + -2;\n                    uVar9 = *(puVar10 * 2 + 0x4b5950);\n                    if (puVar2 < 0x41) goto code_r0x00463a6c;\n                }\n                *(*0x20 + -0xa0) = 0x463bf6;\n                fcn.0045c5a0(0x41);\ncode_r0x00463bf6:\n                *(*0x20 + -0xa0) = 0x463c05;\n                fcn.0045c5c0(200);\ncode_r0x00463c05:\n                *(*0x20 + -0xa0) = 0x463c0f;\n                fcn.0045c5a0(0x41);\ncode_r0x00463c0f:\n                arg1 = 200;\n                *(*0x20 + -0xa0) = 0x463c19;\n                fcn.0045c5c0(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x6b5818;\n            *(*0x20 + -0xa0) = 0x463c2c;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = cVar7;\n        puVar5[0x31] = uVar8;\n        *(puVar5 + -8) = 0x463c55;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8 = puVar5[0x30];\n        in_R9 = puVar5[0x31];\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x00463a45:\n    *(*0x20 + -0xa0) = 0x463a52;\n    fcn.0045c5a0(0x41);\ncode_r0x00463a52:\n    *(*0x20 + -0xa0) = 0x463a5f;\n    fcn.0045c5a0(0x41);\n    puVar3 = puVar11;\ncode_r0x00463a5f:\n    uVar9 = SUB81(puVar10, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0xa0) = 0x463a6c;\n    puVar2 = fcn.0045c5c0(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x00463a6c:\n    (*0x20 + -0x53)[puVar3] = uVar9;\n    puVar3 = puVar2;\n    unaff_RSI = in_RAX;\n    puVar10 = puVar4;\n    goto code_r0x00463a80;\n}\n",
        "token_count": 3336
    },
    "0047b480": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0047b480(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ushort *puVar1;\n    uint64_t arg1_00;\n    ushort *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    uint64_t arg1_01;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0047b6c0(arg1);\n    if (in_RAX < 0) {\n        if (unaff_RBX < 0) {\n            uVar5 = 0x2d;\n            uVar6 = -unaff_RBX;\n        }\n        else {\n            uVar5 = 0x2b;\n            uVar6 = unaff_RBX;\n        }\n        arg1_01 = 0;\n        puVar1 = fcn.00445220(0);\n        *puVar1 = 0x6d20;\n        *(puVar1 + 1) = 0x3d;\n        if (arg1_01 < 4) {\n            arg1_01 = 3;\n            puVar2 = fcn.00445220(3);\n            arg1_00 = puVar1 + 1;\n        }\n        else {\n            arg1_00 = 4;\n            puVar2 = puVar1;\n        }\n        *(puVar2 + 3) = uVar5;\n        if (((uVar6 >> 1) / 1000000000) / 500000000 != 0) {\n            fcn.0047b1e0(arg1_01);\n        }\n        iVar3 = fcn.0047b1e0(arg1_01);\n        uVar6 = arg1_00 + 1;\n        iVar4 = iVar3;\n        if (arg1_01 < uVar6) {\n            arg1_01 = arg1_00;\n            iVar4 = fcn.00445220(arg1_00);\n            uVar6 = iVar3 + 1;\n        }\n        *(iVar4 + arg1_00) = 0x2e;\n        fcn.0047b1e0(arg1_01);\n        fcn.00448f60(uVar6);\n        fcn.00448ba0(unaff_RBX);\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "0047e0a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.0047e0a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = fcn.0047dde0(arg1);\n    iVar2 = iVar2 + ((iVar2 + 0x15180U >> 1) / 0x49d40) * -0x93a80;\n    iVar1 = iVar2 + 0x15180;\n    return (iVar2 + SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(iVar1) >> 0x40, 0) + 0x15180 >> 0x10) -\n           (iVar1 >> 0x3f);\n}\n",
        "token_count": 221
    },
    "0047e1e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0047e1e0(ulong noname_0, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    char unaff_BL;\n    int64_t iVar7;\n    \n    uVar2 = (in_RAX / 0x15180) % 0x23ab1;\n    uVar3 = uVar2 >> 1;\n    iVar4 = uVar3 / 0x4756 - uVar3 / 0x11d58;\n    uVar2 = uVar2 + iVar4 * -0x8eac;\n    uVar3 = SUB168(ZEXT816(0x66db072f2284d191) * ZEXT816(uVar2) >> 0x40, 0);\n    uVar3 = (uVar3 + uVar2 >> 1 | CARRY8(uVar3, uVar2) << 0x3f) >> 10;\n    uVar2 = uVar2 + uVar3 * -0x5b5;\n    uVar5 = SUB168(ZEXT816(0x6719f36016719f37) * ZEXT816(uVar2) >> 0x40, 0);\n    uVar5 = uVar5 + uVar2 >> 1 | CARRY8(uVar5, uVar2) << 0x3f;\n    iVar6 = (uVar5 >> 8) - (uVar5 >> 10);\n    iVar7 = ((in_RAX / 0x15180) / 0x23ab1) * 400 + iVar4 * 100 + uVar3 * 4 + iVar6;\n    iVar4 = uVar2 + iVar6 * -0x16d;\n    uVar2 = iVar7 - 0x440d116ebf;\n    if (unaff_BL == '\\0') {\n        return uVar2;\n    }\n    if ((uVar2 & 3) == 0) {\n        iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar2) >> 0x40, 0) + iVar7 + -0x440d116ebf;\n        if ((((iVar6 >> 6) - (uVar2 >> 0x3f)) * 100 - uVar2 != 0) ||\n           (((iVar6 >> 8) - (uVar2 >> 0x3f)) * 400 - uVar2 == 0)) {\n            if (iVar4 < 0x3c) {\n                if (iVar4 == 0x3b) {\n                    return uVar2;\n                }\n            }\n            else {\n                iVar4 = iVar4 + -1;\n            }\n        }\n    }\n    uVar3 = (iVar4 + SUB168(SEXT816(-0x7bdef7bdef7bdef7) * SEXT816(iVar4) >> 0x40, 0) >> 4) - (iVar4 >> 0x3f);\n    if (uVar3 + 1 < 0xd) {\n        if ((*(uVar3 * 4 + 0x71ec84) <= iVar4) || (uVar3 < 0xd)) {\n            return uVar2;\n        }\n        fcn.0045c5a0(0xd);\n    }\n    fcn.0045c5a0(0xd);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 824
    },
    "0047eec0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0047eec0(char *arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    char *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    char *unaff_RDI;\n    char *in_R8;\n    int64_t in_R9;\n    char cVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd0 && *0x20 + -0xd0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x150;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0xc0) = arg1;\n            *(*0x20 + -0x158) = 0x47ef06;\n            uVar1 = fcn.0047f540();\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x18) = uVar1;\n            *(*0x20 + -0x158) = 0x47ef27;\n            iVar2 = fcn.0047f780();\n            if (unaff_RDI == '\\0') {\n                return 0;\n            }\n            if ((arg1 == NULL) || (*unaff_RDI == ',')) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x100) = -iVar2;\n            *(*0x20 + -0x158) = 0x47ef88;\n            pcVar6 = arg1;\n            uVar1 = fcn.0047f540();\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -200) = arg1;\n            if ((unaff_RDI == NULL) || (*pcVar6 == ',')) {\n                iVar2 = *(*0x20 + -0x100) + 0xe10;\n                pcVar7 = pcVar6;\n                unaff_RBX = arg1;\n            }\n            else {\n                *(*0x20 + -0x158) = 0x47efc5;\n                iVar2 = fcn.0047f780();\n                iVar2 = -iVar2;\n                unaff_RSI = unaff_RDI & 0xffffffff;\n                unaff_RBX = *(*0x20 + -200);\n                pcVar7 = unaff_RDI;\n                unaff_RDI = pcVar6;\n            }\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            if (unaff_RDI == NULL) {\n                unaff_RDI = 0xf;\n                pcVar7 = 0x4ae756;\n            }\n            if (unaff_RDI != NULL) {\n                *(*0x20 + -0xd0) = iVar2;\n                if ((*pcVar7 != ',') && (*pcVar7 != ';')) {\n                    return 0;\n                }\n                *(*0x20 + -0xb8) = 0;\n                *(*0x20 + -0xb0) = in_XMM15;\n                *(*0x20 + -0xa0) = in_XMM15;\n                *(*0x20 + -0x90) = 0;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x158) = 0x47f0ae;\n                uVar1 = fcn.0047f9a0();\n                *(*0x20 + -0x40) = uVar1;\n                *(*0x20 + -0x38) = unaff_RDI + -1;\n                *(*0x20 + -0x30) = pcVar7;\n                *(*0x20 + -0x28) = unaff_RDI;\n                *(*0x20 + -0x20) = unaff_RSI;\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xac) = *(*0x20 + -0x34);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xa4) = *(*0x20 + -0x2c);\n                *(*0x20 + -0xa0) = *(*0x20 + -0x28);\n                *(*0x20 + -0x9c) = *(*0x20 + -0x24);\n                *(*0x20 + -0x98) = *(*0x20 + -0x20);\n                *(*0x20 + -0x94) = *(*0x20 + -0x1c);\n                cVar10 = iVar2;\n                if (((cVar10 == '\\0') || (in_R9 == 0)) || (*in_R8 != ',')) {\n                    return 0;\n                }\n                iVar2 = in_R9 + -1;\n                *(*0x20 + -0x158) = 0x47f145;\n                iVar8 = iVar2;\n                uVar1 = fcn.0047f9a0();\n                *(*0x20 + -0x68) = uVar1;\n                *(*0x20 + -0x60) = iVar2;\n                *(*0x20 + -0x58) = iVar8;\n                *(*0x20 + -0x50) = unaff_RDI;\n                *(*0x20 + -0x48) = unaff_RSI;\n                *(*0x20 + -0x90) = *(*0x20 + -0x68);\n                *(*0x20 + -0x88) = *(*0x20 + -0x60);\n                *(*0x20 + -0x84) = *(*0x20 + -0x5c);\n                *(*0x20 + -0x80) = *(*0x20 + -0x58);\n                *(*0x20 + -0x7c) = *(*0x20 + -0x54);\n                *(*0x20 + -0x78) = *(*0x20 + -0x50);\n                *(*0x20 + -0x74) = *(*0x20 + -0x4c);\n                *(*0x20 + -0x70) = *(*0x20 + -0x48);\n                *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n                if ((cVar10 == '\\0') || (0 < in_R9)) {\n                    return 0;\n                }\n                *(*0x20 + -0x158) = 0x47f1cf;\n                uVar1 = fcn.0047e1e0(*(*0x20 + 0x20), 0x7ffffffe1ad9c900);\n                *(*0x20 + -0x110) = uVar1;\n                *(*0x20 + -0x108) = unaff_RDI;\n                uVar1 = *(*0x20 + -0xa8);\n                *(*0x20 + -0x158) = 0x47f20f;\n                uVar3 = fcn.00480000(*(*0x20 + -0xb0), uVar1, *(*0x20 + -0x98), *(*0x20 + -0x100));\n                *(*0x20 + -0xd8) = uVar3;\n                *(*0x20 + -0x158) = 0x47f24e;\n                iVar4 = fcn.00480000(*(*0x20 + -0x88), uVar1, *(*0x20 + -0x70), *(*0x20 + -0xd0));\n                iVar2 = *(*0x20 + -0xd8);\n                iVar5 = iVar4;\n                iVar8 = iVar2;\n                if (iVar4 < iVar2) {\n                    iVar5 = iVar2;\n                    iVar8 = iVar4;\n                }\n                uVar3 = *(*0x20 + -200);\n                uVar1 = *(*0x20 + -0x18);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0xf8);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0xe8) = uVar3;\n                uVar3 = *(*0x20 + -0xd0);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0x100);\n                }\n                *(*0x20 + -0xf0) = uVar3;\n                uVar3 = *(*0x20 + -0x10);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0x18);\n                }\n                iVar2 = *(*0x20 + 0x20);\n                *(*0x20 + -0x118) =\n                     *(*0x20 + -0x108) * 0x15180 +\n                     iVar2 + ((SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 0x10) -\n                             (iVar2 >> 0x3f)) * -0x15180;\n                *(*0x20 + -0xe0) = ((*(*0x20 + -0x110) + 0x440d116ebfU >> 1) / 200) * 0x23ab1;\n                if (iVar8 <= *(*0x20 + -0x118)) {\n                    if (iVar5 <= *(*0x20 + -0x118)) {\n                        return uVar1;\n                    }\n                    return uVar3;\n                }\n                return uVar1;\n            }\n            *(*0x20 + -0x158) = 0x47f4ff;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x47f519;\n        fcn.00459ea0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2579
    },
    "00410400": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.00410400(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x75ba18);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.0045c5c0(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 359
    },
    "00410fe0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00410fe0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x41106e;\n                    uVar1 = fcn.004104e0(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = unaff_EBX;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar3 = *(*0x20 + -0x10);\n                        for (uVar4 = 0; uVar4 < uVar2 >> 2; uVar4 = uVar4 + 1) {\n                            *puVar3 = 0xff;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x4110af;\n                        fcn.0045cc20();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    unaff_EBX = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x4110e5;\n            fcn.004320e0();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x4110f6;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x411113;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 930
    },
    "00453300": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00453300(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00433860();\n        fcn.00433ac0();\n        fcn.004338e0();\n        fcn.004530c0();\n        fcn.00452440(0);\n    }\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 184
    },
    "0046bfa0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong fcn.0046bfa0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x140) == -1) {\n                arg1_01 = ((arg1 * 6 >> 0x3f) >> 0x3d) + arg1 * 6 >> 3;\n            }\n            else {\n                arg1_01 = (arg1 >> 2) * 3;\n            }\n            *(*0x20 + -0x40) = arg1_01;\n            *(*0x20 + -0x80) = 0x46c011;\n            uVar1 = fcn.00445140(arg1_01);\n            *(*0x20 + -0x10) = uVar1;\n            uVar1 = *(*0x20 + 0x10);\n            arg1_00 = *(*0x20 + -0x38);\n            *(*0x20 + -0x80) = 0x46c02d;\n            fcn.00449100(arg1_00);\n            unaff_RBX = *(*0x20 + -0x10);\n            *(*0x20 + -0x80) = 0x46c050;\n            arg1 = fcn.0046c0c0(*(*0x20 + -0x40), arg1_01, uVar1, arg1_00);\n            if (arg1 <= *(*0x20 + -0x40)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x80) = 0x46c07d;\n            in_RAX = fcn.0045c620(arg1, *(*0x20 + -0x40));\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x46c092;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 709
    },
    "0040c140": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c140(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    double dVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    double dVar7;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar6 = uVar6 << 0x11 ^ uVar6;\n    uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n    *(iVar2 + 0xf4) = uVar6;\n    dVar4 = (uVar6 + uVar1 & 0x3ffffff) + 1;\n    uVar5 = dVar4 >> 0x2f & 0x1f;\n    dVar7 = *(uVar5 * 8 + 0x7217c0);\n    if (uVar5 + 1 < 0x21) {\n        dVar7 = (((dVar4 >> 0x34 & 0x7ff) - 0x3ff) + dVar7 +\n                *0x6b5288 * (dVar4 >> 0x1b & 0xfffff) * (*(uVar5 * 8 + 0x7217c8) - dVar7)) - *0x6b52f8;\n        if (0.0 < dVar7) {\n            dVar7 = 0.0;\n        }\n        return dVar7 * in_RAX * *0x6b5340 + 1;\n    }\n    fcn.0045c5c0(0x21);\n    pcVar3 = swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n}\n",
        "token_count": 515
    },
    "0040c780": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040c780(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    uVar3 = *(in_RAX + 9);\n    if (0xf < uVar3) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar4 = *(iVar2 + 0xf0);\n        uVar1 = *(iVar2 + 0xf4);\n        *(iVar2 + 0xf0) = uVar1;\n        uVar4 = uVar4 ^ uVar4 << 0x11;\n        uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n        *(iVar2 + 0xf4) = uVar4;\n        uVar3 = uVar3 - 0xf;\n        if (((1 << (uVar3 & 0x1f) & -(uVar3 < 0x20)) - 1 & uVar4 + uVar1) == 0) {\n            *(in_RAX + 10) = *(in_RAX + 10) + 1;\n        }\n        return;\n    }\n    *(in_RAX + 10) = *(in_RAX + 10) + 1;\n    return;\n}\n",
        "token_count": 317
    },
    "0040ca60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040ca60(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar3 = fcn.0040bf40();\n    iVar2 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar4 = uVar4 << 0x11 ^ uVar4;\n    uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n    *(iVar2 + 0xf4) = uVar4;\n    *(iVar3 + 0xc) = uVar1 + uVar4;\n    return;\n}\n",
        "token_count": 253
    },
    "00428cc0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00428cc0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x789668 < 1) {\n        bVar3 = true;\n    }\n    else if (in_RAX < *0x789668) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar1 = *(iVar2 + 0xf4);\n        uVar5 = *(iVar2 + 0xf0) << 0x11 ^ *(iVar2 + 0xf0);\n        uVar5 = uVar1 >> 0x10 ^ uVar5 >> 7 ^ uVar1 ^ uVar5;\n        iVar4 = (uVar1 + uVar5) % *0x789668;\n        *(iVar2 + 0xf0) = uVar1;\n        *(iVar2 + 0xf4) = uVar5;\n        bVar3 = in_RAX < iVar4;\n    }\n    else {\n        bVar3 = false;\n    }\n    if (!bVar3) {\n        fcn.00428dc0(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "00449e40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00449e40(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    \n    iVar2 = *(unaff_R14 + 0x30);\n    uVar3 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar3 = uVar3 << 0x11 ^ uVar3;\n    uVar3 = uVar1 >> 0x10 ^ uVar3 >> 7 ^ uVar1 ^ uVar3;\n    *(iVar2 + 0xf4) = uVar3;\n    return uVar1 + uVar3;\n}\n",
        "token_count": 178
    },
    "004570e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.004570e0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (0 < *0x789700) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar1 = *(iVar2 + 0xf4);\n        uVar4 = *(iVar2 + 0xf0) << 0x11 ^ *(iVar2 + 0xf0);\n        uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n        iVar3 = (uVar1 + uVar4) % *0x789700;\n        *(iVar2 + 0xf0) = uVar1;\n        *(iVar2 + 0xf4) = uVar4;\n        if (iVar3 == 0) {\n            fcn.00428dc0(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044f8a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f8a0(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044e500(0);\n    }\n    fcn.0044e500(0);\n    return;\n}\n",
        "token_count": 137
    },
    "00454700": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00454700(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.0042f9a0();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 294
    },
    "004547c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.004547c0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x004548af;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.0042f9a0();\ncode_r0x004548af:\n    fcn.0042f9a0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 398
    },
    "004548c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.004548c0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x004549f4;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x00454962;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x00454962:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x45498c;\n                    fcn.00453ea0();\n                    *(*0x20 + -0x28) = 0x454991;\n                    uVar2 = fcn.00454700(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x4549f4;\n            fcn.0042f9a0();\ncode_r0x004549f4:\n            *(*0x20 + -0x28) = 0x4549f9;\n            in_RAX = fcn.0042f9a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x454a05;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 970
    },
    "00461b80": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00461b80(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.0042f9a0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 190
    },
    "00468e00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00468e00(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.0042f9a0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 190
    },
    "00401da0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00401da0(uint64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            arg2 = 0;\n            for (iVar4 = 0; iVar2 = arg2,  iVar4 < unaff_RDI; iVar4 = iVar4 + 1) {\n                arg2 = iVar2 * 0x1000193 + *(arg1 + iVar4);\n            }\n            iVar7 = 0x1000193;\n            iVar8 = 1;\n            for (; 0 < uVar5; uVar5 = uVar5 >> 1) {\n                if ((uVar5 & 1) != 0) {\n                    iVar8 = iVar8 * iVar7;\n                }\n                iVar7 = iVar7 * iVar7;\n            }\n            iVar7 = 0;\n            for (uVar5 = 0; uVar5 < unaff_RDI; uVar5 = uVar5 + 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x00401fbc;\n                iVar7 = iVar7 * 0x1000193 + *(in_RAX + uVar5);\n            }\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = iVar8;\n            *(*0x20 + -0x2c) = iVar2;\n            arg1_00 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (iVar7 == iVar2) {\n                uVar6 = uVar5;\n                if (unaff_RDI <= unaff_RBX) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x50) = 0x401e85;\n                    cVar1 = fcn.004025e0(unaff_RDI, arg2);\n                    if (cVar1 != '\\0') {\n                        return 0;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x2c);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar6 = *(*0x20 + -0x10);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar8 = *(*0x20 + -0x30);\n                    arg1_00 = uVar6;\n                    goto code_r0x00401ec0;\n                }\n            }\n            else {\ncode_r0x00401ec0:\n                while( true ) {\n                    do {\n                        uVar5 = arg1_00;\n                        if (unaff_RBX <= uVar5) {\n                            return 0xffffffffffffffff;\n                        }\n                        unaff_RDI = uVar5 - uVar6;\n                        if (unaff_RBX <= unaff_RDI) goto code_r0x00401fa6;\n                        iVar7 = (iVar7 * 0x1000193 + *(in_RAX + uVar5)) - *(in_RAX + unaff_RDI) * iVar8;\n                        arg1_00 = uVar5 + 1;\n                    } while (arg2 != iVar7);\n                    uVar9 = unaff_RDI + 1;\n                    if (arg1_00 < uVar9) break;\n                    if (uVar6 == uVar5 - unaff_RDI) {\n                        *(*0x20 + -0x24) = iVar7;\n                        *(*0x20 + -0x20) = arg1_00;\n                        *(*0x20 + -0x18) = uVar9;\n                        *(*0x20 + -0x50) = 0x401f46;\n                        cVar1 = fcn.004025e0(uVar5 - unaff_RDI, arg2);\n                        arg2 = *(*0x20 + -0x2c);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar6 = *(*0x20 + -0x10);\n                        iVar7 = *(*0x20 + -0x24);\n                        iVar8 = *(*0x20 + -0x30);\n                        arg1_00 = *(*0x20 + -0x20);\n                        uVar9 = *(*0x20 + -0x18);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        cVar1 = '\\0';\n                    }\n                    if (cVar1 != '\\0') {\n                        return uVar9;\n                    }\n                }\n                *(*0x20 + -0x50) = 0x401fa6;\n                fcn.0045c660(arg1_00);\ncode_r0x00401fa6:\n                *(*0x20 + -0x50) = 0x401fb1;\n                fcn.0045c5a0(unaff_RBX);\n            }\n            *(*0x20 + -0x50) = 0x401fbc;\n            fcn.0045c5e0(unaff_RDI, unaff_RBX);\n            uVar5 = uVar6;\ncode_r0x00401fbc:\n            *(*0x20 + -0x50) = 0x401fc7;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = uVar5;\n        *(puVar3 + -8) = 0x401fe5;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1639
    },
    "00405dc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00405dc0(void)\n\n{\n    uint64_t *unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uchar auStackX8 [32];\n    ulong auStack48 [2];\n    uchar auStack32 [16];\n    ulong *puStack16;\n    \n    if (*(unaff_R14[6] + 0x90) != unaff_R14) {\n        return 0x4b21c5;\n    }\n    if ((*unaff_R14 < auStackX8) && (auStackX8 <= unaff_R14[1])) {\n        auStack48[0] = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n        auStack32 = CONCAT88(auStackX8, 0x405ea0);\n        puStack16 = auStack48;\n        fcn.00459d60();\n        return auStack48[0];\n    }\n    return 0x4b21c5;\n}\n",
        "token_count": 219
    },
    "004084a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004084a0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x4084d6;\n            fcn.0044a780();\n            *(*0x20 + -0x130) = 0x4084db;\n            uVar1 = fcn.0044ae60();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x4084fb;\n            fcn.00402a80(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1_00 = iVar4 + 2;\n                    uVar6 = param_2 < arg1_00;\n                    if (arg1_00 < param_2) goto code_r0x0040855b;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x408556;\n                        fcn.00448ba0(0x31);\n                        *(*0x20 + -0x130) = 0x40855b;\n                        uVar2 = fcn.004320e0();\ncode_r0x0040855b:\n                        if (uVar6) goto code_r0x004087e5;\n                        if (arg1_00 < uVar2) goto code_r0x004087d9;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1_00) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x4085de;\n                    fcn.00402a80(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x0040863a;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            arg1 = 0x2e;\n                            *(*0x20 + -0x130) = 0x408635;\n                            fcn.00448ba0(0x2e);\n                            *(*0x20 + -0x130) = 0x40863a;\n                            uVar2 = fcn.004320e0();\ncode_r0x0040863a:\n                            if (!uVar6 && !uVar7) goto code_r0x004087ac;\n                            if (arg1 < uVar2) goto code_r0x004087a7;\n                            iVar4 = *(*0x20 + -0xa0);\n                            arg1_00 = *(iVar4 + uVar2);\n                        } while (*(iVar4 + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x40868f;\n                        iVar3 = fcn.0045c839();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4ae3d9;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4ac9c5;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = iVar3;\n                        *(*0x20 + -0x58) = 0x4ac9c5;\n                        *(*0x20 + -0x50) = 1;\n                        arg1_00 = (*(*0x20 + -0xf0) - iVar3) - 4;\n                        *(*0x20 + -0x48) = (-arg1_00 >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x38) = 0x4af4de;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = iVar3;\n                        param_2 = 0x4ad27e;\n                        *(*0x20 + -0x18) = 0x4ad27e;\n                        *(*0x20 + -0x10) = 8;\n                        arg1 = 9;\n                        *(*0x20 + -0x130) = 0x408793;\n                        fcn.00448900(9);\n                        *(*0x20 + -0x130) = 0x408798;\n                        fcn.00409780();\n                        *(*0x20 + -0x130) = 0x4087a7;\n                        fcn.00431940();\ncode_r0x004087a7:\n                        *(*0x20 + -0x130) = 0x4087ac;\n                        fcn.0045c660(arg1);\ncode_r0x004087ac:\n                        *(*0x20 + -0x130) = 0x4087b1;\n                        fcn.0045c5e0(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x4087d4;\n                    fcn.00448ba0(0x13);\n                    *(*0x20 + -0x130) = 0x4087d9;\n                    fcn.004320e0();\ncode_r0x004087d9:\n                    *(*0x20 + -0x130) = 0x4087e5;\n                    fcn.0045c660(arg1_00);\ncode_r0x004087e5:\n                    *(*0x20 + -0x130) = 0x4087ed;\n                    uVar2 = fcn.0045c5e0(arg1_00, param_2);\n                }\n                *(*0x20 + -0x130) = 0x4087f5;\n                fcn.0045c5e0(uVar2, param_2);\n            }\n            unaff_RBX = 0x4af952;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x408818;\n            fcn.00448ba0(0x13);\n            *(*0x20 + -0x130) = 0x40881d;\n            fcn.004320e0();\n        }\n        *(puVar5 + -8) = 0x408825;\n        fcn.00459ea0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2146
    },
    "0041cf40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0041cf40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    fcn.0045de80();\n    fcn.0044c9e0(*(*0x7358b8 + 0x10), *(*0x7358b8 + 0x10), *(*0x7358b8 + 0x28), *(*0x7358b8 + 0x30));\n    *0x7358b0 = 1;\n    fcn.004349e0(0x13);\n    fcn.0045de80();\n    return 0;\n}\n",
        "token_count": 190
    },
    "0041e440": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e440(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x0041e6c8;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x41e4f1;\n                        iVar2 = fcn.0041e140(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x41e6c8;\n                    fcn.0045c5a0(8);\ncode_r0x0041e6c8:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x41e6d5;\n                    fcn.0045c5a0(8);\n                }\n                *(*0x20 + -0x50) = 0x41e6da;\n                fcn.00433860();\n                *(*0x20 + -0x50) = 0x41e6eb;\n                fcn.00434160();\n                *(*0x20 + -0x50) = 0x41e6f5;\n                fcn.00433e60();\n                *(*0x20 + -0x50) = 0x41e6fa;\n                fcn.00433ac0();\n                *(*0x20 + -0x50) = 0x41e6ff;\n                fcn.004338e0();\n                *(*0x20 + -0x50) = 0x41e710;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x50) = 0x41e715;\n            fcn.00433860();\n            *(*0x20 + -0x50) = 0x41e726;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x41e730;\n            fcn.00433e60();\n            *(*0x20 + -0x50) = 0x41e735;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x41e73a;\n            fcn.004338e0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x41e74b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x41e765;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x41e53e;\n    uVar4 = fcn.0041e140(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x41e60f;\n            uVar3 = fcn.0041e140();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x789730) && (*0x789738 < *0x789730)) &&\n        (uVar6 = -(*0x789730 >> 0xd),  ((uVar8 + (*0x789730 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2110
    },
    "00422440": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.00422440(uchar param_1)\n\n{\n    char unaff_DIL;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t iStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iStack56 = 0;\n    uStack48 = 0x422580;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&iStack56, auStack24._0_8_);\n    fcn.00459d60();\n    if (iStack56 != 0) {\n        if ((unaff_DIL != '\\0') && (*(iStack56 + 100) != '\\0')) {\n            fcn.0045cc20(*(iStack56 + 0x18));\n        }\n        *(iStack56 + 100) = 0;\n        return iStack56;\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "004249e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004249e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x424a34;\n            fcn.00426c80(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x424aa5;\n            fcn.004294c0();\n            *(*0x20 + -0x70) = 0x424ac5;\n            fcn.004299a0(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar5 = *(*0x20 + -0x28);\n            uVar3 = *(*0x20 + -0x20);\ncode_r0x00424b4b:\n            if (uVar5 <= uVar3) {\n                *(*0x20 + -0x70) = 0x424bde;\n                fcn.00424c40(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar5 = uVar3 >> 0xd;\n            if (0x1fff < uVar5) goto code_r0x00424bf9;\n            *(*0x20 + -0x30) = uVar3;\n            if (*(iVar2 + 0x78 + uVar5 * 8) != 0) {\ncode_r0x00424b07:\n                *(*0x20 + -0x70) = 0x424b30;\n                fcn.004278a0(0x200);\n                uVar3 = *(*0x20 + -0x30) + 1;\n                uVar5 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x00424b4b;\n            }\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x10) = iVar2 + uVar5 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x424ba5;\n            iVar2 = fcn.00414140();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00424b07;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x424bf9;\n            fcn.004320e0();\ncode_r0x00424bf9:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x424c06;\n            in_RAX = fcn.0045c5c0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x424c1b;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1333
    },
    "00425220": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00425220(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX + arg1 * 0x2000;\n            uVar8 = unaff_RBX + 0x800000000000;\n            uVar9 = uVar8 >> 0x16;\n            uVar5 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar6 = uVar5 >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar7 = (iVar3 - 1U & 0x3fffff) >> 0xd;\n            if (uVar6 == uVar9) {\n                if (0x1fff < uVar8 >> 0x23) {\n                    *(*0x20 + -0x88) = 0x425425;\n                    uVar5 = fcn.0045c5c0(0x2000);\n                    goto code_r0x00425425;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar8 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar9 & 0x1fff) << 7;\n                iVar3 = (uVar7 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x88) = 0x4253af;\n                uVar2 = fcn.00427b20(iVar3);\n                *(*0x20 + -0x50) = uVar2;\n                *(*0x20 + -0x88) = 0x4253d3;\n                fcn.00428240(*(*0x20 + -0x48));\n                iVar3 = *(*0x20 + -0x50);\ncode_r0x004253d8:\n                *(*0x20 + -0x60) = iVar3;\n                *(*0x20 + -0x88) = 0x425405;\n                fcn.00424c40(*(*0x20 + 0x18));\n                return *(*0x20 + -0x60) << 0xd;\n            }\n            if (uVar8 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar9;\n                *(*0x20 + -0x28) = uVar5;\n                *(*0x20 + -0x30) = uVar7;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar8 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar9 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x88) = 0x42531c;\n                uVar2 = fcn.00427b20(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar2;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x425345;\n                fcn.00428240(*(*0x20 + -0x48));\n                iVar1 = *(*0x20 + -0x20);\n                uVar6 = *(*0x20 + 8);\n                uVar5 = *(*0x20 + -0x38);\n                iVar3 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar1 + 1;\n                    *(*0x20 + -0x60) = iVar3;\n                    if (uVar5 <= in_RDX) break;\n                    uVar5 = in_RDX >> 0xd;\n                    if (0x1fff < uVar5) goto code_r0x00425547;\ncode_r0x00425425:\n                    *(*0x20 + -0x58) = in_RDX;\n                    *(*0x20 + -0x10) = *(uVar6 + 0x78 + uVar5 * 8);\n                    *(*0x20 + -0x40) = (in_RDX & 0x1fff) << 7;\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x88) = 0x42545a;\n                    uVar2 = fcn.00427b20(0x200);\n                    *(*0x20 + -0x48) = uVar2;\n                    *(*0x20 + -0x88) = 0x425474;\n                    fcn.004282c0();\n                    iVar1 = *(*0x20 + -0x58);\n                    iVar3 = *(*0x20 + -0x60) + *(*0x20 + -0x48);\n                    uVar6 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                if (*(*0x20 + -0x28) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = *(uVar6 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                    *(*0x20 + -0x40) = (uVar5 & 0x1fff) << 7;\n                    *(*0x20 + -0x48) = *(*0x20 + -0x30) + 1;\n                    *(*0x20 + -0x88) = 0x425509;\n                    uVar2 = fcn.00427b20(*(*0x20 + -0x30) + 1);\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x88) = 0x42552a;\n                    fcn.00428240(*(*0x20 + -0x48));\n                    iVar3 = *(*0x20 + -0x60) + *(*0x20 + -0x50);\n                    goto code_r0x004253d8;\n                }\n                *(*0x20 + -0x88) = 0x425547;\n                fcn.0045c5c0(0x2000);\ncode_r0x00425547:\n                *(*0x20 + -0x88) = 0x425551;\n                fcn.0045c5c0(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x88) = 0x42555e;\n            in_RAX = fcn.0045c5c0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x425573;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1950
    },
    "004275c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004275c0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x10078);\n            uVar2 = uVar3 + 0x800000000000;\n            uVar6 = uVar2 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar1 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar1 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x42763a;\n                    uVar2 = fcn.00425680();\n                    if (uVar2 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x71d2a0;\n                        return 0;\n                    }\n                    uVar3 = uVar2 + 0x800000000000 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        iVar1 = *(*(*0x20 + 8) + 0x78 + uVar3 * 8);\n                        iVar7 = (uVar2 + 0x800000000000 >> 0x16 & 0x1fff) * 0x80;\n                        arg1 = iVar1 + iVar7;\n                        uVar3 = (uVar2 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar6 = *(arg1 + uVar3 * 8);\n                            uVar2 = uVar2 & 0xfffffffffff80000;\n                            uVar4 = *(iVar1 + iVar7 + 0x40 + uVar3 * 8);\ncode_r0x004277b3:\n                            *(*0x20 + -0x40) = uVar4;\n                            *(*0x20 + -0x38) = ~uVar6;\n                            *(*0x20 + -0x30) = uVar2;\n                            *(*0x20 + -0x68) = 0x4277d2;\n                            fcn.00425220(0x40);\n                            *(*0x20 + -0x68) = 0x4277ed;\n                            fcn.00424c40(0x40);\n                            iVar1 = *(*0x20 + -0x30);\n                            *(*(*0x20 + 8) + 0x10078) = iVar1 + 0x7e000;\n                            return iVar1;\n                        }\n                        goto code_r0x00427852;\n                    }\n                }\n                else {\n                    uVar2 = uVar2 >> 0x23;\n                    if (uVar2 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar1 = *(in_RAX + 0x78 + uVar2 * 8);\n                        *(*0x20 + -0x10) = iVar1;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        arg1 = iVar1 + iVar7;\n                        *(*0x20 + -0x18) = arg1;\n                        *(*0x20 + -0x68) = 0x427745;\n                        uVar2 = fcn.00427f40((uVar3 & 0x3fffff) >> 0xd);\n                        if (uVar2 != 0xffffffffffffffff) {\n                            uVar3 = uVar2 >> 6;\n                            if (uVar3 < 8) {\n                                uVar2 = (*(*0x20 + -0x20) * 0x400000 + (uVar2 & 0xffffffffffffffc0) * 0x2000) -\n                                        0x800000000000;\n                                uVar6 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                uVar4 = *(*(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40 + uVar3 * 8);\n                                goto code_r0x004277b3;\n                            }\n                            *(*0x20 + -0x68) = 0x427834;\n                            fcn.0045c5c0(8);\n                        }\n                        *(*0x20 + -0x68) = 0x427845;\n                        fcn.004320e0();\n                    }\n                    *(*0x20 + -0x68) = 0x427852;\n                    fcn.0045c5c0(0x2000);\ncode_r0x00427852:\n                    *(*0x20 + -0x68) = 0x42785c;\n                    fcn.0045c5c0(8);\n                }\n                *(*0x20 + -0x68) = 0x427869;\n                fcn.0045c5c0(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x427874;\n            in_RAX = fcn.0045c5c0(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42787f;\n        fcn.0045e5a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1454
    },
    "00428100": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00428100(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "004282c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004282c0(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004279c0();\n    fcn.00427b00(in_RAX);\n    return;\n}\n",
        "token_count": 100
    },
    "0042c420": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042c420(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.0042bb00(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042ba40(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x49e900;\n            uStack16 = 0x69e4c0;\n            fcn.00458020(1);\n            fcn.0042e7a0();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0042d860": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042d860(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42d8c5;\n                fcn.0042e8a0();\n                return;\n            }\n            *(*0x20 + -0x50) = 0x42d8f4;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42d90e;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 563
    },
    "0042ebc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042ebc0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e920();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 129
    },
    "00432440": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00432440(void)\n\n{\n    fcn.00459d60();\n    fcn.00459d60();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 43
    },
    "00434160": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00434160(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433940(unaff_RBX);\n    return;\n}\n",
        "token_count": 91
    },
    "00448ba0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448ba0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00448900(2);\n    return;\n}\n",
        "token_count": 86
    },
    "00448c40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448c40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00448900(3);\n    return;\n}\n",
        "token_count": 124
    },
    "00448d20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448d20(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00448900(4);\n    return;\n}\n",
        "token_count": 124
    },
    "004491e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004491e0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x50) = 0x449245;\n                    fcn.00455cc0(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x004492a2:\n                *(*0x20 + -0x50) = 0x4492aa;\n                iVar2 = fcn.004498a0();\n                uVar4 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x004492ba:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = uVar7;\n                *(*0x20 + -0x28) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = uVar7;\n                        *(*0x20 + -0x50) = 0x449305;\n                        uVar1 = fcn.00455cc0(uVar3);\n                        uVar5 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x50) = 0x44934c;\n                fcn.0045c5a0(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x004492a2;\n                *(*0x20 + -0x58) = unaff_RBP;\n                *(*0x20 + -0x50) = 0x44928f;\n                iVar2 = fcn.0045c842();\n                unaff_RBP = *(*0x20 + -0x58);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x004492ba;\n                }\n            }\n            *(*0x20 + -0x50) = 0x449359;\n            in_RAX = fcn.0045c5e0(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x44936e;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1281
    },
    "00449660": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00449660(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = fcn.0040b560(0);\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "0044ef20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ef20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    ulong *puVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x44ef6b;\n            uVar4 = fcn.0045bfc0(arg1 << 3);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0x50) = 0x44ef8c;\n            uVar5 = fcn.0044f100(*(*0x20 + 0x18));\n            if (uVar5 != 0) {\n                return uVar5;\n            }\n            *(*0x20 + -0x50) = 0x44efa5;\n            fcn.00409e80();\n            unaff_RDI = *(*0x20 + 0x20);\n            *(*0x20 + -0x50) = 0x44efc5;\n            iVar3 = fcn.0044f100(*(*0x20 + 0x18));\n            if (iVar3 != 0) {\n                *(*0x20 + -0x1c) = iVar3;\n                *(*0x20 + -0x50) = 0x44f026;\n                fcn.0040a0a0();\n                return *(*0x20 + -0x1c);\n            }\n            *(*(*0x20 + 8) + 8) = *(*(*0x20 + 8) + 8) + 1;\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x50) = 0x44efdb;\n            puVar6 = fcn.0044f1a0();\n            uVar5 = *(*0x20 + -0x18);\n            puVar6[1] = uVar5;\n            iVar1 = *(*0x20 + 8);\n            *(puVar6 + 2) = *(iVar1 + 8);\n            arg1 = *(*0x20 + 0x18);\n            puVar6[3] = arg1;\n            if (arg1 < 0x81) {\n                iVar2 = *(*0x20 + 0x10);\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    puVar6[iVar7 + 4] = *(iVar2 + iVar7 * 8);\n                }\n                *(*0x20 + -0x10) = puVar6;\n                uVar5 = uVar5 & 0x1fff;\n                *puVar6 = *(iVar1 + 0x20 + uVar5 * 8);\n                *(*0x20 + -0x50) = 0x44f085;\n                fcn.004031a0(iVar1 + uVar5 * 8 + 0x20);\n                *(*0x20 + -0x50) = 0x44f091;\n                fcn.0040a0a0();\n                return *(*(*0x20 + -0x10) + 0x10);\n            }\n            *(*0x20 + -0x50) = 0x44f0b0;\n            in_RAX = fcn.0045c5e0(arg1, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x44f0ca;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1171
    },
    "0044f920": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044f920(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044e500(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044e500(auStack24);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0044fa40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044fa40(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x73b7c0)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    auStack24 = CONCAT88(in_RAX >> 6, *(iVar1 + 0xd8));\n    fcn.0044e500(&uStack32);\n    return;\n}\n",
        "token_count": 261
    },
    "00451ca0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00451ca0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 0xc);\n            arg2 = uVar1;\n            uVar6 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar6;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar6;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x28) = uVar6;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x451d05;\n            fcn.0044ae60();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x50) = 0x451d3a;\n                cVar3 = fcn.004025e0(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x00451d8e;\n                *(*0x20 + -0x50) = 0x451d25;\n                cVar3 = fcn.004025e0(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x00451d8e:\n                return *(*0x20 + -0x28);\n            }\n            arg1 = *(*0x20 + 0x28);\n            if (arg1 == NULL) {\n                arg1 = **(*(*0x20 + 8) + 0x28);\n                cVar3 = *(*(*(*0x20 + 8) + 0x28) + 4);\n            }\n            else {\n                cVar3 = '\\0';\n            }\n            unaff_RSI = *(*0x20 + -0x18);\n            if (*unaff_RSI == *arg1) {\n                if (cVar3 == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x50) = 0x451db9;\n            uVar4 = fcn.0044ae60();\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x30) = uVar2;\n            *(*0x20 + -0x50) = 0x451dc8;\n            fcn.00433860();\n            *(*0x20 + -0x50) = 0x451dd9;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x451de8;\n            fcn.00434160();\n            *(*0x20 + -0x50) = 0x451ded;\n            fcn.00433ac0();\n            *(*0x20 + -0x50) = 0x451df2;\n            fcn.004338e0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x50) = 0x451e05;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        puVar5[0x20] = unaff_DIL;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + -8) = 0x451e25;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_DIL = puVar5[0x20];\n        unaff_RSI = *(puVar5 + 0x28);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1186
    },
    "0045c700": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c700(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4585
    },
    "0045c74e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c74e(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "0045c798": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c798(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "0045c7a1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c7a1(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2633
    },
    "0045c7b8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c7b8(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2343
    },
    "0045c7dd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c7dd(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2053
    },
    "0045c7f4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c7f4(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1724
    },
    "0045c80b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c80b(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1403
    },
    "0045c822": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c822(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1085
    },
    "0045c839": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c839(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 775
    },
    "0045c850": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045c850(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 459
    },
    "0045e720": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0045e720(ulong arg1)\n\n{\n    ulong uStack32;\n    \n    fcn.00458960();\n    return uStack32;\n}\n",
        "token_count": 37
    },
    "00468c00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00468c00(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4ac9c7;\n                }\n                *(*0x20 + -0x3c) = 0;\n                *(*0x20 + -0x38) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x00468d25;\n            *(*0x20 + -0x50) = 0;\n            *(*0x20 + -0x4c) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x00468dd2;\n                *(*0x20 + (uVar4 - 0x50)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x00468d8e;\n            *(*0x20 + -0x80) = 0x468dd2;\n            fcn.0045c5a0(0x14);\ncode_r0x00468dd2:\n            *(*0x20 + -0x80) = 0x468ddf;\n            in_RAX = fcn.0045c5a0(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x468dea;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x00468ca0:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x00468ccf;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x00468d15;\n    *(*0x20 + (uVar2 - 0x3c)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x00468ca0;\ncode_r0x00468d8e:\n    *(*0x20 + (uVar4 - 0x50)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x468db9;\n    fcn.00448f60(-(uVar4 - 0x14));\n    goto code_r0x00468d25;\ncode_r0x00468ccf:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x3c)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x468cfd;\n        uVar3 = fcn.00448f60(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x468d15;\n    fcn.0045c5a0(0x14);\ncode_r0x00468d15:\n    *(*0x20 + -0x80) = 0x468d25;\n    fcn.0045c5a0(0x14);\ncode_r0x00468d25:\n    *(*0x20 + -0x80) = 0x468d3e;\n    uVar3 = fcn.00448ba0(1);\n    return uVar3;\n}\n",
        "token_count": 1033
    },
    "0046da40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046da40(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x46da65;\n            uVar2 = fcn.0046fd80();\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0046da79;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0046da79:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x46dab6;\n                    uVar3 = fcn.00445140(unaff_RBX);\n                    arg1_00 = *(*0x20 + -0x20);\n                    if (arg1_00 == 0) break;\n                    *(*0x20 + -0x10) = uVar3;\n                    arg1 = *(*0x20 + -0x24);\n                    *(*0x20 + -0x50) = 0x46dadf;\n                    uVar1 = fcn.004723e0(arg1);\n                    if ((((uVar1 == 0) && (uVar3 != 0)) && (*(uVar3 + 8) == 0x4a1100)) && (*arg1 == 0xcb)) {\n                        return 0;\n                    }\n                    unaff_RDI = *(*0x20 + -0x24);\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg1_00 = uVar1;\n                        arg2 = *(*0x20 + -0x20);\n                        if (arg1_00 <= arg2) {\n                            *(*0x20 + -0x50) = 0x46db48;\n                            fcn.0046cd80(arg2);\n                            *(*0x20 + -0x50) = 0x46db58;\n                            uVar2 = fcn.004493a0(arg1_00);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x46db6c;\n                        fcn.0045c620(arg1_00, arg2);\n                        unaff_RBX = uVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x46db73;\n                fcn.0045c5a0(arg1_00);\n            }\n            *(*0x20 + -0x50) = 0x46db7d;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46db8d;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 969
    },
    "0046e820": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046e820(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x46e845;\n            uVar2 = fcn.0046fd80();\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0046e860;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0046e860:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x46e8a5;\n                    uVar2 = fcn.00445140(unaff_RBX);\n                    arg1 = *(*0x20 + -0x20);\n                    if (arg1 == 0) break;\n                    *(*0x20 + -0x10) = uVar2;\n                    unaff_RBX = *(*0x20 + -0x24);\n                    unaff_RDI = 0;\n                    *(*0x20 + -0x50) = 0x46e8c7;\n                    uVar1 = fcn.00472820(uVar2);\n                    if (unaff_RBX != 0) {\n                        return 0;\n                    }\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg1 = uVar1;\n                        arg2 = *(*0x20 + -0x20);\n                        if (arg1 <= arg2) {\n                            *(*0x20 + -0x50) = 0x46e8f5;\n                            uVar2 = fcn.0046fe60(arg2);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x46e91c;\n                        fcn.0045c620(arg1, arg2);\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x46e925;\n                fcn.0045c5a0(arg1);\n            }\n            *(*0x20 + -0x50) = 0x46e92f;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46e93f;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 862
    },
    "0046fee0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046ff89)\n// WARNING: Removing unreachable block (ram,0x0046ffb5)\n\nulong fcn.0046fee0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x7331c0);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = 0;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x46ff4f;\n            uVar2 = fcn.0045c798();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x46ff78;\n            uVar3 = fcn.00471ce0(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x00470085;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x47005b;\n                fcn.0046cd80(300);\n                *(*0x20 + -0x2a0) = 0x47006b;\n                uVar2 = fcn.004493a0(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x470085;\n            fcn.0045c620(uVar4, 300);\ncode_r0x00470085:\n            *(*0x20 + -0x2a0) = 0x470091;\n            in_RAX = fcn.0045c5a0(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x47009c;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 761
    },
    "00471160": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00471160(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x734da8;\n            *(*0x20 + -0x50) = 0x471197;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x4711d1;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x47120c;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x471237;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x471247;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00472020": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472020(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x734f40;\n            *(*0x20 + -0x50) = 0x472057;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x472091;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x4720cc;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x4720f7;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x472107;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00472120": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472120(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x734f48;\n            *(*0x20 + -0x50) = 0x472156;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 8);\n                *(*0x20 + -0x50) = 0x472188;\n                uVar2 = fcn.0045e720(arg1);\n                if (((uVar2 == 0) && (arg1 != 0)) && (arg1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x4721c8;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x4721f8;\n            in_EAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x472207;\n        fcn.00459ea0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 555
    },
    "00472500": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472500(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = *0x734f78;\n            *(*0x20 + -0x50) = 0x47253b;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x47257f;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x4725c5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x4725f0;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x472605;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 649
    },
    "00472620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472620(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x734f88;\n            *(*0x20 + -0x50) = 0x472657;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x472691;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x4726cc;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x4726f7;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x472707;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00472720": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472720(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x734f90;\n            *(*0x20 + -0x50) = 0x472752;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x47277c;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x4727c6;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x4727f6;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x472805;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 475
    },
    "00472980": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00472980(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x734fe8;\n            *(*0x20 + -0x50) = 0x4729b2;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x4729dc;\n                iVar2 = fcn.0045e720(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x472a26;\n                    fcn.00409700();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x472a56;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x472a65;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 476
    },
    "00472a80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472a80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x734ff0;\n            *(*0x20 + -0x50) = 0x472ab6;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x50) = 0x472ae8;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x472b28;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x472b58;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x472b67;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 544
    },
    "00472b80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00472b80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x735008;\n            *(*0x20 + -0x50) = 0x472bb2;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x50) = 0x472be5;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x472c26;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x472c56;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x472c65;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "004803c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00480689)\n\nuchar fcn.004803c0(ulong arg1, ulong noname_1, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t arg1_00;\n    int64_t unaff_RSI;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    int64_t iStack0000000000000038;\n    uchar auStack64 [16];\n    int64_t iStack48;\n    ulong uStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    iStack0000000000000028 = unaff_RSI;\n    uStack0000000000000030 = arg3;\n    iStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    ppcStack16 = NULL;\n    iVar5 = 0x20019;\n    uVar3 = fcn.00478f80(arg1);\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    auStack64 = CONCAT88(uVar3, 0x4807a0);\n    ppcStack16 = auStack64;\n    iVar4 = fcn.0046d820(*0x734bd8);\n    if (iVar4 == 0) {\n        iVar4 = 7;\n        iVar5 = fcn.00479640(7);\n        if (iVar4 == 0) {\n            iVar4 = 7;\n            iStack48 = iVar5;\n            uVar3 = fcn.00479640(7);\n            arg2 = 0x4ad0f3;\n            iVar5 = iStack48;\n        }\n        else {\n            arg2 = 0;\n            uVar3 = 0;\n        }\n        arg1_00 = 0x4ad0fa;\n    }\n    else {\n        arg1_00 = 0;\n        arg2 = 0;\n        uVar3 = 0;\n    }\n    if (iVar4 != 0) {\n        iVar4 = fcn.00479520(3);\n        if (iVar5 != 0) {\n            auStack32 = CONCAT88(uVar3, iVar5);\n            (**ppcStack16)();\n            return 0;\n        }\n        iStack48 = iVar4;\n        uVar3 = fcn.00479520(3);\n        arg2 = 0x4acad3;\n        arg1_00 = 0x4acb2a;\n    }\n    if ((iStack0000000000000028 == arg1_00) &&\n       (iVar5 = arg2,  uStack40 = uVar3,  cVar1 = fcn.004025e0(arg1_00, arg2),  cVar1 != '\\0')) {\n        if (iStack0000000000000038 == arg2) {\n            uVar2 = fcn.004025e0(arg2, iVar5);\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            uVar2 = 1;\n        }\n        if (uVar2 == 0) {\n            uVar2 = 0;\n        }\n        else if (iStack0000000000000038 == iStack0000000000000028) {\n            uVar2 = fcn.004025e0(iStack0000000000000038, iVar5);\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            uVar2 = 1;\n        }\n        if (uVar2 == 0) {\n            (**ppcStack16)();\n            return 1;\n        }\n        (**ppcStack16)();\n        return 0;\n    }\n    (**ppcStack16)();\n    return 0;\n}\n",
        "token_count": 925
    },
    "00481da0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00481da0(void)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            iVar4 = 0;\n            arg1 = 0;\n            while (iVar4 < 0xd) {\n                uVar1 = *(iVar4 + 0x4ae2fc);\n                if (uVar1 < 0x80) {\n                    iVar2 = iVar4;\n                    iVar4 = iVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x38) = iVar4;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x60) = 0x481e1a;\n                    uVar1 = fcn.00455cc0(iVar4);\n                    iVar2 = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar4 = 0xd;\n                    in_EAX = *(*0x20 + 8);\n                }\n                if ((in_EAX & 1 << (-(iVar2 + -0x1f) & 0x1f) & -(-(iVar2 + -0x1f) < 0x20)) != 0) {\n                    if (0x1f < arg1) goto code_r0x00481f68;\n                    *(*0x20 + (arg1 - 0x28)) = uVar1;\n                    arg1 = arg1 + 1;\n                }\n            }\n            if (arg1 == 0) {\n                *(*0x20 + -0x28) = 0x2d;\n                arg1 = 1;\n            }\n            iVar4 = 0;\n            while (iVar4 < 9) {\n                uVar1 = *(iVar4 + 0x4ad749);\n                if (uVar1 < 0x80) {\n                    iVar2 = iVar4;\n                    iVar4 = iVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x60) = 0x481ec8;\n                    uVar1 = fcn.00455cc0(iVar4);\n                    iVar2 = *(*0x20 + -0x30);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar4 = 9;\n                    in_EAX = *(*0x20 + 8);\n                }\n                if ((in_EAX & 1 << (-(iVar2 + -8) & 0x1f) & -(-(iVar2 + -8) < 0x20)) == 0) {\n                    if (0x1f < arg1) goto code_r0x00481f4e;\n                    *(*0x20 + (arg1 - 0x28)) = 0x2d;\n                }\n                else {\n                    if (0x1f < arg1) goto code_r0x00481f5b;\n                    *(*0x20 + (arg1 - 0x28)) = uVar1;\n                }\n                arg1 = arg1 + 1;\n            }\n            if (arg1 < 0x21) {\n                *(*0x20 + -0x60) = 0x481f36;\n                fcn.00448f60(arg1);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x481f4e;\n            fcn.0045c5e0(arg1, 0x20);\ncode_r0x00481f4e:\n            *(*0x20 + -0x60) = 0x481f5b;\n            fcn.0045c5a0(0x20);\ncode_r0x00481f5b:\n            *(*0x20 + -0x60) = 0x481f68;\n            fcn.0045c5a0(0x20);\ncode_r0x00481f68:\n            *(*0x20 + -0x60) = 0x481f75;\n            in_EAX = fcn.0045c5a0(0x20);\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + -8) = 0x481f7f;\n        fcn.00459ea0();\n        in_EAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1188
    },
    "00482a00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00482a00(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = *0x734b40;\n            *(*0x20 + -0x50) = 0x482a3b;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x482a7f;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e350;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e360,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x482ac5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x482af0;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x482b05;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 656
    },
    "00482b20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00482b20(uchar param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x734ac0;\n            *(*0x20 + -0x50) = 0x482b5b;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x50) = 0x482b97;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e350;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e360,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x482bd6;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x482c05;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x482c19;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 621
    },
    "0041b060": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041b060(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041b060:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041b0f9:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41b15c;\n                    iVar3 = fcn.00421860();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x30) < arg3 || *(iVar3 + 0x30) == arg3) &&\n                           ((*((uVar4 >> 0x23) + *(iVar3 + 0x48)) & 1 << (uVar4 >> 0x20 & 7)) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41b1f6;\n                            fcn.0041b320(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41b12c;\n                    fcn.0041e780(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041b246;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041b0f9;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041b258;\ncode_r0x0041b246:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41b257;\n    in_RAX = fcn.004320e0();\ncode_r0x0041b258:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41b276;\n    fcn.00459ea0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041b060;\n}\n",
        "token_count": 1526
    },
    "00449a80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint64_t fcn.00449a80(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x00449b39;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x00449b39:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 393
    },
    "00453d60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00453d60(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "00455000": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.00455000(uint64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t *noname_0;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (puVar14 = *0x20,  *0x20 + -0xa0 < *(unaff_R14 + 0x10) || *0x20 + -0xa0 == *(unaff_R14 + 0x10)) {\ncode_r0x00455c7e:\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x455c92;\n        fcn.00459ea0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    }\n    puVar14 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x20) = arg1;\n    *(*0x20 + -0x18) = in_RAX;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *(*0x20 + -0x128) = 0x455068;\n    fcn.0040cf00(*0x20 + -0x18);\n    if (arg1 != '\\0') {\n        return 1;\n    }\n    *(*0x20 + -0x18) = *(*0x20 + 8);\n    *(*0x20 + -0x10) = *(*0x20 + 0x10);\n    *(*0x20 + -0x128) = 0x4550ac;\n    fcn.0040d140(*0x20 + -0x18);\n    iVar12 = *(*0x20 + 0x10);\n    if (*(*0x20 + 8) == iVar12) {\n        return 1;\n    }\n    uVar3 = *(*(*0x20 + 8) + 0x17);\n    if ((*(iVar12 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n        return 0;\n    }\n    *(*0x20 + -0x105) = uVar3;\n    *(*0x20 + -0x106) = uVar3 & 0x1f;\n    *(*0x20 + -0x128) = 0x4550f6;\n    uVar8 = fcn.00453cc0();\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xb8) = uVar3;\n    *(*0x20 + -0x128) = 0x455110;\n    unaff_RBX = fcn.00453cc0();\n    if (uVar3 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45512a;\n    cVar7 = fcn.004025e0(*(*0x20 + -0xb8), iVar12);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45514e;\n    uVar8 = fcn.00453d60();\n    *(*0x20 + -0x80) = uVar8;\n    *(*0x20 + -0x128) = 0x455165;\n    iVar9 = fcn.00453d60();\n    noname_0 = *(*0x20 + -0x80);\n    if (noname_0 == NULL) {\n        if (iVar9 != 0) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            return 0;\n        }\n        *(*0x20 + -0x88) = iVar9;\n        uVar6 = *noname_0;\n        *(*0x20 + -0x128) = 0x4551b3;\n        fcn.00453ea0();\n        *(*0x20 + -0x128) = 0x4551b8;\n        uVar8 = fcn.00454700(noname_0, iVar12, in_R8, in_R9);\n        *(*0x20 + -0x68) = uVar8;\n        *(*0x20 + -0xf0) = uVar6;\n        uVar6 = **(*0x20 + -0x88);\n        uVar15 = uVar6;\n        *(*0x20 + -0x128) = 0x4551de;\n        fcn.00453ea0();\n        *(*0x20 + -0x128) = 0x4551e5;\n        unaff_RBX = fcn.00454700(uVar15, iVar12, in_R8, in_R9);\n        if (uVar6 != *(*0x20 + -0xf0)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x455205;\n        cVar7 = fcn.004025e0(*(*0x20 + -0xf0), iVar12);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n    }\n    uVar3 = *(*0x20 + -0x106);\n    if (uVar3 - 1 < 0x10) {\n        return 1;\n    }\n    if (uVar3 < 0x16) {\n        if (0x12 < uVar3) {\n            if (uVar3 == 0x13) {\n                iVar12 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar12 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar12 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar12 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar12 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    iVar9 = in_R8 + iVar9;\n                    *(*0x20 + -0xa0) = iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar15 = 0;\n                    while (uVar16 = uVar5,  uVar15 < arg1) {\n                        if (uVar16 <= uVar15) goto code_r0x00455c6c;\n                        *(*0x20 + -0xd0) = uVar15;\n                        iVar11 = *(iVar9 + uVar15 * 8);\n                        *(*0x20 + -0x128) = 0x455afe;\n                        cVar7 = fcn.00455000(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00455a9d:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar9 = *(*0x20 + -0xa0);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar12 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        unaff_RBX = iVar11;\n                        uVar15 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar12 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar12 + 0x30);\n                    uVar15 = (*(iVar12 + 0x32) & 0x7fff) + *(iVar12 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar15) {\n                        iVar11 = uVar15 - uVar16;\n                        iVar12 = iVar12 + iVar9 + (uVar16 << 3 & uVar16 - 0x100000 >> 0x3f);\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar15 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x100) = iVar11;\n                            *(*0x20 + -0xa8) = iVar12;\n                            uVar15 = uVar15 - uVar16;\n                            *(*0x20 + -0xf8) = uVar15;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar10 = 0;\n                            while( true ) {\n                                if (iVar11 <= uVar10) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar12 + uVar10 * 8);\n                                if (uVar15 <= uVar10) break;\n                                *(*0x20 + -0xe0) = uVar10;\n                                unaff_RBX = *(uVar16 + uVar10 * 8);\n                                *(*0x20 + -0x128) = 0x455c25;\n                                cVar7 = fcn.00455000(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar10 = *(*0x20 + -0xe0) + 1;\n                                iVar11 = *(*0x20 + -0x100);\n                                uVar15 = *(*0x20 + -0xf8);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar12 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x455c58;\n                            fcn.0045c5a0(uVar15);\n                        }\n                        *(*0x20 + -0x128) = 0x455c65;\n                        fcn.0045c660(uVar15);\n                    }\n                    *(*0x20 + -0x128) = 0x455c6c;\n                    fcn.0045c660(uVar15);\ncode_r0x00455c6c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x455c73;\n                    fcn.0045c5a0(arg1);\n                }\n                *(*0x20 + -0x128) = 0x455c7d;\n                in_RAX = fcn.0045c5e0(arg1, 0x100000);\n                goto code_r0x00455c7e;\n            }\n            if (uVar3 != 0x14) {\n                *(*0x20 + -0x128) = 0x4553bb;\n                cVar7 = fcn.00455000(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar15 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x4553e8;\n                    uVar15 = fcn.00455000(*(*0x20 + -0x20));\n                }\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x455306;\n            uVar8 = fcn.00454700(*(*0x20 + 8), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x455327;\n            iVar11 = fcn.00454700(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (unaff_RBX == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x455345;\n                cVar7 = fcn.004025e0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar12 = *(*0x20 + 8);\n                    iVar9 = *(iVar12 + 0x40);\n                    iVar13 = *(*0x20 + 0x10);\n                    if (*(iVar13 + 0x40) != iVar9) {\n                        return 0;\n                    }\n                    *(*0x20 + -0xb8) = iVar9;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (iVar9 <= uVar15) {\n                            return 1;\n                        }\n                        iVar9 = *(iVar12 + 0x38);\n                        uVar16 = *(iVar12 + 0x40);\n                        if (uVar16 <= uVar15) break;\n                        iVar12 = iVar9 + uVar15 * 8;\n                        uVar16 = *(iVar13 + 0x40);\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x128) = 0x455a98;\n                            fcn.0045c5a0(uVar16);\n                            break;\n                        }\n                        *(*0x20 + -0x40) = *(iVar13 + 0x38);\n                        *(*0x20 + -0x48) = iVar9;\n                        *(*0x20 + -0xd8) = uVar15;\n                        *(*0x20 + -0x78) = iVar12;\n                        *(*0x20 + -0x128) = 0x455907;\n                        uVar8 = fcn.00453ea0();\n                        *(*0x20 + -0x50) = uVar8;\n                        iVar11 = *(*0x20 + -0xd8);\n                        iVar13 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x90) = iVar13 + iVar11 * 8;\n                        uVar16 = *(iVar13 + iVar11 * 8);\n                        *(*0x20 + -0x128) = 0x455933;\n                        uVar8 = fcn.00453ea0();\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x128) = 0x455948;\n                        uVar8 = fcn.00454700(iVar11, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0xc0) = uVar16;\n                        *(*0x20 + -0x128) = 0x455965;\n                        iVar11 = fcn.00454700(iVar11, iVar13, iVar9, iVar12);\n                        uVar15 = *(*0x20 + -0xc0);\n                        if (uVar16 != uVar15) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x455985;\n                        cVar7 = fcn.004025e0(uVar15, iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x45599a;\n                        uVar8 = fcn.004548c0(uVar15, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0xc0) = iVar11;\n                        *(*0x20 + -0x128) = 0x4559b4;\n                        fcn.004548c0(uVar15, iVar13, iVar9, iVar12);\n                        if (iVar11 != *(*0x20 + -0xc0)) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x4559d9;\n                        cVar7 = fcn.004025e0(*(*0x20 + -0xc0), iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x4559fb;\n                        uVar8 = fcn.00454140();\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0x128) = 0x455a25;\n                        iVar11 = fcn.00454140();\n                        *(*0x20 + -0x128) = 0x455a3d;\n                        cVar7 = fcn.00455000(*(*0x20 + -0x20));\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00455890:\n                        uVar15 = *(*0x20 + -0xd8) + 1;\n                        iVar9 = *(*0x20 + -0xb8);\n                        iVar13 = *(*0x20 + 0x10);\n                        iVar12 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x128) = 0x455a9d;\n                    fcn.0045c5a0(uVar16);\n                    goto code_r0x00455a9d;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x11) {\n            *(*0x20 + -0x128) = 0x455474;\n            cVar7 = fcn.00455000(*(*0x20 + -0x20));\n            if (cVar7 == '\\0') {\n                uVar15 = 0;\n            }\n            else {\n                uVar15 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                         *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n            }\n            return uVar15 & 0xffffffff;\n        }\n        if (uVar3 == 0x12) {\n            if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                *(*0x20 + -0x128) = 0x45543f;\n                uVar15 = fcn.00455000(*(*0x20 + -0x20));\n            }\n            else {\n                uVar15 = 0;\n            }\n            return uVar15;\n        }\n    }\n    else {\n        if (uVar3 < 0x18) {\n            if (uVar3 == 0x16) {\n                *(*0x20 + -0x128) = 0x4554da;\n                uVar15 = fcn.00455000(*(*0x20 + -0x20));\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x45550f;\n            uVar15 = fcn.00455000(*(*0x20 + -0x20));\n            return uVar15;\n        }\n        if (uVar3 == 0x18) {\n            return 1;\n        }\n        if (uVar3 == 0x19) {\n            iVar12 = *(*(*0x20 + 0x10) + 0x40);\n            iVar9 = *(*0x20 + 8);\n            if (*(iVar9 + 0x40) != iVar12) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x455557;\n            uVar8 = fcn.00454700(*(*0x20 + 0x10), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = iVar9;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x455578;\n            fcn.00454700(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (iVar9 == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x455595;\n                cVar7 = fcn.004025e0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar9 = *(*0x20 + 8);\n                    iVar11 = *(iVar9 + 0x40);\n                    *(*0x20 + -0xb8) = iVar11;\n                    iVar12 = *(*0x20 + 0x10);\n                    uVar15 = 0;\n                    goto code_r0x004556c3;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x1a) {\n            return 1;\n        }\n    }\n    *(*0x20 + -0x128) = 0x455665;\n    fcn.00433860();\n    *(*0x20 + -0x128) = 0x455676;\n    fcn.00434160();\n    *(*0x20 + -0x128) = 0x455685;\n    fcn.00433e60();\n    *(*0x20 + -0x128) = 0x45568a;\n    fcn.00433ac0();\n    *(*0x20 + -0x128) = 0x45568f;\n    fcn.004338e0();\n    *(*0x20 + -0x128) = 0x4556a5;\n    fcn.004320e0();\n    while( true ) {\n        uVar15 = *(*0x20 + -0xe8) + 1;\n        iVar11 = *(*0x20 + -0xb8);\n        iVar12 = *(*0x20 + 0x10);\n        iVar9 = *(*0x20 + 8);\ncode_r0x004556c3:\n        if (iVar11 <= uVar15) {\n            return 1;\n        }\n        uVar8 = *(iVar9 + 0x38);\n        uVar16 = *(iVar9 + 0x40);\n        if (uVar16 <= uVar15) break;\n        iVar13 = uVar15 * 3;\n        arg4 = *(iVar12 + 0x38);\n        uVar16 = *(iVar12 + 0x40);\n        if (uVar16 <= uVar15) {\n            *(*0x20 + -0x128) = 0x45588b;\n            fcn.0045c5a0(uVar16);\n            break;\n        }\n        *(*0x20 + -0xc0) = iVar13;\n        *(*0x20 + -0x30) = uVar8;\n        *(*0x20 + -0x38) = arg4;\n        *(*0x20 + -0xe8) = uVar15;\n        *(*0x20 + -0x128) = 0x455715;\n        uVar8 = fcn.00454700(uVar16, iVar9, iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar11;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x45573b;\n        fcn.00454700(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar11 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x455759;\n        cVar7 = fcn.004025e0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        iVar12 = *(*(*0x20 + -0x38) + 8 + *(*0x20 + -0xc0) * 8);\n        *(*0x20 + -0x128) = 0x455794;\n        cVar7 = fcn.00455000(*(*0x20 + -0x20));\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4557b2;\n        uVar8 = fcn.004547c0(*(*0x20 + -0xc0), *(*0x20 + -0x30), iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar12;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x4557d8;\n        fcn.004547c0(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar12 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4557f5;\n        cVar7 = fcn.004025e0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        if (*(*(*0x20 + -0x38) + 0x10 + *(*0x20 + -0xc0) * 8) != *(*(*0x20 + -0x30) + 0x10 + *(*0x20 + -0xc0) * 8)) {\n            return 0;\n        }\n    }\n    *(*0x20 + -0x128) = 0x455890;\n    fcn.0045c5a0(uVar16);\n    goto code_r0x00455890;\n}\n",
        "token_count": 6383
    },
    "00468f40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00468f40(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "0047f780": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047f92e)\n// WARNING: Removing unreachable block (ram,0x0047f91b)\n// WARNING: Removing unreachable block (ram,0x0047f941)\n\nint64_t fcn.0047f780(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char *unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == NULL) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '+') {\n        unaff_RBX = unaff_RBX + -1;\n        bVar6 = false;\n    }\n    else {\n        if (cVar1 == '-') {\n            unaff_RBX = unaff_RBX + -1;\n        }\n        bVar6 = cVar1 == '-';\n    }\n    iVar4 = 0;\n    iVar2 = fcn.0047fe60(0);\n    if ((iVar4 != 0) && (*unaff_RBX == ':')) {\n        iVar5 = 0;\n        iVar3 = fcn.0047fe60(0);\n        iVar2 = iVar3 * 0x3c + iVar2 * 0xe10;\n        if ((iVar5 != 0) && (*(iVar4 + -1) == ':')) {\n            iVar3 = fcn.0047fe60(0);\n            iVar4 = iVar3 + iVar2;\n            if (bVar6) {\n                iVar4 = -(iVar3 + iVar2);\n            }\n            return iVar4;\n        }\n        if (bVar6) {\n            iVar2 = -iVar2;\n        }\n        return iVar2;\n    }\n    iVar4 = iVar2 * 0xe10;\n    if (bVar6) {\n        iVar4 = iVar2 * -0xe10;\n    }\n    return iVar4;\n}\n",
        "token_count": 497
    },
    "0047f9a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047fc05)\n// WARNING: Removing unreachable block (ram,0x0047fb11)\n// WARNING: Removing unreachable block (ram,0x0047fdb6)\n\nulong fcn.0047f9a0(void)\n\n{\n    char *in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    char *unaff_RBX;\n    char cVar3;\n    int64_t unaff_R14;\n    ulong uStack48;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == NULL) {\n        return 0;\n    }\n    if (*in_RAX == 'J') {\n        unaff_RBX = unaff_RBX + -1;\n        iVar1 = 1;\n        cVar3 = 'm';\n        fcn.0047fe60(1);\n        uStack48 = 0;\n    }\n    else if (*in_RAX == 'M') {\n        iVar1 = 1;\n        fcn.0047fe60(1);\n        if ((iVar1 == 0) || (unaff_RBX[-1] != '.')) {\n            return 0;\n        }\n        iVar2 = 1;\n        fcn.0047fe60(1);\n        if ((iVar2 == 0) || (*(iVar1 + -1) != '.')) {\n            return 0;\n        }\n        unaff_RBX = iVar2 + -1;\n        iVar1 = 0;\n        cVar3 = '\\x06';\n        fcn.0047fe60(0);\n        uStack48 = 2;\n    }\n    else {\n        iVar1 = 0;\n        cVar3 = 'm';\n        fcn.0047fe60(0);\n        uStack48 = 1;\n    }\n    if ((iVar1 != 0) && (*unaff_RBX == '/')) {\n        fcn.0047f780(-(iVar1 + -1) >> 0x3f & 1, iVar1 + -1);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        return uStack48;\n    }\n    return uStack48;\n}\n",
        "token_count": 519
    },
    "0048dc60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nulong fcn.0048dc60(uint8_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *in_RAX;\n    ulong uVar7;\n    uint8_t *puVar8;\n    uint8_t *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x0048dc60:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\ncode_r0x0048dc90:\n        if ((unaff_RBX == NULL) || (unaff_RDI == NULL)) {\n            if (unaff_RDI == unaff_RBX) {\n                *(*0x20 + -0x60) = 0x48de39;\n                uVar7 = fcn.004025e0(unaff_RBX, unaff_RBX);\n            }\n            else {\n                uVar7 = 0;\n            }\n            return uVar7;\n        }\n        *(*0x20 + -0x28) = unaff_RDI;\n        *(*0x20 + -0x10) = arg1;\n        uVar4 = *in_RAX;\n        if (*in_RAX < 0x80) {\n            puVar8 = unaff_RBX + -1;\n            in_RAX = in_RAX + (-puVar8 >> 0x3f & 1);\n            unaff_RBX = unaff_RDI;\n        }\n        else {\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x60) = 0x48dce5;\n            uVar4 = fcn.004630a0();\n            arg1 = *(*0x20 + -0x30);\n            if (arg1 < unaff_RBX) goto code_r0x0048de6e;\n            puVar8 = arg1 + -unaff_RBX;\n            in_RAX = *(*0x20 + -0x18) + (unaff_RBX & -puVar8 >> 0x3f);\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX = *(*0x20 + -0x28);\n        }\n        *(*0x20 + -0x30) = puVar8;\n        *(*0x20 + -0x18) = in_RAX;\n        uVar5 = *arg1;\n        if (*arg1 < 0x80) {\n            unaff_RDI = unaff_RBX + -1;\n            arg1 = arg1 + (-unaff_RDI >> 0x3f & 1);\n            unaff_RBX = puVar8;\n        }\n        else {\n            *(*0x20 + -0x3c) = uVar4;\n            *(*0x20 + -0x60) = 0x48dd56;\n            uVar5 = fcn.004630a0();\n            arg1 = *(*0x20 + -0x28);\n            if (arg1 < unaff_RBX) goto code_r0x0048de66;\n            unaff_RDI = arg1 + -unaff_RBX;\n            arg1 = *(*0x20 + -0x10) + (unaff_RBX & -unaff_RDI >> 0x3f);\n            in_RAX = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + -0x30);\n            uVar4 = *(*0x20 + -0x3c);\n        }\n        if (uVar4 != uVar5) {\n            uVar3 = uVar5;\n            if (uVar5 < uVar4) {\n                uVar3 = uVar4;\n                uVar4 = uVar5;\n            }\n            if (uVar3 < 0x80) {\n                if ((0x19 < uVar4 - 0x41) || (uVar3 != uVar4 + 0x20)) {\n                    return 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x38) = unaff_RDI;\n                *(*0x20 + -0x40) = uVar3;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x3c) = uVar4;\n                *(*0x20 + -0x60) = 0x48ddef;\n                iVar6 = fcn.00464f00();\n                iVar1 = *(*0x20 + -0x3c);\n                iVar2 = *(*0x20 + -0x40);\n                while ((iVar6 != iVar1 && (iVar6 < iVar2))) {\n                    *(*0x20 + -0x60) = 0x48de48;\n                    iVar6 = fcn.00464f00();\n                    iVar1 = *(*0x20 + -0x3c);\n                    iVar2 = *(*0x20 + -0x40);\n                }\n                if (iVar6 != iVar2) {\n                    return 0;\n                }\n                in_RAX = *(*0x20 + -0x18);\n                arg1 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n            }\n        }\n        goto code_r0x0048dc90;\n    }\n    goto code_r0x0048de77;\ncode_r0x0048de66:\n    *(*0x20 + -0x60) = 0x48de6e;\n    fcn.0045c660(arg1);\n    unaff_RDI = unaff_RBX;\ncode_r0x0048de6e:\n    *(*0x20 + -0x60) = 0x48de76;\n    in_RAX = fcn.0045c660(arg1);\ncode_r0x0048de77:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x48de90;\n    fcn.00459ea0();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x0048dc60;\n}\n",
        "token_count": 1633
    },
    "00407160": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407160(uint64_t param_1)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uchar *puVar8;\n    uchar *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar *arg1;\n    uchar *puVar10;\n    uint8_t unaff_DIL;\n    uchar *puVar11;\n    uint64_t arg1_00;\n    char cVar12;\n    uchar (*pauVar13) [16];\n    int64_t unaff_R14;\n    uchar *unaff_R15;\n    uchar in_XMM15 [16];\n    uint64_t uVar7;\n    \ncode_r0x00407160:\n    cVar12 = param_1;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -200 && *0x20 + -200 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x148;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        uVar6 = unaff_DIL;\n        if (uVar6 < 9) {\n            iVar5 = uVar6 * 0x10;\n            iVar4 = *(iVar5 + 0x7324a0);\n            arg1_00 = *(iVar5 + 0x7324a8);\n            if ((cVar12 == '\\0') || (-1 < in_RAX)) {\ncode_r0x004071da:\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x101) = cVar12;\n                *(*0x20 + -0xc0) = unaff_RBX;\n                *(*0x20 + -200) = in_RAX;\n                *(*0x20 + -0xf8) = arg1_00;\n                *(*0x20 + -0x8c) = 0;\n                *(*0x20 + -0x158) = unaff_RBP;\n                *(*0x20 + -0x150) = 0x40722f;\n                puVar1 = fcn.0045c84b();\n                unaff_RBP = *(*0x20 + -0x158);\n                *(*0x20 + -0x8c) = 0x20656d69746e7572;\n                *(*0x20 + -0x85) = 0x203a726f72726520;\n                uVar6 = 0;\n                arg1 = 0xf;\n                puVar11 = 0x64;\n                puVar3 = *0x20 + -0x8c;\n                do {\n                    if (arg1_00 <= uVar6) {\n                        *(*0x20 + -0x150) = 0x407472;\n                        fcn.00448f60(arg1);\n                        return;\n                    }\n                    if (arg1_00 <= uVar6) goto code_r0x00407730;\n                    *(*0x20 + -0xf0) = arg1;\n                    cVar12 = *(iVar4 + uVar6);\n                    if (cVar12 == '%') {\n                        uVar7 = uVar6 + 1;\n                        if (arg1_00 <= uVar7) goto code_r0x00407725;\n                        *(*0x20 + -0xd0) = uVar7;\n                        cVar12 = *(uVar6 + 1 + iVar4);\n                        if (cVar12 == 'x') {\n                            if ((param_1 != '\\0') && (puVar1 < 0)) {\n                                puVar8 = arg1 + 1;\n                                puVar10 = arg1;\n                                puVar2 = puVar3;\n                                if (puVar11 < puVar8) {\n                                    *(*0x20 + -0x150) = 0x407350;\n                                    puVar2 = fcn.00445220(arg1);\n                                    puVar8 = puVar3 + 1;\n                                    unaff_RBX = *(*0x20 + -0xc0);\n                                    puVar10 = *(*0x20 + -0xf0);\n                                    arg1_00 = *(*0x20 + -0xf8);\n                                    puVar1 = *(*0x20 + -200);\n                                    puVar11 = arg1;\n                                }\n                                puVar2[puVar10] = 0x2d;\n                                puVar1 = -puVar1;\n                                arg1 = puVar8;\n                                puVar3 = puVar2;\n                            }\n                            *(*0x20 + -0xb4) = 0;\n                            *(*0x20 + -0xb0) = in_XMM15;\n                            uVar6 = 0x13;\n                            while (cVar12 = puVar1,  0x9 < puVar1) {\n                                puVar1 = puVar1 / 10;\n                                cVar12 = cVar12 + puVar1 * -10;\n                                if (0x13 < uVar6) goto code_r0x00407718;\ncode_r0x004075df:\n                                *(*0x20 + (uVar6 - 0xb4)) = cVar12 + '0';\n                                uVar6 = uVar6 - 1;\n                                unaff_R15 = arg1;\n                            }\n                            if (0x13 < uVar6) goto code_r0x0040770b;\n                            *(*0x20 + (uVar6 - 0xb4)) = cVar12 + '0';\n                            *(*0x20 + -0xf0) = arg1 + (0x14 - uVar6);\n                            iVar4 = uVar6 - 0x14;\n                            unaff_R15 = *0x20 + ((uVar6 & iVar4 >> 0x3f) - 0xb4);\n                            if (puVar11 < arg1 + (0x14 - uVar6)) {\n                                *(*0x20 + -0xd8) = iVar4;\n                                *(*0x20 + -0x20) = unaff_R15;\n                                *(*0x20 + -0xe0) = arg1;\n                                *(*0x20 + -0x150) = 0x407693;\n                                puVar3 = fcn.00445220(arg1);\n                                unaff_R15 = *(*0x20 + -0x20);\n                                iVar4 = *(*0x20 + -0xd8);\n                                puVar11 = arg1;\n                            }\n                            *(*0x20 + -0x10) = puVar3;\n                            *(*0x20 + -0xe8) = puVar11;\n                            *(*0x20 + -0x150) = 0x4076cd;\n                            fcn.0045cee0(-iVar4);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            uVar7 = *(*0x20 + -0xd0);\n                            puVar11 = *(*0x20 + -0xe8);\n                            arg1 = *(*0x20 + -0xf0);\n                            puVar3 = *(*0x20 + -0x10);\n                        }\n                        else if (cVar12 == 'y') {\n                            if (unaff_RBX < 0) {\n                                puVar8 = arg1 + 1;\n                                puVar10 = arg1;\n                                puVar2 = puVar3;\n                                if (puVar11 < puVar8) {\n                                    *(*0x20 + -0x150) = 0x4073ec;\n                                    puVar2 = fcn.00445220(arg1);\n                                    puVar8 = puVar3 + 1;\n                                    unaff_RBX = *(*0x20 + -0xc0);\n                                    puVar10 = *(*0x20 + -0xf0);\n                                    arg1_00 = *(*0x20 + -0xf8);\n                                    puVar1 = *(*0x20 + -200);\n                                    puVar11 = arg1;\n                                }\n                                puVar2[puVar10] = 0x2d;\n                                unaff_RBX = -unaff_RBX;\n                                arg1 = puVar8;\n                                puVar3 = puVar2;\n                            }\n                            cVar12 = puVar1;\n                            *(*0x20 + -0xa0) = 0;\n                            pauVar13 = *0x20 + -0x9c;\n                            *pauVar13 = in_XMM15;\n                            uVar6 = 0x13;\n                            while (0x9 < unaff_RBX) {\n                                puVar1 = unaff_RBX / 10;\n                                unaff_RBX = unaff_RBX % 10;\n                                if (0x13 < uVar6) goto code_r0x004075d2;\n                                pauVar13 = unaff_RBX + 0x30;\n                                *(*0x20 + (uVar6 - 0xa0)) = pauVar13;\n                                uVar6 = uVar6 - 1;\n                                unaff_RBX = puVar1;\n                                unaff_R15 = arg1;\n                            }\n                            if (0x13 < uVar6) {\n                                *(*0x20 + -0x150) = 0x4075d2;\n                                fcn.0045c5a0(0x14);\n                                puVar1 = arg1;\n                                arg1 = unaff_R15;\n                                cVar12 = pauVar13;\ncode_r0x004075d2:\n                                *(*0x20 + -0x150) = 0x4075df;\n                                fcn.0045c5a0(0x14);\n                                goto code_r0x004075df;\n                            }\n                            *(*0x20 + (uVar6 - 0xa0)) = unaff_RBX + '0';\n                            *(*0x20 + -0xf0) = arg1 + (0x14 - uVar6);\n                            iVar4 = uVar6 - 0x14;\n                            unaff_R15 = *0x20 + ((uVar6 & iVar4 >> 0x3f) - 0xa0);\n                            if (puVar11 < arg1 + (0x14 - uVar6)) {\n                                *(*0x20 + -0xd8) = iVar4;\n                                *(*0x20 + -0xe0) = arg1;\n                                *(*0x20 + -0x28) = unaff_R15;\n                                *(*0x20 + -0x150) = 0x40754c;\n                                puVar3 = fcn.00445220(arg1);\n                                iVar4 = *(*0x20 + -0xd8);\n                                unaff_R15 = *(*0x20 + -0x28);\n                                puVar11 = arg1;\n                            }\n                            *(*0x20 + -0x10) = puVar3;\n                            *(*0x20 + -0xe8) = puVar11;\n                            *(*0x20 + -0x150) = 0x407585;\n                            fcn.0045cee0(-iVar4);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            uVar7 = *(*0x20 + -0xd0);\n                            puVar11 = *(*0x20 + -0xe8);\n                            arg1 = *(*0x20 + -0xf0);\n                            puVar3 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        uVar7 = uVar6;\n                        puVar10 = arg1;\n                        puVar8 = arg1 + 1;\n                        if (puVar11 < arg1 + 1) {\n                            *(*0x20 + -0x100) = uVar6;\n                            *(*0x20 + -0x102) = cVar12;\n                            *(*0x20 + -0x150) = 0x4072be;\n                            puVar2 = fcn.00445220(arg1);\n                            puVar8 = puVar3 + 1;\n                            uVar7 = *(*0x20 + -0x100);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            puVar10 = *(*0x20 + -0xf0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            cVar12 = *(*0x20 + -0x102);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            puVar11 = arg1;\n                            puVar3 = puVar2;\n                        }\n                        arg1 = puVar8;\n                        puVar3[puVar10] = cVar12;\n                    }\n                    uVar6 = uVar7 + 1;\n                } while( true );\n            }\n            if (uVar6 < 8) {\n                iVar4 = *(iVar5 + 0x732420);\n                arg1_00 = *(iVar5 + 0x732428);\n                goto code_r0x004071da;\n            }\n            goto code_r0x0040773b;\n        }\n        goto code_r0x00407748;\n    }\n    goto code_r0x00407756;\ncode_r0x0040770b:\n    *(*0x20 + -0x150) = 0x407718;\n    fcn.0045c5a0(0x14);\n    arg1 = unaff_R15;\ncode_r0x00407718:\n    *(*0x20 + -0x150) = 0x407725;\n    fcn.0045c5a0(0x14);\n    unaff_R15 = arg1;\ncode_r0x00407725:\n    *(*0x20 + -0x150) = 0x407730;\n    fcn.0045c5a0(arg1_00);\ncode_r0x00407730:\n    unaff_DIL = puVar11;\n    *(*0x20 + -0x150) = 0x40773b;\n    fcn.0045c5a0(arg1_00);\ncode_r0x0040773b:\n    *(*0x20 + -0x150) = 0x407748;\n    fcn.0045c5a0(8);\ncode_r0x00407748:\n    cVar12 = '\\t';\n    *(*0x20 + -0x150) = 0x407755;\n    in_RAX = fcn.0045c5a0(9);\ncode_r0x00407756:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    puVar9[0x18] = cVar12;\n    puVar9[0x19] = unaff_DIL;\n    *(puVar9 + -8) = 0x40776e;\n    fcn.00459ea0();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    param_1 = puVar9[0x18];\n    unaff_DIL = puVar9[0x19];\n    *0x20 = puVar9;\n    goto code_r0x00407160;\n}\n",
        "token_count": 3493
    },
    "00404200": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00404200(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404120(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00404200(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00404365:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.004320e0();\n            arg1 = in_R8;\n            goto code_r0x00404365;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (0 < iVar1) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00404200(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 876
    },
    "00453de0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00453de0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.00453d60();\n    if (iVar1 != 0) {\n        fcn.00453ea0();\n        uVar2 = fcn.00454700(param_1, param_2, param_3, param_4);\n        return uVar2;\n    }\n    uVar3 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar3 == '\\x14') {\n        uVar2 = fcn.00454700(in_RAX, uVar3, param_3, param_4);\n        return uVar2;\n    }\n    if (uVar3 == '\\x19') {\n        uVar2 = fcn.00454700(in_RAX, uVar3, param_3, param_4);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "004692e0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.004692e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    code *noname_1;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((arg1 & 0x1f) != 0) {\n        if ((arg1 & 0x1f) == 0x18) {\n            return *unaff_RBX;\n        }\n        iVar1 = fcn.004693c0(arg1);\n        noname_1 = *(iVar1 + 0xf8);\n        (*noname_1)();\n        uVar2 = fcn.00448c40(1, noname_1, 0x4ad044, 7);\n        return uVar2;\n    }\n    return 0x4ae765;\n}\n",
        "token_count": 232
    },
    "004693c0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.004693c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((arg1 >> 9 & 1) == 0) {\n                    return 0x6b8280;\n                }\n                uVar1 = arg1 >> 10;\n                if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n                    if (uVar1 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar1) {\n                        *(*0x20 + -0x30) = 0x46941d;\n                        fcn.00457d20();\n                        return 0x6b8280;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x30) = 0x469445;\n                    fcn.00469060();\n                    if (*(*0x20 + -0x18) < unaff_RBX) {\n                        *(*0x20 + -0x30) = 0x469465;\n                        fcn.00457d20();\n                        return 0x6b8280;\n                    }\n                    *(*0x20 + -0x30) = 0x4694a5;\n                    fcn.00431940();\n                }\n                *(*0x20 + -0x30) = 0x4694b8;\n                fcn.00431940();\n            }\n            *(*0x20 + -0x30) = 0x4694c5;\n            unaff_RBX = fcn.0040bf40();\n            unaff_RBX[1] = 0x12;\n            arg1 = 0x4af406;\n            *unaff_RBX = 0x4af406;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x30) = 0x4694ee;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x469505;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 771
    },
    "0043fcc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.0043fcc0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x736140;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x736150 == 0) {\n                return 0;\n            }\n            if (*0x7895f4 != 0) {\n                if (*0x7895f4 == -1) {\n                    iVar1 = -*0x736150;\n                }\n                else {\n                    iVar1 = *0x736150 / *0x7895f4;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x736150 < iVar1 + 1) {\n                    iVar3 = *0x736150;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x736150 = *0x736150 - iVar3;\n                if ((*0x736140 != 0) && (*0x736140 = *(*0x736140 + 0xa0),  *0x736140 == 0)) {\n                    *0x736148 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x736140 != 0) && (*0x736140 = *(*0x736140 + 0xa0),  *0x736140 == 0)) {\n                        *0x736148 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x43fd87;\n                    fcn.00440140(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x43fddb;\n            in_RAX = fcn.0042fa00();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x43fdea;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 745
    },
    "0044b180": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044b180(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044a940(*(in_RAX + 0x18));\n        iVar2 = fcn.0044a940(*(in_RAX + 0x1c));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044b080(uVar1);\n            return uVar3;\n        }\n        return 0x4ac9cd;\n    }\n    return 0x4ac9cd;\n}\n",
        "token_count": 265
    },
    "00454140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00454140(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x722f80; iVar2 != 0; iVar2 = *(iVar2 + 0x210)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x0045419c;\n            }\n            iVar2 = 0;\ncode_r0x0045419c:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45421c;\n                fcn.00409e80();\n                *(*0x20 + -0x58) = 0x454233;\n                puVar1 = fcn.0040df80(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x45424a;\n                fcn.0040a0a0();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x454259;\n                fcn.00433860();\n                *(*0x20 + -0x58) = 0x45426a;\n                fcn.00434160();\n                *(*0x20 + -0x58) = 0x454276;\n                fcn.00433fc0();\n                *(*0x20 + -0x58) = 0x454287;\n                fcn.00434160();\n                *(*0x20 + -0x58) = 0x454291;\n                fcn.00433fc0();\n                *(*0x20 + -0x58) = 0x4542a5;\n                fcn.00434160();\n                *(*0x20 + -0x58) = 0x4542aa;\n                fcn.004338e0();\n                iVar2 = 0x722f80;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x4542df;\n                    fcn.00433860();\n                    *(*0x20 + -0x58) = 0x4542f0;\n                    fcn.00434160();\n                    *(*0x20 + -0x58) = 0x4542fa;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x58) = 0x45430b;\n                    fcn.00434160();\n                    *(*0x20 + -0x58) = 0x454315;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x58) = 0x45431a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x58) = 0x45431f;\n                    fcn.004338e0();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x210);\n                }\n                *(*0x20 + -0x58) = 0x454345;\n                fcn.004320e0();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x4541c5;\n                puVar1 = fcn.0040df80(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x454354;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x454365;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x454371;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x454385;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x45438f;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x4543a5;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x4543af;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x4543b4;\n            fcn.00433ac0();\n            *(*0x20 + -0x58) = 0x4543b9;\n            fcn.004338e0();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x4543ca;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x4543d9;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1655
    },
    "00473820": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00473820(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = *0x735180;\n            *(*0x20 + -0x60) = 0x47385c;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                *(*0x20 + -0x20) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x4738a8;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x4738e8;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x473918;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47392d;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 641
    },
    "00422680": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00422680(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00422759:\n        fcn.0045c5c0(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10198 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045c5c0(0x40);\n                goto code_r0x00422759;\n            }\n            iVar3 = *(*(in_RAX + 0x10198 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 454
    },
    "00422780": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00422780(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000 >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10198 + uVar8 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x42288c;\n                        fcn.004320e0();\n                        goto code_r0x0042288c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x0042288c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x422899;\n            in_RAX = fcn.0045c5c0(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4228ae;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 901
    },
    "00424c40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00424c40(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar9;\n            uVar10 = uVar9 >> 0x16;\n            *(*0x20 + -0x28) = uVar10;\n            uVar8 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar8;\n            uVar8 = uVar8 >> 0x16;\n            if (uVar8 == uVar10) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                if (uVar5 <= uVar10) goto code_r0x00425065;\n                noname_1 = *(noname_1 + uVar10 * 8);\n                if (0x1fff < uVar9 >> 0x23) goto code_r0x00425058;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x424e4f;\n                iVar1 = fcn.00427d60(iVar1 + (uVar10 & 0x1fff) * 0x80, noname_1, uVar8);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar10 = *(iVar6 + 0x68);\n                uVar8 = *(iVar6 + 0x60);\n                if (uVar10 <= *(*0x20 + -0x28)) goto code_r0x00425050;\n                *(uVar8 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00424e92;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar9 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x424d3f;\n                    uVar2 = fcn.00427d60(iVar1 + (uVar10 & 0x1fff) * 0x80, uVar5, uVar8);\n                    uVar8 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar8) {\n                        *(*(*0x20 + -0x18) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar10 = *(unaff_RDI + 0x70);\n                        uVar8 = *(*0x20 + -0x38);\n                        if (uVar8 <= uVar10) {\n                            if (uVar5 + 1 <= uVar8) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar10 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                unaff_RBX = (uVar8 - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (unaff_RBX == 0) goto code_r0x0042506d;\n                                    unaff_RBX = unaff_RBX * 8;\n                                    *(*0x20 + -0xc0) = 0x424ddd;\n                                    fcn.0045cc20();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    uVar8 = *(*0x20 + -0x38);\n                                    goto code_r0x0042506d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x004250f6;\n                            }\n                            *(*0x20 + -0xc0) = 0x42510d;\n                            fcn.0045c680(uVar8);\n                        }\n                        uVar5 = uVar10;\n                        *(*0x20 + -0xc0) = 0x425118;\n                        fcn.0045c640(uVar8, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x425125;\n                    fcn.0045c5c0(uVar8);\n                }\n                uVar10 = 0x2000;\n                *(*0x20 + -0xc0) = 0x425132;\n                uVar2 = fcn.0045c5c0(0x2000);\n                goto code_r0x00425132;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x10) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar8 < uVar10) goto code_r0x004250c3;\n                if (0x1fff < uVar10 >> 0xd) goto code_r0x004251c5;\n                *(*0x20 + -0x50) = uVar10;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0xd) * 8);\n                iVar6 = (uVar10 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x4251a5;\n                uVar2 = fcn.00427d60(iVar1 + iVar6, iVar6, uVar8);\n                uVar10 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar10) break;\ncode_r0x00425132:\n                *(*(*0x20 + -0x10) + uVar10 * 8) = uVar2;\n                uVar10 = uVar10 + 1;\n                uVar8 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x4251c5;\n            fcn.0045c5c0(uVar5);\ncode_r0x004251c5:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x4251d2;\n            in_RAX = fcn.0045c5c0(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_RDI;\n        puVar7[0x21] = unaff_SIL;\n        *(puVar7 + -8) = 0x4251f1;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = puVar7[0x20];\n        unaff_SIL = puVar7[0x21];\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x004250c3:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00424e92:\n    uVar9 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00424eb7:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar10 = *(iVar1 * 8 + 0x71e740);\n    uVar8 = -(uVar10 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x71e6c8);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x71e708);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar10;\n    uVar10 = uVar9 >> (uVar4 & 0x3f) & uVar8;\n    iVar11 = (unaff_RBX >> (uVar4 & 0x3f) & uVar8) + 1;\n    *(*0x20 + -0x58) = iVar11;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar11 <= uVar10) goto code_r0x00424eae;\n        *(*0x20 + -0x60) = uVar10;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar8 = uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar10 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar10) break;\n        if (uVar10 < uVar8) {\ncode_r0x00425037:\n            *(*0x20 + -0xc0) = 0x425045;\n            fcn.0045c660(uVar10);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar8;\n        unaff_RBX = uVar10 - uVar8;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x424fed;\n        uVar10 = unaff_RBX;\n        iVar11 = fcn.004269c0(iVar1, uVar9, uVar8 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar9 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar8 = *(*0x20 + -0x60);\n        if (uVar9 <= uVar8) {\n            *(*0x20 + -0xc0) = 0x425037;\n            fcn.0045c5a0(uVar9);\n            goto code_r0x00425037;\n        }\n        if (*(iVar1 + uVar8 * 8) == iVar11) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar8 * 8) = iVar11;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar11 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar10 = *(*0x20 + -0x40);\n        uVar9 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x425050;\n    fcn.0045c620(uVar10, noname_1);\ncode_r0x00425050:\n    *(*0x20 + -0xc0) = 0x425058;\n    fcn.0045c5c0(uVar10);\ncode_r0x00425058:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x425065;\n    fcn.0045c5c0(0x2000);\ncode_r0x00425065:\n    *(*0x20 + -0xc0) = 0x42506d;\n    fcn.0045c5c0(uVar5);\ncode_r0x0042506d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x4250a5;\n            uVar2 = fcn.00427d60(uVar2, noname_1, uVar8);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x004250b7;\n            *(*0x20 + -0xc0) = 0x4250d8;\n            fcn.0045c5c0(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x4250e5;\n        iVar1 = fcn.0045c5c0(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x004250f6:\n        } while (noname_1 < unaff_RBX);\n    } while( true );\ncode_r0x00424eae:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00424eb7;\ncode_r0x004250b7:\n    *(*(*0x20 + -0x18) + noname_1 * 8) = uVar2;\n    goto code_r0x004250c3;\n}\n",
        "token_count": 3690
    },
    "00425680": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint64_t fcn.00425680(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x00426246:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x426255;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x30) = *0x71d2b8;\n    *(*0x20 + -0x28) = *0x71d298;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x426280;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x00425740:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x425894;\n            iVar3 = fcn.00427f40(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x80) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x4258f1;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x425906;\n                fcn.004255a0();\n                return *(*0x20 + -0x80) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x100) = uVar11;\n                *(*0x20 + -0xd0) = uVar9;\n                if (-1 < uVar7) goto code_r0x00425aad;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0xd8) = uVar7;\n                    *(*0x20 + -0x120) = 0x4259bc;\n                    fcn.00433860();\n                    *(*0x20 + -0x120) = 0x4259cd;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x4259d7;\n                    fcn.00433f60();\n                    *(*0x20 + -0x120) = 0x4259e8;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x4259f5;\n                    fcn.00433f60();\n                    *(*0x20 + -0x120) = 0x425a06;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425a10;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425a25;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425a2f;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425a45;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425a4f;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425a65;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425a6a;\n                    fcn.004338e0();\n                    *(*0x20 + -0x120) = 0x425a6f;\n                    fcn.00433860();\n                    *(*0x20 + -0x120) = 0x425a85;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425a92;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425a97;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x120) = 0x425a9c;\n                    fcn.004338e0();\n                    *(*0x20 + -0x120) = 0x425aad;\n                    fcn.004320e0();\ncode_r0x00425aad:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x425ada;\n            fcn.0045c5a0(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x425ae7;\n        fcn.0045c5c0(0x2000);\n        goto code_r0x00425ae7;\n    }\n    param_3 = 0x71e6c0;\n    uVar11 = *(puVar2 * 8 + 0x71e6c0);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x71e700;\n    unaff_R15 = *(puVar2 * 8 + 0x71e700);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x71e740;\n            uVar9 = *(puVar2 * 8 + 0x71e740);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00425d70:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x426050;\n                        fcn.004255a0();\n                        return (*(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f) & -(*(*0x20 + -0x58) < 0x40)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0xe8) = unaff_R15;\n                    *(*0x20 + -0xf0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xe0) = arg2;\n                    *(*0x20 + -0x120) = 0x425e0a;\n                    fcn.00433860();\n                    *(*0x20 + -0x120) = 0x425e1b;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425e2f;\n                    fcn.00433f60(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x425e45;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425e4f;\n                    fcn.00433f60();\n                    *(*0x20 + -0x120) = 0x425e65;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425e6f;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425e85;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425e8f;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425ea5;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425eaf;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425eb4;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x120) = 0x425eb9;\n                    fcn.004338e0();\n                    *(*0x20 + -0x120) = 0x425ebe;\n                    fcn.00433860();\n                    *(*0x20 + -0x120) = 0x425ecf;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425edc;\n                    fcn.00433f60();\n                    *(*0x20 + -0x120) = 0x425eed;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425efa;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425f0b;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425f18;\n                    fcn.00433f60();\n                    *(*0x20 + -0x120) = 0x425f1d;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x120) = 0x425f25;\n                    fcn.004338e0();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x425f45;\n                    fcn.00433860();\n                    *(*0x20 + -0x120) = 0x425f56;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425f65;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x120) = 0x425f76;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425f85;\n                    fcn.00433f60();\n                    *(*0x20 + -0x120) = 0x425f8a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x120) = 0x425f8f;\n                    fcn.004338e0();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x71e740);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x71e6c0);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x425fc5;\n                    fcn.00433860();\n                    *(*0x20 + -0x120) = 0x425fd6;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x425fe5;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x425ff6;\n                    fcn.00434160();\n                    *(*0x20 + -0x120) = 0x426005;\n                    fcn.00433e60();\n                    *(*0x20 + -0x120) = 0x42600a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x120) = 0x42600f;\n                    fcn.004338e0();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -200) = param_4;\n                        *(*0x20 + -0xf8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xc0) = uVar7;\n                        *(*0x20 + -0x120) = 0x4260ab;\n                        fcn.00433860();\n                        *(*0x20 + -0x120) = 0x4260bc;\n                        fcn.00434160();\n                        *(*0x20 + -0x120) = 0x4260c9;\n                        fcn.00433f60();\n                        *(*0x20 + -0x120) = 0x4260da;\n                        fcn.00434160();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x4260f6;\n                        fcn.00433f60();\n                        *(*0x20 + -0x120) = 0x426107;\n                        fcn.00434160();\n                        *(*0x20 + -0x120) = 0x426111;\n                        fcn.00433e60();\n                        *(*0x20 + -0x120) = 0x426125;\n                        fcn.00434160();\n                        *(*0x20 + -0x120) = 0x42612f;\n                        fcn.00433e60();\n                        *(*0x20 + -0x120) = 0x426145;\n                        fcn.00434160();\n                        *(*0x20 + -0x120) = 0x42614f;\n                        fcn.00433e60();\n                        *(*0x20 + -0x120) = 0x426165;\n                        fcn.00434160();\n                        *(*0x20 + -0x120) = 0x42616a;\n                        fcn.004338e0();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x426225;\n                    fcn.004320e0();\ncode_r0x00426225:\n                    *(*0x20 + -0x120) = 0x426230;\n                    fcn.0045c5a0(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x00426225;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00425ae7;\n                }\n                *(*0x20 + -0x90) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x425b97;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x90) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x71e740;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00425d70;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00425719;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x71e740;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x90);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00425ae7;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x90);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x71e740;\ncode_r0x00425ae7:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x426238;\n        fcn.0045c660(arg1);\n    }\n    *(*0x20 + -0x120) = 0x426245;\n    in_RAX = fcn.0045c620(arg1, arg2);\n    goto code_r0x00426246;\ncode_r0x00425719:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x00425740;\n}\n",
        "token_count": 5931
    },
    "00439e00": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.00439e00(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x5f4) != *(iVar1 + 0x5f4));\n                    bVar4 = *(iVar1 + 0x5f4) != *(iVar1 + 0x5f0) || *(iVar1 + 0xdf8) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x439eb5;\n                    fcn.00409e80();\n                    *(*0x20 + -0x28) = 0x439eba;\n                    uVar2 = fcn.00440020();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x439ecd;\n                    fcn.0040a0a0();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x439eeb;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045c5a0(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x439f0f;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 879
    },
    "00439f40": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.00439f40(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1668);\n            iVar6 = *(iVar3 + 0x1670);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045c5a0(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 402
    },
    "0040ab40": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ab40(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t uVar12;\n    uint64_t in_R11;\n    ulong uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \ncode_r0x0040ab40:\n    puVar8 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar7 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar7;\n        *(*0x20 + -0xa0) = 0x40ab9f;\n        uVar2 = fcn.0040c680(0x400000);\n        if (uVar2 != 0) {\n            uVar6 = *(*0x20 + -0x78);\n            goto code_r0x0040abbc;\n        }\n        uVar9 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + -0x78);\n        do {\n            puVar10 = *(uVar9 + 0x103b8);\n            if (puVar10 == NULL) {\n                uVar6 = 0;\ncode_r0x0040afab:\n                if (uVar6 == 0) {\n                    *(*0x20 + -0xa0) = 0x40afc5;\n                    iVar3 = fcn.0040b1e0(0x400000);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16bb0;\n                    *(*0x20 + -0xa0) = 0x40aff4;\n                    puVar4 = fcn.00415780();\n                    *puVar4 = *(*0x20 + -0x10);\n                    *(puVar4 + 1) = 1;\n                    puVar4[2] = *0x75bc38;\n                    *(*0x20 + -0xa0) = 0x40b01f;\n                    *0x75bc38 = puVar4;\n                    piVar5 = fcn.00415780();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    *piVar5 = uVar6 + uVar2;\n                    piVar5[2] = *0x75bc38;\n                    *0x75bc38 = piVar5;\n                }\n                uVar9 = uVar6 + uVar2;\n                if (uVar9 < uVar2) {\n                    iVar3 = 0x1c;\n                    uVar13 = 0x4b2019;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar14 = 0x3ffffff < uVar9 + 0x7fffffffffff >> 0x16;\n                    iVar3 = 0;\n                    if (bVar14) {\n                        iVar3 = 0x20;\n                    }\n                    uVar13 = 0;\n                    if (bVar14) {\n                        uVar13 = 0x4b2b88;\n                    }\n                }\n                else {\n                    iVar3 = 0x21;\n                    uVar13 = 0x4b2e8a;\n                }\n                if (iVar3 != 0) goto code_r0x0040b11e;\n                uVar7 = uVar6;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040b10d;\ncode_r0x0040abbc:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar6;\n                uVar9 = uVar2 + 0x800000000000 >> 0x16;\n                puVar11 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar6 + 0x7fffffffffff >> 0x16 < uVar9) {\n                        return uVar2;\n                    }\n                    puVar10 = uVar9 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040ae5a;\n                    *(*0x20 + -0x40) = uVar9;\n                    uVar2 = puVar11[puVar10 + 0x2033];\n                    puVar10 = puVar11 + puVar10 + 0x2033;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa0) = 0x40ac75;\n                        uVar2 = fcn.0040c2a0(0);\n                        if (uVar2 == 0) goto code_r0x0040ae49;\n                        **(*0x20 + -0x18) = uVar2;\n                        uVar9 = *(*0x20 + -0x40);\n                    }\n                    in_R11 = *(uVar2 + (uVar9 & 0xfffff) * 8);\n                    uVar9 = uVar2 + (uVar9 & 0xfffff) * 8;\n                    if (in_R11 != 0) goto code_r0x0040ae38;\n                    *(*0x20 + -0x20) = uVar9;\n                    uVar7 = 0x210d0;\n                    *(*0x20 + -0xa0) = 0x40aced;\n                    iVar3 = fcn.0040c680(8);\n                    if (iVar3 == 0) {\n                        uVar7 = 8;\n                        *(*0x20 + -0xa0) = 0x40ad08;\n                        iVar3 = fcn.0040c2a0(0x78b4b8);\n                        if (iVar3 == 0) goto code_r0x0040ae27;\n                    }\n                    puVar10 = *(*0x20 + 8);\n                    uVar2 = puVar10[0x207e];\n                    if (puVar10[0x207d] == uVar2) {\n                        *(*0x20 + -0x68) = iVar3;\n                        iVar3 = uVar2 << 4;\n                        if (iVar3 == 0) {\n                            iVar3 = *0x789738;\n                        }\n                        *(*0x20 + -0x70) = iVar3;\n                        *(*0x20 + -0xa0) = 0x40ad5b;\n                        uVar2 = fcn.0040c2a0(0x78b4b8);\n                        if (uVar2 == 0) goto code_r0x0040ae16;\n                        puVar10 = *(*0x20 + 8);\n                        uVar7 = puVar10[0x207c];\n                        puVar10[0x207c] = uVar2;\n                        puVar10[0x207e] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar10[0x207d];\n                        if (puVar10[0x207d] < puVar10[0x207d]) {\n                            uVar2 = puVar10[0x207d];\n                        }\n                        if (puVar10[0x207c] != uVar7) {\n                            *(*0x20 + -0xa0) = 0x40adb9;\n                            fcn.0045cee0(uVar2 << 3);\n                            puVar10 = *(*0x20 + 8);\n                        }\n                        iVar3 = *(*0x20 + -0x68);\n                    }\n                    uVar6 = puVar10[0x207d];\n                    uVar9 = puVar10[0x207e];\n                    uVar2 = uVar6 + 1;\n                    if (uVar9 < uVar2) goto code_r0x0040ae11;\n                    puVar10[0x207d] = uVar2;\n                    uVar9 = puVar10[0x207c];\n                    if (uVar2 <= uVar6) break;\n                    iVar1 = *(*0x20 + -0x40);\n                    *(uVar9 + uVar6 * 8) = iVar1;\n                    **(*0x20 + -0x20) = iVar3;\n                    uVar9 = iVar1 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    puVar11 = puVar10;\n                }\n                *(*0x20 + -0xa0) = 0x40ae11;\n                fcn.0045c5a0(uVar2);\ncode_r0x0040ae11:\n                *(*0x20 + -0xa0) = 0x40ae16;\n                fcn.0045c620(uVar2, uVar9);\ncode_r0x0040ae16:\n                *(*0x20 + -0xa0) = 0x40ae27;\n                fcn.004320e0();\ncode_r0x0040ae27:\n                *(*0x20 + -0xa0) = 0x40ae38;\n                fcn.004320e0();\ncode_r0x0040ae38:\n                *(*0x20 + -0xa0) = 0x40ae49;\n                fcn.004320e0();\ncode_r0x0040ae49:\n                uVar7 = 0x27;\n                *(*0x20 + -0xa0) = 0x40ae5a;\n                fcn.004320e0();\n                uVar2 = in_R11;\ncode_r0x0040ae5a:\n                *(*0x20 + -0xa0) = 0x40ae67;\n                fcn.0045c5c0(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar6 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar6 = *puVar10 - uVar7;\n                }\n                uVar12 = uVar7 + uVar6;\n                if (uVar12 < uVar6) {\n                    uVar2 = 0;\n                }\n                else if (uVar12 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = uVar12;\n                    *(*0x20 + -0xa0) = 0x40af0e;\n                    uVar2 = fcn.00414740();\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar6) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar12 = uVar6;\n                    }\n                    *puVar10 = uVar12;\n                    uVar6 = uVar7;\n                    goto code_r0x0040afab;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xa0) = 0x40af5b;\n                    fcn.00414600(0);\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            *(uVar9 + 0x103b8) = puVar10[2];\n            *(uVar9 + 0x16be0) = *(uVar9 + 0x16be0) - *(uVar9 + 0x16bb0);\n            *puVar10 = *(uVar9 + 0x16bc8);\n            *(uVar9 + 0x16bc8) = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040b1b0;\ncode_r0x0040b10d:\n    *(*0x20 + -0xa0) = 0x40b11e;\n    fcn.004320e0();\ncode_r0x0040b11e:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar9;\n    *(*0x20 + -0x30) = uVar13;\n    *(*0x20 + -0x50) = iVar3;\n    *(*0x20 + -0xa0) = 0x40b137;\n    fcn.00433860();\n    *(*0x20 + -0xa0) = 0x40b148;\n    fcn.00434160();\n    *(*0x20 + -0xa0) = 0x40b152;\n    fcn.00433fc0();\n    *(*0x20 + -0xa0) = 0x40b165;\n    fcn.00434160();\n    *(*0x20 + -0xa0) = 0x40b16f;\n    fcn.00433fc0();\n    *(*0x20 + -0xa0) = 0x40b185;\n    fcn.00434160();\n    *(*0x20 + -0xa0) = 0x40b194;\n    fcn.00434160();\n    *(*0x20 + -0xa0) = 0x40b199;\n    fcn.00433ac0();\n    *(*0x20 + -0xa0) = 0x40b19e;\n    fcn.004338e0();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa0) = 0x40b1af;\n    in_RAX = fcn.004320e0();\ncode_r0x0040b1b0:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x40b1bf;\n    fcn.00459ea0();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    in_R11 = uVar2;\n    goto code_r0x0040ab40;\n}\n",
        "token_count": 3591
    },
    "00433e60": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00433e60(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = 0;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x433eaf;\n            uVar1 = fcn.0045c84b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x433f1f;\n                fcn.00433940(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x433f3c;\n            in_RAX = fcn.0045c660(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x433f47;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 480
    },
    "0047b1e0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong fcn.0047b1e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t arg1_00;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if (unaff_RDI < 0) {\n                uVar4 = unaff_RBX + 1;\n                iVar2 = in_RAX;\n                uVar5 = unaff_RBX;\n                if (arg1 < uVar4) {\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0xa0) = 0x47b24d;\n                    iVar2 = fcn.00445220(unaff_RBX);\n                    uVar4 = in_RAX + 1;\n                    uVar5 = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                *(iVar2 + uVar5) = 0x2d;\n                unaff_RDI = -unaff_RDI;\n                in_RAX = iVar2;\n                unaff_RBX = uVar4;\n            }\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x20) = in_XMM15;\n            uVar4 = 0x14;\n            while (9 < unaff_RDI) {\n                uVar5 = unaff_RDI / 10;\n                unaff_RDI = unaff_RDI % 10;\n                if (0x13 < uVar4 - 1) goto code_r0x0047b416;\n                *(*0x20 + (uVar4 - 0x25)) = unaff_RDI + '0';\n                uVar4 = uVar4 - 1;\n                unaff_RDI = uVar5;\n            }\n            uVar5 = uVar4 - 1;\n            if (uVar5 < 0x14) {\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + (uVar4 - 0x25)) = unaff_RDI + '0';\n                iVar2 = uVar4 - 0x15;\n                *(*0x20 + -0x38) = iVar2;\n                arg1_00 = -iVar2;\n                *(*0x20 + -0x58) = arg1_00;\n                for (iVar8 = arg1_00; *(*0x20 + -0x40) = unaff_RBX,  iVar8 < unaff_RSI; iVar8 = iVar8 + 1) {\n                    iVar3 = in_RAX;\n                    uVar6 = unaff_RBX;\n                    uVar1 = unaff_RBX + 1;\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x48) = iVar8;\n                        *(*0x20 + -0xa0) = 0x47b350;\n                        iVar3 = fcn.00445220(unaff_RBX);\n                        uVar6 = *(*0x20 + -0x40);\n                        uVar4 = *(*0x20 + -0x30);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        arg1_00 = *(*0x20 + -0x58);\n                        uVar5 = *(*0x20 + -0x50);\n                        iVar8 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x38);\n                        arg1 = unaff_RBX;\n                        uVar1 = in_RAX + 1;\n                    }\n                    unaff_RBX = uVar1;\n                    *(iVar3 + uVar6) = 0x30;\n                    in_RAX = iVar3;\n                }\n                uVar4 = (unaff_RBX - uVar4) + 0x15;\n                *(*0x20 + -0x30) = uVar4;\n                if (arg1 < uVar4) {\n                    *(*0x20 + -0x10) = *0x20 + ((uVar5 & iVar2 >> 0x3f) - 0x24);\n                    *(*0x20 + -0xa0) = 0x47b3b9;\n                    in_RAX = fcn.00445220(unaff_RBX);\n                    arg1_00 = *(*0x20 + -0x58);\n                    arg1 = unaff_RBX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x38) = arg1;\n                *(*0x20 + -0xa0) = 0x47b3e7;\n                fcn.0045cee0(arg1_00);\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0xa0) = 0x47b416;\n            fcn.0045c5a0(0x14);\ncode_r0x0047b416:\n            arg1 = 0x14;\n            *(*0x20 + -0xa0) = 0x47b425;\n            in_RAX = fcn.0045c5a0(0x14);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = uVar4;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x47b445;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1645
    },
    "00436860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.00436860(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                LOCK();\n                bVar2 = *(in_RAX + 0x90) == 9;\n                if (bVar2) {\n                    *(in_RAX + 0x90) = 4;\n                }\n                return in_RAX & 0xffffff00 | bVar2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4368b3;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4368c6;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 425
    },
    "0046dea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint64_t fcn.0046dea0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    bool bVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RSI == 0) {\n        if (arg1 < unaff_RBX + 2) {\n            in_RAX = fcn.00445220(unaff_RBX);\n        }\n        *(in_RAX + unaff_RBX) = 0x2222;\n        return in_RAX;\n    }\n    bVar3 = false;\n    bVar4 = false;\n    for (iVar7 = 0; iVar7 < unaff_RSI; iVar7 = iVar7 + 1) {\n        uVar1 = *(unaff_RDI + iVar7);\n        if (uVar1 < 0x21) {\n            if ((uVar1 == 9) || (uVar1 == 0x20)) {\n                bVar4 = true;\n            }\n        }\n        else if ((uVar1 == 0x22) || (uVar1 == 0x5c)) {\n            bVar3 = true;\n        }\n    }\n    if (!bVar3) {\n        if (!bVar4) {\n            if (arg1 < unaff_RBX + unaff_RSI) {\n                in_RAX = fcn.00445220(unaff_RBX);\n            }\n            fcn.0045cee0(unaff_RSI);\n            return in_RAX;\n        }\n        uVar8 = unaff_RBX + 1;\n        iVar7 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar7 = fcn.00445220(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar7 + unaff_RBX) = 0x22;\n        uVar10 = unaff_RSI + uVar8;\n        if (arg1 < uVar10) {\n            arg1 = uVar8;\n            iVar7 = fcn.00445220(uVar8);\n        }\n        fcn.0045cee0(unaff_RSI);\n        if (arg1 < unaff_RSI + uVar8 + 1) {\n            iVar7 = fcn.00445220(uVar10);\n        }\n        *(iVar7 + uVar10) = 0x22;\n        return iVar7;\n    }\n    if (bVar4) {\n        uVar8 = unaff_RBX + 1;\n        iVar7 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar7 = fcn.00445220(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar7 + unaff_RBX) = 0x22;\n        in_RAX = iVar7;\n        unaff_RBX = uVar8;\n    }\n    iVar9 = 0;\n    for (iVar7 = 0; iVar7 < unaff_RSI; iVar7 = iVar7 + 1) {\n        cVar2 = *(unaff_RDI + iVar7);\n        iVar5 = in_RAX;\n        uVar8 = unaff_RBX;\n        if (cVar2 == '\\\"') {\n            for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n                uVar10 = uVar8 + 1;\n                iVar6 = iVar5;\n                if (arg1 < uVar10) {\n                    arg1 = uVar8;\n                    iVar6 = fcn.00445220(uVar8);\n                    uVar10 = iVar5 + 1;\n                }\n                *(iVar6 + uVar8) = 0x5c;\n                iVar5 = iVar6;\n                uVar8 = uVar10;\n            }\n            unaff_RBX = uVar8 + 1;\n            in_RAX = iVar5;\n            if (arg1 < unaff_RBX) {\n                arg1 = uVar8;\n                in_RAX = fcn.00445220(uVar8);\n                unaff_RBX = iVar5 + 1;\n            }\n            *(in_RAX + uVar8) = 0x5c;\n        }\n        else if (cVar2 == '\\\\') {\n            iVar9 = iVar9 + 1;\n        }\n        else {\n            iVar9 = 0;\n        }\n        uVar8 = unaff_RBX + 1;\n        iVar5 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar5 = fcn.00445220(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar5 + unaff_RBX) = cVar2;\n        in_RAX = iVar5;\n        unaff_RBX = uVar8;\n    }\n    if (bVar4) {\n        for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n            uVar8 = unaff_RBX + 1;\n            iVar7 = in_RAX;\n            if (arg1 < uVar8) {\n                arg1 = unaff_RBX;\n                iVar7 = fcn.00445220(unaff_RBX);\n                uVar8 = in_RAX + 1;\n            }\n            *(iVar7 + unaff_RBX) = 0x5c;\n            in_RAX = iVar7;\n            unaff_RBX = uVar8;\n        }\n        if (arg1 < unaff_RBX + 1) {\n            in_RAX = fcn.00445220(unaff_RBX);\n        }\n        *(in_RAX + unaff_RBX) = 0x22;\n    }\n    return in_RAX;\n}\n",
        "token_count": 1396
    },
    "00453740": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00453740(ulong param_1, ulong param_2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.0044a780();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x28);\n    if ((cVar1 == '\\x12') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x11') {\n        fcn.0044ae60();\n        if (unaff_RBX < 8) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.004025e0(8, param_2);\n        }\n        return uVar3;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x7895a9 ^ 1;\n}\n",
        "token_count": 303
    },
    "00463640": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00463640(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((99 < in_RAX) || (unaff_RBX != 10)) {\n                *(*0x20 + -0x40) = 0x4636e5;\n                fcn.00463740(0);\n                return in_RAX;\n            }\n            if (in_RAX < 10) {\n                arg1 = in_RAX + 1;\n                if (in_RAX <= arg1) {\n                    return in_RAX + 0x4b35d4;\n                }\n            }\n            else {\n                arg1 = in_RAX * 2 + 2;\n                if (arg1 < 0xc9) {\n                    if (in_RAX << 1 <= arg1) {\n                        return in_RAX * 2 + 0x4b5950;\n                    }\n                    *(*0x20 + -0x40) = 0x4636fa;\n                    fcn.0045c660(arg1);\n                }\n                *(*0x20 + -0x40) = 0x463705;\n                fcn.0045c5e0(arg1, 200);\n            }\n            *(*0x20 + -0x40) = 0x46370a;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x46371a;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "0046b9c0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0046b9c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0x40) {\n                iVar2 = 0;\n                while( true ) {\n                    if (0x3f < iVar2) {\n                        *(*0x20 + 0x10) = 0x40;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x30) = 0x46ba29;\n                        iVar1 = fcn.0040bf40();\n                        *(iVar1 + 0x140) = 0x3d;\n                        iVar2 = *(*0x20 + 8);\n                        if (iVar1 != iVar2) {\n                            *(*0x20 + -0x10) = iVar1;\n                            *(*0x20 + -0x30) = 0x46ba4c;\n                            fcn.0045cee0(0x40);\n                            iVar1 = *(*0x20 + -0x10);\n                            iVar2 = *(*0x20 + 8);\n                        }\n                        for (iVar3 = 0; iVar3 < 0x100; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + iVar3) = 0xff;\n                        }\n                        iVar3 = *(*0x20 + 0x10);\n                        for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n                            *(iVar1 + 0x40 + *(iVar2 + iVar4)) = iVar4;\n                        }\n                        return;\n                    }\n                    if ((*(in_RAX + iVar2) == '\\n') || (*(in_RAX + iVar2) == '\\r')) break;\n                    iVar2 = iVar2 + 1;\n                }\n                *(*0x20 + -0x30) = 0x46baa5;\n                fcn.00431940();\n            }\n            unaff_RBX = 0x6b5658;\n            *(*0x20 + -0x30) = 0x46bab8;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x46bac8;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 743
    },
    "00420380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420380(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x4203a5;\n            fcn.00433860();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x4203c5;\n            fcn.00433860();\n            *(*0x20 + -0x80) = 0x4203d6;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x4203e5;\n            fcn.00434120();\n            *(*0x20 + -0x80) = 0x4203f6;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x420405;\n            fcn.00433e60();\n            *(*0x20 + -0x80) = 0x420416;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x420425;\n            fcn.00433e60();\n            *(*0x20 + -0x80) = 0x420436;\n            fcn.00434160();\n            *(*0x20 + -0x80) = 0x42043b;\n            fcn.004338e0();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x4204b0;\n                fcn.00433860();\n                *(*0x20 + -0x80) = 0x4204ba;\n                fcn.00433fc0();\n                *(*0x20 + -0x80) = 0x4204bf;\n                fcn.004338e0();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x420515;\n                    fcn.00433860();\n                    *(*0x20 + -0x80) = 0x420526;\n                    fcn.00434160();\n                    *(*0x20 + -0x80) = 0x42052b;\n                    fcn.004338e0();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x4204f8;\n                    fcn.00433860();\n                    *(*0x20 + -0x80) = 0x420509;\n                    fcn.00434160();\n                    *(*0x20 + -0x80) = 0x42050e;\n                    fcn.004338e0();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x420565;\n                    fcn.00433860();\n                    *(*0x20 + -0x80) = 0x420576;\n                    fcn.00434160();\n                    *(*0x20 + -0x80) = 0x42057b;\n                    fcn.004338e0();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x420545;\n                    fcn.00433860();\n                    *(*0x20 + -0x80) = 0x420556;\n                    fcn.00434160();\n                    *(*0x20 + -0x80) = 0x42055b;\n                    fcn.004338e0();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x4205a9;\n                    fcn.00433860();\n                    *(*0x20 + -0x80) = 0x4205ba;\n                    fcn.00434160();\n                    *(*0x20 + -0x80) = 0x4205bf;\n                    fcn.004338e0();\n                }\n                *(*0x20 + -0x80) = 0x4205c5;\n                fcn.00433860();\n                *(*0x20 + -0x80) = 0x4205ca;\n                fcn.00433ac0();\n                *(*0x20 + -0x80) = 0x4205cf;\n                fcn.004338e0();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x420605;\n                    fcn.004342c0(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x420665;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420670;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1975
    },
    "00427260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00427260(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x004272bb:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x004272c8:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x7895ba == '\\0') {\n                    fcn.00401d20();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x004272bb;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x004272c8;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "00427d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.00427d60(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar9 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar7 = *(in_RAX + iVar2 * 8);\n        if (uVar7 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar7 != 0) {\n                for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar5 = iVar1 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar9 < uVar5) {\n                uVar9 = uVar5;\n            }\n            iVar1 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar7 == 0) {\n                iVar10 = -1;\n            }\n            uVar5 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar9 < uVar5) {\n        uVar9 = uVar5;\n    }\n    if (0x3d < uVar9) {\n        if (uVar9 == 0x200000) {\n            uVar4 = 0x8000000000000000;\n        }\n        else {\n            uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar4;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar9 == 0x200000) {\n                uVar4 = 0x8000000000000000;\n            }\n            else {\n                uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar4;\n        }\n        uVar7 = *(in_RAX + iVar2 * 8);\n        iVar1 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar8 = iVar1;\n        if (uVar7 == 0) {\n            uVar8 = 0;\n        }\n        uVar7 = uVar7 >> (uVar8 & 0x3f);\n        if ((uVar7 + 1 & uVar7) != 0) {\n            uVar3 = 1;\n            uVar6 = uVar9;\ncode_r0x00427f18:\n            do {\n                if (uVar6 != 0) {\n                    if (uVar3 < uVar6) {\n                        uVar7 = uVar7 >> (uVar3 & 0x3f) | uVar7;\n                        if ((uVar7 & uVar7 + 1) == 0) break;\n                        uVar6 = uVar6 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x00427f18;\n                    }\n                    uVar7 = uVar7 | uVar7 >> (uVar6 & 0x3f);\n                    if ((uVar7 & uVar7 + 1) == 0) break;\n                }\n                uVar6 = ~uVar7;\n                iVar1 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar8 = iVar1;\n                if (uVar6 == 0) {\n                    uVar8 = 0;\n                }\n                uVar7 = uVar7 >> (uVar8 & 0x3f);\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    for (; (uVar7 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar7 == 0) {\n                    uVar6 = 0x40;\n                }\n                uVar7 = uVar7 >> (uVar6 & 0x3f);\n                uVar9 = uVar9 + uVar6;\n            } while ((uVar7 & uVar7 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1303
    },
    "00428000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00428000(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x0042808b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x0042808b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 734
    },
    "0042a2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a2a0(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = fcn.0042a760(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042a3f2:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.00409e80();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040c2a0(0x78b4b8);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045cee0(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042a6c0();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.0040a0a0(iVar1);\n            goto code_r0x0042a3f2;\n        }\n        fcn.0040a0a0();\n    } while( true );\n}\n",
        "token_count": 568
    },
    "0047dde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0047dde0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((arg1 == 0) || (arg1 == 0x7359a0)) {\n        arg1 = fcn.0047ea20();\n    }\n    if (in_RAX < 0) {\n        unaff_RBX = ((in_RAX << 1) >> 0x1f) + 0xdd7b17f80;\n    }\n    iVar1 = unaff_RBX + -0xe7791f700;\n    if (arg1 != 0x732320) {\n        if (((*(arg1 + 0x60) == 0) || (*(arg1 + 0x50) != iVar1 && iVar1 <= *(arg1 + 0x50))) ||\n           (*(arg1 + 0x58) == iVar1 || *(arg1 + 0x58) < iVar1)) {\n            fcn.0047eae0();\n            iVar1 = arg1 + unaff_RBX + -0xe7791f700;\n        }\n        else {\n            iVar1 = *(*(arg1 + 0x60) + 0x10) + unaff_RBX + -0xe7791f700;\n        }\n    }\n    return iVar1 + 0x7ffffffe1ad9c900;\n}\n",
        "token_count": 372
    },
    "0047df00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047df00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((arg1 == 0) || (arg1 == 0x7359a0)) {\n        arg1 = fcn.0047ea20();\n    }\n    if (in_RAX < 0) {\n        unaff_RBX = ((in_RAX << 1) >> 0x1f) + 0xdd7b17f80;\n    }\n    iVar1 = unaff_RBX + -0xe7791f700;\n    if (arg1 == 0x732320) {\n        uVar2 = 0x4acb2d;\n    }\n    else if (((*(arg1 + 0x60) == NULL) || (*(arg1 + 0x50) != iVar1 && iVar1 <= *(arg1 + 0x50))) ||\n            (*(arg1 + 0x58) == iVar1 || *(arg1 + 0x58) < iVar1)) {\n        uVar2 = fcn.0047eae0();\n    }\n    else {\n        uVar2 = **(arg1 + 0x60);\n    }\n    return uVar2;\n}\n",
        "token_count": 343
    },
    "00426c80": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00426c80(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00426c80:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x427120;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x4270a0;\n            *(*0x20 + -0x18) = 0x69e2c8;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x426d4a;\n            uVar2 = fcn.00429780(0x69e2c8, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar5 = 0;\n            do {\n                if (4 < iVar5) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                uVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x426d85;\n                arg1 = fcn.004294c0();\n                *(*0x20 + -0xa8) = 0x426daa;\n                iVar3 = (**0x69e2c8)(uVar4, 0x69e2c8);\n                iVar5 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar5 * 0x18);\n                if (*(iVar7 + 8 + iVar5 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x00426fef;\n                    *(iVar7 + 8 + iVar5 * 0x18) = arg1;\n                }\n                arg1_00 = *(iVar7 + 8 + iVar5 * 0x18);\n                iVar1 = *(iVar7 + iVar5 * 0x18);\n                arg2 = -*0x789738;\n                uVar2 = (*0x789738 + arg1 * 8) - 1 & arg2;\n                if (arg1_00 == 0) goto code_r0x00426fe5;\n                arg2 = (iVar3 << 3 & arg2) + iVar1;\n                arg1_00 = uVar2 + iVar1;\n                uVar2 = *(*0x20 + -0x58);\n                if (0 < uVar2) {\n                    iVar5 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar2 - 1) goto code_r0x00426fd5;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = arg1_00;\n                    uVar4 = *((uVar2 - 1) * 0x10 + 8 + iVar5);\n                    *(*0x20 + -0xa8) = 0x426e67;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x426e7c;\n                    arg2 = fcn.00429540(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar2 = *(*0x20 + -0x58);\n                    arg1_00 = arg1;\n                }\n                iVar3 = *(iVar7 + 0x10090);\n                arg1_01 = *(iVar7 + 0x10098);\n                if (uVar2 < arg1_01) {\n                    if (arg1_01 <= uVar2) goto code_r0x00426fcd;\n                    *(*0x20 + -0x70) = arg1_00;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar4 = *(uVar2 * 0x10 + 8 + iVar3);\n                    *(*0x20 + -0xa8) = 0x426edc;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x426ef1;\n                    arg2 = fcn.00429540(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    uVar2 = *(*0x20 + -0x58);\n                }\n                if (arg2 + 0x800000000000 < arg1_00 + 0x800000000000) {\n                    iVar7 = arg1_00 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = arg1_00 + 0x800000000000;\n                    *(*0x20 + -0x48) = arg1_00;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x426f6e;\n                    fcn.0042a840();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar5 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0xa8) = 0x426f9c;\n                    fcn.004143a0(iVar5);\n                    uVar2 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + -0x60);\n                }\n                iVar5 = iVar5 + 1;\n            } while( true );\n        }\n        goto code_r0x00426ffa;\n    }\n    goto code_r0x0042705c;\ncode_r0x00426fcd:\n    *(*0x20 + -0xa8) = 0x426fd5;\n    fcn.0045c5a0(arg1_01);\ncode_r0x00426fd5:\n    *(*0x20 + -0xa8) = 0x426fe5;\n    fcn.0045c5a0(arg1_01);\ncode_r0x00426fe5:\n    *(*0x20 + -0xa8) = 0x426fef;\n    fcn.0045c5a0(arg1_00);\ncode_r0x00426fef:\n    *(*0x20 + -0xa8) = 0x426ffa;\n    fcn.0045c620(arg1, arg2);\ncode_r0x00426ffa:\n    *(*0x20 + -0xa8) = 0x426fff;\n    fcn.00433860();\n    *(*0x20 + -0xa8) = 0x427010;\n    fcn.00434160();\n    *(*0x20 + -0xa8) = 0x42701d;\n    fcn.00433fc0();\n    *(*0x20 + -0xa8) = 0x42702e;\n    fcn.00434160();\n    *(*0x20 + -0xa8) = 0x42703b;\n    fcn.00433fc0();\n    *(*0x20 + -0xa8) = 0x427045;\n    fcn.00433ac0();\n    *(*0x20 + -0xa8) = 0x42704a;\n    fcn.004338e0();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x42705b;\n    in_RAX = fcn.004320e0();\ncode_r0x0042705c:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x427070;\n    fcn.00459ea0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x00426c80;\n}\n",
        "token_count": 2333
    },
    "00435e60": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00435e60(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *0x7895e0 = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x7361e4 = 0x7fffffff;\n        *0x7361e0 = 1;\n        cVar1 = fcn.0043f180();\n        if (cVar1 == '\\0') break;\n        fcn.0042ea20();\n    }\n    fcn.0042ea20();\n    fcn.0043f180();\n    fcn.0042ea20();\n    return;\n}\n",
        "token_count": 213
    },
    "0046c0c0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint64_t fcn.0046c0c0(uint64_t arg1, ulong noname_1, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if (arg3 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar6 = 0;\n            uVar7 = 0;\n            iVar9 = 0;\n            iVar12 = 0;\n            while ((7 < arg3 - uVar6 && (iVar5 = arg1 - uVar7,  7 < iVar5))) {\n                arg1 = uVar6 + 8;\n                if (arg4 < arg1) goto code_r0x0046c6ba;\n                if (arg1 < uVar6) goto code_r0x0046c6af;\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x30) = iVar12;\n                *(*0x20 + -0x10) = iVar9;\n                *(*0x20 + -0x58) = uVar6;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x58);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                *(*0x20 + -0x59) = uVar3;\n                *(*0x20 + -0x5a) = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                *(*0x20 + -0x5b) = *(in_RAX + 0x40 + *(unaff_RSI + 4 + uVar6));\n                *(*0x20 + -0x5c) = *(in_RAX + 0x40 + *(unaff_RSI + 5 + uVar6));\n                *(*0x20 + -0x5d) = *(in_RAX + 0x40 + *(unaff_RSI + 6 + uVar6));\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 7 + uVar6));\n                arg1_00 = *(*0x20 + -0x5d);\n                if ((uVar2 | uVar1 | uVar3 | *(*0x20 + -0x5a) | *(*0x20 + -0x5b) | *(*0x20 + -0x5c) | *(*0x20 + -0x5d) |\n                    uVar4) == 0xff) {\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x0046c69c;\n                    *(*0x20 + -0x38) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa8) = 0x46c354;\n                    uVar6 = fcn.0046bb40(iVar5, arg1, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x38) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar6 = uVar1 << 0x3a | uVar2 << 0x34;\n                    uVar13 = *(*0x20 + -0x59) << 0x2e | uVar6;\n                    uVar14 = *(*0x20 + -0x5b) << 0x22 | *(*0x20 + -0x5a) << 0x28 | uVar13;\n                    uVar11 = *(*0x20 + -0x5c) << 0x1c | uVar14;\n                    uVar16 = arg1_00 << 0x16;\n                    arg1_00 = uVar16 | uVar11;\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x0046c6a7;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar6 >> 0x38 | (uVar13 & 0xff000000000000) >> 0x28 | (uVar14 & 0xff0000000000) >> 0x18 |\n                         (uVar11 & 0xff00000000) >> 8 | (arg1_00 & 0xff000000) << 8 |\n                         (uVar4 << 0x10 | uVar16 & 0xff0000) << 0x18;\n                    uVar7 = uVar7 + 6;\n                    uVar6 = *(*0x20 + -0x28);\n                    iVar9 = *(*0x20 + -0x10);\n                    iVar12 = *(*0x20 + -0x30);\n                }\n            }\n            while ((arg1_00 = arg3 - uVar6,  uVar11 = uVar6,  3 < arg1_00 && (iVar5 = arg1 - uVar7,  3 < iVar5))) {\n                arg1_00 = uVar6 + 4;\n                arg1 = arg4;\n                if (arg4 < arg1_00) goto code_r0x0046c691;\n                if (arg1_00 < uVar6) goto code_r0x0046c686;\n                *(*0x20 + -0x40) = uVar6;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x18) = iVar9;\n                *(*0x20 + -0x48) = iVar12;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x40);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                arg1_00 = uVar3;\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                if ((uVar2 | uVar1 | uVar3 | uVar4) == 0xff) {\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x0046c673;\n                    *(*0x20 + -0x50) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa8) = 0x46c525;\n                    uVar6 = fcn.0046bb40(iVar5, uVar11, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x50) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar10 = uVar1 << 0x1a | uVar2 << 0x14;\n                    uVar15 = uVar3 << 0xe | uVar10;\n                    arg1_00 = uVar15;\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x0046c67e;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar10 >> 0x18 | (uVar15 & 0xff0000) >> 8 | (uVar4 << 8 | uVar3 << 0xe & 0xff00) << 8;\n                    uVar7 = uVar7 + 3;\n                    uVar6 = *(*0x20 + -0x28);\n                    iVar9 = *(*0x20 + -0x18);\n                    iVar12 = *(*0x20 + -0x48);\n                    arg1 = uVar11;\n                }\n            }\n            while( true ) {\n                if (arg3 <= uVar11) {\n                    return uVar7;\n                }\n                if (arg1 < uVar7) break;\n                *(*0x20 + -0x28) = uVar7;\n                iVar9 = arg1 - uVar7;\n                *(*0x20 + -0xa8) = 0x46c625;\n                uVar11 = fcn.0046bb40(iVar9, uVar11, arg3, arg4);\n                uVar7 = *(*0x20 + -0x28) + (-(unaff_RDI - uVar7) >> 0x3f & uVar7) + unaff_RBX;\n                if (iVar9 != 0) {\n                    return uVar7;\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                arg4 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg3 = *(*0x20 + 0x30);\n                arg1_00 = unaff_RDI;\n            }\n            *(*0x20 + -0xa8) = 0x46c673;\n            fcn.0045c660(arg1);\ncode_r0x0046c673:\n            *(*0x20 + -0xa8) = 0x46c67e;\n            fcn.0045c660(uVar11);\n            arg1 = arg4;\ncode_r0x0046c67e:\n            *(*0x20 + -0xa8) = 0x46c686;\n            fcn.0045c660(uVar11);\ncode_r0x0046c686:\n            *(*0x20 + -0xa8) = 0x46c691;\n            fcn.0045c660(arg1_00);\ncode_r0x0046c691:\n            *(*0x20 + -0xa8) = 0x46c69c;\n            arg4 = arg1;\n            fcn.0045c620(arg1_00, arg1);\ncode_r0x0046c69c:\n            *(*0x20 + -0xa8) = 0x46c6a7;\n            fcn.0045c660(arg1);\ncode_r0x0046c6a7:\n            *(*0x20 + -0xa8) = 0x46c6af;\n            fcn.0045c660(arg1);\n            arg1 = arg1_00;\ncode_r0x0046c6af:\n            *(*0x20 + -0xa8) = 0x46c6ba;\n            fcn.0045c660(arg1);\ncode_r0x0046c6ba:\n            *(*0x20 + -0xa8) = 0x46c6c5;\n            in_RAX = fcn.0045c620(arg1, arg4);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + 0x30) = arg3;\n        *(puVar8 + 0x38) = arg4;\n        *(puVar8 + -8) = 0x46c6ee;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        arg4 = *(puVar8 + 0x38);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3495
    },
    "00448e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.00448e40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0045c850();\n    fcn.00448900(5);\n    return;\n}\n",
        "token_count": 133
    },
    "004704c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nulong fcn.004704c0(void)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t arg1;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x200 && *0x20 + -0x200 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x280;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x260) = 0;\n            *(*0x20 + -0x290) = *0x20 + -8;\n            *(*0x20 + -0x288) = 0x47050f;\n            fcn.0045c798();\n            unaff_RBP = *(*0x20 + -0x290);\n            *(*0x20 + -0x288) = 0x470525;\n            uVar1 = fcn.00472120();\n            if (*0x20 != 0x260) {\n                return 0;\n            }\n            arg1 = uVar1;\n            if (arg1 < 0x12d) {\n                *0xffffffffffffffd8 = 0x470547;\n                fcn.0046cd80(300);\n                *0xffffffffffffffd8 = 0x470557;\n                uVar2 = fcn.004493a0(arg1);\n                return uVar2;\n            }\n            *0xffffffffffffffd8 = 0x47058f;\n            fcn.0045c620(arg1, 300);\n        }\n        *(puVar3 + -8) = 0x470595;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 431
    },
    "004706a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.004706a0(void)\n\n{\n    uint *unaff_RBX;\n    int64_t unaff_R14;\n    uint uStack600;\n    ulong uStack596;\n    ulong uStack588;\n    ulong uStack580;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    ulong uStack556;\n    uchar auStack488 [452];\n    uint uStack36;\n    uint uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    uint uStack18;\n    uint uStack14;\n    \n    while (auStack488 < *(unaff_R14 + 0x10) || auStack488 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0045c798();\n    fcn.00471bc0();\n    if (*0x20 == 0x258) {\n        *unaff_RBX = uStack600;\n        *(unaff_RBX + 1) = uStack596;\n        *(unaff_RBX + 3) = uStack588;\n        *(unaff_RBX + 5) = uStack580;\n        unaff_RBX[7] = uStack572;\n        unaff_RBX[8] = uStack568;\n        unaff_RBX[9] = uStack564;\n        unaff_RBX[10] = uStack560;\n        if (unaff_RBX != NULL) {\n            *(unaff_RBX + 0xb) = uStack556;\n            fcn.0045ca40();\n        }\n        if (unaff_RBX != 0x2) {\n            *(unaff_RBX + 0x232) = uStack36;\n            *(unaff_RBX + 0x236) = uStack32;\n            *(unaff_RBX + 0x23a) = CONCAT22(uStack26, uStack28);\n            *(unaff_RBX + 0x23e) = CONCAT22(uStack22, uStack24);\n            unaff_RBX[0x8f] = CONCAT22(uStack24, uStack26);\n            unaff_RBX[0x90] = CONCAT22(uStack20, uStack22);\n            unaff_RBX[0x91] = uStack18;\n            unaff_RBX[0x92] = uStack14;\n        }\n    }\n    return;\n}\n",
        "token_count": 546
    },
    "0047b6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.0047b6c0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack48 [32];\n    ulong uStack16;\n    \n    while (auStack48 < *(unaff_R14 + 0x10) || auStack48 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1_00 = unaff_RSI + 10;\n    if (arg1_00 < 0x40) {\n        arg1_00 = 0x40;\n    }\n    else {\n        uStack16 = arg1;\n        fcn.00445140(arg1_00);\n        arg1 = uStack16;\n    }\n    fcn.0047b820(arg1, arg1_00, arg1_00, unaff_RDI);\n    fcn.00448f60(unaff_RBX);\n    return;\n}\n",
        "token_count": 236
    },
    "00409c20": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.00409c20(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x409ca8;\n            fcn.00433860();\n            *(*0x20 + -0x40) = 0x409cb9;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x409cc5;\n            fcn.004340e0();\n            *(*0x20 + -0x40) = 0x409cd6;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x409ce5;\n            fcn.00433fc0();\n            *(*0x20 + -0x40) = 0x409cf6;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x409d05;\n            fcn.00433fc0();\n            *(*0x20 + -0x40) = 0x409d16;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x409d25;\n            fcn.004340e0();\n            *(*0x20 + -0x40) = 0x409d2a;\n            fcn.00433ac0();\n            *(*0x20 + -0x40) = 0x409d2f;\n            fcn.004338e0();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x409d45;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x409d55;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "00409d80": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00409d80(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x409dc6;\n            fcn.00433860();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x409dd5;\n            fcn.00433860();\n            *(*0x20 + -0x30) = 0x409de6;\n            fcn.00434160();\n            *(*0x20 + -0x30) = 0x409df0;\n            fcn.00433fc0();\n            *(*0x20 + -0x30) = 0x409df5;\n            fcn.00433ac0();\n            *(*0x20 + -0x30) = 0x409dfa;\n            fcn.004338e0();\n            *(*0x20 + -0x30) = 0x409e0b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x409e16;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00422fc0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nulong fcn.00422fc0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t arg1;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar4 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar4 + *(in_RAX + 0x10428);\n    uVar5 = (*0x789738 + uVar1) - 1 & -*0x789738;\n    if ((*(in_RAX + 0x10430) < uVar5) || (uVar1 < *(in_RAX + 0x10428))) {\n        iVar2 = fcn.0040ab40();\n        if (iVar2 == 0) {\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.00433e60();\n            fcn.00434160();\n            fcn.004338e0();\n            return 0;\n        }\n        if (iVar2 == *(in_RAX + 0x10430)) {\n            *(in_RAX + 0x10430) = iVar2 + iVar4;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10430) - *(in_RAX + 0x10428);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00414840(0x78b450);\n                LOCK();\n                *0x78b460 = *0x78b460 + arg1;\n                iVar3 = fcn.0042a900();\n                LOCK();\n                *(iVar3 + 8) = *(iVar3 + 8) + arg1;\n                fcn.0042aa00();\n                fcn.004249e0(arg1);\n            }\n            *(in_RAX + 0x10428) = iVar2;\n            *(in_RAX + 0x10430) = iVar2 + iVar4;\n        }\n        uVar5 = -*0x789738 & (*0x789738 + *(in_RAX + 0x10428) + iVar4) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar4 = *(in_RAX + 0x10428);\n    *(in_RAX + 0x10428) = uVar5;\n    iVar4 = uVar5 - iVar4;\n    fcn.00414840(0x78b450);\n    LOCK();\n    *0x78b460 = *0x78b460 + iVar4;\n    iVar2 = fcn.0042a900();\n    LOCK();\n    *(iVar2 + 8) = *(iVar2 + 8) + iVar4;\n    fcn.0042aa00();\n    fcn.004249e0(iVar4);\n    if (*(in_RAX + 0x10180) < (*0x78b450 - *0x78b460) + iVar4 + arg1) {\n        fcn.0041d440(0);\n    }\n    return 1;\n}\n",
        "token_count": 797
    },
    "0042d5e0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042d5e0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42d619;\n            fcn.00409e80();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42d68d;\n                        uVar1 = fcn.00455cc0(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042d805;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42d6d9;\n                        fcn.0042d860(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042d7f3;\n                        *(arg1_01 * 2 + 0x78ac40) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042d7e6;\n                        *(arg1_01 * 2 + 0x78ac40) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042d7d9;\n                        *(arg1_01 * 2 + 0x78ac42) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42d7af;\n                    fcn.0042d860(uVar3);\n                    *(*0x20 + -0x78) = 0x42d7bd;\n                    fcn.0040a0a0();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42d7d9;\n                fcn.0045c620(uVar3, 1000);\ncode_r0x0042d7d9:\n                *(*0x20 + -0x78) = 0x42d7e6;\n                fcn.0045c5a0(1000);\ncode_r0x0042d7e6:\n                *(*0x20 + -0x78) = 0x42d7f3;\n                fcn.0045c5a0(1000);\ncode_r0x0042d7f3:\n                *(*0x20 + -0x78) = 0x42d805;\n                fcn.0045c5a0(1000);\ncode_r0x0042d805:\n                *(*0x20 + -0x78) = 0x42d812;\n                fcn.0045c620(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42d81f;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045c5e0(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42d833;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1558
    },
    "00444dc0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00444dc0(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = 0;\n            while( true ) {\n                if (0x35 < arg1) {\n                    return;\n                }\n                uVar1 = *(arg1 + 0x4b5183);\n                if (uVar1 < 0x80) {\n                    uVar2 = arg1;\n                    arg1 = arg1 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x30) = 0x444e25;\n                    uVar1 = fcn.00455cc0(arg1);\n                    arg1 = 0x36;\n                    uVar2 = *(*0x20 + -0x10);\n                }\n                if (99 < uVar2) break;\n                *(uVar2 + 0x789a40) = uVar1;\n                *0x7895cc = *0x7895cc + 1;\n            }\n            *(*0x20 + -0x30) = 0x444e52;\n            fcn.0045c5a0(100);\n        }\n        *(puVar3 + -8) = 0x444e58;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 436
    },
    "0044f100": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.0044f100(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    ulong *puVar4;\n    \n    puVar4 = *(in_RAX + 0x20 + (unaff_RSI & 0x1fff) * 8);\n    do {\n        if (puVar4 == NULL) {\n            return 0;\n        }\n        if ((puVar4[1] == unaff_RSI) && (uVar3 = puVar4[3],  arg1 == uVar3)) {\n            if (0x80 < uVar3) {\n                fcn.0045c5e0(uVar3, 0x80);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            iVar2 = 0;\n            while( true ) {\n                if (uVar3 <= iVar2) {\n                    return *(puVar4 + 2);\n                }\n                if (*(unaff_RBX + iVar2 * 8) != puVar4[iVar2 + 4]) break;\n                iVar2 = iVar2 + 1;\n            }\n        }\n        puVar4 = *puVar4;\n    } while( true );\n}\n",
        "token_count": 313
    },
    "0045a040": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045a040(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45a285;\n        fcn.00459f80();\n        uStack32 = 0x45a290;\n        (**ppcStackX16)();\n        uStack32 = 0x45a29a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45a2bd;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45a345;\n        fcn.00459f80();\n        uStack48 = 0x45a350;\n        (**ppcStackX16)();\n        uStack48 = 0x45a35a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45a37d;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45a405;\n        fcn.00459f80();\n        uStack80 = 0x45a410;\n        (**ppcStackX16)();\n        uStack80 = 0x45a41a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45a43d;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45a4e4;\n        fcn.00459f80();\n        uStack144 = 0x45a4f2;\n        (**ppcStackX16)();\n        uStack144 = 0x45a4ff;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45a52e;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45a5e7;\n        fcn.00459f80();\n        uStack272 = 0x45a5f5;\n        (**ppcStackX16)();\n        uStack272 = 0x45a602;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45a631;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45a6e7;\n        fcn.00459f80();\n        uStack528 = 0x45a6f5;\n        (**ppcStackX16)();\n        uStack528 = 0x45a702;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45a731;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45a7e7;\n        fcn.00459f80();\n        uStack1040 = 0x45a7f5;\n        (**ppcStackX16)();\n        uStack1040 = 0x45a802;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45a831;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45a8e7;\n        fcn.00459f80();\n        uStack2064 = 0x45a8f5;\n        (**ppcStackX16)();\n        uStack2064 = 0x45a902;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45a931;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45a9ef;\n        fcn.00459f80();\n        uStack4112 = 0x45a9fd;\n        (**ppcStackX16)();\n        uStack4112 = 0x45aa0a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45aa39;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45aaef;\n        fcn.00459f80();\n        uStack8208 = 0x45aafd;\n        (**ppcStackX16)();\n        uStack8208 = 0x45ab0a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45ab39;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45abef;\n        fcn.00459f80();\n        uStack16400 = 0x45abfd;\n        (**ppcStackX16)();\n        uStack16400 = 0x45ac0a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45ac39;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45acef;\n        fcn.00459f80();\n        uStack32784 = 0x45acfd;\n        (**ppcStackX16)();\n        uStack32784 = 0x45ad0a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45ad39;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45adef;\n        fcn.00459f80();\n        uStack65552 = 0x45adfd;\n        (**ppcStackX16)();\n        uStack65552 = 0x45ae0a;\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45ae39;\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.00459ea0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.00459f80();\n        (**ppcStackX16)();\n        fcn.00459ec0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00458f20(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4352e7;\n            fcn.00431940();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4352ed;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 9481
    },
    "00463260": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00463260(void)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0xfffd;\n            }\n            uVar1 = *((unaff_RBX - 1) + in_RAX);\n            if (uVar1 < 0x80) {\n                return uVar1;\n            }\n            iVar3 = unaff_RBX - 4;\n            if (iVar3 < 0) {\n                iVar3 = 0;\n            }\n            for (uVar5 = unaff_RBX - 2; iVar3 <= uVar5; uVar5 = uVar5 - 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x00463352;\n                if ((*(in_RAX + uVar5) & 0xc0) != 0x80) break;\n            }\n            if (uVar5 < 0) {\n                uVar5 = 0;\n            }\n            if (uVar5 <= unaff_RBX) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x28) = 0x463317;\n                uVar2 = fcn.004630a0();\n                if (*(*0x20 + 0x10) != *(*0x20 + -0x10) + (unaff_RBX - uVar5)) {\n                    return 0xfffd;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x28) = 0x463352;\n            fcn.0045c660(unaff_RBX);\ncode_r0x00463352:\n            *(*0x20 + -0x28) = 0x46335d;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46336d;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "00464f00": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00464f00(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        uVar3 = *0x72e788;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX;\n            if (0x10ffff < uVar2) {\n                return in_RAX;\n            }\n            if (uVar2 < 0x80) {\n                return *(uVar2 * 2 + 0x7214a0);\n            }\n            uVar6 = 0;\n            uVar1 = *0x72e788;\n            while (uVar4 = uVar1,  uVar6 < uVar4) {\n                iVar7 = (uVar4 - uVar6) / 2;\n                uVar1 = iVar7 + uVar6;\n                if (*0x72e788 <= uVar1) goto code_r0x00465005;\n                if (*(*0x72e780 + uVar1 * 4) < uVar2) {\n                    uVar6 = iVar7 + uVar6 + 1;\n                    uVar1 = uVar4;\n                }\n            }\n            if (*0x72e788 <= uVar6) goto code_r0x00464fce;\n            if (uVar6 < *0x72e788) {\n                if (uVar2 == *(*0x72e780 + uVar6 * 4)) {\n                    return *(*0x72e780 + uVar6 * 4 + 2);\n                }\ncode_r0x00464fce:\n                *(*0x20 + 8) = uVar2;\n                *(*0x20 + -0x20) = 0x464fd7;\n                uVar3 = fcn.00464e80();\n                if (uVar3 == *(*0x20 + 8)) {\n                    *(*0x20 + -0x20) = 0x464ff0;\n                    uVar3 = fcn.00464e00();\n                    return uVar3;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x20) = 0x465005;\n            fcn.0045c5a0(*0x72e788);\ncode_r0x00465005:\n            *(*0x20 + -0x20) = 0x465010;\n            in_RAX = fcn.0045c5a0(uVar3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46501a;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 754
    },
    "00480c00": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00480c00(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t arg1;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg1 = 0;\n    uVar3 = 0;\n    arg1_00 = 0;\n    iVar4 = 0;\n    while (arg1 < unaff_RBX) {\n        uVar1 = *(in_RAX + arg1);\n        if (*(in_RAX + arg1) < 0x80) {\n            arg1 = arg1 + 1;\n        }\n        else {\n            uVar1 = fcn.00455cc0(arg1);\n            arg1 = unaff_RBX;\n        }\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar5 = arg1_00 + 1;\n            iVar2 = iVar4;\n            if (uVar3 < uVar5) {\n                uVar3 = arg1_00;\n                iVar2 = fcn.00445220(arg1_00);\n                uVar5 = iVar4 + 1;\n            }\n            *(iVar2 + arg1_00 * 4) = uVar1;\n            arg1_00 = uVar5;\n            iVar4 = iVar2;\n        }\n    }\n    fcn.004493a0(arg1_00);\n    return;\n}\n",
        "token_count": 399
    },
    "0048bec0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.0048bec0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t arg1_01;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    \n    while (uVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (uVar1 < 0x80) {\n        fcn.00402a80(arg1, in_RDX);\n        return iStack40;\n    }\n    if (uVar1 == 0xfffd) {\n        iVar2 = 0;\n        do {\n            arg1_01 = iVar2;\n            if (unaff_RBX <= arg1_01) {\n                return -1;\n            }\n            uVar1 = *(in_RAX + arg1_01);\n            if (*(in_RAX + arg1_01) < 0x80) {\n                iVar2 = arg1_01 + 1;\n            }\n            else {\n                uVar1 = fcn.00455cc0(arg1_01);\n                iVar2 = unaff_RBX;\n            }\n        } while (uVar1 != 0xfffd);\n        return arg1_01;\n    }\n    if ((0xd7ff < uVar1) && (in_RDX = uVar1 - 0xe000,  0x101fff < uVar1 - 0xe000)) {\n        return -1;\n    }\n    arg1_00 = fcn.00449580();\n    iVar2 = fcn.0048dec0(arg1_00, in_RDX);\n    return iVar2;\n}\n",
        "token_count": 439
    },
    "0048d2a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.0048d2a0(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0048d2a0:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        bVar2 = false;\n        for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n            uVar1 = *(in_RAX + iVar5);\n            if (0x7f < uVar1) {\n                *(*0x20 + -0xa0) = 0x48d318;\n                iVar5 = fcn.0048cca0(unaff_RBX);\n                return iVar5;\n            }\n            if (bVar2) {\n                bVar2 = true;\n            }\n            else if (uVar1 < 0x41) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = uVar1 < 0x5b;\n            }\n        }\n        if (!bVar2) {\n            return in_RAX;\n        }\n        *(*0x20 + -0x38) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x28) = *0x20 + -0x28;\n        if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < unaff_RBX) {\n            *(*0x20 + -0x48) = *(*0x20 + -0x18);\n            iVar5 = unaff_RBX + *(*0x20 + -0x10) * 2;\n            *(*0x20 + -0x40) = iVar5;\n            *(*0x20 + -0xa0) = 0x48d390;\n            iVar3 = fcn.00445140(iVar5);\n            iVar5 = *(*0x20 + -0x48);\n            iVar6 = iVar5;\n            if (*(*0x20 + -0x18) < iVar5) {\n                iVar6 = *(*0x20 + -0x18);\n            }\n            if (iVar3 != *(*0x20 + -0x20)) {\n                *(*0x20 + -0x30) = iVar3;\n                *(*0x20 + -0xa0) = 0x48d3bb;\n                fcn.0045cee0(iVar6);\n                iVar3 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + -0x48);\n            }\n            *(*0x20 + -0x18) = iVar5;\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x20) = iVar3;\n            in_RAX = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + -0x38);\n        }\n        iVar5 = 0;\n        do {\n            if (unaff_RBX <= iVar5) {\n                return *(*0x20 + -0x20);\n            }\n            cVar8 = *(in_RAX + iVar5);\n            if (cVar8 + 0xbfU < 0x1a) {\n                cVar8 = cVar8 + ' ';\n            }\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\n            }\n            else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x0048d4e2;\n            iVar3 = *(*0x20 + -0x18);\n            iVar6 = *(*0x20 + -0x20);\n            iVar4 = iVar6;\n            if (*(*0x20 + -0x10) < iVar3 + 1U) {\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x51) = cVar8;\n                *(*0x20 + -0xa0) = 0x48d490;\n                iVar4 = fcn.00445220(iVar3);\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = iVar4;\n                iVar5 = *(*0x20 + -0x50);\n                cVar8 = *(*0x20 + -0x51);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x38);\n                iVar3 = iVar6;\n            }\n            *(*0x20 + -0x18) = iVar3 + 1;\n            *(iVar4 + iVar3) = cVar8;\n            iVar5 = iVar5 + 1;\n        } while( true );\n    }\n    goto code_r0x0048d4f6;\ncode_r0x0048d4e2:\n    unaff_RBX = 0x6b56c8;\n    *(*0x20 + -0xa0) = 0x48d4f5;\n    in_RAX = fcn.00431940();\ncode_r0x0048d4f6:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + -8) = 0x48d505;\n    fcn.00459ea0();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    *0x20 = puVar7;\n    goto code_r0x0048d2a0;\n}\n",
        "token_count": 1482
    },
    "00428840": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid fcn.00428840(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *0x7896e0 = *0x7896e0 + ((*0x7896e0 + 1U) / 0x6000000) * -0x6000000 + 1;\n    *0x7896e4 = 0;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 152
    },
    "00464920": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.00464920(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint16_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar11 = *0x72e6c0;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar5 = *0x72e6e8;\n        uVar10 = *0x72e6a8;\n        uVar13 = *0x72e6a0;\n        iVar11 = *0x72e6e0;\n        uVar14 = *0x72e6e8;\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = *0x72e708;\n        while (uVar5 = uVar7,  uVar10 = *0x72e6c8,  uVar13 = *0x72e700,  uVar14 = *0x72e708,  uVar6 < uVar5) {\n            iVar8 = uVar5 - uVar6 >> 1;\n            uVar7 = iVar8 + uVar6;\n            uVar15 = uVar6;\n            if (*0x72e708 <= uVar7) goto code_r0x00464afb;\n            if (*(*0x72e700 + uVar7 * 4) < uVar4) {\n                uVar6 = uVar6 + iVar8 + 1;\n                uVar7 = uVar5;\n            }\n        }\n        if (*0x72e708 <= uVar6) {\n            return 0;\n        }\n        uVar15 = uVar6 & 0xfffffffffffffffe;\n        if (uVar15 < *0x72e708) {\n            uVar2 = *(*0x72e700 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar6 = uVar6 | 1;\n            if (uVar6 < *0x72e708) {\n                if (*(*0x72e700 + uVar6 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar13 = uVar4 - 0x10000;\n                uVar7 = 0;\n                uVar5 = *0x72e6c8;\n                while (uVar9 = uVar5,  uVar12 = uVar4 - 0x10000,  uVar7 < uVar9) {\n                    uVar10 = uVar9 - uVar7 >> 1;\n                    uVar15 = uVar10 + uVar7;\n                    uVar5 = *0x72e6c8;\n                    uVar14 = uVar9;\n                    if (*0x72e6c8 <= uVar15) goto code_r0x00464ad6;\n                    uVar1 = *(*0x72e6c0 + uVar15 * 2);\n                    uVar6 = uVar1;\n                    uVar5 = uVar15;\n                    uVar14 = uVar15;\n                    if (uVar1 < uVar12) {\n                        uVar7 = uVar7 + uVar10 + 1;\n                        uVar5 = uVar9;\n                        uVar14 = uVar9;\n                    }\n                }\n                if (*0x72e6c8 <= uVar7) {\n                    return 1;\n                }\n                if (uVar7 < *0x72e6c8) {\n                    uVar1 = *(*0x72e6c0 + uVar7 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar12;\n                }\n                uVar10 = *0x72e6c8;\n                uVar5 = fcn.0045c5a0(*0x72e6c8);\ncode_r0x00464ad6:\n                fcn.0045c5a0(uVar5);\n            }\n            fcn.0045c5a0(uVar14);\n        }\n        fcn.0045c5a0(uVar14);\n        uVar5 = uVar6;\ncode_r0x00464afb:\n        in_RAX = fcn.0045c5a0(uVar14);\n    }\n    while (uVar6 = uVar5,  uVar12 = in_RAX,  uVar15 < uVar6) {\n        iVar8 = uVar6 - uVar15 >> 1;\n        uVar5 = iVar8 + uVar15;\n        if (uVar14 <= uVar5) goto code_r0x00464c11;\n        if (*(iVar11 + uVar5 * 2) < uVar12) {\n            uVar15 = uVar15 + iVar8 + 1;\n            uVar5 = uVar6;\n        }\n    }\n    if (uVar14 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar14) {\n        if (uVar12 < *(iVar11 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar14) {\n            if (*(iVar11 + (uVar15 | 1) * 2) < uVar12) {\n                return 0;\n            }\n            uVar6 = 0;\n            uVar5 = uVar10;\n            uVar7 = uVar14;\n            while (uVar14 = uVar5,  uVar6 < uVar14) {\n                iVar11 = uVar14 - uVar6 >> 1;\n                uVar7 = iVar11 + uVar6;\n                if (uVar10 <= uVar7) goto code_r0x00464bf3;\n                uVar5 = uVar7;\n                if (*(uVar13 + uVar7 * 2) < uVar12) {\n                    uVar6 = uVar6 + iVar11 + 1;\n                    uVar5 = uVar14;\n                    uVar7 = uVar14;\n                }\n            }\n            if (uVar10 <= uVar6) {\n                return 1;\n            }\n            if (uVar6 < uVar10) {\n                uVar1 = *(uVar13 + uVar6 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar12;\n            }\n            fcn.0045c5a0(uVar10);\n            uVar14 = uVar7;\ncode_r0x00464bf3:\n            fcn.0045c5a0(uVar10);\n        }\n        fcn.0045c5a0(uVar14);\n    }\n    fcn.0045c5a0(uVar14);\ncode_r0x00464c11:\n    fcn.0045c5a0(uVar14);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1761
    },
    "00470360": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\nuint fcn.00470360(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.00472f20(arg1, arg2, 0);\n    if (iVar1 != 0) {\n        if (((iVar1 != 0) && (*(iVar1 + 8) == 0x4a1100)) && (*unaff_RBX == 0x6d)) {\n            return 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00401720();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 89
    },
    "00401be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401be0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((unaff_RBX[1] == *(in_RAX + 8)) && (cVar1 = fcn.004025e0(*(in_RAX + 8), *unaff_RBX),  cVar1 != '\\0')) {\n        uVar2 = fcn.004025e0(0xb, unaff_RBX);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00403140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403140(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x16c0);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x16c0) + 0x10;\n    *(iVar1 + 0x16c0) = iVar3;\n    if (*(iVar1 + 0x16c8) == iVar3) {\n        fcn.0042ab40();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00403300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403300(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    int64_t unaff_R14;\n    int64_t iVar17;\n    \n    iVar17 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x90) != unaff_R14) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004338e0();\n        fcn.0042d3a0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x138) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar17 + 0x30);\n    uVar9 = *(iVar2 + 0x2e0);\n    uVar10 = *(iVar2 + 0x2e4);\n    uVar11 = *(iVar2 + 0x2e8);\n    uVar12 = *(iVar2 + 0x2ec);\n    uVar13 = *(iVar2 + 0x2f0);\n    uVar14 = *(iVar2 + 0x2f4);\n    uVar15 = *(iVar2 + 0x2f8);\n    uVar16 = *(iVar2 + 0x2fc);\n    uVar5 = *(iVar2 + 0x300);\n    uVar6 = *(iVar2 + 0x304);\n    uVar7 = *(iVar2 + 0x308);\n    uVar8 = *(iVar2 + 0x30c);\n    fcn.004578c0();\n    *(*(iVar17 + 0x30) + 0xe8) = 0;\n    *(*(iVar17 + 0x30) + 0x350) = 0;\n    fcn.004034e0(arg1);\n    *(*(iVar17 + 0x30) + 0xe8) = 1;\n    iVar3 = *(iVar17 + 0x30);\n    if (iVar3 == iVar2) {\n        while( true ) {\n            LOCK();\n            piVar1 = iVar3 + 0x350;\n            if (*piVar1 == 0) break;\n            fcn.00459d60();\n        }\n        *piVar1 = 1;\n        fcn.0043b800();\n        iVar17 = *(iVar17 + 0x30);\n        *(iVar17 + 0x2e0) = uVar9;\n        *(iVar17 + 0x2e4) = uVar10;\n        *(iVar17 + 0x2e8) = uVar11;\n        *(iVar17 + 0x2ec) = uVar12;\n        *(iVar17 + 0x2f0) = uVar13;\n        *(iVar17 + 0x2f4) = uVar14;\n        *(iVar17 + 0x2f8) = uVar15;\n        *(iVar17 + 0x2fc) = uVar16;\n        *(iVar17 + 0x300) = uVar5;\n        *(iVar17 + 0x304) = uVar6;\n        *(iVar17 + 0x308) = uVar7;\n        *(iVar17 + 0x30c) = uVar8;\n        return;\n    }\n    fcn.004320e0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 899
    },
    "00403980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403980(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x004217c0();\n    if (cVar2 == '\\0') {\n        if (*0x734cf0 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x734cf0;\n            iVar4 = (*0x734cf0)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "00404620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404620(void)\n\n{\n    fcn.00404660(1);\n    return;\n}\n",
        "token_count": 25
    },
    "00405360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405360(void)\n\n{\n    fcn.004053a0(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00405d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405d00(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004053a0(0, in_RAX);\n    return;\n}\n",
        "token_count": 94
    },
    "004064e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.004064e0(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x4065c0);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 222
    },
    "00406620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00406620(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00433ac0();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 932
    },
    "004077a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004077a0(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0xb31a546e) {\n            if (uVar4 < 0x7925028d) {\n                if (uVar4 < 0x2ea27ffc) {\n                    if (uVar4 == 0x13ff06c5) {\n                        if (in_RAX == 0x49b0e0) {\n                            fcn.00433860();\n                            fcn.00433b00();\n                            fcn.004338e0();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x2ea27ffb) && (uVar5 = 0x49b320,  in_RAX == 0x49b320)) {\n                        fcn.00433860();\n                        fcn.00433b60(uVar5, param_2);\n                        fcn.004338e0();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x663e425f) {\n                    if (in_RAX == 0x49c020) {\n                        fcn.00433860();\n                        fcn.00433e60();\n                        fcn.004338e0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x7925028c) && (in_RAX == 0x49b260)) {\n                    fVar1 = *(unaff_RBX + 4);\n                    fVar2 = *unaff_RBX;\n                    fcn.00433860();\n                    fcn.00433dc0(fVar2, fVar1);\n                    fcn.004338e0();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x963f9c00) {\n                if (uVar4 == 0x86318d2e) {\n                    if (in_RAX == 0x49bfe0) {\n                        fcn.00433860();\n                        fcn.00433e60();\n                        fcn.004338e0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x963f9bff) && (in_RAX == 0x49b960)) {\n                    fcn.00433860();\n                    fcn.00433f60();\n                    fcn.004338e0();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xb0c23ed3) {\n                uVar5 = 0x49b2e0;\n                if (in_RAX == 0x49b2e0) {\n                    fcn.00433860();\n                    fcn.00433b60(uVar5, param_2);\n                    fcn.004338e0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xb31a546d) && (in_RAX == 0x49b220)) {\n                uVar5 = unaff_RBX[1];\n                uVar3 = *unaff_RBX;\n                fcn.00433860();\n                fcn.00433dc0(uVar3, uVar5);\n                fcn.004338e0();\n                return;\n            }\n        }\n        else if (uVar4 < 0xd04ae83e) {\n            if (uVar4 < 0xbd4ad793) {\n                if (uVar4 == 0xbbad4102) {\n                    if (in_RAX == 0x49b920) {\n                        fcn.00433860();\n                        fcn.00433f60();\n                        fcn.004338e0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0xbd4ad792) && (in_RAX == 0x49c060)) {\n                    fcn.00433860();\n                    fcn.00433e60();\n                    fcn.004338e0();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xcc06c027) {\n                if (in_RAX == 0x49b9a0) {\n                    fcn.00433860();\n                    fcn.00433f60();\n                    fcn.004338e0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xd04ae83d) && (in_RAX == 0x49bfa0)) {\n                fcn.00433860();\n                fcn.00433e60();\n                fcn.004338e0();\n                return;\n            }\n        }\n        else if (uVar4 < 0xe0ff5cb5) {\n            if (uVar4 == 0xd5b87712) {\n                if (in_RAX == 0x49bf20) {\n                    fcn.00433860();\n                    fcn.00433e60();\n                    fcn.004338e0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xe0ff5cb4) && (in_RAX == 0x49bea0)) {\n                fcn.00433860();\n                fcn.00434160();\n                fcn.004338e0();\n                return;\n            }\n        }\n        else if (uVar4 == 0xecd580ce) {\n            if (in_RAX == 0x49b8e0) {\n                fcn.00433860();\n                fcn.00433f60();\n                fcn.004338e0();\n                return;\n            }\n        }\n        else if (uVar4 == 0xeff20ea0) {\n            if (in_RAX == 0x49bf60) {\n                fcn.00433860();\n                fcn.00433e60();\n                fcn.004338e0();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xf75371fa) && (in_RAX == 0x49b8a0)) {\n            fcn.00433860();\n            fcn.00433f60();\n            fcn.004338e0();\n            return;\n        }\n        fcn.00407d00();\n        return;\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 1511
    },
    "00408e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00408e00(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 207
    },
    "00408fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408fa0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "004093c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004093c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    if (*0x734cf0 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x734cf0;\n        iVar3 = (*0x734cf0)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x160);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00408e60();\n        }\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 269
    },
    "00409700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00409700(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x729ec0;\n    }\n    else {\n        puVar1 = fcn.0040b560(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 159
    },
    "004098a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004098a0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040b560(1);\n    fcn.0040fb00(unaff_RBX);\n    return in_RAX;\n}\n",
        "token_count": 113
    },
    "00409940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409940(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX == NULL) {\n        return NULL;\n    }\n    if ((*unaff_RBX != in_RAX) && (unaff_RBX = fcn.00408b00(1),  unaff_RBX == NULL)) {\n        return NULL;\n    }\n    return unaff_RBX;\n}\n",
        "token_count": 161
    },
    "00409ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00409ac0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00408b00(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "00409b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409b60(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x72dbc0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00409e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409e40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040a7a0();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a060(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040a7e0();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a5e0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40a617;\n                fcn.0042dce0();\n                *(*0x20 + -0x40) = 0x40a62a;\n                fcn.0040a340(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40a645;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40a655;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 412
    },
    "0040a680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040a680(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40a6b7;\n                fcn.0042dce0();\n                *(*0x20 + -0x48) = 0x40a6bc;\n                fcn.0043bc80();\n                *(*0x20 + -0x48) = 0x40a6cf;\n                uVar1 = fcn.0040a340(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40a6d8;\n                fcn.004578c0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40a6f8;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40a708;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "0040a7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a7a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a7e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 86
    },
    "0040b1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b1e0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x48) = 0x40b233;\n                uVar1 = fcn.00414740();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x48) = 0x40b265;\n                fcn.00414600(0);\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x48) = 0x40b28d;\n                uVar1 = fcn.00414740();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                arg1 = 0;\n                *(*0x20 + -0x48) = 0x40b2a9;\n                fcn.00414600(0);\n                if (*(*0x20 + -0x28) == 99) break;\n                iVar2 = *(*0x20 + -0x28) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40b2fd;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40b312;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 787
    },
    "0040b340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040b340(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40b38d;\n                uVar1 = fcn.0040fe60(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40b3c5;\n                        fcn.00412c20();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40b3de;\n                        uVar1 = fcn.0040fe60(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040b3f2;\n                    }\n                }\n                else {\ncode_r0x0040b3f2:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40b445;\n                        fcn.00433860();\n                        *(*0x20 + -0x48) = 0x40b456;\n                        fcn.00434160();\n                        *(*0x20 + -0x48) = 0x40b465;\n                        fcn.00433e60();\n                        *(*0x20 + -0x48) = 0x40b476;\n                        fcn.00434160();\n                        *(*0x20 + -0x48) = 0x40b485;\n                        fcn.00433e60();\n                        *(*0x20 + -0x48) = 0x40b48a;\n                        fcn.00433ac0();\n                        *(*0x20 + -0x48) = 0x40b48f;\n                        fcn.004338e0();\n                        *(*0x20 + -0x48) = 0x40b4a5;\n                        fcn.004320e0();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40b4b6;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40b4c5;\n                fcn.00433860();\n                *(*0x20 + -0x48) = 0x40b4d6;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x40b4e5;\n                fcn.00433e60();\n                *(*0x20 + -0x48) = 0x40b4f6;\n                fcn.00434160();\n                *(*0x20 + -0x48) = 0x40b505;\n                fcn.00433e60();\n                *(*0x20 + -0x48) = 0x40b50a;\n                fcn.00433ac0();\n                *(*0x20 + -0x48) = 0x40b50f;\n                fcn.004338e0();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40b525;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x48) = 0x40b532;\n            in_RAX = fcn.0045c5a0(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40b545;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1452
    },
    "0040bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bf40(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0040b560(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "0040c2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040c2a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40c360;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.00459d60();\n    return uStack56;\n}\n",
        "token_count": 145
    },
    "0040fe00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fe00(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.00410580(unaff_RBX);\n    fcn.0045cc20();\n    return;\n}\n",
        "token_count": 45
    },
    "0040fe40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fe40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 63
    },
    "00410360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00410360(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.0045c5c0(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x75ba18);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00412b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412b00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 82
    },
    "00413340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413340(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x75b9a8) {\n                return;\n            }\n            if (iVar1 == *0x75b9a8 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x413379;\n                fcn.00413160();\n                *(*0x20 + -0x28) = 0x413385;\n                fcn.00445f00();\n                *(*(*0x20 + 8) + 0x488) = *0x75b9a8;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x75b9a8;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x4133b8;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x4133c9;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x4133d2;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x4133e5;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x4133ee;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x4133f3;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x4133f8;\n            fcn.004338e0();\n            *(*0x20 + -0x28) = 0x413409;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x413414;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "00413da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413da0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x75bc60;\n            *(*0x20 + -0x18) = *0x75bc68;\n            iVar2 = 0;\n            iVar3 = *0x75bc60;\n            iVar5 = *0x75bc68;\n            while( true ) {\n                if (iVar5 <= iVar2) {\n                    *0x7895b6 = 1;\n                    return;\n                }\n                uVar1 = *(iVar3 + iVar2 * 8);\n                uVar6 = uVar1 >> 0x14;\n                if (0x3f < uVar6) break;\n                *(*0x20 + -0x20) = iVar2;\n                iVar2 = *(*(uVar6 * 8 + 0x75ba18) + (uVar1 & 0xfffff) * 8);\n                iVar5 = *(iVar2 + 0x210c0);\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x28) = iVar2;\n                    iVar3 = 0x78b4b8;\n                    *(*0x20 + -0x48) = 0x413e51;\n                    iVar2 = fcn.0040c2a0(0x78b4b8);\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x48) = 0x413e89;\n                        fcn.004320e0();\n                        goto code_r0x00413e89;\n                    }\n                    *(*(*0x20 + -0x28) + 0x210c0) = iVar2;\n                }\n                else {\n                    for (iVar3 = 0; iVar3 < 0x10000; iVar3 = iVar3 + 1) {\ncode_r0x00413e89:\n                        *(iVar5 + iVar3) = 0;\n                    }\n                }\n                iVar2 = *(*0x20 + -0x20) + 1;\n                iVar5 = *(*0x20 + -0x18);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x48) = 0x413eac;\n            fcn.0045c5c0(0x40);\n        }\n        *(puVar4 + -8) = 0x413eb2;\n        fcn.00459ea0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 714
    },
    "00413ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413ec0(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x78a040 == 0) {\n                if (*0x78a0c8 < *0x78a0cc) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x7895b6 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x413f29;\n            fcn.004320e0();\n        }\n        *(puVar2 + -8) = 0x413f2f;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 303
    },
    "00413f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413f40(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x75ba18) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x413ffc;\n                in_RAX = fcn.0045c5c0(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x414010;\n            fcn.00433860();\n            *(*0x20 + -0x40) = 0x414015;\n            fcn.00433860();\n            *(*0x20 + -0x40) = 0x414026;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x414030;\n            fcn.00433fc0();\n            *(*0x20 + -0x40) = 0x414035;\n            fcn.00433ac0();\n            *(*0x20 + -0x40) = 0x41403a;\n            fcn.004338e0();\n            *(*0x20 + -0x40) = 0x41403f;\n            fcn.00433860();\n            *(*0x20 + -0x40) = 0x414050;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x41405a;\n            fcn.00433fc0();\n            *(*0x20 + -0x40) = 0x41406b;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x414075;\n            fcn.00433fc0();\n            *(*0x20 + -0x40) = 0x414086;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x41408b;\n            fcn.004338e0();\n            *(*0x20 + -0x40) = 0x4140a6;\n            fcn.0041b640(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x4140c5;\n            fcn.0041b640(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x4140e5;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x414109;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1242
    },
    "00414140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00414140(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0042a840();\n    fcn.0042e820();\n    return uStack24;\n}\n",
        "token_count": 43
    },
    "00414700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414700(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004141c0();\n    return;\n}\n",
        "token_count": 81
    },
    "00414740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414740(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e820();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.0042e820();\n    return 0;\n}\n",
        "token_count": 121
    },
    "00414840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414840(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042a840();\n    return;\n}\n",
        "token_count": 84
    },
    "004158c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004158c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *0x75b9ac = 1;\n    fcn.0041cce0();\n    fcn.0041bc80();\n    *0x78a11c = 0x100000001;\n    return;\n}\n",
        "token_count": 119
    },
    "004173e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004173e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (; *0x7895e4 < *0x7895f4; *0x7895e4 = *0x7895e4 + 1) {\n        fcn.0043c700();\n        fcn.0040a680();\n        *0x78a128 = 0;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00418760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418760(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x78a0cc <= *0x78a0c8) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x418840;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x4187b7;\n                fcn.004355c0();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x78a0c8;\n            *(*0x20 + -0x28) = *0x78a0cc;\n            *(*0x20 + -0x40) = 0x4187ce;\n            fcn.00433860();\n            *(*0x20 + -0x40) = 0x4187d7;\n            fcn.00433e60();\n            *(*0x20 + -0x40) = 0x4187e8;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x4187f1;\n            fcn.00433e60();\n            *(*0x20 + -0x40) = 0x418805;\n            fcn.00434160();\n            *(*0x20 + -0x40) = 0x41880a;\n            fcn.004338e0();\n            *(*0x20 + -0x40) = 0x41881b;\n            fcn.004320e0();\n        }\n        *(puVar1 + -8) = 0x418825;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 544
    },
    "00419860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419860(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *0x78a160 = in_XMM15;\n    fcn.0043a240();\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 123
    },
    "0041b2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b2a0(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    arg3 = 0;\n    iVar1 = fcn.00410200(0);\n    if (iVar1 != 0) {\n        fcn.0041b320(0, *(*(unaff_R14 + 0x30) + 0xa0), arg3);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0041bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bba0(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x735738,  iVar1 = *0x735730,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.00410200(0);\n            fcn.0041b320(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0041bc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bc80(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *(in_RAX + 8) = 0x400000;\n    *(in_RAX + 0x10) = *0x6b52c0;\n    *(in_RAX + 0x40) = 0x222222;\n    fcn.0041cc60();\n    return;\n}\n",
        "token_count": 145
    },
    "0041d440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d440(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n    }\n    arg1_00 = 0;\n    iVar1 = 0;\n    for (uVar2 = 0; uVar2 < unaff_RBX; uVar2 = uVar2 + iVar3) {\n        if (iVar1 + 0x800000000000U < arg1_00 + 0x800000000000) {\n            iVar3 = arg1_00 - iVar1;\n        }\n        else {\n            iVar3 = 0;\n        }\n        if (iVar3 == 0) {\n            iVar1 = fcn.0041d840();\n            if (iVar1 + 0x800000000000U < unaff_RBX + 0x800000000000) {\n                iVar3 = unaff_RBX - iVar1;\n            }\n            else {\n                iVar3 = 0;\n            }\n            arg1_00 = unaff_RBX;\n            if (iVar3 == 0) break;\n        }\n        iVar3 = fcn.0041da00(arg1_00);\n    }\n    fcn.0041d920(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 357
    },
    "0041d920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041d920(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar1 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if ((iVar1 == 0) || (*(in_RAX + 0x100e0) != unaff_EDI)) {\n                return;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + -0x28) = 0x41d997;\n                fcn.004299a0(arg1);\n                return;\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x28) = 0x41d9b2;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_EDI;\n        *(puVar2 + -8) = 0x41d9cb;\n        fcn.0045e5a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "0041e300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041e300(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX - 1 & unaff_RBX) == 0) && (unaff_RBX != 0)) {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + 8) = in_RAX;\n                    iVar3 = 7;\n                    while( true ) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x10) = iVar3;\n                        uVar1 = *(in_RAX + 0x40 + iVar3 * 8);\n                        uVar2 = *(in_RAX + iVar3 * 8);\n                        *(*0x20 + -0x28) = 0x41e375;\n                        iVar3 = fcn.0041e140(iVar3, uVar1 | uVar2);\n                        if (iVar3 != -1) break;\n                        iVar3 = *(*0x20 + -0x10) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    return 1;\n                }\n                *(*0x20 + -0x28) = 0x41e39b;\n                fcn.00433860();\n                *(*0x20 + -0x28) = 0x41e3ac;\n                fcn.00434160();\n                *(*0x20 + -0x28) = 0x41e3b6;\n                fcn.00433e60();\n                *(*0x20 + -0x28) = 0x41e3bb;\n                fcn.00433ac0();\n                *(*0x20 + -0x28) = 0x41e3c5;\n                fcn.004338e0();\n                *(*0x20 + -0x28) = 0x41e3d6;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x28) = 0x41e3db;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x41e3ec;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x41e3f6;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x41e3fb;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x41e405;\n            fcn.004338e0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x28) = 0x41e416;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41e426;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 889
    },
    "0041e780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e780(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x41e82d;\n                    iVar1 = fcn.00420ec0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x41e807;\n                        iVar1 = fcn.00420ec0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x41e86b;\n                fcn.0045c5a0(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x41e87c;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41e890;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 884
    },
    "004207e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004207e0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = fcn.00420ec0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00421200();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00420ec0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 162
    },
    "00421140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421140(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00420e60();\n    fcn.00409c20();\n    return;\n}\n",
        "token_count": 90
    },
    "004211a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004211a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00420e00();\n    fcn.00409c20();\n    return;\n}\n",
        "token_count": 91
    },
    "00421200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00421200(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x78a040 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x78a040 >> 0x13) << 3;\n        *0x78a040 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00420e00();\n    return piVar1;\n}\n",
        "token_count": 176
    },
    "004212a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004212a0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x4212c5;\n            iVar2 = fcn.00420ec0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x421313;\n                fcn.0045cee0(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x42131d;\n                fcn.004211a0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x421339;\n            in_RAX = fcn.0045c5a0(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421345;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 484
    },
    "00421860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00421860(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x75ba18);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00422620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422620(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x42263f;\n                fcn.004229e0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x42265a;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42266e;\n        fcn.0045e5a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 367
    },
    "004232c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004232c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 82
    },
    "004233c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004233c0(uint8_t param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045e5a0();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.00409e80();\n    fcn.00423440(param_1);\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 134
    },
    "004240e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004240e0(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    puVar1 = fcn.00423cc0();\n    if (puVar1 != NULL) {\n        fcn.00409e80();\n        *0x762380 = *0x762380 - *0x762350;\n        *puVar1 = *0x762368;\n        *0x762368 = puVar1;\n        fcn.0040a0a0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00424180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424180(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4241af;\n            fcn.00409e80();\n            *(*0x20 + -0x30) = 0x4241bb;\n            uVar3 = fcn.00415780();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x4241ce;\n            fcn.0040a0a0();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x4241ea;\n            cVar2 = fcn.00423a80();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x424209;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x424219;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 540
    },
    "00424380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00424380(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x789890;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x789890 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x789890 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00424414:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x424435;\n                fcn.00409e80();\n                piVar2 = *0x789890;\n                if (*0x789890 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x789890 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004244b4:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42462c;\n                        fcn.0040a0a0();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x4244c5;\n                    piVar4 = fcn.004247a0();\n                    piVar2 = *0x789890;\n                    if (*0x789890 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x789890 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00424540:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x30) = iVar6;\n                            piVar4[1] = *0x789888;\n                            *(*0x20 + -0x48) = 0x42460a;\n                            *0x789888 = piVar4;\n                            fcn.0040a0a0();\n                            return *(*0x20 + -0x30);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x004245a5:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x28) = iVar5;\n                                piVar4[1] = *0x789890;\n                                *(*0x20 + -0x48) = 0x4245d6;\n                                *0x789890 = piVar4;\n                                fcn.0040a0a0();\n                                return *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = 0x424659;\n                            fcn.004320e0();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x004245a5;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x004245a5;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x424666;\n                        fcn.0045c5c0(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x789890;\n                        **0x789890 = **0x789890 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00424540;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x00424540;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x424673;\n                    fcn.0045c5c0(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x789890;\n                    **0x789890 = **0x789890 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004244b4;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004244b4;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x42467d;\n                fcn.0045c5c0(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x789890;\n                **0x789890 = **0x789890 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00424414;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00424414;\n                }\n            }\n            *(*0x20 + -0x48) = 0x424687;\n            in_RAX = fcn.0045c5c0(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x424692;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1786
    },
    "004246a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004246a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00424380();\n    return;\n}\n",
        "token_count": 81
    },
    "004246e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004246e0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    if (*0x7898a0 != 0) {\n        iVar1 = *0x7898a0;\n        if (*0x789888 == 0) {\n            *0x789888 = *0x7898a0;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x789888;\n            *0x789888 = *0x7898a0;\n        }\n    }\n    uVar2 = *0x789890;\n    *0x7898a0 = *0x789898;\n    *0x789898 = *0x789890;\n    *0x789890 = 0;\n    fcn.0040a0a0(uVar2);\n    return;\n}\n",
        "token_count": 288
    },
    "004247a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004247a0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x789888 != 0) {\n                *(*0x20 + -0x18) = *0x789888;\n                *0x789888 = *(*0x789888 + 8);\n                *(*0x20 + -0x30) = 0x4247df;\n                fcn.0045cc20();\n                puVar2 = *(*0x20 + -0x18);\n                goto code_r0x00424822;\n            }\n            *(*0x20 + -0x30) = 0x4247f4;\n            fcn.0040a0a0();\n            *(*0x20 + -0x30) = 0x424805;\n            iVar1 = fcn.00414140();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42481d;\n                fcn.00409e80();\n                puVar2 = *(*0x20 + -0x10);\ncode_r0x00424822:\n                puVar2[1] = 0;\n                *puVar2 = 0;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x42484c;\n            fcn.004320e0();\n        }\n        *(puVar3 + -8) = 0x424852;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 478
    },
    "004269c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004269c0(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045c5a0(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 704
    },
    "00428fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428fc0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004340e0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    else {\n        fcn.00453cc0();\n        fcn.00433860();\n        fcn.00434160();\n        fcn.004340e0();\n        fcn.00434160();\n        fcn.00433fc0();\n        fcn.00434160();\n        fcn.00434160();\n        fcn.00434160();\n        fcn.004338e0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.004530c0();\n        fcn.00459d60();\n    }\n    else {\n        fcn.004530c0();\n        fcn.00452440(0);\n    }\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 422
    },
    "00429260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429260(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00433860();\n    fcn.00434160();\n    fcn.004340e0();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.004338e0();\n    fcn.004530c0();\n    fcn.00459d60();\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 241
    },
    "00429400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429400(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00433860();\n    fcn.00434160();\n    fcn.004338e0();\n    fcn.00453300();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.004338e0();\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 222
    },
    "004294c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004294c0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x429510;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x429525;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "00429540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00429540(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x4295ea;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x429605;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 574
    },
    "00429620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00429620(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX + 0x800000000000U < arg1 + 0x800000000000U) {\n        if (unaff_RBX + 0x800000000000U <= arg1 + 0x800000000000U) {\n            return in_RAX;\n        }\n        iVar1 = fcn.004294c0();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00429780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00429780(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x00429870;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.0045c5a0(arg1);\ncode_r0x00429870:\n    fcn.0045c5a0(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 515
    },
    "00429880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00429880(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t *arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x4298a7;\n            piVar3 = fcn.00429780();\n            if (piVar3 == NULL) {\n                arg1 = (*(*0x20 + 8))[1];\n                if (arg1 != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (piVar3 - 1U < arg1) {\n                    iVar5 = (piVar3 - 1U) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= piVar3) {\n                        return 0;\n                    }\n                    if (piVar3 < arg1) {\n                        return *(piVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x429968;\n                    fcn.0045c5a0(arg1);\n                }\n                *(*0x20 + -0x20) = 0x429970;\n                fcn.0045c5a0(arg1);\n            }\n            *(*0x20 + -0x20) = 0x429977;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x429987;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "00429f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00429f00(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    \n    iVar1 = *in_RAX;\n    if (in_RAX[1] == 0) {\n        return 0;\n    }\n    iVar4 = in_RAX[1] + -1;\n    iVar5 = iVar4 * 0x10;\n    iVar2 = *(iVar1 + 8 + iVar5);\n    iVar3 = *(iVar1 + iVar5);\n    if (iVar3 + 0x800000000000U < iVar2 + 0x800000000000U) {\n        uVar6 = iVar2 - iVar3;\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (unaff_RBX < uVar6) {\n        *(iVar1 + 8 + iVar5) = iVar2 - unaff_RBX;\n        in_RAX[3] = in_RAX[3] - unaff_RBX;\n        return iVar2 - unaff_RBX;\n    }\n    in_RAX[1] = iVar4;\n    in_RAX[3] = in_RAX[3] - uVar6;\n    return iVar3;\n}\n",
        "token_count": 312
    },
    "00429f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429f80(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg2;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = 0x429fa7;\n            uVar2 = fcn.00429780();\n            if (uVar2 == 0) {\n                iVar12 = *(*0x20 + 8);\n                *(iVar12 + 0x18) = 0;\n                *(iVar12 + 8) = 0;\n                return;\n            }\n            puVar9 = *(*0x20 + 8);\n            uVar10 = *puVar9;\n            uVar5 = puVar9[1];\n            if (uVar2 <= uVar5) break;\n            *(*0x20 + -0x58) = 0x42a18a;\n            in_RAX = fcn.0045c660(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x42a19a;\n        fcn.00459ea0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    uVar5 = uVar5 - uVar2;\n    piVar11 = (uVar2 << 4 & uVar2 - puVar9[2] >> 0x3f) + uVar10;\n    if (uVar5 < 1) {\n        iVar12 = 0;\n        goto code_r0x0042a014;\n    }\n    iVar3 = 0;\n    iVar6 = 0;\n    do {\n        if (*piVar11 + 0x800000000000U < piVar11[1] + 0x800000000000U) {\n            iVar12 = piVar11[1] - *piVar11;\n        }\n        else {\n            iVar12 = 0;\n        }\n        iVar3 = iVar3 + 1;\n        iVar12 = iVar12 + iVar6;\n        iVar6 = iVar12;\n        if (uVar5 <= iVar3) {\ncode_r0x0042a014:\n            uVar5 = uVar2;\n            iVar6 = uVar5 - 1;\n            piVar11 = iVar6 * 0x10;\n            iVar3 = *(uVar10 + piVar11);\n            iVar1 = *(uVar10 + 8 + piVar11);\n            uVar10 = 0x800000000000;\n            uVar2 = *(*0x20 + 0x10) + 0x800000000000;\n            if ((uVar2 < iVar3 + 0x800000000000U) || (iVar1 + 0x800000000000U <= uVar2)) {\ncode_r0x0042a10d:\n                arg2 = puVar9[2];\n                if (uVar5 <= arg2) {\n                    puVar9[1] = uVar5;\n                    puVar9[3] = puVar9[3] - iVar12;\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x42a130;\n                uVar2 = uVar5;\n                fcn.0045c620(uVar5, arg2);\n            }\n            else {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = iVar6;\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x30) = piVar11;\n                *(*0x20 + -0x38) = iVar12;\n                *(*0x20 + -0x58) = 0x42a07d;\n                iVar4 = fcn.00429620(*(*0x20 + 0x10));\n                iVar12 = (*(*0x20 + -0x20) - *(*0x20 + -0x28)) + *(*0x20 + -0x38);\n                uVar10 = iVar4 + 0x800000000000;\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 == 0) {\n                    puVar9 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x18);\n                    goto code_r0x0042a10d;\n                }\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                iVar12 = iVar12 - iVar7;\n                puVar9 = *(*0x20 + 8);\n                uVar10 = *puVar9;\n                uVar5 = puVar9[1];\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < uVar5) {\n                    iVar7 = *(*0x20 + -0x30);\n                    *(uVar10 + iVar7) = iVar4;\n                    *(uVar10 + 8 + iVar7) = iVar1;\n                    uVar5 = *(*0x20 + -0x10);\n                    goto code_r0x0042a10d;\n                }\n            }\n            *(*0x20 + -0x58) = 0x42a138;\n            fcn.0045c5a0(uVar5);\n        }\n        piVar11 = piVar11 + 2;\n    } while( true );\n}\n",
        "token_count": 1520
    },
    "0042a1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a1c0(void)\n\n{\n    uint64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX[2] < in_RAX[1]) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX[1] = 0;\n                unaff_RBX[2] = in_RAX[2];\n                iVar1 = unaff_RBX[4];\n                *(*0x20 + -0x28) = 0x42a215;\n                iVar1 = fcn.0040c2a0(iVar1);\n                unaff_RBX = *(*0x20 + 0x10);\n                *unaff_RBX = iVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            arg2 = unaff_RBX[2];\n            arg1 = in_RAX[1];\n            if (arg1 <= arg2) {\n                unaff_RBX[1] = arg1;\n                unaff_RBX[3] = in_RAX[3];\n                if (in_RAX[1] < arg1) {\n                    arg1 = in_RAX[1];\n                }\n                if (*unaff_RBX != *in_RAX) {\n                    *(*0x20 + -0x28) = 0x42a265;\n                    fcn.0045cee0(arg1 << 4);\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x42a274;\n            in_RAX = fcn.0045c620(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42a285;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 616
    },
    "0042a440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042a440(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    while( true ) {\n        uVar12 = *(in_RAX + 0x20);\n        uVar10 = uVar12 >> 0x20;\n        if (uVar12 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar12 >> 0x29) break;\n        while (uVar11 = uVar12 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar12 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar12 & 0xffffffff));\n            if (uVar12 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar13 = *piVar2;\n                while (iVar13 == 0) {\n                    iVar13 = *piVar2;\n                }\n                iVar9 = *piVar2;\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.00409c20(uVar6, iVar8, iVar9);\n                }\n                return iVar13;\n            }\n            uVar12 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 623
    },
    "0042a580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a580(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042a5f6;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042a5f6;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42a5f0;\n                        fcn.00409c20(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042a5f6:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42a61d;\n                    fcn.004320e0();\n                }\n                *(*0x20 + -0x30) = 0x42a62e;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42a63d;\n            fcn.00433860();\n            *(*0x20 + -0x30) = 0x42a64e;\n            fcn.00434160();\n            *(*0x20 + -0x30) = 0x42a658;\n            fcn.00433e60();\n            *(*0x20 + -0x30) = 0x42a669;\n            fcn.00434160();\n            *(*0x20 + -0x30) = 0x42a675;\n            fcn.00433e60();\n            *(*0x20 + -0x30) = 0x42a67a;\n            fcn.00433ac0();\n            *(*0x20 + -0x30) = 0x42a67f;\n            fcn.004338e0();\n            *(*0x20 + -0x30) = 0x42a690;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42a69b;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "0042a6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042a6c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040c2a0(0x78b4b8);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 267
    },
    "0042a760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a760(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42a79e;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x42a7af;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x42a7bd;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x42a7ce;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x42a7da;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x42a7df;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x42a7e5;\n            fcn.004338e0();\n            *(*0x20 + -0x28) = 0x42a7f6;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42a805;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "0042a840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a840(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (in_RAX == NULL) {\n        return;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433e60();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.004320e0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 237
    },
    "0042aa00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042aa00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x28) = 0x42aa4d;\n                fcn.0040a0a0();\n                return;\n            }\n            LOCK();\n            piVar1 = iVar3 + 0x26d4;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + 1;\n            if ((iVar2 + 1U & 1) == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = iVar2 + 1U;\n            *(*0x20 + -0x28) = 0x42aa65;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x42aa76;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x42aa7f;\n            fcn.00433e60();\n            *(*0x20 + -0x28) = 0x42aa85;\n            fcn.00433ac0();\n            *(*0x20 + -0x28) = 0x42aa8a;\n            fcn.004338e0();\n            *(*0x20 + -0x28) = 0x42aa9b;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x42aaa6;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 554
    },
    "0042af40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042af40(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 139
    },
    "0042b320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b320(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42b365;\n            fcn.0042e820();\n            *0x71d288 = *(*0x20 + -0x18);\n            if (*0x71d288 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42b399;\n            fcn.0045da20();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42b3ba;\n            fcn.00433860();\n            *(*0x20 + -0x48) = 0x42b3cb;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x42b3d5;\n            fcn.00433e60();\n            *(*0x20 + -0x48) = 0x42b3e6;\n            fcn.00434160();\n            *(*0x20 + -0x48) = 0x42b3eb;\n            fcn.004338e0();\n            *(*0x20 + -0x48) = 0x42b3fc;\n            fcn.004320e0();\n        }\n        *(puVar1 + -8) = 0x42b405;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 668
    },
    "0042b980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b980(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42b9bb;\n                fcn.0042afc0(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42b9ce;\n            fcn.00433860();\n            *(*0x20 + -0x30) = 0x42b9df;\n            fcn.00434160();\n            *(*0x20 + -0x30) = 0x42b9eb;\n            fcn.00433f60();\n            *(*0x20 + -0x30) = 0x42b9f0;\n            fcn.00433ac0();\n            *(*0x20 + -0x30) = 0x42b9f5;\n            fcn.004338e0();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42ba06;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42ba1e;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 653
    },
    "0042ba40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042ba40(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42ba89;\n                    fcn.0042e720();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42babd;\n                fcn.004320e0();\n            }\n            *(*0x20 + -0x30) = 0x42bac5;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42badf;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "0042c7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c7a0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e820();\n    if (iStack16 != 0) {\n        *0x7895ac = 1;\n        fcn.0042e6a0();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0042cc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042cc40(void)\n\n{\n    fcn.0042e6a0();\n    return -*0x789760 * *0x789758;\n}\n",
        "token_count": 40
    },
    "0042ccc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042ccc0(void)\n\n{\n    fcn.0042e6a0();\n    fcn.0042e6a0();\n    return 0x195726909;\n}\n",
        "token_count": 44
    },
    "0042d0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d0a0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.0042e720();\n        fcn.004418c0(arg1);\n        return;\n    }\n    fcn.0045c5a0(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 104
    },
    "0042d3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d3a0(void)\n\n{\n    fcn.00409e80();\n    *0x7895d0 = 1;\n    fcn.0042e6a0();\n    return;\n}\n",
        "token_count": 50
    },
    "0042de40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042de40(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.0042e920();\n    if (iStack32 != 0) {\n        fcn.0042e6a0();\n        return;\n    }\n    if (*0x7895d0 != 0) goto code_r0x0042df8e;\n    do {\n        fcn.0045da20();\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433f60();\n        fcn.00434160();\n        fcn.00433e60();\n        fcn.00434160();\n        fcn.004338e0();\n        fcn.004320e0();\ncode_r0x0042df8e:\n        fcn.00409e80();\n        fcn.00409e80();\n    } while( true );\n}\n",
        "token_count": 196
    },
    "0042e460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e460(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x348) != 0) {\n        fcn.0042e6a0();\n        *(in_RAX + 0x348) = 0;\n    }\n    if (*(in_RAX + 0x338) != 0) {\n        fcn.0042e6a0();\n        *(in_RAX + 0x338) = 0;\n    }\n    if (*(in_RAX + 0x340) != 0) {\n        fcn.0042e6a0();\n        *(in_RAX + 0x340) = 0;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0042e640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e640(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x2a0) = 0;\n    *(iVar1 + 0x2a8) = auStackX8;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 100
    },
    "0042e6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e6a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 1;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 125
    },
    "0042e720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e720(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 2;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 123
    },
    "0042e7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e7a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 3;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 133
    },
    "0042e820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e820(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 4;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 131
    },
    "0042e8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e8a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 5;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 133
    },
    "0042e920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e920(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 6;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 131
    },
    "0042e9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e9a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 7;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042e560();\n    return;\n}\n",
        "token_count": 133
    },
    "0042ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ea20(void)\n\n{\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 25
    },
    "00430bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430bc0(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 86
    },
    "00433860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433860(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.00409e80();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 203
    },
    "00433a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433a80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00434160();\n    return;\n}\n",
        "token_count": 81
    },
    "00433ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433ac0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00434160();\n    return;\n}\n",
        "token_count": 81
    },
    "00433b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433b00(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_AL == '\\0') {\n        fcn.00434160();\n    }\n    else {\n        fcn.00434160();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00433dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433dc0(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433b60(param_1, param_2);\n    fcn.00433b60(param_1, param_2);\n    fcn.00434160();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 147
    },
    "00433f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433f60(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX < 0) {\n        fcn.00434160();\n    }\n    fcn.00433e60();\n    return;\n}\n",
        "token_count": 111
    },
    "00433fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433fc0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = 0;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43400f;\n            uVar2 = fcn.0045c84b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4aea49),  0xf < uVar2 ||\n                 (iVar1 = *0x7896f8 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x7896f8, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x434098;\n                    fcn.00433940(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x4340b2;\n                fcn.0045c5a0(100);\n            }\n            *(*0x20 + -0x90) = 0x4340bc;\n            in_RAX = fcn.0045c5a0(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4340c7;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 624
    },
    "004340e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004340e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433fc0();\n    return;\n}\n",
        "token_count": 82
    },
    "00434120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434120(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433fc0();\n    return;\n}\n",
        "token_count": 81
    },
    "004341e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004341e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.00433f60();\n    fcn.00434160();\n    fcn.004338e0();\n    fcn.00433fc0();\n    return;\n}\n",
        "token_count": 144
    },
    "004342c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004342c0(code **arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    *0x7896f8 = 0x10;\n    for (uVar2 = 0; uVar2 + in_RAX < unaff_RBX; uVar2 = uVar2 + 8) {\n        if ((uVar2 & 0xf) == 0) {\n            if (uVar2 != 0) {\n                fcn.00433860();\n                fcn.00433ac0();\n                fcn.004338e0();\n            }\n            fcn.00433860();\n            fcn.00433fc0();\n            fcn.00434160();\n            fcn.004338e0();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00433940(1);\n        fcn.00433860();\n        fcn.00433fc0();\n        fcn.004338e0();\n        fcn.00433860();\n        fcn.00433a80();\n        fcn.004338e0();\n        puVar3 = fcn.0044a780();\n        if (puVar3 != NULL) {\n            fcn.0044ae60();\n            uVar1 = *puVar3;\n            fcn.00433860();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00434160();\n            fcn.00433fc0(uVar1);\n            fcn.00434160();\n            fcn.004338e0();\n        }\n    }\n    *0x7896f8 = 0;\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 505
    },
    "00434b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434b20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 82
    },
    "00435500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435500(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar1 = *0x735718;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 156
    },
    "004355c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004355c0(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x789648,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00435660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00435660(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00401080();\n    *0x7895a5 = *0x789d45;\n    *0x7895a6 = *0x789c00;\n    *0x7895b9 = *0x789de7;\n    *0x7895ba = *0x789dea;\n    *0x7895bb = *0x789dee;\n    return;\n}\n",
        "token_count": 156
    },
    "00435960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435960(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x736110 - *0x736120 <= *0x736118) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x736118;\n            *(*0x20 + -0x28) = 0x4359a5;\n            fcn.00433860();\n            *(*0x20 + -0x28) = 0x4359b6;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x4359c5;\n            fcn.00433f60();\n            *(*0x20 + -0x28) = 0x4359d6;\n            fcn.00434160();\n            *(*0x20 + -0x28) = 0x4359db;\n            fcn.004338e0();\n            *(*0x20 + -0x28) = 0x4359ec;\n            fcn.004320e0();\n        }\n        *(puVar1 + -8) = 0x4359f2;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 387
    },
    "00435a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00435a00(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x736110 <= *0x736110 + 1) {\n                *(*0x20 + -0x10) = *0x736110;\n                *(*0x20 + -0x28) = 0x435a36;\n                *0x736110 = *0x736110 + 1;\n                fcn.00435960();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x435a56;\n            fcn.004320e0();\n        }\n        *(puVar1 + -8) = 0x435a5c;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 297
    },
    "00436de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436de0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x436e29;\n                fcn.00459c80();\n                *(*0x20 + -0x28) = 0x436e45;\n                fcn.0042e000();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x735ce0) {\n                    *(*0x20 + -0x28) = 0x436e5c;\n                    fcn.00436ee0();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x436e7d;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x735ce0) {\n                    *(*0x20 + -0x28) = 0x436e9e;\n                    fcn.0043e360();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x436eb7;\n                fcn.0043a560();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x436ed2;\n            fcn.004320e0();\n        }\n        *(puVar4 + -8) = 0x436ed8;\n        fcn.00459ea0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 654
    },
    "00436f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436f20(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    do {\n        fcn.0040a200();\n        *(*(unaff_R14 + 0x30) + 0x120) = 0;\n        cVar1 = fcn.004380c0();\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "004379e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004379e0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x7895d8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *0x7895d8 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00437ca0();\n        uVar3 = *0x789698;\n        *0x789698 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00437a60();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00437a60();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "004381a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004381a0(void)\n\n{\n    fcn.004380c0();\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 34
    },
    "004389c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004389f7)\n\nvoid fcn.004389c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x736138 != 0) {\n        if (*0x73613c != 0) {\n            return;\n        }\n        LOCK();\n        *0x73613c = 1;\n        fcn.00438420();\n        return;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0043a160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a160(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7360e8 == 0) {\n        if ((*0x7360f0 == 0) || (in_RAX < *0x7360f0)) {\n            fcn.0042b4e0();\n        }\n    }\n    else {\n        fcn.004389c0();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043bc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043bc80(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x274) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043b780();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.00459d60();\n    }\n    fcn.004363a0(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.00459d60();\n    }\n    fcn.00459d60();\n    fcn.0043b780();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 426
    },
    "0043c380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043c380(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar2 = fcn.00440020();\n    iVar1 = *0x7361f0;\n    if ((iVar2 != 0) && (*0x7361f0 != 0)) {\n        *0x7361f0 = 0;\n        fcn.0040a180(iVar1);\n    }\n    fcn.0040a0a0();\n    if (iVar2 != 0) {\n        fcn.0043e360();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "0043c5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c5a0(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = fcn.0040bf40();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.00459d60();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0043c700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c700(void)\n\n{\n    fcn.00459d60();\n    return;\n}\n",
        "token_count": 25
    },
    "0043e640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e640(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    *0x73610c = *0x73610c + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043e6a0();\n    }\n    fcn.0040a0a0();\n    return;\n}\n",
        "token_count": 143
    },
    "0043fc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043fc60(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *(in_RAX + 0x130) = *0x736100;\n    *0x736108 = *0x736108 + 1;\n    *0x736100 = in_RAX;\n    fcn.0043e6a0();\n    return;\n}\n",
        "token_count": 137
    },
    "00440140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00440140(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0xdf8);\n            LOCK();\n            puVar1 = in_RAX + 0xdf8;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x5f4);\n        if (uVar2 - *(in_RAX + 0x5f0) < 0x100) {\n            *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x5f4) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.00440240(*(in_RAX + 0x5f0));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 415
    },
    "00440600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00440600(void)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t in_RAX;\n    uint32_t uVar7;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack24 = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n    uStack16 = CONCAT44(in_XMM15_Dd, in_XMM15_Dc);\n    uVar3 = *(in_RAX + 0xdf8);\n    if (uVar3 == 0) {\n        bVar8 = false;\n    }\n    else {\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        bVar8 = uVar3 == *puVar1;\n        *puVar1 = *puVar1 ^ bVar8 * *puVar1;\n    }\n    uVar4 = uStack24;\n    uVar5 = uStack16;\n    if ((bVar8) && (*(uVar3 + 0xa0) = 0,  uVar4 = uVar3,  uVar5 = uVar3,  uStack16 != 0)) {\n        *(uStack16 + 0xa0) = uVar3;\n        uVar4 = uStack24;\n    }\n    do {\n        do {\n            uStack16 = uVar5;\n            uStack24 = uVar4;\n            iVar2 = *(in_RAX + 0x5f0);\n            uVar7 = *(in_RAX + 0x5f4) - iVar2;\n            if (uVar7 == 0) {\n                return uStack24;\n            }\n            uVar4 = uStack24;\n            uVar5 = uStack16;\n        } while (0x100 < uVar7);\n        LOCK();\n    } while (iVar2 != *(in_RAX + 0x5f0));\n    *(in_RAX + 0x5f0) = uVar7 + iVar2;\n    for (uVar6 = 0; uVar6 < uVar7; uVar6 = uVar6 + 1) {\n        uVar3 = *(in_RAX + 0x5f8 + (uVar6 + iVar2) * 8);\n        *(uVar3 + 0xa0) = 0;\n        uVar4 = uVar3;\n        if (uStack16 != 0) {\n            *(uStack16 + 0xa0) = uVar3;\n            uVar4 = uStack24;\n        }\n        uStack24 = uVar4;\n        uStack16 = uVar3;\n    }\n    return uStack24;\n}\n",
        "token_count": 662
    },
    "004415a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004415a0(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x7899e0 = 1;\n            *0x789a00 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x4415dd;\n            uVar3 = fcn.00406b60();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x789a1c = (*0x789a20 | *0x789a24 | *0x789a28) != 0;\n                    *(*0x20 + -0x88) = 0x44179f;\n                    fcn.00406b60();\n                    *(*0x20 + -0x88) = 0x4417a5;\n                    fcn.00457bc0();\n                    *0x78961c = *0x71d188;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x44160f;\n                fcn.00402a80(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x0044189a;\n                    if (param_2 < param_1 + 1) goto code_r0x00441892;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x441695;\n                fcn.00402a80(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x004415df:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x441725;\n                        uVar4 = param_2;\n                        uVar3 = fcn.00449a80();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x789638 = uVar3;\n                        }\n                    }\n                    else if (0 < *0x72e5e8) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x72e5e8;\n                        iVar8 = 0;\n                        iVar5 = *0x72e5e8;\n                        iVar7 = *0x72e5e0;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x4417ed;\n                                cVar2 = fcn.004025e0(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x441831;\n                                    iVar5 = fcn.00449a80();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x004415df;\n                }\n                *(*0x20 + -0x88) = 0x44188d;\n                fcn.0045c660(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x441892;\n            fcn.0045c5e0(param_1, param_2);\ncode_r0x00441892:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x44189a;\n            param_2 = param_1;\n            fcn.0045c660(param_1);\ncode_r0x0044189a:\n            *(*0x20 + -0x88) = 0x44189f;\n            fcn.0045c5e0(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x4418a5;\n        fcn.00459ea0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1954
    },
    "004418c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004418c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x441905;\n                fcn.0045de80();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x441950;\n                uVar3 = fcn.0045bfc0(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x4419a5;\n                        fcn.0045c5a0(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x004419a5;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x004419a5:\n            *(*0x20 + -0x30) = 0x4419b0;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045c5a0(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4419ca;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 885
    },
    "00441a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441a40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.00459d60();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00441c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441c60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = 0;\n            iVar3 = 0;\n            while( true ) {\n                if (unaff_RSI <= iVar2) {\n                    return;\n                }\n                arg3 = *(unaff_RDI + iVar2 * 2);\n                if (unaff_RBX <= arg3) break;\n                iVar1 = *(in_RAX + arg3 * 0x10);\n                if (iVar3 != iVar1) {\n                    *(*0x20 + -0x18) = iVar2;\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x30) = 0x441cc8;\n                    fcn.00409e80();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                iVar2 = iVar2 + 1;\n            }\n            *(*0x20 + -0x30) = 0x441cfd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x441d25;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 797
    },
    "00441d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441d60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = unaff_RSI;\ncode_r0x00441d90:\n            uVar1 = uVar1 - 1;\n            if (uVar1 < 0) {\n                return;\n            }\n            unaff_RSI = *(unaff_RDI + uVar1 * 2);\n            if (unaff_RSI < unaff_RBX) {\n                *(*0x20 + -0x10) = uVar1;\n                unaff_RSI = *(in_RAX + unaff_RSI * 0x10);\n                if (uVar1 < 1) goto code_r0x00441dc8;\n                arg3 = *(unaff_RDI + -2 + uVar1 * 2);\n                if (arg3 < unaff_RBX) break;\n                *(*0x20 + -0x28) = 0x441dfe;\n                fcn.0045c5a0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x441e09;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + 0x28) = unaff_RSI;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x441e2d;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_RSI = *(puVar2 + 0x28);\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n    arg3 = *(in_RAX + arg3 * 0x10);\n    if (arg3 != unaff_RSI) {\ncode_r0x00441dc8:\n        *(*0x20 + -0x28) = 0x441dd3;\n        fcn.0040a0a0();\n        in_RAX = *(*0x20 + 8);\n        uVar1 = *(*0x20 + -0x10);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n    }\n    goto code_r0x00441d90;\n}\n",
        "token_count": 861
    },
    "00444480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444480(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0042e6a0();\n    fcn.0042e6a0();\n    return;\n}\n",
        "token_count": 94
    },
    "00445140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445140(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040b560(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x004451b8;\n        do {\n            unaff_RBX = 0x6b5708;\n            uVar3 = fcn.00431940();\ncode_r0x004451b8:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x6b5718;\n        fcn.00431940();\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00446b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446b60(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    fcn.0044fc80(unaff_RBX);\n    return;\n}\n",
        "token_count": 763
    },
    "00446ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446ca0(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.00409e80();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045cee0(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040a0a0();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 495
    },
    "00449060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00449060(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x44909c;\n                iVar1 = fcn.00449660();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x4490c5;\n                fcn.0045c5a0(0);\n            }\n            *(*0x20 + -0x20) = 0x4490d2;\n            in_RAX = fcn.0045c5e0(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4490e5;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 433
    },
    "00449100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449100(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.00449700();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045cee0(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "004493a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004493a0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x4493f5;\n                iVar1 = fcn.00455ea0(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x44942e;\n            uVar2 = fcn.00449060();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar5 = *(*0x20 + 0x18);\n            iVar7 = *(*0x20 + -0x48);\n            iVar4 = 0;\n            arg1_00 = 0;\n            while ((iVar4 < iVar5 && (arg1_00 < iVar7))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00449528;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x449496;\n                iVar3 = fcn.00455ea0(iVar1 - arg1_00);\n                iVar4 = *(*0x20 + -0x28) + 1;\n                iVar5 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449528;\n            fcn.0045c5e0(arg1_00, unaff_RBX);\ncode_r0x00449528:\n            *(*0x20 + -0x80) = 0x449533;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045c660(unaff_RDI);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x44954d;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1131
    },
    "00449580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449580(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        iVar2 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = 0x4495c5;\n                in_RAX = fcn.00449660();\n                iVar2 = *(*0x20 + 0x10);\n                iVar1 = unaff_RBX;\n                unaff_RBX = unaff_RDI;\n            }\n            else {\n                unaff_RSI = 4;\n                iVar1 = 4;\n                iVar2 = unaff_RBX;\n                unaff_RBX = 4;\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = in_RAX;\n            if (iVar2 != iVar2) {\n                iVar2 = 0xfffd;\n            }\n            *(*0x20 + -0x40) = 0x4495fe;\n            arg1 = fcn.00455ea0(unaff_RSI);\n            if (arg1 <= *(*0x20 + -0x18)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x40) = 0x449625;\n            in_RAX = fcn.0045c5e0(arg1, *(*0x20 + -0x18));\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x449635;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n        unaff_RDI = iVar2;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "00449b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00449b60(void)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402a80(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00449c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449c20(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x00449c20:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x449cae;\n                uVar2 = fcn.00449660();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x00449d53;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x449c66;\n            iVar3 = fcn.00455ea0(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x00449dca;\n    }\n    goto code_r0x00449dd6;\ncode_r0x00449d53:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x00449dbf;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449da9;\n            fcn.0045c5e0(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x449db4;\n        fcn.0045c5a0(arg1_00);\ncode_r0x00449db4:\n        *(*0x20 + -0x80) = 0x449dbf;\n        fcn.0045c660(arg1_00);\n        goto code_r0x00449dbf;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x00449db4;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x449d0b;\n    iVar3 = fcn.00455ea0(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x00449d53;\ncode_r0x00449dbf:\n    *(*0x20 + -0x80) = 0x449dca;\n    fcn.0045c5a0(arg1_02);\ncode_r0x00449dca:\n    *(*0x20 + -0x80) = 0x449dd5;\n    in_RAX = fcn.0045c5a0(arg1);\ncode_r0x00449dd6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x449de5;\n    fcn.00459ea0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00449c20;\n}\n",
        "token_count": 1331
    },
    "0044a780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nint64_t fcn.0044a780(void)\n\n{\n    uint64_t arg1;\n    uint64_t uVar1;\n    code *pcVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    \n    for (uVar5 = 0x722f80; uVar5 != 0; uVar5 = *(uVar5 + 0x210)) {\n        if ((*(uVar5 + 0xa0) < in_RAX || *(uVar5 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(uVar5 + 0xa8) && *(uVar5 + 0xa8) != in_RAX)) goto code_r0x0044a7c0;\n    }\n    uVar5 = 0;\ncode_r0x0044a7c0:\n    if (uVar5 == 0) {\n        return 0;\n    }\n    uVar3 = in_RAX - *(uVar5 + 0xa0);\n    piVar7 = (uVar3 >> 0xc) * 0x14 + *(uVar5 + 0x98);\n    uVar3 = (uVar3 & 0xfff) >> 8;\n    if (uVar3 < 0x10) {\n        uVar6 = *(piVar7 + uVar3 + 4) + *piVar7;\n        uVar3 = uVar6;\n        arg1 = *(uVar5 + 0x88);\n        iVar4 = *(uVar5 + 0x80);\n        if (arg1 <= uVar6) {\n            uVar3 = arg1 - 1;\n        }\n        if ((uVar3 & 0xffffffff) < arg1) {\n            uVar1 = uVar3;\n            if (in_RAX < *(iVar4 + (uVar3 & 0xffffffff) * 0x10)) goto code_r0x0044a8d0;\n            do {\n                uVar3 = uVar1;\n                uVar6 = uVar3 + 1;\n                if (arg1 <= uVar6) goto code_r0x0044a8c6;\n                uVar1 = uVar6;\n            } while (*(uVar6 * 0x10 + iVar4) <= in_RAX);\n            do {\n                if ((uVar3 & 0xffffffff) < arg1) {\n                    uVar1 = *(iVar4 + 8 + (uVar3 & 0xffffffff) * 0x10);\n                    if (uVar1 == 0xffffffffffffffff) {\n                        return 0;\n                    }\n                    uVar3 = *(uVar5 + 0x70);\n                    in_RAX = *(uVar5 + 0x68);\n                    if (uVar1 < uVar3) {\n                        return uVar1 + in_RAX;\n                    }\n                    fcn.0045c5c0(uVar3);\n                }\n                fcn.0045c5a0(arg1);\ncode_r0x0044a8c6:\n                uVar5 = arg1;\n                fcn.0045c5a0(arg1);\n                while( true ) {\n                    uVar3 = uVar3 - 1;\ncode_r0x0044a8d0:\n                    if (arg1 <= (uVar3 & 0xffffffff)) goto code_r0x0044a905;\n                    if (*(iVar4 + (uVar3 & 0xffffffff) * 0x10) <= in_RAX) break;\n                    if (uVar3 == 0) goto code_r0x0044a8ef;\n                }\n            } while (uVar3 != 0);\ncode_r0x0044a8ef:\n            fcn.004320e0();\ncode_r0x0044a905:\n            fcn.0045c5a0(arg1);\n        }\n        fcn.0045c5a0(arg1);\n    }\n    fcn.0045c5c0(0x10);\n    pcVar2 = swi(3);\n    iVar4 = (*pcVar2)();\n    return iVar4;\n}\n",
        "token_count": 936
    },
    "0044af20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044af20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044af20:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44af45;\n        iVar1 = fcn.0044ae60();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044af76;\n            if (unaff_RBX <= arg1) goto code_r0x0044af8d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044af76;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044af99;\ncode_r0x0044af76:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44af8d;\n    fcn.0045c5e0(arg1, unaff_RBX);\ncode_r0x0044af8d:\n    *(*0x20 + -0x20) = 0x44af98;\n    in_RAX = fcn.0045c5a0(unaff_RBX);\ncode_r0x0044af99:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44afa8;\n    fcn.00459ea0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044af20;\n}\n",
        "token_count": 597
    },
    "0044b2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b2a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0044b180(arg1);\n    return;\n}\n",
        "token_count": 89
    },
    "0044b300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0044b300(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = fcn.0044a940(*(in_RAX + 0x14));\n    if ((uVar1 & 7) != 0) {\n        fcn.0044ae60();\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00434160();\n        fcn.00433a80();\n        fcn.00433fc0();\n        fcn.00433a80();\n        fcn.00433fc0();\n        fcn.00433a80();\n        fcn.00433fc0();\n        fcn.00433a80();\n        fcn.00433f60(uVar1 & 0xffffffff);\n        fcn.00433ac0();\n        fcn.004338e0();\n        uVar1 = uVar1 & 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 279
    },
    "0044b460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044b460(void)\n\n{\n    uint32_t uVar1;\n    uint64_t arg1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = *(unaff_RBX + 0x58);\n            iVar4 = *(unaff_RBX + 0x60);\n            uVar1 = *(in_RAX + 0x14);\n            if (uVar1 <= arg1) {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = *in_RAX;\n                *(*0x20 + -0x20) = 0xffffffff;\n                iVar4 = iVar4 - uVar1;\n                iVar2 = 0;\n                while( true ) {\n                    *(*0x20 + -0x1c) = iVar2;\n                    *(*0x20 + -0x58) = 0x44b514;\n                    fcn.0044b6a0(iVar4);\n                    if (*0x20 == '\\x18') break;\n                    iVar2 = *(*0x20 + -0x1c);\n                    if (*(*0x20 + -0x1c) < *(*0x20 + -0x20)) {\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                return *(*0x20 + -0x1c);\n            }\n            *(*0x20 + -0x58) = 0x44b52f;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44b53f;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 612
    },
    "0044b560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b560(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044a940(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0044b600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b600(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044a940(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0044de80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044de80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00409e80();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x735738; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x735730 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1668);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1670);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.0040a0a0();\n    return iVar4;\n}\n",
        "token_count": 276
    },
    "0044e320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044e320(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045de80();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0044e360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e360(ulong param_1)\n\n{\n    fcn.0042d420(param_1);\n    return;\n}\n",
        "token_count": 32
    },
    "0044eba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044eba0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.00409e80();\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "0044f1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f1a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0044f200();\n    return;\n}\n",
        "token_count": 84
    },
    "0044f320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f320(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044e500(&uStack16);\n    return;\n}\n",
        "token_count": 115
    },
    "0044f600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f600(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    piVar2 = fcn.0040bf40();\n    *piVar2 = unaff_RBX + 1;\n    uVar1 = fcn.0044ef20(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044e500(auStack24);\n    return;\n}\n",
        "token_count": 239
    },
    "0044fbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fbe0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x789e60 == -1) {\n        iStack16 = 0;\n        fcn.0044e500(&iStack16);\n    }\n    else {\n        iStack16 = *0x789e60;\n        fcn.0044e500(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00451e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00451e60(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00451e60:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x451ecf;\n        fcn.0045c814();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x451ee8;\n        fcn.00453be0(0x20);\n        *(*0x20 + -0x40) = 0;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x451f34;\n        fcn.0045cb20();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x452085;\n                    fcn.00453b60();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x0045209d;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x734cc0;\n                if (*0x734cc0 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x452006;\n                    fcn.00433860();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x452017;\n                    fcn.00434160();\n                    *(*0x20 + -0x290) = 0x452025;\n                    fcn.00433fc0();\n                    *(*0x20 + -0x290) = 0x45202a;\n                    fcn.00433ac0();\n                    *(*0x20 + -0x290) = 0x45202f;\n                    fcn.004338e0();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x451fe5;\n                    iVar2 = fcn.00453960(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x004520ab;\ncode_r0x0045209d:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x4520aa;\n    in_RAX = fcn.0045c5a0(0x100000);\ncode_r0x004520ab:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x4520c8;\n    fcn.00459ea0();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x00451e60;\n}\n",
        "token_count": 1555
    },
    "004521a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004521a0(uint64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0044ae60();\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.00433ac0();\n    fcn.004338e0();\n    uVar1 = arg1;\n    if (*in_RAX < arg1) {\n        uVar1 = arg1 - 1;\n    }\n    fcn.0044b180(uVar1);\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.00434160();\n    fcn.00433f60(uVar1 & 0xffffffff);\n    fcn.004338e0();\n    uVar1 = *in_RAX;\n    if (uVar1 < arg1) {\n        fcn.00433860();\n        fcn.00434160();\n        fcn.00433fc0(uVar1);\n        fcn.004338e0();\n    }\n    fcn.00433860();\n    fcn.00433ac0();\n    fcn.004338e0();\n    return;\n}\n",
        "token_count": 332
    },
    "00452c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00452c00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00459d60();\n    return 0;\n}\n",
        "token_count": 87
    },
    "00452d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452d80(int64_t arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x452dc9;\n                fcn.0044fea0(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x452ddd;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x452dfc;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 499
    },
    "00453520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453520(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00433860();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.00433fc0();\n    fcn.00434160();\n    fcn.004338e0();\n    auStack32 = CONCAT88(arg1, 0x453700);\n    fcn.004342c0(auStack32);\n    return;\n}\n",
        "token_count": 205
    },
    "00453ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00453ea0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x722f80; iVar3 != 0; iVar3 = *(iVar3 + 0x210)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x00454076;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x453f2b;\n            fcn.00409e80();\n            uVar1 = *0x735850;\n            *(*0x20 + -0x58) = 0x453f45;\n            puVar2 = fcn.0040e120(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x453f65;\n            fcn.0040a0a0();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x453f73;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x453f85;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x453f91;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x453fa5;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x453faf;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x453fc5;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x453fca;\n            fcn.004338e0();\n            iVar3 = 0x722f80;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x454007;\n                fcn.00433860();\n                *(*0x20 + -0x58) = 0x454018;\n                fcn.00434160();\n                *(*0x20 + -0x58) = 0x454025;\n                fcn.00433fc0();\n                *(*0x20 + -0x58) = 0x454036;\n                fcn.00434160();\n                *(*0x20 + -0x58) = 0x454045;\n                fcn.00433fc0();\n                *(*0x20 + -0x58) = 0x45404a;\n                fcn.00433ac0();\n                *(*0x20 + -0x58) = 0x45404f;\n                fcn.004338e0();\n                iVar3 = *(*(*0x20 + -0x10) + 0x210);\n            }\n            *(*0x20 + -0x58) = 0x454076;\n            fcn.004320e0();\ncode_r0x00454076:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x454085;\n            fcn.00433860();\n            *(*0x20 + -0x58) = 0x454096;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x4540a5;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x4540b6;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x4540c5;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x4540d6;\n            fcn.00434160();\n            *(*0x20 + -0x58) = 0x4540e5;\n            fcn.00433fc0();\n            *(*0x20 + -0x58) = 0x4540ea;\n            fcn.00433ac0();\n            *(*0x20 + -0x58) = 0x4540ef;\n            fcn.004338e0();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x454105;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x454114;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1501
    },
    "00456000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456000(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x45602e;\n                fcn.0044e360(unaff_RBX);\n                return;\n            }\n            *(*0x20 + -0x28) = 0x456045;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x45605a;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00456bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456bc0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x456bde;\n            iVar1 = fcn.004320a0();\n            if (iVar1 == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x456c05;\n            fcn.004320e0();\n        }\n        *(puVar2 + -8) = 0x456c0b;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 257
    },
    "004575e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004575e0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    do {\n        cVar1 = fcn.0042b100(1);\n    } while (cVar1 == '\\0');\n    return;\n}\n",
        "token_count": 108
    },
    "00457880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457880(void)\n\n{\n    fcn.0043b800();\n    return;\n}\n",
        "token_count": 24
    },
    "00457b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457b80(void)\n\n{\n    fcn.0045bc80();\n    return;\n}\n",
        "token_count": 25
    },
    "00457ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457ce0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00453ea0();\n    return;\n}\n",
        "token_count": 82
    },
    "00457d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457d20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00454140();\n    return;\n}\n",
        "token_count": 81
    },
    "00457d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457d60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00453ea0();\n    return;\n}\n",
        "token_count": 82
    },
    "00457da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457da0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004435c0(1);\n    return;\n}\n",
        "token_count": 84
    },
    "00457e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457e00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00443900(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00457e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457e60(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004435c0(3);\n    return;\n}\n",
        "token_count": 87
    },
    "00457ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457ec0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00443900(0);\n    return;\n}\n",
        "token_count": 83
    },
    "00457f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457f00(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x457f32;\n            fcn.00433860();\n            *(*0x20 + -0x20) = 0x457f45;\n            fcn.00434160();\n            *(*0x20 + -0x20) = 0x457f4f;\n            fcn.00433e60();\n            *(*0x20 + -0x20) = 0x457f65;\n            fcn.00434160();\n            *(*0x20 + -0x20) = 0x457f6f;\n            fcn.00433e60();\n            *(*0x20 + -0x20) = 0x457f74;\n            fcn.00433ac0();\n            *(*0x20 + -0x20) = 0x457f79;\n            fcn.004338e0();\n            *(*0x20 + -0x20) = 0x457f8a;\n            in_RAX = fcn.004320e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x457f95;\n        fcn.00459ea0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 470
    },
    "00457fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00457fa0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0045de80();\n    return uStack16;\n}\n",
        "token_count": 91
    },
    "00458c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458c40(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000060;\n    ulong uStack0000000000000068;\n    ulong uStack0000000000000070;\n    \n    uStack0000000000000060 = 0;\n    uStack0000000000000068 = 0;\n    uStack0000000000000070 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 331
    },
    "00458d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458d80(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000078;\n    ulong uStack0000000000000080;\n    ulong uStack0000000000000088;\n    \n    uStack0000000000000078 = 0;\n    uStack0000000000000080 = 0;\n    uStack0000000000000088 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    fcn.0043d420();\n    return;\n}\n",
        "token_count": 331
    },
    "0045c100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045c100(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x16c0);\n    *(iVar1 + 0x16c0) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x16c8);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045e140();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 211
    },
    "0045ca40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ca40(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    uVar1 = unaff_RSI[0x79];\n    uVar2 = unaff_RSI[0x7a];\n    uVar3 = unaff_RSI[0x7b];\n    unaff_RDI[0x78] = unaff_RSI[0x78];\n    unaff_RDI[0x79] = uVar1;\n    unaff_RDI[0x7a] = uVar2;\n    unaff_RDI[0x7b] = uVar3;\n    uVar1 = unaff_RSI[0x7d];\n    uVar2 = unaff_RSI[0x7e];\n    uVar3 = unaff_RSI[0x7f];\n    unaff_RDI[0x7c] = unaff_RSI[0x7c];\n    unaff_RDI[0x7d] = uVar1;\n    unaff_RDI[0x7e] = uVar2;\n    unaff_RDI[0x7f] = uVar3;\n    return;\n}\n",
        "token_count": 3494
    },
    "0045ca5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ca5c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    return;\n}\n",
        "token_count": 3269
    },
    "0045cb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cb20(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1742
    },
    "0045cbba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cbba(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 529
    },
    "0045cae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cae8(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    return;\n}\n",
        "token_count": 2182
    },
    "0045daa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045daa0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t in_stack_00000000;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = arg4;\n    fcn.0045bdc0(5, (in_stack_00000000 - 0x45f440U & 0xffffffff) % 5);\n    return 0;\n}\n",
        "token_count": 106
    },
    "0045ddc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ddc0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x348);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x734c48)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 188
    },
    "0045e040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e040(void)\n\n{\n    fcn.00405dc0();\n    return;\n}\n",
        "token_count": 25
    },
    "0045e140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e140(void)\n\n{\n    fcn.0042ab40();\n    return;\n}\n",
        "token_count": 25
    },
    "0045e2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e2e0(void)\n\n{\n    fcn.0042d420(*0x72e488);\n    return;\n}\n",
        "token_count": 33
    },
    "0045e300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e300(void)\n\n{\n    fcn.0042d420(*0x72e498);\n    return;\n}\n",
        "token_count": 31
    },
    "0045e3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e3c0(void)\n\n{\n    fcn.0043c700();\n    return;\n}\n",
        "token_count": 27
    },
    "0045e400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e400(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00440f40(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 59
    },
    "0045e620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045e620(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458520();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045e680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045e680(void)\n\n{\n    ulong uStack24;\n    \n    fcn.004586a0();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045e6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045e6c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458800();\n    return uStack24;\n}\n",
        "token_count": 36
    },
    "0045e780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045e780(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00458ac0();\n    return uStack32;\n}\n",
        "token_count": 52
    },
    "0045e800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045e800(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00458c40();\n    return uStack32;\n}\n",
        "token_count": 52
    },
    "0045e8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045e8a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00458d80();\n    return uStack32;\n}\n",
        "token_count": 54
    },
    "0045e960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045e960(ulong arg1)\n\n{\n    ulong in_RDX;\n    ulong uStack32;\n    \n    fcn.0045dee0(arg1, in_RDX);\n    return uStack32;\n}\n",
        "token_count": 50
    },
    "004622c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004622c0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.00462320();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00462320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462320(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00457840();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00457e00(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00457e00(1);\n    return;\n}\n",
        "token_count": 245
    },
    "00469060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00469060(ulong param_1)\n\n{\n    uint16_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x469079;\n            iVar2 = fcn.00468f40();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar1 = *(iVar2 + 6);\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 < 0x10001) {\n                return *(iVar2 + 8) + iVar2;\n            }\n            *(*0x20 + -0x20) = 0x4690cb;\n            in_RAX = fcn.0045c6a0(param_1, uVar1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4690d6;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 376
    },
    "00469b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00469b80(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            pcVar1 = *(in_RAX + 0x18);\n            *(*0x20 + -0x40) = 0x469bba;\n            iVar2 = (*pcVar1)();\n            arg1 = *(*0x20 + -0x10);\n            if (iVar2 == arg1) {\n                *(*0x20 + -0x40) = 0x469bdb;\n                iVar2 = fcn.00409940(*(*0x20 + 0x10));\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x18);\n                    *(*0x20 + -0x40) = 0x469bfd;\n                    uVar3 = (*pcVar1)(*(*0x20 + -0x10));\n                    return uVar3;\n                }\n                *(*0x20 + -0x40) = 0x469c25;\n                fcn.00469a00(*(*0x20 + 0x18));\n                return 0x6b6be0;\n            }\n            unaff_RBX = 0x6b5648;\n            *(*0x20 + -0x40) = 0x469c4c;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x469c6b;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 737
    },
    "0046ac20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ac20(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (((unaff_RBX != 0x10) && (unaff_RBX != 0x18)) && (unaff_RBX != 0x20)) {\n        fcn.00409700();\n        return 0;\n    }\n    uVar1 = fcn.0046afa0(arg1);\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "0046b440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b440(void)\n\n{\n    uchar (*unaff_RBX) [16];\n    uchar in_XMM0 [16];\n    uchar auVar1 [16];\n    uint in_XMM4_Da;\n    \n    auVar1 = in_XMM0 ^ CONCAT412(SUB164(in_XMM0, 0), \n                                 CONCAT48(SUB164(in_XMM0 >> 0x20, 0), CONCAT44(in_XMM4_Da, in_XMM4_Da)));\n    *unaff_RBX = auVar1 ^ CONCAT412(SUB164(auVar1 >> 0x40, 0), \n                                    CONCAT48(SUB164(auVar1, 0), CONCAT44(SUB164(in_XMM0, 0), in_XMM4_Da))) ^ ZEXT816(0);\n    return;\n}\n",
        "token_count": 184
    },
    "0046b480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046b49f)\n\nvoid fcn.0046b480(ulong param_1, ulong param_2)\n\n{\n    uchar (*unaff_RBX) [16];\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_XMM0_Dc;\n    uint32_t in_XMM0_Dd;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar in_XMM2 [16];\n    uchar auVar5 [16];\n    uint32_t in_XMM4_Da;\n    \n    uVar4 = param_2 >> 0x20;\n    uVar2 = param_1 >> 0x20;\n    uVar1 = param_1;\n    uVar3 = in_XMM0_Dd ^ uVar1 ^ in_XMM0_Dc ^ uVar2 ^ uVar4;\n    auVar5 = in_XMM2 ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3))) ^ in_XMM2 << 0x20;\n    *unaff_RBX = CONCAT412(uVar2 ^ in_XMM4_Da ^ uVar1 ^ uVar4, CONCAT48(uVar1 ^ uVar4, SUB168(in_XMM2, 0)));\n    unaff_RBX[1] = ZEXT1216(CONCAT48(SUB164(auVar5 >> 0x20, 0), CONCAT44(SUB164(auVar5, 0), uVar3))) << 0x20;\n    return;\n}\n",
        "token_count": 350
    },
    "0046b4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046b4fc)\n\nvoid fcn.0046b4e0(ulong param_1, ulong param_2)\n\n{\n    uint32_t *unaff_RBX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_XMM0_Dc;\n    uint32_t uVar3;\n    uint32_t in_XMM0_Dd;\n    uint32_t uVar4;\n    uint32_t in_XMM4_Da;\n    \n    uVar4 = param_2 >> 0x20;\n    uVar2 = param_1 >> 0x20;\n    uVar1 = param_1;\n    uVar3 = in_XMM0_Dc ^ uVar2;\n    *unaff_RBX = uVar1 ^ uVar4;\n    unaff_RBX[1] = uVar2 ^ in_XMM4_Da ^ uVar1 ^ uVar4;\n    unaff_RBX[2] = uVar3 ^ uVar1 ^ in_XMM4_Da ^ uVar4;\n    unaff_RBX[3] = in_XMM0_Dd ^ uVar1 ^ uVar3 ^ uVar4;\n    return;\n}\n",
        "token_count": 272
    },
    "0046b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b540(void)\n\n{\n    uchar (*unaff_RBX) [16];\n    uchar in_XMM2 [16];\n    uchar auVar1 [16];\n    uint in_XMM4_Da;\n    \n    auVar1 = in_XMM2 ^ CONCAT412(SUB164(in_XMM2, 0), \n                                 CONCAT48(SUB164(in_XMM2 >> 0x20, 0), CONCAT44(in_XMM4_Da, in_XMM4_Da)));\n    *unaff_RBX = auVar1 ^ CONCAT412(SUB164(auVar1 >> 0x40, 0), \n                                    CONCAT48(SUB164(auVar1, 0), CONCAT44(SUB164(in_XMM2, 0), in_XMM4_Da))) ^ ZEXT816(0);\n    return;\n}\n",
        "token_count": 184
    },
    "0046b640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nvoid fcn.0046b640(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint *puVar5;\n    uchar (*pauVar6) [16];\n    uchar (*pauVar7) [16];\n    uchar extraout_XMM0 [16];\n    uchar extraout_XMM0_00 [16];\n    uchar extraout_XMM0_01 [16];\n    uchar extraout_XMM0_02 [16];\n    uchar extraout_XMM0_03 [16];\n    uchar extraout_XMM0_04 [16];\n    uchar extraout_XMM0_05 [16];\n    uchar extraout_XMM0_06 [16];\n    uchar extraout_XMM0_07 [16];\n    uchar extraout_XMM0_08 [16];\n    uchar extraout_XMM0_09 [16];\n    uchar extraout_XMM0_10 [16];\n    uchar extraout_XMM0_11 [16];\n    uchar extraout_XMM0_12 [16];\n    uchar extraout_XMM0_13 [16];\n    uchar auVar8 [16];\n    int64_t iStackX8;\n    uchar (*pauStackX16) [16];\n    uchar (*pauStackX24) [16];\n    uint *puStackX32;\n    \n    auVar8 = *pauStackX16;\n    *pauStackX24 = auVar8;\n    pauVar6 = pauStackX24[1];\n    if (iStackX8 == 0xc) {\n        auVar8 = ZEXT816(*pauStackX16[1]);\n        aeskeygenassist(auVar8, 1);\n        fcn.0046b480();\n        aeskeygenassist(auVar8, 2);\n        fcn.0046b4e0();\n        aeskeygenassist(auVar8, 4);\n        fcn.0046b480();\n        aeskeygenassist(auVar8, 8);\n        fcn.0046b4e0();\n        aeskeygenassist(auVar8, 0x10);\n        fcn.0046b480();\n        aeskeygenassist(auVar8, 0x20);\n        fcn.0046b4e0();\n        aeskeygenassist(auVar8, 0x40);\n        fcn.0046b480();\n        aeskeygenassist(auVar8, 0x80);\n        fcn.0046b4e0();\n    }\n    else if (iStackX8 < 0xc) {\n        aeskeygenassist(auVar8, 1);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_05, 2);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_06, 4);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_07, 8);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_08, 0x10);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_09, 0x20);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_10, 0x40);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_11, 0x80);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_12, 0x1b);\n        fcn.0046b440();\n        aeskeygenassist(extraout_XMM0_13, 0x36);\n        fcn.0046b440();\n    }\n    else {\n        auVar8 = pauStackX16[1];\n        *pauVar6 = auVar8;\n        pauVar6 = pauStackX24[2];\n        aeskeygenassist(auVar8, 1);\n        fcn.0046b520();\n        aeskeygenassist(extraout_XMM0, 1);\n        fcn.0046b540();\n        aeskeygenassist(auVar8, 2);\n        fcn.0046b520();\n        aeskeygenassist(extraout_XMM0_00, 2);\n        fcn.0046b540();\n        aeskeygenassist(auVar8, 4);\n        fcn.0046b520();\n        aeskeygenassist(extraout_XMM0_01, 4);\n        fcn.0046b540();\n        aeskeygenassist(auVar8, 8);\n        fcn.0046b520();\n        aeskeygenassist(extraout_XMM0_02, 8);\n        fcn.0046b540();\n        aeskeygenassist(auVar8, 0x10);\n        fcn.0046b520();\n        aeskeygenassist(extraout_XMM0_03, 0x10);\n        fcn.0046b540();\n        aeskeygenassist(auVar8, 0x20);\n        fcn.0046b520();\n        aeskeygenassist(extraout_XMM0_04, 0x20);\n        fcn.0046b540();\n        aeskeygenassist(auVar8, 0x40);\n        fcn.0046b520();\n    }\n    uVar1 = *(pauVar6[-1] + 4);\n    uVar2 = *(pauVar6[-1] + 8);\n    uVar3 = *(pauVar6[-1] + 0xc);\n    *puStackX32 = *pauVar6[-1];\n    puStackX32[1] = uVar1;\n    puStackX32[2] = uVar2;\n    puStackX32[3] = uVar3;\n    iVar4 = iStackX8 + -1;\n    pauVar6 = pauVar6[-1];\n    do {\n        pauVar7 = pauVar6;\n        puVar5 = puStackX32;\n        auVar8 = aesimc(pauVar7[-1]);\n        *(puVar5 + 4) = auVar8;\n        iVar4 = iVar4 + -1;\n        puStackX32 = puVar5 + 4;\n        pauVar6 = pauVar7[-1];\n    } while (iVar4 != 0);\n    uVar1 = *(pauVar7[-2] + 4);\n    uVar2 = *(pauVar7[-2] + 8);\n    uVar3 = *(pauVar7[-2] + 0xc);\n    puVar5[8] = *pauVar7[-2];\n    puVar5[9] = uVar1;\n    puVar5[10] = uVar2;\n    puVar5[0xb] = uVar3;\n    return;\n}\n",
        "token_count": 1515
    },
    "0046cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046cd80(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x46cdb1;\n            iVar5 = fcn.00445140(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x0046ceb1;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x0046cea6;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0046ce9b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x0046cdc2;\n                            }\n                            goto code_r0x0046ce90;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x0046ce85;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x0046cdc2:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x46ce85;\n            fcn.0045c620(unaff_RBX, arg1);\ncode_r0x0046ce85:\n            *(*0x20 + -0x28) = 0x46ce90;\n            fcn.0045c5a0(arg1);\ncode_r0x0046ce90:\n            *(*0x20 + -0x28) = 0x46ce9b;\n            fcn.0045c5a0(arg1);\ncode_r0x0046ce9b:\n            *(*0x20 + -0x28) = 0x46cea6;\n            fcn.0045c5a0(arg1);\ncode_r0x0046cea6:\n            *(*0x20 + -0x28) = 0x46ceb1;\n            fcn.0045c5a0(arg1);\ncode_r0x0046ceb1:\n            *(*0x20 + -0x28) = 0x46cebc;\n            in_RAX = fcn.0045c5a0(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x46ced1;\n        fcn.00459ea0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1083
    },
    "0046e3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e3a0(ulong arg1)\n\n{\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t arg1_01;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RBX < 1) {\n        arg1_00 = 0;\n    }\n    else {\n        iVar3 = 0;\n        arg1_00 = 0;\n        arg1_01 = 0;\n        iVar2 = 0;\n        do {\n            if (0 < arg1_00) {\n                uVar4 = arg1_00 + 1;\n                iVar1 = iVar2;\n                if (arg1_01 < uVar4) {\n                    arg1_01 = arg1_00;\n                    iVar1 = fcn.00445220(arg1_00);\n                    uVar4 = iVar2 + 1;\n                }\n                *(iVar1 + arg1_00) = 0x20;\n                arg1_00 = uVar4;\n            }\n            iVar2 = fcn.0046dea0(arg1_01);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_RBX);\n    }\n    fcn.00448f60(arg1_00);\n    return;\n}\n",
        "token_count": 359
    },
    "0046e500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046e56f)\n\nvoid fcn.0046e500(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    uint64_t arg1_02;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                *(*0x20 + -0xf8) = 0;\n                *(*0x20 + -0x138) = 0x46e55a;\n                fcn.0046cbe0(2);\n                return;\n            }\n            iVar5 = 0;\n            iVar10 = 0;\n            iVar1 = in_RAX;\n            while( true ) {\n                iVar5 = iVar5 + 1;\n                iVar7 = iVar10 + *(iVar1 + 8);\n                iVar10 = iVar7 + 1;\n                if (unaff_RBX <= iVar5) break;\n                iVar1 = iVar1 + 0x10;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x108) = iVar10;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar7 = iVar7 + 2;\n            *(*0x20 + -0xe0) = iVar7;\n            *(*0x20 + -0x138) = 0x46e5bd;\n            uVar2 = fcn.00445140(iVar7);\n            *(*0x20 + -0x18) = uVar2;\n            arg1_02 = *(*0x20 + -0xe0);\n            piVar8 = *(*0x20 + -0x10);\n            iVar10 = 0;\n            uVar4 = 0;\n            while( true ) {\n                iVar1 = piVar8[1];\n                iVar5 = *piVar8;\n                arg1 = uVar4 + iVar1;\n                unaff_RBX = uVar4;\n                if (arg1_02 < arg1) break;\n                if (arg1 < uVar4) {\ncode_r0x0046e7c5:\n                    *(*0x20 + -0x138) = 0x46e7d0;\n                    fcn.0045c660(arg1);\n                    break;\n                }\n                *(*0x20 + -0xe8) = iVar10;\n                *(*0x20 + -0x10) = piVar8;\n                *(*0x20 + -0x100) = uVar4;\n                *(*0x20 + -0xf0) = arg1;\n                *(*0x20 + -0x110) = iVar1;\n                *(*0x20 + -0x138) = 0x46e63e;\n                iVar7 = fcn.00449100(iVar1);\n                iVar1 = *(*0x20 + -0x110);\n                iVar10 = iVar1;\n                if (iVar5 < iVar1) {\n                    iVar10 = iVar5;\n                }\n                uVar11 = *(*0x20 + -0x108);\n                uVar9 = *(*0x20 + -0x100);\n                arg1_00 = *(*0x20 + -0x18);\n                if (iVar7 != (-((uVar11 - uVar9) + 1) >> 0x3f & uVar9) + arg1_00) {\n                    *(*0x20 + -0x138) = 0x46e685;\n                    fcn.0045cee0(iVar10);\n                    iVar1 = *(*0x20 + -0x110);\n                    arg1_00 = *(*0x20 + -0x18);\n                    uVar9 = *(*0x20 + -0x100);\n                    uVar11 = *(*0x20 + -0x108);\n                }\n                uVar4 = uVar9 + iVar1 + 1;\n                arg1_02 = *(*0x20 + -0xe0);\n                arg1_01 = uVar4;\n                unaff_RBX = arg1_00;\n                if (arg1_02 < uVar4) {\ncode_r0x0046e7ba:\n                    *(*0x20 + -0x138) = 0x46e7c5;\n                    fcn.0045c620(arg1_01, arg1_02);\n                    goto code_r0x0046e7c5;\n                }\n                uVar3 = *(*0x20 + -0xf0);\n                if (uVar4 < uVar3) {\ncode_r0x0046e7b5:\n                    *(*0x20 + -0x138) = 0x46e7ba;\n                    fcn.0045c660(arg1_01);\n                    goto code_r0x0046e7ba;\n                }\n                *(*0x20 + -0x111) = 0;\n                *(*0x20 + -0x111) = 0;\n                uVar3 = uVar3 & -((uVar11 - uVar3) + 1) >> 0x3f;\n                if (*0x20 + -0x111 != uVar3 + arg1_00) {\n                    *(arg1_00 + uVar3) = *(*0x20 + -0x111);\n                }\n                iVar10 = *(*0x20 + -0xe8) + 1;\n                if (*(*0x20 + 0x10) <= iVar10) {\n                    arg1_01 = uVar9 + iVar1 + 2;\n                    if (arg1_01 <= arg1_02) {\n                        if (uVar4 <= arg1_01) {\n                            *(*0x20 + -0x111) = 0;\n                            *(*0x20 + -0x111) = 0;\n                            uVar11 = uVar11 - uVar4;\n                            uVar4 = uVar4 & -(uVar11 + 1) >> 0x3f;\n                            if (*0x20 + -0x111 != uVar4 + arg1_00) {\n                                *(arg1_00 + uVar4) = *(*0x20 + -0x111);\n                            }\n                            *(*0x20 + -0x138) = 0x46e767;\n                            unaff_RBX = fcn.00448f60(arg1_02);\n                            *(*0x20 + -0x138) = 0x46e77a;\n                            fcn.004491e0(arg1_00);\n                            *(*0x20 + -0x138) = 0x46e77f;\n                            fcn.0046cbe0(arg1_00);\n                            if (unaff_RBX != 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x138) = 0x46e79f;\n                            fcn.0045c5a0(0);\n                        }\n                        *(*0x20 + -0x138) = 0x46e7aa;\n                        fcn.0045c660(arg1_01);\n                    }\n                    *(*0x20 + -0x138) = 0x46e7b5;\n                    fcn.0045c620(arg1_01, arg1_02);\n                    arg1 = uVar11;\n                    goto code_r0x0046e7b5;\n                }\n                piVar8 = *(*0x20 + -0x10) + 0x10;\n            }\n            *(*0x20 + -0x138) = 0x46e7d8;\n            in_RAX = fcn.0045c620(arg1, arg1_02);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x46e7ed;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2027
    },
    "0046fd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046fd80(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar2) {\n            fcn.00448ba0(unaff_RBX);\n            fcn.004491e0(in_RAX);\n            uVar1 = fcn.0046cbe0(in_RAX);\n            return uVar1;\n        }\n        if (*(in_RAX + iVar2) == '\\0') break;\n        iVar2 = iVar2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "0046fe60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046fe60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.0046cd80(arg1);\n    fcn.004493a0(arg1_00);\n    return;\n}\n",
        "token_count": 200
    },
    "00470420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00470420(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.004735c0(arg1, arg2, 0);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "004708a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004708a0(void)\n\n{\n    uint32_t in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x1c) = in_EAX;\n            *(*0x20 + -0x18) = 0;\n            *(*0x20 + -0x40) = 0x4708d5;\n            iVar1 = fcn.00472c80(0);\n            if (((iVar1 == 0) || (*(iVar1 + 8) != 0x4a1100)) || (*in_EAX != 0x7a)) {\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x40) = 0x470978;\n                    puVar3 = fcn.0040bf40();\n                    puVar3[1] = 0x42;\n                    *puVar3 = 0x4b5736;\n                    return 0;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x47090b;\n            uVar2 = fcn.00445140(*(*0x20 + -0x18));\n            if (*(*0x20 + -0x18) != 0) {\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x40) = 0x47092e;\n                iVar1 = fcn.00472c80(0);\n                if (iVar1 == 0) {\n                    return *(*0x20 + -0x10);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x4709a8;\n            in_EAX = fcn.0045c5a0(0);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x4709b2;\n        fcn.00459ea0();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 594
    },
    "004709c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004709c0(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x40) = noname_2;\n            *(*0x20 + 0x44) = arg4;\n            *(*0x20 + 0x50) = in_R11;\n            *(*0x20 + 0x48) = in_R10;\n            *(*0x20 + 0x38) = unaff_RSI;\n            *(*0x20 + 0x30) = unaff_RDI;\n            *(*0x20 + 0x28) = arg1;\n            *(*0x20 + 0x20) = unaff_RBX;\n            *(*0x20 + -0x58) = in_RAX;\n            *(*0x20 + -0x50) = *0x734e58;\n            *(*0x20 + -0xd0) = 0x470a45;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x20);\n                *(*0x20 + -0x18) = *(*0x20 + 0x28);\n                *(*0x20 + -0x20) = *(*0x20 + 0x30);\n                *(*0x20 + -0x28) = *(*0x20 + 0x38);\n                *(*0x20 + -0x30) = *(*0x20 + 0x48);\n                *(*0x20 + -0x38) = *(*0x20 + 0x50);\n                *(*0x20 + -0x40) = *(*0x20 + 8);\n                *(*0x20 + -0x48) = *(*0x20 + 0x10);\n                *(*0x20 + -200) = *(*0x20 + -0x30);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + 0x10);\n                *(*0x20 + -0xa8) = 0;\n                iVar1 = *(*0x20 + -0x58);\n                *(*0x20 + -0xd0) = 0x470b54;\n                iVar2 = fcn.0045e8a0(iVar1, *(*0x20 + 0x44), *(*0x20 + -0x20), *(*0x20 + -0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xd0) = 0x470b8f;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xd0) = 0x470bc5;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 0x18) = in_RAX;\n        *(puVar4 + 0x20) = unaff_RBX;\n        *(puVar4 + 0x28) = arg1;\n        *(puVar4 + 0x30) = unaff_RDI;\n        *(puVar4 + 0x38) = unaff_RSI;\n        puVar4[0x40] = noname_2;\n        *(puVar4 + 0x44) = arg4;\n        *(puVar4 + 0x48) = in_R10;\n        *(puVar4 + 0x50) = in_R11;\n        *(puVar4 + -8) = 0x470bf8;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 0x18);\n        unaff_RBX = *(puVar4 + 0x20);\n        arg1 = *(puVar4 + 0x28);\n        unaff_RDI = *(puVar4 + 0x30);\n        unaff_RSI = *(puVar4 + 0x38);\n        noname_2._0_1_ = puVar4[0x40];\n        arg4._0_4_ = *(puVar4 + 0x44);\n        in_R10 = *(puVar4 + 0x48);\n        in_R11 = *(puVar4 + 0x50);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1265
    },
    "00470c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470c40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7350c0;\n            *(*0x20 + -0x48) = 0x470c72;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x470c98;\n                iVar1 = fcn.0045e720(*(*0x20 + -0x18));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x470ca8;\n                    fcn.00409700();\n                    uVar2 = 0x6b5ac0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x470ccb;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x470cd6;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 443
    },
    "00470d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470d00(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = *0x7350c8;\n            *(*0x20 + -0xa8) = 0x470d77;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x18);\n                *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                *(*0x20 + -0x20) = *(*0x20 + 0x28);\n                *(*0x20 + -0x28) = *(*0x20 + 0x30);\n                *(*0x20 + -0x30) = *(*0x20 + 0x38);\n                *(*0x20 + -0x38) = *(*0x20 + 0x40);\n                *(*0x20 + -0xa0) = *(*0x20 + 0x40);\n                *(*0x20 + -0x98) = 0;\n                *(*0x20 + -0xa8) = 0x470e34;\n                iVar1 = fcn.0045e800(*(*0x20 + -0x48), *(*0x20 + 0x10), *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x470e45;\n                    fcn.00409700();\n                    uVar2 = 0x6b5ac0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0xa8) = 0x470e6d;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + 0x38) = arg4;\n        *(puVar3 + 0x40) = in_R10;\n        *(puVar3 + -8) = 0x470e9a;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        arg4 = *(puVar3 + 0x38);\n        in_R10 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1028
    },
    "00470ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470ee0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + -0x20) = *0x7350d0;\n            *(*0x20 + -0x70) = 0x470f2d;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                *(*0x20 + -0x70) = 0x470f85;\n                iVar1 = fcn.0045e780(*(*0x20 + -0x28), *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + 0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x470f95;\n                    fcn.00409700();\n                    uVar2 = 0x6b5ac0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x70) = 0x470fb7;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x470fd4;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 747
    },
    "00471000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471000(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = *0x7350e0;\n            *(*0x20 + -0x88) = 0x47105a;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                *(*0x20 + -0x20) = *(*0x20 + 0x20);\n                *(*0x20 + -0x28) = *(*0x20 + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + 0x30);\n                *(*0x20 + -0x88) = 0x4710da;\n                iVar1 = fcn.0045e780(*(*0x20 + -0x40), *(*0x20 + 0x28), *(*0x20 + -0x20), *(*0x20 + -0x28));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4710ea;\n                    fcn.00409700();\n                    uVar2 = 0x6b5ac0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x88) = 0x47110c;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x471130;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "00471260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471260(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x734e00;\n            *(*0x20 + -0x48) = 0x471292;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x4712b8;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x4712f6;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x471325;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x471330;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 503
    },
    "00471340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00471340(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 0x20) = unaff_ESI;\n            *(*0x20 + 0x24) = arg3;\n            *(*0x20 + 0x28) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = *0x734e38;\n            *(*0x20 + -0x88) = 0x4713a5;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x80) = in_XMM15;\n                *(*0x20 + -0x88) = 0x471419;\n                iVar2 = fcn.0045e800(iVar1, *(*0x20 + 0x28), *(*0x20 + 0x18), *(*0x20 + 0x20));\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0xffffffffffffffff;\n                    *(*0x20 + -0x88) = 0x47145b;\n                    fcn.00409700();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x88) = 0x47148c;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_ESI;\n        *(puVar3 + 0x24) = arg3;\n        *(puVar3 + 0x28) = arg4;\n        *(puVar3 + -8) = 0x4714b2;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_ESI = *(puVar3 + 0x20);\n        arg3._0_4_ = *(puVar3 + 0x24);\n        arg4._0_4_ = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 907
    },
    "004714e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004714e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = *0x734e50;\n            *(*0x20 + -0x70) = 0x471526;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                *(*0x20 + -0x20) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x70) = 0x471585;\n                iVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x20), *(*0x20 + 0x20), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x70) = 0x4715c5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x70) = 0x4715f0;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + -8) = 0x471609;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 750
    },
    "00471640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471640(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    ulong unaff_RDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = unaff_SIL;\n            *(*0x20 + 0x34) = arg3;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x48) = in_R11;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x28) = unaff_RDI;\n            *(*0x20 + 0x20) = arg1;\n            *(*0x20 + 0x18) = unaff_RBX;\n            *(*0x20 + 0x10) = in_RAX;\n            *(*0x20 + -0x50) = *0x734e60;\n            *(*0x20 + -200) = 0x4716c5;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                *(*0x20 + -0x20) = *(*0x20 + 0x20);\n                *(*0x20 + -0x28) = *(*0x20 + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + 0x38);\n                *(*0x20 + -0x38) = *(*0x20 + 0x40);\n                *(*0x20 + -0x40) = *(*0x20 + 0x48);\n                *(*0x20 + -0x48) = *(*0x20 + 8);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = in_XMM15;\n                *(*0x20 + -200) = 0x4717c5;\n                iVar2 = fcn.0045e8a0(iVar1, *(*0x20 + 0x34), *(*0x20 + -0x28), *(*0x20 + 0x30));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -200) = 0x471805;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -200) = 0x471836;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 0x10) = in_RAX;\n        *(puVar4 + 0x18) = unaff_RBX;\n        *(puVar4 + 0x20) = arg1;\n        *(puVar4 + 0x28) = unaff_RDI;\n        puVar4[0x30] = unaff_SIL;\n        *(puVar4 + 0x34) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x471869;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 0x10);\n        unaff_RBX = *(puVar4 + 0x18);\n        arg1 = *(puVar4 + 0x20);\n        unaff_RDI = *(puVar4 + 0x28);\n        unaff_SIL = puVar4[0x30];\n        arg3._0_4_ = *(puVar4 + 0x34);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1232
    },
    "004718a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004718a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x734e98;\n            *(*0x20 + -0x48) = 0x4718ce;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x48) = 0x4718f9;\n                fcn.0045e720(*(*0x20 + 8));\n                return;\n            }\n            *(*0x20 + -0x48) = 0x47190e;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x471919;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 381
    },
    "00471940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471940(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_ESI;\n            *(*0x20 + 0x2c) = noname_2;\n            *(*0x20 + 0x30) = arg4;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = *0x734ec0;\n            *(*0x20 + -0x90) = 0x4719a9;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x20);\n                *(*0x20 + -0x88) = in_XMM15;\n                iVar1 = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = 0x471a0a;\n                iVar2 = fcn.0045e800(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + 0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x90) = 0x471a45;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x90) = 0x471a76;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_ESI;\n        puVar4[0x2c] = noname_2;\n        *(puVar4 + 0x30) = arg4;\n        *(puVar4 + -8) = 0x471a9e;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_ESI = *(puVar4 + 0x28);\n        noname_2._0_1_ = puVar4[0x2c];\n        arg4._0_4_ = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 928
    },
    "00471ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471ae0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x734ed0;\n            *(*0x20 + -0x48) = 0x471b12;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x471b38;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x471b76;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x471ba5;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x471bb0;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00471bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00471bc0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x734ed8;\n            *(*0x20 + -0x58) = 0x471bf7;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x471c3b;\n                iVar2 = fcn.0045e720(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0xffffffffffffffff;\n                    *(*0x20 + -0x58) = 0x471c86;\n                    fcn.00409700();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x58) = 0x471cb6;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x471cc6;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 574
    },
    "00471ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471ce0(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + 0x38) = in_R10;\n            *(*0x20 + -0x30) = unaff_RBX;\n            if (arg3 < 1) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = *0x734ef8;\n            *(*0x20 + -0x98) = 0x471d56;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + -0x20);\n                *(*0x20 + -0x18) = *(*0x20 + 0x38);\n                *(*0x20 + -0x90) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x98) = 0x471dc6;\n                uVar2 = fcn.0045e800(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x98) = 0x471e06;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x38);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x98) = 0x471e3c;\n            in_EAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x471e67;\n        fcn.00459ea0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1007
    },
    "00471ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00471ea0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x734f08;\n            *(*0x20 + -0x48) = 0x471ed2;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x48) = 0x471f05;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x471f45;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x471f70;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x471f7b;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 517
    },
    "00471fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00471fa0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x734f30;\n            *(*0x20 + -0x40) = 0x471fc6;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x471fe8;\n                fcn.0045e720(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x471ffd;\n            fcn.00431940();\n        }\n        *(puVar2 + -8) = 0x472005;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 302
    },
    "00472220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00472220(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x734f50;\n            *(*0x20 + -0x48) = 0x47224a;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar2 = 0;\n                *(*0x20 + -0x48) = 0x472270;\n                iVar1 = fcn.0045e720(0);\n                if (((iVar1 == 0) && (iVar2 != 0)) && (iVar2 != 0x3e5)) {\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0x48) = 0x4722b0;\n                    fcn.00409700();\n                    iVar1 = *(*0x20 + -0x18);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x4722e5;\n            fcn.00431940();\n        }\n        *(puVar3 + -8) = 0x4722eb;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 413
    },
    "00472300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00472300(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = *0x734f60;\n            *(*0x20 + -0x48) = 0x47232a;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar2 = 0;\n                *(*0x20 + -0x48) = 0x472350;\n                iVar1 = fcn.0045e720(0);\n                if (((iVar1 == 0) && (iVar2 != 0)) && (iVar2 != 0x3e5)) {\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x48) = 0x47239b;\n                    fcn.00409700();\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x4723c5;\n            fcn.00431940();\n        }\n        *(puVar3 + -8) = 0x4723cb;\n        fcn.00459ea0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 412
    },
    "004723e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004723e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x734f68;\n            *(*0x20 + -0x58) = 0x47241b;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x47245f;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x4724a6;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x4724d6;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4724ea;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 627
    },
    "00472820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00472820(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x28) = *0x734f98;\n            *(*0x20 + -0x78) = 0x472869;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                *(*0x20 + -0x20) = *(*0x20 + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x4728c6;\n                uVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x10), *(*0x20 + 0x20), 0);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x78) = 0x472906;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x78) = 0x472936;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x47294f;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 719
    },
    "00472c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00472c80(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 0x18) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = *0x735030;\n            *(*0x20 + -0x68) = 0x472cbf;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x68) = 0x472d0b;\n                iVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x14), *(*0x20 + 0x18), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x68) = 0x472d46;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x472d71;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + 0x18) = unaff_RDI;\n        *(puVar4 + -8) = 0x472d89;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        unaff_RDI = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 734
    },
    "00472f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00472f20(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_RAX;\n            if (arg1 < 1) {\n                unaff_RBX = 0;\n            }\n            *(*0x20 + -0x28) = unaff_RBX;\n            *(*0x20 + -0x30) = *0x7350b8;\n            *(*0x20 + -0x80) = 0x472f7e;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + -0x28);\n                *(*0x20 + -0x18) = *(*0x20 + 0x28);\n                *(*0x20 + -0x20) = *(*0x20 + 0x30);\n                iVar1 = *(*0x20 + -0x38);\n                *(*0x20 + -0x80) = 0x472fde;\n                iVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x30));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x80) = 0x473025;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x80) = 0x473050;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x473074;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 894
    },
    "004730a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004730a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x735118;\n            *(*0x20 + -0x48) = 0x4730d6;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x473107;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x473145;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x473170;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x47317f;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 551
    },
    "004731a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004731a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x735140;\n            *(*0x20 + -0x48) = 0x4731d6;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x473205;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x473245;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x473270;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x47327f;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 559
    },
    "004732a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004732a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x40) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x30) = *0x735160;\n            *(*0x20 + -0xa0) = 0x47330c;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                *(*0x20 + -0x20) = *(*0x20 + 0x30);\n                *(*0x20 + -0x28) = *(*0x20 + 0x38);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0xa0) = 0x473393;\n                iVar2 = fcn.0045e800(iVar1, *(*0x20 + 0x10), *(*0x20 + -0x18), *(*0x20 + -0x40));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x4733ce;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x4733ff;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x473427;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 972
    },
    "00473460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473460(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x28) = *0x7351c0;\n            *(*0x20 + -0x78) = 0x4734b1;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                *(*0x20 + -0x20) = *(*0x20 + 0x28);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x473513;\n                iVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x18), *(*0x20 + -0x18), *(*0x20 + 0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x47354e;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x473579;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x473597;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 822
    },
    "004735c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004735c0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_RAX;\n            if (arg1 < 1) {\n                unaff_RBX = 0;\n            }\n            *(*0x20 + -0x28) = unaff_RBX;\n            *(*0x20 + -0x30) = *0x7351c8;\n            *(*0x20 + -0x80) = 0x47361e;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + -0x28);\n                *(*0x20 + -0x18) = *(*0x20 + 0x28);\n                *(*0x20 + -0x20) = *(*0x20 + 0x30);\n                iVar1 = *(*0x20 + -0x38);\n                *(*0x20 + -0x80) = 0x47367e;\n                iVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x30));\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x80) = 0x4736c5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x80) = 0x4736f0;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x473714;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 897
    },
    "00473740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00473740(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = *0x7350f0;\n            *(*0x20 + -0x58) = 0x47377c;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x20) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                *(*0x20 + -0x58) = 0x4737c5;\n                fcn.0045e720(*(*0x20 + -0x20));\n                return;\n            }\n            *(*0x20 + -0x58) = 0x4737da;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4737ef;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 532
    },
    "00473960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473960(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = *0x735188;\n            *(*0x20 + -0xa0) = 0x4739db;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x18);\n                *(*0x20 + -0x18) = *(*0x20 + 0x28);\n                *(*0x20 + -0x20) = *(*0x20 + 0x38);\n                *(*0x20 + -0x28) = *(*0x20 + 0x40);\n                *(*0x20 + -0x98) = *(*0x20 + 0x40);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x473a7f;\n                iVar2 = fcn.0045e800(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x473ac5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x473af6;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x473b27;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1108
    },
    "00473b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473b60(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x38) = *0x735190;\n            *(*0x20 + -0xa0) = 0x473bcf;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                *(*0x20 + -0x20) = *(*0x20 + 0x28);\n                *(*0x20 + -0x28) = *(*0x20 + 0x30);\n                *(*0x20 + -0x30) = *(*0x20 + 0x38);\n                *(*0x20 + -0x98) = in_XMM15;\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x473c65;\n                iVar2 = fcn.0045e800(iVar1, *(*0x20 + 0x18), *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x473ca5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x473cd6;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x473cfe;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1006
    },
    "00473d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473d40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_ESI;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x30) = *0x7351a0;\n            *(*0x20 + -0x98) = 0x473dae;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                *(*0x20 + -0x20) = *(*0x20 + 0x30);\n                *(*0x20 + -0x28) = *(*0x20 + 0x38);\n                *(*0x20 + -0x90) = in_XMM15;\n                iVar1 = *(*0x20 + -0x38);\n                *(*0x20 + -0x98) = 0x473e34;\n                iVar2 = fcn.0045e800(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x28));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x72e580;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e590,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x98) = 0x473e76;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x98) = 0x473ea7;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_ESI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x473ece;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_ESI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 984
    },
    "00473f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473f00(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x7351b0;\n            *(*0x20 + -0x48) = 0x473f36;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x48) = 0x473f65;\n                iVar1 = fcn.0045e720(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x473f75;\n                    fcn.00409700();\n                    uVar2 = 0x6b5ac0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x473f97;\n            in_EAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x473fa6;\n        fcn.00459ea0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 519
    },
    "00478f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00478f40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00470c40();\n    return;\n}\n",
        "token_count": 82
    },
    "00478f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00478f80(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x1c) = unaff_RDI;\n            *(*0x20 + -0x48) = 0x478fb1;\n            fcn.0046fd80();\n            if (unaff_RDI != 0) goto code_r0x00478fc3;\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00478fc3:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = 0;\n                *(*0x20 + -0x48) = 0x478fe9;\n                iVar1 = fcn.00470ee0(0);\n                if (iVar1 == 0) {\n                    return *(*0x20 + -0x18);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x48) = 0x479030;\n            in_RAX = fcn.0045c5a0(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x479049;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "00479320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00479320(int64_t *arg1, ulong noname_1, uchar *arg3)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    uint64_t noname_1_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uchar *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x70) = 0x479365;\n            piVar1 = fcn.0046fd80();\n            if (unaff_RDI == NULL) {\n                unaff_RBX = arg1;\n                if (arg1 != NULL) {\n                    unaff_RDI = NULL;\n                    goto code_r0x00479380;\n                }\n            }\n            else {\n                piVar1 = NULL;\ncode_r0x00479380:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = piVar1;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x34) = *(*0x20 + 0x28);\n                uVar3 = *(*0x20 + 0x30);\n                noname_1_00 = *(*0x20 + 0x20);\n                unaff_RSI = *(*0x20 + 0x28);\n                while (unaff_RSI != 0) {\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x30) = unaff_RSI;\n                    *(*0x20 + -0x10) = noname_1_00;\n                    unaff_RDI = *0x20 + -0x38;\n                    arg3 = *0x20 + -0x34;\n                    *(*0x20 + -0x70) = 0x47941a;\n                    iVar2 = fcn.00471000(0, noname_1_00, arg3);\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + -0x34) <= *(*0x20 + -0x28)) {\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x70) = 0x4794a9;\n                        fcn.0045c620(*(*0x20 + -0x34), *(*0x20 + -0x28));\n                        arg1 = piVar1;\n                        unaff_RSI = noname_1_00;\n                        break;\n                    }\n                    if (((iVar2 == 0) || (*(iVar2 + 8) != 0x4a1100)) || (*piVar1 != 0xea)) {\n                        return 0;\n                    }\n                    arg1 = *(*0x20 + -0x34);\n                    if (*(*0x20 + -0x34) <= *(*0x20 + -0x30)) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x70) = 0x4793d7;\n                    noname_1_00 = fcn.00445140(arg1);\n                    piVar1 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x34);\n                    unaff_RSI = uVar3;\n                }\n                *(*0x20 + -0x70) = 0x4794b3;\n                fcn.0045c5a0(unaff_RSI);\n                unaff_RBX = arg1;\n            }\n            *(*0x20 + -0x70) = 0x4794bd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x4794e5;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1267
    },
    "00479940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00479940(void)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uint64_t arg1;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x80 && *0x20 + -0x80 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x100;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x108) = 0x479978;\n            uVar2 = fcn.0046fd80();\n            if (unaff_RDI == NULL) {\n                if (unaff_RBX != NULL) {\n                    unaff_RDI = NULL;\n                    goto code_r0x0047998f;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0047998f:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0xe0) = 0;\n                unaff_RDI = *0x20 + -0xd8;\n                *(*0x20 + -0x110) = unaff_RBP;\n                *(*0x20 + -0x108) = 0x4799b9;\n                fcn.0045c82b();\n                unaff_RBP = *(*0x20 + -0x110);\n                puVar3 = *0x20 + -0xe0;\n                arg1 = 100;\n                while (arg1 != 0) {\n                    *(*0x20 + -0xe8) = arg1;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x108) = 0x479a3c;\n                    uVar1 = fcn.00479c60(arg1);\n                    if (puVar3 != NULL) {\n                        return 0;\n                    }\n                    arg2 = *(*0x20 + -0xe8);\n                    if (uVar1 <= arg2) {\n                        arg1 = uVar1;\n                        if (arg1 <= arg2) {\n                            *(*0x20 + -0x108) = 0x479a68;\n                            uVar2 = fcn.0046fe60(arg2);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x108) = 0x479a9b;\n                        fcn.0045c620(arg1, arg2);\n                        unaff_RBX = puVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                    *(*0x20 + -0xe8) = unaff_RBX;\n                    *(*0x20 + -0x108) = 0x479a12;\n                    puVar3 = fcn.00445140(unaff_RBX);\n                    arg1 = *(*0x20 + -0xe8);\n                }\n                *(*0x20 + -0x108) = 0x479aa5;\n                fcn.0045c5a0(arg1);\n            }\n            *(*0x20 + -0x108) = 0x479aaf;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x479abf;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 956
    },
    "00479ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00479ae0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x30) = *0x734bd8;\n            *(*0x20 + -0x98) = 0x479b4f;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = *(*0x20 + 0x18);\n                *(*0x20 + -0x20) = *(*0x20 + 0x28);\n                *(*0x20 + -0x28) = *(*0x20 + 0x38);\n                *(*0x20 + -0x90) = in_XMM15;\n                *(*0x20 + -0x98) = 0x479bd6;\n                iVar1 = fcn.0045e800(*(*0x20 + -0x38), *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x479be7;\n                    fcn.00409700();\n                    uVar2 = 0x6b5ac0;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x98) = 0x479c0f;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_EDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + 0x38) = arg4;\n        *(puVar3 + -8) = 0x479c37;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3._0_4_ = *(puVar3 + 0x30);\n        arg4 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 924
    },
    "00479c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00479c60(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x734bb0;\n            *(*0x20 + -0x58) = 0x479c9b;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x479cdf;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x479d26;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x479d56;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x479d6a;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "0047e040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047e040(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0047e160(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0047e160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047e160(ulong arg1)\n\n{\n    ulong in_RDX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.0047dde0(arg1);\n    fcn.0047e1e0(arg1, in_RDX);\n    return;\n}\n",
        "token_count": 110
    },
    "0047e400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0047e400(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar1 = fcn.0045e960(arg1);\n    if (iVar1 + 0x9fe07780U >> 0x21 != 0) {\n        return unaff_EBX;\n    }\n    return unaff_EBX | (iVar1 + 0x9fe07780U) * 0x40000000 | 0x8000000000000000;\n}\n",
        "token_count": 176
    },
    "0047ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0047ea20(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (in_RAX != 0) {\n        if ((in_RAX == 0x7359a0) && (*0x7897f0 == 0)) {\n            fcn.00462400();\n        }\n        return in_RAX;\n    }\n    return 0x732320;\n}\n",
        "token_count": 145
    },
    "00480d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00480d40(void)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    int64_t arg1;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    uVar1 = fcn.0046fe60(0x20);\n    uVar3 = *0x735240;\n    puVar2 = fcn.0040ee20(uVar1);\n    if (uVar3 == '\\0') {\n        arg1 = fcn.0046fe60(0x20);\n        uVar1 = fcn.00480800(arg1);\n        uVar3 = *0x735240;\n        if (arg1 == 0) {\n            puVar2 = fcn.0040ee20(uVar1);\n            if (uVar3 != '\\0') {\n                return *puVar2;\n            }\n        }\n        uVar3 = fcn.00480c00();\n        fcn.00480c00();\n        return uVar3;\n    }\n    return *puVar2;\n}\n",
        "token_count": 277
    },
    "004826c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048271e)\n// WARNING: Removing unreachable block (ram,0x00482730)\n\nint64_t fcn.004826c0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = 0x4826ec;\n            uVar1 = fcn.0046fd80();\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x00482700;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x00482700:\n                if (unaff_RDI != 0) {\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x10) = uVar1;\n                unaff_RBX = *(*0x20 + 0x20);\n                *(*0x20 + -0x30) = 0x482719;\n                fcn.0046fd80();\n                if (unaff_RBX != 0) {\n                    *(*0x20 + -0x30) = 0x482753;\n                    iVar2 = fcn.00482a00(1);\n                    return iVar2;\n                }\n                *(*0x20 + -0x30) = 0x482777;\n                fcn.0045c5a0(0);\n            }\n            *(*0x20 + -0x30) = 0x482785;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045c5a0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x48279f;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 725
    },
    "004827c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004827c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x734b00;\n            *(*0x20 + -0x68) = 0x482805;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x68) = 0x48284a;\n                iVar2 = fcn.0045e780(iVar1, *(*0x20 + 0x20), *(*0x20 + 0x20), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e350;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e360,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x68) = 0x482885;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x4828b0;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + -8) = 0x4828c8;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 711
    },
    "004828e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004828e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x734b10;\n            *(*0x20 + -0x58) = 0x48291b;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x482955;\n                uVar2 = fcn.0045e720(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x482994;\n                    fcn.00409700();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x4829c5;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4829d9;\n        fcn.00459ea0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 607
    },
    "00482c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00482c40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x734ac8;\n            *(*0x20 + -0x48) = 0x482c72;\n            iVar1 = fcn.0046d820();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x48) = 0x482ca5;\n                iVar2 = fcn.0045e720(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x72e350;\n                    if ((iVar1 != 0) && (uVar3 = *0x72e360,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x482ce5;\n                        fcn.00409700();\n                        uVar3 = 0x6b5ac0;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x482d10;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x482d1b;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 517
    },
    "00483e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00483e40(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x483ebe;\n                        fcn.00457ec0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x483ef0;\n                        fcn.00457ec0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x483f3b;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x483f46;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 612
    },
    "00483f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00483f60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    char unaff_BL;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_BL == '\\0') {\n                puVar3 = in_RAX + 0xc;\n                uVar4 = 4;\n                iVar5 = 0x80000000000;\n                uVar7 = 0x7ffff80000000000;\n            }\n            else {\n                puVar3 = in_RAX + 1;\n                uVar4 = 2;\n                iVar5 = 0x800000;\n                uVar7 = 0x7ffff800000;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = puVar3;\n            *(*0x20 + -0x20) = uVar7;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x18) = uVar4;\ncode_r0x00483fd5:\n            uVar1 = *in_RAX;\n            if ((uVar1 & 1) != 0) {\n                return 0;\n            }\n            if ((uVar1 & uVar4) == 0) {\n                uVar8 = (uVar1 | uVar4) + 8;\n                if ((uVar8 & 0x7ffff8) == 0) goto code_r0x0048407b;\ncode_r0x0048400f:\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 & uVar4) == 0) {\n                        return 1;\n                    }\n                    *(*0x20 + -0x40) = 0x484032;\n                    fcn.00457da0();\n                    puVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                goto code_r0x00483fd5;\n            }\n            uVar8 = iVar5 + uVar1;\n            if ((uVar7 & uVar8) != 0) goto code_r0x0048400f;\n            *(*0x20 + -0x40) = 0x48407b;\n            fcn.00431940(puVar3);\ncode_r0x0048407b:\n            unaff_BL = -0x68;\n            *(*0x20 + -0x40) = 0x48408e;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x48409d;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 908
    },
    "00484280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00484280(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    cVar1 = fcn.004840c0();\n    if (cVar1 != '\\0') {\n        fcn.00485320();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004842e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004842e0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    cVar1 = fcn.004840c0();\n    if (cVar1 != '\\0') {\n        fcn.00485320();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00484340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00484340(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (*0x7897e0 == 0) {\n        fcn.00462400();\n    }\n    uVar1 = fcn.00457200();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x72e340;\n    if (unaff_RBX != 0x3e5) {\n        fcn.00409700();\n        uVar1 = 0x6b5ac0;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "004846c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004846c0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x4846fd;\n            iVar2 = fcn.0046d820();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 0;\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x484745;\n            iVar1 = fcn.00473820(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x7895a2 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x4847c5;\n            fcn.0045c5a0(0x20);\n        }\n        *(puVar4 + -8) = 0x4847cb;\n        fcn.00459ea0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 594
    },
    "00486f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00486f40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00482380();\n    fcn.0046da40();\n    return;\n}\n",
        "token_count": 90
    },
    "00487020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00487020(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00482460();\n    fcn.00487120(arg1, noname_1, arg3);\n    return;\n}\n",
        "token_count": 111
    },
    "004880c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004880c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.00488100();\n    return;\n}\n",
        "token_count": 81
    },
    "00488100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00488100(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x48813c;\n                iVar3 = fcn.00445140(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x488157;\n                uVar2 = fcn.004828e0(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x488170;\n                    uVar4 = fcn.0046fe60(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x488199;\n            in_RAX = fcn.0045c5a0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4881a5;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "00488560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488560(ulong arg1)\n\n{\n    ulong noname_1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    noname_1 = 0x6b5980;\n    fcn.004098a0();\n    fcn.00462840(unaff_RBX, noname_1, 0, 0);\n    return;\n}\n",
        "token_count": 135
    },
    "00489760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00489760(void)\n\n{\n    char cVar1;\n    uint64_t arg1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x489787;\n            fcn.00489820();\n            if (unaff_RBX == 0) {\n                return false;\n            }\n            arg1 = *(*0x20 + -0x10);\n            if (unaff_RBX <= arg1) {\n                if (arg1 - unaff_RBX != 0) {\n                    cVar1 = *(*(*0x20 + 8) + (unaff_RBX & -(arg1 - unaff_RBX) >> 0x3f));\n                    return cVar1 == '\\\\' || cVar1 == '/';\n                }\n                return false;\n            }\n            *(*0x20 + -0x28) = 0x4897f5;\n            in_RAX = fcn.0045c660(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x489805;\n        fcn.00459ea0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 470
    },
    "0048d520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048d520(uchar *arg1, uchar *noname_1, uchar *arg3, uchar *arg4)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *puVar7;\n    uchar *unaff_RDI;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x50) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == unaff_RDI) {\n                *(*0x20 + -200) = 0x48d597;\n                uVar1 = fcn.004025e0(unaff_RDI, noname_1);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x38);\n                noname_1 = uVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                noname_1 = NULL;\n            }\n            if ((noname_1 != '\\0') || (arg4 == NULL)) {\n                return in_RAX;\n            }\n            *(*0x20 + -200) = 0x48d5ec;\n            iVar2 = fcn.0048ba40(arg1);\n            if (iVar2 == 0) {\n                return *(*0x20 + 8);\n            }\n            iVar9 = *(*0x20 + 0x38);\n            if ((-1 < iVar9) && (iVar9 <= iVar2)) {\n                iVar2 = iVar9;\n            }\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            arg3 = *0x20 + -0x28;\n            *(*0x20 + -0x28) = arg3;\n            unaff_RDI = *(*0x20 + 0x20);\n            arg1 = *(*0x20 + -0x50);\n            arg4 = arg1 + (*(*0x20 + 0x30) - unaff_RDI) * iVar2;\n            if (-1 < arg4) {\n                *(*0x20 + -0x58) = iVar2;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < arg4) {\n                    *(*0x20 + -0x88) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x80) = arg4 + *(*0x20 + -0x10) * 2;\n                    *(*0x20 + -200) = 0x48d69a;\n                    iVar2 = fcn.00445140(arg4 + *(*0x20 + -0x10) * 2);\n                    unaff_RSI = *(*0x20 + -0x88);\n                    puVar5 = unaff_RSI;\n                    if (*(*0x20 + -0x18) < unaff_RSI) {\n                        puVar5 = *(*0x20 + -0x18);\n                    }\n                    if (iVar2 != *(*0x20 + -0x20)) {\n                        *(*0x20 + -0x30) = iVar2;\n                        *(*0x20 + -200) = 0x48d6cb;\n                        fcn.0045cee0(puVar5);\n                        iVar2 = *(*0x20 + -0x30);\n                        unaff_RSI = *(*0x20 + -0x88);\n                    }\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x80);\n                    *(*0x20 + -0x20) = iVar2;\n                    iVar2 = *(*0x20 + -0x58);\n                    arg1 = *(*0x20 + -0x50);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                arg4 = *(*0x20 + 0x18);\n                iVar9 = *(*0x20 + 8);\n                puVar5 = NULL;\n                noname_1 = NULL;\n                while (arg3 = *0x20 + -0x28,  noname_1 < iVar2) {\n                    *(*0x20 + -0x90) = noname_1;\n                    *(*0x20 + -0x98) = puVar5;\n                    if (unaff_RDI == NULL) {\n                        puVar7 = puVar5;\n                        if (0 < noname_1) {\n                            if (arg1 < puVar5) goto code_r0x0048dbd8;\n                            *(*0x20 + -200) = 0x48d833;\n                            fcn.004630a0(-(arg1 - puVar5) >> 0x3f & puVar5);\n                            puVar5 = *(*0x20 + -0x98) + (arg1 - puVar5);\n                            arg1 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x18);\n                            iVar9 = *(*0x20 + 8);\n                            puVar7 = *(*0x20 + -0x98);\n                        }\n                    }\n                    else {\n                        if (arg1 < puVar5) goto code_r0x0048dbd0;\n                        *(*0x20 + -200) = 0x48d8a8;\n                        iVar2 = fcn.0048dec0(arg4, noname_1);\n                        puVar5 = *(*0x20 + -0x98) + iVar2;\n                        arg1 = *(*0x20 + -0x50);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        arg4 = *(*0x20 + 0x18);\n                        iVar9 = *(*0x20 + 8);\n                        puVar7 = *(*0x20 + -0x98);\n                    }\n                    arg3 = *0x20 + -0x28;\n                    if (arg1 < puVar5) goto code_r0x0048dbc5;\n                    if (puVar5 < puVar7) goto code_r0x0048dbb8;\n                    iVar2 = puVar5 - puVar7;\n                    unaff_RSI = puVar7 & -iVar2 >> 0x3f;\n                    puVar7 = unaff_RSI + iVar9;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = arg3;\n                    }\n                    else if (*(*0x20 + -0x28) != arg3) goto code_r0x0048dba5;\n                    *(*0x20 + -0x60) = puVar5;\n                    puVar5 = *(*0x20 + -0x18);\n                    unaff_RSI = puVar5 + iVar2;\n                    *(*0x20 + -0x68) = unaff_RSI;\n                    arg4 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0x20);\n                    if (arg4 < unaff_RSI) {\n                        *(*0x20 + -0x70) = iVar2;\n                        *(*0x20 + -0x48) = puVar7;\n                        *(*0x20 + -0x78) = puVar5;\n                        *(*0x20 + -200) = 0x48d989;\n                        uVar3 = fcn.00445220(puVar5);\n                        iVar2 = *(*0x20 + -0x70);\n                        unaff_RDI = arg4;\n                        arg4 = puVar5;\n                    }\n                    *(*0x20 + -0x70) = arg4;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x48d9b7;\n                    fcn.0045cee0(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else {\n                        arg3 = *0x20 + -0x28;\n                        if (*(*0x20 + -0x28) != arg3) goto code_r0x0048db8d;\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar2 = *(*0x20 + 0x30);\n                    *(*0x20 + -0x68) = iVar2 + uVar4;\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar2 + uVar4) {\n                        *(*0x20 + -0x70) = uVar4;\n                        *(*0x20 + -200) = 0x48da65;\n                        uVar3 = fcn.00445220(uVar4);\n                        iVar2 = *(*0x20 + 0x30);\n                        uVar8 = uVar4;\n                    }\n                    *(*0x20 + -0x70) = uVar8;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x48d76e;\n                    fcn.0045cee0(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    puVar5 = unaff_RDI + *(*0x20 + -0x60);\n                    arg1 = *(*0x20 + -0x50);\n                    iVar2 = *(*0x20 + -0x58);\n                    arg4 = *(*0x20 + 0x18);\n                    iVar9 = *(*0x20 + 8);\n                    unaff_RSI = arg1;\n                    noname_1 = *(*0x20 + -0x90) + 1;\n                }\n                if (puVar5 <= arg1) {\n                    iVar2 = arg1 - puVar5;\n                    arg1 = -iVar2 >> 0x3f;\n                    arg4 = *(*0x20 + -0x28);\n                    if (arg4 == NULL) {\n                        *(*0x20 + -0x28) = arg3;\ncode_r0x0048dabc:\n                        uVar4 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x58) = uVar4 + iVar2;\n                        uVar3 = *(*0x20 + -0x20);\n                        uVar8 = *(*0x20 + -0x10);\n                        if (*(*0x20 + -0x10) < uVar4 + iVar2) {\n                            *(*0x20 + -0x60) = uVar4;\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x40) = (puVar5 & arg1) + iVar9;\n                            *(*0x20 + -200) = 0x48db06;\n                            uVar3 = fcn.00445220(uVar4);\n                            iVar2 = *(*0x20 + -0x68);\n                            uVar8 = uVar4;\n                        }\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0x38) = uVar3;\n                        *(*0x20 + -200) = 0x48db37;\n                        fcn.0045cee0(iVar2);\n                        *(*0x20 + -0x18) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                        *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                        return *(*0x20 + -0x38);\n                    }\n                    if (arg4 == arg3) goto code_r0x0048dabc;\n                    *(*0x20 + -200) = 0x48db85;\n                    fcn.00431940();\n                }\n                *(*0x20 + -200) = 0x48db8d;\n                fcn.0045c660(arg1);\ncode_r0x0048db8d:\n                *(*0x20 + -200) = 0x48dba5;\n                fcn.00431940();\ncode_r0x0048dba5:\n                puVar5 = 0x6b56c8;\n                *(*0x20 + -200) = 0x48dbb8;\n                fcn.00431940();\n                puVar7 = unaff_RSI;\ncode_r0x0048dbb8:\n                *(*0x20 + -200) = 0x48dbc5;\n                arg1 = puVar5;\n                fcn.0045c660(puVar5);\ncode_r0x0048dbc5:\n                *(*0x20 + -200) = 0x48dbd0;\n                noname_1 = arg1;\n                fcn.0045c5e0(puVar5, arg1);\n                arg1 = puVar5;\n                unaff_RSI = puVar7;\ncode_r0x0048dbd0:\n                *(*0x20 + -200) = 0x48dbd8;\n                fcn.0045c660(arg1);\ncode_r0x0048dbd8:\n                *(*0x20 + -200) = 0x48dbe5;\n                fcn.0045c660(arg1);\n            }\n            unaff_RBX = 0x6b5828;\n            *(*0x20 + -200) = 0x48dbf8;\n            in_RAX = fcn.00431940();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + -8) = 0x48dc25;\n        fcn.00459ea0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3707
    },
    "0048f220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048f220(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0x4ac9c5;\n            }\n            for (; (0 < unaff_RBX && ((cVar1 = *(unaff_RBX + -1 + in_RAX),  cVar1 == '\\\\' || (cVar1 == '/'))));\n                unaff_RBX = unaff_RBX + -1) {\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x48f285;\n            uVar3 = fcn.0048f360();\n            arg2 = *(*0x20 + -0x10);\n            if (uVar3 <= arg2) {\n                arg1 = arg2 - uVar3;\n                arg2 = (-arg1 >> 0x3f & uVar3) + *(*0x20 + 8);\n                uVar3 = arg1;\n                do {\n                    uVar2 = uVar3;\n                    uVar3 = uVar2 - 1;\n                    if (uVar3 < 0) goto code_r0x0048f300;\n                } while ((*(arg2 + uVar3) != '\\\\') && (*(arg2 + uVar3) != '/'));\n                if (uVar3 < 0) goto code_r0x0048f300;\n                if (uVar2 <= arg1) {\n                    arg1 = (arg1 - uVar3) - 1;\n                    arg2 = arg2 + (-arg1 >> 0x3f & uVar2);\ncode_r0x0048f300:\n                    if (arg1 != 0) {\n                        return arg2;\n                    }\n                    return 0x4ac9d6;\n                }\n                *(*0x20 + -0x28) = 0x48f330;\n                uVar3 = fcn.0045c660(arg1);\n            }\n            *(*0x20 + -0x28) = 0x48f338;\n            in_RAX = fcn.0045c5e0(uVar3, arg2);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x48f348;\n        fcn.00459ea0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 778
    },
    "00490a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00490a40(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (0 < arg1) {\n        iVar1 = 0;\n        while( true ) {\n            (**(*unaff_RBX + 0x18))(*(*unaff_RBX + 0x18), unaff_RBX[1]);\n            iVar1 = iVar1 + 1;\n            if (arg1 <= iVar1) break;\n            unaff_RBX = unaff_RBX + 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00491f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00491f80(int64_t param_1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    iVar2 = fcn.00489c40();\n    if (param_1 == 0) {\n        cVar1 = (**(iVar2 + 0x18))();\n        if (cVar1 != '\\0') {\n            return *0x735480;\n        }\n        return 0;\n    }\n    return param_1;\n}\n",
        "token_count": 163
    },
    "004920c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004920c0(ulong arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    if (unaff_RDI == 0) {\n        fcn.00491f80();\n        return in_RAX;\n    }\n    cVar1 = fcn.00492020(arg1, arg2, in_R8);\n    if ((cVar1 != '\\0') && (iVar2 = fcn.00491f80(),  iVar2 == 0)) {\n        return in_RAX;\n    }\n    iVar2 = 0;\n    do {\n        uVar3 = fcn.00448ba0(unaff_RBX);\n        iVar4 = fcn.00491f80();\n        if (iVar4 == 0) {\n            return uVar3;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < unaff_RDI);\n    return 0;\n}\n",
        "token_count": 304
    },
    "004927e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004927e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00459ea0();\n    }\n    fcn.004320a0();\n    return;\n}\n",
        "token_count": 82
    },
    "00492c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00492c20(code *arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    code *arg1_00;\n    code *pcVar4;\n    code *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x98) = 0x492c79;\n            uVar1 = fcn.0046bfa0(unaff_RBX);\n            *(*0x20 + -0x28) = uVar1;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            unaff_RBX = *(*0x20 + 0x18);\n            uVar1 = *(*0x20 + 0x20);\n            *(*0x20 + -0x98) = 0x492c9f;\n            uVar2 = fcn.00449100(uVar1);\n            *(*0x20 + -0x30) = uVar2;\n            *(*0x20 + -0x58) = uVar1;\n            *(*0x20 + -0x98) = 0x492cae;\n            iVar3 = fcn.0046ac20(uVar1);\n            *(*0x20 + -0x38) = iVar3;\n            *(*0x20 + -0x18) = unaff_RBX;\n            pcVar4 = *(iVar3 + 0x18);\n            *(*0x20 + -0x98) = 0x492cc2;\n            arg1 = (*pcVar4)();\n            pcVar4 = *(*0x20 + -0x58);\n            if (arg1 <= pcVar4) {\n                uVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x98) = 0x492cea;\n                uVar2 = fcn.00469b80(*(*0x20 + -0x30));\n                *(*0x20 + -0x40) = uVar2;\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x98) = 0x492d08;\n                unaff_RBX = fcn.00445140(*(*0x20 + -0x50));\n                *(*0x20 + -0x10) = unaff_RBX;\n                pcVar4 = *(*(*0x20 + -0x40) + 0x20);\n                unaff_RDI = *(*0x20 + -0x50);\n                *(*0x20 + -0x98) = 0x492d38;\n                (*pcVar4)(unaff_RDI, pcVar4, unaff_RDI, *(*0x20 + -0x48));\n                arg2 = *(*0x20 + -0x50);\n                arg1_00 = arg2;\n                if (arg2 + -1 < arg2) {\n                    unaff_RBX = *(*0x20 + -0x10);\n                    arg1_00 = arg2 + -arg2[unaff_RBX + -1];\n                    if (arg1_00 <= arg2) {\n                        *(*0x20 + -0x98) = 0x492d66;\n                        fcn.00448f60(arg1_00);\n                        return;\n                    }\n                    *(*0x20 + -0x98) = 0x492d7b;\n                    fcn.0045c620(arg1_00, arg2);\n                    pcVar4 = arg2;\n                }\n                *(*0x20 + -0x98) = 0x492d85;\n                arg1 = fcn.0045c5a0(arg1_00);\n            }\n            *(*0x20 + -0x98) = 0x492d8d;\n            in_RAX = fcn.0045c620(arg1, pcVar4);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x492da7;\n        fcn.00459ea0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1215
    },
    "00401ba0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401ba0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00402000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.00402000(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n        if (*(in_RAX + iVar1) == param_1) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 118
    },
    "004279c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004279c0(void)\n\n{\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 8; iVar1 = iVar1 + 1) {\n        *(CONCAT71(in_RAX, in_AL) + iVar1 * 8) = 0xffffffffffffffff;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00427b00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00427b00(void)\n\n{\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 8; iVar1 = iVar1 + 1) {\n        *(CONCAT71(in_RAX, in_AL) + iVar1 * 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00428800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00428800(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI != unaff_RBX) {\n        return 0;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar1) {\n            return 1;\n        }\n        if (*(unaff_RDI + iVar1 * 8) != *(in_RAX + iVar1 * 8)) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0042dfc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042dfc0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42dfe5;\n            fcn.004320e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42dfeb;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 179
    },
    "0042f9a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042f9a0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x42f9ca;\n            fcn.0042f180(0x15);\n            *(*0x20 + -0x28) = 0x42f9e9;\n            fcn.00431940();\n        }\n        *(puVar1 + -8) = 0x42f9ef;\n        fcn.00459ea0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 240
    },
    "0042fa00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042fa00(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42fa25;\n            fcn.0042f240();\n            iVar1 = *0x72e4d0;\n            if (*0x72e4d0 != 0) {\n                iVar1 = *(*0x72e4d0 + 8);\n            }\n            *(*0x20 + -0x20) = 0x42fa45;\n            fcn.00431940(iVar1);\n        }\n        *(puVar2 + -8) = 0x42fa4b;\n        fcn.00459ea0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 287
    },
    "00430760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00430760(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x430785;\n            fcn.004320e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43078b;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "004307a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004307a0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4307c5;\n            fcn.004320e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4307cb;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00435240": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00435240(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x435265;\n            fcn.004320e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43526b;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00435280": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00435280(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4352a5;\n            fcn.004320e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4352ab;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00435380": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00435380(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.004320e0();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x4353db;\n                fcn.00409e80();\n                uVar2 = *0x735710;\n                arg1_00 = *0x735718;\n                uVar4 = *0x735710;\n                if (*0x735720 < *0x735718 + 1) {\n                    *(puVar5 + -0x58) = 0x435405;\n                    arg1 = *0x735718;\n                    uVar4 = fcn.00445220(*0x735718);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar4;\n                    *0x735720 = arg1;\n                    if (*0x789810 != 0) {\n                        *(puVar5 + -0x58) = 0x43542a;\n                        uVar4 = fcn.0045c100(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x735710;\n                    }\n                }\n                *0x735710 = uVar2;\n                *0x735718 = arg1_00 + 1;\n                if (*0x789810 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(uVar4 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x43545d;\n                    fcn.0045c220(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x735718 != 0) {\n                    uVar2 = *0x734c98;\n                    if ((*0x734c98 != *0x735710) && (uVar2 = *0x735710,  *0x789810 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x735710;\n                        *(puVar5 + -0x58) = 0x435494;\n                        fcn.00403140();\n                        uVar2 = *(puVar5 + -0x10);\n                    }\n                    *0x734c98 = uVar2;\n                    uVar1 = *0x789648;\n                    *0x789648 = *0x735718;\n                    *(puVar5 + -0x58) = 0x4354c5;\n                    fcn.0040a0a0(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x4354d6;\n                fcn.0045c5a0(0);\n            }\n            *(puVar5 + -0x58) = 0x4354e7;\n            iVar3 = fcn.004320e0();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x4354f2;\n        fcn.00459ea0();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 958
    },
    "00440580": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00440580(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    do {\n        uVar3 = *(in_RAX + 0xdf8);\n        if (uVar3 == 0) {\n            do {\n                uVar2 = *(in_RAX + 0x5f0);\n                if (uVar2 == *(in_RAX + 0x5f4)) {\n                    return 0;\n                }\n                uVar3 = *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8);\n                LOCK();\n            } while (uVar2 != *(in_RAX + 0x5f0));\n            *(in_RAX + 0x5f0) = uVar2 + 1;\n            return uVar3;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    return uVar3;\n}\n",
        "token_count": 285
    },
    "0044e2e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044e2e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44e305;\n            fcn.004320e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44e30b;\n        fcn.00459ea0();\n    } while( true );\n}\n",
        "token_count": 180
    },
    "0045bc80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045bc80(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0045c5a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c5a0(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42f2f4;\n            fcn.0042f180(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f330;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f335;\n            in_RAX = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42f345;\n        fcn.00459ea0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 464
    },
    "0045c5c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c5c0(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42f394;\n            fcn.0042f180(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f3d0;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f3d5;\n            in_RAX = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42f3e5;\n        fcn.00459ea0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 468
    },
    "0045c5e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c5e0(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42f434;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f470;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f475;\n            arg1 = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42f485;\n        fcn.00459ea0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 456
    },
    "0045c620": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c620(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42f574;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f5b0;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f5b5;\n            arg1 = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42f5c5;\n        fcn.00459ea0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 460
    },
    "0045c640": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c640(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42f614;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f650;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f655;\n            arg1 = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42f665;\n        fcn.00459ea0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 454
    },
    "0045c660": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c660(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42f6b4;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f6f0;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f6f5;\n            in_RAX = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42f705;\n        fcn.00459ea0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 466
    },
    "0045c680": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c680(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42f754;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f790;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f795;\n            in_RAX = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42f7a5;\n        fcn.00459ea0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "0045c6a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c6a0(ulong noname_0, ulong arg2)\n\n{\n    uchar *unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42f7f4;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            unaff_RBX = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f830;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f835;\n            arg2 = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42f845;\n        fcn.00459ea0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 475
    },
    "0045c6c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c6c0(ulong noname_0, ulong arg2)\n\n{\n    uchar *unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42f894;\n            fcn.0042f180(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            unaff_RBX = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x42f8d0;\n            fcn.00409820();\n            *(*0x20 + -0x40) = 0x42f8d5;\n            arg2 = fcn.00431940();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42f8e5;\n        fcn.00459ea0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 479
    },
    "0045e5a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0045e5a0(uint64_t param_1)\n\n{\n    uint64_t *puVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    ulong *puVar6;\n    uchar uVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    int64_t *arg1;\n    uint64_t arg2;\n    ulong uVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *arg1_00;\n    int64_t *piVar15;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t in_GS_OFFSET;\n    bool bVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uchar auStack24 [16];\n    \n    uVar17 = 0;\n    uVar18 = 0;\n    uVar19 = 0;\n    uVar20 = 0;\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    puVar14 = &stack0xfffffffffffffff8;\n    uVar11 = 0x32;\n    iVar4 = fcn.004320e0();\n    puVar12 = auStack24;\n    do {\n        uVar7 = param_1;\n        puVar1 = iVar3 + 0x10;\n        puVar13 = puVar12;\n        if (*puVar1 <= puVar12 + -0x78 && puVar12 + -0x78 != *puVar1) {\n            puVar13 = puVar12 + -0xf8;\n            *(puVar12 + -8) = puVar14;\n            puVar14 = puVar12 + -8;\n            *(puVar12 + 8) = iVar4;\n            *(puVar12 + 0x10) = uVar11;\n            if ((iVar4 != 0) && ((*(iVar4 + 0x17) & 0x1f) == 0x13)) {\n                *(puVar12 + -0x98) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                *(puVar12 + -0x88) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                *(puVar12 + -0x78) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                *(puVar12 + -0x68) = CONCAT412(uVar20, CONCAT48(uVar19, CONCAT44(uVar18, uVar17)));\n                if ((*(iVar4 + 0x14) & 1) == 0) {\n                    iVar10 = 0x38;\n                }\n                else {\n                    iVar10 = 0x48;\n                }\n                arg1_00 = *(iVar4 + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(puVar12 + -0xb0) = iVar4;\n                    *(puVar12 + -0xc0) = iVar10 + iVar4;\n                    *(puVar12 + -0xb8) = uVar11;\n                    *(puVar12 + -200) = arg1_00;\n                    iVar10 = 0;\n                    while (iVar10 < arg1_00) {\n                        *(puVar12 + -0xd0) = iVar10;\n                        *(puVar12 + -0x100) = 0x4580f6;\n                        fcn.0044b840();\n                        iVar4 = *(puVar12 + -0xb0);\n                        arg1_00 = *(puVar12 + -200);\n                        iVar10 = *(puVar12 + -0xd0) + 1;\n                    }\n                    arg2 = *(puVar12 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(puVar12 + -0x78) = arg2;\n                    *(puVar12 + -0x60) = arg2;\n                    uVar2 = *(iVar4 + 0x30);\n                    piVar15 = uVar2;\n                    arg1_00 = (*(iVar4 + 0x32) & 0x7fff) + uVar2;\n                    arg1 = arg1_00 & 0xffff;\n                    if (piVar15 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar15 << 3;\n                        arg1_00 = piVar15 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((*(iVar4 + 0x14) & 1) == 0) {\n                                iVar10 = 0x38;\n                            }\n                            else {\n                                iVar10 = 0x48;\n                            }\n                            arg1 = *(arg1_00 + iVar10 + iVar4);\n                            if (*arg1 == 8) {\n                                if ((*(iVar4 + 0x14) & 1) == 0) {\n                                    iVar10 = 0x38;\n                                }\n                                else {\n                                    iVar10 = 0x48;\n                                }\n                                uVar9 = *(*(arg1_00 + iVar10 + iVar4) + 0x17) & 0x1f;\n                                arg1 = uVar9;\n                                cVar8 = uVar9;\n                                if ((cVar8 != '\\r') && (cVar8 != '\\x0e')) {\n                                    if (*0x71d280 == 0) {\n                                        *(puVar12 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(puVar12 + -0x78) + 7U & 0xfffffffffffffff8) + *(puVar12 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(puVar12 + -0x100) = 0x45823b;\n                                        fcn.00409e80();\n                                        iVar4 = *0x789588;\n                                        *(puVar12 + -0xa8) = *(puVar12 + -0xb8);\n                                        puVar12[-0xa0] = 0;\n                                        *(puVar12 + -0x100) = 0x458265;\n                                        ppiVar5 = fcn.0040cf00(puVar12 + -0xa8);\n                                        arg1 = *ppiVar5;\n                                        if (iVar4 != '\\0') {\n                                            *(puVar12 + -0xd8) = arg1;\n                                            *(puVar12 + -0x100) = 0x458408;\n                                            fcn.0040a0a0();\n                                            return *(puVar12 + -0xd8) * 5 + CONCAT71(*0x69e329, *0x69e328);\n                                        }\n                                        iVar4 = *0x789588;\n                                        if (*0x789588 == 0) {\n                                            *(puVar12 + -0x100) = 0x45827f;\n                                            iVar4 = fcn.0040ca60();\n                                            if (*0x789810 != 0) {\n                                                arg1_00 = 0x789588;\n                                                *(puVar12 + -0x100) = 0x45829d;\n                                                fcn.0045c100(arg1, arg2, arg3, arg4);\n                                                iVar4 = *0x789588;\n                                            }\n                                        }\n                                        *0x789588 = iVar4;\n                                        bVar16 = *0x789590 < 2000;\n                                        if (*0x789590 < 2000) {\n                                            arg1_00 = puVar12 + -0x88;\n                                            *(puVar12 + -0x108) = puVar14;\n                                            *(puVar12 + -0x100) = 0x4582cf;\n                                            iVar4 = fcn.0045c850();\n                                            puVar14 = *(puVar12 + -0x108);\n                                            uVar11 = *(puVar12 + -0xb8);\n                                            *(puVar12 + -0x58) = uVar11;\n                                            *(puVar12 + -0x48) = *(puVar12 + -0x98);\n                                            *(puVar12 + -0x44) = *(puVar12 + -0x94);\n                                            *(puVar12 + -0x40) = *(puVar12 + -0x90);\n                                            *(puVar12 + -0x3c) = *(puVar12 + -0x8c);\n                                            *(puVar12 + -0x38) = *(puVar12 + -0x88);\n                                            *(puVar12 + -0x34) = *(puVar12 + -0x84);\n                                            *(puVar12 + -0x30) = *(puVar12 + -0x80);\n                                            *(puVar12 + -0x2c) = *(puVar12 + -0x7c);\n                                            *(puVar12 + -0x28) = *(puVar12 + -0x78);\n                                            *(puVar12 + -0x24) = *(puVar12 + -0x74);\n                                            *(puVar12 + -0x20) = *(puVar12 + -0x70);\n                                            *(puVar12 + -0x1c) = *(puVar12 + -0x6c);\n                                            *(puVar12 + -0x18) = *(puVar12 + -0x68);\n                                            *(puVar12 + -0x14) = *(puVar12 + -100);\n                                            *(puVar12 + -0x10) = *(puVar12 + -0x60);\n                                            *(puVar12 + -0xc) = *(puVar12 + -0x5c);\n                                            if (bVar16) {\n                                                *(puVar12 + -0xe0) = iVar4;\n                                                *(puVar12 + -200) = iVar4 * 5;\n                                                if (*0x789810 == 0) {\n                                                    *(puVar12 + -0x108) = puVar14;\n                                                    *(puVar12 + -0x100) = 0x45836f;\n                                                    fcn.0045cbba();\n                                                }\n                                                else {\n                                                    *(puVar12 + -0x100) = 0x45838c;\n                                                    fcn.0040fb00(puVar12 + -0x58);\n                                                    uVar11 = *(puVar12 + -0xb8);\n                                                }\n                                                *(puVar12 + -0xa8) = uVar11;\n                                                puVar12[-0xa0] = 0;\n                                                *(puVar12 + -0x100) = 0x4583b3;\n                                                puVar6 = fcn.0040d140(puVar12 + -0xa8);\n                                                *puVar6 = *(puVar12 + -0xe0);\n                                                *0x789590 = *0x789590 + 1;\n                                                *(puVar12 + -0x100) = 0x4583d0;\n                                                fcn.0040a0a0();\n                                                return *(puVar12 + -200) + CONCAT71(*0x69e329, *0x69e328);\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(puVar12 + -0x100) = 0x45843b;\n                                            fcn.0045c5a0(2000);\n                                        }\n                                        *(puVar12 + -0x100) = 0x458449;\n                                        fcn.0040a0a0();\n                                        *(puVar12 + -0x100) = 0x45845a;\n                                        fcn.004320e0();\n                                    }\n                                    *(puVar12 + -0x100) = 0x45846d;\n                                    fcn.00431940();\n                                }\n                                *(puVar12 + -0x100) = 0x458485;\n                                fcn.00431940();\n                            }\n                            *(puVar12 + -0x100) = 0x458498;\n                            fcn.00431940();\n                        }\n                        *(puVar12 + -0x100) = 0x4584ab;\n                        fcn.00431940();\n                    }\n                    *(puVar12 + -0x100) = 0x4584b3;\n                    fcn.0045c660(arg1);\n                }\n                *(puVar12 + -0x100) = 0x4584c5;\n                fcn.0045c5e0(arg1_00, 0x100000);\n                uVar7 = SUB81(arg1_00, 0);\n            }\n            uVar11 = 0x6b5758;\n            *(puVar12 + -0x100) = 0x4584d8;\n            iVar4 = fcn.00431940();\n        }\n        *(puVar13 + 8) = iVar4;\n        *(puVar13 + 0x10) = uVar11;\n        puVar13[0x18] = uVar7;\n        *(puVar13 + -8) = 0x4584ec;\n        fcn.00459ea0();\n        iVar4 = *(puVar13 + 8);\n        uVar11 = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        puVar12 = puVar13;\n    } while( true );\n}\n",
        "token_count": 2967
    }
}