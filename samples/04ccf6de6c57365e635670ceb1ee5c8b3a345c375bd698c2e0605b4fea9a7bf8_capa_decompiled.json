{
    "0040115e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040115e(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.00405fa0(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 102
    },
    "0040118b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040118b(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.00406770(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 101
    },
    "0040130f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040130f(int32_t arg_8h)\n\n{\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00405c13(0);\n    fcn.00402c77();\n    fcn.00402c77();\n    fcn.00402ccf();\n    fcn.00402ccf();\n    fcn.00402c77();\n    fcn.00402c77();\n    if (arg_8h == 0) {\n        fcn.004012ae(\"bad locale name\");\n        fcn.00407432(&var_10h, 0x42566c);\n    }\n    fcn.004058a4(var_4h, arg_8h);\n    return var_4h;\n}\n",
        "token_count": 172
    },
    "004014a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __fastcall fcn.004014a5(int32_t *param_1)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        uVar1 = 0;\n        fcn.00405c13(0);\n        if (*param_1 == 0) {\n            *0x427ea4 = *0x427ea4 + 1;\n            *param_1 = *0x427ea4;\n        }\n        fcn.00405c6e(uVar1, param_1);\n    }\n    return *param_1;\n}\n",
        "token_count": 160
    },
    "004015ba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015ba(int32_t **param_1)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*param_1 != NULL) && (puVar1 = (**(**param_1 + 8))(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00401602": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __fastcall fcn.00401602(int32_t *param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 == 0) {\n        var_8h = 0x423f78;\n    }\n    else {\n        var_8h = fcn.00402ca5(param_1);\n    }\n    return var_8h;\n}\n",
        "token_count": 106
    },
    "00401632": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401632(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h < *(*in_ECX + 0xc)) {\n        var_8h = *(*(*in_ECX + 8) + arg_8h * 4);\n    }\n    else {\n        var_8h = 0;\n    }\n    var_14h = var_8h;\n    if ((var_8h == 0) && (*(*in_ECX + 0x14) != '\\0')) {\n        iVar1 = fcn.004057c9();\n        if (arg_8h < *(iVar1 + 0xc)) {\n            var_14h = *(*(iVar1 + 8) + arg_8h * 4);\n        }\n        else {\n            var_14h = 0;\n        }\n    }\n    return var_14h;\n}\n",
        "token_count": 250
    },
    "004017a3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004017a3(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint var_40h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.00407251(0x18);\n        if (iVar1 == 0) {\n            var_ch = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401602(0);\n            arg_8h_01 = fcn.0040130f(arg_8h_00);\n            var_ch = fcn.00401774(arg_8h_01, arg_8h_00);\n        }\n        *arg_8h = var_ch;\n        if (iVar1 != 0) {\n            fcn.0040139b();\n        }\n    }\n    return 2;\n}\n",
        "token_count": 241
    },
    "00401867": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401867(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 0x10) < 1) {\n        if (*(param_1 + 0x10) < 0) {\n            fcn.00407094(*(param_1 + 0xc));\n        }\n    }\n    else {\n        fcn.00406db4(*(param_1 + 0xc));\n    }\n    fcn.00406db4(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 131
    },
    "00401d83": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d83(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00405639(arg_ch);\n    if (var_8h == NULL) {\n        var_8h = \"unknown error\";\n    }\n    fcn.00402b6a(var_8h);\n    return arg_8h;\n}\n",
        "token_count": 103
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl method.std::_System_error_category.virtual_8(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00405663(arg_ch);\n    if (var_8h == NULL) {\n        var_8h = \"unknown error\";\n    }\n    fcn.00402b6a(var_8h);\n    return arg_8h;\n}\n",
        "token_count": 105
    },
    "00402179": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402179(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0x30) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0x201;\n    *(param_1 + 0x18) = 6;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    fcn.0040207c(0);\n    iVar1 = fcn.00407251(4);\n    if (iVar1 == 0) {\n        var_ch = 0;\n    }\n    else {\n        var_ch = fcn.0040159f();\n    }\n    *(param_1 + 0x30) = var_ch;\n    return;\n}\n",
        "token_count": 276
    },
    "00402c52": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402c52(uint32_t param_1)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *(param_1 + 0x10) == 0;\n    return param_1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 75
    },
    "00402ca5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00402ca5(int32_t **param_1)\n\n{\n    int32_t **var_8h;\n    uint var_4h;\n    \n    if (*param_1 == NULL) {\n        var_8h = param_1 + 1;\n    }\n    else {\n        var_8h = *param_1;\n    }\n    return var_8h;\n}\n",
        "token_count": 90
    },
    "00402d43": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d43(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.00402096();\n        fcn.0040416a(uVar1 | arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00402d7e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d7e(code **param_1)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0xd] != NULL) {\n        fcn.00403c25(1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00403154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t * __cdecl fcn.00403154(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        *in_ECX = 0x4243e4;\n        in_ECX[4] = 0x4243f4;\n        fcn.004041fb(0);\n    }\n    fcn.00404465(in_ECX + 6, 0);\n    *(in_ECX + *(*in_ECX + 4)) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -0x68;\n    fcn.004044ee(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 227
    },
    "00403dc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403dc4(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00403fe7();\n    if (uVar2 < arg_ch) {\n        fcn.0040485c();\n    }\n    iVar3 = fcn.00403fe7();\n    if (iVar3 - arg_ch < arg_10h) {\n        arg_10h = iVar3 - arg_ch;\n    }\n    if (*0x424418 - *(in_ECX + 0x10) <= arg_10h) {\n        fcn.00404847();\n    }\n    if (arg_10h != 0) {\n        iVar3 = *(in_ECX + 0x10) + arg_10h;\n        cVar1 = fcn.0040476b(iVar3, 0);\n        if (cVar1 != '\\0') {\n            iVar4 = fcn.00404119();\n            iVar4 = iVar4 + arg_ch;\n            iVar5 = fcn.00404119();\n            fcn.0040115e(iVar5 + *(in_ECX + 0x10), iVar4, arg_10h);\n            fcn.00404739(iVar3);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 349
    },
    "00403e76": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403e76(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040480c(arg_8h);\n    if (cVar1 == '\\0') {\n        if (*0x424418 - *(in_ECX + 0x10) <= arg_ch) {\n            fcn.00404847();\n        }\n        if (arg_ch != 0) {\n            iVar2 = *(in_ECX + 0x10) + arg_ch;\n            cVar1 = fcn.0040476b(iVar2, 0);\n            if (cVar1 != '\\0') {\n                iVar3 = fcn.00404119();\n                fcn.0040115e(iVar3 + *(in_ECX + 0x10), arg_8h, arg_ch);\n                fcn.00404739(iVar2);\n            }\n        }\n    }\n    else {\n        iVar2 = fcn.00404119();\n        in_ECX = fcn.00403dc4(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 298
    },
    "00403ff8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00403ff8(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    uchar *arg_8h_00;\n    uint arg_8h_01;\n    uint arg_10h;\n    uint *arg_8h_02;\n    uint var_ch;\n    uint var_8h;\n    uchar var_2h;\n    uint var_1h;\n    \n    if ((arg_8h != '\\0') && (0xf < in_ECX[5])) {\n        arg_8h_01 = *in_ECX;\n        arg_8h_02 = &var_1h;\n        fcn.004040db(arg_8h_02);\n        fcn.004054c5(arg_8h_02);\n        if (arg_ch != 0) {\n            arg_10h = arg_8h_01;\n            arg_ch_00 = fcn.0040549a(arg_8h_01);\n            fcn.0040115e(in_ECX, arg_ch_00, arg_10h);\n        }\n        arg_8h_00 = &var_2h;\n        fcn.004040db(arg_8h_00);\n        fcn.004048a2(arg_8h_00, arg_8h_01);\n    }\n    in_ECX[5] = 0xf;\n    fcn.00404739(arg_ch);\n    return;\n}\n",
        "token_count": 341
    },
    "00404146": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404146(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00406db4(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 66
    },
    "0040416a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040416a(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(in_ECX + 0x38) == 0) {\n        var_4h = arg_8h | 4;\n    }\n    else {\n        var_4h = arg_8h;\n    }\n    fcn.00401f9d(var_4h, arg_ch);\n    return;\n}\n",
        "token_count": 119
    },
    "004041a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041a0(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00402179();\n    *(in_ECX + 0x38) = arg_8h;\n    *(in_ECX + 0x3c) = 0;\n    uVar1 = fcn.0040497f(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        fcn.00402d43(4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.004059a3(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0040433c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040433c(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 31
    },
    "00404439": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404439(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 30
    },
    "00404465": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t * __cdecl fcn.00404465(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        *in_ECX = 0x4243bc;\n        in_ECX[4] = 0x424404;\n        fcn.004041fb(0);\n    }\n    fcn.004048ee(arg_8h, 0, 0);\n    fcn.00404a03(0, 0, 0);\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -0x20;\n    return in_ECX;\n}\n",
        "token_count": 223
    },
    "004046b5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004046b5(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x10) < arg_8h) {\n        fcn.0040485c();\n    }\n    if (arg_ch < *(in_ECX + 0x10) - arg_8h) {\n        if (arg_ch != 0) {\n            iVar1 = fcn.00404119();\n            arg_8h_00 = *(in_ECX + 0x10) - arg_ch;\n            fcn.0040118b(iVar1 + arg_8h, iVar1 + arg_8h + arg_ch, arg_8h_00 - arg_8h);\n            fcn.00404739(arg_8h_00);\n        }\n    }\n    else {\n        fcn.00404739(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 252
    },
    "0040476b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040476b(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404c4d();\n    if (uVar1 < arg_8h) {\n        fcn.00404847();\n    }\n    if (*(in_ECX + 0x14) < arg_8h) {\n        arg_ch = fcn.00404c89(arg_8h, *(in_ECX + 0x10));\n    }\n    else {\n        arg_ch = arg_ch & 0xff;\n        if ((arg_ch == 0) || (0xf < arg_8h)) {\n            if (arg_8h == 0) {\n                arg_ch = fcn.00404739(0);\n            }\n        }\n        else {\n            if (arg_8h < *(in_ECX + 0x10)) {\n                var_8h = arg_8h;\n            }\n            else {\n                var_8h = *(in_ECX + 0x10);\n            }\n            arg_ch = fcn.00403ff8(1, var_8h);\n        }\n    }\n    var_ch = arg_8h != 0;\n    return arg_ch & 0xffffff00 | var_ch;\n}\n",
        "token_count": 320
    },
    "004048ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t * __cdecl fcn.004048ee(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        *in_ECX = 0x4243dc;\n        fcn.004041fb(0);\n    }\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -0x18;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    fcn.004041a0(arg_8h, arg_ch);\n    return in_ECX;\n}\n",
        "token_count": 220
    },
    "004049b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004049b7(code **param_1)\n\n{\n    int32_t iVar1;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    iVar1 = fcn.00407251(4);\n    if (iVar1 == 0) {\n        var_ch = NULL;\n    }\n    else {\n        var_ch = fcn.0040159f();\n    }\n    param_1[0xd] = var_ch;\n    fcn.00404e51();\n    return param_1;\n}\n",
        "token_count": 147
    },
    "00404a03": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404a03(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_ECX;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        *in_ECX = 0x4243b4;\n        fcn.004041fb();\n    }\n    *(in_ECX + *(*in_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(in_ECX + *(*in_ECX + 4) + -4) = *(*in_ECX + 4) + -8;\n    if (arg_ch != '\\0') {\n        if (in_ECX == NULL) {\n            var_ch = 0;\n        }\n        else {\n            var_ch = in_ECX + *(*in_ECX + 4);\n        }\n        fcn.004059a3(var_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 234
    },
    "00404b04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b04(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x38) = 0;\n    *(in_ECX + 0x3c) = arg_10h;\n    if ((arg_ch != 0) && ((*(in_ECX + 0x3c) & 6) != 6)) {\n        arg_8h_00 = fcn.004040ac(arg_ch);\n        fcn.0040115e(arg_8h_00, arg_8h, arg_ch);\n        *(in_ECX + 0x38) = arg_8h_00 + arg_ch;\n        if ((*(in_ECX + 0x3c) & 4) == 0) {\n            fcn.004042b4(arg_8h_00, arg_8h_00, arg_8h_00 + arg_ch);\n        }\n        if ((*(in_ECX + 0x3c) & 2) == 0) {\n            var_ch = arg_8h_00;\n            if ((*(in_ECX + 0x3c) & 0x18) != 0) {\n                var_ch = arg_8h_00 + arg_ch;\n            }\n            fcn.004043cc(arg_8h_00, var_ch, arg_8h_00 + arg_ch);\n            iVar1 = fcn.0040422d();\n            if (iVar1 == 0) {\n                fcn.004042b4(arg_8h_00, 0, arg_8h_00);\n            }\n        }\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | 1;\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "00404c89": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404c89(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uchar *arg_8h_00;\n    int32_t arg_10h;\n    uint *arg_8h_01;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uchar *var_11h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41b270;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    *0x10 = &stack0xffffffd0;\n    var_1ch = var_8h | 0xf;\n    uVar1 = fcn.00404c4d();\n    if (uVar1 < var_1ch) {\n        var_1ch = var_8h;\n    }\n    else if (var_1ch / 3 < *(param_1 + 0x14) >> 1) {\n        iVar2 = fcn.00404c4d();\n        uVar1 = iVar2 - (*(param_1 + 0x14) >> 1);\n        if (*(param_1 + 0x14) < uVar1 || *(param_1 + 0x14) == uVar1) {\n            var_1ch = (*(param_1 + 0x14) >> 1) + *(param_1 + 0x14);\n        }\n        else {\n            var_1ch = fcn.00404c4d();\n        }\n    }\n    var_4h = 0;\n    iVar2 = var_1ch + 1;\n    arg_8h_01 = &var_11h;\n    fcn.004040db(arg_8h_01);\n    arg_8h = fcn.00404f80(arg_8h_01);\n    var_4h = 0xffffffff;\n    if (var_ch != 0) {\n        arg_10h = var_ch;\n        arg_ch = fcn.00404119(var_ch, arg_8h_01, iVar2);\n        fcn.0040115e(arg_8h, arg_ch, arg_10h);\n    }\n    fcn.00403ff8(1, 0);\n    arg_8h_00 = var_13h;\n    iVar2 = param_1;\n    fcn.004040db(arg_8h_00);\n    fcn.004054a4(arg_8h_00, iVar2);\n    *(param_1 + 0x14) = var_1ch;\n    fcn.00404739(var_ch);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 697
    },
    "0040511e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040511e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    fcn.00405c13(0);\n    var_4h = *0x429320;\n    var_10h = fcn.004014a5();\n    var_8h = fcn.00401632(var_10h);\n    if (var_8h == NULL) {\n        if (var_4h == NULL) {\n            iVar1 = fcn.004017a3(&var_4h, arg_8h);\n            if (iVar1 == -1) {\n                fcn.0040661f(\"bad cast\");\n                fcn.00407432(&var_24h, 0x425640);\n            }\n            else {\n                var_8h = var_4h;\n                *0x429320 = var_4h;\n                var_ch = var_4h;\n                (**(*var_4h + 4))();\n                fcn.004057a1(var_ch);\n            }\n        }\n        else {\n            var_8h = var_4h;\n        }\n    }\n    var_18h = var_8h;\n    fcn.00405c6e();\n    return var_18h;\n}\n",
        "token_count": 338
    },
    "004051d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Removing unreachable block (ram,0x00405229)\n\nuint fcn.004051d4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint arg_10h;\n    uint var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uchar *puStack20;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41b284;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    puStack20 = &stack0xffffff90;\n    var_14h = 0;\n    uVar2 = fcn.00401137(var_ch);\n    iVar5 = fcn.004020e0();\n    if (0 < iVar5) {\n        iVar5 = fcn.004020e0();\n        if ((-1 < iVar5) && ((0xffffffff < iVar5 || (uVar2 < iVar5)))) {\n            uVar6 = fcn.004020e0();\n            var_40h = uVar6 - uVar2;\n            var_3ch = (uVar6 >> 0x20) - (uVar6 < uVar2);\n            goto code_r0x0040527e;\n        }\n    }\n    var_40h = 0;\n    var_3ch = 0;\ncode_r0x0040527e:\n    var_30h = var_40h;\n    var_2ch = var_3ch;\n    fcn.00404ebe(var_8h);\n    cVar1 = fcn.00404f6f();\n    if (cVar1 == '\\0') {\n        var_14h = var_14h | 4;\n    }\n    else {\n        var_4h = 0;\n        uVar3 = fcn.004020cf();\n        if ((uVar3 & 0x1c0) != 0x40) {\n            while( true ) {\n                if ((var_2ch < 0) || ((var_2ch < 1 && (var_30h == 0)))) goto code_r0x00405355;\n                uVar3 = fcn.00405513();\n                uVar3 = uVar3 & 0xff;\n                fcn.00402d6d();\n                var_18h = fcn.00405524(uVar3);\n                var_1ch = fcn.00401266();\n                cVar1 = fcn.00401204(&var_1ch, &var_18h);\n                if (cVar1 != '\\0') break;\n                bVar4 = var_30h == 0;\n                var_30h = var_30h + -1;\n                var_2ch = var_2ch - bVar4;\n            }\n            var_14h = var_14h | 4;\n        }\ncode_r0x00405355:\n        if (var_14h == 0) {\n            arg_10h = 0;\n            uVar3 = uVar2;\n            fcn.00402d6d();\n            uVar6 = fcn.0040558c(var_ch, uVar3, arg_10h);\n            if ((uVar6 != uVar2) || (uVar6 >> 0x20 != 0)) {\n                var_14h = var_14h | 4;\n            }\n        }\n        if (var_14h == 0) {\n            while( true ) {\n                if ((var_2ch < 0) || ((var_2ch < 1 && (var_30h == 0)))) goto code_r0x00405426;\n                uVar2 = fcn.00405513();\n                uVar2 = uVar2 & 0xff;\n                fcn.00402d6d();\n                var_20h = fcn.00405524(uVar2);\n                var_24h = fcn.00401266();\n                cVar1 = fcn.00401204(&var_24h, &var_20h);\n                if (cVar1 != '\\0') break;\n                bVar4 = var_30h == 0;\n                var_30h = var_30h + -1;\n                var_2ch = var_2ch - bVar4;\n            }\n            var_14h = var_14h | 4;\n        }\ncode_r0x00405426:\n        fcn.004020f4(0, 0);\n        var_4h = 0xffffffff;\n    }\n    fcn.00402d43(var_14h, 0);\n    fcn.00404f46();\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1264
    },
    "004054dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004054dd(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h != 0) && (var_4h = fcn.00407251(arg_8h),  var_4h == 0)) {\n        fcn.00405b58();\n    }\n    return var_4h;\n}\n",
        "token_count": 98
    },
    "00405524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405543)\n\nuint __cdecl fcn.00405524(uint arg_8h)\n\n{\n    uchar *arg_8h_00;\n    uint uVar1;\n    int32_t *in_ECX;\n    int64_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00404439();\n    if (iVar2 < 1) {\n        uVar1 = fcn.004011f9(&arg_8h);\n        var_ch = (**(*in_ECX + 0xc))(uVar1);\n    }\n    else {\n        arg_8h_00 = fcn.004043fd();\n        *arg_8h_00 = arg_8h;\n        var_ch = fcn.004011f9(arg_8h_00);\n    }\n    return var_ch;\n}\n",
        "token_count": 215
    },
    "004055da": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055da(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.0040112f(4, arg_8h);\n    if (puVar1 != NULL) {\n        puVar2 = fcn.0040549a(arg_ch);\n        *puVar1 = *puVar2;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00405639": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405639(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x41c468;\n    if (*0x41c46c != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00405663": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405663(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x41c210;\n    if (*0x41c214 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "0040673f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040673f(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00406db4(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "00406db4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406db4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4281e4, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00409acb();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00409ade(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00407649": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00407649(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x4076f2;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.00407543;\n        uStack52 = *0x42635c ^ &fcn.00407649::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00407649::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.0040e25b();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.00407649::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 694
    },
    "00407f87": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f87(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.0040784f(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.0040e25b();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.0040e25b();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.0040789f(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.00407d6a(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00408923": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408923(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c2a0(0x425190, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.0040e25b();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.0040f07c();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.0040f030(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004089e2();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.0040f07c();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.0040c2e5();\n    return;\n}\n",
        "token_count": 618
    },
    "004089e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004089e2(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040e25b();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040e25b();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040bc0e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bc0e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.0040d3f0();\n    fcn.0040bc93(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 92
    },
    "0040c123": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040c218: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040c21d)\n// WARNING: Removing unreachable block (ram,0x0040c24c)\n// WARNING: Removing unreachable block (ram,0x0040c223)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c123(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c2a0(0x4252d0, 0x1c);\n    fcn.00407beb(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x4281e8 != 1) {\n        *0x428210 = 1;\n        *0x42820c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x42a370);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x42a36c);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x0040c1ef;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x0040c1ef;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x42a370);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x42a36c);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x0040c1ef:\n            fcn.0040c0b9(0x41c1e8, 0x41c1f8);\n        }\n        fcn.0040c0b9(0x41c1fc, 0x41c200);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407d55(8);\n    }\n    return;\n}\n",
        "token_count": 948
    },
    "0040ceae": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0040ceae(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0x4216c8 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0x420e00);\n        dVar10 = SQRT(*0x4216d0 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0x421678 * dVar7 + *0x421670) * dVar6 * dVar7 * dVar7 +\n                (str.UUUUUU333333._0_8_ * dVar6 * dVar7 - ((*(iVar3 + 0x41ff00) ^ uVar9 << 0x20) - *0x421600))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0x41ff08) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0x421608 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0x4216d0 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0x4216c8 & dVar10 | SUB168(auVar12, 0) | ~*0x4216c0 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0x420e00);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0x421618) +\n                *(iVar3 + 0x41ff08);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0x421678 * dVar11 + *0x421670) * dVar13 * dVar11 * dVar11 +\n               str.UUUUUU333333._0_8_ * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0x421610) + *(iVar3 + 0x41ff00) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0x421608 - dVar8) +\n               (((*0x421600 - dVar11 * dVar11 * dVar11 * (*0x421680 * dVar6 + *0x421690 + *0x4216a0 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0x421688 * dVar7 + *0x421698 + *0x4216a8 * dVar7 * dVar7))\n               - (dVar8 - (*0x421608 - (*0x421608 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0x4216d8 - (dVar8 & *0x4216c0) * *0x4216d8;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0x421640 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0x421618) +\n               (*0x421690 + *0x421680 * dVar14 + *0x4216a0 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0x421610) +\n               (*0x421698 + *0x421688 * dVar17 + *0x4216a8 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0x421608 + *0x421600;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.00412f19(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0x421628 & uVar15) + (*0x421620 & uVar15);\n}\n",
        "token_count": 2528
    },
    "00412877": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412877(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if (*(unaff_EBP + -0x20) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x428238) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.004177f9(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00418498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004187a2)\n// WARNING: Removing unreachable block (ram,0x004187ab)\n// WARNING: Removing unreachable block (ram,0x00418bdf)\n// WARNING: Removing unreachable block (ram,0x00418808)\n// WARNING: Removing unreachable block (ram,0x00418826)\n// WARNING: Removing unreachable block (ram,0x0041880d)\n// WARNING: Removing unreachable block (ram,0x00418814)\n// WARNING: Removing unreachable block (ram,0x00418819)\n// WARNING: Removing unreachable block (ram,0x00418829)\n// WARNING: Removing unreachable block (ram,0x00418bd5)\n// WARNING: Removing unreachable block (ram,0x00418831)\n// WARNING: Removing unreachable block (ram,0x00418836)\n// WARNING: Removing unreachable block (ram,0x0041883d)\n// WARNING: Removing unreachable block (ram,0x00418840)\n// WARNING: Removing unreachable block (ram,0x00418858)\n// WARNING: Removing unreachable block (ram,0x0041885a)\n// WARNING: Removing unreachable block (ram,0x00418864)\n// WARNING: Removing unreachable block (ram,0x00418867)\n// WARNING: Removing unreachable block (ram,0x0041886e)\n// WARNING: Removing unreachable block (ram,0x00418871)\n// WARNING: Removing unreachable block (ram,0x00418bc7)\n// WARNING: Removing unreachable block (ram,0x00418be5)\n// WARNING: Removing unreachable block (ram,0x0041887d)\n// WARNING: Removing unreachable block (ram,0x00418bb8)\n// WARNING: Removing unreachable block (ram,0x00418889)\n// WARNING: Removing unreachable block (ram,0x00418899)\n// WARNING: Removing unreachable block (ram,0x0041889b)\n// WARNING: Removing unreachable block (ram,0x004188a5)\n// WARNING: Removing unreachable block (ram,0x004188ae)\n// WARNING: Removing unreachable block (ram,0x00418b9e)\n// WARNING: Removing unreachable block (ram,0x004188b9)\n// WARNING: Removing unreachable block (ram,0x004188d0)\n// WARNING: Removing unreachable block (ram,0x004188e2)\n// WARNING: Removing unreachable block (ram,0x004188f3)\n// WARNING: Removing unreachable block (ram,0x00418932)\n// WARNING: Removing unreachable block (ram,0x0041893b)\n// WARNING: Removing unreachable block (ram,0x00418b7b)\n// WARNING: Removing unreachable block (ram,0x00418949)\n// WARNING: Removing unreachable block (ram,0x0041895b)\n// WARNING: Removing unreachable block (ram,0x00418960)\n// WARNING: Removing unreachable block (ram,0x0041896d)\n// WARNING: Removing unreachable block (ram,0x00418973)\n// WARNING: Removing unreachable block (ram,0x00418979)\n// WARNING: Removing unreachable block (ram,0x00418984)\n// WARNING: Removing unreachable block (ram,0x00418989)\n// WARNING: Removing unreachable block (ram,0x00418996)\n// WARNING: Removing unreachable block (ram,0x0041899b)\n// WARNING: Removing unreachable block (ram,0x00418953)\n// WARNING: Removing unreachable block (ram,0x00418b92)\n// WARNING: Removing unreachable block (ram,0x00418b98)\n// WARNING: Removing unreachable block (ram,0x0041899f)\n// WARNING: Removing unreachable block (ram,0x004189ad)\n// WARNING: Removing unreachable block (ram,0x004189b4)\n// WARNING: Removing unreachable block (ram,0x004189c0)\n// WARNING: Removing unreachable block (ram,0x004189e0)\n// WARNING: Removing unreachable block (ram,0x004189e5)\n// WARNING: Removing unreachable block (ram,0x004189ea)\n// WARNING: Removing unreachable block (ram,0x004189ed)\n// WARNING: Removing unreachable block (ram,0x004189f4)\n// WARNING: Removing unreachable block (ram,0x004189f7)\n// WARNING: Removing unreachable block (ram,0x00418a03)\n// WARNING: Removing unreachable block (ram,0x00418a0c)\n// WARNING: Removing unreachable block (ram,0x00418a1b)\n// WARNING: Removing unreachable block (ram,0x00418a32)\n// WARNING: Removing unreachable block (ram,0x00418a36)\n// WARNING: Removing unreachable block (ram,0x00418a68)\n// WARNING: Removing unreachable block (ram,0x00418a6d)\n// WARNING: Removing unreachable block (ram,0x00418a79)\n// WARNING: Removing unreachable block (ram,0x00418a88)\n// WARNING: Removing unreachable block (ram,0x00418a8e)\n// WARNING: Removing unreachable block (ram,0x00418a8f)\n// WARNING: Removing unreachable block (ram,0x00418aba)\n// WARNING: Removing unreachable block (ram,0x00418ac4)\n// WARNING: Removing unreachable block (ram,0x00418ad6)\n// WARNING: Removing unreachable block (ram,0x00418ada)\n// WARNING: Removing unreachable block (ram,0x00418ae4)\n// WARNING: Removing unreachable block (ram,0x00418af2)\n// WARNING: Removing unreachable block (ram,0x00418b2e)\n// WARNING: Removing unreachable block (ram,0x00418afa)\n// WARNING: Removing unreachable block (ram,0x00418b25)\n// WARNING: Removing unreachable block (ram,0x00418b05)\n// WARNING: Removing unreachable block (ram,0x00418b1d)\n// WARNING: Removing unreachable block (ram,0x00418b16)\n// WARNING: Removing unreachable block (ram,0x00418b29)\n// WARNING: Removing unreachable block (ram,0x00418b32)\n// WARNING: Removing unreachable block (ram,0x00418b35)\n// WARNING: Removing unreachable block (ram,0x00418b61)\n// WARNING: Removing unreachable block (ram,0x00418b42)\n// WARNING: Removing unreachable block (ram,0x00418b9b)\n// WARNING: Removing unreachable block (ram,0x00418ba6)\n// WARNING: Removing unreachable block (ram,0x00418bea)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.00418498(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00409acb();\n        *puVar2 = 0x16;\n        fcn.0040c5f1();\n        fcn.00407423(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00418527. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x418c10\n    (**0x418c10)();\n    return;\n}\n",
        "token_count": 1870
    },
    "00404c4d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00404c4d(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h = &var_1h;\n    fcn.004040db(arg_8h);\n    uVar1 = fcn.00404f98(arg_8h, param_1);\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 184
    },
    "004179b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.004179b4(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42635c ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x00417a29;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x00417b29;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x00417b29:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x4271b4 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4271b4 < iVar15) {\n                if (iVar15 < *0x4271b0) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x4271b0;\n                }\n                goto code_r0x00417eda;\n            }\n            iVar11 = *0x4271b4 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00417ce4;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00417ce4:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x00417a29:\n        iVar15 = 0;\n    }\ncode_r0x00417eda:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.00407423(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3227
    },
    "00417f26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00417f26(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42635c ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x4271d4;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x00417f9b;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x4271d0 + -1;\n        bVar5 = false;\n        iVar15 = (*0x4271d0 >> 0x1f & 0x1fU) + *0x4271d0 >> 5;\n        uVar8 = 0x1f - (*0x4271d0 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0041809b;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0041809b:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x4271cc - *0x4271d0) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4271cc < iVar15) {\n                if (iVar15 < *0x4271c8) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x4271dc + iVar15;\n                    iVar11 = *0x4271d4 + (*0x4271d4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x4271d4 + (*0x4271d4 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x4271dc + *0x4271c8;\n                }\n                goto code_r0x0041844c;\n            }\n            iVar11 = *0x4271cc - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x4271d0 >> 0x1f & 0x1fU) + *0x4271d0 >> 5;\n            uVar8 = 0x1f - (*0x4271d0 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00418256;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00418256:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x4271d4 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x00417f9b:\n        iVar15 = 0;\n    }\ncode_r0x0041844c:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4271d8 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4271d8 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.00407423(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3218
    },
    "0040df7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040df7c(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0040f0b4();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "00403c25": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c25(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004015ba();\n    if ((arg_8h & 1) != 0) {\n        fcn.004070bb(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "00404532": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00404532(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x3c) & 1) != 0) {\n        iVar1 = fcn.00404253(param_1);\n        if (iVar1 == 0) {\n            var_8h = fcn.00404266();\n        }\n        else {\n            var_8h = fcn.004042e5();\n        }\n        iVar1 = fcn.0040421a(var_8h);\n        arg_8h = fcn.0040421a(var_8h - iVar1);\n        fcn.00404096(arg_8h);\n    }\n    fcn.004042b4(0, 0, 0);\n    fcn.0040439b(0, 0);\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 277
    },
    "00404bf4": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404bf4(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if ((arg_8h & 1) == 0) {\n        var_4h = 4;\n    }\n    if ((arg_8h & 2) == 0) {\n        var_4h = var_4h | 2;\n    }\n    if ((arg_8h & 8) != 0) {\n        var_4h = var_4h | 8;\n    }\n    if ((arg_8h & 4) != 0) {\n        var_4h = var_4h | 0x10;\n    }\n    return var_4h;\n}\n",
        "token_count": 181
    },
    "00403c81": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403c81(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00402af9();\n    if ((arg_8h & 1) != 0) {\n        fcn.004070bb(in_ECX + -0x68);\n    }\n    return in_ECX + -0x68;\n}\n",
        "token_count": 93
    },
    "00403cb4": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403cb4(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00403d31();\n    if ((arg_8h & 1) != 0) {\n        fcn.004070bb(in_ECX + -0x20);\n    }\n    return in_ECX + -0x20;\n}\n",
        "token_count": 93
    },
    "00403c4e": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403c4e(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.004022e4();\n    if ((arg_8h & 1) != 0) {\n        fcn.004070bb(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 90
    },
    "00403ba0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403ba0(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00403d10();\n    if ((arg_8h & 1) != 0) {\n        fcn.004070bb(in_ECX + -0x18);\n    }\n    return in_ECX + -0x18;\n}\n",
        "token_count": 93
    },
    "00415f43": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415f43(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c2a0(0x425560, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00409a97();\n        *puVar1 = 0;\n        puVar1 = fcn.00409acb();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x42934c <= arg_8h_00)) {\n            puVar1 = fcn.00409a97();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x428238) + 4 + iVar3) & 1) != 0) {\n                fcn.00417453(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x428238) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00409acb();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00409a97();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00416032(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041600a();\n                goto code_r0x0041602c;\n            }\n            puVar1 = fcn.00409a97();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00409acb();\n        *puVar1 = 9;\n        fcn.0040c5f1();\n    }\ncode_r0x0041602c:\n    fcn.0040c2e5();\n    return;\n}\n",
        "token_count": 644
    },
    "0041332b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041332b(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x42635c ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.00409785();\n    if (*0x428ee4 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x00413500;\n        *0x428ee4 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x428ee8 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x428eec = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x428ef4 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x428ef4 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x428ef0 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x428ee4);\n            goto code_r0x00413500;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x00413500;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x428ef0 == pcVar1) || (*0x428ef4 == pcVar1)) {\ncode_r0x004134b6:\n        if ((((*0x428ee8 != pcVar1) && (pcVar5 = (*pcVar6)(*0x428ee8),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x428eec != pcVar1 && (pcVar1 = (*pcVar6)(*0x428eec),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x428ef0);\n        var_18h = (*pcVar6)(*0x428ef4);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x004134b6;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x428ee4);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x00413500:\n    fcn.00407423(arg_8h_00);\n    return;\n}\n",
        "token_count": 1183
    },
    "00401f9d": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f9d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_58h;\n    uint var_44h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    *(in_ECX + 0xc) = arg_8h & 0x17;\n    if ((*(in_ECX + 0xc) & *(in_ECX + 0x10)) != 0) {\n        if (arg_ch == '\\0') {\n            if ((*(in_ECX + 0xc) & *(in_ECX + 0x10) & 4) == 0) {\n                if ((*(in_ECX + 0xc) & *(in_ECX + 0x10) & 2) == 0) {\n                    uVar1 = fcn.00401bce(&var_1ch, 1);\n                    fcn.00401f71(\"ios_base::eofbit set\", uVar1);\n                    fcn.00407432(&var_58h, 0x425698);\n                }\n                else {\n                    uVar1 = fcn.00401bce(&var_14h, 1);\n                    fcn.00401f71(\"ios_base::failbit set\", uVar1);\n                    fcn.00407432(&var_44h, 0x425698);\n                }\n            }\n            else {\n                uVar1 = fcn.00401bce(&var_ch, 1);\n                fcn.00401f71(\"ios_base::badbit set\", uVar1);\n                fcn.00407432(&var_30h, 0x425698);\n            }\n        }\n        else {\n            fcn.00407432(0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "00404fab": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid fcn.00404fab(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x41b27a;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 0;\n    cVar1 = fcn.004020a7();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.004020cf();\n        if ((uVar2 & 2) != 0) {\n            fcn.00402d6d();\n            iVar3 = fcn.00404e3b();\n            if (iVar3 == -1) {\n                fcn.00402d43(4, 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 230
    },
    "0040234a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0040234a(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *0x428f08 * 0x343fd;\n    iVar1 = fcn.00402336();\n    *0x428f08 = iVar3 + 1 + iVar1;\n    (*_sym.imp.USER32.dll_GetWindow)(0, 0);\n    (*_sym.imp.USER32.dll_UpdateWindow)(0);\n    (*_sym.imp.USER32.dll_SetWindowsHookW)(0, 0);\n    uVar4 = *0x428f08 >> 0x10;\n    uVar2 = fcn.00402340();\n    return uVar2 & uVar4;\n}\n",
        "token_count": 177
    },
    "00402395": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402395(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < arg_ch + 5; var_4h = var_4h + 1) {\n        uVar1 = *(arg_8h + var_4h);\n        uVar2 = fcn.0040234a();\n        *(arg_8h + var_4h) = uVar1 ^ uVar2;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00404a8e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404a8e(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = fcn.00402d6d();\n    if (iVar2 != 0) {\n        fcn.00404ebe(param_1);\n        cVar1 = fcn.00404f6f();\n        if (cVar1 != '\\0') {\n            fcn.00402d6d();\n            iVar2 = fcn.00404e3b();\n            if (iVar2 == -1) {\n                fcn.00402d43(4, 0);\n            }\n        }\n        fcn.00404f46();\n    }\n    return param_1;\n}\n",
        "token_count": 173
    },
    "0040d665": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040d665(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00401100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00401100(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    float10 fVar1;\n    uint in_stack_00000010;\n    \n    fVar1 = fcn.004065f0(arg_8h, noname_1, arg_10h, in_stack_00000010);\n    return fVar1;\n}\n",
        "token_count": 88
    },
    "0040139b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040139b(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.004058ef(param_1);\n    fcn.00402c92();\n    fcn.00402c92();\n    fcn.00402c92();\n    fcn.00402c92();\n    fcn.00402c92();\n    fcn.00402c92();\n    fcn.00405c6e();\n    return;\n}\n",
        "token_count": 104
    },
    "0040152a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.0040152a(uint arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.004016d9();\n    *in_ECX = vtable.std::locale::facet.0;\n    fcn.0040126e(in_ECX + 1, arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 86
    },
    "0040183c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040183c(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint var_14h;\n    int32_t var_4h;\n    \n    puVar1 = fcn.004013f9(&var_14h);\n    *(var_4h + 8) = *puVar1;\n    *(var_4h + 0xc) = puVar1[1];\n    *(var_4h + 0x10) = puVar1[2];\n    *(var_4h + 0x14) = puVar1[3];\n    return;\n}\n",
        "token_count": 136
    },
    "004022e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004022e4(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00403119(param_1);\n    fcn.00402d27();\n    return;\n}\n",
        "token_count": 65
    },
    "00403d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00403d10(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402cec(param_1);\n    fcn.00402d27();\n    return;\n}\n",
        "token_count": 65
    },
    "00403d52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00403d52(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    int32_t arg_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h[5] < 0x10) {\n        fcn.0040118b(in_ECX, arg_8h, arg_8h[4] + 1);\n    }\n    else {\n        arg_8h_00 = &var_1h;\n        arg_ch = in_ECX;\n        fcn.004040db(arg_8h_00);\n        fcn.004054a4(arg_8h_00, arg_ch);\n        *arg_8h = 0;\n    }\n    *(in_ECX + 0x10) = arg_8h[4];\n    *(in_ECX + 0x14) = arg_8h[5];\n    fcn.00403ff8(0, 0);\n    return;\n}\n",
        "token_count": 247
    },
    "00403f1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f1e(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00403fe7();\n    if (uVar2 < arg_ch) {\n        fcn.0040485c();\n    }\n    iVar3 = fcn.00403fe7();\n    var_8h = iVar3 - arg_ch;\n    if (arg_10h < var_8h) {\n        var_8h = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00404687(arg_ch + var_8h);\n        fcn.004046b5(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.0040476b(var_8h, 0);\n        if (cVar1 != '\\0') {\n            uVar2 = var_8h;\n            iVar3 = fcn.00404119();\n            iVar3 = iVar3 + arg_ch;\n            arg_8h_00 = fcn.00404119();\n            fcn.0040115e(arg_8h_00, iVar3, uVar2);\n            fcn.00404739(var_8h);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 347
    },
    "00404266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404266(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return **(param_1 + 0x1c) + **(param_1 + 0x2c);\n}\n",
        "token_count": 56
    },
    "00404281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404281(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    **(in_ECX + 0x2c) = **(in_ECX + 0x2c) - arg_8h;\n    **(in_ECX + 0x1c) = **(in_ECX + 0x1c) + arg_8h;\n    return;\n}\n",
        "token_count": 103
    },
    "004042e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004042e5(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    return **(param_1 + 0x20) + **(param_1 + 0x30);\n}\n",
        "token_count": 55
    },
    "00404368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404368(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    **(in_ECX + 0x30) = **(in_ECX + 0x30) - arg_8h;\n    **(in_ECX + 0x20) = **(in_ECX + 0x20) + arg_8h;\n    return;\n}\n",
        "token_count": 99
    },
    "004044ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.004044ee(uint arg_8h)\n\n{\n    uint arg_10h;\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.004049b7();\n    *in_ECX = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00404088();\n    arg_10h = fcn.00404bf4(arg_8h);\n    fcn.00404b04(0, 0, arg_10h);\n    return in_ECX;\n}\n",
        "token_count": 131
    },
    "00404611": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404611(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint in_ECX;\n    uint arg_10h;\n    uint var_4h;\n    \n    cVar1 = fcn.0040480c(arg_8h);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0040476b(arg_ch, 0);\n        if (cVar1 != '\\0') {\n            arg_10h = arg_ch;\n            arg_8h_00 = fcn.00404119();\n            fcn.0040115e(arg_8h_00, arg_8h, arg_10h);\n            fcn.00404739(arg_ch);\n        }\n    }\n    else {\n        iVar2 = fcn.00404119();\n        in_ECX = fcn.00403f1e(in_ECX, arg_8h - iVar2, arg_ch);\n    }\n    return in_ECX;\n}\n",
        "token_count": 237
    },
    "00404739": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00404739(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *arg_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *(in_ECX + 0x10) = arg_8h;\n    arg_ch = &var_1h;\n    iVar1 = fcn.00404119();\n    fcn.004011b8(iVar1 + arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 133
    },
    "00404e51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e51(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    *(param_1 + 0xc) = param_1 + 4;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x1c) = param_1 + 0x14;\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x2c) = param_1 + 0x24;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    fcn.0040439b(0, 0);\n    fcn.004042b4(0, 0, 0);\n    return;\n}\n",
        "token_count": 185
    },
    "00404ebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404ebe(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00405056(arg_8h);\n    cVar1 = fcn.004020a7();\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.0040496e();\n        if (iVar3 != 0) {\n            iVar3 = fcn.0040496e();\n            if (iVar3 != arg_8h) {\n                fcn.0040496e();\n                fcn.00404a8e();\n            }\n        }\n    }\n    uVar2 = fcn.004020a7();\n    *(in_ECX + 4) = uVar2;\n    return in_ECX;\n}\n",
        "token_count": 198
    },
    "00405056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint * __cdecl fcn.00405056(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    uVar1 = *in_ECX;\n    iVar3 = fcn.00402d6d();\n    if (iVar3 != 0) {\n        uVar2 = *in_ECX;\n        piVar4 = fcn.00402d6d();\n        (**(*piVar4 + 4))(piVar4, uVar2, uVar1);\n    }\n    return in_ECX;\n}\n",
        "token_count": 225
    },
    "004050b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004050b2(uint *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    iVar3 = fcn.00402d6d();\n    if (iVar3 != 0) {\n        uVar2 = *param_1;\n        piVar4 = fcn.00402d6d();\n        (**(*piVar4 + 8))(piVar4, uVar2, param_1, uVar1);\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "004065f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    \n    fcn.0040be0d(arg_8h, arg_ch);\n    fcn.0040be0d(arg_10h, arg_14h);\n    fcn.0040d457();\n    fcn.0040bc8c();\n    return;\n}\n",
        "token_count": 103
    },
    "0040bdda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bdda(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.0040be0d(arg_8h, arg_ch);\n    fcn.0040d3f0();\n    fcn.0040bc8c();\n    return;\n}\n",
        "token_count": 74
    },
    "0040ecef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ecef(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x424eac; ppcVar1 < 0x424eac; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004127da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004127da(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c2a0(0x425540, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00409acb();\n        *puVar1 = 0x16;\n        fcn.0040c5f1();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.004128a3(unaff_EBP + -0x20, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c));\n        *(unaff_EBP + -0x1c) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00412877();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0040c2e5();\n    return;\n}\n",
        "token_count": 498
    },
    "004128f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004128f1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004127da(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "00419b72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419b72(uint arg_8h)\n\n{\n    fcn.0041af42(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "004078c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004078c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004089fc(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00405c6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c6e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        fcn.00407d55(0xc);\n        return;\n    }\n    if (iVar1 < 4) {\n        fcn.00405f8b(iVar1 * 0x18 + 0x427f18);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0041af71": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041af71(void)\n\n{\n    *0x42759c = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00409a5e": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a5e(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 36
    },
    "0040ded8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ded8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c2a0(0x425330, 0xc);\n    fcn.00407beb(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x42822c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x428228;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040df1d;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00406db4(arg_8h_00);\ncode_r0x0040df1d:\n        fcn.00406db4(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040df40();\n    fcn.0040c2e5();\n    return;\n}\n",
        "token_count": 400
    },
    "004023f5": {
        "rules": [
            "get OS version"
        ],
        "decompiled_code": "\nvoid fcn.004023f5(void)\n\n{\n    uint lpVersionInformation;\n    \n    (*_sym.imp.USER32.dll_LoadMenuW)\n              (0, L\"mocugo rozotahujamijurukukiyipu cajetutoloru bewomapeboka zumigesakukixoyefepuwahujecuge\");\n    (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    (*_sym.imp.KERNEL32.dll_ResetEvent)(0);\n    (**0x428f0c)();\n    return;\n}\n",
        "token_count": 136
    },
    "004096f3": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004096f3(uint arg_8h)\n\n{\n    if ((*0x42a388 ^ *0x42635c) != NULL) {\n        (*(*0x42a388 ^ *0x42635c))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 82
    }
}