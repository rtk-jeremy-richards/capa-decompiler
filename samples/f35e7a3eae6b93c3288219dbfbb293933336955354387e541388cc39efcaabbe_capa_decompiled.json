{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *arg1;\n    int32_t *arg2;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int32_t *piVar12;\n    uint64_t uVar13;\n    int32_t *piVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            piVar6 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = piVar6;\n                piVar14 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x544398 < 1) {\n                        return;\n                    }\n                    *(*0x20 + -0x58) = *0x544398;\n                    iVar7 = 0;\n                    piVar6 = *0x544398;\n                    piVar14 = *0x544390;\n                    goto code_r0x0040136e;\n                }\n                for (piVar9 = NULL; piVar9 < unaff_RBX; piVar9 = piVar9 + 1) {\n                    if (*(piVar14 + piVar9) == ',') goto code_r0x0040112d;\n                }\n                piVar9 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (piVar9 < 0) {\n                    piVar6 = NULL;\n                    in_RAX = NULL;\n                    piVar9 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < piVar9) goto code_r0x004016de;\n                    if (unaff_RBX < piVar9 + 1U) goto code_r0x004016d3;\n                    unaff_RBX = unaff_RBX - piVar9;\n                    piVar6 = unaff_RBX + -1;\n                    in_RAX = (piVar9 + 1U & -piVar6 >> 0x3f) + piVar14;\n                }\n            } while ((piVar9 < 4) || (*piVar14 != 0x2e757063));\n            for (arg2 = NULL; arg2 < piVar9; arg2 = arg2 + 1) {\n                if (*(piVar14 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x58) = piVar6;\n            if (arg2 < 0) {\n                *(*0x20 + -0x88) = piVar9;\n                *(*0x20 + -0x40) = piVar14;\n                *(*0x20 + -0xb0) = 0x4012f9;\n                fcn.004346e0();\n                *(*0x20 + -0xb0) = 0x40130a;\n                fcn.00434fe0();\n                *(*0x20 + -0xb0) = 0x401319;\n                fcn.00434fe0();\n                *(*0x20 + -0xb0) = 0x40132a;\n                fcn.00434fe0();\n                *(*0x20 + -0xb0) = 0x40132f;\n                fcn.00434760();\n                in_RAX = *(*0x20 + -0x38);\n                piVar6 = *(*0x20 + -0x58);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= piVar9) {\n                if (0x3 < arg2) {\n                    piVar5 = arg2 + -1;\n                    uVar11 = -piVar5 >> 0x3f & 4;\n                    unaff_RBX = piVar14 + uVar11;\n                    if (arg2 + 1U <= piVar9) {\n                        *(*0x20 + -0x60) = piVar5;\n                        *(*0x20 + -0x48) = unaff_RBX;\n                        piVar8 = piVar9 - arg2;\n                        piVar9 = piVar8 + -1;\n                        *(*0x20 + -0x90) = piVar9;\n                        uVar13 = arg2 + 1U & -piVar9 >> 0x3f;\n                        *(*0x20 + -0x50) = piVar14 + uVar13;\n                        if (piVar8 == 0x3) {\n                            if (*(piVar14 + uVar13) == 0x6e6f) {\ncode_r0x00401236:\n                                if (((arg2 == 0x7) && (*(piVar14 + uVar11) == 0x6c61)) &&\n                                   (*(piVar14 + uVar11 + 2) == 'l')) {\n                                    piVar12 = *0x544398;\n                                    for (piVar5 = NULL; piVar5 < piVar12; piVar5 = piVar5 + 1) {\n                                        piVar9 = *0x544398;\n                                        if (*0x544398 <= piVar5) {\ncode_r0x004016a5:\n                                            *(*0x20 + -0xb0) = 0x4016ad;\n                                            fcn.0045d480(piVar9);\n                                            goto code_r0x004016ad;\n                                        }\n                                        iVar7 = piVar5 * 0x20;\n                                        *(*0x544390 + piVar5 * 8 + 6) = 1;\n                                        if (piVar8 != 0x3) {\n                                            piVar14 = *0x544398;\n                                            if (piVar5 < *0x544398) {\n                                                piVar14 = *(*0x544390 + iVar7 + 0x1a);\n                                                goto code_r0x0040167b;\n                                            }\ncode_r0x00401699:\n                                            *(*0x20 + -0xb0) = 0x4016a5;\n                                            fcn.0045d480(piVar14);\n                                            piVar9 = piVar5;\n                                            goto code_r0x004016a5;\n                                        }\n                                        piVar14 = 0x1;\ncode_r0x0040167b:\n                                        piVar9 = *0x544390;\n                                        if (*0x544398 <= piVar5) {\n                                            *(*0x20 + -0xb0) = 0x401699;\n                                            fcn.0045d480(*0x544398);\n                                            goto code_r0x00401699;\n                                        }\ncode_r0x0040161c:\n                                        *(piVar9 + iVar7 + 0x19) = piVar14;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = piVar8;\n                                    *(*0x20 + -0x70) = *0x544398;\n                                    arg2 = *0x544398;\n                                    for (piVar14 = NULL; piVar14 < arg2; piVar14 = piVar14 + 1) {\n                                        piVar12 = *0x544390;\n                                        piVar8 = *0x544398;\n                                        if (*0x544398 <= piVar14) {\ncode_r0x00401614:\n                                            *(*0x20 + -0xb0) = 0x40161c;\n                                            piVar14 = piVar8;\n                                            iVar7 = fcn.0045d480(piVar8);\n                                            goto code_r0x0040161c;\n                                        }\n                                        piVar8 = *(*0x544390 + piVar14 * 8 + 2);\n                                        piVar12 = *(*0x544390 + piVar14 * 8);\n                                        if (piVar8 == piVar5) {\n                                            *(*0x20 + -0x78) = piVar14 * 0x20;\n                                            *(*0x20 + -0x80) = piVar14;\n                                            *(*0x20 + -0xb0) = 0x40153a;\n                                            cVar4 = fcn.00402180(piVar8, arg2);\n                                            if (cVar4 != '\\0') {\n                                                piVar8 = *(*0x20 + -0x80);\n                                                arg1 = *0x544398;\n                                                in_RAX = *0x544390;\n                                                if (piVar8 < *0x544398) {\n                                                    piVar12 = *(*0x20 + -0x78);\n                                                    *(*0x544390 + 6 + piVar12) = 1;\n                                                    in_RAX = *0x544390;\n                                                    if (piVar8 < *0x544398) {\n                                                        *(*0x544390 + piVar12 + 0x19) = *(*0x20 + -0x68) == 3;\n                                                        in_RAX = *(*0x20 + -0x38);\n                                                        piVar6 = *(*0x20 + -0x58);\n                                                        goto code_r0x00401116;\n                                                    }\n                                                    *(*0x20 + -0xb0) = 0x40160f;\n                                                    arg1 = *0x544398;\n                                                    fcn.0045d480(*0x544398);\n                                                }\n                                                *(*0x20 + -0xb0) = 0x401614;\n                                                fcn.0045d480(arg1);\n                                                piVar8 = piVar14;\n                                                goto code_r0x00401614;\n                                            }\n                                            arg2 = *(*0x20 + -0x70);\n                                            unaff_RBX = *(*0x20 + -0x48);\n                                            in_RAX = *(*0x20 + -0x38);\n                                            piVar6 = *(*0x20 + -0x58);\n                                            piVar5 = *(*0x20 + -0x60);\n                                            piVar14 = *(*0x20 + -0x80);\n                                        }\n                                    }\n                                    *(*0x20 + -0xb0) = 0x4015c5;\n                                    fcn.004346e0();\n                                    *(*0x20 + -0xb0) = 0x4015d6;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0xb0) = 0x4015e5;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0xb0) = 0x4015f6;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0xb0) = 0x4015fb;\n                                    fcn.00434760();\n                                    in_RAX = *(*0x20 + -0x38);\n                                    piVar6 = *(*0x20 + -0x58);\n                                }\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((piVar8 == 0x4) && (*(piVar14 + uVar13) == 0x666f)) &&\n                                (*(piVar14 + uVar13 + 2) == 'f')) goto code_r0x00401236;\n                        *(*0x20 + -0xb0) = 0x401285;\n                        fcn.004346e0();\n                        *(*0x20 + -0xb0) = 0x401296;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb0) = 0x4012a5;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb0) = 0x4012b6;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb0) = 0x4012c5;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb0) = 0x4012d6;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb0) = 0x4012db;\n                        fcn.00434760();\n                        in_RAX = *(*0x20 + -0x38);\n                        piVar6 = *(*0x20 + -0x58);\n                        goto code_r0x00401116;\n                    }\ncode_r0x004016ad:\n                    *(*0x20 + -0xb0) = 0x4016b5;\n                    fcn.0045d540(piVar9);\n                }\n                piVar9 = arg2;\n                *(*0x20 + -0xb0) = 0x4016c5;\n                arg2 = piVar9;\n                fcn.0045d540(piVar9);\n            }\n            *(*0x20 + -0xb0) = 0x4016d3;\n            fcn.0045d4c0(arg2, piVar9);\ncode_r0x004016d3:\n            *(*0x20 + -0xb0) = 0x4016de;\n            piVar9 = unaff_RBX;\n            fcn.0045d540(unaff_RBX);\ncode_r0x004016de:\n            *(*0x20 + -0xb0) = 0x4016e6;\n            in_RAX = fcn.0045d4c0(piVar9, unaff_RBX);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x4016f6;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x0040136e:\n    iVar1 = piVar14[1];\n    iVar2 = piVar14[2];\n    iVar3 = piVar14[3];\n    *(*0x20 + -0x28) = *piVar14;\n    *(*0x20 + -0x24) = iVar1;\n    *(*0x20 + -0x20) = iVar2;\n    *(*0x20 + -0x1c) = iVar3;\n    iVar1 = piVar14[5];\n    iVar2 = piVar14[6];\n    iVar3 = piVar14[7];\n    *(*0x20 + -0x18) = piVar14[4];\n    *(*0x20 + -0x14) = iVar1;\n    *(*0x20 + -0x10) = iVar2;\n    *(*0x20 + -0xc) = iVar3;\n    if (*(*0x20 + -0x10) != '\\0') {\n        *(*0x20 + -0x60) = iVar7;\n        *(*0x20 + -0x30) = piVar14;\n        cVar4 = *(*0x20 + -0xf);\n        if (cVar4 == '\\0') {\ncode_r0x00401422:\n            if (*(*0x20 + -0xe) == '\\0') {\ncode_r0x0040142c:\n                **(*0x20 + -0x18) = cVar4;\n            }\n            else {\n                *(*0x20 + -0x38) = *(*0x20 + -0x28);\n                *(*0x20 + -0x68) = *(*0x20 + -0x20);\n                *(*0x20 + -0xb0) = 0x401457;\n                fcn.004346e0();\n                *(*0x20 + -0xb0) = 0x401468;\n                fcn.00434fe0();\n                *(*0x20 + -0xb0) = 0x401477;\n                fcn.00434fe0();\n                *(*0x20 + -0xb0) = 0x401488;\n                fcn.00434fe0();\n                *(*0x20 + -0xb0) = 0x40148d;\n                fcn.00434760();\n                piVar6 = *(*0x20 + -0x58);\n                piVar14 = *(*0x20 + -0x30);\n                iVar7 = *(*0x20 + -0x60);\n            }\n        }\n        else {\n            if (**(*0x20 + -0x18) != '\\0') {\n                if (cVar4 == '\\0') goto code_r0x00401422;\n                goto code_r0x0040142c;\n            }\n            *(*0x20 + -0x38) = *(*0x20 + -0x28);\n            *(*0x20 + -0x68) = *(*0x20 + -0x20);\n            *(*0x20 + -0xb0) = 0x4013db;\n            fcn.004346e0();\n            *(*0x20 + -0xb0) = 0x4013ec;\n            fcn.00434fe0();\n            *(*0x20 + -0xb0) = 0x4013fb;\n            fcn.00434fe0();\n            *(*0x20 + -0xb0) = 0x40140c;\n            fcn.00434fe0();\n            *(*0x20 + -0xb0) = 0x401411;\n            fcn.00434760();\n            piVar6 = *(*0x20 + -0x58);\n            piVar14 = *(*0x20 + -0x30);\n            iVar7 = *(*0x20 + -0x60);\n        }\n    }\n    iVar7 = iVar7 + 1;\n    if (piVar6 <= iVar7) {\n        return;\n    }\n    piVar14 = piVar14 + 8;\n    goto code_r0x0040136e;\n}\n",
        "token_count": 4065
    },
    "00403d80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403d80(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uint64_t unaff_RDI;\n    int64_t iVar13;\n    uint8_t *puVar14;\n    uint64_t uVar15;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404120(arg1);\n        return;\n    }\n    if (*0x543ae8 == NULL) {\n        iVar8 = 0;\n        iVar11 = 0;\n    }\n    else {\n        iVar11 = **0x543ae8;\n        iVar8 = (*0x543ae8)[1];\n    }\n    for (iVar13 = 0; iVar13 < iVar8; iVar13 = iVar13 + 1) {\n        iVar2 = *(iVar11 + iVar13 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00404120(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00404120(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x56a638) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.0045ac40();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar12 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar11 = *(*(uVar7 * 8 + 0x56a638) + (uVar12 & 0xfffff) * 8);\n            if (iVar11 == 0) {\n                uVar12 = 0;\n                uVar7 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar11;\n                uVar7 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar11 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar15 = unaff_RBX;\n            do {\n                uVar10 = uVar7;\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar10 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar15;\n                    cVar4 = fcn.00403980(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.00432f60();\n                        break;\n                    }\n                    uVar12 = uVar12 & 0xffffffff;\n                    uVar15 = unaff_RBX;\n                }\n                if (uVar10 < 3) {\n                    uVar10 = uVar10 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar12 & 0xffffffff;\n                    unaff_RBX = uVar15;\n                    puVar9 = fcn.00411480(uVar12 & 0xffffffff);\n                    uVar12 = uVar6;\n                    uVar15 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar10 = 0;\n                }\n                uVar5 = uVar5 + 8;\n                uVar7 = uVar10;\n            } while( true );\n        }\n        fcn.0045d4a0(0x40);\n    }\n    fcn.0045d4a0(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1204
    },
    "00407d60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407d60(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t noname_0;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00454320();\n    uVar5 = *(in_RAX + 0x17);\n    noname_0 = uVar5;\n    if (uVar5 < 9) {\n        if (4 < uVar5) {\n            if (6 < uVar5) {\n                if (uVar5 == 7) {\n                    fcn.004346e0();\n                    fcn.00434fe0();\n                    fcn.00434fe0();\n                    fcn.00434ce0();\n                    fcn.00434fe0();\n                    fcn.00434760();\n                    return;\n                }\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434ce0();\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n            if (uVar5 == 5) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434de0();\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n        if (2 < uVar5) {\n            if (uVar5 == 3) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434de0();\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n        if (uVar5 == 1) {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434980();\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n        if (uVar5 == 2) {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n    }\n    else {\n        if (uVar5 < 0xd) {\n            if (10 < uVar5) {\n                if (uVar5 == 0xb) {\n                    fcn.004346e0();\n                    fcn.00434fe0();\n                    fcn.00434fe0();\n                    fcn.00434ce0();\n                    fcn.00434fe0();\n                    fcn.00434760();\n                    return;\n                }\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434ce0();\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n            if (uVar5 == 9) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434ce0();\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n        if (uVar5 < 0xf) {\n            if (uVar5 == 0xd) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.004349e0(noname_0, param_2);\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.004349e0(noname_0, param_2);\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n        if (uVar5 == 0xf) {\n            fVar1 = *unaff_RBX;\n            fVar2 = *(unaff_RBX + 4);\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434c40(fVar1, fVar2);\n            fcn.00434760();\n            return;\n        }\n        if (uVar5 == 0x10) {\n            uVar3 = *unaff_RBX;\n            uVar4 = unaff_RBX[1];\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434c40(uVar3, uVar4);\n            fcn.00434760();\n            return;\n        }\n        if (uVar5 == 0x18) {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434760();\n            return;\n        }\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434f60();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 1462
    },
    "0040d100": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d100(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x40) = 0x40d1f9;\n                    (*pcVar1)();\n                }\n                return 0x599480;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x40) = 0x40d16b;\n                uVar4 = (*pcVar1)();\n                iVar10 = *(*0x20 + 0x10);\n                uVar8 = (1 << (*(iVar10 + 9) & 0x3f)) - 1;\n                iVar9 = *(*0x20 + 8);\n                iVar2 = *(iVar10 + 0x18);\n                iVar5 = (uVar8 & uVar4) * *(iVar9 + 0x52) + *(iVar10 + 0x10);\n                if (iVar2 != 0) {\n                    if ((*(iVar10 + 8) & 8) == 0) {\n                        uVar8 = uVar8 >> 1;\n                    }\n                    iVar10 = *(iVar9 + 0x52) * (uVar8 & uVar4);\n                    if (2 < *(iVar2 + iVar10) - 2U) {\n                        iVar5 = iVar2 + iVar10;\n                    }\n                }\n                uVar8 = uVar4 >> 0x38;\n                if (uVar4 >> 0x38 < 5) {\n                    uVar8 = (uVar4 >> 0x38) + 5;\n                }\n                *(*0x20 + -0x21) = uVar8;\n                do {\n                    if (iVar5 == 0) {\n                        return 0x599480;\n                    }\n                    *(*0x20 + -0x18) = iVar5;\n                    for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                        if (uVar8 == *(uVar4 + iVar5)) {\n                            *(*0x20 + -0x20) = uVar4;\n                            piVar6 = *(iVar9 + 0x50) * uVar4 + iVar5 + 8;\n                            if ((*(iVar9 + 0x54) & 1) != 0) {\n                                piVar6 = *piVar6;\n                            }\n                            pcVar1 = **(*(iVar9 + 0x30) + 0x18);\n                            *(*0x20 + -0x40) = 0x40d290;\n                            cVar3 = (*pcVar1)(piVar6);\n                            if (cVar3 != '\\0') {\n                                iVar10 = *(*0x20 + 8);\n                                piVar6 = *(*0x20 + -0x18) + *(iVar10 + 0x51) * *(*0x20 + -0x20) + *(iVar10 + 0x50) * 8 +\n                                         8;\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    piVar6 = *piVar6;\n                                }\n                                return piVar6;\n                            }\n                            uVar8 = *(*0x20 + -0x21);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + 8);\n                        }\n                        else if (*(uVar4 + iVar5) == '\\0') {\n                            return 0x599480;\n                        }\n                    }\n                    iVar5 = *(iVar5 + *(iVar9 + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x40) = 0x40d305;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40d31a;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1321
    },
    "0040d340": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d340(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0;\n    }\n    uVar3 = (***(in_RAX + 0x48))();\n    uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n    iVar1 = unaff_RBX[3];\n    iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n    if (iVar1 != 0) {\n        if ((*(unaff_RBX + 1) & 8) == 0) {\n            uVar7 = uVar7 >> 1;\n        }\n        iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n        if (2 < *(iVar1 + iVar8) - 2U) {\n            iVar5 = iVar1 + iVar8;\n        }\n    }\n    uVar4 = uVar3 >> 0x38;\n    uVar7 = uVar4;\n    if (uVar3 >> 0x38 < 5) {\n        uVar4 = (uVar3 >> 0x38) + 5;\n        uVar7 = uVar4;\n    }\n    do {\n        if (iVar5 == 0) {\n            return 0;\n        }\n        for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n            if (uVar4 == *(uVar3 + iVar5)) {\n                piVar6 = *(in_RAX + 0x50) * uVar3 + iVar5 + 8;\n                if ((*(in_RAX + 0x54) & 1) != 0) {\n                    piVar6 = *piVar6;\n                }\n                cVar2 = (***(*(in_RAX + 0x30) + 0x18))();\n                if (cVar2 != '\\0') {\n                    return piVar6;\n                }\n                uVar4 = uVar7 & 0xff;\n            }\n            else if (*(uVar3 + iVar5) == '\\0') {\n                return 0;\n            }\n        }\n        iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0040da60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040da60(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t *arg2_00;\n    uint64_t uVar6;\n    int64_t *unaff_RBX;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if (*0x598440 == 0) {\n            *(arg1 + 0x10) = in_RAX;\n            *(arg1 + 0x18) = unaff_RBX;\n        }\n        else {\n            fcn.0045cfe0(arg1, arg2, arg3, arg4);\n            in_RAX = fcn.0045d120(arg1, arg2, arg3, arg4);\n        }\n        *(arg1 + 0x4a) = *(unaff_RBX + 9);\n        if (*0x598440 == 0) {\n            *(arg1 + 0x20) = unaff_RBX[2];\n        }\n        else {\n            in_RAX = fcn.0045d100(arg1, unaff_RBX[2], arg3, arg4);\n        }\n        piVar5 = unaff_RBX;\n        if (*(*(in_RAX + 0x40) + 8) == 0) {\n            if (unaff_RBX[5] == 0) {\n                iVar4 = arg1;\n                iVar2 = fcn.0040c140();\n                if (*0x598440 == 0) {\n                    unaff_RBX[5] = iVar2;\n                }\n                else {\n                    fcn.0045cfe0(iVar4, unaff_RBX, arg3, arg4);\n                }\n            }\n            arg2_00 = piVar5[5];\n            if (*arg2_00 == 0) {\n                uVar3 = fcn.0040c140();\n                if (*0x598440 == 0) {\n                    *unaff_RBX[5] = uVar3;\n                    piVar5 = unaff_RBX;\n                }\n                else {\n                    fcn.0045cfe0(unaff_RBX, arg2_00, arg3, arg4);\n                    piVar5 = unaff_RBX;\n                }\n            }\n            if (*0x598440 == 0) {\n                *(arg1 + 0x30) = *piVar5[5];\n            }\n            else {\n                fcn.0045d100(arg1, *piVar5[5], arg3, arg4);\n            }\n            if (*0x598440 == 0) {\n                *(arg1 + 0x38) = *(piVar5[5] + 8);\n            }\n            else {\n                fcn.0045d100(arg1, *(piVar5[5] + 8), arg3, arg4);\n            }\n        }\n        iVar4 = *(unaff_R14 + 0x30);\n        uVar7 = *(iVar4 + 0xf0);\n        uVar1 = *(iVar4 + 0xf4);\n        *(iVar4 + 0xf0) = uVar1;\n        uVar7 = uVar7 ^ uVar7 << 0x11;\n        uVar7 = uVar1 >> 0x10 ^ uVar1 ^ uVar7 ^ uVar7 >> 7;\n        *(iVar4 + 0xf4) = uVar7;\n        uVar6 = uVar7 + uVar1;\n        if (0x1c < *(piVar5 + 9)) {\n            iVar4 = *(unaff_R14 + 0x30);\n            uVar7 = *(iVar4 + 0xf0);\n            uVar1 = *(iVar4 + 0xf4);\n            *(iVar4 + 0xf0) = uVar1;\n            uVar7 = uVar7 ^ uVar7 << 0x11;\n            uVar7 = uVar1 >> 0x10 ^ uVar1 ^ uVar7 ^ uVar7 >> 7;\n            *(iVar4 + 0xf4) = uVar7;\n            uVar6 = uVar6 + (uVar7 + uVar1) * 0x80000000;\n        }\n        *(arg1 + 0x40) = (1 << (*(piVar5 + 9) & 0x3f)) - 1U & uVar6;\n        *(arg1 + 0x48) = uVar6 >> (*(piVar5 + 9) & 0x3f) & -(*(piVar5 + 9) < 0x40) & 7;\n        *(arg1 + 0x50) = *(arg1 + 0x40);\n        if ((*(piVar5 + 1) & 3) != 3) {\n            LOCK();\n            *(piVar5 + 1) = *(piVar5 + 1) | 3;\n        }\n        fcn.0040dce0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1212
    },
    "0040dce0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dce0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar (*in_RAX) [16];\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    code **ppcVar7;\n    ulong arg1;\n    code **arg2;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    code **arg1_00;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int64_t iVar15;\n    int64_t **ppiVar16;\n    int64_t *piVar17;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = *(in_RAX[1] + 8);\n            if ((*(iVar8 + 8) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = iVar8;\n                iVar10 = *in_RAX[1];\n                *(*0x20 + -0x28) = iVar10;\n                arg1_00 = *in_RAX[5];\n                iVar5 = *(in_RAX[2] + 8);\n                uVar14 = in_RAX[4][0xb];\n                ppcVar7 = *(in_RAX[5] + 8);\n                do {\n                    if (iVar5 == 0) {\n                        if ((*in_RAX[4] == arg1_00) && (in_RAX[4][9] != '\\0')) {\n                            if (*0x598440 == 0) {\n                                *in_RAX = in_XMM15;\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40de49;\n                                fcn.0045d0e0(0);\n                                *(*0x20 + -0x70) = 0x40de52;\n                                fcn.0045d0e0();\n                            }\n                            return;\n                        }\n                        iVar1 = *(iVar8 + 0x18);\n                        if ((iVar1 == 0) || (*(iVar8 + 9) != in_RAX[4][10])) {\n                            iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                            ppcVar7 = 0xffffffffffffffff;\n                        }\n                        else {\n                            uVar13 = *(*(in_RAX[1] + 8) + 9);\n                            if ((*(*(in_RAX[1] + 8) + 8) & 8) == 0) {\n                                uVar13 = uVar13 - 1;\n                            }\n                            iVar15 = ((1 << (uVar13 & 0x3f)) - 1U & arg1_00) * *(iVar10 + 0x52);\n                            iVar5 = iVar1 + iVar15;\n                            ppcVar7 = arg1_00;\n                            if (*(iVar15 + iVar1) - 2U < 3) {\n                                iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                                ppcVar7 = 0xffffffffffffffff;\n                            }\n                        }\n                        arg1_00 = arg1_00 + 1;\n                        if (1 << (in_RAX[4][10] & 0x3f) == arg1_00) {\n                            in_RAX[4][9] = 1;\n                            arg1_00 = NULL;\n                        }\n                        uVar14 = 0;\n                    }\n                    *(*0x20 + -0x40) = arg1_00;\n                    *(*0x20 + -0x48) = ppcVar7;\n                    *(*0x20 + -0x10) = iVar5;\n                    for (; uVar13 = uVar14,  uVar13 < 8; uVar14 = uVar14 + 1) {\n                        uVar12 = in_RAX[4][8] + uVar14;\n                        uVar4 = uVar12 & 7;\n                        if ((*(iVar5 + uVar4) < 2) || (*(iVar5 + uVar4) == 4)) goto code_r0x0040de5c;\n                        uVar11 = uVar12 & 7;\n                        uVar6 = *(iVar10 + 0x50);\n                        piVar17 = uVar11 * uVar6 + iVar5 + 8;\n                        uVar12 = *(iVar10 + 0x54);\n                        if ((uVar12 & 1) != 0) {\n                            piVar17 = *piVar17;\n                        }\n                        *(*0x20 + -0x49) = uVar13;\n                        *(*0x20 + -0x20) = piVar17;\n                        ppiVar16 = *(iVar10 + 0x51) * uVar11 + uVar6 * 8 + iVar5 + 8;\n                        *(*0x20 + -0x30) = ppiVar16;\n                        arg2 = ppcVar7;\n                        if ((ppcVar7 == 0xffffffffffffffff) || ((*(iVar8 + 8) & 8) != 0)) {\ncode_r0x0040e024:\n                            uVar6 = *(iVar5 + uVar4);\n                            uVar11 = uVar6;\n                            if ((uVar6 == 2) || (uVar6 == 3)) {\n                                uVar11 = *(iVar10 + 0x54);\n                                if ((*(iVar10 + 0x54) >> 2 & 1) == 0) {\n                                    arg2 = *(*(iVar10 + 0x30) + 0x18);\n                                    pcVar2 = *arg2;\n                                    *(*0x20 + -0x70) = 0x40e064;\n                                    uVar6 = (*pcVar2)();\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    ppcVar7 = *(*0x20 + -0x48);\n                                    in_RAX = *(*0x20 + 8);\n                                }\n                                else {\n                                    uVar6 = 1;\n                                }\n                                uVar6 = uVar6 ^ 1;\n                            }\n                            else {\n                                uVar6 = 1;\n                            }\n                            if (uVar6 != 0) {\n                                if (*0x598440 == 0) {\n                                    **in_RAX = *(*0x20 + -0x20);\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40e145;\n                                    in_RAX = fcn.0045d100(arg1_00, *(*0x20 + -0x20), uVar11, uVar4);\n                                }\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    ppiVar16 = *ppiVar16;\n                                }\n                                if (*0x598440 == 0) {\n                                    *(*in_RAX + 8) = ppiVar16;\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40e175;\n                                    in_RAX = fcn.0045d120(*in_RAX + 8, arg1_00, uVar11, uVar4);\n                                }\ncode_r0x0040e178:\n                                *in_RAX[5] = arg1_00;\n                                if (*(in_RAX[2] + 8) != iVar5) {\n                                    if (*0x598440 == 0) {\n                                        *(in_RAX[2] + 8) = iVar5;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x70) = 0x40e1a5;\n                                        in_RAX = fcn.0045d0e0();\n                                    }\n                                }\n                                in_RAX[4][0xb] = uVar13 + 1;\n                                *(in_RAX[5] + 8) = ppcVar7;\n                                return;\n                            }\n                            arg1 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x40e0a7;\n                            iVar5 = fcn.0040d340(arg1);\n                            if (iVar5 != 0) {\n                                if (*0x598440 == 0) {\n                                    in_RAX = *(*0x20 + 8);\n                                    **in_RAX = iVar5;\n                                    *(*in_RAX + 8) = iVar8;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(*0x20 + -0x70) = 0x40e0f6;\n                                    fcn.0045cfe0(arg1, arg2, uVar11, uVar4);\n                                    *(*0x20 + -0x70) = 0x40e105;\n                                    fcn.0045d120(in_RAX, arg2, uVar11, uVar4);\n                                }\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar13 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                goto code_r0x0040e178;\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            ppcVar7 = *(*0x20 + -0x48);\n                            iVar8 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x28);\n                            arg1_00 = *(*0x20 + -0x40);\n                            uVar14 = *(*0x20 + -0x49);\n                            iVar5 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = uVar4;\n                            if ((uVar12 >> 2 & 1) == 0) {\n                                pcVar2 = **(*(iVar10 + 0x30) + 0x18);\n                                *(*0x20 + -0x70) = 0x40df22;\n                                cVar3 = (*pcVar2)();\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar4 = *(*0x20 + -0x38);\n                                uVar14 = *(*0x20 + -0x49);\n                                ppiVar16 = *(*0x20 + -0x30);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            else {\n                                cVar3 = '\\x01';\n                            }\n                            uVar13 = uVar14;\n                            if (cVar3 == '\\0') {\n                                uVar6 = in_RAX[4][10] - 1;\n                                arg2 = ppcVar7 >> (uVar6 & 0x3f) & -(uVar6 < 0x40);\n                                if ((*(iVar5 + uVar4) & 1) == arg2) goto code_r0x0040e024;\n                            }\n                            else {\n                                arg2 = *(iVar10 + 0x48);\n                                pcVar2 = *arg2;\n                                *(*0x20 + -0x70) = 0x40dfab;\n                                uVar4 = (*pcVar2)();\n                                in_RAX = *(*0x20 + 8);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                if (ppcVar7 == (uVar4 & (1 << (in_RAX[4][10] & 0x3f)) - 1U)) {\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar4 = *(*0x20 + -0x38);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    goto code_r0x0040e024;\n                                }\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar14 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                            }\n                        }\ncode_r0x0040de5c:\n                    }\n                    iVar5 = *(iVar5 + *(iVar10 + 0x52) + -8);\n                    uVar14 = 0;\n                } while( true );\n            }\n            *(*0x20 + -0x70) = 0x40e1cb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x40e1d6;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3154
    },
    "0040e480": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e480(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040e9ea:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40e9fe;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x78) = iVar7;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x90) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40e6e8;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x88) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40e729;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x90);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x80) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40e805;\n                                iVar8 = fcn.0040ca00(arg1_00);\n                                iVar7 = *(*0x20 + -0x80);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40e8e5;\n                                fcn.00410c20(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x598440 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40e8c5;\n                                    in_RAX = fcn.0045d140(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40e96f;\n                                fcn.00410c20(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x598440 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40e950;\n                                    in_RAX = fcn.0045d140(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040e65c;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40e9d8;\n                        fcn.0045d480(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40e9e9;\n                    in_RAX = fcn.00432f60();\n                    goto code_r0x0040e9ea;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040e65c:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40e63d;\n            fcn.00410f20(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x78);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40e5c5;\n        fcn.0040ea20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 3279
    },
    "0040ea20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ea20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    uVar3 = iVar1 + 0x401;\n    if (arg1 < uVar3) {\n        uVar3 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != uVar3 && (*(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2U < 3)))\n    {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x598440 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045d0e0(0);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x598440 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045d0e0();\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "0040eb20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040eb20(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x599480;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40eb96;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x599480;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40ec89;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40ec9d;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 949
    },
    "0040ecc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040ecc0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x599480;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40ed36;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x599480;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40ee36;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40ee4a;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 949
    },
    "0040f200": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f200(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f59a:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40f5ae;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x68) = iVar7;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40f426;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40f4b1;\n                                iVar8 = fcn.0040ca00(arg1_00);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40f525;\n                            fcn.00410c20(arg1_01);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            goto code_r0x0040f3bb;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40f588;\n                        fcn.0045d480(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40f599;\n                    in_RAX = fcn.00432f60();\n                    goto code_r0x0040f59a;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040f3bb:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40f39c;\n            fcn.00410f20(uVar1 * uVar3 + iVar7 + 8);\n            uVar3 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40f32b;\n        fcn.0040ea20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2253
    },
    "0040f5e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f5e0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x599480;\n            }\n            arg1 = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    piVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f656;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    piVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            piVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (piVar4 == NULL) {\n                        return 0x599480;\n                    }\n                    piVar5 = piVar4;\n                    for (uVar6 = 0; piVar5 = piVar5 + 1,  uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + piVar4))) {\n                            return piVar4 + *(in_RAX + 0x51) * uVar6 + 0x48;\n                        }\n                    }\n                    piVar4 = *(piVar4 + (*(in_RAX + 0x52) - 8));\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40f756;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40f76b;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 949
    },
    "0040fb40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fb40(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040ff46:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40ff5a;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *puVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x48;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x48;\n        }\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x70) = iVar7;\n        for (; arg1 = uVar4,  puVar6 != NULL; puVar6 = *(puVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = puVar6;\n            arg1_00 = puVar6 + 9;\n            puVar9 = puVar6;\n            for (iVar8 = 0; puVar9 = puVar9 + 1,  iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = *(puVar6 + iVar8);\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40fd64;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg2 = *(*0x20 + -0x68);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            puVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(puVar6 + iVar8) = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x78) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40fdf1;\n                                iVar8 = fcn.0040ca00(uVar3);\n                                iVar7 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x48;\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x68);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x78);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            if ((*(*(in_RAX + 0x30) + 8) == 0) || (*0x598440 == '\\0')) {\n                                **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            }\n                            else {\n                                puVar6 = *(*0x20 + iVar7 + -0x38);\n                                uVar3 = *puVar9;\n                                if (*0x598440 == 0) {\n                                    *puVar6 = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = 0x40fea9;\n                                    fcn.0045d160(arg1, arg2, uVar3, puVar6);\n                                }\n                            }\n                            *(*0x20 + -0xa8) = 0x40fed0;\n                            fcn.00410c20(arg1_00);\n                            iVar7 = *(*0x20 + -0x78);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 8;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x68);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x70);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x0040fcfa;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40ff34;\n                        fcn.0045d480(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40ff45;\n                    in_RAX = fcn.00432f60();\n                    goto code_r0x0040ff46;\n                }\n                *(puVar6 + iVar8) = '\\x04';\ncode_r0x0040fcfa:\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40fcdb;\n            fcn.00410f20(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x70);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x40fc6b;\n        fcn.0040ea20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2471
    },
    "0040ff80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040ff80(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x599480;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x410325;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x41033f;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x00410007:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x410022;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x599480;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410145:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x30) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x410117;\n                    cVar5 = fcn.00402180(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x00410145;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x30);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar3 + -4) == *(unaff_RDI + piVar4 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x00410007;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x410218;\n            cVar5 = fcn.00402180(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x599480;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x599480;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x004102e3:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x4102ba;\n            cVar5 = fcn.00402180(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x004102e3;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x38);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x599480;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2170
    },
    "00410800": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410800(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00410bef:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x410c05;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x68) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x410a2f;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x78);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x410ab9;\n                                iVar8 = fcn.0040ca00(uVar3);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x78);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x598440 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x410b65;\n                                fcn.0045d160(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x410b79;\n                            fcn.00410c20(arg1_00);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x004109c5;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x410bdd;\n                        fcn.0045d480(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x410bee;\n                    in_RAX = fcn.00432f60();\n                    goto code_r0x00410bef;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x004109c5:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x4109a5;\n            fcn.00410f20(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x41092e;\n        fcn.0040ea20(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2397
    },
    "004116a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004116a0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x598444 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x56a638);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x543ae8 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x543ae8;\n                iVar15 = (*0x543ae8)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x543ae8 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x543ae8;\n                        iVar15 = (*0x543ae8)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.00411d20(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00411d20(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x56a638) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar10 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar10 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar9 = 0; uVar9 < arg1; uVar9 = uVar9 + 8) {\n                    uVar13 = uVar10;\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x16c0);\n                        *puVar4 = *(uVar9 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x16c0) + 0x10;\n                        *(iVar12 + 0x16c0) = iVar15;\n                        if (*(iVar12 + 0x16c8) == iVar15) {\n                            fcn.0042bc60();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar10 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar13 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.00411480(uVar6 & 0xffffffff);\n                        uVar6 = uVar13;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar10 = 0;\n                    }\n                }\n            }\n            else {\n                uVar9 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    uVar13 = uVar10;\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x16c0);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x16c0) + 0x10;\n                        *(iVar12 + 0x16c0) = iVar15;\n                        if (*(iVar12 + 0x16c8) == iVar15) {\n                            unaff_RBX = uVar9;\n                            fcn.0042bc60();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar9 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar10 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar13 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar9;\n                        puVar14 = fcn.00411480(uVar6 & 0xffffffff);\n                        uVar6 = uVar13;\n                        uVar9 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar10 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.0045d4a0(0x40);\n    }\n    fcn.00432f60();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1735
    },
    "00411b20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411b20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    uint64_t uVar13;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x598444 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar10 = in_RAX + 0x800000000000 >> 0x16;\n            iVar11 = *(*(uVar7 * 8 + 0x56a638) + (uVar10 & 0xfffff) * 8);\n            if (iVar11 == 0) {\n                uVar10 = 0;\n                uVar7 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar11 + (in_RAX >> 5 & 0x1ffff);\n                uVar7 = in_RAX >> 3 & 3;\n                puVar8 = iVar11 + 0x1ffff;\n            }\n            uVar13 = unaff_RBX;\n            for (uVar5 = 0; uVar9 = uVar7,  uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar9 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar11 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar11;\n                    if (*(iVar1 + 0x16c8) == iVar11) {\n                        unaff_RBX = uVar13;\n                        fcn.0042bc60();\n                        uVar10 = uVar10 & 0xffffffff;\n                        uVar13 = unaff_RBX;\n                    }\n                }\n                if (uVar9 < 3) {\n                    uVar9 = uVar9 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar10 & 0xffffffff;\n                    unaff_RBX = uVar13;\n                    puVar12 = fcn.00411480(uVar10 & 0xffffffff);\n                    uVar10 = uVar6;\n                    uVar13 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar9 = 0;\n                }\n                uVar7 = uVar9;\n            }\n            return;\n        }\n        fcn.0045d4a0(0x40);\n    }\n    fcn.00432f60();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 813
    },
    "00412260": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412768)\n\nvoid fcn.00412260(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    ulong uVar4;\n    int8_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    uint64_t *unaff_RDI;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint64_t uVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar16;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar6 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar6 < 0x40) {\n                puVar22 = in_RAX + 0x800000000000 >> 0x16;\n                iVar20 = *(*(uVar6 * 8 + 0x56a638) + (puVar22 & 0xfffff) * 8);\n                if (iVar20 == 0) {\n                    puVar3 = NULL;\n                    uVar13 = 0;\n                    puVar24 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar3 = iVar20 + (in_RAX >> 5 & 0x1ffff);\n                    uVar13 = in_RAX >> 3 & 3;\n                    puVar24 = iVar20 + 0x1ffff;\n                    puVar10 = puVar22;\n                }\n                puVar1 = unaff_RDI[4];\n                uVar9 = uVar13;\n                if (unaff_RBX == 0x10) {\n                    iVar5 = uVar13;\n                    if (*unaff_RDI == 8) {\n                        *puVar3 = *puVar3 | 0x33 << iVar5 & -(uVar9 < 0x20);\n                        return;\n                    }\n                    *puVar3 = -(uVar9 < 0x20) &\n                              (*puVar1 & 3 |\n                              (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) << iVar5 |\n                              ~(0x33 << iVar5 & -(uVar9 < 0x20)) & *puVar3;\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar14 = *puVar1;\n                    if (*unaff_RDI == 8) {\n                        uVar14 = 7;\n                    }\n                    uVar14 = (uVar14 & 7) << 4 | uVar14 & 7;\n                    uVar16 = (uVar14 & 0x40) >> 1;\n                    uVar15 = uVar16 | uVar14;\n                    uVar17 = uVar15 | 0x10;\n                    uVar18 = uVar17;\n                    if (uVar9 < 2) {\n                        if (uVar9 == 0) {\n                            *puVar3 = *puVar3 & 0x88 | uVar15 | 0x10;\n                        }\n                        else {\n                            *puVar3 = uVar17 << 1 | *puVar3 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xeb) = uVar18;\n                        if (uVar9 == 2) {\n                            *puVar3 = (uVar16 | uVar14 & 0x33 | 0x10) << 2 | *puVar3 & 0x33;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x412597;\n                                puVar3 = fcn.00411480(puVar10 & 0xffffffff);\n                                uVar18 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar18 >> 2 & 0x11 | *puVar3 & 0xee;\n                        }\n                        else if (uVar9 == 3) {\n                            *puVar3 = *puVar3 & 0x77 | (uVar14 & 0x11 | 0x10) << 3;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x4125f2;\n                                puVar3 = fcn.00411480(puVar10 & 0xffffffff);\n                                uVar18 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar18 >> 1 & 0x33 | *puVar3 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = puVar1;\n                *(*0x20 + -0x40) = puVar3;\n                uVar23 = puVar10 & 0xffffffff;\n                uVar7 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar3 = in_RAX;\n                if (uVar23 == uVar7) {\n                    puVar3 = *(*0x20 + -0x40);\n                }\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x60) = puVar22 & 0xfffff;\n                *(*0x20 + -0x68) = uVar7;\n                *(*0x20 + -0x70) = uVar6;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x78) = puVar22;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar3;\n                    uVar6 = *unaff_RDI;\n                    if (arg1 <= uVar6) {\n                        uVar4 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                        goto code_r0x0041292a;\n                    }\n                    *(*0x20 + -0x80) = uVar6;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        puVar22 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xa8) = puVar3;\n                        *(*0x20 + -200) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        puVar3 = *(*0x20 + -0xa8);\n                        while (uVar11 = *(*0x20 + -200),  uVar11 < uVar25) {\n                            uVar18 = *puVar22;\n                            puVar22 = puVar22 + 1;\n                            uVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + -200) = uVar11 + 8;\n                            *(*0x20 + -0xb0) = *(*0x20 + -0xb0) | uVar18 << (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        uVar6 = uVar6 >> 3;\n                        if (uVar6 * 2 < 0x3a) {\n                            uVar11 = *(*0x20 + -0xb0);\n                            for (uVar7 = uVar6; uVar7 < 0x41; uVar7 = uVar7 * 2) {\n                                *(*0x20 + -0xd8) = uVar11;\n                                uVar11 = uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) | *(*0x20 + -0xd8);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar6 == '\\0') {\n                                *(*0x20 + -0x138) = 0x412eb9;\n                                fcn.00430980();\n                                goto code_r0x00412eb9;\n                            }\n                            *(*0x20 + -0xea) = uVar6 & 0xff;\n                            uVar6 = (0x39 / *(*0x20 + -0xea)) * uVar6;\n                            uVar11 = (1 << (uVar6 & 0x3f) & -(uVar6 < 0x40)) - 1 & uVar11;\n                            puVar3 = *(*0x20 + -0x38);\n                            uVar7 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            uVar11 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0xd0) = uVar6;\n                        uVar25 = 0;\n                        *(*0x20 + -0xd8) = uVar11;\n                        puVar10 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar6 = (uVar6 >> 3) + (uVar25 - 1) * -8;\n                        uVar25 = (uVar25 + *(*0x20 + -0x48)) - 1;\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    break;\n                }\n                *(*0x20 + -0x88) = uVar23;\n                uVar6 = unaff_RDI[1];\n                uVar13 = *unaff_RDI;\n                *(*0x20 + -0x138) = 0x4124d0;\n                fcn.00412f00(puVar10 & 0xffffffff, uVar6, uVar13, arg1);\n                bVar26 = *(*0x20 + -0x88) == *(*0x20 + -0x68);\n                goto code_r0x004126c1;\n            }\ncode_r0x00412eb9:\n            arg1 = 0x40;\n            *(*0x20 + -0x138) = 0x412ec6;\n            in_RAX = fcn.0045d4a0(0x40);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x412ee5;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00412d32:\n    uVar4 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x28) = uVar25;\n    *(*0x20 + -0xc0) = uVar6;\n    puVar22 = *(*0x20 + -0x78);\n    uVar6 = *(*0x20 + -0x80);\ncode_r0x0041292a:\n    if (puVar10 == NULL) {\n        uVar25 = *(*0x20 + -0xd8);\n        *(*0x20 + -0xd0) = uVar4;\n        puVar22 = *(*0x20 + -0x78);\n    }\n    else {\n        uVar25 = *puVar10;\n        puVar10 = puVar10 + 1;\n        *(*0x20 + -0xa0) = puVar3;\n        *(*0x20 + -0xd0) = 8;\n        puVar3 = *(*0x20 + -0xa0);\n    }\n    if (arg1 == uVar6) {\n        uVar6 = unaff_RDI[1];\ncode_r0x004129af:\n        uVar6 = uVar6 >> 3;\n        if (uVar6 != 0) {\n            if (uVar13 == 0) {\n                uVar18 = uVar25 & 0xf | 0xf0;\n                if (uVar6 < 5) {\n                    puVar22 = puVar3;\n                    uVar25 = 4;\n                    goto code_r0x00412c20;\n                }\n                *puVar3 = uVar18;\n                iVar2 = 4;\n                iVar20 = *(*0x20 + -0xd0) + -4;\n                uVar13 = 4;\n                goto code_r0x00412a7a;\n            }\n            if (uVar13 == 2) goto code_r0x00412a0a;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x138) = 0x412ccf;\n            fcn.00432f60();\n        }\n        *(*0x20 + -0x138) = 0x412cd7;\n        uVar4 = fcn.00454320();\n        *(*0x20 + -0x18) = uVar4;\n        *(*0x20 + -0x98) = unaff_RBX;\n        *(*0x20 + -0x138) = 0x412cec;\n        fcn.004346e0();\n        *(*0x20 + -0x138) = 0x412cfd;\n        fcn.00434fe0();\n        *(*0x20 + -0x138) = 0x412d12;\n        fcn.00434fe0();\n        *(*0x20 + -0x138) = 0x412d17;\n        fcn.00434940();\n        *(*0x20 + -0x138) = 0x412d1c;\n        fcn.00434760();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x138) = 0x412d2d;\n        fcn.00432f60();\n    }\n    else if (uVar6 != 0) {\n        uVar6 = uVar6 * (arg1 / uVar6 - 1) + unaff_RDI[1];\n        puVar3 = *(*0x20 + -0x38);\n        arg1 = uVar7;\n        goto code_r0x004129af;\n    }\n    *(*0x20 + -0x138) = 0x412d32;\n    puVar3 = fcn.00430980();\n    puVar10 = puVar22;\n    goto code_r0x00412d32;\ncode_r0x00412a0a:\n    uVar18 = (uVar25 & 3) << 2;\n    uVar19 = uVar18 | 0x40;\n    if (1 < uVar6) {\n        uVar19 = uVar18 | 0xc0;\n    }\n    *puVar3 = uVar19 | *puVar3 & 0x33;\n    puVar22 = puVar3 + 1;\n    if (uVar6 < 3) {\n        uVar18 = 0;\n        uVar25 = 6;\n    }\n    else {\n        iVar2 = 2;\n        iVar20 = *(*0x20 + -0xd0) + -2;\n        uVar13 = 2;\ncode_r0x00412a7a:\n        puVar22 = puVar3 + 1;\n        uVar25 = uVar25 >> iVar2;\n        iVar12 = *(*0x20 + -0xd8);\n        uVar11 = iVar20 - 4;\n        while( true ) {\n            *(*0x20 + -0xb0) = uVar25;\n            uVar18 = uVar25 & 0xf | 0xf0;\n            uVar25 = uVar13 + 4;\n            if (uVar6 <= uVar13 + 4) break;\n            *puVar22 = uVar18;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            uVar18 = uVar11;\n            if (puVar10 == *(*0x20 + -0x28)) {\n                if (puVar10 == NULL) {\n                    if (uVar11 < 8) {\n                        uVar25 = uVar25 | iVar12 << (uVar18 & 0x3f);\n                        uVar11 = uVar11 + *(*0x20 + -0xc0);\n                        iVar12 = *(*0x20 + -0xd8);\n                    }\n                    uVar21 = uVar11 - 8;\n                }\n                else {\n                    uVar25 = uVar25 | -(uVar11 < 0x40) & *puVar10 << (uVar18 & 0x3f);\n                    uVar21 = uVar11 + *(*0x20 + -0xc0);\n                    if (uVar21 < 8) {\n                        uVar25 = uVar25 | **(*0x20 + -0x48) << (uVar21 & 0x3f);\n                        puVar10 = *(*0x20 + -0x48) + 1;\n                    }\n                    else {\n                        uVar21 = (uVar11 + *(*0x20 + -0xc0)) - 8;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    uVar7 = *(*0x20 + -0x68);\n                }\n            }\n            else if (uVar11 < 8) {\n                uVar25 = uVar25 | *puVar10 << (uVar18 & 0x3f);\n                puVar10 = puVar10 + 1;\n                uVar21 = uVar11;\n            }\n            else {\n                uVar21 = uVar11 - 8;\n            }\n            *(*0x20 + -0xb0) = uVar25;\n            uVar18 = uVar25 & 0xf | 0xf0;\n            uVar13 = uVar13 + 8;\n            if (uVar6 <= uVar13) {\n                puVar22 = puVar22 + 1;\n                uVar25 = uVar13;\n                break;\n            }\n            puVar22[1] = uVar18;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            puVar22 = puVar22 + 2;\n            uVar11 = uVar21;\n        }\n    }\ncode_r0x00412c20:\n    if (uVar6 < uVar25) {\n        uVar6 = -((uVar25 - uVar6) + -4);\n        uVar19 = (1 << (uVar6 & 0x3f) & -(uVar6 < 0x40)) - 1;\n        uVar18 = uVar18 & (uVar19 * '\\x10' | uVar19);\n    }\n    uVar6 = unaff_RBX >> 3;\n    if (uVar25 <= uVar6) {\n        *puVar22 = uVar18;\n        while( true ) {\n            puVar22 = puVar22 + 1;\n            uVar25 = uVar25 + 4;\n            if (uVar6 < uVar25) break;\n            *puVar22 = 0;\n        }\n        uVar18 = 0;\n    }\n    if (uVar25 == uVar6 + 2) {\n        *puVar22 = uVar18 | *puVar22 & 0xcc;\n        bVar26 = uVar23 == uVar7;\n    }\n    else {\n        bVar26 = uVar23 == uVar7;\n    }\ncode_r0x004126c1:\n    if (!bVar26) {\n        iVar20 = *(*(*(*0x20 + -0x70) * 8 + 0x56a638) + *(*0x20 + -0x60) * 8);\n        if (iVar20 == 0) {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = NULL;\n            uVar13 = 0;\n            puVar10 = NULL;\n            uVar6 = 0;\n        }\n        else {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = iVar20 + (puVar3 >> 5 & 0x1ffff);\n            uVar13 = puVar3 >> 3 & 3;\n            puVar10 = iVar20 + 0x1ffff;\n            uVar6 = *(*0x20 + -0x78);\n        }\n        uVar7 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar3;\n        if (uVar13 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0x33;\n            if (puVar10 == puVar22) {\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x90) = uVar7;\n                *(*0x20 + -0x138) = 0x412796;\n                puVar22 = fcn.00411480(uVar6);\n                uVar7 = *(*0x20 + -0x90);\n                puVar24 = *(*0x20 + -0x58);\n                uVar13 = 3;\n                puVar3 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            uVar7 = uVar7 - 2;\n            puVar3 = puVar3 + 1;\n        }\n        while( true ) {\n            *(*0x20 + -0x50) = puVar3;\n            uVar9 = uVar13;\n            if (uVar7 < 4) break;\n            *(*0x20 + -0x30) = puVar22;\n            *(*0x20 + -0xb8) = uVar7;\n            *(*0x20 + -0x138) = 0x4127fb;\n            uVar4 = fcn.00411600(uVar6);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0xe4) = uVar9;\n            *(*0x20 + -0xe8) = uVar6;\n            *(*0x20 + -0x20) = puVar10;\n            *(*0x20 + -0xe0) = uVar7 & 0xfffffffffffffffc;\n            *(*0x20 + -0x68) = uVar7 >> 2;\n            *(*0x20 + -0x138) = 0x41283c;\n            fcn.0045ddc0(uVar7 >> 2);\n            uVar7 = *(*0x20 + -0xb8) - *(*0x20 + -0xe0);\n            puVar3 = *(*0x20 + -0x50) + *(*0x20 + -0x68);\n            puVar24 = *(*0x20 + -0x58);\n            puVar22 = *(*0x20 + -0x18);\n            uVar13 = *(*0x20 + -0xe4);\n            puVar10 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0xe8);\n        }\n        if (uVar7 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0xcc;\n            if (uVar9 < 3) {\n                uVar9 = uVar9 + 1;\n            }\n            else if (puVar10 == puVar22) {\n                *(*0x20 + -0x138) = 0x4128d0;\n                puVar22 = fcn.00411480(uVar6);\n                puVar24 = *(*0x20 + -0x58);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar9 = 0;\n            }\n            if ((2 < uVar9) && (puVar22 == puVar10)) {\n                *(*0x20 + -0x138) = 0x4128ff;\n                fcn.00411480(uVar6);\n                puVar24 = *(*0x20 + -0x58);\n            }\n        }\n        *(*0x20 + -0x138) = 0x412925;\n        fcn.0045db00(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5859
    },
    "004177a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004177e5)\n// WARNING: Removing unreachable block (ram,0x0041780c)\n\nvoid fcn.004177a0(ulong param_1, ulong param_2, ulong param_3, int64_t param_4, uint64_t param_5)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x59820c = 2;\n            *0x598444 = 1;\n            *(*0x20 + -0x100) = param_1;\n            *0x598440 = *0x598440 & 0xffffff00 | 1;\n            *0x598e08 = *0x598ab0;\n            *(*0x20 + -0x1a8) = 0x41782d;\n            fcn.0045ed60();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar7 = **(in_GS_OFFSET + 0x28);\n            iVar9 = *(iVar7 + 0x30);\n            uVar5 = *(*0x20 + -0x1a0);\n            *(*0x20 + -0x170) = uVar5;\n            piVar1 = iVar9 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar9 = *(iVar7 + 0x30);\n            *(*0x20 + -0x30) = iVar9;\n            *(iVar9 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar9 + 200;\n            if (*0x598440 == 0) {\n                *(iVar9 + 200) = 0x4a6554;\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x4178a5;\n                fcn.0045d100(uVar5, 0x4a6554, param_4, param_5);\n            }\n            *(*0x20 + -0x20) = iVar7;\n            *(*(iVar7 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar7 + 0x30) + 0x90);\n            *(*0x20 + -0x1a8) = 0x4178da;\n            fcn.00437220(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0xf8) = 0x4184c0;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x170);\n            *(*0x20 + -0x1a0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1a8) = 0x41791f;\n            fcn.0045ac40();\n            *(*0x20 + -0x1a0) = 0x4b0288;\n            *(*0x20 + -0x1a8) = 0x417945;\n            fcn.0045ac40();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar7 = *(*(*0x20 + -0x20) + 0x30);\n            *(iVar7 + 0xf9) = 0;\n            *(*0x20 + -0x1a8) = 0x417985;\n            fcn.00437220(2);\n            if (*0x54a3d0 != '\\0') {\n                *(*0x20 + -0x1a8) = 0x4179a7;\n                fcn.0044eb60(0);\n            }\n            iVar9 = *(*0x20 + -0x30);\n            *(iVar9 + 0xd0) = 0;\n            if (*0x598440 == 0) {\n                *(iVar9 + 200) = 0;\n            }\n            else {\n                iVar7 = 0;\n                *(*0x20 + -0x1a8) = 0x4179df;\n                fcn.0045d100(iVar9, 0, param_4, param_5);\n            }\n            if (*0x59820c == 0) {\n                *0x598aa8 = *0x598aa0;\n                *0x59b7a0 = *0x59a098;\n                *(*0x20 + -0x1a8) = 0x417a1d;\n                fcn.0041d9e0(*(*0x20 + -0x100));\n                *(*0x20 + -0x1a8) = 0x417a25;\n                fcn.0045ed60();\n                *(*0x20 + -0x178) = *(*0x20 + -0x1a0);\n                *(*0x20 + -0x1a8) = 0x417a47;\n                fcn.0045edc0(*(*0x20 + -0x1a0), iVar7);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar7 = *(*0x20 + -0x1a0);\n                iVar4 = *(*0x20 + -0x198);\n                iVar9 = *(*0x20 + -0x178);\n                *0x598df0 = *0x598df0 + (iVar9 - *0x598df8);\n                uVar11 = iVar9 - *0x598df8;\n                *0x598de8 = iVar9;\n                if (uVar11 < 0) {\n                    LOCK();\n                    *0x59dc18 = *0x59dc18 + 1;\ncode_r0x00417b61:\n                    *0x59a108 = iVar7 * 1000000000 + iVar4;\n                    *0x59b798 = iVar9;\n                    *((*0x59b118 & 0xff) * 8 + 0x59a118) = *0x598df0;\n                    *((*0x59b118 & 0xff) * 8 + 0x59a918) = iVar7 * 1000000000 + iVar4;\n                    *0x59a110 = *0x59a110 + *0x598df0;\n                    iVar7 = (*0x598dd8 - *0x598dd0) * *0x598dc4;\n                    *(*0x20 + -0x168) = iVar7;\n                    iVar12 = (*0x598de8 - *0x598de0) * *0x598dc4;\n                    *(*0x20 + -0x148) = iVar12;\n                    *0x598d88 = *0x598ae0 + *0x598ad8 + *0x598ae8 + iVar7 + iVar12 + *0x598d88;\n                    *0x59b120 = *0x598d88 / ((iVar9 - *0x544e48) * *0x598210 + *0x544e50);\n                    *0x5445b4 = 0;\n                    if (*0x598d80 != '\\0') {\n                        *0x59b11c = *0x59b11c + 1;\n                    }\n                    *(*0x20 + -0x1a8) = 0x417c73;\n                    fcn.0040a080();\n                    *0x59b118 = *0x59b118 + 1;\n                    *(*0x20 + -0x1a8) = 0x417c85;\n                    fcn.0043b3a0();\n                    *(*0x20 + -0x1a8) = 0x417c93;\n                    fcn.0040a2a0();\n                    *(*0x20 + -0x1a8) = 0x417c98;\n                    fcn.00429960();\n                    *(*0x20 + -0x160) = *0x56a5c8;\n                    *(*0x20 + -0x15c) = 0;\n                    LOCK();\n                    *0x56a5d0 = *0x56a5d0 + 1;\n                    *(*0x20 + -0x15c) = 1;\n                    *(*0x20 + -0x1a0) = 0x4b0290;\n                    *(*0x20 + -0x1a8) = 0x417ccd;\n                    fcn.0045ac40();\n                    *(*0x20 + -0x1a8) = 0x417ce6;\n                    fcn.004299e0();\n                    *(*0x20 + -0x1a8) = 0x417ceb;\n                    fcn.00422480();\n                    *(*0x20 + -0x1a0) = 0x4b0258;\n                    *(*0x20 + -0x1a8) = 0x417cfb;\n                    fcn.0045ac40();\n                    *(*0x20 + -0x1a0) = 0x4b02a0;\n                    *(*0x20 + -0x1a8) = 0x417d1f;\n                    fcn.0045ac40();\n                    uVar14 = 0;\n                    uVar15 = 0;\n                    uVar16 = 0;\n                    uVar17 = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x15c) != '\\0') {\n                        *(*0x20 + -0x15c) = 0;\n                        LOCK();\n                        iVar4 = *0x56a5d0 + -1;\n                        bVar13 = *0x56a5d0 == 1;\n                        *0x56a5d0 = iVar4;\n                        if ((bVar13 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                            *(*0x20 + -0x108) = *0x598ab0;\n                            *(*0x20 + -0x110) = *0x56a610;\n                            *(*0x20 + -0x118) = *0x56a600;\n                            *(*0x20 + -0x100) = *0x56a618;\n                            *(*0x20 + -0x1a8) = 0x417dc5;\n                            uVar6 = *0x56a600;\n                            fcn.004346e0();\n                            *(*0x20 + -0x1a8) = 0x417dd6;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x417de7;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x1a8) = 0x417df8;\n                            fcn.00434fe0();\n                            uVar5 = *(*0x20 + -0x110);\n                            *(*0x20 + -0x1a8) = 0x417e14;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x1a8) = 0x417e25;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x417e32;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x1a8) = 0x417e45;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x417e53;\n                            fcn.004349e0(uVar5, uVar6);\n                            *(*0x20 + -0x1a8) = 0x417e65;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x417e6a;\n                            fcn.00434760();\n                        }\n                    }\n                    if (*0x59863c < 1) {\ncode_r0x00417ed2:\n                        *(*0x20 + -0x1a8) = 0x417ee5;\n                        fcn.004431a0(0);\n                        *(*0x20 + -0x1a8) = 0x417ef6;\n                        fcn.004431a0(0);\n                        iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                        *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x100) = *0x4c79a8 * *0x59b120;\n                    *(*0x20 + -0xe8) = 0;\n                    *(*0x20 + -0xe0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0x1a8) = 0x417ea9;\n                    fcn.004346e0();\n                    uVar8 = (*0x598dd0 - *0x598388) / 1000000;\n                    uVar11 = 0x17;\n                    while ((cVar3 = uVar8,  9 < uVar8 || (0x13 < uVar11))) {\n                        uVar8 = uVar8 / 10;\n                        if (0x17 < uVar11) goto code_r0x00418478;\n                        *(*0x20 + (uVar11 - 0xe8)) = cVar3 + uVar8 * -10 + '0';\n                        bVar13 = uVar11 == 0x15;\n                        uVar11 = uVar11 - 1;\n                        if (bVar13) {\n                            *(*0x20 + -0xd4) = 0x2e;\n                            uVar11 = 0x13;\n                        }\n                    }\n                    if (uVar11 < 0x18) {\n                        *(*0x20 + (uVar11 - 0xe8)) = cVar3 + '0';\n                        *(*0x20 + -0x108) = *0x59b118;\n                        *(*0x20 + -0x1a8) = 0x417fe5;\n                        uVar5 = fcn.00448800(-(uVar11 - 0x18));\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x120) = *0x20 + ((uVar11 & uVar11 - 0x18 >> 0x3f) - 0xe8);\n                        *(*0x20 + -0x1a8) = 0x417ffa;\n                        fcn.004346e0();\n                        *(*0x20 + -0x1a8) = 0x41800b;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x418018;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x1a8) = 0x418029;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x41803e;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x41804f;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x418065;\n                        fcn.00434de0(*(*0x20 + -0x100));\n                        *(*0x20 + -0x1a8) = 0x418076;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x41807b;\n                        fcn.00434760();\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -200) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd0) = *0x598dd8;\n                        *(*0x20 + -200) = *0x598de0;\n                        *(*0x20 + -0xc0) = *0x598de8;\n                        iVar7 = 0;\n                        iVar9 = *0x598dd0;\n                        while (iVar7 < 3) {\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x158) = *(*0x20 + iVar7 * 8 + -0xd0);\n                            if (iVar7 != 0) {\n                                *(*0x20 + -0x128) = iVar9;\n                                *(*0x20 + -0x1a8) = 0x418165;\n                                fcn.004346e0();\n                                *(*0x20 + -0x1a8) = 0x418176;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x1a8) = 0x41817b;\n                                fcn.00434760();\n                            }\n                            *(*0x20 + -0x1a8) = 0x4180e5;\n                            uVar5 = fcn.004194a0(0x18);\n                            *(*0x20 + -0x1a8) = 0x4180f8;\n                            uVar6 = fcn.00448800(0x18);\n                            *(*0x20 + -0x18) = uVar6;\n                            *(*0x20 + -0x120) = uVar5;\n                            *(*0x20 + -0x1a8) = 0x41810d;\n                            fcn.004346e0();\n                            *(*0x20 + -0x1a8) = 0x418125;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x41812a;\n                            fcn.00434760();\n                            iVar9 = *(*0x20 + -0x158);\n                            iVar7 = *(*0x20 + -0x140) + 1;\n                        }\n                        *(*0x20 + -0x1a8) = 0x41818f;\n                        fcn.004346e0();\n                        *(*0x20 + -0x1a8) = 0x4181a5;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x4181aa;\n                        fcn.00434760();\n                        *(*0x20 + -0x58) = 0;\n                        *(*0x20 + -0x50) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x40) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x58) = *(*0x20 + -0x168);\n                        *(*0x20 + -0x50) = *0x598ad8;\n                        *(*0x20 + -0x48) = *0x598ae8 + *0x598ae0;\n                        *(*0x20 + -0x40) = *0x598af0;\n                        *(*0x20 + -0x38) = *(*0x20 + -0x148);\n                        iVar7 = 0;\n                        while (iVar7 < 5) {\n                            *(*0x20 + -0x138) = iVar7;\n                            *(*0x20 + -0x150) = *(*0x20 + iVar7 * 8 + -0x58);\n                            if ((iVar7 == 2) || (iVar7 == 3)) {\n                                *(*0x20 + -0x1a8) = 0x4182b1;\n                                fcn.004346e0();\n                                *(*0x20 + -0x1a8) = 0x4182c5;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x1a8) = 0x4182ca;\n                                fcn.00434760();\n                            }\n                            else if (iVar7 != 0) {\n                                *(*0x20 + -0x1a8) = 0x4182e5;\n                                fcn.004346e0();\n                                *(*0x20 + -0x1a8) = 0x4182f6;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x1a8) = 0x4182fb;\n                                fcn.00434760();\n                            }\n                            *(*0x20 + -0x1a8) = 0x418237;\n                            uVar5 = fcn.004194a0(0x18);\n                            *(*0x20 + -0x1a8) = 0x41824a;\n                            uVar6 = fcn.00448800(0x18);\n                            *(*0x20 + -0x18) = uVar6;\n                            *(*0x20 + -0x120) = uVar5;\n                            *(*0x20 + -0x1a8) = 0x41825f;\n                            fcn.004346e0();\n                            *(*0x20 + -0x1a8) = 0x418274;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x418279;\n                            fcn.00434760();\n                            iVar7 = *(*0x20 + -0x138) + 1;\n                        }\n                        *(*0x20 + -0x108) = *0x598e00;\n                        *(*0x20 + -0x110) = *0x598e08;\n                        *(*0x20 + -0x118) = *0x598e10;\n                        *(*0x20 + -0x130) = *0x598e18;\n                        *(*0x20 + -0x128) = *0x598dc8;\n                        *(*0x20 + -0x1a8) = 0x418354;\n                        fcn.004346e0();\n                        *(*0x20 + -0x1a8) = 0x418365;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x418376;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x1a8) = 0x418387;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x418398;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x1a8) = 0x4183a9;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x4183ba;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x1a8) = 0x4183cb;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x4183d9;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x1a8) = 0x4183ea;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x4183f4;\n                        fcn.00434de0();\n                        *(*0x20 + -0x1a8) = 0x418405;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x1a8) = 0x41840a;\n                        fcn.00434760();\n                        if (*0x598d80 != '\\0') {\n                            *(*0x20 + -0x1a8) = 0x418418;\n                            fcn.004346e0();\n                            *(*0x20 + -0x1a8) = 0x418429;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x1a8) = 0x41842e;\n                            fcn.00434760();\n                        }\n                        *(*0x20 + -0x1a8) = 0x418433;\n                        fcn.004346e0();\n                        *(*0x20 + -0x1a8) = 0x418438;\n                        fcn.00434940();\n                        *(*0x20 + -0x1a8) = 0x41843d;\n                        fcn.00434760();\n                        cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                        *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                        if (cVar3 == '\\x01') {\n                            *(*0x20 + -0x1a8) = 0x418469;\n                            fcn.0040a2a0();\n                        }\n                        goto code_r0x00417ed2;\n                    }\n                    *(*0x20 + -0x1a8) = 0x418478;\n                    fcn.0045d480(0x18);\ncode_r0x00418478:\n                    *(*0x20 + -0x1a8) = 0x418485;\n                    fcn.0045d480(0x18);\n                }\n                else {\n                    if (uVar11 < 0x10) {\n                        param_4 = 0;\n                    }\n                    else {\n                        iVar12 = 0x3f;\n                        if (uVar11 != 0) {\n                            for (; uVar11 >> iVar12 == 0; iVar12 = iVar12 + -1) {\n                            }\n                        }\n                        if (uVar11 == 0) {\n                            iVar12 = -1;\n                        }\n                        param_4 = iVar12 + -3;\n                        if (param_4 * 0x10 < 0x2d0) {\n                            param_5 = ~-(iVar12 - 4U < 0x40);\n                            iVar12 = uVar11 >> ((iVar12 - 4U | param_5) & 0x3f);\n                            uVar11 = iVar12 + (((iVar12 >> 0x3f) >> 0x3c) + iVar12 >> 4) * -0x10;\n                        }\n                        else {\n                            param_4 = 0x2c;\n                            uVar11 = 0xf;\n                        }\n                    }\n                    param_4 = param_4 * 0x10;\n                    if (param_4 + uVar11 < 0x2d0) {\n                        piVar2 = (param_4 + uVar11) * 8 + 0x59c598;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00417b61;\n                    }\n                }\n                *(*0x20 + -0x1a8) = 0x41848f;\n                fcn.0045d4a0(0x2d0);\n            }\n            *(*0x20 + -0x1a8) = 0x4184a5;\n            param_1 = fcn.00432f60();\n        }\n        *(puVar10 + 8) = param_1;\n        *(puVar10 + -8) = 0x4184b1;\n        fcn.0045ad80();\n        param_1 = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6482
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00419a80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419a80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((unaff_EBX < *0x598d48) || (*0x598d4c <= unaff_EBX)) {\n        if ((unaff_EBX < *0x598d4c) || (*0x598d50 <= unaff_EBX)) {\n            puVar3 = *0x598260;\n            if (unaff_EBX == 0) {\n                for (; puVar3 != NULL; puVar3 = *puVar3) {\ncode_r0x00419c4c:\n                    fcn.0041bc60(0x598580);\n                }\n            }\n            else if (unaff_EBX == 1) {\n                fcn.0045ac40();\n            }\n            else {\n                if ((unaff_EBX < *0x598d50) || (*0x598d54 <= unaff_EBX)) {\n                    puVar3 = *0x598d54;\n                    if ((*0x598d54 <= unaff_EBX) && (unaff_EBX < *0x598d58)) {\n                        if (unaff_EBX - *0x598d54 < *0x544438) {\n                            iVar4 = *(*0x544430 + (unaff_EBX - *0x598d54) * 8);\n                            if (((*(iVar4 + 0x90) == 4) || (*(iVar4 + 0x90) == 3)) && (*(iVar4 + 0xa8) == 0)) {\n                                *(iVar4 + 0xa8) = *0x598d18;\n                            }\n                            fcn.0045ac40();\n                            return;\n                        }\n                        fcn.0045d480(*0x544438);\n                    }\n                    fcn.00432f60();\n                    goto code_r0x00419c4c;\n                }\n                fcn.0041a0c0();\n            }\n        }\n        else {\n            if (*0x543ae8 == NULL) {\n                iVar2 = 0;\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = **0x543ae8;\n                iVar2 = (*0x543ae8)[1];\n            }\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                fcn.00419ee0(*(*(iVar4 + iVar1 * 8) + 0x1f8));\n            }\n        }\n    }\n    else {\n        if (*0x543ae8 == NULL) {\n            iVar2 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = **0x543ae8;\n            iVar2 = (*0x543ae8)[1];\n        }\n        for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n            fcn.00419ee0(*(*(iVar4 + iVar1 * 8) + 0x1e8));\n        }\n    }\n    return;\n}\n",
        "token_count": 753
    },
    "0041b400": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b400(ulong arg1)\n\n{\n    uint64_t uVar1;\n    int32_t *arg1_00;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int32_t *piVar5;\n    ulong unaff_RDI;\n    char cVar6;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    int32_t *piVar11;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar4 = *in_RAX;\n    if (iVar4 == 0) {\n        uVar8 = 0;\n        bVar10 = false;\n    }\n    else {\n        uVar8 = in_R8 & 0xffffffffffffff00 | *(iVar4 + 0x28) == '\\x03';\n        bVar10 = *(iVar4 + 0x28) == '\\x05';\n    }\n    cVar6 = uVar8;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar6 == '\\0')) && (!bVar10)) {\n        iVar3 = 0;\n        iVar2 = fcn.00447960();\n        if (0 < iVar2) {\n            fcn.0041bc60(unaff_RBX);\n        }\n        if (0 < iVar3) {\n            fcn.0041bc60(unaff_RDI);\n        }\n        if ((in_RAX[7] != 0) && (0 < uVar8)) {\n            iVar4 = 0;\n            piVar5 = unaff_RSI;\n            piVar11 = unaff_RSI;\n            while( true ) {\n                iVar9 = in_RAX[7];\n                if (-1 < *piVar5) {\n                    iVar9 = in_RAX[8];\n                }\n                uVar1 = iVar9 + *piVar5;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    arg1_00 = unaff_RSI + iVar4 * 6;\n                    unaff_RSI = piVar11;\n                    fcn.0041fb20(arg1_00);\n                    piVar11 = unaff_RSI;\n                }\n                iVar4 = iVar4 + 1;\n                if (uVar8 <= iVar4) break;\n                piVar5 = piVar5 + 6;\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041c180(0);\n        uVar8 = uVar8 & 0xff;\n    }\n    cVar7 = uVar8;\n    if (in_RAX[9] != 0) {\n        fcn.0041c180(0);\n        cVar7 = cVar6;\n    }\n    if ((cVar7 != '\\0') || (bVar10)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 785
    },
    "0041be00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041be00(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    int64_t unaff_R14;\n    \ncode_r0x0041be00:\n    puVar10 = *0x20;\n    if (*0x20 + -0x10 < *(unaff_R14 + 0x10) || *0x20 + -0x10 == *(unaff_R14 + 0x10)) goto code_r0x0041c146;\n    puVar10 = *0x20 + -0x90;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    uVar8 = in_RAX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar8) goto code_r0x0041c136;\n    uVar11 = in_RAX + 0x800000000000 >> 0x16;\n    iVar5 = *(*(uVar8 * 8 + 0x56a638) + (uVar11 & 0xfffff) * 8);\n    if (iVar5 == 0) {\n        uVar11 = 0;\n        uVar8 = 0;\n        puVar13 = NULL;\n        puVar12 = NULL;\n    }\n    else {\n        puVar12 = iVar5 + (in_RAX >> 5 & 0x1ffff);\n        uVar8 = in_RAX >> 3 & 3;\n        puVar13 = iVar5 + 0x1ffff;\n    }\n    iVar5 = *(iVar5 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n    uVar9 = *(iVar5 + 0x68);\n    if (uVar9 == 0) goto code_r0x0041c125;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_RAX;\n    if (0x20000 < uVar9) {\n        if (*(iVar5 + 0x18) == in_RAX) {\n            if ((*(iVar5 + 0x62) & 1) != 0) {\n                unaff_RBX[2] = unaff_RBX[2] + uVar9;\n                return;\n            }\n            *(*0x20 + -0x50) = iVar5;\n            *(*0x20 + -0x28) = puVar13;\n            *(*0x20 + -0x58) = uVar11;\n            *(*0x20 + -0x60) = uVar8;\n            *(*0x20 + -0x10) = puVar12;\n            uVar9 = in_RAX;\ncode_r0x0041c096:\n            uVar9 = uVar9 + 0x20000;\n            if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar9) goto code_r0x0041c06e;\n            iVar2 = *unaff_RBX;\n            if (iVar2 == 0) {\n                bVar3 = false;\n            }\n            else {\n                uVar4 = *(iVar2 + 0x10);\n                if (uVar4 == 0xfd) {\n                    bVar3 = false;\n                }\n                else {\n                    if (0xfc < uVar4) goto code_r0x0041c118;\n                    *(iVar2 + 0x18 + uVar4 * 8) = uVar9;\n                    *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                    bVar3 = true;\n                }\n            }\n            if (!bVar3) {\n                *(*0x20 + -0x48) = uVar9;\n                *(*0x20 + -0x98) = 0x41c0e5;\n                fcn.00421960();\n                uVar9 = *(*0x20 + -0x48);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + -0x30);\n                uVar11 = *(*0x20 + -0x58);\n                uVar8 = *(*0x20 + -0x60);\n                puVar12 = *(*0x20 + -0x10);\n                iVar5 = *(*0x20 + -0x50);\n                puVar13 = *(*0x20 + -0x28);\n            }\n            goto code_r0x0041c096;\n        }\ncode_r0x0041c06e:\n        uVar9 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n        if (0x20000 < uVar9) {\n            uVar9 = 0x20000;\n        }\n    }\n    *(*0x20 + -0x40) = uVar9;\n    for (uVar4 = 0; uVar4 < uVar9; uVar4 = uVar4 + 8) {\n        uVar1 = *puVar12;\n        uVar6 = uVar8;\n        if (((uVar1 >> (uVar8 & 0x1f)) >> 4 & 1) == 0) break;\n        *(*0x20 + -0x38) = uVar4;\n        if ((((uVar1 >> (uVar6 & 0x1f) & 1) != 0) && (*(uVar4 + in_RAX) != 0)) && (uVar9 <= *(uVar4 + in_RAX) - in_RAX))\n        {\n            *(*0x20 + -0x54) = uVar6;\n            *(*0x20 + -0x18) = puVar12;\n            *(*0x20 + -0x20) = puVar13;\n            *(*0x20 + -0x5c) = uVar11;\n            *(*0x20 + -0x98) = 0x41bfb1;\n            iVar5 = fcn.00411320(uVar4);\n            if (iVar5 != 0) {\n                *(*0x20 + -0x98) = 0x41bfd3;\n                fcn.0041c440(*(*0x20 + -0x38), uVar9, uVar4);\n            }\n            uVar4 = *(*0x20 + -0x38);\n            uVar6 = *(*0x20 + -0x54);\n            uVar9 = *(*0x20 + -0x40);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + -0x30);\n            uVar11 = *(*0x20 + -0x5c);\n            puVar12 = *(*0x20 + -0x18);\n            puVar13 = *(*0x20 + -0x20);\n        }\n        if (uVar6 < 3) {\n            uVar8 = uVar6 + 1;\n        }\n        else if (puVar13 == puVar12) {\n            uVar7 = uVar11 & 0xffffffff;\n            *(*0x20 + -0x98) = 0x41c02e;\n            puVar12 = fcn.00411480(uVar11 & 0xffffffff);\n            uVar9 = *(*0x20 + -0x40);\n            in_RAX = *(*0x20 + -0x30);\n            uVar11 = uVar7;\n            uVar8 = uVar6;\n            uVar4 = *(*0x20 + -0x38);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        else {\n            puVar12 = puVar12 + 1;\n            uVar8 = 0;\n        }\n    }\n    unaff_RBX[2] = unaff_RBX[2] + uVar9;\n    unaff_RBX[3] = unaff_RBX[3] + uVar4;\n    return;\ncode_r0x0041c118:\n    *(*0x20 + -0x98) = 0x41c125;\n    fcn.0045d480(0xfd);\ncode_r0x0041c125:\n    unaff_RBX = 0x11;\n    *(*0x20 + -0x98) = 0x41c136;\n    fcn.00432f60();\ncode_r0x0041c136:\n    *(*0x20 + -0x98) = 0x41c145;\n    in_RAX = fcn.0045d4a0(0x40);\ncode_r0x0041c146:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + -8) = 0x41c155;\n    fcn.0045ad80();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    *0x20 = puVar10;\n    goto code_r0x0041be00;\n}\n",
        "token_count": 2145
    },
    "0041de00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041de2b)\n// WARNING: Removing unreachable block (ram,0x0041de32)\n// WARNING: Removing unreachable block (ram,0x0041de38)\n\nint64_t fcn.0041de00(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00406bc0();\n    iVar1 = fcn.00449240();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "004208e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004208e0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint8_t **in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x004208e0:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar2 = *(unaff_R14 + 0x30);\n        if (((*(piVar2 + 0x1b) != 0) || (*(piVar2 + 0x18) != 0)) || (*piVar2 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xa8) = *0x56a5c8;\n            uVar4 = puVar10[99];\n            *(*0x20 + -0xad) = uVar4;\n            if ((uVar4 == 1) && (*(puVar10 + 0x58) == *0x56a5c8 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x88) = puVar10;\n                *(*0x20 + -0xa4) = *0x56a5c8 - 1;\n                uVar12 = *0x56a5c8;\n                if (*0x54a3d0 != '\\0') {\n                    *(*0x20 + -0xd0) = 0x420991;\n                    fcn.0044fb00();\n                    puVar10 = *(*0x20 + -0x88);\n                    uVar12 = *(*0x20 + -0xa8);\n                }\n                LOCK();\n                *0x56a600 = *0x56a600 + *(puVar10 + 0x20);\n                uVar4 = puVar10[0x62];\n                *(*0x20 + -0xb0) = uVar4;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0x90) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0xa0) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar5 = uVar4;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x00421305:\n                                uVar18 = 0;\n                                *(*0x20 + -0xd0) = 0x421312;\n                                fcn.0045d4a0(0x40);\n                                goto code_r0x00421312;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x56a638) + puVar13 * 8);\n                            uVar18 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar18 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd0) = 0x421305;\n                                fcn.0045d4a0(0x40);\n                                goto code_r0x00421305;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar18 & 7));\n                        }\n                        if ((*0x598660 != 0) || (*0x598624 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x598660 != 0) {\n                                        *(*0x20 + -0x80) = uVar14;\n                                        *(*0x20 + -0x98) = iVar15;\n                                        *(*0x20 + -0xd0) = 0x42123e;\n                                        fcn.0042a380();\n                                        uVar14 = *(*0x20 + -0x80);\n                                        puVar10 = *(*0x20 + -0x88);\n                                        uVar8 = *(*0x20 + -0x90);\n                                        iVar15 = *(*0x20 + -0x98);\n                                    }\n                                    if (*0x598624 != 0) {\n                                        for (uVar5 = 0; uVar5 < uVar8; uVar5 = uVar5 + 4) {\n                                            *(iVar15 + uVar5) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x00420c66;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x50) = uVar8;\n                            *(*0x20 + -0xd0) = 0x420c32;\n                            fcn.004214a0();\n                            uVar8 = *(*0x20 + -0x50);\n                            puVar10 = *(*0x20 + -0x88);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x70) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x421192;\n                                    fcn.004214a0();\n                                    uVar8 = *(*0x20 + -0x70);\n                                    puVar10 = *(*0x20 + -0x88);\n                                }\n                            }\ncode_r0x00420c66:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x50) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x60) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x5981d8 == '\\0') {\n                                    *(*0x20 + -0x78) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x420cb9;\n                                    iVar17 = fcn.00401d20();\n                                    uVar14 = *(*0x20 + -0x50);\n                                    puVar10 = *(*0x20 + -0x88);\n                                    iVar15 = *(*0x20 + -0x60);\n                                    uVar8 = *(*0x20 + -0x78);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xac) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                if (*0x54a3d0 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x1648) = *(uVar14 + 0x1648) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd0) = 0x420d56;\n                                uVar7 = fcn.004254a0();\n                                uVar14 = *(*0x20 + -0x88);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd0) = 0x420d69;\n                                fcn.00410f60();\n                                iVar15 = *(*0x20 + -0x88);\n                                uVar4 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar4;\n                                *(*0x20 + -0xad) = uVar4;\n                                if (uVar4 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xa4)) {\n                                        uVar1 = *(*0x20 + -0xa8);\n                                        if ((uVar12 != uVar1 + 1) && (uVar12 != uVar1 + 3)) {\n                                            puVar10 = uVar1;\n                                            *(iVar15 + 0x58) = uVar1;\n                                            uVar14 = *(*0x20 + -0xb0);\n                                            uVar4 = *(*0x20 + -0xb0) >> 1;\n                                            if (uVar4 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xac) != 0) {\n                                                    if (*0x598628 < 1) {\n                                                        *(*0x20 + -0xd0) = 0x420f46;\n                                                        fcn.004243e0();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd0) = 0x420f38;\n                                                        fcn.00415820();\n                                                    }\n                                                    *(*0x20 + -0xd0) = 0x420f52;\n                                                    iVar15 = fcn.0042ba20();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar2 = iVar15 + 0x268;\n                                                    iVar15 = *piVar2;\n                                                    *piVar2 = *piVar2 + *(*0x20 + -0x90);\n                                                    *(*0x20 + -0xd0) = 0x420f7a;\n                                                    fcn.0042bb20(iVar15);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd0) = 0x420fc5;\n                                                    fcn.0042b3c0(uVar14 * 0xc0 + 0x56a938, (uVar1 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd0) = 0x420fe5;\n                                                fcn.0045d480(0x88);\ncode_r0x00420fe5:\n                                                *(*0x20 + -0xd0) = 0x420ff1;\n                                                fcn.0045d480(0x88);\ncode_r0x00420ff1:\n                                                *(*0x20 + -0xd0) = 0x420ffd;\n                                                fcn.0045d480(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xac) == 0) {\n                                                    cVar3 = *(*0x20 + 0x10);\ncode_r0x00420e40:\n                                                    if (cVar3 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x60) == 0) {\n                                                        *(*0x20 + -0xd0) = 0x420ee7;\n                                                        fcn.004243e0();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x60) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd0) = 0x420ed6;\n                                                            fcn.0042b3c0(uVar14 * 0xc0 + 0x56a8e8, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00420fe5;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd0) = 0x420e96;\n                                                        fcn.0042b3c0(uVar14 * 0xc0 + 0x56a938, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x00420ff1;\n                                                }\n                                                *(*0x20 + -0xae) = uVar4;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd0) = 0x420de9;\n                                                iVar15 = fcn.0042ba20();\n                                                if (*(*0x20 + -0xae) < 0x44) {\n                                                    piVar2 = iVar15 + *(*0x20 + -0xae) * 8 + 0x278;\n                                                    LOCK();\n                                                    *piVar2 = *piVar2 + *(*0x20 + -0xac);\n                                                    *(*0x20 + -0xd0) = 0x420e25;\n                                                    fcn.0042bb20();\n                                                    cVar3 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xa8);\n                                                    iVar15 = *(*0x20 + -0x88);\n                                                    uVar14 = *(*0x20 + -0xb0);\n                                                    goto code_r0x00420e40;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd0) = 0x42100a;\n                                            fcn.0045d480(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd0) = 0x42101b;\n                                        fcn.00432f60();\n                                    }\n                                }\n                                *(*0x20 + -0x58) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd0) = 0x421028;\n                                fcn.004346e0();\n                                *(*0x20 + -0xd0) = 0x421039;\n                                fcn.00434fe0();\n                                *(*0x20 + -0xd0) = 0x421046;\n                                fcn.00434ce0();\n                                *(*0x20 + -0xd0) = 0x421057;\n                                fcn.00434fe0();\n                                *(*0x20 + -0xd0) = 0x421065;\n                                fcn.00434ce0();\n                                *(*0x20 + -0xd0) = 0x421076;\n                                fcn.00434fe0();\n                                *(*0x20 + -0xd0) = 0x42107f;\n                                fcn.00434ce0();\n                                *(*0x20 + -0xd0) = 0x421085;\n                                fcn.00434940();\n                                *(*0x20 + -0xd0) = 0x42108a;\n                                fcn.00434760();\n                                *(*0x20 + -0xd0) = 0x42109b;\n                                fcn.00432f60();\n                            }\n                            *(*0x20 + -0xaa) = uVar16;\n                            *(*0x20 + -0x50) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd0) = 0x4210af;\n                            fcn.004346e0();\n                            *(*0x20 + -0xd0) = 0x4210c5;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xd0) = 0x4210cf;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xd0) = 0x4210e5;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xd0) = 0x4210f2;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xd0) = 0x421105;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xd0) = 0x42110f;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xd0) = 0x421125;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xd0) = 0x421132;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xd0) = 0x421137;\n                            fcn.00434940();\n                            *(*0x20 + -0xd0) = 0x42113c;\n                            fcn.00434760();\n                            *(*0x20 + -0xd0) = 0x42114d;\n                            fcn.00432f60();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x004213d0;\n                    uVar5 = *(puVar13 + 1) / uVar8;\n                    uVar18 = uVar5 & 7;\n                    puVar9 = (uVar5 >> 3) + *(puVar10 + 0x50);\n                    uVar4 = *puVar9;\n                    uVar12 = uVar4;\n                    if ((uVar4 & 1 << uVar18) == 0) {\n                        uVar5 = uVar5 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar5 <= *(puVar13 + 1)) {\n                                cVar3 = '\\0';\n                                goto code_r0x00420ae4;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar18 & 0x1f);\n                                cVar3 = '\\x01';\n                                goto code_r0x00420ae4;\n                            }\ncode_r0x00421312:\n                            puVar9 = puVar10;\n                        }\n                        cVar3 = '\\0';\ncode_r0x00420ae4:\n                        *(*0x20 + -0x68) = uVar5;\n                        *(*0x20 + -0xaf) = cVar3;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar5))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar3 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd0) = 0x4213a5;\n                                fcn.00425360(uVar8);\n                                cVar3 = *(*0x20 + -0xaf);\n                                uVar5 = *(*0x20 + -0x68);\n                                uVar8 = *(*0x20 + -0x90);\n                                uVar14 = *(*0x20 + -0xa0);\n                                unaff_R15 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd0) = 0x420aa5;\n                        fcn.00425360(uVar8);\n                        uVar8 = *(*0x20 + -0x90);\n                        uVar14 = *(*0x20 + -0xa0);\n                        puVar10 = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xa8);\n                    uVar4 = *(*0x20 + -0xb0);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x004213d5;\n        }\n        goto code_r0x0042145b;\n    }\n    goto code_r0x0042146d;\ncode_r0x004213d0:\n    *(*0x20 + -0xd0) = 0x4213d5;\n    fcn.00430980();\ncode_r0x004213d5:\n    *(*0x20 + -0x58) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd0) = 0x4213e5;\n    fcn.004346e0();\n    *(*0x20 + -0xd0) = 0x4213f6;\n    fcn.00434fe0();\n    *(*0x20 + -0xd0) = 0x421405;\n    fcn.00434ce0();\n    *(*0x20 + -0xd0) = 0x421416;\n    fcn.00434fe0();\n    *(*0x20 + -0xd0) = 0x421425;\n    fcn.00434ce0();\n    *(*0x20 + -0xd0) = 0x421436;\n    fcn.00434fe0();\n    *(*0x20 + -0xd0) = 0x42143f;\n    fcn.00434ce0();\n    *(*0x20 + -0xd0) = 0x421445;\n    fcn.00434940();\n    *(*0x20 + -0xd0) = 0x42144a;\n    fcn.00434760();\n    *(*0x20 + -0xd0) = 0x42145b;\n    fcn.00432f60();\ncode_r0x0042145b:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd0) = 0x42146c;\n    in_RAX = fcn.00432f60();\ncode_r0x0042146d:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x42147b;\n    fcn.0045ad80();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x004208e0;\n}\n",
        "token_count": 6210
    },
    "00423b00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00423b00(uchar param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    char cVar14;\n    uchar (*pauVar15) [16];\n    uchar uVar16;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar16 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar16;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar15 = NULL;\n                unaff_RBX = 0;\ncode_r0x00423c0b:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar15;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x70) = 0x423c25;\n                fcn.0040a080();\n                iVar7 = *(*0x20 + -0x38);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x70) = 0x423c51;\n                    iVar7 = fcn.00427540();\n                    if (iVar7 != 0) goto code_r0x00423c99;\n                    *(*0x20 + -0x70) = 0x423c65;\n                    cVar5 = fcn.004240e0();\n                    if (cVar5 == '\\0') {\n                        *(*0x20 + -0x70) = 0x423c75;\n                        fcn.0040a2a0();\n                        return 0;\n                    }\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x70) = 0x423c90;\n                    iVar7 = fcn.00427540();\n                    if (iVar7 != 0) goto code_r0x00423c99;\n                }\n                else {\n                    uVar8 = *(*0x20 + -0x40);\ncode_r0x00423c99:\n                    *(*0x20 + -0x40) = uVar8;\n                    *(*0x20 + -0x38) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x70) = 0x423cb7;\n                        iVar7 = fcn.00423a00();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x70) = 0x423ccb;\n                    fcn.0040a2a0();\n                    pauVar15 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x40);\ncode_r0x00423cda:\n                    *(*0x20 + -0x48) = pauVar15;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x40) = unaff_RBX;\n                    *pauVar15 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar15[1] = 0;\n                    *(pauVar15[1] + 8) = iVar7;\n                    uVar8 = *(*0x20 + 0x10);\n                    *pauVar15[2] = uVar8;\n                    *pauVar15[6] = 0;\n                    pauVar15[6][2] = 0;\n                    *(pauVar15[6] + 8) = 0;\n                    *(pauVar15[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar15[6][4] = 0;\n                    *pauVar15[3] = 0;\n                    *(pauVar15[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar15[6] + 3;\n                    pauVar15[6][3] = 0;\n                    *(*0x20 + -0x70) = 0x423d49;\n                    cVar5 = fcn.004238a0(uVar8);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x48);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    cVar5 = *(*0x20 + 0x18);\n                    if (cVar5 == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00423e26:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x70) = 0x423e3f;\n                            uVar8 = fcn.004254a0();\n                            *(*(*0x20 + -0x48) + 0x50) = uVar8;\n                            *(*0x20 + -0x70) = 0x423e51;\n                            uVar8 = fcn.004257c0();\n                            iVar7 = *(*0x20 + -0x48);\n                            *(iVar7 + 0x48) = uVar8;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10128);\n                            **(*0x20 + -0x20) = 1;\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar5 = *(*0x20 + 0x18);\n                            goto code_r0x00423e8c;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x52f2e0);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x530540);\n                                goto code_r0x00423e26;\n                            }\n                            goto code_r0x0042407a;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x00423e8c:\n                        iVar11 = *(*0x20 + -0x40);\n                        cVar14 = cVar5;\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x70) = 0x423ea5;\n                            fcn.004154c0(iVar11, iVar7);\n                            iVar11 = *(*0x20 + -0x40);\n                            LOCK();\n                            *0x59a0a0 = *0x59a0a0 - iVar11;\n                            cVar5 = *(*0x20 + 0x18);\n                            iVar7 = *(*0x20 + -0x48);\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar14 = *(*0x20 + 0x18);\n                        }\n                        if (cVar5 == '\\0') {\n                            LOCK();\n                            *0x59a098 = *0x59a098 + uVar12;\n                        }\n                        if (cVar5 != '\\0' || cVar14 != '\\0') {\n                            *(*0x20 + -0x70) = 0x423f0d;\n                            fcn.0042b960(iVar11, iVar7);\n                        }\n                        *(*0x20 + -0x70) = 0x423f19;\n                        piVar9 = fcn.0042ba20();\n                        iVar7 = *(*0x20 + -0x40);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x70) = 0x423f8e;\n                        fcn.0042bb20(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        *(*0x20 + -0x70) = 0x423fa6;\n                        fcn.004237a0(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x00424048:\n                            *(*0x20 + -0x70) = 0x42404d;\n                            fcn.0045cb80();\n                            return *(*0x20 + -0x48);\n                        }\n                        uVar12 = *(*(*0x20 + -0x48) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x56a638) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10158) = *(*(*0x20 + 8) + 0x10158) + *(*0x20 + 0x10);\n                            goto code_r0x00424048;\n                        }\n                        *(*0x20 + -0x70) = 0x42407a;\n                        fcn.0045d4a0(0x40);\ncode_r0x0042407a:\n                        *(*0x20 + -0x70) = 0x42407f;\n                        fcn.00430980();\n                    }\n                    *(*0x20 + -0x70) = 0x42408c;\n                    fcn.0045d480(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x70) = 0x42409d;\n                fcn.00432f60();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x70) = 0x423b67;\n                    fcn.0040a080();\n                    uVar8 = *(*0x20 + 8);\n                    *(*0x20 + -0x70) = 0x423b75;\n                    uVar6 = fcn.004286e0();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = uVar8;\n                    *(*0x20 + -0x70) = 0x423b92;\n                    fcn.0040a2a0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x70) = 0x423ba5;\n                iVar7 = fcn.004282c0();\n                if (iVar7 == 0) {\n                    pauVar15 = NULL;\n                    goto code_r0x00423c0b;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0x1228),  iVar4 == 0)) {\n                    pauVar15 = NULL;\ncode_r0x00423bea:\n                    if (pauVar15 == NULL) goto code_r0x00423c0b;\n                    goto code_r0x00423cda;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar15 = *(iVar11 + 0x1228 + iVar4 * 8);\n                    *(iVar11 + 0x1228) = unaff_RDI;\n                    goto code_r0x00423bea;\n                }\n            }\n            uVar16 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x70) = 0x4240aa;\n            in_RAX = fcn.0045d480(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar16;\n        *(puVar13 + -8) = 0x4240c5;\n        fcn.0045f460();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3893
    },
    "00424560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424560(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1_00;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10128) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10158) = *(in_RAX + 0x10158) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x56a638) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00424656:\n                        iVar6 = *(unaff_RBX + 0x20);\n                        if (arg1 == '\\0') {\n                            LOCK();\n                            *0x59a098 = *0x59a098 + iVar6 * -0x2000;\n                        }\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x2b) = arg1;\n                        *(*0x20 + -0x10) = iVar6 * 0x2000;\n                        if (arg1 != '\\0') {\n                            *(*0x20 + -0x50) = 0x42469f;\n                            fcn.0042b960();\n                        }\n                        *(*0x20 + -0x50) = 0x4246ab;\n                        iVar6 = fcn.0042ba20();\n                        uVar3 = *(*0x20 + -0x2b);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x50) = 0x42470d;\n                        fcn.0042bb20(uVar7);\n                        arg1_00 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x50) = 0x424731;\n                        fcn.00427800(arg1_00);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x00424774:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a70) = *(iVar6 + 0x16a70) - *(iVar6 + 0x16a40);\n                            *puVar5 = *(iVar6 + 0x16a58);\n                            *(iVar6 + 0x16a58) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0x1228);\n                        if (0x7f < uVar7) goto code_r0x00424774;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0x1230 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0x1228) = *(iVar6 + 0x1228) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x50) = 0x4247b3;\n                        fcn.0045d480(0x80);\n                        goto code_r0x004247b3;\n                    }\n                    goto code_r0x004247d6;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00424656;\ncode_r0x004247b3:\n                    *(*0x20 + -0x50) = 0x4247c5;\n                    fcn.00432f60();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x50) = 0x4247d6;\n                fcn.00432f60();\ncode_r0x004247d6:\n                *(*0x20 + -0x50) = 0x4247e5;\n                in_RAX = fcn.0045d4a0(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10128);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x50) = 0x424806;\n            fcn.004346e0();\n            arg1._0_1_ = uVar7;\n            *(*0x20 + -0x50) = 0x424817;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x424825;\n            fcn.00434fa0();\n            *(*0x20 + -0x50) = 0x424836;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x424845;\n            fcn.00434e40();\n            *(*0x20 + -0x50) = 0x424856;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x424865;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x424876;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x424885;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x424896;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x4248a5;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x4248aa;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x4248af;\n            fcn.00434760();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x4248c5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = arg1;\n        *(puVar8 + -8) = 0x4248d9;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_1_ = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2171
    },
    "00425360": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425360(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x425410;\n                fcn.004159c0(uVar2);\n                *(*0x20 + -0x38) = 0x42541e;\n                fcn.0040a080();\n                *0x570fa0 = *0x570fa0 - *0x570f70;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x570f88;\n                *(*0x20 + -0x38) = 0x425458;\n                *0x570f88 = puVar3;\n                fcn.0040a2a0();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x4253ac;\n                fcn.00429d20(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x4253ba;\n                fcn.0040a080();\n                *0x570fe8 = *0x570fe8 - *0x570fb8;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x570fd0;\n                *(*0x20 + -0x38) = 0x4253f3;\n                *0x570fd0 = puVar3;\n                fcn.0040a2a0();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425473;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x425488;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 764
    },
    "00429560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00429560(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x4295ad;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4295b8;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 304
    },
    "004295c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.004295c0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = in_R8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = unaff_RDI;\n            if (*0x543ab0 == 0) {\n                *(*0x20 + -0x68) = 0x429617;\n                iVar2 = fcn.00415260();\n                if (*0x598440 != 0) {\n                    unaff_RDI = 0x543ab0;\n                    *(*0x20 + -0x68) = 0x429637;\n                    fcn.0045cfe0(arg1, in_RDX, in_R8, in_R9);\n                    iVar2 = *0x543ab0;\n                }\n                *0x543ab0 = iVar2;\n                if (*0x543ab0 != 0) {\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    in_R8 = *(*0x20 + 0x30);\n                    goto code_r0x0042966b;\n                }\n            }\n            else {\ncode_r0x0042966b:\n                uVar3 = 0;\n                for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                    uVar3 = (*(arg1 + iVar2 * 8) + uVar3) * 0x401;\n                    uVar3 = uVar3 >> 6 ^ uVar3;\n                }\n                uVar3 = (uVar3 + unaff_RBX) * 0x401;\n                in_R9 = (uVar3 >> 6 ^ uVar3) * 9;\n                in_R9 = in_R9 >> 0xb ^ in_R9;\n                in_RDX = in_R9 / 179999;\n                uVar3 = in_R9 % 179999;\n                if (uVar3 < 179999) {\n                    *(*0x20 + -0x30) = in_R9;\n                    *(*0x20 + -0x18) = uVar3;\n                    for (puVar4 = *(*0x543ab0 + uVar3 * 8); puVar4 != NULL; puVar4 = *puVar4) {\n                        if (((puVar4[2] == in_RAX) && (puVar4[3] == in_R9)) && (puVar4[4] == unaff_RBX)) {\n                            in_RDX = puVar4[5];\n                            if (0x20 < in_RDX) goto code_r0x0042989d;\n                            *(*0x20 + -0x20) = puVar4;\n                            *(*0x20 + -0x68) = 0x429752;\n                            cVar1 = fcn.00429920(in_RDX);\n                            if (cVar1 != '\\0') {\n                                return *(*0x20 + -0x20);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + 0x30);\n                            in_R9 = *(*0x20 + -0x30);\n                            puVar4 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                    if (in_R8 == '\\0') {\n                        return NULL;\n                    }\n                    *(*0x20 + -0x68) = 0x4297b4;\n                    puVar4 = fcn.00429440();\n                    in_RDX = puVar4[5];\n                    if (in_RDX < 0x21) {\n                        if (*(*0x20 + -0x10) < in_RDX) {\n                            in_RDX = *(*0x20 + -0x10);\n                        }\n                        if (*(*0x20 + 0x18) != puVar4 + 6) {\n                            *(*0x20 + -0x28) = puVar4;\n                            *(*0x20 + -0x68) = 0x4297f9;\n                            fcn.0045ddc0(in_RDX << 3);\n                            puVar4 = *(*0x20 + -0x28);\n                        }\n                        puVar4[3] = *(*0x20 + -0x30);\n                        puVar4[4] = *(*0x20 + 0x10);\n                        iVar2 = *(*0x20 + -0x18);\n                        *puVar4 = *(*0x543ab0 + iVar2 * 8);\n                        *(*0x543ab0 + iVar2 * 8) = puVar4;\n                        if (*(*0x20 + 8) == 1) {\n                            puVar4[1] = *0x598308;\n                            *0x598308 = puVar4;\n                        }\n                        else if (*(*0x20 + 8) == 3) {\n                            puVar4[1] = *0x5983d0;\n                            *0x5983d0 = puVar4;\n                        }\n                        else {\n                            puVar4[1] = *0x598280;\n                            *0x598280 = puVar4;\n                        }\n                        return puVar4;\n                    }\n                    *(*0x20 + -0x68) = 0x42989d;\n                    fcn.0045d5a0(arg1, in_RDX);\ncode_r0x0042989d:\n                    *(*0x20 + -0x68) = 0x4298a7;\n                    fcn.0045d5a0(arg1, in_RDX);\n                }\n                arg1 = 179999;\n                *(*0x20 + -0x68) = 0x4298b1;\n                fcn.0045d480(179999);\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x68) = 0x4298c5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8;\n        *(puVar5 + -8) = 0x4298e9;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8 = puVar5[0x30];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1912
    },
    "0042ba20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042ba20(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (iVar3 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x42ba79;\n                fcn.0040a080(in_RAX + 0xde8);\n                in_RAX = *(*0x20 + 8);\ncode_r0x0042ba7e:\n                uVar4 = *(in_RAX + 0xde0) % 3;\n                if (uVar4 < 3) {\n                    return in_RAX + uVar4 * 0x4a0;\n                }\n                *(*0x20 + -0x28) = 0x42babe;\n                fcn.0045d480(3);\n            }\n            else {\n                LOCK();\n                piVar1 = iVar3 + 0x26d4;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + 1;\n                uVar4 = iVar2 + 1;\n                if ((uVar4 & 1) != 0) goto code_r0x0042ba7e;\n            }\n            *(*0x20 + -0xc) = uVar4;\n            *(*0x20 + -0x28) = 0x42bac7;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x42bad8;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x42bae5;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x42baea;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x42baef;\n            fcn.00434760();\n            *(*0x20 + -0x28) = 0x42bb05;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42bb10;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 697
    },
    "0042d7e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d7e0(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x543a68;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42d83e;\n            fcn.0042f720();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42d885;\n            iVar3 = fcn.0042f5c0();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42d8b0;\n            fcn.0042e020(0x21);\n            uVar5 = *0x5983a8;\n            if (*0x5983a8 < 0x106) {\n                *(*0x20 + -0x18) = *0x5983a8;\n                *(*0x20 + -0x78) = 0x42d8e5;\n                fcn.0045ddc0(*0x5983a8);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042da65;\n                    *(uVar5 + 0x599020) = *((*(iVar4 + 0x59920a) >> 4) + 0x4a8168);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042da55;\n                    *(uVar5 + 0x599021) = *((*(iVar4 + 0x59920a) & 0xf) + 0x4a8168);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x599020;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42d9d3;\n                        fcn.0042f920();\n                        *(*0x20 + -0x78) = 0x42d9ec;\n                        fcn.0045e900();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x5981c2 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42da17;\n                        fcn.004346e0();\n                        *(*0x20 + -0x78) = 0x42da28;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x78) = 0x42da2d;\n                        fcn.00434760();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x599020) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42da55;\n                fcn.0045d480(0x20b);\ncode_r0x0042da55:\n                *(*0x20 + -0x78) = 0x42da65;\n                fcn.0045d480(0x20b);\ncode_r0x0042da65:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42da72;\n                fcn.0045d480(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42da7c;\n            fcn.0045d4e0(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42da85;\n        fcn.0045ad80();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1536
    },
    "00433920": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00433920(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00433920:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar8 == 0) || (*(iVar8 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar5) {\n                                    bVar11 = *(iVar5 + 800) == iVar6;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x433a38;\n                                cVar2 = fcn.00437140(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar5 = *(*0x20 + -0x20);\n                                    iVar6 = *(*0x20 + -0x50);\n                                    iVar4 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + 8);\n                                    *(iVar8 + 0xb1) = 0x101;\n                                    *(iVar8 + 0x10) = 0xfffffffffffffade;\n                                    iVar8 = *(iVar8 + 0x30);\n                                    *(*0x20 + -0x10) = iVar8;\n                                    iVar6 = *(iVar8 + 800);\n                                    *(*0x20 + -0x4c) = iVar6;\n                                    if (*(*0x20 + -0x20) == iVar8) {\n                                        bVar11 = iVar6 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x433aa5;\n                                    fcn.00436d80(2);\n                                    if ((*0x598658 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x433abd;\n                                        fcn.0045ed60();\n                                        iVar4 = *(*0x20 + -0x38);\n                                        if (iVar4 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x433aee;\n                                            fcn.0042fc20();\n                                            iVar4 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    iVar6 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00433c10;\n                        }\n                        if (uVar10 < 3) goto code_r0x00433b7a;\n                    }\ncode_r0x00433bd2:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x433be6;\n                    cVar2 = fcn.00437140(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar6 = *(*0x20 + -0x50);\n                    iVar4 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x433b9a;\n                            cVar2 = fcn.004376e0(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x00433bd2;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar5 = *(*0x20 + -0x20);\n                            iVar6 = *(*0x20 + -0x50);\n                            iVar4 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x00433b7a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00433d35;\n                        }\n                    }\n                }\ncode_r0x00433c10:\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x433c2c;\n                    fcn.0045ed60();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x433c55;\n                fcn.0045ed60();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x433c85;\n                    fcn.0045cb60();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4b0448;\n                    *(*0x20 + -0x78) = 0x433cb6;\n                    fcn.0045ac40();\n                    *(*0x20 + -0x78) = 0x433ccf;\n                    fcn.0045ed60();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x50);\n                iVar5 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x00433e4b;\n    }\n    goto code_r0x00433e5d;\ncode_r0x00433d35:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x58) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x433d55;\n    fcn.004346e0();\n    *(*0x20 + -0x78) = 0x433d66;\n    fcn.00434fe0();\n    *(*0x20 + -0x78) = 0x433d70;\n    fcn.00434f60();\n    *(*0x20 + -0x78) = 0x433d85;\n    fcn.00434fe0();\n    *(*0x20 + -0x78) = 0x433d8f;\n    fcn.00434de0();\n    *(*0x20 + -0x78) = 0x433da5;\n    fcn.00434fe0();\n    *(*0x20 + -0x78) = 0x433db0;\n    fcn.00434ce0();\n    *(*0x20 + -0x78) = 0x433db5;\n    fcn.00434940();\n    *(*0x20 + -0x78) = 0x433dba;\n    fcn.00434760();\n    *(*0x20 + -0x54) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x433dda;\n    fcn.004346e0();\n    *(*0x20 + -0x78) = 0x433deb;\n    fcn.00434fe0();\n    *(*0x20 + -0x78) = 0x433df5;\n    fcn.00434f60();\n    *(*0x20 + -0x78) = 0x433e06;\n    fcn.00434fe0();\n    *(*0x20 + -0x78) = 0x433e10;\n    fcn.00434de0();\n    *(*0x20 + -0x78) = 0x433e25;\n    fcn.00434fe0();\n    *(*0x20 + -0x78) = 0x433e30;\n    fcn.00434ce0();\n    *(*0x20 + -0x78) = 0x433e35;\n    fcn.00434940();\n    *(*0x20 + -0x78) = 0x433e3a;\n    fcn.00434760();\n    *(*0x20 + -0x78) = 0x433e4b;\n    fcn.00432f60();\ncode_r0x00433e4b:\n    *(*0x20 + -0x78) = 0x433e5c;\n    in_RAX = fcn.00432f60();\ncode_r0x00433e5d:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x433e67;\n    fcn.0045f460();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00433920;\n}\n",
        "token_count": 3010
    },
    "004341a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004341a0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x52c270)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x434247;\n            iVar4 = fcn.0044abe0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = iVar4;\n            *(*0x20 + -0x78) = 0x434269;\n            iVar3 = fcn.0044bb00(0);\n            if (iVar3 != -1) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x20) = iVar4 + 0x2b;\n            if (*(iVar4 + 0x2b) < 2) {\n                iVar4 = 0;\n            }\n            else {\n                iVar7 = iVar4 + 0x2b + *(iVar4 + 0x20) * 4 + 1;\n                if ((iVar7 >> 2 & 1) != 0) {\n                    if ((iVar4 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x78) = 0x4342ba;\n                        fcn.004346e0();\n                        *(*0x20 + -0x78) = 0x4342cb;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x78) = 0x4342d5;\n                        fcn.00434f60();\n                        *(*0x20 + -0x78) = 0x4342da;\n                        fcn.00434940();\n                        *(*0x20 + -0x78) = 0x4342df;\n                        fcn.00434760();\n                        iVar7 = *(*0x20 + -0x38);\n                    }\n                    iVar7 = iVar7 + 4;\n                }\n                iVar4 = *(iVar7 + 8);\n            }\n            if ((iVar4 == 0) || (iVar4 == 0x4c7a08)) {\n                return 0;\n            }\n            iVar7 = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x434326;\n            uVar5 = fcn.0044b2c0();\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x48) = iVar7;\n            iVar4 = *(*0x20 + -0x18);\n            if (*(iVar4 + 0x2b) < 4) {\n                iVar4 = 0;\n            }\n            else {\n                iVar8 = *(*0x20 + -0x20) + *(iVar4 + 0x20) * 4 + 1;\n                if ((iVar8 >> 2 & 1) != 0) {\n                    if ((iVar4 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x40) = iVar8;\n                        *(*0x20 + -0x78) = 0x43436f;\n                        fcn.004346e0(iVar4, iVar8, iVar4);\n                        *(*0x20 + -0x78) = 0x434385;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x78) = 0x43438f;\n                        fcn.00434f60();\n                        *(*0x20 + -0x78) = 0x434394;\n                        fcn.00434940();\n                        *(*0x20 + -0x78) = 0x434399;\n                        fcn.00434760();\n                        uVar5 = *(*0x20 + -0x28);\n                        iVar8 = *(*0x20 + -0x40);\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                    iVar8 = iVar8 + 4;\n                }\n                iVar4 = *(iVar8 + 0x18);\n            }\n            if (iVar4 == 0) goto code_r0x00434420;\n            *(*0x20 + -0x30) = iVar4;\n            unaff_RBX = *(*0x20 + -0x10);\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x4343e5;\n            iVar3 = fcn.0044b9c0(2);\n            if (iVar3 < 0) {\n                iVar7 = *(*0x20 + -0x48);\n                uVar5 = *(*0x20 + -0x28);\n                goto code_r0x00434420;\n            }\n            uVar6 = iVar3;\n            if (uVar6 < 0x100000) {\n                iVar4 = uVar6 * 5;\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + uVar6 * 0x14);\n                iVar7 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x434414;\n                uVar5 = fcn.0044b420(uVar1);\ncode_r0x00434420:\n                *(*0x20 + -0x48) = iVar7;\n                *(*0x20 + -0x28) = uVar5;\n                if (iVar7 < 8) {\n                    cVar2 = '\\0';\n                }\n                else {\n                    *(*0x20 + -0x78) = 0x434445;\n                    cVar2 = fcn.00402180(8, iVar4);\n                    iVar7 = *(*0x20 + -0x48);\n                }\n                if (cVar2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x43447b;\n                        cVar2 = fcn.00402180(0x11, iVar4);\n                        iVar7 = *(*0x20 + -0x48);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 == '\\0') {\n                    if (iVar7 < 8) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x4344a6;\n                        cVar2 = fcn.00402180(8, iVar4);\n                    }\n                    if (cVar2 == '\\0') {\n                        return 1;\n                    }\n                }\n                return 0;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x43451f;\n            in_RAX = fcn.0045d480(0x100000);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x434539;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2086
    },
    "00436d80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00436d80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x436deb;\n                fcn.004346e0();\n                *(*0x20 + -0x48) = 0x436dfc;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436e06;\n                fcn.00434f60();\n                *(*0x20 + -0x48) = 0x436e17;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436e25;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x436e36;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436e45;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x436e4a;\n                fcn.00434940();\n                *(*0x20 + -0x48) = 0x436e4f;\n                fcn.00434760();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x436e75;\n                fcn.004346e0();\n                *(*0x20 + -0x48) = 0x436e86;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436e90;\n                fcn.00434f60();\n                *(*0x20 + -0x48) = 0x436ea5;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436eaf;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x436ec5;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436ed0;\n                fcn.00434ce0();\n                *(*0x20 + -0x48) = 0x436ed5;\n                fcn.00434940();\n                *(*0x20 + -0x48) = 0x436eda;\n                fcn.00434760();\n                *(*0x20 + -0x2c) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x436efa;\n                fcn.004346e0();\n                *(*0x20 + -0x48) = 0x436f0b;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436f15;\n                fcn.00434f60();\n                *(*0x20 + -0x48) = 0x436f26;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436f30;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x436f45;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x436f50;\n                fcn.00434ce0();\n                *(*0x20 + -0x48) = 0x436f55;\n                fcn.00434940();\n                *(*0x20 + -0x48) = 0x436f5a;\n                fcn.00434760();\n                *(*0x20 + -0x48) = 0x436f6b;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x48) = 0x436f70;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x436f85;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x436f8f;\n            fcn.00434f60();\n            *(*0x20 + -0x48) = 0x436fa5;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x436fb0;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x436fc5;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x436fd0;\n            fcn.00434e40();\n            *(*0x20 + -0x48) = 0x436fd5;\n            fcn.00434940();\n            *(*0x20 + -0x48) = 0x436fda;\n            fcn.00434760();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x28) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x437005;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x437016;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x437025;\n            fcn.00434f60();\n            *(*0x20 + -0x48) = 0x437036;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x437045;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x437056;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x437065;\n            fcn.00434ce0();\n            *(*0x20 + -0x48) = 0x43706a;\n            fcn.00434940();\n            *(*0x20 + -0x48) = 0x43706f;\n            fcn.00434760();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x43708f;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x4370a5;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x4370af;\n            fcn.00434f60();\n            *(*0x20 + -0x48) = 0x4370c5;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x4370cf;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x4370e5;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x4370f0;\n            fcn.00434ce0();\n            *(*0x20 + -0x48) = 0x4370f5;\n            fcn.00434940();\n            *(*0x20 + -0x48) = 0x4370fa;\n            fcn.00434760();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x43710b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43711e;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2280
    },
    "00437140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437140(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                bVar2 = unaff_EBX == *(in_RAX + 0x90);\n                if (bVar2) {\n                    *(in_RAX + 0x90) = arg1;\n                }\n                return arg1 & 0xffffff00 | bVar2;\n            }\n            *(*0x20 + -0x20) = 0x437193;\n            fcn.004346e0();\n            *(*0x20 + -0x20) = 0x4371a5;\n            fcn.00434fe0();\n            *(*0x20 + -0x20) = 0x4371b0;\n            fcn.00434e40();\n            *(*0x20 + -0x20) = 0x4371c5;\n            fcn.00434fe0();\n            *(*0x20 + -0x20) = 0x4371d0;\n            fcn.00434e40();\n            *(*0x20 + -0x20) = 0x4371d5;\n            fcn.00434940();\n            *(*0x20 + -0x20) = 0x4371da;\n            fcn.00434760();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4371eb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4371fe;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 665
    },
    "00437a40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437a40(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint32_t uVar8;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xd8) < 1) {\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x60) = 0x437a7c;\n                fcn.0040a080();\n                uVar1 = *0x544e00;\n                *0x544e04 = *0x598210;\n                *0x544e00 = 1;\n                *(*0x20 + -0x60) = 0x437a9b;\n                fcn.004402e0(uVar1);\n                *(*(*(*(*0x20 + -0x18) + 0x30) + 0xa0) + 4) = 3;\n                *0x544e04 = *0x544e04 + -1;\n                *(*0x20 + -0x10) = *0x544450;\n                *(*0x20 + -0x30) = *0x544458;\n                uVar9 = *0x544450;\n                uVar5 = *0x544458;\n                for (iVar3 = 0; iVar3 < uVar5; iVar3 = iVar3 + 1) {\n                    iVar4 = *(uVar9 + iVar3 * 8);\n                    if (*(iVar4 + 4) == 2) {\n                        LOCK();\n                        bVar10 = *(iVar4 + 4) == 2;\n                        if (bVar10) {\n                            *(iVar4 + 4) = 3;\n                        }\n                        uVar8 = bVar10;\n                    }\n                    else {\n                        uVar8 = 0;\n                    }\n                    unaff_RSI = uVar8;\n                    if (uVar8 != '\\0') {\n                        if (*0x54a3d0 != '\\0') {\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x28) = iVar4;\n                            *(*0x20 + -0x60) = 0x437b37;\n                            fcn.00450180(uVar9, uVar5, 3);\n                            *(*0x20 + -0x60) = 0x437b45;\n                            fcn.0044f9e0();\n                            uVar9 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x30);\n                            iVar4 = *(*0x20 + -0x28);\n                            iVar3 = *(*0x20 + -0x38);\n                        }\n                        *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\n                        *0x544e04 = *0x544e04 + -1;\n                    }\n                }\n                while( true ) {\n                    *(*0x20 + -0x60) = 0x437b7f;\n                    iVar3 = fcn.00441180();\n                    if (iVar3 == 0) break;\n                    *(iVar3 + 4) = 3;\n                    *0x544e04 = *0x544e04 + -1;\n                }\n                *(*0x20 + -0x44) = *0x544e04;\n                *(*0x20 + -0x60) = 0x437b9d;\n                fcn.0040a2a0();\n                if (0 < *(*0x20 + -0x44)) {\n                    while( true ) {\n                        *(*0x20 + -0x60) = 0x437bbd;\n                        cVar2 = fcn.0040a7e0();\n                        if (cVar2 != '\\0') break;\n                        *(*0x20 + -0x60) = 0x437bac;\n                        fcn.004402e0();\n                    }\n                    *0x544e08 = 0;\n                }\n                if (*0x544e04 == 0) {\n                    iVar4 = 0;\n                    iVar3 = 0;\n                    uVar9 = 0;\n                    uVar5 = *0x544450;\n                    uVar6 = *0x544458;\n                    do {\n                        unaff_RSI = uVar9;\n                        if (uVar6 <= iVar4) {\ncode_r0x00437bfe:\n                            uVar6 = *0x5981fc;\n                            uVar5 = uVar9;\n                            if (*0x5981fc != 0) {\n                                *(*0x20 + -0x40) = iVar3;\n                                *(*0x20 + -0x20) = uVar9;\n                                *(*0x20 + -0x60) = 0x437c25;\n                                fcn.0040a080();\n                                *(*0x20 + -0x60) = 0x437c33;\n                                fcn.0040a080();\n                                iVar3 = *(*0x20 + -0x40);\n                                uVar5 = *(*0x20 + -0x20);\n                            }\n                            if (iVar3 == 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x60) = 0x437c5a;\n                            iVar4 = fcn.00432f60();\n                            uVar9 = unaff_RSI;\n                        }\n                        if (*(*(uVar5 + iVar4 * 8) + 4) != 3) {\n                            iVar3 = 0x2e;\n                            uVar9 = 0x4ae76f;\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\n                iVar3 = 0x29;\n                uVar9 = 0x4addb0;\n                goto code_r0x00437bfe;\n            }\n            *(*0x20 + -0x60) = 0x437c9a;\n            fcn.00432f60();\n        }\n        *(puVar7 + -8) = 0x437ca5;\n        fcn.0045ad80();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1528
    },
    "0043abe0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0043abe0(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint32_t uVar11;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar5;\n            iVar4 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar4) {\n                    return 0;\n                }\n                iVar2 = *(unaff_R14 + 0x30);\n                uVar11 = *(iVar2 + 0xf0);\n                uVar1 = *(iVar2 + 0xf4);\n                *(iVar2 + 0xf0) = uVar1;\n                uVar11 = uVar11 << 0x11 ^ uVar11;\n                uVar11 = uVar1 >> 0x10 ^ uVar11 >> 7 ^ uVar1 ^ uVar11;\n                *(iVar2 + 0xf4) = uVar11;\n                uVar11 = uVar11 + uVar1;\n                if (*0x544580 == 0) goto code_r0x0043af2a;\n                if (*0x544590 == 0) goto code_r0x0043af25;\n                uVar6 = uVar11 % (*0x544590 & 0xffffffff);\n                arg1_01 = *0x544590;\n                if (*0x544590 <= uVar6) break;\n                *(*0x20 + -0x50) = iVar4;\n                uVar1 = *(*0x544588 + uVar6 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x544580;\n                *(*0x20 + -0x20) = uVar11 % *0x544580;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar6 = uVar1 & 0xffffff00 | iVar4 == 3;\n                *(*0x20 + -0x5b) = iVar4 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x544e00 != 0) {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x20);\n                    arg1 = *0x544458;\n                    if (*0x544458 <= uVar11) {\ncode_r0x0043af15:\n                        *(*0x20 + -0x80) = 0x43af1d;\n                        fcn.0045d480(arg1);\n                        goto code_r0x0043af1d;\n                    }\n                    arg1 = *(*0x544450 + uVar11 * 8);\n                    arg1_00 = *0x544450;\n                    if (uVar5 != arg1) {\n                        if (iVar4 != 3) {\n                            bVar12 = false;\ncode_r0x0043ad8d:\n                            if (bVar12) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x43adb0;\n                                iVar2 = fcn.0043bac0();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x0043adcc:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x0043adcc;\n                                }\n                                if (iVar4 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar2;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x43adee;\n                                    iVar4 = fcn.004416e0();\n                                    if (iVar4 != 0) {\n                                        return iVar4;\n                                    }\n                                    iVar2 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar6 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x10);\n                                iVar4 = *(*0x20 + -0x50);\n                                in_RAX = iVar2;\n                            }\n                            uVar3 = *(*0x20 + -0x20) >> 5;\n                            arg1_00 = *0x5444b8;\n                            arg1_01 = *0x5444b0;\n                            if (uVar3 < *0x5444b8) {\n                                uVar11 = *(*0x5444b0 + uVar3 * 4);\n                                arg1_00 = uVar11;\n                                if ((uVar11 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x43ae72;\n                                    iVar4 = fcn.00441a60(uVar6);\n                                    if (iVar4 != 0) {\n                                        return iVar4;\n                                    }\n                                    iVar4 = *(*0x20 + -0x50);\n                                    uVar6 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043ae95;\n                            }\n                            goto code_r0x0043af05;\n                        }\n                        arg1_00 = *0x5444f8;\n                        arg1_01 = *0x5444f0;\n                        if (uVar11 >> 5 < *0x5444f8) {\n                            bVar12 = (*(*0x5444f0 + (uVar11 >> 5) * 4) >> (uVar11 & 0x1f) & 1) != 0;\n                            goto code_r0x0043ad8d;\n                        }\ncode_r0x0043af0d:\n                        *(*0x20 + -0x80) = 0x43af15;\n                        fcn.0045d480(arg1_00);\n                        goto code_r0x0043af15;\n                    }\ncode_r0x0043ae95:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar11 = *(*0x20 + -0x24);\n                    arg1 = uVar11;\n                    if (uVar11 == 0) {\n                        *(*0x20 + -0x80) = 0x43af05;\n                        fcn.00430980();\ncode_r0x0043af05:\n                        *(*0x20 + -0x80) = 0x43af0d;\n                        fcn.0045d480(arg1_00);\n                        goto code_r0x0043af0d;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar11;\n                }\n                iVar4 = iVar4 + 1;\n            }\ncode_r0x0043af1d:\n            *(*0x20 + -0x80) = 0x43af25;\n            fcn.0045d480(arg1_01);\ncode_r0x0043af25:\n            *(*0x20 + -0x80) = 0x43af2a;\n            fcn.00430980();\ncode_r0x0043af2a:\n            *(*0x20 + -0x80) = 0x43af2f;\n            in_RAX = fcn.00430980();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x43af3a;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2201
    },
    "00444700": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004447d8)\n\nulong fcn.00444700(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x5985fc + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x5985d4) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x5985c8);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x5985c8;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x5985fc = *0x5985fc + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\ncode_r0x004447b6:\n                while (*0x5985f8 < 2) {\n                    if (*0x5985f8 == 0) {\n                        LOCK();\n                        *0x5985f8 = 2;\n                        goto code_r0x00444836;\n                    }\n                    LOCK();\n                    if (*0x5985f8 == 1) {\n                        *0x5985f8 = 0;\n                        *(*0x20 + -0x20) = 0x44482f;\n                        fcn.0040a380();\ncode_r0x00444836:\n                        LOCK();\n                        *0x5985fc = *0x5985fc + -1;\n                        return 1;\n                    }\n                }\n                if (*0x5985f8 == 2) goto code_r0x00444836;\n                if (*0x5985f8 == 3) {\n                    *(*0x20 + -0x20) = 0x444815;\n                    fcn.00439300();\n                    goto code_r0x004447b6;\n                }\n                *(*0x20 + -0x20) = 0x44485f;\n                fcn.00432f60();\n                iVar3 = *0x5985fc;\n            }\n            *0x5985fc = iVar3;\n            *(*0x20 + -0x20) = 0x444869;\n            in_EAX = fcn.0045d480(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x444873;\n        fcn.0045ad80();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 824
    },
    "00449640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00449640(int64_t *param_1, ulong param_2, ulong param_3, int64_t *param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t **arg2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    int64_t *unaff_RBX;\n    uchar *puVar11;\n    ulong unaff_RBP;\n    int64_t *piVar12;\n    int64_t **arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x90 && *0x20 + -0x90 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x110;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0x58) = in_RAX;\n            *(*0x20 + -0x120) = *0x20 + -8;\n            *(*0x20 + -0x118) = 0x44968f;\n            arg2 = fcn.0045d730();\n            unaff_RBP = *(*0x20 + -0x120);\n            while( true ) {\n                piVar5 = arg2[4];\n                piVar9 = arg2[3];\n                arg3 = arg2 + 3;\n                *(*0x20 + -0x60) = arg3;\n                if (1 < piVar5) break;\n                param_4 = arg2[1];\n                piVar10 = arg2[2];\n                if (param_4 == NULL) {\n                    if (piVar5 == NULL) {\n                        return 0;\n                    }\n                    if (piVar5 == 0x1) {\n                        *(*0x20 + -0x120) = unaff_RBP;\n                        *(*0x20 + -0x118) = 0x449b2f;\n                        uVar6 = fcn.0045da9a();\n                        *(uVar6 + 0x20) = 0;\n                        *(uVar6 + 0x28) = 2;\n                        if (*0x598440 == 0) {\n                            *(uVar6 + 0x18) = uVar6 + 0x30;\n                        }\n                        else {\n                            *(*0x20 + -0x118) = 0x449b65;\n                            uVar6 = fcn.0045d100(param_1, uVar6 + 0x30, arg3, param_4);\n                        }\n                        goto code_r0x00449cbf;\n                    }\n                    break;\n                }\n                param_1 = **arg2;\n                arg2[1] = param_4 + -1;\n                arg2[2] = piVar10 + -1;\n                piVar9 = (-(piVar10 + -1) >> 0x3f & 8U) + *arg2;\n                if (*0x598440 == 0) {\n                    *arg2 = piVar9;\n                }\n                else {\n                    *(*0x20 + -0x118) = 0x449705;\n                    fcn.0045d100(param_1, piVar9, arg3, param_4);\n                }\n                *(*0x20 + -200) = param_1;\n                *(*0x20 + -0x118) = 0x449712;\n                piVar9 = fcn.0044abe0();\n                if (piVar9 == NULL) {\n                    if (*0x543ab8 == 0) {\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                    else {\n                        *(*0x20 + -0x118) = 0x44973c;\n                        uVar3 = fcn.00449d80();\n                        iVar7 = *(*0x20 + 0x58);\n                        piVar5 = *(iVar7 + 0x20);\n                        piVar9 = piVar5 + unaff_RBX;\n                        *(*0x20 + -0xa0) = piVar9;\n                        iVar4 = *(iVar7 + 0x18);\n                        piVar10 = piVar5;\n                        param_1 = unaff_RBX;\n                        piVar12 = *(iVar7 + 0x28);\n                        if (*(iVar7 + 0x28) < piVar9) {\n                            *(*0x20 + -0x68) = uVar3;\n                            *(*0x20 + -0xa8) = unaff_RBX;\n                            *(*0x20 + -0xb0) = piVar5;\n                            *(*0x20 + -0x118) = 0x449785;\n                            iVar4 = fcn.00444ac0(piVar5);\n                            piVar10 = *(*0x20 + -0xb0);\n                            param_1 = *(*0x20 + -0xa8);\n                            piVar9 = *(*0x20 + -0xa0);\n                            piVar12 = piVar5;\n                        }\n                        unaff_RBX = param_1;\n                        if (piVar9 < piVar10) goto code_r0x00449d4f;\n                        *(*0x20 + -0xa8) = piVar12;\n                        *(*0x20 + -0x70) = iVar4;\n                        param_4 = piVar10 * 0x50;\n                        unaff_RBX = (piVar10 - piVar12 >> 0x3f & param_4) + iVar4;\n                        *(*0x20 + -0x118) = 0x4497f3;\n                        fcn.00410de0(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[4] = *(*0x20 + -0xa0);\n                        arg2[5] = *(*0x20 + -0xa8);\n                        if (*0x598440 == 0) {\n                            arg2[3] = *(*0x20 + -0x70);\n                        }\n                        else {\n                            *(*0x20 + -0x118) = 0x44983f;\n                            arg2 = fcn.0045d100(param_1, *(*0x20 + -0x70), iVar4, param_4);\n                        }\n                    }\n                }\n                else {\n                    iVar7 = *piVar9;\n                    if (iVar7 == 0) {\n                        iVar7 = piVar9[1];\n                    }\n                    *(*0x20 + -0xd0) = iVar7;\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x80) = piVar9;\n                    *(*0x20 + -0x118) = 0x44986d;\n                    uVar3 = fcn.0044b2c0();\n                    *(*0x20 + -0x88) = uVar3;\n                    *(*0x20 + -0xc0) = unaff_RBX;\n                    uVar8 = *(*0x20 + -200);\n                    uVar6 = *(*0x20 + -0xd0);\n                    if (uVar6 < uVar8) {\n                        uVar8 = uVar8 - 1;\n                    }\n                    *(*0x20 + -200) = uVar8;\n                    iVar7 = *(*0x20 + -0x80);\n                    if (*(iVar7 + 0x2b) < 4) {\n                        param_4 = NULL;\n                    }\n                    else {\n                        iVar4 = iVar7 + *(iVar7 + 0x20) * 4 + 0x2c;\n                        if ((iVar4 >> 2 & 1) != 0) {\n                            if ((iVar7 >> 2 & 1) != 0) {\n                                *(*0x20 + -0x98) = iVar4;\n                                *(*0x20 + -0x118) = 0x4498da;\n                                fcn.004346e0();\n                                *(*0x20 + -0x118) = 0x4498eb;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x118) = 0x4498f8;\n                                fcn.00434f60();\n                                *(*0x20 + -0x118) = 0x4498fd;\n                                fcn.00434940();\n                                *(*0x20 + -0x118) = 0x449905;\n                                fcn.00434760();\n                                uVar6 = *(*0x20 + -0xd0);\n                                unaff_RBX = *(*0x20 + -0xc0);\n                                uVar8 = *(*0x20 + -200);\n                                iVar4 = *(*0x20 + -0x98);\n                                iVar7 = *(*0x20 + -0x80);\n                            }\n                            iVar4 = iVar4 + 4;\n                        }\n                        param_4 = *(iVar4 + 0x18);\n                    }\n                    iVar4 = iVar7;\n                    if (param_4 != NULL) {\n                        *(*0x20 + -0x90) = param_4;\n                        unaff_RBX = *(*0x20 + -0x78);\n                        piVar9 = NULL;\n                        arg3 = NULL;\n                        *(*0x20 + -0x118) = 0x449967;\n                        iVar2 = fcn.0044ba60(2);\n                        if (iVar2 < 0) {\n                            iVar4 = *(*0x20 + -0x80);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                        }\n                        else {\n                            if (0xfffff < iVar2) goto code_r0x00449d45;\n                            uVar1 = *(*(*0x20 + -0x90) + 0xc + iVar2 * 0x14);\n                            unaff_RBX = *(*0x20 + -0x78);\n                            *(*0x20 + -0x118) = 0x4499b6;\n                            fcn.0044b420(uVar1);\n                            iVar4 = 0;\n                        }\n                        uVar6 = *(*0x20 + -0xd0);\n                        uVar8 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x120) = unaff_RBP;\n                    *(*0x20 + -0x118) = 0x4499ef;\n                    uVar3 = fcn.0045d730();\n                    unaff_RBP = *(*0x20 + -0x120);\n                    *(*0x20 + -0x58) = uVar8;\n                    *(*0x20 + -0x50) = iVar4;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x40) = unaff_RBX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x18) = iVar7;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    arg2 = *(*0x20 + 0x58);\n                    param_1 = arg2[4];\n                    piVar9 = arg2[3];\n                    piVar5 = piVar9;\n                    if (arg2[5] < param_1 + 1U) {\n                        *(*0x20 + -0x118) = 0x449a5c;\n                        piVar5 = fcn.00444ac0(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[5] = param_1;\n                        if (*0x598440 == 0) {\n                            arg2[3] = piVar5;\n                            param_1 = piVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x118) = 0x449a85;\n                            piVar5 = fcn.0045cfe0(param_1, arg2, arg3, param_4);\n                            param_1 = piVar9;\n                        }\n                    }\n                    arg2[4] = param_1 + 1;\n                    unaff_RBX = piVar5 + param_1 * 10;\n                    if (*0x598440 == 0) {\n                        *(*0x20 + -0x120) = unaff_RBP;\n                        *(*0x20 + -0x118) = 0x449acf;\n                        fcn.0045da9a();\n                        unaff_RBP = *(*0x20 + -0x120);\n                        unaff_RBX = piVar5;\n                    }\n                    else {\n                        param_1 = *0x20 + -0x58;\n                        *(*0x20 + -0x118) = 0x449aec;\n                        fcn.00410c20(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                }\n            }\n            if (piVar5 == 0x2) {\n                *(*0x20 + -0x120) = unaff_RBP;\n                *(*0x20 + -0x118) = 0x449baf;\n                iVar7 = fcn.0045da9a();\n                unaff_RBP = *(*0x20 + -0x120);\n                uVar8 = *(iVar7 + 0x20);\n                if (1 < uVar8) {\n                    arg1 = *(iVar7 + 0x18) + 0x50;\n                    if (*0x598440 == 0) {\n                        *(*0x20 + -0x120) = unaff_RBP;\n                        *(*0x20 + -0x118) = 0x449bef;\n                        uVar6 = fcn.0045da9a();\n                        arg1 = uVar8;\n                    }\n                    else {\n                        *(*0x20 + -0x118) = 0x449c07;\n                        fcn.00410c20(arg1);\n                        uVar6 = *(*0x20 + 0x58);\n                        arg3 = *(*0x20 + -0x60);\n                    }\n                    *(uVar6 + 0x20) = 1;\n                    *(uVar6 + 0x28) = 2;\n                    if (*0x598440 == 0) {\n                        *(uVar6 + 0x18) = uVar6 + 0x30;\n                    }\n                    else {\n                        *(*0x20 + -0x118) = 0x449c45;\n                        uVar6 = fcn.0045d100(arg1, uVar6 + 0x30, arg3, param_4);\n                    }\ncode_r0x00449cbf:\n                    iVar7 = *(uVar6 + 0x20);\n                    if (*(*0x20 + 0x48) != 0) {\n                        *(*0x20 + -0xb8) = iVar7;\n                        uVar3 = *(*0x20 + 0x50);\n                        arg1_00 = *(*0x20 + 8);\n                        *(*0x20 + -0x118) = 0x449cf7;\n                        uVar6 = fcn.0044b5e0(arg1_00);\n                        *(*0x20 + 0x28) = uVar6;\n                        *(*0x20 + 0x30) = uVar3;\n                        *(*0x20 + 0x38) = arg1_00;\n                        iVar7 = *(*0x20 + -0xb8);\n                    }\n                    return uVar6 & 0xffffffffffffff00 | 0 < iVar7;\n                }\n            }\n            else {\n                *(*0x20 + -0x120) = unaff_RBP;\n                *(*0x20 + -0x118) = 0x449c6f;\n                uVar6 = fcn.0045da9a();\n                unaff_RBP = *(*0x20 + -0x120);\n                uVar8 = *(uVar6 + 0x20);\n                param_4 = *(uVar6 + 0x28);\n                if (uVar8 != 0) {\n                    *(uVar6 + 0x20) = uVar8 - 1;\n                    *(uVar6 + 0x28) = param_4 + -1;\n                    iVar7 = *(uVar6 + 0x18) + (-(param_4 + -1) >> 0x3f & 0x50U);\n                    if (*0x598440 == 0) {\n                        *(uVar6 + 0x18) = iVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x118) = 0x449cbf;\n                        uVar6 = fcn.0045d100(uVar8, iVar7, arg3, param_4);\n                    }\n                    goto code_r0x00449cbf;\n                }\n                *(*0x20 + -0x118) = 0x449d37;\n                fcn.0045d540(0);\n            }\n            *(*0x20 + -0x118) = 0x449d45;\n            fcn.0045d480(uVar8);\ncode_r0x00449d45:\n            *(*0x20 + -0x118) = 0x449d4f;\n            fcn.0045d480(0x100000);\ncode_r0x00449d4f:\n            param_1 = piVar9;\n            *(*0x20 + -0x118) = 0x449d5a;\n            in_RAX = fcn.0045d540(param_1);\n        }\n        *(puVar11 + 0x58) = in_RAX;\n        *(puVar11 + -8) = 0x449d65;\n        fcn.0045ad80();\n        in_RAX = *(puVar11 + 0x58);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 4018
    },
    "0044a900": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0044a900(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x90) = 0x44a930;\n            iVar3 = fcn.0044abe0();\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = iVar3;\n            if (*(iVar3 + 0x2b) < 4) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = iVar3 + *(iVar3 + 0x20) * 4 + 0x2c;\n                if ((iVar7 >> 2 & 1) != 0) {\n                    if ((iVar3 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x90) = 0x44a97d;\n                        fcn.004346e0();\n                        *(*0x20 + -0x90) = 0x44a98e;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x90) = 0x44a998;\n                        fcn.00434f60();\n                        *(*0x20 + -0x90) = 0x44a99d;\n                        fcn.00434940();\n                        *(*0x20 + -0x90) = 0x44a9a5;\n                        fcn.00434760();\n                        iVar7 = *(*0x20 + -0x30);\n                        unaff_RBX = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    iVar7 = iVar7 + 4;\n                }\n                iVar7 = *(iVar7 + 0x18);\n            }\n            if (iVar7 == 0) {\n                return iVar3;\n            }\n            *(*0x20 + -0x38) = iVar7;\n            *(*0x20 + -0x90) = 0x44a9e6;\n            iVar2 = fcn.0044ba60(2);\n            if (iVar2 < 0) {\n                return *(*0x20 + -0x18);\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x38) + 0xc + iVar2 * 0x14);\n                uVar6 = *(*0x20 + -0x10);\n                *(*0x20 + -0x90) = 0x44aa19;\n                uVar4 = fcn.0044b420(uVar1);\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x50) = uVar6;\n                uVar6 = *(*0x20 + -0x40);\n                uVar4 = *(*0x20 + -0x10);\n                *(*0x20 + -0x90) = 0x44aa3d;\n                uVar5 = fcn.0044b5e0(uVar6);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x48) = uVar4;\n                *(*0x20 + -0x54) = uVar6;\n                *(*0x20 + -0x90) = 0x44aa57;\n                iVar3 = fcn.0040c140();\n                *(iVar3 + 8) = **(*0x20 + -0x18);\n                *(iVar3 + 0x18) = *(*0x20 + -0x50);\n                if (*0x598440 == 0) {\n                    *(iVar3 + 0x10) = *(*0x20 + -0x28);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44aa90;\n                    iVar3 = fcn.0045d0e0(*(*0x20 + -0x28));\n                }\n                *(iVar3 + 0x28) = *(*0x20 + -0x48);\n                if (*0x598440 == 0) {\n                    *(iVar3 + 0x20) = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44aabb;\n                    iVar3 = fcn.0045d0e0();\n                }\n                *(iVar3 + 0x30) = *(*0x20 + -0x54);\n                return iVar3;\n            }\n            *(*0x20 + -0x90) = 0x44ab0b;\n            in_RAX = fcn.0045d480(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x44ab16;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1332
    },
    "0044d000": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0044d000(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t *in_RAX;\n    int32_t iVar9;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x44d4b6;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x44d4c7;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + 0x38) = arg4;\n        *(puVar10 + -8) = 0x44d4f0;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        arg4 = *(puVar10 + 0x38);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044d05c:\n    while( true ) {\n        while (uVar3 = *(in_RAX + 8),  3 < uVar3) {\n            if (uVar3 < 6) {\n                if (uVar3 != 4) goto code_r0x0044d0e9;\n                goto code_r0x0044d1ca;\n            }\n            if (uVar3 == 6) {\n                *(*0x20 + -0x40) = 0x4b0448;\n                *(*0x20 + -0x48) = 0x44d265;\n                fcn.0045ac40();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                if (uVar3 < 9) goto code_r0x0044d15a;\n                if (uVar3 == 9) goto code_r0x0044d1ca;\n                *(*0x20 + -0x48) = 0x44d225;\n                fcn.0044e940();\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                arg4 = *(*0x20 + 0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (1 < uVar3) break;\n        if (uVar3 == 0) {\ncode_r0x0044d0e9:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\x01';\n                arg2 = 0;\n                goto code_r0x0044d2d2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        else {\ncode_r0x0044d15a:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar3 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                cVar8 = '\\0';\n                arg2 = 1;\n                goto code_r0x0044d2d2;\n            }\n            iVar9 = *(iVar11 + 0xd8);\n            *(iVar11 + 0xd8) = iVar9 + -1;\n            if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n    }\n    if (uVar3 == 2) {\ncode_r0x0044d1ca:\n        *(*0x20 + -0x40) = 0x4b0448;\n        *(*0x20 + -0x48) = 0x44d1da;\n        fcn.0045ac40();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044d05c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar11 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (uVar3 != *(in_RAX + 8)) {\n        iVar9 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044d05c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x26fc) = *(*in_RAX + 0x26fc) + -1;\n    cVar8 = '\\0';\n    arg2 = 0;\ncode_r0x0044d2d2:\n    in_RAX[2] = arg1;\n    if (*0x598440 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x44d2fa;\n        cVar8 = fcn.0045d100(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x598440 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x44d319;\n        cVar8 = fcn.0045d160(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar11;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar8 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar9 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar9 = 7;\n        }\n        iVar5 = *in_RAX;\n        if (iVar9 == 7) {\n            do {\n                uVar6 = *(iVar5 + 0x1670);\n                if ((uVar6 != 0) && (uVar6 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar5 + 0x1670;\n                uVar7 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar6 == uVar7) * (*puVar2 ^ unaff_RBX);\n            } while (uVar6 != uVar7);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar9;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar9;\n            *(*0x20 + -0x48) = 0x44d414;\n            fcn.0044e940();\n            iVar9 = *(*0x20 + -0x2c);\n            iVar11 = *(*0x20 + -0x28);\n        }\n        iVar4 = *(iVar11 + 0xd8);\n        *(iVar11 + 0xd8) = iVar4 + -1;\n        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar9 == 7) {\n            *(*0x20 + -0x48) = 0x44d466;\n            fcn.0043b2c0();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar11;\n        *(*0x20 + -0x20) = iVar11 + 0x26d8;\n        *(*0x20 + -0x48) = 0x44d379;\n        fcn.0040a080();\n        *(*0x20 + -0x48) = 0x44d388;\n        fcn.0044c7e0();\n        *(*0x20 + -0x48) = 0x44d394;\n        fcn.0040a2a0();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x44d3b4;\n            fcn.0044e940();\n        }\n        iVar9 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar9 + -1;\n        if ((iVar9 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x44d3ea;\n        fcn.0043b2c0();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3142
    },
    "0044d520": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d520(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar3 = 0;\n    do {\n        if (arg1 <= iVar3) {\n            return;\n        }\n        puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044d63a:\n        do {\n            while (uVar1 = *(puVar2 + 8),  uVar1 < 4) {\n                if (uVar1 < 2) {\n                    if (uVar1 == 0) {\ncode_r0x0044d714:\n                        fcn.0044e940();\n                    }\n                    else {\n                        LOCK();\n                        if (uVar1 == *(puVar2 + 8)) {\n                            *(puVar2 + 8) = 9;\n                            *puVar2 = 0;\n                            fcn.0044c7e0();\n                            LOCK();\n                            if (*(puVar2 + 8) == 9) {\n                                *(puVar2 + 8) = 1;\n                            }\n                            else {\n                                fcn.0044e940();\n                            }\n                            goto code_r0x0044d54b;\n                        }\n                    }\n                }\n                else if (uVar1 == 2) {\ncode_r0x0044d70d:\n                    fcn.0044e940();\n                }\n                else {\n                    LOCK();\n                    if (uVar1 == *(puVar2 + 8)) {\n                        *(puVar2 + 8) = 5;\n                        *puVar2 = 0;\n                        goto code_r0x0044d54b;\n                    }\n                }\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044d70d;\n                goto code_r0x0044d714;\n            }\n            if (uVar1 == 6) {\n                fcn.0045ac40();\n                goto code_r0x0044d63a;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044d70d;\n                fcn.0044e940();\n                goto code_r0x0044d63a;\n            }\n            LOCK();\n        } while (uVar1 != *(puVar2 + 8));\n        *(puVar2 + 8) = 9;\n        puVar2[1] = puVar2[7];\n        *puVar2 = 0;\n        fcn.0044c7e0();\n        LOCK();\n        if (*(puVar2 + 8) == 9) {\n            *(puVar2 + 8) = 1;\n        }\n        else {\n            fcn.0044e940();\n        }\ncode_r0x0044d54b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0044d780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d780(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1670) == 0) || (unaff_RBX < *(in_RAX + 0x1670))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1670) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar2 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x26e8);\n                if (arg1_00 <= noname_0) {\n                    if (0 < arg1) {\n                        *(*0x20 + -0x88) = 0x44da85;\n                        fcn.0044dae0(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044daa5;\n                arg1_00 = *(*(in_RAX + 0x26e0) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar2;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 4) {\n                    if (uVar1 < 2) {\n                        if (uVar1 == 0) {\ncode_r0x0044d9ce:\n                            *(*0x20 + -0x88) = 0x44d9d3;\n                            fcn.0044e940();\n                            in_RAX = *(*0x20 + 8);\n                            noname_0 = *(*0x20 + -0x30);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            arg1 = *(*0x20 + -0x40);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 2) goto code_r0x0044d9ce;\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44d875;\n                            iVar2 = fcn.0044cc40(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar2;\n                                *(*0x20 + -0x88) = 0x44d89d;\n                                fcn.0044e940();\n                                iVar2 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x26fc) = *(in_RAX + 0x26fc) + -1;\n                            noname_0 = iVar2 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                }\n                else if (uVar1 < 7) {\n                    if (uVar1 < 6) goto code_r0x0044d9ce;\n                    if (uVar1 != 6) goto code_r0x0044d9fa;\n                    *(*0x20 + -0x80) = 0x4b0448;\n                    *(*0x20 + -0x88) = 0x44da36;\n                    fcn.0045ac40();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    noname_0 = *(*0x20 + -0x30) + -1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                else if (uVar1 < 9) {\n                    LOCK();\n                    if (uVar1 == *(arg1_00 + 8)) {\n                        *(arg1_00 + 8) = 9;\n                        iVar2 = arg1_00[7];\n                        arg1_00[1] = iVar2;\n                        *(*0x20 + -0x88) = 0x44d926;\n                        iVar3 = fcn.0044cc40(noname_0, iVar2);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        arg1 = unaff_RBX + 1;\n                        if (*(*0x20 + -0x38) < arg1) {\n                            *(*0x20 + -0x28) = iVar3;\n                            iVar3 = *(*0x20 + -0x10);\n                            *(*0x20 + -0x88) = 0x44d958;\n                            iVar2 = fcn.00444ac0(unaff_RBX);\n                            arg1 = iVar3 + 1;\n                            iVar3 = *(*0x20 + -0x28);\n                            uVar4 = *(*0x20 + -0x40);\n                        }\n                        else {\n                            iVar2 = *(*0x20 + -0x10);\n                            uVar4 = unaff_RBX;\n                            unaff_RBX = *(*0x20 + -0x38);\n                        }\n                        if (*0x598440 == 0) {\n                            *(iVar2 + uVar4 * 8) = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x88) = 0x44d994;\n                            iVar3 = fcn.0045d180(unaff_RBX, iVar2, iVar2 + uVar4 * 8);\n                        }\n                        noname_0 = iVar3 + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                else {\n                    if (uVar1 == 9) goto code_r0x0044d9ce;\ncode_r0x0044d9fa:\n                    *(*0x20 + -0x88) = 0x44d9ff;\n                    fcn.0044e940();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44daa5;\n            fcn.00432f60();\ncode_r0x0044daa5:\n            *(*0x20 + -0x88) = 0x44dab0;\n            in_RAX = fcn.0045d480(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44dac5;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1996
    },
    "0044dbc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0044dbc0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044dbc0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044dbe7:\n        arg1 = *(in_RAX + 0x26e8);\n        if (arg1 == 0) goto code_r0x0044de4e;\n        arg2 = **(in_RAX + 0x26e0);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44de4e;\n            fcn.00432f60();\n            goto code_r0x0044de4e;\n        }\n        *(*0x20 + -0x10) = arg2;\n        uVar1 = *(arg2 + 8);\n        if (uVar1 < 4) {\n            if (uVar1 < 2) {\n                if (uVar1 == 0) {\ncode_r0x0044dde2:\n                    *(*0x20 + -0x30) = 0x44dde7;\n                    fcn.0044e940();\n                    in_RAX = *(*0x20 + 8);\n                    goto code_r0x0044ddf1;\n                }\n                if (unaff_RBX < arg2[1]) {\n                    return arg2[1];\n                }\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 2;\n                    *(*0x20 + -0x30) = 0x44de13;\n                    fcn.0044de80(unaff_RBX);\n                    return 0;\n                }\n                goto code_r0x0044dbe7;\n            }\n            if (uVar1 != 2) {\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 4;\n                    *(*0x20 + -0x30) = 0x44dca5;\n                    fcn.0044ce60(in_RAX, arg2);\n                    LOCK();\n                    if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                        *(*(*0x20 + -0x10) + 0x40) = 5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x44dcc9;\n                        fcn.0044e940();\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    LOCK();\n                    *(in_RAX + 0x26fc) = *(in_RAX + 0x26fc) + -1;\n                    if (*(in_RAX + 0x26e8) == 0) {\n                        return -1;\n                    }\n                    goto code_r0x0044ddf1;\n                }\n                goto code_r0x0044dbe7;\n            }\ncode_r0x0044ddd0:\n            *(*0x20 + -0x30) = 0x44ddd5;\n            fcn.0044e940();\n            in_RAX = *(*0x20 + 8);\n        }\n        else {\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044ddd0;\n                goto code_r0x0044dde2;\n            }\n            if (uVar1 == 6) {\n                *(*0x20 + -0x28) = 0x4b0448;\n                *(*0x20 + -0x30) = 0x44ddab;\n                fcn.0045ac40();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044ddf1;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044ddd0;\n                *(*0x20 + -0x30) = 0x44dd8f;\n                fcn.0044e940();\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044ddf1;\n            }\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044dbe7;\n            *(arg2 + 8) = 9;\n            arg2[1] = arg2[7];\n            *(*0x20 + -0x30) = 0x44dd45;\n            fcn.0044ce60(in_RAX, arg2);\n            *(*0x20 + -0x30) = 0x44dd54;\n            fcn.0044c7e0();\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44dd74;\n                fcn.0044e940();\n            }\n            in_RAX = *(*0x20 + 8);\n        }\ncode_r0x0044ddf1:\n        unaff_RBX = *(*0x20 + 0x10);\n        goto code_r0x0044dbe7;\n    }\n    goto code_r0x0044de56;\ncode_r0x0044de4e:\n    *(*0x20 + -0x30) = 0x44de55;\n    in_RAX = fcn.0045d480(arg1);\ncode_r0x0044de56:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44de65;\n    fcn.0045f460();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044dbc0;\n}\n",
        "token_count": 1542
    },
    "0044e020": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e020(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *arg1_00;\n    ulong *arg3;\n    int32_t iVar7;\n    ulong *arg4;\n    ulong *in_R10;\n    int64_t unaff_R12;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    \ncode_r0x0044e020:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1670) = 0;\n        piVar5 = *(in_RAX + 0x26e0);\n        *(*0x20 + -0x18) = piVar5;\n        arg1 = *(in_RAX + 0x26e8);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x26f0);\n        *(*0x20 + -0x28) = arg2;\n        puVar3 = NULL;\n        piVar6 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        iVar8 = unaff_R12;\n        do {\n            arg3 = arg1_00;\n            if (puVar3 < arg1) {\n                *(*0x20 + -0x20) = puVar3;\n                *(*0x20 + -0x3c) = arg4;\n                *(*0x20 + -0x38) = arg1_00;\n                *(*0x20 + -0x3d) = piVar6;\n                in_R10 = piVar5[puVar3];\n                *(*0x20 + -0x10) = in_R10;\n                unaff_R12 = in_RAX;\n            }\n            else {\n                for (; arg3 < arg1; arg3 = arg3 + 1) {\n                    if (arg1 <= arg3) goto code_r0x0044e2c9;\n                    piVar6 = piVar5 + arg3;\n                    if (*0x598440 == 0) {\n                        piVar5[arg3] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44e247;\n                        in_RAX = fcn.0045d120(arg1, arg2, arg3, arg4);\n                        in_R10 = arg1_00;\n                    }\n                }\n                iVar7 = arg4;\n                LOCK();\n                puVar1 = in_RAX + 0x26fc;\n                arg4 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                LOCK();\n                puVar1 = in_RAX + 0x26f8;\n                arg3 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                if (arg1_00 <= arg2) {\n                    *(in_RAX + 0x26e8) = arg1_00;\n                    *(in_RAX + 0x26f0) = arg2;\n                    if (*0x598440 == 0) {\n                        *(in_RAX + 0x26e0) = piVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44e297;\n                        in_RAX = fcn.0045d140(arg1, arg2, arg3, arg4);\n                    }\n                    if (arg1_00 == NULL) {\n                        *(in_RAX + 0x1668) = 0;\n                    }\n                    else {\n                        *(in_RAX + 0x1668) = *(*piVar5 + 8);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x44e2c9;\n                arg1 = arg1_00;\n                fcn.0045d500(arg1_00, arg2);\ncode_r0x0044e2c9:\n                *(*0x20 + -0x68) = 0x44e2d1;\n                fcn.0045d480(arg1);\n                unaff_R12 = iVar8;\n                puVar3 = arg1_00;\n                arg1_00 = arg3;\n            }\ncode_r0x0044e2d4:\n            do {\n                while (uVar2 = *(in_R10 + 8),  uVar2 < 4) {\n                    in_RAX = unaff_R12;\n                    if (uVar2 < 2) {\n                        if (uVar2 != 0) {\n                            unaff_R12 = iVar8;\n                            if (piVar6 != '\\0') {\n                                if (arg1 <= arg1_00) goto code_r0x0044e490;\n                                if (*0x598440 == 0) {\n                                    piVar5[arg1_00] = in_R10;\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = 0x44e0d7;\n                                    puVar3 = in_R10;\n                                    fcn.0045d180(arg1, arg2, arg1_00);\n                                    arg4 = in_R10;\n                                    in_R10 = puVar3;\n                                }\n                                *(*0x20 + -0x68) = 0x44e0e8;\n                                fcn.0044e5a0(arg2, arg2, arg1_00, arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                piVar6 = *(*0x20 + -0x3d);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                            }\n                            arg1_00 = arg1_00 + 1;\n                            goto code_r0x0044e078;\n                        }\ncode_r0x0044e44b:\n                        *(*0x20 + -0x68) = 0x44e450;\n                        fcn.0044e940();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else if (uVar2 == 2) {\ncode_r0x0044e40e:\n                        *(*0x20 + -0x68) = 0x44e413;\n                        fcn.0044e940();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else {\n                        LOCK();\n                        iVar8 = unaff_R12;\n                        if (uVar2 == *(in_R10 + 8)) {\n                            *(in_R10 + 8) = 4;\n                            *in_R10 = 0;\n                            LOCK();\n                            bVar9 = *(in_R10 + 8) == 4;\n                            if (bVar9) {\n                                *(in_R10 + 8) = 5;\n                            }\n                            in_R10 = in_R10 & 0xffffffffffffff00 | bVar9;\n                            if (!bVar9) {\n                                *(*0x20 + -0x68) = 0x44e13c;\n                                fcn.0044e940();\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            arg4 = arg4 + 1;\n                            piVar6 = 0x1;\n                            unaff_R12 = in_RAX;\n                            goto code_r0x0044e078;\n                        }\n                    }\n                }\n                if (uVar2 < 6) {\n                    if (uVar2 == 4) goto code_r0x0044e40e;\n                    goto code_r0x0044e44b;\n                }\n                if (uVar2 == 6) {\n                    *(*0x20 + -0x60) = 0x4b0448;\n                    *(*0x20 + -0x68) = 0x44e3bc;\n                    fcn.0045ac40();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044e2d4;\n                }\n                if (8 < uVar2) {\n                    if (uVar2 == 9) goto code_r0x0044e40e;\n                    *(*0x20 + -0x68) = 0x44e374;\n                    fcn.0044e940();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044e2d4;\n                }\n                LOCK();\n                iVar8 = unaff_R12;\n            } while (uVar2 != *(in_R10 + 8));\n            *(in_R10 + 8) = 9;\n            in_R10[1] = in_R10[7];\n            if (arg1 <= arg1_00) goto code_r0x0044e488;\n            if (*0x598440 == 0) {\n                piVar5[arg1_00] = in_R10;\n                in_R10 = arg4;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44e1a7;\n                fcn.0045d180(arg1, arg2, arg1_00);\n            }\n            *(*0x20 + -0x68) = 0x44e1b8;\n            fcn.0044e5a0(arg2, arg2, arg1_00, in_R10);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44e1d8;\n                fcn.0044e940();\n            }\n            in_R10 = *(*0x20 + -0x38);\n            arg1_00 = in_R10 + 1;\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar3 = *(*0x20 + -0x20);\n            piVar5 = *(*0x20 + -0x18);\n            piVar6 = 0x1;\n            arg4 = *(*0x20 + -0x3c);\ncode_r0x0044e078:\n            puVar3 = puVar3 + 1;\n            iVar8 = unaff_R12;\n        } while( true );\n    }\n    goto code_r0x0044e499;\ncode_r0x0044e488:\n    *(*0x20 + -0x68) = 0x44e490;\n    fcn.0045d480(arg1);\ncode_r0x0044e490:\n    *(*0x20 + -0x68) = 0x44e498;\n    in_RAX = fcn.0045d480(arg1);\ncode_r0x0044e499:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x44e4a5;\n    fcn.0045ad80();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0044e020;\n}\n",
        "token_count": 3319
    },
    "0044ec60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ec60(int64_t *arg1, ulong noname_1, uint64_t arg3, code *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    code *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    code *unaff_RDI;\n    uint32_t uVar8;\n    uint64_t in_R10;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_SIL;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x38) = arg4;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                unaff_RBX = arg1 & 0xffffffff;\n                *(*0x20 + -0x60) = 0x44ecd0;\n                iVar1 = fcn.0044f300();\n                arg1 = *(*0x20 + 0x20);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x44ece6;\n            fcn.0045ce80(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x20);\n            iVar1 = *(uVar5 + 8);\n            *(uVar5 + 8) = uVar4 >> 6;\n            uVar2 = (uVar4 >> 6) - iVar1;\n            uVar4 = *(*0x20 + 0x30);\n            if (uVar4 < 0) {\n                uVar6 = *(*0x20 + 0x40);\n                uVar9 = uVar6;\n            }\n            else {\n                uVar6 = *(*0x20 + 0x40);\n                uVar9 = uVar6 + 1;\n            }\n            if (3 < uVar9) {\n                uVar9 = 3;\n            }\n            arg3 = *(uVar5 + 0x10);\n            arg4 = uVar9 & 0xffffffff;\n            in_R11 = *(*0x20 + 0x28);\n            uVar8 = uVar9 << 6 | *(*0x20 + 0x28);\n            in_R10 = uVar8;\n            if (arg3 < 0xfbe8) {\n                *(uVar5 + 0x418 + arg3) = uVar8;\n                in_R10 = *(uVar5 + 0x10) + 1;\n                *(uVar5 + 0x10) = in_R10;\n                if (arg4 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044ed90;\n                }\n                unaff_RBX = NULL;\ncode_r0x0044f000:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (in_R10 < 0xfbe8) {\n                        *(uVar5 + 0x418 + in_R10) = unaff_RBX;\n                        *(uVar5 + 0x10) = in_R10 + 1;\n                        unaff_RBX = uVar5 + in_R10 + 0x418;\ncode_r0x0044ed90:\n                        uVar9 = *(uVar5 + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar9) goto code_r0x0044efd2;\n                            *(uVar5 + 0x418 + uVar9) = uVar2 | 0x80;\n                            uVar9 = uVar9 + 1;\n                            uVar2 = uVar2 >> 7;\n                            in_R10 = uVar2;\n                        }\n                        if (uVar9 < 0xfbe8) {\n                            *(uVar5 + 0x418 + uVar9) = uVar2;\n                            *(uVar5 + 0x10) = uVar9 + 1;\n                            iVar1 = *(*0x20 + 0x38);\n                            iVar3 = 0;\n                            do {\n                                if (iVar3 < uVar6) {\n                                    in_R10 = *(iVar1 + iVar3 * 8);\n                                    in_R11 = *(uVar5 + 0x10);\n                                    goto code_r0x0044ef8f;\n                                }\n                                if (uVar4 != 0) {\n                                    if (uVar4 < 1) goto code_r0x0044ee62;\n                                    *(*0x20 + -0x30) = arg3;\n                                    *(*0x20 + -0x18) = unaff_RBX;\n                                    unaff_RBX = uVar5 + 0x18;\n                                    unaff_RDI = pe_nt_image_headers64;\n                                    *(*0x20 + -0x60) = 0x44ee57;\n                                    uVar4 = fcn.0044f0e0(0x80);\n                                    uVar5 = *(*0x20 + -0x20);\n                                    arg3 = *(uVar5 + 0x10);\n                                    goto code_r0x0044eeb1;\n                                }\n                                uVar6 = *(uVar5 + 0x10);\n                                uVar2 = 0;\ncode_r0x0044ef29:\n                                if (0x7f < uVar2) {\n                                    if (0xfbe7 < uVar6) goto code_r0x0044ef69;\ncode_r0x0044ef12:\n                                    *(uVar5 + 0x418 + uVar6) = uVar2 | 0x80;\n                                    uVar2 = uVar2 >> 7;\n                                    uVar6 = uVar6 + 1;\n                                    uVar4 = uVar2;\n                                    goto code_r0x0044ef29;\n                                }\n                                if (uVar6 < 0xfbe8) {\n                                    *(uVar5 + 0x418 + uVar6) = uVar2;\n                                    *(uVar5 + 0x10) = uVar6 + 1;\ncode_r0x0044ee62:\n                                    while( true ) {\n                                        iVar3 = *(uVar5 + 0x10) - arg3;\n                                        uVar5 = *(*0x20 + -0x28);\n                                        if (iVar3 <= uVar5) {\n                                            if (unaff_RBX != NULL) {\n                                                *unaff_RBX = iVar3 + -2;\n                                            }\n                                            return;\n                                        }\n                                        unaff_RBX = 0x1d;\n                                        *(*0x20 + -0x60) = 0x44ee99;\n                                        uVar4 = fcn.00432f60();\n                                        while( true ) {\n                                            *(uVar5 + 0x418 + arg3) = uVar4 | 0x80;\n                                            uVar4 = uVar4 >> 7;\n                                            arg3 = arg3 + 1;\ncode_r0x0044eeb1:\n                                            if (uVar4 < 0x80) break;\n                                            uVar6 = uVar5;\n                                            if (0xfbe7 < arg3) goto code_r0x0044ef05;\n                                        }\n                                        if (0xfbe7 < arg3) break;\n                                        *(uVar5 + 0x418 + arg3) = uVar4;\n                                        *(uVar5 + 0x10) = arg3 + 1;\n                                        unaff_RBX = *(*0x20 + -0x18);\n                                        arg3 = *(*0x20 + -0x30);\n                                    }\n                                    *(*0x20 + -0x60) = 0x44ef05;\n                                    fcn.0045d480(0xfbe8);\n                                    uVar6 = uVar5;\ncode_r0x0044ef05:\n                                    uVar5 = 0xfbe8;\n                                    *(*0x20 + -0x60) = 0x44ef12;\n                                    uVar2 = fcn.0045d480(0xfbe8);\n                                    goto code_r0x0044ef12;\n                                }\n                                *(*0x20 + -0x60) = 0x44ef69;\n                                fcn.0045d480(0xfbe8);\ncode_r0x0044ef69:\n                                uVar5 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x44ef76;\n                                iVar3 = fcn.0045d480(0xfbe8);\n                                while( true ) {\n                                    *(uVar5 + 0x418 + in_R11) = in_R10 | 0x80;\n                                    in_R10 = in_R10 >> 7;\n                                    in_R11 = in_R11 + 1;\ncode_r0x0044ef8f:\n                                    if (in_R10 < 0x80) break;\n                                    if (0xfbe7 < in_R11) goto code_r0x0044efb8;\n                                }\n                                if (0xfbe7 < in_R11) goto code_r0x0044efab;\n                                *(uVar5 + 0x418 + in_R11) = in_R10;\n                                in_R10 = in_R11 + 1;\n                                *(uVar5 + 0x10) = in_R10;\n                                iVar3 = iVar3 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044efc5;\n                    }\n                    *(*0x20 + -0x60) = 0x44f04a;\n                    fcn.0045d480(0xfbe8);\n                }\n                else if (in_R10 < 0xfbe8) goto code_r0x0044efdf;\n                *(*0x20 + -0x60) = 0x44f057;\n                fcn.0045d480(0xfbe8);\n            }\n            unaff_SIL = uVar4;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x44f065;\n            in_RAX = fcn.0045d480(0xfbe8);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = unaff_SIL;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + 0x38) = arg4;\n        *(puVar7 + 0x40) = in_R10;\n        *(puVar7 + 0x48) = in_R11;\n        *(puVar7 + -8) = 0x44f097;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_SIL = puVar7[0x28];\n        arg3 = *(puVar7 + 0x30);\n        arg4 = *(puVar7 + 0x38);\n        in_R10 = *(puVar7 + 0x40);\n        in_R11 = *(puVar7 + 0x48);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x0044efab:\n    *(*0x20 + -0x60) = 0x44efb8;\n    fcn.0045d480(0xfbe8);\ncode_r0x0044efb8:\n    *(*0x20 + -0x60) = 0x44efc5;\n    fcn.0045d480(0xfbe8);\ncode_r0x0044efc5:\n    *(*0x20 + -0x60) = 0x44efd2;\n    fcn.0045d480(0xfbe8);\ncode_r0x0044efd2:\n    uVar5 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x44efdf;\n    uVar2 = fcn.0045d480(0xfbe8);\ncode_r0x0044efdf:\n    *(uVar5 + 0x418 + in_R10) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    in_R10 = in_R10 + 1;\n    arg4 = unaff_RBX;\n    goto code_r0x0044f000;\n}\n",
        "token_count": 3115
    },
    "00450500": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\ncode ** fcn.00450500(code **arg1, ulong noname_1, uchar (*arg3) [16], code **arg4)\n\n{\n    uchar (*pauVar1) [16];\n    char cVar2;\n    int32_t iVar3;\n    code *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    code **ppcVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uchar uVar12;\n    char cVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    code **unaff_RDI;\n    int64_t *piVar15;\n    code **ppcVar16;\n    code **in_R10;\n    uint8_t uVar17;\n    uchar (*in_R11) [16];\n    code *pcVar18;\n    code **ppcVar19;\n    code **unaff_R14;\n    code **ppcVar20;\n    int64_t iVar21;\n    bool bVar22;\n    uchar in_XMM15 [16];\n    \ncode_r0x00450500:\n    puVar14 = *0x20;\n    if (unaff_R14[2] <= *0x20 + -0x2e8 && *0x20 + -0x2e8 != unaff_R14[2]) {\n        puVar14 = *0x20 + -0x368;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(unaff_R14[6] + 0x90) != unaff_R14)) {\n                uVar10 = *0x52c188 >> 2;\n                if (unaff_R14[6][0xf9] != 0x0) {\n                    uVar10 = unaff_R14[6][0xf9];\n                }\n                if ((in_RAX == 0xffffffffffffffff) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = unaff_RDI[0xe];\n                    if (unaff_RBX == NULL) {\n                        in_RAX = unaff_RDI[8];\n                        unaff_RBX = unaff_RDI[7];\n                        pcVar18 = unaff_RDI[10];\n                    }\n                    else {\n                        in_RAX = unaff_RDI[0xf];\n                        pcVar18 = NULL;\n                    }\n                }\n                else {\n                    pcVar18 = NULL;\n                }\n                *(*0x20 + -0x60) = 0;\n                *(*0x20 + -0x378) = unaff_RBP;\n                *(*0x20 + -0x370) = 0x4505cf;\n                iVar4 = fcn.0045d730();\n                unaff_RBP = *(*0x20 + -0x378);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                iVar11 = *(iVar4 + 0x150);\n                iVar21 = *(iVar4 + 0x158);\n                if (arg3 == NULL) {\n                    unaff_RDI = *0x20 + -0x88 & 0xffffffffffffff00 | in_R10 == NULL;\n                }\n                else {\n                    unaff_RDI = NULL;\n                }\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -600) = in_RAX;\n                *(*0x20 + -0x260) = unaff_RBX;\n                *(*0x20 + -0x339) = unaff_RDI;\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + -0x70) = iVar4;\n                *(*0x20 + -0x2d0) = iVar21;\n                *(*0x20 + -0xb0) = iVar11;\n                *(*0x20 + -0xb8) = pcVar18;\n                *(*0x20 + -0x32c) = uVar10;\n                if (in_RAX == NULL) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    *(*0x20 + -0x38) = *(*0x20 + -0x260) + 8;\n                }\n                *(*0x20 + -0x370) = 0x450693;\n                iVar4 = fcn.0044abe0();\n                if (iVar4 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (ppcVar9 = in_R10,  ppcVar19 = arg1,  *(*0x20 + -0x339) != '\\0')) {\n                        *(*0x20 + -600) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x370) = 0x450750;\n                        fcn.004346e0();\n                        *(*0x20 + -0x370) = 0x450765;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x370) = 0x450772;\n                        fcn.00434e40();\n                        *(*0x20 + -0x370) = 0x450777;\n                        fcn.00434940();\n                        *(*0x20 + -0x370) = 0x45077c;\n                        fcn.00434760();\n                        arg1 = *0x20 + -0x60;\n                        unaff_RDI = NULL;\n                        *(*0x20 + -0x370) = 0x45079a;\n                        fcn.00453b80(arg1);\n                        ppcVar9 = in_R10;\n                        ppcVar19 = *(*0x20 + 0x48);\n                    }\n                    if (ppcVar19 == NULL) {\n                        return NULL;\n                    }\n                    uVar6 = 10;\n                    *(*0x20 + -0x370) = 0x4507cf;\n                    fcn.00432f60();\n                    goto code_r0x004507cf;\n                }\n                *(*0x20 + -0x60) = iVar4;\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x378) = unaff_RBP;\n                *(*0x20 + -0x370) = 0x4506cf;\n                fcn.0045d6f4();\n                unaff_RBP = *(*0x20 + -0x378);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -600);\n                in_R10 = *(*0x20 + -0x260);\n                in_R11 = *(*0x20 + 0x30);\n                iVar11 = *(*0x20 + -0xb0);\n                iVar21 = *(*0x20 + -0x2d0);\n                arg3 = *(*0x20 + -0xb8);\n                ppcVar9 = NULL;\n                cVar2 = false;\n                uVar6 = 0;\n                unaff_RDI = NULL;\ncode_r0x0045084f:\n                if (ppcVar9 < unaff_RSI) {\n                    *(*0x20 + -0x268) = in_R11;\n                    iVar4 = *(*0x20 + -0x60);\n                    if (*(iVar4 + 0x14) != 0) {\n                        *(*0x20 + -0x78) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x80) = iVar4;\n                        uVar17 = *(iVar4 + 0x29);\n                        cVar13 = *(iVar4 + 0x28);\n                        if (cVar13 == '\\x04') {\n                            uVar17 = uVar17 & 0xfd;\n                        }\n                        if ((((*(*0x20 + -0x50) == arg4) && (*(*0x20 + -0x38) == in_R10)) && (arg1[0xf] == arg4)) &&\n                           (arg1[0xe] == in_R10)) {\n                            uVar17 = uVar17 & 0xfd;\n                        }\n                        *(*0x20 + -0x2f8) = ppcVar9;\n                        *(*0x20 + -0x310) = unaff_RDI;\n                        *(*0x20 + -0x338) = uVar6;\n                        *(*0x20 + -0x88) = arg3;\n                        *(*0x20 + -0x33a) = cVar2;\n                        if (*(*0x20 + -0x30) == 0) {\n                            if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (*arg1[6] != arg1)) ||\n                               (iVar4 = *(arg1[6] + 0x90),  iVar4 == 0)) {\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            else if (cVar13 == '\\r') {\n                                *(*0x20 + -0x50) = *(iVar4 + 0x40);\n                                *(*0x20 + -0x370) = 0x4509ba;\n                                iVar4 = fcn.0044abe0();\n                                *(*0x20 + -0x60) = iVar4;\n                                *(*0x20 + -0x58) = uVar6;\n                                uVar17 = *(iVar4 + 0x29);\n                                *(*0x20 + -0x38) = *(*(*(*(*0x20 + -0x70) + 0x30) + 0x90) + 0x38);\n                                iVar21 = *(*(*(*0x20 + -0x70) + 0x30) + 0x90);\n                                iVar11 = *(iVar21 + 0x150);\n                                iVar21 = *(iVar21 + 0x158);\n                            }\n                            else if (cVar13 == '\\x14') {\n                                *(*0x20 + -0x38) = *(iVar4 + 0x38);\n                                iVar11 = *(*(arg1[6] + 0x90) + 0x150);\n                                iVar21 = *(*(arg1[6] + 0x90) + 0x158);\n                                uVar17 = uVar17 & 0xfd;\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x80);\n                                uVar6 = *(*0x20 + -0x78);\n                            }\n                            *(*0x20 + -0x2d0) = iVar21;\n                            *(*0x20 + -0xb0) = iVar11;\n                            *(*0x20 + -0xd0) = uVar6;\n                            *(*0x20 + -0xc0) = iVar4;\n                            *(*0x20 + -0x337) = uVar17;\n                            *(*0x20 + -0x370) = 0x450a9d;\n                            iVar3 = fcn.0044b760(*(*0x20 + -0x50));\n                            *(*0x20 + -0x30) = iVar3 + *(*0x20 + -0x38);\n                            *(*0x20 + -0x30) = iVar3 + *(*0x20 + -0x38) + 8;\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -600);\n                            in_R10 = *(*0x20 + -0x260);\n                            uVar17 = *(*0x20 + -0x337);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                            iVar11 = *(*0x20 + -0xb0);\n                        }\n                        else {\n                            *(*0x20 + -0xd0) = *(*0x20 + -0x78);\n                            ppcVar19 = *(*0x20 + -0x80);\n                        }\n                        *(*0x20 + -0x2d0) = iVar21;\n                        *(*0x20 + -0xb0) = iVar11;\n                        *(*0x20 + -0xc0) = ppcVar19;\n                        if ((uVar17 & 1) == 0) {\n                            if ((uVar17 & 2) == 0) {\ncode_r0x00450bb4:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0x2f0) = *(*0x20 + -0x30) + -8;\n                                    *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                                }\n                                else {\n                                    *(*0x20 + -0x2b0) = ppcVar9;\n                                    *(*0x20 + -0x2f0) = 0;\n                                }\n                                *(*0x20 + -0x370) = 0x450bf9;\n                                iVar4 = fcn.0044abe0();\n                                if (iVar4 == 0) {\n                                    arg4 = *(*0x20 + -0x339);\n                                    if (*(*0x20 + -0x339) == 0) {\n                                        arg1 = *(*0x20 + -0x70);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                    }\n                                    else {\n                                        arg1 = *(*0x20 + -0x70);\n                                        if (arg1[6][0xe8] == 0x0) {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                            if (*(in_R10 + 5) == 0x13) {\n                                                arg4 = NULL;\n                                            }\n                                        }\n                                    }\n                                    *(*0x20 + -0x90) = 0;\n                                    *(*0x20 + -0x98) = uVar6;\n                                    in_R11 = *(*0x20 + 0x48);\n                                    if ((in_R11 != NULL) || (pauVar1 = in_R11,  arg4 != '\\0')) {\n                                        uVar5 = *(*0x20 + -0xd0);\n                                        *(*0x20 + -0x370) = 0x450cb5;\n                                        uVar7 = fcn.0044b2c0();\n                                        *(*0x20 + -0xa0) = uVar7;\n                                        *(*0x20 + -0x270) = uVar5;\n                                        *(*0x20 + -0x278) = *(*0x20 + -0x40);\n                                        *(*0x20 + -0x370) = 0x450cda;\n                                        fcn.004346e0();\n                                        *(*0x20 + -0x370) = 0x450ceb;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x370) = 0x450d05;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x370) = 0x450d16;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x370) = 0x450d25;\n                                        fcn.00434e40();\n                                        *(*0x20 + -0x370) = 0x450d2a;\n                                        fcn.00434940();\n                                        *(*0x20 + -0x370) = 0x450d2f;\n                                        fcn.00434760();\n                                        unaff_RDI = *(*0x20 + -0x2f0);\n                                        *(*0x20 + -0x370) = 0x450d50;\n                                        fcn.00453b80(*0x20 + -0x60);\n                                        iVar4 = *(*0x20 + -0x90);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar6 = *(*0x20 + -0x98);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                        in_R11 = *(*0x20 + 0x48);\n                                        pauVar1 = *(*0x20 + 0x48);\n                                    }\n                                    if (pauVar1 != NULL) goto code_r0x00451e45;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                }\n                                cVar2 = *(*0x20 + -0x33a);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x310);\n                                ppcVar19 = *(*0x20 + -0xc0);\n                                iVar11 = *(*0x20 + -0xb0);\n                                iVar21 = *(*0x20 + -0x2d0);\n                                *(*0x20 + -0xe8) = iVar4;\n                                *(*0x20 + -0xf0) = uVar6;\n                                uVar5 = *(*0x20 + -0x2f8);\n                                uVar6 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                in_R11 = *(*0x20 + 0x48);\n                                if (in_R11 != NULL) {\n                                    if (ppcVar9 < 1) goto code_r0x00450bb4;\n                                    if (in_R11 != NULL) goto code_r0x00451e56;\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                *(*0x20 + -0x2b8) = ppcVar9;\n                                *(*0x20 + -0xe8) = 0;\n                                *(*0x20 + -0xf0) = 0;\n                                uVar5 = *(*0x20 + -0x2b8);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            *(*0x20 + -0x2c0) = uVar5;\n                            *(*0x20 + -200) = *(*0x20 + -0xf0);\n                            ppcVar9 = *(*0x20 + -0x2c0);\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -200) = 0;\n                            arg3 = NULL;\n                        }\n                        iVar4 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x28) = iVar4 - 8U;\n                        if (*(*0x20 + -0x38) < iVar4 - 8U) {\n                            *(*0x20 + -0x28) = iVar4 + -0x10;\n                        }\n                        *(*0x20 + -0xe8) = arg3;\n                        arg4 = *(*0x20 + 0x48);\n                        if (arg4 == NULL) {\n                            in_R10 = *(*0x20 + -0x339);\n                            if (*(*0x20 + -0x339) == 0) goto code_r0x00450f3a;\n                        }\n                        else {\n                            in_R10 = *(*0x20 + -0x339);\n                        }\n                        *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                        if (arg4 == NULL) {\n                            bVar22 = false;\n                        }\n                        else {\n                            bVar22 = *(ppcVar19 + 0xc) == -0x80000000;\n                        }\n                        *(*0x20 + -0x18) = *(ppcVar19 + 0xc);\n                        *(*0x20 + -0x10) = 0;\n                        if (bVar22) {\n                            *(*0x20 + -0x370) = 0x450ed8;\n                            uVar5 = fcn.00452300(*(*0x20 + -0xd0));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x10) = ppcVar19;\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg4 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x339);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                        }\n                        arg3 = *(*0x20 + -0xe8);\n                        iVar11 = *(*0x20 + -0xb0);\ncode_r0x00450f3a:\n                        *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                        if (cVar2 != '\\0') {\n                            uVar10 = *(*(*0x20 + -0x60) + 2);\n                            if (uVar10 == 0) {\n                                *(*0x20 + -0x48) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x48) = **(*0x20 + -0x60) + uVar10 + 1;\n                            }\n                            iVar11 = *(*0x20 + -0xb0);\n                        }\n                        if (arg4 == NULL) {\n                            in_R11 = *(*0x20 + 0x38);\n                            pauVar1 = in_R11;\n                        }\n                        else {\n                            pcVar18 = *arg4;\n                            *(*0x20 + -0x370) = 0x450fc3;\n                            cVar2 = (*pcVar18)();\n                            if (cVar2 == '\\0') {\n                                return *(*0x20 + -0x2f8);\n                            }\n                            pauVar1 = *(*0x20 + 0x38);\n                            ppcVar9 = *(*0x20 + -0x2f8);\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            uVar6 = *(*0x20 + -0x338);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0xe8);\n                            arg4 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x339);\n                            in_R11 = *(*0x20 + 0x38);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            iVar11 = *(*0x20 + -0xb0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                        }\n                        if (pauVar1 == NULL) goto code_r0x004511b6;\n                        ppcVar20 = *(*0x20 + -0x50);\n                        if ((((ppcVar9 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (cVar2 != '\\0')) ||\n                           (*ppcVar19 == ppcVar20)) {\n                            ppcVar16 = ppcVar20;\n                            ppcVar20 = ppcVar20 + 1;\n                        }\n                        else {\n                            ppcVar16 = ppcVar20 + -1;\n                        }\n                        if (*(ppcVar19 + 0x2b) < 4) {\n                            *(*0x20 + -0x2c8) = ppcVar9;\n                            *(*0x20 + -0x118) = 0;\n                            ppcVar9 = *(*0x20 + -0x2c8);\n                        }\n                        else {\n                            *(*0x20 + -0x328) = ppcVar16;\n                            iVar11 = ppcVar19 + *(ppcVar19 + 4) * 4 + 0x2c;\n                            if ((iVar11 >> 2 & 1) != 0) {\n                                if ((ppcVar19 >> 2 & 1) != 0) {\n                                    *(*0x20 + -0x120) = iVar11;\n                                    *(*0x20 + -0x318) = ppcVar20;\n                                    *(*0x20 + -0x370) = 0x4510ef;\n                                    fcn.004346e0();\n                                    *(*0x20 + -0x370) = 0x451105;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0x370) = 0x451112;\n                                    fcn.00434f60();\n                                    *(*0x20 + -0x370) = 0x451117;\n                                    fcn.00434940();\n                                    *(*0x20 + -0x370) = 0x45111c;\n                                    fcn.00434760();\n                                    ppcVar9 = *(*0x20 + -0x2f8);\n                                    arg1 = *(*0x20 + -0x70);\n                                    cVar2 = *(*0x20 + -0x33a);\n                                    uVar6 = *(*0x20 + -0x338);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    unaff_RDI = *(*0x20 + -0x310);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    iVar11 = *(*0x20 + -0x120);\n                                    in_R10 = *(*0x20 + -0x339);\n                                    in_R11 = *(*0x20 + 0x38);\n                                    ppcVar19 = *(*0x20 + -0xc0);\n                                    ppcVar20 = *(*0x20 + -0x318);\n                                }\n                                iVar11 = iVar11 + 4;\n                            }\n                            *(*0x20 + -0x118) = *(iVar11 + 0x18);\n                            ppcVar16 = *(*0x20 + -0x328);\n                        }\n                        uVar12 = uVar6;\n                        if (*(*0x20 + -0x118) != 0) goto code_r0x00451c40;\n                        arg4 = *(*0x20 + -0x268);\n                        do {\n                            if (((*(ppcVar19 + 5) != '\\x16') || (cVar13 = uVar6,  cVar13 == '\\t')) ||\n                               ((cVar13 == '\\x13' || (cVar13 == '\\x0f')))) {\n                                if (arg4 < 1) {\n                                    if (ppcVar9 < unaff_RSI) {\n                                        if (0xfffff < ppcVar9) {\n                                            *(*0x20 + -0x370) = 0x451e2f;\n                                            fcn.0045d480(0x100000);\ncode_r0x00451e2f:\n                                            *(*0x20 + -0x370) = 0x451e39;\n                                            fcn.0045d480(0x100000);\ncode_r0x00451e39:\n                                            arg1 = 0x100000;\n                                            *(*0x20 + -0x370) = 0x451e45;\n                                            fcn.0045d480(0x100000);\n                                            goto code_r0x00451e45;\n                                        }\n                                        *(*in_R11 + ppcVar9 * 8) = ppcVar20;\n                                        ppcVar9 = ppcVar9 + 1;\n                                    }\n                                }\n                                else {\n                                    arg4 = arg4 + -1;\n                                }\n                            }\n                            uVar6 = *(ppcVar19 + 5);\n                            ppcVar9 = ppcVar9 + -1;\n                            iVar11 = *(*0x20 + -0xb0);\n                            iVar21 = *(*0x20 + -0x2d0);\n                            *(*0x20 + -0x268) = arg4;\n                            arg4 = *(*0x20 + 0x48);\ncode_r0x004511b6:\n                            if (in_R10 == '\\0') goto code_r0x0045133a;\n                            in_R10 = *(*0x20 + -0x50);\n                            if (((0 < ppcVar9) || ((*(*0x20 + 8) >> 1 & 1) == 0)) &&\n                               ((*ppcVar19 < in_R10 && (cVar2 == '\\0')))) {\n                                in_R10 = in_R10 + -1;\n                            }\n                            *(*0x20 + -0x270) = ppcVar9;\n                            if (*(ppcVar19 + 0x2b) < 4) {\n                                piVar15 = NULL;\n                            }\n                            else {\n                                iVar4 = ppcVar19 + *(ppcVar19 + 4) * 4 + 0x2c;\n                                if ((iVar4 >> 2 & 1) != 0) {\n                                    if ((ppcVar19 >> 2 & 1) != 0) {\n                                        *(*0x20 + -0x110) = iVar4;\n                                        *(*0x20 + -800) = in_R10;\n                                        *(*0x20 + -0x335) = uVar6;\n                                        *(*0x20 + -0x370) = 0x45125c;\n                                        fcn.004346e0();\n                                        *(*0x20 + -0x370) = 0x45126d;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x370) = 0x45127a;\n                                        fcn.00434f60();\n                                        *(*0x20 + -0x370) = 0x45127f;\n                                        fcn.00434940();\n                                        *(*0x20 + -0x370) = 0x451285;\n                                        fcn.00434760();\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar6 = *(*0x20 + -0x335);\n                                        unaff_RSI = *(*0x20 + 0x40);\n                                        unaff_RDI = *(*0x20 + -0x310);\n                                        arg3 = *(*0x20 + -0xe8);\n                                        iVar4 = *(*0x20 + -0x110);\n                                        in_R10 = *(*0x20 + -800);\n                                        iVar11 = *(*0x20 + -0xb0);\n                                        iVar21 = *(*0x20 + -0x2d0);\n                                    }\n                                    iVar4 = iVar4 + 4;\n                                }\n                                piVar15 = *(iVar4 + 0x18);\n                                ppcVar19 = *(*0x20 + -0xc0);\n                                arg4 = *(*0x20 + 0x48);\n                            }\n                            uVar10 = uVar6;\n                            if (piVar15 == NULL) goto code_r0x00451833;\n                            *(*0x20 + -0x108) = piVar15;\n                            in_R11 = *0x20 + -0x250;\n                            *in_R11 = in_XMM15;\n                            *(*0x20 + -0x240) = in_XMM15;\n                            arg3 = *0x20 + -0x230;\n                            *arg3 = in_XMM15;\n                            while( true ) {\n                                *(*0x20 + -0x290) = unaff_RDI;\n                                *(*0x20 + -0x338) = uVar6;\n                                *(*0x20 + -0x278) = in_R10;\n                                *(*0x20 + -0x370) = 0x451636;\n                                iVar3 = fcn.0044b9c0(2);\n                                if (iVar3 < 0) {\n                                    ppcVar9 = *(*0x20 + -0x270);\n                                    arg1 = *(*0x20 + -0x70);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    arg4 = *(*0x20 + 0x48);\n                                    ppcVar19 = *(*0x20 + -0xc0);\n                                    iVar11 = *(*0x20 + -0xb0);\n                                    iVar21 = *(*0x20 + -0x2d0);\n                                    uVar10 = *(*0x20 + -0x338);\n                                    in_R10 = *(*0x20 + -0x278);\n                                    unaff_RDI = *(*0x20 + -0x290);\n                                    goto code_r0x00451833;\n                                }\n                                uVar6 = iVar3;\n                                if (0xfffff < uVar6) break;\n                                *(*0x20 + -0x298) = uVar6 * 5;\n                                iVar11 = *(*0x20 + -0x108);\n                                *(*0x20 + -0x248) = *(iVar11 + 0xc + uVar6 * 0x14);\n                                *(*0x20 + -0x228) = *(iVar11 + uVar6 * 0x14 + 2);\n                                *(*0x20 + -0xa8) = iVar11 + uVar6 * 0x14;\n                                in_R11 = *(*0x20 + 8);\n                                if ((in_R11 & 1) == 0) {\n                                    *(*0x20 + -0x370) = 0x4516cf;\n                                    cVar2 = fcn.00453480(*(*0x20 + -0x70), *(*0x20 + -0x290), *(*0x20 + -0x338));\n                                    if (cVar2 != '\\0') goto code_r0x004516e5;\n                                    unaff_RDI = *(*0x20 + -0x290);\n                                }\n                                else {\ncode_r0x004516e5:\n                                    uVar5 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x370) = 0x4516fa;\n                                    uVar7 = fcn.0044b2c0();\n                                    *(*0x20 + -0x100) = uVar7;\n                                    *(*0x20 + -0x300) = uVar5;\n                                    uVar5 = *(*0x20 + -0x278);\n                                    uVar7 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x370) = 0x451725;\n                                    uVar8 = fcn.0044b700(uVar5);\n                                    *(*0x20 + -0xd8) = uVar8;\n                                    *(*0x20 + -0x2e8) = uVar7;\n                                    *(*0x20 + -0x330) = uVar5;\n                                    *(*0x20 + -0x370) = 0x45173e;\n                                    fcn.004346e0();\n                                    *(*0x20 + -0x370) = 0x451750;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0x370) = 0x451765;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0x370) = 0x45176a;\n                                    fcn.00434760();\n                                    *(*0x20 + -0x370) = 0x45176f;\n                                    fcn.004346e0();\n                                    *(*0x20 + -0x370) = 0x451785;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0x370) = 0x45179a;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0x370) = 0x4517ab;\n                                    fcn.00434fe0();\n                                    *(*0x20 + -0x370) = 0x4517b7;\n                                    fcn.00434de0(*(*0x20 + -0x330));\n                                    *(*0x20 + -0x370) = 0x4517bc;\n                                    fcn.00434940();\n                                    *(*0x20 + -0x370) = 0x4517c5;\n                                    fcn.00434760();\n                                    unaff_RDI = *(*0x20 + -0x290) + 1;\n                                }\n                                piVar15 = *(*0x20 + -0x60);\n                                uVar6 = *(*(*0x20 + -0xa8) + 2);\n                                arg4 = *(*0x20 + -0x108);\n                                arg3 = arg4 + *(*0x20 + -0x298) * 4 + 0x10;\n                                in_R10 = **arg3 + *piVar15;\n                            }\n                            *(*0x20 + -0x370) = 0x451c10;\n                            ppcVar9 = fcn.0045d480(0x100000);\n                            while( true ) {\n                                uVar12 = *(arg4 + 2);\n                                iVar3 = *(arg3[1] + piVar15 * 4);\n                                iVar11 = **(*0x20 + -0x60);\n                                ppcVar20 = iVar3 + iVar11 + 1;\n                                *(*0x20 + -0x268) = in_R10;\n                                ppcVar16 = iVar3 + iVar11;\ncode_r0x00451c40:\n                                unaff_RDI = ppcVar16;\n                                *(*0x20 + -0x278) = ppcVar20;\n                                *(*0x20 + -0x270) = ppcVar9;\n                                *(*0x20 + -0x338) = uVar12;\n                                unaff_RSI = *0x20 + -0x220;\n                                *(*0x20 + -0x370) = 0x451c74;\n                                arg4 = unaff_RDI;\n                                iVar3 = fcn.0044b9c0(2);\n                                if (iVar3 < 0) break;\n                                uVar6 = iVar3;\n                                if (0xfffff < uVar6) goto code_r0x00451e39;\n                                piVar15 = uVar6 * 5;\n                                arg3 = *(*0x20 + -0x118);\n                                arg4 = arg3 + uVar6 * 0x14;\n                                if ((((*(arg3 + uVar6 * 0x14 + 2) == '\\x16') &&\n                                     (cVar2 = *(*0x20 + -0x338),  cVar2 != '\\t')) && (cVar2 != '\\x13')) &&\n                                   (cVar2 != '\\x0f')) {\n                                    in_R11 = *(*0x20 + 0x40);\n                                    ppcVar9 = *(*0x20 + -0x270);\n                                    in_R10 = *(*0x20 + -0x268);\n                                }\n                                else {\n                                    in_R10 = *(*0x20 + -0x268);\n                                    if (in_R10 < 1) {\n                                        in_R11 = *(*0x20 + 0x40);\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                        if (ppcVar9 < in_R11) {\n                                            if (0xfffff < ppcVar9) goto code_r0x00451e2f;\n                                            *(*(*0x20 + 0x38) + ppcVar9 * 8) = *(*0x20 + -0x278);\n                                            ppcVar9 = ppcVar9 + 1;\n                                        }\n                                    }\n                                    else {\n                                        in_R10 = in_R10 + -1;\n                                        in_R11 = *(*0x20 + 0x40);\n                                        ppcVar9 = *(*0x20 + -0x270);\n                                    }\n                                }\n                            }\n                            arg1 = *(*0x20 + -0x70);\n                            cVar2 = *(*0x20 + -0x33a);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x310);\n                            arg3 = *(*0x20 + -0xe8);\n                            in_R10 = *(*0x20 + -0x339);\n                            in_R11 = *(*0x20 + 0x38);\n                            ppcVar19 = *(*0x20 + -0xc0);\n                            uVar6 = *(*0x20 + -0x338);\n                            ppcVar9 = *(*0x20 + -0x270);\n                            ppcVar20 = *(*0x20 + -0x278);\n                            arg4 = *(*0x20 + -0x268);\n                        } while( true );\n                    }\n                }\ncode_r0x00451430:\n                while( true ) {\n                    if (*(*0x20 + -0x339) != '\\0') {\n                        ppcVar9 = unaff_RDI;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= ppcVar9)) break;\n                    pcVar18 = arg1[0x10];\n                    if (pcVar18 == *(*0x20 + -0x38)) {\n                        return ppcVar9;\n                    }\n                    *(*0x20 + -600) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x260) = pcVar18;\n                    *(*0x20 + -0x2f8) = ppcVar9;\n                    *(*0x20 + -0x280) = arg1[0x13];\n                    *(*0x20 + -0x370) = 0x45149e;\n                    fcn.004346e0();\n                    *(*0x20 + -0x370) = 0x4514af;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x4514bc;\n                    fcn.00434de0();\n                    *(*0x20 + -0x370) = 0x4514cd;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x4514da;\n                    fcn.00434e40();\n                    *(*0x20 + -0x370) = 0x4514eb;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x4514f8;\n                    fcn.00434e40();\n                    *(*0x20 + -0x370) = 0x4514fd;\n                    fcn.00434940();\n                    *(*0x20 + -0x370) = 0x451505;\n                    fcn.00434760();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -600) = arg1;\n                    *(*0x20 + -0x260) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x370) = 0x451529;\n                    fcn.004346e0();\n                    *(*0x20 + -0x370) = 0x45153a;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x451547;\n                    fcn.00434e40();\n                    *(*0x20 + -0x370) = 0x451558;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x451565;\n                    fcn.00434e40();\n                    *(*0x20 + -0x370) = 0x451576;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x451585;\n                    fcn.00434de0();\n                    *(*0x20 + -0x370) = 0x451596;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x370) = 0x4515a5;\n                    fcn.00434de0();\n                    *(*0x20 + -0x370) = 0x4515aa;\n                    fcn.00434940();\n                    *(*0x20 + -0x370) = 0x4515af;\n                    fcn.00434760();\n                    *(*0x20 + -0x370) = 0x4515c5;\n                    ppcVar9 = in_R10;\n                    fcn.00432f60();\n                    in_R10 = ppcVar9;\n                }\n                return ppcVar9;\n            }\n            goto code_r0x00451ec5;\n        }\n        goto code_r0x00451ed6;\n    }\n    goto code_r0x00451ee8;\ncode_r0x00451833:\n    *(*0x20 + -0x290) = unaff_RDI;\n    *(*0x20 + -0x278) = in_R10;\n    if ((*(*0x20 + 8) & 1) == 0) {\n        *(*0x20 + -0x370) = 0x451885;\n        cVar2 = fcn.00453480(arg1, in_R10 & 0xffffffffffffff00 | unaff_RDI == NULL, uVar10);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        unaff_RDI = *(*0x20 + -0x290);\n        arg3 = *(*0x20 + -0xe8);\n        arg4 = *(*0x20 + 0x48);\n        ppcVar19 = *(*0x20 + -0xc0);\n        iVar11 = *(*0x20 + -0xb0);\n        iVar21 = *(*0x20 + -0x2d0);\n        ppcVar9 = *(*0x20 + -0x270);\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 != '\\0') {\n        uVar5 = *(*0x20 + -0xd0);\n        *(*0x20 + -0x370) = 0x4518ff;\n        uVar7 = fcn.0044b2c0();\n        *(*0x20 + -0xf8) = uVar7;\n        *(*0x20 + -0x308) = uVar5;\n        uVar5 = *(*0x20 + -0x278);\n        uVar7 = *(*0x20 + -0xd0);\n        *(*0x20 + -0x370) = 0x451929;\n        uVar8 = fcn.0044b700(uVar5);\n        *(*0x20 + -0xe0) = uVar8;\n        *(*0x20 + -0x2e0) = uVar7;\n        *(*0x20 + -0x334) = uVar5;\n        iVar11 = *(*0x20 + -0x308);\n        if (iVar11 == 0xf) {\n            piVar15 = *(*0x20 + -0xf8);\n            if ((((*piVar15 == 0x2e656d69746e7572) && (*(piVar15 + 1) == 0x61706f67)) && (*(piVar15 + 0xc) == 0x696e))\n               && (*(piVar15 + 0xe) == 'c')) {\n                iVar11 = 5;\n                piVar15 = 0x4a6581;\n            }\n        }\n        else {\n            piVar15 = *(*0x20 + -0xf8);\n        }\n        *(*0x20 + -0x308) = iVar11;\n        *(*0x20 + -0xf8) = piVar15;\n        *(*0x20 + -0x370) = 0x45199e;\n        fcn.004346e0();\n        *(*0x20 + -0x370) = 0x4519b0;\n        fcn.00434fe0();\n        *(*0x20 + -0x370) = 0x4519c5;\n        fcn.00434fe0();\n        *(*0x20 + -0x370) = 0x4519ca;\n        fcn.00434760();\n        *(*0x20 + -0x370) = 0x4519e7;\n        fcn.00451f60(*(*0x20 + -0x20));\n        *(*0x20 + -0x370) = 0x4519ec;\n        fcn.004346e0();\n        *(*0x20 + -0x370) = 0x4519fd;\n        fcn.00434fe0();\n        *(*0x20 + -0x370) = 0x451a05;\n        fcn.00434760();\n        *(*0x20 + -0x370) = 0x451a0a;\n        fcn.004346e0();\n        *(*0x20 + -0x370) = 0x451a1b;\n        fcn.00434fe0();\n        *(*0x20 + -0x370) = 0x451a30;\n        fcn.00434fe0();\n        *(*0x20 + -0x370) = 0x451a45;\n        fcn.00434fe0();\n        *(*0x20 + -0x370) = 0x451a51;\n        fcn.00434de0();\n        *(*0x20 + -0x370) = 0x451a56;\n        fcn.00434760();\n        uVar6 = **(*0x20 + -0xc0);\n        if (uVar6 < *(*0x20 + -0x50)) {\n            *(*0x20 + -0x278) = *(*0x20 + -0x50);\n            *(*0x20 + -0x2a0) = uVar6;\n            *(*0x20 + -0x370) = 0x451a85;\n            fcn.004346e0();\n            *(*0x20 + -0x370) = 0x451a96;\n            fcn.00434fe0();\n            *(*0x20 + -0x370) = 0x451aae;\n            fcn.00434e40(*(*0x20 + -0x2a0));\n            *(*0x20 + -0x370) = 0x451ab3;\n            fcn.00434760();\n        }\n        iVar11 = *(*(*0x20 + -0x70) + 0x30);\n        if ((((iVar11 != 0) && (0 < *(iVar11 + 0xc4))) && (*(iVar11 + 0x90) == *(*0x20 + -0x70))) ||\n           (1 < *(*0x20 + -0x32c))) {\n            *(*0x20 + -0x278) = *(*0x20 + -0x30);\n            *(*0x20 + -0x2a0) = *(*0x20 + -0x38);\n            *(*0x20 + -0x2a8) = *(*0x20 + -0x50);\n            *(*0x20 + -0x370) = 0x451b25;\n            fcn.004346e0();\n            *(*0x20 + -0x370) = 0x451b36;\n            fcn.00434fe0();\n            *(*0x20 + -0x370) = 0x451b45;\n            fcn.00434e40();\n            *(*0x20 + -0x370) = 0x451b56;\n            fcn.00434fe0();\n            *(*0x20 + -0x370) = 0x451b65;\n            fcn.00434e40();\n            *(*0x20 + -0x370) = 0x451b76;\n            fcn.00434fe0();\n            *(*0x20 + -0x370) = 0x451b85;\n            fcn.00434e40();\n            *(*0x20 + -0x370) = 0x451b8a;\n            fcn.00434760();\n        }\n        *(*0x20 + -0x370) = 0x451b8f;\n        fcn.004346e0();\n        *(*0x20 + -0x370) = 0x451b94;\n        fcn.00434940();\n        *(*0x20 + -0x370) = 0x451b99;\n        fcn.00434760();\n        unaff_RDI = *(*0x20 + -0x290) + 1;\n        ppcVar9 = *(*0x20 + -0x270);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + -0xe8);\n        arg4 = *(*0x20 + 0x48);\n        ppcVar19 = *(*0x20 + -0xc0);\n        iVar11 = *(*0x20 + -0xb0);\n        iVar21 = *(*0x20 + -0x2d0);\n    }\n    uVar6 = *(ppcVar19 + 5);\ncode_r0x0045133a:\n    ppcVar9 = ppcVar9 + 1;\n    if ((*(ppcVar19 + 5) == '\\x04') && (0 < iVar21)) {\n        *(*0x20 + -0x2d8) = *(iVar11 + -8 + iVar21 * 8);\n        in_R11 = *(*0x20 + -0x268);\n        if ((in_R11 == NULL) && (arg4 == NULL)) {\n            *(*0x20 + -0x288) = unaff_RDI;\n            *(*0x20 + -0x336) = uVar6;\n            *(*0x20 + -0x370) = 0x45139a;\n            ppcVar9 = fcn.004524c0(*(*0x20 + -0x2d8));\n            arg1 = *(*0x20 + -0x70);\n            uVar6 = *(*0x20 + -0x336);\n            unaff_RSI = *(*0x20 + 0x40);\n            unaff_RDI = *(*0x20 + -0x288);\n            arg3 = *(*0x20 + -0xe8);\n            in_R11 = *(*0x20 + -0x268);\n            ppcVar19 = *(*0x20 + -0xc0);\n            iVar11 = *(*0x20 + -0xb0);\n            iVar21 = *(*0x20 + -0x2d0);\n        }\n        iVar21 = iVar21 + -1;\n    }\n    else {\n        in_R11 = *(*0x20 + -0x268);\n    }\n    pcVar18 = *(ppcVar19 + 5);\n    in_R10 = ppcVar9;\n    if (arg3 == NULL) goto code_r0x00451430;\ncode_r0x004507cf:\n    *(*0x20 + -0x60) = arg3;\n    *(*0x20 + -0x58) = *(*0x20 + -200);\n    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n    *(*0x20 + -0x40) = 0;\n    *(*0x20 + -0x38) = *(*0x20 + -0x30);\n    *(*0x20 + -0x30) = 0;\n    *(*0x20 + -0x10) = 0;\n    cVar2 = pcVar18 == '\\x13';\n    arg4 = *(*0x20 + -600);\n    arg3 = NULL;\n    in_R10 = *(*0x20 + -0x260);\n    goto code_r0x0045084f;\ncode_r0x00451e45:\n    *(*0x20 + -0x370) = 0x451e56;\n    fcn.00432f60();\ncode_r0x00451e56:\n    uVar5 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x370) = 0x451e66;\n    uVar7 = fcn.0044b2c0();\n    *(*0x20 + -0xa0) = uVar7;\n    *(*0x20 + -0x268) = uVar5;\n    *(*0x20 + -0x370) = 0x451e7b;\n    fcn.004346e0();\n    *(*0x20 + -0x370) = 0x451e8c;\n    fcn.00434fe0();\n    *(*0x20 + -0x370) = 0x451ea5;\n    fcn.00434fe0();\n    *(*0x20 + -0x370) = 0x451eaa;\n    fcn.00434940();\n    *(*0x20 + -0x370) = 0x451eaf;\n    fcn.00434760();\n    *(*0x20 + -0x370) = 0x451ec5;\n    fcn.00432f60();\ncode_r0x00451ec5:\n    *(*0x20 + -0x370) = 0x451ed6;\n    fcn.00432f60();\ncode_r0x00451ed6:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x370) = 0x451ee7;\n    in_RAX = fcn.00432f60();\ncode_r0x00451ee8:\n    *(puVar14 + 0x10) = in_RAX;\n    *(puVar14 + 0x18) = unaff_RBX;\n    *(puVar14 + 0x20) = arg1;\n    *(puVar14 + 0x28) = unaff_RDI;\n    *(puVar14 + 0x30) = unaff_RSI;\n    *(puVar14 + 0x38) = arg3;\n    *(puVar14 + 0x40) = arg4;\n    *(puVar14 + 0x48) = in_R10;\n    *(puVar14 + 0x50) = in_R11;\n    *(puVar14 + -8) = 0x451f1a;\n    fcn.0045ad80();\n    in_RAX = *(puVar14 + 0x10);\n    unaff_RBX = *(puVar14 + 0x18);\n    arg1 = *(puVar14 + 0x20);\n    unaff_RDI = *(puVar14 + 0x28);\n    unaff_RSI = *(puVar14 + 0x30);\n    arg3 = *(puVar14 + 0x38);\n    arg4 = *(puVar14 + 0x40);\n    in_R10 = *(puVar14 + 0x48);\n    in_R11 = *(puVar14 + 0x50);\n    *0x20 = puVar14;\n    goto code_r0x00450500;\n}\n",
        "token_count": 13298
    },
    "00452aa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452aa0(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (((((*0x5981cd != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.0045da00();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.00453e80();\n    }\n    uVar2 = *(unaff_RDI + 0x90) & 0xffffefff;\n    if (uVar2 == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.00450500(arg1, uVar2, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.00450500(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    fcn.00452760();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (0 < iVar1) {\n        iVar3 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.00452dc0(puStack56[2]);\n            iVar3 = iVar3 + 1;\n            if (iVar1 <= iVar3) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "00452f80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452f80(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x88) = 0x452fbf;\n            uVar4 = fcn.0044b2c0();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x50) = unaff_RBX;\n            iVar7 = *(*0x20 + -0x10);\n            if (*(iVar7 + 0x2b) < 4) {\n                iVar7 = 0;\n            }\n            else {\n                iVar6 = iVar7 + *(iVar7 + 0x20) * 4 + 0x2c;\n                if ((iVar6 >> 2 & 1) != 0) {\n                    if ((iVar7 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x30) = iVar6;\n                        *(*0x20 + -0x88) = 0x453008;\n                        fcn.004346e0();\n                        *(*0x20 + -0x88) = 0x453019;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x88) = 0x453025;\n                        fcn.00434f60();\n                        *(*0x20 + -0x88) = 0x45302a;\n                        fcn.00434940();\n                        *(*0x20 + -0x88) = 0x45302f;\n                        fcn.00434760();\n                        uVar4 = *(*0x20 + -0x28);\n                        iVar6 = *(*0x20 + -0x30);\n                        unaff_RBX = *(*0x20 + -0x50);\n                    }\n                    iVar6 = iVar6 + 4;\n                }\n                iVar7 = *(iVar6 + 0x18);\n            }\n            if (iVar7 == 0) goto code_r0x004530b9;\n            *(*0x20 + -0x38) = iVar7;\n            unaff_RBX = *(*0x20 + -0x18);\n            *(*0x20 + -0x88) = 0x453076;\n            iVar3 = fcn.0044b9c0(2);\n            if (iVar3 < 0) {\n                unaff_RBX = *(*0x20 + -0x50);\n                uVar4 = *(*0x20 + -0x28);\n                goto code_r0x004530b9;\n            }\n            if (iVar3 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x38) + 0xc + iVar3 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x4530a8;\n                uVar4 = fcn.0044b420(uVar1);\ncode_r0x004530b9:\n                *(*0x20 + -0x50) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar4;\n                uVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x4530de;\n                uVar5 = fcn.0044b5e0(uVar4);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x48) = uVar2;\n                *(*0x20 + -0x54) = uVar4;\n                iVar7 = *(*0x20 + -0x50);\n                if (iVar7 == 0xf) {\n                    piVar9 = *(*0x20 + -0x28);\n                    if ((((*piVar9 == 0x2e656d69746e7572) && (*(piVar9 + 1) == 0x61706f67)) &&\n                        (*(piVar9 + 0xc) == 0x696e)) && (*(piVar9 + 0xe) == 'c')) {\n                        iVar7 = 5;\n                        piVar9 = 0x4a6581;\n                    }\n                }\n                else {\n                    piVar9 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = iVar7;\n                *(*0x20 + -0x28) = piVar9;\n                *(*0x20 + -0x88) = 0x453145;\n                fcn.004346e0();\n                *(*0x20 + -0x88) = 0x453154;\n                fcn.00434fe0();\n                *(*0x20 + -0x88) = 0x453165;\n                fcn.00434fe0();\n                *(*0x20 + -0x88) = 0x45316a;\n                fcn.00434760();\n                *(*0x20 + -0x88) = 0x45316f;\n                fcn.004346e0();\n                *(*0x20 + -0x88) = 0x453185;\n                fcn.00434fe0();\n                *(*0x20 + -0x88) = 0x453194;\n                fcn.00434fe0();\n                *(*0x20 + -0x88) = 0x4531a5;\n                fcn.00434fe0();\n                *(*0x20 + -0x88) = 0x4531b1;\n                fcn.00434de0();\n                *(*0x20 + -0x88) = 0x4531b6;\n                fcn.00434760();\n                if (**(*0x20 + -0x10) < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x40) = **(*0x20 + -0x10);\n                    *(*0x20 + -0x88) = 0x4531d5;\n                    fcn.004346e0();\n                    *(*0x20 + -0x88) = 0x4531e6;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x88) = 0x4531fb;\n                    fcn.00434e40(*(*0x20 + -0x40));\n                    *(*0x20 + -0x88) = 0x453205;\n                    fcn.00434760();\n                }\n                *(*0x20 + -0x88) = 0x45320a;\n                fcn.004346e0();\n                *(*0x20 + -0x88) = 0x45320f;\n                fcn.00434940();\n                *(*0x20 + -0x88) = 0x453214;\n                fcn.00434760();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x88) = 0x453228;\n            in_RAX = fcn.0045d480(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + -8) = 0x45323d;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1965
    },
    "00453720": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453720(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045ed60();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434760();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    if (0 < iVar3) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 451
    },
    "004563c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004563c0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045d480(0);\n    }\n    fcn.0045d540(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 801
    },
    "004565a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004565a0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x004566ec;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00456640;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045d480(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00456640:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045d480(unaff_RBX);\n    }\n    fcn.0045d480(unaff_RBX);\ncode_r0x004566ec:\n    fcn.0045d480(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 594
    },
    "00458440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00458440(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x004584d6:\n            uVar1 = 4;\n            goto code_r0x00458512;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00458512;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00458512;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00458512;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x004584d6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00458512;\n        }\n    }\n    uVar3 = fcn.00449240();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00458512:\n    if ((*0x5981ce != '\\0') || (*0x5981cc != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x52c188;\n    *0x52c188 = uVar1 | *0x598238;\n    return uVar2;\n}\n",
        "token_count": 598
    },
    "00463620": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00463620(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX < 1) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x5300e0);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x52d040)) || (*(iVar1 + 0x52d041) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045d480(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 573
    },
    "004637e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004637e0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX < 1) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x5300e0);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x52d040)) || (*(iVar1 + 0x52d041) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045d480(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 574
    },
    "004639a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004639a0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x00463aec;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00463a40;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045d480(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00463a40:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045d480(unaff_RBX);\n    }\n    fcn.0045d480(unaff_RBX);\ncode_r0x00463aec:\n    fcn.0045d480(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 596
    },
    "00463b00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00463b00(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x00463c53;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x5300e0);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x00463c48:\n                        fcn.0045d480(unaff_RBX);\ncode_r0x00463c53:\n                        fcn.0045d480(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x52d040)) || (*(iVar1 + 0x52d041) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x00463c3d:\n                            fcn.0045d480(unaff_RBX);\n                            goto code_r0x00463c48;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045d480(unaff_RBX);\n                                    goto code_r0x00463c3d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "00463c60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00463c60(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x00463db3;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x5300e0);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x00463da8:\n                        fcn.0045d480(unaff_RBX);\ncode_r0x00463db3:\n                        fcn.0045d480(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x52d040)) || (*(iVar1 + 0x52d041) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x00463d9d:\n                            fcn.0045d480(unaff_RBX);\n                            goto code_r0x00463da8;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045d480(unaff_RBX);\n                                    goto code_r0x00463d9d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "00470800": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00470800(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    ulong unaff_RBP;\n    uint *puVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    int64_t iVar16;\n    uint *puVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0xc0) = in_RAX;\n            *(*0x20 + 200) = unaff_RBX;\n            *(*0x20 + 8) = 0;\n            *(*0x20 + -0x1b0) = *0x20 + -8;\n            *(*0x20 + -0x1a8) = 0x47086f;\n            fcn.0045d70f();\n            unaff_RBP = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x1a8) = 0x47087f;\n            uVar4 = fcn.0040c140();\n            *(*0x20 + -0xb0) = uVar4;\n            *(*0x20 + -0x15a) = 0;\n            *(*0x20 + -0x50) = 0;\n            *(*0x20 + -0x48) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            unaff_RBX = *(*0x20 + 200);\n            if (unaff_RBX == 0) {\n                puVar11 = NULL;\ncode_r0x00470a43:\n                iVar5 = *(*0x20 + 0xc0);\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                puVar13 = *(iVar5 + 0x30);\n                if (*(iVar5 + 0x30) == 0) {\n                    iVar7 = 0;\n                    puVar17 = NULL;\ncode_r0x00470a8d:\n                    *(*0x20 + -0x158) = puVar17;\n                    *(*0x20 + -0xc0) = iVar7;\n                    iVar9 = 0;\n                    puVar13 = puVar11;\ncode_r0x00470ac7:\n                    *(*0x20 + -0x138) = puVar13;\n                    if (puVar17 <= iVar9) {\n                        iVar7 = *(*0x20 + -0x20);\n                        *(*0x20 + -0x15c) = 0;\n                        *(*0x20 + -0x98) = 0;\n                        *(*0x20 + -0x90) = in_XMM15;\n                        *(*0x20 + -0x80) = in_XMM15;\n                        *(*0x20 + -0x70) = in_XMM15;\n                        *(*0x20 + -0x60) = in_XMM15;\n                        puVar11 = iVar7 + 7U & 0xfffffffffffffff8;\n                        *(*0x20 + -0x68) = puVar11;\n                        if ((*(iVar5 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        uVar15 = *(iVar5 + 0x32) & 0x7fff;\n                        puVar17 = uVar15;\n                        if (uVar15 == 0) {\n                            iVar16 = 0;\n                            iVar5 = 0;\ncode_r0x00470ca1:\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x148) = puVar11;\n                            *(*0x20 + -0x150) = iVar16;\n                            *(*0x20 + -0xb8) = iVar5;\n                            iVar9 = 0;\n                            do {\n                                if (iVar16 <= iVar9) {\n                                    *(*0x20 + -0x68) = *(*0x20 + -0x68) - puVar11;\n                                    *(*0x20 + 8) = 0;\n                                    *(*0x20 + -0x1b0) = unaff_RBP;\n                                    *(*0x20 + -0x1a8) = 0x470e0f;\n                                    uVar4 = fcn.0045d70f();\n                                    *(*0x20 + 8) = *(*0x20 + -0x50);\n                                    *(*0x20 + 0x10) = *(*0x20 + -0x48);\n                                    *(*0x20 + 0x14) = *(*0x20 + -0x44);\n                                    *(*0x20 + 0x18) = *(*0x20 + -0x40);\n                                    *(*0x20 + 0x1c) = *(*0x20 + -0x3c);\n                                    *(*0x20 + 0x20) = *(*0x20 + -0x38);\n                                    *(*0x20 + 0x24) = *(*0x20 + -0x34);\n                                    *(*0x20 + 0x28) = *(*0x20 + -0x30);\n                                    *(*0x20 + 0x2c) = *(*0x20 + -0x2c);\n                                    *(*0x20 + 0x30) = *(*0x20 + -0x28);\n                                    *(*0x20 + 0x34) = *(*0x20 + -0x24);\n                                    *(*0x20 + 0x38) = *(*0x20 + -0x20);\n                                    *(*0x20 + 0x3c) = *(*0x20 + -0x1c);\n                                    *(*0x20 + 0x40) = *(*0x20 + -0x18);\n                                    *(*0x20 + 0x44) = *(*0x20 + -0x14);\n                                    *(*0x20 + 0x48) = *(*0x20 + -0x10);\n                                    *(*0x20 + 0x4c) = *(*0x20 + -0xc);\n                                    *(*0x20 + 0x50) = *(*0x20 + -0x98);\n                                    *(*0x20 + 0x58) = *(*0x20 + -0x90);\n                                    *(*0x20 + 0x5c) = *(*0x20 + -0x8c);\n                                    *(*0x20 + 0x60) = *(*0x20 + -0x88);\n                                    *(*0x20 + 100) = *(*0x20 + -0x84);\n                                    *(*0x20 + 0x68) = *(*0x20 + -0x80);\n                                    *(*0x20 + 0x6c) = *(*0x20 + -0x7c);\n                                    *(*0x20 + 0x70) = *(*0x20 + -0x78);\n                                    *(*0x20 + 0x74) = *(*0x20 + -0x74);\n                                    *(*0x20 + 0x78) = *(*0x20 + -0x70);\n                                    *(*0x20 + 0x7c) = *(*0x20 + -0x6c);\n                                    *(*0x20 + 0x80) = *(*0x20 + -0x68);\n                                    *(*0x20 + 0x84) = *(*0x20 + -100);\n                                    *(*0x20 + 0x88) = *(*0x20 + -0x60);\n                                    *(*0x20 + 0x8c) = *(*0x20 + -0x5c);\n                                    *(*0x20 + 0x90) = *(*0x20 + -0x58);\n                                    *(*0x20 + 0x94) = *(*0x20 + -0x54);\n                                    *(*0x20 + 0x98) = iVar7;\n                                    *(*0x20 + 0xa0) = puVar11;\n                                    *(*0x20 + 0xa8) = puVar13 + 7U & 0xfffffffffffffff8;\n                                    *(*0x20 + 0xb0) = uVar4;\n                                    *(*0x20 + 0xb8) = *(*0x20 + -0x15a);\n                                    *(*0x20 + 0xba) = *(*0x20 + -0x15c);\n                                    return;\n                                }\n                                *(*0x20 + -0x130) = iVar9;\n                                *(*0x20 + -0xa8) = *(iVar5 + iVar9 * 8);\n                                *(*0x20 + -0x1a8) = 0x470d13;\n                                iVar5 = fcn.0046f900();\n                                if (iVar5 == 0) {\n                                    puVar13 = *(*0x20 + -0x78);\n                                    puVar8 = *(*0x20 + -0x130);\n                                    if (puVar13 <= puVar8) goto code_r0x00470fe5;\n                                    puVar11 = *(*(*0x20 + -0x80) + puVar8 * 8);\n                                    if (puVar8 == puVar13 - 1U) {\n                                        puVar13 = *(*0x20 + -0x90);\n                                    }\n                                    else {\n                                        puVar17 = puVar8 + 1;\n                                        if (puVar13 <= puVar17) goto code_r0x00470fd8;\n                                        puVar13 = *(*(*0x20 + -0x80) + 8 + puVar8 * 8);\n                                    }\n                                    puVar8 = *(*0x20 + -0x88);\n                                    puVar17 = *(*0x20 + -0x98);\n                                    if (puVar8 < puVar13) goto code_r0x00470fd0;\n                                    if (puVar13 < puVar11) goto code_r0x00470fc5;\n                                    puVar13 = puVar13 - puVar11;\n                                    puVar8 = puVar17 + (puVar11 - puVar8 >> 0x3f & puVar11 * 0x30);\n                                    if (0 < puVar13) {\n                                        iVar5 = 0;\n                                        do {\n                                            uVar1 = puVar8[1];\n                                            uVar2 = puVar8[2];\n                                            uVar3 = puVar8[3];\n                                            *(*0x20 + -0x120) = *puVar8;\n                                            *(*0x20 + -0x11c) = uVar1;\n                                            *(*0x20 + -0x118) = uVar2;\n                                            *(*0x20 + -0x114) = uVar3;\n                                            uVar1 = puVar8[5];\n                                            uVar2 = puVar8[6];\n                                            uVar3 = puVar8[7];\n                                            *(*0x20 + -0x110) = puVar8[4];\n                                            *(*0x20 + -0x10c) = uVar1;\n                                            *(*0x20 + -0x108) = uVar2;\n                                            *(*0x20 + -0x104) = uVar3;\n                                            uVar1 = puVar8[9];\n                                            uVar2 = puVar8[10];\n                                            uVar3 = puVar8[0xb];\n                                            *(*0x20 + -0x100) = puVar8[8];\n                                            *(*0x20 + -0xfc) = uVar1;\n                                            *(*0x20 + -0xf8) = uVar2;\n                                            *(*0x20 + -0xf4) = uVar3;\n                                            if (*(*0x20 + -0x120) == 3) {\n                                                puVar17 = *(*0x20 + -0x100);\n                                                puVar14 = ((puVar17 >> 0x3f) >> 0x3d) + puVar17 >> 3;\n                                                puVar11 = puVar14;\n                                                if (puVar14 < 0x2) {\n                                                    puVar11 = puVar14 * 8;\n                                                    puVar17 = puVar17 + puVar14 * -2;\n                                                    if (-1 < puVar17) {\n                                                        (*0x20 + -0x15c)[puVar14] =\n                                                             (*0x20 + -0x15c)[puVar14] |\n                                                             1 << (puVar17 & 0x1f) & -(puVar17 < 0x20);\n                                                        goto code_r0x00470f95;\n                                                    }\n                                                    *(*0x20 + -0x1a8) = 0x470fb3;\n                                                    fcn.00430920();\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x470fc5;\n                                                fcn.0045d480(2);\n                                                goto code_r0x00470fc5;\n                                            }\ncode_r0x00470f95:\n                                            iVar5 = iVar5 + 1;\n                                            if (puVar13 <= iVar5) break;\n                                            puVar8 = puVar8 + 0xc;\n                                        } while( true );\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x1a8) = 0x470dcb;\n                                    fcn.00472a60(*(*0x20 + -0xa8));\n                                }\n                                puVar17 = *(*0x20 + -0x130);\n                                iVar9 = puVar17 + 1;\n                                puVar13 = *(*0x20 + -0x138);\n                                iVar7 = *(*0x20 + -0x140);\n                                iVar5 = *(*0x20 + -0xb8);\n                                puVar11 = *(*0x20 + -0x148);\n                                iVar16 = *(*0x20 + -0x150);\n                            } while( true );\n                        }\n                        puVar8 = *(iVar5 + 0x30);\n                        puVar17 = uVar15 + *(iVar5 + 0x30) & 0xffff;\n                        if (puVar8 <= puVar17) {\n                            iVar16 = puVar17 - puVar8;\n                            puVar17 = -iVar16 >> 0x3f;\n                            iVar5 = iVar5 + iVar9 + (puVar8 << 3 & puVar17);\n                            goto code_r0x00470ca1;\n                        }\n                        goto code_r0x00470fea;\n                    }\n                    *(*0x20 + -0x128) = iVar9;\n                    *(*0x20 + -0xa0) = *(iVar7 + iVar9 * 8);\n                    *(*0x20 + -0x1a8) = 0x470af3;\n                    iVar5 = fcn.0046f900();\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x1a8) = 0x470bd7;\n                        fcn.00472a60(*(*0x20 + -0xa0));\n                        puVar13 = *(*0x20 + -0x138);\n                        goto code_r0x00470a9e;\n                    }\n                    uVar18 = *(*(*0x20 + -0xa0) + 0x15);\n                    puVar13 = (-uVar18 & (*(*0x20 + -0x138) + uVar18) - 1) + **(*0x20 + -0xa0);\n                    puVar11 = *(*0x20 + -0x30);\n                    puVar17 = *(*0x20 + -0x128);\n                    if (puVar17 < puVar11) {\n                        puVar8 = *(*(*0x20 + -0x38) + puVar17 * 8);\n                        if (puVar17 == puVar11 - 1U) {\n                            puVar11 = *(*0x20 + -0x48);\n                        }\n                        else {\n                            if (puVar11 <= puVar17 + 1U) goto code_r0x004710c5;\n                            puVar11 = *(*(*0x20 + -0x38) + 8 + puVar17 * 8);\n                        }\n                        puVar17 = *(*0x20 + -0x40);\n                        if (puVar11 <= puVar17) {\n                            if (puVar8 <= puVar11) {\n                                puVar11 = puVar11 - puVar8;\n                                puVar17 = *(*0x20 + -0x50) + (puVar8 - puVar17 >> 0x3f & puVar8 * 0x30);\n                                if (0 < puVar11) {\n                                    iVar5 = 0;\n                                    do {\n                                        uVar1 = puVar17[1];\n                                        uVar2 = puVar17[2];\n                                        uVar3 = puVar17[3];\n                                        *(*0x20 + -0xf0) = *puVar17;\n                                        *(*0x20 + -0xec) = uVar1;\n                                        *(*0x20 + -0xe8) = uVar2;\n                                        *(*0x20 + -0xe4) = uVar3;\n                                        uVar1 = puVar17[5];\n                                        uVar2 = puVar17[6];\n                                        uVar3 = puVar17[7];\n                                        *(*0x20 + -0xe0) = puVar17[4];\n                                        *(*0x20 + -0xdc) = uVar1;\n                                        *(*0x20 + -0xd8) = uVar2;\n                                        *(*0x20 + -0xd4) = uVar3;\n                                        uVar1 = puVar17[9];\n                                        uVar2 = puVar17[10];\n                                        uVar3 = puVar17[0xb];\n                                        *(*0x20 + -0xd0) = puVar17[8];\n                                        *(*0x20 + -0xcc) = uVar1;\n                                        *(*0x20 + -200) = uVar2;\n                                        *(*0x20 + -0xc4) = uVar3;\n                                        if (*(*0x20 + -0xf0) == 3) {\n                                            iVar7 = *(*0x20 + -0xd0);\n                                            uVar18 = ((iVar7 >> 0x3f) >> 0x3d) + iVar7 >> 3;\n                                            if (uVar18 < 2) {\n                                                uVar19 = iVar7 + uVar18 * -8;\n                                                if (-1 < uVar19) {\n                                                    *(*0x20 + (uVar18 - 0x15a)) =\n                                                         *(*0x20 + (uVar18 - 0x15a)) |\n                                                         1 << (uVar19 & 0x1f) & -(uVar19 < 0x20);\n                                                    goto code_r0x0047108d;\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x4710a5;\n                                                fcn.00430920();\n                                            }\n                                            *(*0x20 + -0x1a8) = 0x4710b2;\n                                            fcn.0045d480(2);\n                                            goto code_r0x004710b2;\n                                        }\ncode_r0x0047108d:\n                                        iVar5 = iVar5 + 1;\n                                        if (puVar11 <= iVar5) break;\n                                        puVar17 = puVar17 + 0xc;\n                                    } while( true );\n                                }\n                                goto code_r0x00470a9e;\n                            }\ncode_r0x004710b2:\n                            *(*0x20 + -0x1a8) = 0x4710bd;\n                            fcn.0045d540(puVar11);\n                        }\n                        *(*0x20 + -0x1a8) = 0x4710c5;\n                        fcn.0045d500(puVar11, puVar17);\ncode_r0x004710c5:\n                        *(*0x20 + -0x1a8) = 0x4710cd;\n                        fcn.0045d480(puVar11);\n                    }\n                    *(*0x20 + -0x1a8) = 0x4710d2;\n                    fcn.0045d480(puVar11);\n                }\n                else {\n                    iVar7 = iVar7 + iVar5;\n                    puVar17 = puVar13;\n                    if (puVar13 < 0x100001) goto code_r0x00470a8d;\n                }\n                unaff_RBX = 0x100000;\n                *(*0x20 + -0x1a8) = 0x4710df;\n                fcn.0045d580(puVar11, puVar13 & 0xffffffff);\ncode_r0x004710e0:\n                *(*0x20 + -0x1a8) = 0x4710e5;\n                fcn.0045d480(puVar11);\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x4708eb;\n                iVar5 = fcn.0046fc00();\n                if (iVar5 == 0) {\n                    puVar11 = 0x8;\n                    goto code_r0x00470a43;\n                }\n                if (unaff_RBX == '\\0') {\n                    puVar12 = *(*0x20 + -0xb0);\n                    uVar18 = *puVar12;\n                    puVar6 = puVar12;\n                    if ((*puVar12 & 7) == 0) {\n                        iVar5 = *(puVar12 + 4);\n                        iVar7 = *(puVar12 + 2);\n                        unaff_RBX = iVar7;\n                        if (*(puVar12 + 6) < iVar5 + 1U) {\n                            *(*0x20 + -0x1a8) = 0x4709db;\n                            unaff_RBX = fcn.00444ac0(iVar5);\n                            puVar6 = *(*0x20 + -0xb0);\n                            *(puVar6 + 6) = iVar5;\n                            if (*0x598440 == 0) {\n                                *(puVar6 + 2) = unaff_RBX;\n                                iVar5 = iVar7;\n                            }\n                            else {\n                                *(*0x20 + -0x1a8) = 0x4709ff;\n                                unaff_RBX = fcn.0045cfe0(iVar5, puVar6, puVar12, uVar18);\n                                iVar5 = iVar7;\n                            }\n                        }\n                        *(puVar6 + 4) = iVar5 + 1;\n                        *(unaff_RBX + iVar5) = 0;\n                    }\n                    puVar11 = *(puVar6 + 4);\n                    if (*puVar6 >> 3 < puVar11) {\n                        *puVar6 = *puVar6 + 1;\n                        goto code_r0x00470a2c;\n                    }\n                    goto code_r0x004710e0;\n                }\n                puVar12 = *(*0x20 + -0xb0);\n                uVar18 = *puVar12;\n                puVar6 = puVar12;\n                if ((*puVar12 & 7) == 0) {\n                    iVar5 = *(puVar12 + 4);\n                    iVar7 = *(puVar12 + 2);\n                    unaff_RBX = iVar7;\n                    if (*(puVar12 + 6) < iVar5 + 1U) {\n                        *(*0x20 + -0x1a8) = 0x470931;\n                        unaff_RBX = fcn.00444ac0(iVar5);\n                        puVar6 = *(*0x20 + -0xb0);\n                        *(puVar6 + 6) = iVar5;\n                        if (*0x598440 == 0) {\n                            *(puVar6 + 2) = unaff_RBX;\n                            iVar5 = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0x1a8) = 0x470955;\n                            unaff_RBX = fcn.0045cfe0(iVar5, puVar6, puVar12, uVar18);\n                            iVar5 = iVar7;\n                        }\n                    }\n                    *(puVar6 + 4) = iVar5 + 1;\n                    *(unaff_RBX + iVar5) = 0;\n                }\n                puVar11 = *(puVar6 + 4);\n                puVar13 = *puVar6 >> 3;\n                if (puVar13 < puVar11) {\n                    *(*(puVar6 + 2) + puVar13) = *(*(puVar6 + 2) + puVar13) | 1 << (*puVar6 & 7);\n                    *puVar6 = *puVar6 + 1;\ncode_r0x00470a2c:\n                    puVar11 = NULL;\n                    goto code_r0x00470a43;\n                }\n            }\n            *(*0x20 + -0x1a8) = 0x4710ea;\n            in_RAX = fcn.0045d480(puVar11);\n        }\n        *(puVar10 + 0xc0) = in_RAX;\n        *(puVar10 + 200) = unaff_RBX;\n        *(puVar10 + -8) = 0x471105;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 0xc0);\n        unaff_RBX = *(puVar10 + 200);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x00470fc5:\n    *(*0x20 + -0x1a8) = 0x470fd0;\n    fcn.0045d540(puVar13);\ncode_r0x00470fd0:\n    *(*0x20 + -0x1a8) = 0x470fd8;\n    fcn.0045d500(puVar13, puVar8);\ncode_r0x00470fd8:\n    *(*0x20 + -0x1a8) = 0x470fe5;\n    fcn.0045d480(puVar13);\ncode_r0x00470fe5:\n    *(*0x20 + -0x1a8) = 0x470fea;\n    fcn.0045d480(puVar13);\ncode_r0x00470fea:\n    puVar13 = puVar11;\n    *(*0x20 + -0x1a8) = 0x470ff5;\n    fcn.0045d5c0(puVar17);\ncode_r0x00470a9e:\n    iVar9 = *(*0x20 + -0x128) + 1;\n    iVar5 = *(*0x20 + 0xc0);\n    puVar17 = *(*0x20 + -0x158);\n    iVar7 = *(*0x20 + -0xc0);\n    goto code_r0x00470ac7;\n}\n",
        "token_count": 6113
    },
    "004720e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004720e0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX == 1) {\n        return 0x4a6640;\n    }\n    if (in_RAX == 2) {\n        return 0x4a671e;\n    }\n    if (in_RAX == 3) {\n        return 0x4a63e1;\n    }\n    fcn.00467ec0();\n    uVar1 = fcn.00448440(7);\n    return uVar1;\n}\n",
        "token_count": 183
    },
    "00473640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473640(ulong arg1)\n\n{\n    int64_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    ulong *arg1_00;\n    uint64_t unaff_RBX;\n    ulong *arg1_01;\n    uchar *puVar12;\n    ulong unaff_RBP;\n    ulong *unaff_RDI;\n    ulong *arg4;\n    ulong arg3;\n    ulong arg4_00;\n    ulong *arg2;\n    uint *puVar13;\n    ulong *puVar14;\n    ulong *puVar15;\n    ulong *arg1_02;\n    ulong *puVar16;\n    int64_t unaff_R14;\n    uint64_t uVar17;\n    ulong *arg2_00;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x590 && *0x20 + -0x590 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x610;\n            *(*0x20 + -8) = unaff_RBP;\n            piVar1 = *(unaff_R14 + 0x20);\n            if ((piVar1 != NULL) && (*piVar1 == *0x20 + 8)) {\n                *piVar1 = *0x20 + -0x610;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = *(in_RAX + 0x30);\n            *(*0x20 + -0x348) = uVar6;\n            uVar7 = *(in_RAX + 0x28);\n            *(*0x20 + -0x350) = uVar7;\n            *(*0x20 + -0x520) = *(in_RAX + 0x38);\n            arg3 = *(in_RAX + 0x20);\n            *(*0x20 + -0x618) = 0x4736d5;\n            arg4_00 = uVar7;\n            uVar6 = fcn.00473340(uVar7, uVar6, arg3);\n            *(*0x20 + -0x380) = uVar6;\n            *(*0x20 + -0x388) = 4;\n            *(*0x20 + -0x360) = uVar7;\n            *(*0x20 + -0x1d0) = 0;\n            *(*0x20 + -0x620) = *0x20 + -8;\n            *(*0x20 + -0x618) = 0x473714;\n            fcn.0045d70f();\n            uVar6 = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x473725;\n            fcn.00472340();\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x47374f;\n            fcn.0045da46();\n            *(*0x20 + -0x340) = *(*0x20 + -0x1d0);\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47378f;\n            fcn.0045da46();\n            *(*0x20 + -0x1d0) = 0;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x4737ba;\n            fcn.0045d70f();\n            uVar6 = *(*0x20 + -0x620);\n            arg1_01 = *(*0x20 + -0x380);\n            *(*0x20 + -0x618) = 0x4737d3;\n            uVar7 = fcn.00472340();\n            *(*0x20 + -0x378) = uVar7;\n            *(*0x20 + -0x370) = arg1_01;\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x47380f;\n            fcn.0045da46();\n            *(*0x20 + -0x288) = *(*0x20 + -0x1d0);\n            unaff_RDI = *0x20 + -0x280;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47384f;\n            fcn.0045da46();\n            unaff_RBP = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47385b;\n            iVar8 = fcn.0046ab20();\n            unaff_RBX = 0x495d60;\n            if (iVar8 == 0x495d60) {\n                unaff_RDI = *0x20 + -0x148;\n                *(*0x20 + -0x620) = unaff_RBP;\n                *(*0x20 + -0x618) = 0x47388f;\n                fcn.0045d6eb();\n                unaff_RBP = *(*0x20 + -0x620);\n                puVar13 = *(*0x20 + -0x288);\n                puVar15 = *(*0x20 + -0x280);\n                if (puVar15 != NULL) {\n                    uVar3 = puVar13[1];\n                    uVar4 = puVar13[2];\n                    uVar5 = puVar13[3];\n                    *(*0x20 + -0x488) = *puVar13;\n                    *(*0x20 + -0x484) = uVar3;\n                    *(*0x20 + -0x480) = uVar4;\n                    *(*0x20 + -0x47c) = uVar5;\n                    uVar3 = puVar13[5];\n                    uVar4 = puVar13[6];\n                    uVar5 = puVar13[7];\n                    *(*0x20 + -0x478) = puVar13[4];\n                    *(*0x20 + -0x474) = uVar3;\n                    *(*0x20 + -0x470) = uVar4;\n                    *(*0x20 + -0x46c) = uVar5;\n                    uVar3 = puVar13[9];\n                    uVar4 = puVar13[10];\n                    uVar5 = puVar13[0xb];\n                    *(*0x20 + -0x468) = puVar13[8];\n                    *(*0x20 + -0x464) = uVar3;\n                    *(*0x20 + -0x460) = uVar4;\n                    *(*0x20 + -0x45c) = uVar5;\n                    if (*(*0x20 + -0x488) == 1) {\n                        if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                            if (*0x598440 == 0) {\n                                *arg1_01 = *(*(*0x20 + -0x348) + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x473930;\n                                fcn.0045cfe0(puVar15, unaff_RBX, arg3, arg4_00);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                            if (*0x598440 == 0) {\n                                *arg1_01 = *(*0x20 + -0x348);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x4739a5;\n                                fcn.0045cfe0(puVar15, unaff_RBX, arg3, arg4_00);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (*0x598440 == 0) {\n                            *arg1_01 = **(*0x20 + -0x348);\n                        }\n                        else {\n                            *(*0x20 + -0x618) = 0x473975;\n                            fcn.0045cfe0(puVar15, unaff_RBX, arg3, arg4_00);\n                            unaff_RDI = arg1_01;\n                        }\n                    }\n                    else if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                        *(*0x20 + -0x118) = *(*(*0x20 + -0x348) + 8);\n                    }\n                    else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                        *(*0x20 + -0x118) = *(*0x20 + -0x348);\n                    }\n                    else {\n                        *(*0x20 + -0x118) = **(*0x20 + -0x348);\n                    }\n                    iVar8 = *(*0x20 + -0x388);\n                    if ((*(iVar8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    arg4 = *(iVar8 + 0x30);\n                    if (*(iVar8 + 0x30) == 0) {\n                        arg4 = NULL;\n                        arg1_00 = NULL;\ncode_r0x00473a5e:\n                        *(*0x20 + -0x390) = arg1_00;\n                        *(*0x20 + -0x368) = arg1_01;\n                        *(*0x20 + -0x548) = arg4;\n                        puVar10 = NULL;\ncode_r0x00473a80:\n                        do {\n                            if (arg4 <= puVar10) {\n                                iVar8 = **(*0x20 + -0x378);\n                                *(*0x20 + -0x10) = *(*0x20 + -0x1d6);\n                                *(*0x20 + -0x618) = 0x473e18;\n                                fcn.0045f4a0(arg1_01, *(*0x20 + -0x1d6), \n                                             (iVar8 + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x1e8), *0x20 + -0x118);\n                                if (*(*0x20 + 0x20) != 0) {\n                                    if (*0x598440 == 0) {\n                                        *(*0x20 + -0x620) = unaff_RBP;\n                                        *(*0x20 + -0x618) = 0x473e4f;\n                                        fcn.0045d9f2();\n                                    }\n                                    else {\n                                        *(*0x20 + -0x618) = 0x473e6c;\n                                        fcn.00410c20(*0x20 + -0x118);\n                                    }\n                                }\n                                iVar8 = **(*0x20 + -0x378);\n                                if (iVar8 - *(*0x20 + -0x1f0) != 0) {\n                                    *(*0x20 + -0x618) = 0x473eb5;\n                                    fcn.00458ac0(iVar8 - *(*0x20 + -0x1f0));\n                                }\n                                **(*0x20 + 0x18) = 1;\n                                *(*0x20 + -0x618) = 0x473ed5;\n                                fcn.00457a20();\n                                *(*0x20 + -0x618) = 0x473ef1;\n                                fcn.0046aa40(*(*0x20 + -0x368));\n                                return;\n                            }\n                            puVar15 = *(*0x20 + -800);\n                            if (puVar15 <= puVar10) goto code_r0x004744f9;\n                            puVar16 = *(*(*0x20 + -0x328) + puVar10 * 8);\n                            if (puVar10 == puVar15 + -1) {\n                                puVar15 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                if (puVar15 <= puVar10 + 1U) goto code_r0x004744f1;\n                                puVar15 = *(*(*0x20 + -0x328) + 8 + puVar10 * 8);\n                            }\n                            puVar13 = *(*0x20 + -0x340);\n                            arg2 = *(*0x20 + -0x330);\n                            puVar11 = arg4;\n                            if (arg2 < puVar15) goto code_r0x004744e6;\n                            if (puVar15 < puVar16) goto code_r0x004744db;\n                            puVar11 = puVar10 + 1;\n                            puVar15 = puVar15 - puVar16;\n                            uVar17 = puVar16 - arg2 >> 0x3f & puVar16 * 0x30;\n                            arg2 = puVar13 + uVar17;\n                            puVar16 = *(*0x20 + -0x268);\n                            if (puVar16 <= puVar11) goto code_r0x004744d0;\n                            *(*0x20 + -0x540) = puVar15;\n                            *(*0x20 + -0x398) = arg2;\n                            arg2 = *(*(*0x20 + -0x270) + 8 + puVar10 * 8);\n                            if (puVar16 - 1U == puVar11) {\n                                puVar15 = *(*0x20 + -0x280);\n                            }\n                            else {\n                                puVar15 = puVar10 + 2;\n                                if (puVar16 <= puVar15) goto code_r0x004744c5;\n                                puVar15 = *(*(*0x20 + -0x270) + 0x10 + puVar10 * 8);\n                            }\n                            puVar16 = *(*0x20 + -0x288);\n                            arg2_00 = *(*0x20 + -0x278);\n                            puVar14 = puVar11;\n                            if (arg2_00 < puVar15) goto code_r0x004744ba;\n                            if (puVar15 < arg2) goto code_r0x004744af;\n                            puVar15 = puVar15 - arg2;\n                            arg2 = arg2 - arg2_00 >> 0x3f & arg2 * 0x30;\n                            arg2_00 = arg2 + puVar16;\n                            puVar14 = *(*0x20 + -0x540);\n                            if (puVar14 != NULL) {\n                                *(*0x20 + -0x528) = puVar11;\n                                puVar2 = *(*0x20 + -0x398);\n                                uVar3 = puVar2[1];\n                                uVar4 = puVar2[2];\n                                uVar5 = puVar2[3];\n                                *(*0x20 + -0x4b8) = *puVar2;\n                                *(*0x20 + -0x4b4) = uVar3;\n                                *(*0x20 + -0x4b0) = uVar4;\n                                *(*0x20 + -0x4ac) = uVar5;\n                                uVar3 = *(puVar13 + uVar17 + 0x14);\n                                uVar4 = *(puVar13 + uVar17 + 0x18);\n                                uVar5 = *(puVar13 + uVar17 + 0x1c);\n                                *(*0x20 + -0x4a8) = *(puVar13 + uVar17 + 0x10);\n                                *(*0x20 + -0x4a4) = uVar3;\n                                *(*0x20 + -0x4a0) = uVar4;\n                                *(*0x20 + -0x49c) = uVar5;\n                                puVar14 = puVar13 + uVar17 + 0x20;\n                                uVar3 = *(puVar13 + uVar17 + 0x24);\n                                uVar4 = *(puVar13 + uVar17 + 0x28);\n                                uVar5 = *(puVar13 + uVar17 + 0x2c);\n                                *(*0x20 + -0x498) = *puVar14;\n                                *(*0x20 + -0x494) = uVar3;\n                                *(*0x20 + -0x490) = uVar4;\n                                *(*0x20 + -0x48c) = uVar5;\n                                if (*(*0x20 + -0x4b8) == 1) {\n                                    if (puVar15 != NULL) {\n                                        uVar3 = *(arg2_00 + 4);\n                                        uVar4 = *(arg2_00 + 1);\n                                        uVar5 = *(arg2_00 + 0xc);\n                                        *(*0x20 + -0x458) = *arg2_00;\n                                        *(*0x20 + -0x454) = uVar3;\n                                        *(*0x20 + -0x450) = uVar4;\n                                        *(*0x20 + -0x44c) = uVar5;\n                                        iVar8 = puVar16 + arg2;\n                                        uVar3 = *(iVar8 + 0x14);\n                                        uVar4 = *(iVar8 + 0x18);\n                                        uVar5 = *(iVar8 + 0x1c);\n                                        *(*0x20 + -0x448) = *(iVar8 + 0x10);\n                                        *(*0x20 + -0x444) = uVar3;\n                                        *(*0x20 + -0x440) = uVar4;\n                                        *(*0x20 + -0x43c) = uVar5;\n                                        iVar8 = puVar16 + arg2;\n                                        uVar3 = *(iVar8 + 0x24);\n                                        uVar4 = *(iVar8 + 0x28);\n                                        uVar5 = *(iVar8 + 0x2c);\n                                        *(*0x20 + -0x438) = *(iVar8 + 0x20);\n                                        *(*0x20 + -0x434) = uVar3;\n                                        *(*0x20 + -0x430) = uVar4;\n                                        *(*0x20 + -0x42c) = uVar5;\n                                        if (*(*0x20 + -0x458) != 1) {\n                                            *(*0x20 + -0x538) = puVar15;\n                                            iVar8 = *(*0x20 + 0x10);\n                                            puVar13 = NULL;\n                                            do {\n                                                *(*0x20 + -0x530) = puVar13;\n                                                *(*0x20 + -0x358) = arg2_00;\n                                                uVar3 = *(arg2_00 + 4);\n                                                uVar4 = *(arg2_00 + 1);\n                                                uVar5 = *(arg2_00 + 0xc);\n                                                *(*0x20 + -0x428) = *arg2_00;\n                                                *(*0x20 + -0x424) = uVar3;\n                                                *(*0x20 + -0x420) = uVar4;\n                                                *(*0x20 + -0x41c) = uVar5;\n                                                uVar3 = *(arg2_00 + 0x14);\n                                                uVar4 = *(arg2_00 + 3);\n                                                uVar5 = *(arg2_00 + 0x1c);\n                                                *(*0x20 + -0x418) = *(arg2_00 + 2);\n                                                *(*0x20 + -0x414) = uVar3;\n                                                *(*0x20 + -0x410) = uVar4;\n                                                *(*0x20 + -0x40c) = uVar5;\n                                                uVar3 = *(arg2_00 + 0x24);\n                                                uVar4 = *(arg2_00 + 5);\n                                                uVar5 = *(arg2_00 + 0x2c);\n                                                *(*0x20 + -0x408) = *(arg2_00 + 4);\n                                                *(*0x20 + -0x404) = uVar3;\n                                                *(*0x20 + -0x400) = uVar4;\n                                                *(*0x20 + -0x3fc) = uVar5;\n                                                arg2 = *(*0x20 + -0x428);\n                                                puVar14 = *(*0x20 + -0x420) + *(*0x20 + -0x4a0) + iVar8;\n                                                if (arg2 != 0x2) {\n                                                    if (arg2 != 0x3) {\n                                                        if (arg2 == 0x4) {\n                                                            if (*(*0x20 + -0x400) < 0xf) {\n                                                                *(*0x20 + -0x618) = 0x47401e;\n                                                                fcn.00458ac0(*(*0x20 + -0x418));\n                                                                goto code_r0x0047401e;\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x47404c;\n                                                            fcn.0045d480(0xf);\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x47405f;\n                                                        fcn.004327c0();\n                                                        goto code_r0x0047405f;\n                                                    }\n                                                    arg2 = *(*0x20 + -0x408);\n                                                    if (arg2 < 0x9) {\n                                                        *(*0x20 + arg2 * 8 + -0x58) =\n                                                             *(iVar8 + *(*0x20 + -0x420) + *(*0x20 + -0x4a0));\n                                                        goto code_r0x00473fc4;\n                                                    }\ncode_r0x0047406c:\n                                                    *(*0x20 + -0x618) = 0x474079;\n                                                    fcn.0045d480(9);\n                                                    goto code_r0x00474079;\n                                                }\ncode_r0x00473fc4:\n                                                if (8 < *(*0x20 + -0x408)) {\ncode_r0x0047405f:\n                                                    *(*0x20 + -0x618) = 0x47406c;\n                                                    fcn.0045d480(9);\n                                                    goto code_r0x0047406c;\n                                                }\n                                                *(*0x20 + -0x618) = 0x473fee;\n                                                fcn.00458ac0(*(*0x20 + -0x418));\ncode_r0x0047401e:\n                                                puVar13 = *(*0x20 + -0x530) + 1;\n                                                puVar15 = *(*0x20 + -0x538);\n                                                if (puVar15 <= puVar13) goto code_r0x00473d9d;\n                                                arg2_00 = *(*0x20 + -0x358) + 0x30;\n                                                iVar8 = *(*0x20 + 0x10);\n                                                arg4 = *(*0x20 + -0x548);\n                                            } while( true );\n                                        }\n                                        puVar13 = *(*0x20 + -0x4a8);\n                                        if (*(*0x20 + -0x448) == puVar13) {\n                                            *(*0x20 + -0x618) = 0x473d58;\n                                            fcn.004579c0(*(*0x20 + -0x4a0) + *(*0x20 + 0x10));\n                                            arg1_00 = *(*0x20 + -0x390);\n                                            arg1_01 = *(*0x20 + -0x368);\n                                            arg4 = *(*0x20 + -0x548);\n                                            puVar10 = *(*0x20 + -0x528);\n                                            unaff_RDI = arg4;\n                                            goto code_r0x00473a80;\n                                        }\ncode_r0x00474079:\n                                        arg1_01 = 0x4c7d68;\n                                        *(*0x20 + -0x618) = 0x47408c;\n                                        fcn.004327c0();\n                                    }\n                                    *(*0x20 + -0x618) = 0x474096;\n                                    arg1_00 = puVar15;\n                                    puVar11 = fcn.0045d480(puVar15);\n                                    do {\n                                        puVar13 = puVar13 + 0xc;\ncode_r0x004740a0:\n                                        uVar3 = puVar13[1];\n                                        uVar4 = puVar13[2];\n                                        uVar5 = puVar13[3];\n                                        *(*0x20 + -0x518) = *puVar13;\n                                        *(*0x20 + -0x514) = uVar3;\n                                        *(*0x20 + -0x510) = uVar4;\n                                        *(*0x20 + -0x50c) = uVar5;\n                                        uVar3 = puVar13[5];\n                                        uVar4 = puVar13[6];\n                                        uVar5 = puVar13[7];\n                                        *(*0x20 + -0x508) = puVar13[4];\n                                        *(*0x20 + -0x504) = uVar3;\n                                        *(*0x20 + -0x500) = uVar4;\n                                        *(*0x20 + -0x4fc) = uVar5;\n                                        uVar3 = puVar13[9];\n                                        uVar4 = puVar13[10];\n                                        uVar5 = puVar13[0xb];\n                                        *(*0x20 + -0x4f8) = puVar13[8];\n                                        *(*0x20 + -0x4f4) = uVar3;\n                                        *(*0x20 + -0x4f0) = uVar4;\n                                        *(*0x20 + -0x4ec) = uVar5;\n                                        iVar8 = puVar15 * 0x30;\n                                        puVar10 = arg2_00 + puVar15 * 6;\n                                        uVar3 = *(puVar10 + 4);\n                                        uVar4 = *(puVar10 + 1);\n                                        uVar5 = *(puVar10 + 0xc);\n                                        *(*0x20 + -0x3c8) = *puVar10;\n                                        *(*0x20 + -0x3c4) = uVar3;\n                                        *(*0x20 + -0x3c0) = uVar4;\n                                        *(*0x20 + -0x3bc) = uVar5;\n                                        uVar3 = *(arg2_00 + iVar8 + 0x14);\n                                        uVar4 = *(arg2_00 + puVar15 * 6 + 3);\n                                        uVar5 = *(arg2_00 + iVar8 + 0x1c);\n                                        *(*0x20 + -0x3b8) = *(arg2_00 + puVar15 * 6 + 2);\n                                        *(*0x20 + -0x3b4) = uVar3;\n                                        *(*0x20 + -0x3b0) = uVar4;\n                                        *(*0x20 + -0x3ac) = uVar5;\n                                        uVar3 = *(arg2_00 + iVar8 + 0x24);\n                                        uVar4 = *(arg2_00 + puVar15 * 6 + 5);\n                                        uVar5 = *(arg2_00 + iVar8 + 0x2c);\n                                        *(*0x20 + -0x3a8) = *(arg2_00 + puVar15 * 6 + 4);\n                                        *(*0x20 + -0x3a4) = uVar3;\n                                        *(*0x20 + -0x3a0) = uVar4;\n                                        *(*0x20 + -0x39c) = uVar5;\n                                        arg1_02 = *(*0x20 + -0x518);\n                                        if (*(*0x20 + -0x3c8) != arg1_02) {\ncode_r0x00474252:\n                                            *(*0x20 + -0x618) = 0x474265;\n                                            fcn.004327c0();\n                                            goto code_r0x00474265;\n                                        }\n                                        if (arg1_02 != 0x2) {\n                                            if (arg1_02 != 0x3) {\n                                                if (arg1_02 == 0x4) {\n                                                    arg1_02 = *(*0x20 + -0x4f0);\n                                                    if (arg1_02 < 0xf) {\n                                                        arg1_02 = puVar14[arg1_02 + 9];\n                                                        if (*(*0x20 + -0x3a0) < 0xf) {\n                                                            *(*0x20 + *(*0x20 + -0x3a0) * 8 + -0xd0) = arg1_02;\n                                                            goto code_r0x004741d8;\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x4741fb;\n                                                        fcn.0045d480(0xf);\n                                                    }\n                                                    *(*0x20 + -0x618) = 0x474208;\n                                                    fcn.0045d480(0xf);\n                                                }\n                                                *(*0x20 + -0x618) = 0x47421b;\n                                                fcn.004327c0();\ncode_r0x0047421b:\n                                                *(*0x20 + -0x618) = 0x474228;\n                                                fcn.0045d480(9);\n                                                goto code_r0x00474228;\n                                            }\n                                            arg1_02 = *(*0x20 + -0x4f8);\n                                            if (arg1_02 < 0x9) {\n                                                arg1_02 = puVar14[arg1_02 + 3];\n                                                if (*(*0x20 + -0x3a8) < 9) {\n                                                    *(*0x20 + *(*0x20 + -0x3a8) * 8 + -0x58) = arg1_02;\n                                                    goto code_r0x00474172;\n                                                }\n                                                goto code_r0x00474235;\n                                            }\ncode_r0x00474245:\n                                            arg1_00 = 0x9;\n                                            *(*0x20 + -0x618) = 0x474252;\n                                            fcn.0045d480(9);\n                                            goto code_r0x00474252;\n                                        }\ncode_r0x00474172:\n                                        arg1_02 = *(*0x20 + -0x4f8);\n                                        if (0x8 < arg1_02) {\ncode_r0x00474228:\n                                            *(*0x20 + -0x618) = 0x474235;\n                                            fcn.0045d480(9);\ncode_r0x00474235:\n                                            *(*0x20 + -0x618) = 0x474245;\n                                            fcn.0045d480(9);\n                                            goto code_r0x00474245;\n                                        }\n                                        arg1_02 = puVar14[arg1_02];\n                                        if (8 < *(*0x20 + -0x3a8)) goto code_r0x0047421b;\n                                        *(*0x20 + *(*0x20 + -0x3a8) * 8 + -0x118) = arg1_02;\ncode_r0x004741d8:\n                                        puVar15 = puVar15 + 1;\n                                        puVar10 = puVar11;\n                                        unaff_RDI = arg4;\n                                    } while (puVar15 < arg2);\n                                }\n                                else {\n                                    arg1_02 = puVar15;\n                                    if (puVar15 == NULL) {\ncode_r0x00474492:\n                                        *(*0x20 + -0x618) = 0x47449c;\n                                        fcn.0045d480(arg1_02);\n                                        puVar15 = arg1_02;\n                                        break;\n                                    }\n                                    uVar3 = *(arg2_00 + 4);\n                                    uVar4 = *(arg2_00 + 1);\n                                    uVar5 = *(arg2_00 + 0xc);\n                                    *(*0x20 + -0x3f8) = *arg2_00;\n                                    *(*0x20 + -0x3f4) = uVar3;\n                                    *(*0x20 + -0x3f0) = uVar4;\n                                    *(*0x20 + -0x3ec) = uVar5;\n                                    iVar8 = puVar16 + arg2;\n                                    puVar14 = iVar8 + 0x10;\n                                    uVar3 = *(iVar8 + 0x14);\n                                    uVar4 = *(iVar8 + 0x18);\n                                    uVar5 = *(iVar8 + 0x1c);\n                                    *(*0x20 + -1000) = *puVar14;\n                                    *(*0x20 + -0x3e4) = uVar3;\n                                    *(*0x20 + -0x3e0) = uVar4;\n                                    *(*0x20 + -0x3dc) = uVar5;\n                                    iVar8 = puVar16 + arg2;\n                                    uVar3 = *(iVar8 + 0x24);\n                                    uVar4 = *(iVar8 + 0x28);\n                                    uVar5 = *(iVar8 + 0x2c);\n                                    *(*0x20 + -0x3d8) = *(iVar8 + 0x20);\n                                    *(*0x20 + -0x3d4) = uVar3;\n                                    *(*0x20 + -0x3d0) = uVar4;\n                                    *(*0x20 + -0x3cc) = uVar5;\n                                    if (*(*0x20 + -0x3f8) == 1) {\n                                        puVar14 = *(*0x20 + -0x540);\n                                        arg1_02 = *(*0x20 + 0x20);\n                                        puVar13 = *(*0x20 + -0x398);\n                                        puVar15 = NULL;\n                                        goto code_r0x00474282;\n                                    }\n                                    arg2 = *(*0x20 + -0x540);\n                                    if (puVar15 == arg2) {\n                                        puVar14 = *(*0x20 + 0x20);\n                                        puVar13 = *(*0x20 + -0x398);\n                                        puVar15 = NULL;\n                                        goto code_r0x004740a0;\n                                    }\ncode_r0x00474265:\n                                    arg1_01 = 0x4c7da8;\n                                    *(*0x20 + -0x618) = 0x474278;\n                                    puVar11 = fcn.004327c0();\n                                    puVar15 = arg2;\n                                    do {\n                                        puVar13 = puVar13 + 0xc;\ncode_r0x00474282:\n                                        *(*0x20 + -0x530) = puVar15;\n                                        *(*0x20 + -0x358) = puVar13;\n                                        uVar3 = puVar13[1];\n                                        uVar4 = puVar13[2];\n                                        uVar5 = puVar13[3];\n                                        *(*0x20 + -0x4e8) = *puVar13;\n                                        *(*0x20 + -0x4e4) = uVar3;\n                                        *(*0x20 + -0x4e0) = uVar4;\n                                        *(*0x20 + -0x4dc) = uVar5;\n                                        uVar3 = puVar13[5];\n                                        uVar4 = puVar13[6];\n                                        uVar5 = puVar13[7];\n                                        *(*0x20 + -0x4d8) = puVar13[4];\n                                        *(*0x20 + -0x4d4) = uVar3;\n                                        *(*0x20 + -0x4d0) = uVar4;\n                                        *(*0x20 + -0x4cc) = uVar5;\n                                        uVar3 = puVar13[9];\n                                        uVar4 = puVar13[10];\n                                        uVar5 = puVar13[0xb];\n                                        *(*0x20 + -0x4c8) = puVar13[8];\n                                        *(*0x20 + -0x4c4) = uVar3;\n                                        *(*0x20 + -0x4c0) = uVar4;\n                                        *(*0x20 + -0x4bc) = uVar5;\n                                        puVar16 = *(*0x20 + -0x4e0) + *(*0x20 + -0x3e0);\n                                        arg2_00 = *(*0x20 + -0x4e8);\n                                        arg2 = puVar16 + arg1_01;\n                                        if (arg2_00 == 0x2) {\n                                            if (8 < *(*0x20 + -0x4c8)) {\n                                                *(*0x20 + -0x618) = 0x474465;\n                                                fcn.0045d480(9);\ncode_r0x00474465:\n                                                *(*0x20 + -0x618) = 0x474472;\n                                                fcn.0045d480(0xf);\ncode_r0x00474472:\n                                                *(*0x20 + -0x618) = 0x474485;\n                                                fcn.004327c0();\ncode_r0x00474485:\n                                                *(*0x20 + -0x618) = 0x474492;\n                                                fcn.0045d480(9);\n                                                goto code_r0x00474492;\n                                            }\n                                            *(*0x20 + -0x618) = 0x4743fa;\n                                            fcn.00458ac0(*(*0x20 + -0x4d8));\n                                            puVar11 = *(*0x20 + -0x528);\n                                            arg1_00 = *(*0x20 + -0x390);\n                                            arg1_01 = *(*0x20 + -0x368);\n                                            puVar15 = *(*0x20 + -0x530);\n                                            arg4 = *(*0x20 + -0x548);\n                                            puVar13 = *(*0x20 + -0x358);\n                                            puVar14 = *(*0x20 + -0x540);\n                                            arg1_02 = *(*0x20 + 0x20);\n                                        }\n                                        else if (arg2_00 == 0x3) {\n                                            arg2_00 = *(*0x20 + -0x4c8);\n                                            if (0x8 < arg2_00) goto code_r0x00474485;\n                                            uVar6 = arg1_02[arg2_00 + 3];\n                                            if (*0x598440 == 0) {\n                                                *(arg1_01 + puVar16) = uVar6;\n                                            }\n                                            else {\n                                                *(*0x20 + -0x618) = 0x474333;\n                                                puVar11 = fcn.0045d100(arg1_00, uVar6, puVar13, arg4);\n                                            }\n                                        }\n                                        else {\n                                            if (arg2_00 != 0x4) goto code_r0x00474472;\n                                            if (0xe < *(*0x20 + -0x4c0)) goto code_r0x00474465;\n                                            *(*0x20 + -0x618) = 0x474385;\n                                            fcn.00458ac0(*(*0x20 + -0x4d8));\n                                            puVar11 = *(*0x20 + -0x528);\n                                            arg1_00 = *(*0x20 + -0x390);\n                                            arg1_01 = *(*0x20 + -0x368);\n                                            puVar15 = *(*0x20 + -0x530);\n                                            arg4 = *(*0x20 + -0x548);\n                                            puVar13 = *(*0x20 + -0x358);\n                                            puVar14 = *(*0x20 + -0x540);\n                                            arg1_02 = *(*0x20 + 0x20);\n                                        }\n                                        puVar15 = puVar15 + 1;\n                                        puVar10 = puVar11;\n                                        unaff_RDI = arg4;\n                                    } while (puVar15 < puVar14);\n                                }\n                                goto code_r0x00473a80;\n                            }\n                            puVar10 = puVar11;\n                            unaff_RDI = arg4;\n                        } while (puVar15 == NULL);\n                        *(*0x20 + -0x618) = 0x4744af;\n                        fcn.004327c0();\ncode_r0x004744af:\n                        *(*0x20 + -0x618) = 0x4744ba;\n                        fcn.0045d540(puVar15);\ncode_r0x004744ba:\n                        *(*0x20 + -0x618) = 0x4744c5;\n                        fcn.0045d500(puVar15, arg2_00);\n                        puVar11 = puVar14;\ncode_r0x004744c5:\n                        *(*0x20 + -0x618) = 0x4744d0;\n                        fcn.0045d480(puVar16);\ncode_r0x004744d0:\n                        *(*0x20 + -0x618) = 0x4744db;\n                        fcn.0045d480(puVar16);\n                        unaff_RDI = arg4;\ncode_r0x004744db:\n                        *(*0x20 + -0x618) = 0x4744e6;\n                        fcn.0045d540(puVar15);\ncode_r0x004744e6:\n                        *(*0x20 + -0x618) = 0x4744f1;\n                        fcn.0045d500(puVar15, arg2);\n                        arg4 = puVar11;\ncode_r0x004744f1:\n                        *(*0x20 + -0x618) = 0x4744f9;\n                        fcn.0045d480(puVar15);\ncode_r0x004744f9:\n                        *(*0x20 + -0x618) = 0x4744fe;\n                        fcn.0045d480(puVar15);\n                    }\n                    else {\n                        arg1_00 = iVar8 + iVar9;\n                        if (arg4 < 0x100001) goto code_r0x00473a5e;\n                    }\n                    unaff_RBX = arg4 & 0xffffffff;\n                    *(*0x20 + -0x618) = 0x47450b;\n                    fcn.0045d580(puVar15, unaff_RBX);\n                }\n                *(*0x20 + -0x618) = 0x474512;\n                fcn.0045d480(puVar15);\n            }\n            arg1 = 0x497ba0;\n            *(*0x20 + -0x618) = 0x474525;\n            in_RAX = fcn.004096c0(0x497ba0);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + -8) = 0x47453f;\n        fcn.0045ad80();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        *0x20 = puVar12;\n    } while( true );\ncode_r0x00473d9d:\n    arg1_00 = *(*0x20 + -0x390);\n    arg1_01 = *(*0x20 + -0x368);\n    arg4 = *(*0x20 + -0x548);\n    puVar10 = *(*0x20 + -0x528);\n    unaff_RDI = arg4;\n    goto code_r0x00473a80;\n}\n",
        "token_count": 9947
    },
    "00477380": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004778f6)\n// WARNING: Removing unreachable block (ram,0x00477807)\n// WARNING: Removing unreachable block (ram,0x00477818)\n// WARNING: Removing unreachable block (ram,0x0047792d)\n// WARNING: Removing unreachable block (ram,0x004778e5)\n// WARNING: Removing unreachable block (ram,0x0047793e)\n\nint64_t fcn.00477380(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong *puVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong *unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x90 && *0x20 + -0x90 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x110;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x90) = arg3;\n            *(*0x20 + -0x30) = unaff_RSI;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x98) = arg1;\n            *(*0x20 + -0x118) = 0x4773fb;\n            uVar5 = fcn.004758a0(arg1);\n            *(*0x20 + -0x50) = uVar5;\n            *(*0x20 + -0x58) = unaff_RBX;\n            uVar5 = *(*0x20 + -0x30);\n            *(*0x20 + -0x118) = 0x477428;\n            iVar6 = fcn.004758a0(*(*0x20 + -0x90));\n            if (iVar6 != *(*0x20 + -0x50)) {\n                return -1;\n            }\n            *(*0x20 + -0x118) = 0x47744c;\n            cVar3 = fcn.00402fa0(uVar5);\n            if (cVar3 == '\\0') {\n                return -1;\n            }\n            uVar11 = *(*0x20 + -0x98);\n            uVar10 = uVar11 & 0x1f;\n            if (0x11 < uVar10) {\n                if (uVar10 < 0x17) {\n                    if (uVar10 == 0x12) {\n                        uVar5 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x477c59;\n                        iVar6 = fcn.004781e0(uVar11, uVar11, *(*0x20 + -0x90));\n                        if (uVar5 != '\\0') {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x118) = 0x477c85;\n                        uVar5 = fcn.00475380(*(*0x20 + -0x98));\n                        *(*0x20 + -0xb8) = uVar5;\n                        *(*0x20 + -0x118) = 0x477ca7;\n                        uVar11 = fcn.00475380(*(*0x20 + -0x90));\n                        if (uVar11 <= *(*0x20 + -0xb8)) {\n                            if (uVar11 < *(*0x20 + -0xb8)) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        return -1;\n                    }\n                    if (uVar10 == 0x14) {\n                        uVar5 = *(*0x20 + -0x40);\n                        uVar7 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x4779ef;\n                        iVar6 = fcn.004781e0(uVar11, uVar11, uVar7);\n                        if (uVar5 != '\\0') {\n                            return iVar6;\n                        }\n                        uVar5 = *(*0x20 + -0x40);\n                        uVar8 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x477a11;\n                        fcn.00474580(uVar8);\n                        *(*0x20 + -0x118) = 0x477a16;\n                        iVar6 = fcn.004758a0(uVar8);\n                        if (iVar6 != 0) {\n                            iVar6 = *(iVar6 + 8);\n                        }\n                        if (iVar6 == 0) {\n                            iVar6 = 0;\n                            uVar5 = 0;\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar2 = *0x5443e0;\n                            if ((*0x5443d0 != '\\0') && (*0x5443d8 = iVar6,  uVar2 = uVar5,  *0x598440 != 0)) {\n                                *(*0x20 + -0x118) = 0x477a54;\n                                iVar6 = fcn.0045d120(uVar8, uVar11, uVar7, in_R9);\n                                uVar2 = *0x5443e0;\n                            }\n                            *0x5443e0 = uVar2;\n                            *(*0x20 + -0x18) = iVar6;\n                            *(*0x20 + -0x10) = uVar5;\n                            iVar6 = *(*0x20 + -0x18);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar5 = 0;\n                                uVar11 = 0;\n                            }\n                            else {\n                                uVar11 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar11 = uVar11 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x80) = uVar5;\n                        *(*0x20 + -0x88) = iVar6;\n                        *(*0x20 + -0xd8) = uVar11;\n                        uVar5 = *(*0x20 + -0x90);\n                        uVar7 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x477acf;\n                        fcn.00474580(uVar5);\n                        *(*0x20 + -0x118) = 0x477ad4;\n                        iVar12 = fcn.004758a0(uVar5);\n                        if (iVar12 != 0) {\n                            iVar12 = *(iVar12 + 8);\n                        }\n                        if (iVar12 == 0) {\n                            iVar6 = 0;\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar8 = *0x5443e0;\n                            if ((*0x5443d0 != '\\0') && (*0x5443d8 = iVar12,  uVar8 = uVar7,  *0x598440 != 0)) {\n                                *(*0x20 + -0x118) = 0x477b14;\n                                iVar12 = fcn.0045d120(uVar5, iVar6, uVar11, in_R9);\n                                uVar8 = *0x5443e0;\n                            }\n                            *0x5443e0 = uVar8;\n                            *(*0x20 + -0x28) = iVar12;\n                            *(*0x20 + -0x20) = uVar7;\n                            iVar6 = *(*0x20 + -0x28);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar11 = 0;\n                            }\n                            else {\n                                uVar11 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar11 = uVar11 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x118) = 0x477b85;\n                        iVar12 = fcn.00477380(*(*0x20 + -0xd8), iVar6, uVar11);\n                        if (iVar12 != 0) {\n                            return iVar12;\n                        }\n                        uVar5 = *(*0x20 + -0x40);\n                        uVar7 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x477bb4;\n                        uVar8 = fcn.00474580(uVar7);\n                        *(*0x20 + -0x48) = uVar8;\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x98) = uVar7;\n                        uVar5 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x477be6;\n                        fcn.00474580(uVar5);\n                        *(*0x20 + -0x118) = 0x477c09;\n                        iVar6 = fcn.00477380(*(*0x20 + -0x98), iVar6, uVar5);\n                        return iVar6;\n                    }\n                    if (uVar10 == 0x16) {\ncode_r0x00477d2a:\n                        *(*0x20 + -0x118) = 0x477d45;\n                        uVar5 = fcn.00475380(uVar11);\n                        *(*0x20 + -0xa8) = uVar5;\n                        *(*0x20 + -0x118) = 0x477d67;\n                        uVar11 = fcn.00475380(*(*0x20 + -0x90));\n                        if (*(*0x20 + -0xa8) < uVar11) {\n                            return -1;\n                        }\n                        if (uVar11 < *(*0x20 + -0xa8)) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar10 == 0x18) {\n                        uVar5 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x477dc9;\n                        uVar7 = fcn.004757c0(uVar11);\n                        *(*0x20 + -0x70) = uVar7;\n                        *(*0x20 + -0xb0) = uVar5;\n                        uVar5 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x477df3;\n                        uVar7 = fcn.004757c0(*(*0x20 + -0x90));\n                        *(*0x20 + -0x78) = uVar7;\n                        *(*0x20 + -0xc0) = uVar5;\n                        *(*0x20 + -0x118) = 0x477e18;\n                        iVar6 = fcn.00402020(uVar7);\n                        if (iVar6 < 0) {\n                            return -1;\n                        }\n                        *(*0x20 + -0x118) = 0x477e3c;\n                        iVar6 = fcn.00402020(*(*0x20 + -0x78));\n                        if (0 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                    if (uVar10 == 0x19) {\n                        iVar6 = 0;\n                        goto code_r0x00477ef3;\n                    }\n                    if (uVar10 == 0x1a) goto code_r0x00477d2a;\n                }\ncode_r0x00477e9a:\n                pcVar1 = *(*(*0x20 + -0x50) + 0xf8);\n                *(*0x20 + -0x118) = 0x477eb3;\n                (*pcVar1)();\n                *(*0x20 + -0x118) = 0x477ecc;\n                fcn.00448440(0x15);\n                *(*0x20 + -0x118) = 0x477ed1;\n                fcn.00409a20();\n                *(*0x20 + -0x118) = 0x477ee5;\n                fcn.004327c0();\n                while( true ) {\n                    iVar6 = *(*0x20 + -200) + 1;\n                    uVar11 = *(*0x20 + -0x98);\ncode_r0x00477ef3:\n                    *(*0x20 + -200) = iVar6;\n                    *(*0x20 + -0x118) = 0x477f10;\n                    iVar6 = fcn.004752a0(uVar11);\n                    if (iVar6 <= *(*0x20 + -200)) break;\n                    uVar5 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x118) = 0x477f38;\n                    uVar8 = fcn.00474720(uVar7);\n                    *(*0x20 + -0x60) = uVar8;\n                    *(*0x20 + -0x68) = uVar5;\n                    *(*0x20 + -0xa0) = uVar7;\n                    uVar5 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x477f6f;\n                    fcn.00474720(uVar5);\n                    *(*0x20 + -0x118) = 0x477f92;\n                    iVar6 = fcn.00477380(*(*0x20 + -0xa0), uVar11, uVar5);\n                    if (iVar6 != 0) {\n                        return iVar6;\n                    }\n                }\n                return 0;\n            }\n            if (uVar10 < 0xd) {\n                if (uVar10 == 1) {\n                    *(*0x20 + -0x118) = 0x477725;\n                    uVar4 = fcn.00473160(uVar11);\n                    *(*0x20 + -0xd9) = uVar4;\n                    *(*0x20 + -0x118) = 0x477746;\n                    cVar3 = fcn.00473160(*(*0x20 + -0x90));\n                    if (cVar3 == *(*0x20 + -0xd9)) {\n                        return 0;\n                    }\n                    if (*(*0x20 + -0xd9) != '\\0') {\n                        return 1;\n                    }\n                    return -1;\n                }\n                if (4 < uVar10 - 2) {\n                    if (uVar10 < 7) goto code_r0x00477e9a;\n                    if (uVar10 < 10) {\n                        if (uVar10 == 7) {\n                            uVar11 = **(*0x20 + -0x40);\n                        }\n                        else if (uVar10 == 8) {\n                            uVar11 = **(*0x20 + -0x40);\n                        }\n                        else {\n                            uVar11 = **(*0x20 + -0x40);\n                        }\n                    }\n                    else if (uVar10 == 10) {\n                        uVar11 = **(*0x20 + -0x40);\n                    }\n                    else if (uVar10 == 0xb) {\n                        uVar11 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        uVar11 = **(*0x20 + -0x40);\n                    }\n                    uVar10 = *(*0x20 + -0x90) & 0x1f;\n                    *(*0x20 + -0x90) = uVar10;\n                    if (uVar10 < 10) {\n                        if (uVar10 == 7) {\n                            uVar10 = **(*0x20 + -0x30);\ncode_r0x004776c8:\n                            if (uVar11 < uVar10) {\n                                return -1;\n                            }\n                            if (uVar10 < uVar11) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        if (uVar10 == 8) {\n                            uVar10 = **(*0x20 + -0x30);\n                            goto code_r0x004776c8;\n                        }\n                        if (uVar10 == 9) {\n                            uVar10 = **(*0x20 + -0x30);\n                            goto code_r0x004776c8;\n                        }\n                    }\n                    else {\n                        if (uVar10 == 10) {\n                            uVar10 = **(*0x20 + -0x30);\n                            goto code_r0x004776c8;\n                        }\n                        if (uVar10 == 0xb) {\n                            uVar10 = **(*0x20 + -0x30);\n                            goto code_r0x004776c8;\n                        }\n                        if (uVar10 == 0xc) {\n                            uVar10 = **(*0x20 + -0x30);\n                            goto code_r0x004776c8;\n                        }\n                    }\n                    goto code_r0x00478117;\n                }\n                if (uVar10 < 4) {\n                    if (uVar10 == 2) {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                }\n                else if (uVar10 == 4) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else if (uVar10 == 5) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                uVar11 = *(*0x20 + -0x90) & 0x1f;\n                *(*0x20 + -0x90) = uVar11;\n                if (uVar11 < 4) {\n                    if (uVar11 == 2) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00477575;\n                    }\n                    if (uVar11 == 3) {\n                        iVar12 = **(*0x20 + -0x30);\ncode_r0x00477575:\n                        if (iVar6 < iVar12) {\n                            return -1;\n                        }\n                        if (iVar12 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar11 == 4) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00477575;\n                    }\n                    if (uVar11 == 5) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00477575;\n                    }\n                    if (uVar11 == 6) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x00477575;\n                    }\n                }\n            }\n            else {\n                if (uVar10 < 0xf) {\n                    if (uVar10 == 0xd) {\n                        dVar14 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        dVar14 = **(*0x20 + -0x40);\n                    }\n                    uVar11 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar11 == 0xd) {\n                        dVar15 = **(*0x20 + -0x30);\ncode_r0x004777ff:\n                        if (dVar15 <= dVar14) {\n                            if (dVar14 <= dVar15) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar11 == 0xe) {\n                        dVar15 = **(*0x20 + -0x30);\n                        goto code_r0x004777ff;\n                    }\n                }\n                else {\n                    unaff_RSI = uVar10 - 0xf;\n                    if (1 < unaff_RSI) {\n                        if (uVar10 == 0x11) {\n                            iVar6 = 0;\n                            while( true ) {\n                                *(*0x20 + -0xd0) = iVar6;\n                                *(*0x20 + -0x118) = 0x477fe8;\n                                iVar6 = fcn.00474ba0(uVar11);\n                                if (iVar6 <= *(*0x20 + -0xd0)) {\n                                    return 0;\n                                }\n                                uVar5 = *(*0x20 + -0x40);\n                                uVar7 = *(*0x20 + -0x98);\n                                *(*0x20 + -0x118) = 0x478010;\n                                uVar8 = fcn.00474860(uVar7);\n                                *(*0x20 + -0x60) = uVar8;\n                                *(*0x20 + -0x68) = uVar5;\n                                *(*0x20 + -0xa0) = uVar7;\n                                uVar5 = *(*0x20 + -0x90);\n                                *(*0x20 + -0x118) = 0x478047;\n                                fcn.00474860(uVar5);\n                                *(*0x20 + -0x118) = 0x47806a;\n                                iVar6 = fcn.00477380(*(*0x20 + -0xa0), uVar11, uVar5);\n                                if (iVar6 != 0) break;\n                                iVar6 = *(*0x20 + -0xd0) + 1;\n                                uVar11 = *(*0x20 + -0x98);\n                            }\n                            return iVar6;\n                        }\n                        goto code_r0x00477e9a;\n                    }\n                    if (uVar10 == 0xf) {\n                        dVar14 = **(*0x20 + -0x40);\n                        dVar15 = (*(*0x20 + -0x40))[1];\n                    }\n                    else {\n                        dVar14 = **(*0x20 + -0x40);\n                        dVar15 = (*(*0x20 + -0x40))[1];\n                    }\n                    uVar11 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar11 == 0xf) {\n                        dVar16 = **(*0x20 + -0x30);\n                        dVar17 = (*(*0x20 + -0x30))[1];\ncode_r0x004778dd:\n                        if (dVar16 <= dVar14) {\n                            if (dVar14 <= dVar16) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        if (iVar6 == 0) {\n                            if (dVar17 <= dVar15) {\n                                if (dVar15 <= dVar17) {\n                                    iVar6 = 0;\n                                }\n                                else {\n                                    iVar6 = 1;\n                                }\n                            }\n                            else {\n                                iVar6 = -1;\n                            }\n                            return iVar6;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar11 == 0x10) {\n                        dVar16 = **(*0x20 + -0x30);\n                        dVar17 = (*(*0x20 + -0x30))[1];\n                        goto code_r0x004778dd;\n                    }\n                    *(*0x20 + -0x90) = uVar11;\n                    *(*0x20 + -0x118) = 0x4780a9;\n                    puVar9 = fcn.0040c140();\n                    puVar9[1] = 0x15;\n                    *puVar9 = 0x4a9a2f;\n                    uVar11 = *(*0x20 + -0x90);\n                    puVar9[2] = uVar11;\n                    *(*0x20 + -0x118) = 0x4780d6;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x90) = uVar11;\n                *(*0x20 + -0x118) = 0x4780ea;\n                puVar9 = fcn.0040c140();\n                puVar9[1] = 0x13;\n                *puVar9 = 0x4a9117;\n                puVar9[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x478117;\n                fcn.004327c0();\ncode_r0x00478117:\n                *(*0x20 + -0x118) = 0x478125;\n                puVar9 = fcn.0040c140();\n                puVar9[1] = 0x12;\n                *puVar9 = 0x4a8b91;\n                puVar9[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x478152;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x118) = 0x47815e;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x11;\n            *unaff_RBX = 0x4a875c;\n            arg1 = *(*0x20 + -0x90);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x118) = 0x47818b;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + 0x20) = unaff_RDI;\n        *(puVar13 + 0x28) = unaff_RSI;\n        *(puVar13 + 0x30) = arg3;\n        *(puVar13 + -8) = 0x4781af;\n        fcn.0045ad80();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        unaff_RDI = *(puVar13 + 0x20);\n        unaff_RSI = *(puVar13 + 0x28);\n        arg3 = *(puVar13 + 0x30);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 6211
    },
    "00479400": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00479400(int64_t arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    ulong in_RDX;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 < 9) {\n                if (3 < arg1) {\n                    if (arg1 < 6) {\n                        if (arg1 == 4) {\n                            uVar6 = *unaff_RBX;\n                            uVar1 = unaff_RBX[3];\n                            *(*0x20 + -0xf0) = 0x4795fb;\n                            uVar6 = fcn.0045f6c0(uVar6, uVar6, uVar1, 0);\n                            *(*0x20 + -0x10) = uVar6;\n                            *(*0x20 + -0x18) = 4;\n                            *(*0x20 + -0xf0) = 0x479613;\n                            fcn.004099a0();\n                            return *(*0x20 + -0x10);\n                        }\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xf0) = 0x479665;\n                        uVar6 = fcn.0045f6c0(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = arg1;\n                        *(*0x20 + -0xf0) = 0x47967d;\n                        fcn.004099a0();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (arg1 == 6) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xf0) = 0x4797cd;\n                        uVar6 = fcn.0045f6c0(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 6;\n                        *(*0x20 + -0xf0) = 0x4797e5;\n                        fcn.004099a0();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (arg1 == 7) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        *(*0x20 + -0xe8) = in_XMM15;\n                        *(*0x20 + -0xf0) = 0x4796e6;\n                        uVar6 = fcn.0045f740(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 7;\n                        *(*0x20 + -0xf0) = 0x4796fe;\n                        fcn.004099a0();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    uVar1 = unaff_RBX[3];\n                    uVar2 = unaff_RBX[4];\n                    *(*0x20 + -0xe8) = unaff_RBX[7];\n                    *(*0x20 + -0xe0) = 0;\n                    *(*0x20 + -0xf0) = 0x479765;\n                    uVar6 = fcn.0045f740(uVar6, uVar6, uVar1, uVar2);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xf0) = 0x47977d;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                if (1 < arg1) {\n                    if (arg1 == 2) {\n                        uVar6 = *unaff_RBX;\n                        *(*0x20 + -0xf0) = 0x479526;\n                        uVar6 = fcn.0045f660(uVar6);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 2;\n                        *(*0x20 + -0xf0) = 0x47953e;\n                        fcn.004099a0();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    *(*0x20 + -0xf0) = 0x479585;\n                    uVar6 = fcn.0045f660(uVar6);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xf0) = 0x47959d;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0) {\n                    *(*0x20 + -0xf0) = 0x47946d;\n                    uVar6 = fcn.0045f660(0);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0xf0) = 0x479485;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                uVar6 = *unaff_RBX;\n                *(*0x20 + -0xf0) = 0x4794c6;\n                uVar6 = fcn.0045f660(uVar6);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xf0) = 0x4794de;\n                fcn.004099a0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 < 0xe) {\n                if (arg1 < 0xb) {\n                    if (arg1 == 9) {\n                        uVar6 = *unaff_RBX;\n                        uVar1 = unaff_RBX[3];\n                        uVar2 = unaff_RBX[4];\n                        uVar3 = unaff_RBX[8];\n                        *(*0x20 + -0xe8) = unaff_RBX[7];\n                        *(*0x20 + -0xe0) = uVar3;\n                        *(*0x20 + -0xf0) = 0x47986f;\n                        uVar6 = fcn.0045f740(uVar6, uVar6, uVar1, uVar2);\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x18) = 9;\n                        *(*0x20 + -0xf0) = 0x479887;\n                        fcn.004099a0();\n                        return *(*0x20 + -0x10);\n                    }\n                    uVar6 = *unaff_RBX;\n                    uVar1 = unaff_RBX[3];\n                    uVar2 = unaff_RBX[4];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0xe8) = unaff_RBX[7];\n                    *(*0x20 + -0xe0) = uVar3;\n                    *(*0x20 + -0xd8) = uVar4;\n                    *(*0x20 + -0xd0) = in_XMM15;\n                    *(*0x20 + -0xf0) = 0x4798fb;\n                    uVar6 = fcn.0045f7e0(uVar6, uVar6, uVar1, uVar2);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0xf0) = 0x479913;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0xb) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[8];\n                    uVar3 = unaff_RBX[9];\n                    uVar4 = unaff_RBX[10];\n                    *(*0x20 + -0xe8) = unaff_RBX[7];\n                    *(*0x20 + -0xe0) = uVar2;\n                    *(*0x20 + -0xd8) = uVar3;\n                    *(*0x20 + -0xd0) = uVar4;\n                    *(*0x20 + -200) = 0;\n                    *(*0x20 + -0xf0) = 0x479b45;\n                    uVar6 = fcn.0045f7e0(*(*0x20 + -0x10), uVar4, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xb;\n                    *(*0x20 + -0xf0) = 0x479b5d;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                if (arg1 == 0xc) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[7];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0x18) = unaff_RBX[10];\n                    uVar5 = unaff_RBX[0xb];\n                    *(*0x20 + -0xe8) = uVar2;\n                    *(*0x20 + -0xe0) = uVar3;\n                    *(*0x20 + -0xd8) = uVar4;\n                    *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                    *(*0x20 + -200) = uVar5;\n                    *(*0x20 + -0xf0) = 0x4799c7;\n                    uVar6 = fcn.0045f7e0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xc;\n                    *(*0x20 + -0xf0) = 0x4799df;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                uVar5 = unaff_RBX[0xc];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = uVar5;\n                *(*0x20 + -0xb8) = in_XMM15;\n                *(*0x20 + -0xf0) = 0x479a9b;\n                uVar6 = fcn.0045f8a0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xf0) = 0x479ab3;\n                fcn.004099a0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 < 0x10) {\n                if (arg1 == 0xe) {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                    uVar6 = unaff_RBX[3];\n                    uVar1 = unaff_RBX[4];\n                    uVar2 = unaff_RBX[7];\n                    uVar3 = unaff_RBX[8];\n                    uVar4 = unaff_RBX[9];\n                    *(*0x20 + -0x18) = unaff_RBX[10];\n                    *(*0x20 + -0x20) = unaff_RBX[0xb];\n                    *(*0x20 + -0x28) = unaff_RBX[0xc];\n                    uVar5 = unaff_RBX[0xd];\n                    *(*0x20 + -0xe8) = uVar2;\n                    *(*0x20 + -0xe0) = uVar3;\n                    *(*0x20 + -0xd8) = uVar4;\n                    *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                    *(*0x20 + -200) = *(*0x20 + -0x20);\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                    *(*0x20 + -0xb8) = uVar5;\n                    *(*0x20 + -0xb0) = 0;\n                    *(*0x20 + -0xf0) = 0x479c49;\n                    uVar6 = fcn.0045f8a0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                    *(*0x20 + -0x10) = uVar6;\n                    *(*0x20 + -0x18) = 0xe;\n                    *(*0x20 + -0xf0) = 0x479c65;\n                    fcn.004099a0();\n                    return *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                uVar5 = unaff_RBX[0xe];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = uVar5;\n                *(*0x20 + -0xf0) = 0x479d4d;\n                uVar6 = fcn.0045f8a0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = arg1;\n                *(*0x20 + -0xf0) = 0x479d65;\n                fcn.004099a0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0x10) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                *(*0x20 + -0x38) = unaff_RBX[0xe];\n                uVar5 = unaff_RBX[0xf];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xa8) = uVar5;\n                *(*0x20 + -0xa0) = in_XMM15;\n                *(*0x20 + -0xf0) = 0x47a125;\n                uVar6 = fcn.0045f9a0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0x10;\n                *(*0x20 + -0xf0) = 0x47a13d;\n                fcn.004099a0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0x11) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                *(*0x20 + -0x38) = unaff_RBX[0xe];\n                *(*0x20 + -0x40) = unaff_RBX[0xf];\n                uVar5 = unaff_RBX[0x10];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = uVar5;\n                *(*0x20 + -0x98) = 0;\n                *(*0x20 + -0xf0) = 0x47a005;\n                uVar6 = fcn.0045f9a0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0x11;\n                *(*0x20 + -0xf0) = 0x47a01d;\n                fcn.004099a0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg1 == 0x12) {\n                *(*0x20 + -0x10) = *unaff_RBX;\n                uVar6 = unaff_RBX[3];\n                uVar1 = unaff_RBX[4];\n                uVar2 = unaff_RBX[7];\n                uVar3 = unaff_RBX[8];\n                uVar4 = unaff_RBX[9];\n                *(*0x20 + -0x18) = unaff_RBX[10];\n                *(*0x20 + -0x20) = unaff_RBX[0xb];\n                *(*0x20 + -0x28) = unaff_RBX[0xc];\n                *(*0x20 + -0x30) = unaff_RBX[0xd];\n                *(*0x20 + -0x38) = unaff_RBX[0xe];\n                *(*0x20 + -0x40) = unaff_RBX[0xf];\n                *(*0x20 + -0x48) = unaff_RBX[0x10];\n                uVar5 = unaff_RBX[0x11];\n                *(*0x20 + -0xe8) = uVar2;\n                *(*0x20 + -0xe0) = uVar3;\n                *(*0x20 + -0xd8) = uVar4;\n                *(*0x20 + -0xd0) = *(*0x20 + -0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x20);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x28);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = uVar5;\n                *(*0x20 + -0xf0) = 0x479ec5;\n                uVar6 = fcn.0045f9a0(*(*0x20 + -0x10), uVar5, uVar6, uVar1);\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = 0x12;\n                *(*0x20 + -0xf0) = 0x479edd;\n                fcn.004099a0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xf0) = 0x47a177;\n            fcn.0046f700();\n            unaff_RDI = *(*(*0x20 + 8) + 8);\n            *(*0x20 + -0xe8) = 0x4a6166;\n            *(*0x20 + -0xe0) = 1;\n            arg1 = 5;\n            *(*0x20 + -0xf0) = 0x47a1c5;\n            fcn.004486e0(5, in_RDX, 0x4aaa5f, 0x19);\n            *(*0x20 + -0xf0) = 0x47a1ca;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0xf0) = 0x47a1d9;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x47a1f3;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 6062
    },
    "00482b00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00482b00(uint *arg1)\n\n{\n    bool bVar1;\n    uint *in_RAX;\n    uint *noname_1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint *puVar4;\n    ulong arg1_00;\n    int64_t *unaff_RBX;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    uint *puStack40;\n    uint *puStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x544130 != 0) {\n        return 0;\n    }\n    puStack32 = arg1;\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x00483131;\n            goto code_r0x00482ec9;\n        }\n        if (arg1 == 0x3) {\n            iVar2 = fcn.00402020(0x4a62e9);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x00482ed0;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x00483131;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x00483131;\n            goto code_r0x00482ec9;\n        }\n        if (arg1 != 0x4) goto code_r0x00483131;\n        iVar2 = fcn.00402020(0x4a641d);\n        if (0 < iVar2) {\n            iVar2 = fcn.00402020(0x4a6425);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x00483131;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x00483131;\n            goto code_r0x00482ec9;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x00483131;\n                goto code_r0x00482ec9;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x00483131;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x00482ed0;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x00483131:\n                arg1_00 = 0x25;\n                uStack24 = fcn.00448440(0x25);\n                uStack48 = 0x4ad4da;\n                puVar3 = fcn.0040c140();\n                puVar3[1] = uStack48;\n                if (*0x598440 == 0) {\n                    *puVar3 = uStack24;\n                }\n                else {\n                    fcn.0045d100(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x00483131;\ncode_r0x00482ec9:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x00482ed0:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = NULL;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.00482840(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x543860 != NULL) {\n        in_R8 = **0x543860;\n        in_R9 = in_RAX;\n        puStack40 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x543860);\n        noname_1 = puStack40;\n    }\n    if (noname_1 != NULL) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x5981c0 != '\\0')) {\n        if ((puStack32 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        iVar2 = fcn.0047b240(*(in_RAX + 4));\n        noname_1 = in_RAX;\n        if ((iVar2 == 0) && (bVar1)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    puVar4 = puStack32;\n    if (puStack32 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x004830a4;\n    }\n    else if ((puStack32 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x004830a4;\n    uStack56 = 0;\n    uStack52 = 0;\n    noname_1 = *(in_RAX + 4);\n    puVar4 = &uStack52;\n    in_R8 = NULL;\n    in_R9 = &uStack56;\n    iVar2 = fcn.0047b480(puVar4, noname_1, 0, in_R9);\n    if (iVar2 != 0) {\n        return 0x4a6bbf;\n    }\ncode_r0x004830a4:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045cfe0(puVar4, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045cfe0(puVar4, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1929
    },
    "00483200": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00483200(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00457d40();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x53c808)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.0047ab20(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.0047aa40(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.004588c0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x4c8280;\n}\n",
        "token_count": 301
    },
    "00483d40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00483d40(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.0047ae40();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.0047af40();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040c140();\n    iVar2 = fcn.0040c140();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x598440 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.0045d100(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045cfe0(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.004161a0(0x496b20);\n    fcn.00482b00(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 447
    },
    "00489ee0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.00489ee0(uint64_t *arg1, ulong noname_1, uint64_t **arg3)\n\n{\n    ulong uVar1;\n    uint64_t *puVar2;\n    char cVar3;\n    uint64_t *in_RAX;\n    ulong uVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong *puVar15;\n    uint64_t **ppuVar16;\n    uint64_t **arg1_00;\n    uint64_t uVar17;\n    uint8_t *puVar18;\n    uint64_t *puVar19;\n    uchar uVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    int64_t *piVar23;\n    code *pcVar24;\n    uint64_t *unaff_RBX;\n    uchar *puVar25;\n    uchar *unaff_RBP;\n    uint32_t uVar26;\n    uint64_t **unaff_RSI;\n    uint64_t **unaff_RDI;\n    uint64_t uVar27;\n    uint64_t **ppuVar28;\n    uint8_t *puVar29;\n    uint64_t **in_R9;\n    uint64_t **ppuVar30;\n    int64_t unaff_R14;\n    bool bVar31;\n    \n    while (uVar26 = unaff_RSI,  puVar25 = *0x20, \n          *0x20 + -0x160 < *(unaff_R14 + 0x10) || *0x20 + -0x160 == *(unaff_R14 + 0x10)) {\ncode_r0x0048bcbe:\n        *(puVar25 + 8) = in_RAX;\n        *(puVar25 + 0x10) = unaff_RBX;\n        *(puVar25 + 0x18) = arg1;\n        *(puVar25 + 0x20) = unaff_RDI;\n        *(puVar25 + 0x28) = unaff_RSI;\n        *(puVar25 + 0x30) = arg3;\n        *(puVar25 + -8) = 0x48bce5;\n        fcn.0045ad80();\n        in_RAX = *(puVar25 + 8);\n        unaff_RBX = *(puVar25 + 0x10);\n        arg1 = *(puVar25 + 0x18);\n        unaff_RDI = *(puVar25 + 0x20);\n        unaff_RSI = *(puVar25 + 0x28);\n        arg3 = *(puVar25 + 0x30);\n        *0x20 = puVar25;\n    }\n    puVar25 = *0x20 + -0x1e0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + 0x28) = uVar26;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xe0) = unaff_RDI;\n    *(*0x20 + -0x78) = arg1;\n    *(*0x20 + -0x80) = unaff_RBX;\n    if (((0 < arg3) && (unaff_RDI != NULL)) && ((unaff_RDI & 0x60) == 0)) {\n        *(*0x20 + -0x1e8) = 0x489f85;\n        uVar4 = fcn.00474a20(unaff_RDI);\n        iVar13 = *(*0x20 + 8);\n        *(iVar13 + 0x18) = uVar4;\n        if (*0x598440 == 0) {\n            *(iVar13 + 0x20) = arg1;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x489fab;\n            fcn.0045d120(unaff_RDI, iVar13, arg3, in_R9);\n        }\n        *(*0x20 + -0x1e8) = 0x489fba;\n        cVar3 = fcn.00488e60();\n        if (cVar3 != '\\0') {\n            return;\n        }\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x78);\n        unaff_RBX = *(*0x20 + -0x80);\n        uVar26 = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0xe0);\n        arg3 = *(*0x20 + 0x30);\n    }\n    in_RAX[3] = 0;\n    if (*0x598440 == 0) {\n        in_RAX[4] = 0;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x48a02f;\n        in_RAX = fcn.0045d160(arg1, in_RAX + 4, 0, unaff_RDI);\n        in_R9 = unaff_RDI;\n    }\n    in_RAX[7] = unaff_RDI;\n    if (*0x598440 == 0) {\n        in_RAX[5] = unaff_RBX;\n        in_RAX[6] = arg1;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x48a05b;\n        fcn.0045d120(arg1, in_RAX + 5, arg3, unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x48a065;\n        in_RAX = fcn.0045d0e0();\n        in_R9 = unaff_RDI;\n    }\n    uVar27 = unaff_RDI & 0x1f;\n    if (uVar27 < 0x11) {\n        if (0xc < uVar27) {\n            if (0xe < uVar27) {\n                if (uVar27 == 0xf) {\n                    *(*0x20 + -0x1e8) = 0x48b0bc;\n                    fcn.00487ac0(uVar26);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48b0d3;\n                fcn.00487ac0(uVar26);\n                return;\n            }\n            if (uVar27 == 0xd) {\n                *(*0x20 + -0x1e8) = 0x48b085;\n                fcn.004879c0(uVar26);\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x48b097;\n            fcn.004879c0(uVar26);\n            return;\n        }\n        if (1 < uVar27) {\n            if (uVar27 < 7) {\n                if (uVar27 < 4) {\n                    if (uVar27 == 2) {\n                        uVar27 = *arg1;\n                    }\n                    else {\n                        uVar27 = *arg1;\n                    }\n                }\n                else if (uVar27 == 4) {\n                    uVar27 = *arg1;\n                }\n                else if (uVar27 == 5) {\n                    uVar27 = *arg1;\n                }\n                else {\n                    uVar27 = *arg1;\n                }\n                *(*0x20 + -0x1e8) = 0x48b00b;\n                fcn.004877c0(1, uVar27);\n                return;\n            }\n            if (uVar27 < 10) {\n                if (uVar27 == 7) {\n                    uVar27 = *arg1;\n                }\n                else if (uVar27 == 8) {\n                    uVar27 = *arg1;\n                }\n                else {\n                    uVar27 = *arg1;\n                }\n            }\n            else if (uVar27 == 10) {\n                uVar27 = *arg1;\n            }\n            else if (uVar27 == 0xb) {\n                uVar27 = *arg1;\n            }\n            else {\n                uVar27 = *arg1;\n            }\n            *(*0x20 + -0x1e8) = 0x48b05a;\n            fcn.004877c0(0, uVar27);\n            return;\n        }\n        if (uVar27 == 0) {\n            if (arg3 == NULL) {\n                uVar27 = in_RAX[1];\n                *(*0x20 + -0xe8) = uVar27 + 0x17;\n                uVar9 = *in_RAX;\n                uVar6 = in_RAX[2];\n                if (in_RAX[2] < uVar27 + 0x17) {\n                    *(*0x20 + -0xf0) = uVar27;\n                    *(*0x20 + -0x1e8) = 0x48ae7a;\n                    uVar9 = fcn.00444ac0(uVar27);\n                    uVar6 = uVar27;\n                }\n                *(*0x20 + -0xf0) = uVar6;\n                *(*0x20 + -0x88) = uVar9;\n                uVar7 = 0x17;\n                *(*0x20 + -0x1e8) = 0x48aead;\n                fcn.0045ddc0(0x17);\n                puVar15 = *(*0x20 + 8);\n                puVar15[1] = *(*0x20 + -0xe8);\n                uVar4 = *(*0x20 + -0xf0);\n                puVar15[2] = uVar4;\n                if (*0x598440 == 0) {\n                    *puVar15 = *(*0x20 + -0x88);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48aef3;\n                fcn.0045cfe0(uVar7, uVar4, arg3, in_R9);\n                return;\n            }\n            if (uVar26 != 0x76) {\n                *(*0x20 + -0x1e8) = 0x48af91;\n                fcn.004871c0(arg1, unaff_RDI, arg3);\n                return;\n            }\n            uVar9 = in_RAX[1];\n            uVar27 = uVar9 + 5;\n            uVar6 = *in_RAX;\n            uVar8 = uVar9;\n            uVar17 = in_RAX[2];\n            if (in_RAX[2] < uVar27) {\n                *(*0x20 + -0xe8) = uVar27;\n                *(*0x20 + -0xf0) = uVar9;\n                *(*0x20 + -0x1e8) = 0x48af3a;\n                uVar6 = fcn.00444ac0(uVar9);\n                uVar27 = *(*0x20 + -0xe8);\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0xf0);\n                uVar17 = uVar9;\n            }\n            *(uVar6 + uVar8) = 0x6c696e3c;\n            *(uVar6 + 4 + uVar8) = 0x3e;\n            in_RAX[1] = uVar27;\n            in_RAX[2] = uVar17;\n            if (*0x598440 == 0) {\n                *in_RAX = uVar6;\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x48af85;\n            fcn.0045d120(uVar8, unaff_RDI, arg3, in_R9);\n            return;\n        }\n        *(*0x20 + -0x1e8) = 0x48afa5;\n        fcn.00473160(unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x48afbb;\n        fcn.004876c0(*(*0x20 + 0x28));\n        return;\n    }\n    if (uVar27 < 0x16) {\n        if (0x13 < uVar27) {\n            if (uVar27 == 0x14) {\n                *(*0x20 + -0x1e8) = 0x48a3ea;\n                fcn.00474580(unaff_RDI);\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x1e8) = 0x48a63d;\n                    fcn.00489ee0(arg1, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n                    return;\n                }\n                piVar22 = *(*0x20 + 8);\n                if (*(piVar22 + 10) == '\\0') {\n                    uVar9 = piVar22[1];\n                    uVar27 = uVar9 + 5;\n                    iVar13 = *piVar22;\n                    uVar6 = uVar9;\n                    uVar8 = piVar22[2];\n                    if (piVar22[2] < uVar27) {\n                        *(*0x20 + -0xe8) = uVar9;\n                        *(*0x20 + -0xf0) = uVar27;\n                        *(*0x20 + -0x1e8) = 0x48a43a;\n                        iVar13 = fcn.00444ac0(uVar9);\n                        uVar27 = *(*0x20 + -0xf0);\n                        piVar22 = *(*0x20 + 8);\n                        uVar6 = *(*0x20 + -0xe8);\n                        uVar8 = uVar9;\n                    }\n                    *(iVar13 + uVar6) = 0x6c696e3c;\n                    *(iVar13 + 4 + uVar6) = 0x3e;\n                    piVar22[1] = uVar27;\n                    piVar22[2] = uVar8;\n                    if (*0x598440 == 0) {\n                        *piVar22 = iVar13;\n                        return;\n                    }\n                    *(*0x20 + -0x1e8) = 0x48a485;\n                    fcn.0045d120(uVar6, uVar8, arg3, in_R9);\n                    return;\n                }\n                iVar13 = *(*0x20 + -0x78);\n                *(*0x20 + -0x1e8) = 0x48a4a7;\n                iVar11 = fcn.004758a0(*(*0x20 + -0xe0));\n                pcVar24 = *(iVar11 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x48a4b3;\n                uVar7 = (*pcVar24)();\n                *(*0x20 + -0x160) = iVar13;\n                puVar15 = *(*0x20 + 8);\n                uVar27 = puVar15[1];\n                *(*0x20 + -0xe8) = uVar27;\n                *(*0x20 + -0xf0) = uVar27 + iVar13;\n                uVar4 = *puVar15;\n                uVar9 = puVar15[2];\n                if (puVar15[2] < uVar27 + iVar13) {\n                    *(*0x20 + -0xb8) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x48a4fe;\n                    uVar4 = fcn.00444ac0(uVar27);\n                    iVar13 = *(*0x20 + -0x160);\n                    uVar9 = uVar27;\n                }\n                *(*0x20 + -0xf8) = uVar9;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x48a545;\n                fcn.0045ddc0(iVar13);\n                uVar9 = *(*0x20 + -0xf0);\n                piVar22 = *(*0x20 + 8);\n                piVar22[1] = uVar9;\n                uVar6 = *(*0x20 + -0xf8);\n                piVar22[2] = uVar6;\n                iVar11 = *(*0x20 + -0xe8);\n                uVar27 = iVar11 + *(*0x20 + -0x160) + 5;\n                if (*0x598440 == 0) {\n                    iVar14 = *(*0x20 + -0x88);\n                    *piVar22 = iVar14;\n                }\n                else {\n                    iVar14 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x48a5a5;\n                    fcn.0045d120(uVar9, uVar6, iVar11, iVar13);\n                }\n                uVar8 = uVar9;\n                if (uVar6 < uVar27) {\n                    *(*0x20 + -0xe8) = uVar27;\n                    *(*0x20 + -0x1e8) = 0x48a5c5;\n                    iVar14 = fcn.00444ac0(uVar9);\n                    uVar27 = *(*0x20 + -0xe8);\n                    piVar22 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0xf0);\n                    uVar6 = uVar9;\n                }\n                *(iVar14 + uVar8) = 0x6c696e28;\n                *(iVar14 + 4 + uVar8) = 0x29;\n                piVar22[1] = uVar27;\n                piVar22[2] = uVar6;\n                if (*0x598440 == 0) {\n                    *piVar22 = iVar14;\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48a60f;\n                fcn.0045d120(uVar8, uVar6, iVar11, iVar13);\n                return;\n            }\n            if (*(in_RAX + 10) == '\\0') {\n                arg1_00 = in_RAX[1];\n                ppuVar16 = arg1_00 + 4;\n                in_R9 = *in_RAX;\n                ppuVar28 = in_RAX[2];\n                ppuVar30 = arg1_00;\n                if (in_RAX[2] < ppuVar16) {\n                    *(*0x20 + -0xe8) = arg1_00;\n                    *(*0x20 + -0xf0) = ppuVar16;\n                    *(*0x20 + -0x1e8) = 0x48a0ee;\n                    in_R9 = fcn.00444ac0(arg1_00);\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    ppuVar30 = *(*0x20 + -0xe8);\n                    ppuVar16 = *(*0x20 + -0xf0);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x78);\n                    ppuVar28 = arg1_00;\n                }\n                *(in_R9 + ppuVar30) = 0x5b70616d;\n                in_RAX[1] = ppuVar16;\n                in_RAX[2] = ppuVar28;\n                if (*0x598440 == 0) {\n                    *in_RAX = in_R9;\n                    in_R9 = ppuVar30;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x48a15f;\n                    fcn.0045d180(arg1, unaff_RDI, arg3);\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48a173;\n                iVar13 = fcn.004758a0(unaff_RDI);\n                pcVar24 = *(iVar13 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x48a17f;\n                uVar7 = (*pcVar24)();\n                *(*0x20 + -0x150) = arg1;\n                puVar15 = *(*0x20 + 8);\n                puVar18 = puVar15[1];\n                *(*0x20 + -0xe8) = puVar18;\n                *(*0x20 + -0xf0) = puVar18 + arg1;\n                uVar4 = *puVar15;\n                puVar29 = puVar15[2];\n                if (puVar15[2] < puVar18 + arg1) {\n                    *(*0x20 + -0xc0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x48a1ca;\n                    uVar4 = fcn.00444ac0(puVar18);\n                    arg1 = *(*0x20 + -0x150);\n                    puVar29 = puVar18;\n                }\n                *(*0x20 + -0xf8) = puVar29;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x48a210;\n                fcn.0045ddc0(arg1);\n                uVar27 = *(*0x20 + -0xf0);\n                puVar19 = *(*0x20 + 8);\n                puVar19[1] = uVar27;\n                uVar9 = *(*0x20 + -0xf8);\n                puVar19[2] = uVar9;\n                if (*0x598440 == 0) {\n                    uVar6 = *(*0x20 + -0x88);\n                    *puVar19 = uVar6;\n                }\n                else {\n                    uVar6 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x48a253;\n                    fcn.0045d120(uVar27, uVar9, uVar4, arg1);\n                }\n                unaff_RDI = *(*0x20 + -0xe0);\n                if ((unaff_RDI >> 9 & 1) == 0) {\n                    if ((unaff_RDI >> 7 & 1) == 0) {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = in_R9;\n                    }\n                    else {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = *in_R9;\n                    }\n                    if (ppuVar16 == NULL) {\n                        iVar13 = *(*0x20 + -0x150);\n                        iVar11 = *(*0x20 + -0xe8);\n                        uVar8 = iVar11 + iVar13 + 5;\n                        uVar17 = uVar27;\n                        if (uVar9 < uVar8) {\n                            *(*0x20 + -0xe8) = uVar8;\n                            *(*0x20 + -0x1e8) = 0x48a385;\n                            uVar6 = fcn.00444ac0(uVar27);\n                            uVar8 = *(*0x20 + -0xe8);\n                            puVar19 = *(*0x20 + 8);\n                            uVar17 = *(*0x20 + -0xf0);\n                            uVar9 = uVar27;\n                        }\n                        *(uVar6 + uVar17) = 0x6c696e28;\n                        *(uVar6 + 4 + uVar17) = 0x29;\n                        puVar19[1] = uVar8;\n                        puVar19[2] = uVar9;\n                        if (*0x598440 == 0) {\n                            *puVar19 = uVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x48a3cc;\n                            fcn.0045d120(uVar17, uVar9, iVar13, iVar11);\n                        }\n                        return;\n                    }\n                }\n                else {\n                    in_R9 = *(*0x20 + -0x78);\n                }\n                uVar8 = uVar6;\n                if (uVar9 < *(*0x20 + -0xe8) + *(*0x20 + -0x150) + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48a2c5;\n                    uVar8 = fcn.00444ac0(uVar27);\n                    puVar19 = *(*0x20 + 8);\n                    puVar19[2] = uVar27;\n                    if (*0x598440 == 0) {\n                        *puVar19 = uVar8;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48a2e5;\n                        uVar8 = fcn.0045cfe0(uVar27, uVar9, unaff_RDI, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    in_R9 = *(*0x20 + -0x78);\n                    uVar27 = uVar6;\n                }\n                puVar19[1] = uVar27 + 1;\n                *(uVar8 + uVar27) = 0x7b;\n                arg3 = unaff_RDI;\n            }\n            *(*0x20 + -0x1e8) = 0x48a325;\n            puVar5 = fcn.00476fc0(unaff_RDI);\n            ppuVar16 = puVar5[1];\n            puVar15 = *puVar5;\n            if (0 < ppuVar16) {\n                *(*0x20 + -0xe8) = ppuVar16;\n                *(*0x20 + -0xd0) = puVar5;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x98) = puVar15;\n                    *(*0x20 + -0x118) = iVar13;\n                    uVar4 = puVar15[1];\n                    uVar7 = puVar15[2];\n                    uVar1 = *puVar15;\n                    if (0 < iVar13) {\n                        *(*0x20 + -0xe0) = uVar7;\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -0x80) = uVar1;\n                        piVar22 = *(*0x20 + 8);\n                        if (*(piVar22 + 10) == '\\0') {\n                            iVar13 = piVar22[1];\n                            iVar11 = *piVar22;\n                            iVar14 = iVar11;\n                            if (piVar22[2] < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x48bb51;\n                                iVar14 = fcn.00444ac0(iVar13);\n                                piVar22 = *(*0x20 + 8);\n                                piVar22[2] = iVar13;\n                                if (*0x598440 == 0) {\n                                    *piVar22 = iVar14;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x48bb70;\n                                    iVar14 = fcn.0045cfe0(iVar13, ppuVar16, arg3, uVar4);\n                                }\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar22 = *(*0x20 + 8);\n                                iVar13 = iVar11;\n                            }\n                            piVar22[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar9 = piVar22[1];\n                            uVar27 = uVar9 + 2;\n                            iVar11 = *piVar22;\n                            uVar6 = uVar9;\n                            uVar8 = piVar22[2];\n                            if (piVar22[2] < uVar27) {\n                                *(*0x20 + -0xf0) = uVar9;\n                                *(*0x20 + -0xf8) = uVar27;\n                                *(*0x20 + -0x1e8) = 0x48ba91;\n                                iVar11 = fcn.00444ac0(uVar9);\n                                uVar7 = *(*0x20 + -0xe0);\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar22 = *(*0x20 + 8);\n                                uVar6 = *(*0x20 + -0xf0);\n                                uVar27 = *(*0x20 + -0xf8);\n                                iVar13 = *(*0x20 + -0x118);\n                                uVar8 = uVar9;\n                            }\n                            *(iVar11 + uVar6) = 0x202c;\n                            piVar22[1] = uVar27;\n                            piVar22[2] = uVar8;\n                            if (*0x598440 == 0) {\n                                *piVar22 = iVar11;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48bb18;\n                                fcn.0045d100(iVar13, iVar11, uVar7, uVar4);\n                            }\n                        }\n                    }\n                    iVar13 = *(*0x20 + 0x30);\n                    arg3 = iVar13 + 1;\n                    *(*0x20 + -0xf0) = arg3;\n                    *(*0x20 + -0x1e8) = 0x48bbf4;\n                    fcn.00489ee0(uVar4, iVar13, arg3);\n                    ppuVar16 = *(*0x20 + 8);\n                    puVar19 = ppuVar16[1];\n                    unaff_RSI = puVar19 + 1;\n                    puVar2 = *ppuVar16;\n                    unaff_RBX = puVar2;\n                    unaff_RDI = ppuVar16[2];\n                    if (ppuVar16[2] < unaff_RSI) {\n                        *(*0x20 + -0x1e8) = 0x48bc1d;\n                        unaff_RBX = fcn.00444ac0(puVar19);\n                        ppuVar16 = *(*0x20 + 8);\n                        ppuVar16[2] = puVar19;\n                        unaff_RDI = ppuVar16;\n                        if (*0x598440 == 0) {\n                            *ppuVar16 = unaff_RBX;\n                            puVar19 = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x48bc3c;\n                            unaff_RBX = fcn.0045cfe0(puVar19, iVar13, arg3, uVar4);\n                            puVar19 = puVar2;\n                        }\n                    }\n                    ppuVar16[1] = puVar19 + 1;\n                    *(unaff_RBX + puVar19) = 0x3a;\n                    in_R9 = *(*(*0x20 + -0xd0) + 0x18);\n                    arg1 = *(*(*0x20 + -0xd0) + 0x20);\n                    puVar19 = *(*0x20 + -0x118);\n                    if (arg1 <= puVar19) break;\n                    puVar2 = in_R9[puVar19 * 3 + 1];\n                    arg3 = *(*0x20 + -0xf0);\n                    *(*0x20 + -0x1e8) = 0x48bc94;\n                    fcn.00489ee0(puVar2, puVar19 * 3, arg3);\n                    iVar13 = *(*0x20 + -0x118) + 1;\n                    ppuVar16 = *(*0x20 + -0xe8);\n                    in_R9 = ppuVar16;\n                    if (ppuVar16 <= iVar13) goto code_r0x0048b925;\n                    puVar15 = *(*0x20 + -0x98) + 0x18;\n                }\n                *(*0x20 + -0x1e8) = 0x48bcbd;\n                in_RAX = fcn.0045d480(arg1);\n                goto code_r0x0048bcbe;\n            }\ncode_r0x0048b925:\n            piVar22 = *(*0x20 + 8);\n            if (*(piVar22 + 10) != '\\0') {\n                iVar13 = piVar22[1];\n                iVar11 = *piVar22;\n                piVar21 = piVar22;\n                iVar14 = iVar11;\n                if (piVar22[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48b954;\n                    iVar14 = fcn.00444ac0(iVar13);\n                    piVar21 = *(*0x20 + 8);\n                    piVar21[2] = iVar13;\n                    if (*0x598440 == 0) {\n                        *piVar21 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48b973;\n                        iVar14 = fcn.0045cfe0(iVar13, piVar22, arg3, in_R9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar21[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            iVar13 = piVar22[1];\n            iVar11 = *piVar22;\n            piVar21 = piVar22;\n            iVar14 = iVar11;\n            if (piVar22[2] < iVar13 + 1U) {\n                *(*0x20 + -0x1e8) = 0x48b9b1;\n                iVar14 = fcn.00444ac0(iVar13);\n                piVar21 = *(*0x20 + 8);\n                piVar21[2] = iVar13;\n                if (*0x598440 == 0) {\n                    *piVar21 = iVar14;\n                    iVar13 = iVar11;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x48b9d0;\n                    iVar14 = fcn.0045cfe0(iVar13, piVar22, arg3, in_R9);\n                    iVar13 = iVar11;\n                }\n            }\n            piVar21[1] = iVar13 + 1;\n            *(iVar14 + iVar13) = 0x5d;\n            return;\n        }\n        if (uVar27 != 0x11) goto code_r0x0048adcf;\n    }\n    else {\n        if (0x17 < uVar27) {\n            if (uVar27 == 0x18) {\n                *(*0x20 + -0x1e8) = 0x48adf8;\n                fcn.004757c0(unaff_RDI);\n                *(*0x20 + -0x1e8) = 0x48ae12;\n                fcn.00487cc0(arg1, unaff_RDI);\n                return;\n            }\n            if (uVar27 == 0x19) {\n                if (*(in_RAX + 10) != '\\0') {\n                    *(*0x20 + -0x1e8) = 0x48ac34;\n                    iVar13 = fcn.004758a0(unaff_RDI);\n                    pcVar24 = *(iVar13 + 0xf8);\n                    *(*0x20 + -0x1e8) = 0x48ac42;\n                    uVar7 = (*pcVar24)();\n                    puVar15 = *(*0x20 + 8);\n                    puVar18 = puVar15[1];\n                    *(*0x20 + -0xe8) = arg1 + puVar18;\n                    uVar4 = *puVar15;\n                    puVar29 = puVar15[2];\n                    if (puVar15[2] < arg1 + puVar18) {\n                        *(*0x20 + -0xf0) = puVar18;\n                        *(*0x20 + -0x158) = arg1;\n                        *(*0x20 + -0xb0) = uVar7;\n                        *(*0x20 + -0x1e8) = 0x48ac8d;\n                        uVar4 = fcn.00444ac0(puVar18);\n                        arg1 = *(*0x20 + -0x158);\n                        puVar29 = puVar18;\n                    }\n                    *(*0x20 + -0x88) = uVar4;\n                    *(*0x20 + -0xf0) = puVar29;\n                    *(*0x20 + -0x1e8) = 0x48accd;\n                    fcn.0045ddc0(arg1);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0xe8);\n                    in_RAX[2] = *(*0x20 + -0xf0);\n                    if (*0x598440 == 0) {\n                        *in_RAX = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48ad10;\n                        fcn.0045d100(arg1, *(*0x20 + -0x88), uVar4, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar9 = in_RAX[1];\n                uVar27 = *in_RAX;\n                uVar6 = uVar27;\n                if (in_RAX[2] < uVar9 + 1) {\n                    *(*0x20 + -0x1e8) = 0x48ad65;\n                    uVar8 = uVar9;\n                    uVar6 = fcn.00444ac0(uVar9);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = uVar9;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48ad85;\n                        uVar6 = fcn.0045cfe0(uVar9, unaff_RDI, arg3, uVar8);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar9 = uVar27;\n                }\n                in_RAX[1] = uVar9 + 1;\n                *(uVar6 + uVar9) = 0x7b;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x120) = iVar13;\n                    *(*0x20 + -0x1e8) = 0x48b168;\n                    iVar13 = fcn.004752a0(unaff_RDI);\n                    if (iVar13 <= *(*0x20 + -0x120)) break;\n                    if (*(*0x20 + -0x120) < 1) {\n                        piVar22 = *(*0x20 + 8);\n                    }\n                    else {\n                        piVar21 = *(*0x20 + 8);\n                        piVar22 = piVar21;\n                        if (*(piVar21 + 10) == '\\0') {\n                            iVar13 = piVar21[1];\n                            iVar11 = *piVar21;\n                            uVar27 = piVar21[2];\n                            iVar14 = iVar11;\n                            if (uVar27 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x48b245;\n                                iVar14 = fcn.00444ac0(iVar13);\n                                piVar22 = *(*0x20 + 8);\n                                piVar22[2] = iVar13;\n                                if (*0x598440 == 0) {\n                                    *piVar22 = iVar14;\n                                    iVar13 = iVar11;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x48b265;\n                                    iVar14 = fcn.0045cfe0(iVar13, piVar21, uVar27, uVar9);\n                                    iVar13 = iVar11;\n                                }\n                            }\n                            piVar22[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar6 = piVar21[1];\n                            uVar27 = uVar6 + 2;\n                            iVar13 = *piVar21;\n                            uVar8 = uVar6;\n                            uVar17 = piVar21[2];\n                            if (piVar21[2] < uVar27) {\n                                *(*0x20 + -0xe8) = uVar6;\n                                *(*0x20 + -0xf0) = uVar27;\n                                *(*0x20 + -0x1e8) = 0x48b1cf;\n                                iVar13 = fcn.00444ac0(uVar6);\n                                piVar22 = *(*0x20 + 8);\n                                uVar27 = *(*0x20 + -0xf0);\n                                uVar8 = *(*0x20 + -0xe8);\n                                uVar17 = uVar6;\n                            }\n                            *(iVar13 + uVar8) = 0x202c;\n                            piVar22[1] = uVar27;\n                            piVar22[2] = uVar17;\n                            if (*0x598440 == 0) {\n                                *piVar22 = iVar13;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48b21c;\n                                fcn.0045d120(uVar8, piVar22, uVar17, uVar9);\n                            }\n                        }\n                    }\n                    if ((*(piVar22 + 0x4f) != '\\0') || (*(piVar22 + 10) != '\\0')) {\n                        *(*0x20 + -0x1e8) = 0x48b2b9;\n                        iVar13 = fcn.004758a0(*(*0x20 + -0xe0));\n                        pcVar24 = *(iVar13 + 0x50);\n                        *(*0x20 + -0x1e8) = 0x48b2ca;\n                        (*pcVar24)();\n                        *(*0x20 + -0x70) = *(*0x20 + -0x1e0);\n                        *(*0x20 + -0x1f0) = unaff_RBP;\n                        *(*0x20 + -0x1e8) = 0x48b2f2;\n                        fcn.0045da8c();\n                        unaff_RBP = *(*0x20 + -0x1f0);\n                        iVar13 = *(*0x20 + -0x68);\n                        if (iVar13 != 0) {\n                            *(*0x20 + -0x140) = iVar13;\n                            puVar19 = *(*0x20 + 8);\n                            uVar27 = puVar19[1];\n                            *(*0x20 + -0xe8) = uVar27;\n                            *(*0x20 + -0xf0) = iVar13 + uVar27;\n                            uVar9 = *puVar19;\n                            uVar6 = puVar19[2];\n                            if (puVar19[2] < iVar13 + uVar27) {\n                                *(*0x20 + -0xa8) = *(*0x20 + -0x70);\n                                *(*0x20 + -0x1e8) = 0x48b35f;\n                                uVar9 = fcn.00444ac0(uVar27);\n                                iVar13 = *(*0x20 + -0x140);\n                                uVar6 = uVar27;\n                            }\n                            *(*0x20 + -0x88) = uVar9;\n                            *(*0x20 + -0xf8) = uVar6;\n                            *(*0x20 + -0x1e8) = 0x48b396;\n                            fcn.0045ddc0(iVar13);\n                            iVar11 = *(*0x20 + -0xf0);\n                            piVar22 = *(*0x20 + 8);\n                            piVar22[1] = iVar11;\n                            uVar27 = *(*0x20 + -0xf8);\n                            piVar22[2] = uVar27;\n                            iVar14 = *(*0x20 + -0x140);\n                            iVar13 = iVar14 + *(*0x20 + -0xe8);\n                            if (*0x598440 == 0) {\n                                iVar12 = *(*0x20 + -0x88);\n                                *piVar22 = iVar12;\n                            }\n                            else {\n                                iVar12 = *(*0x20 + -0x88);\n                                *(*0x20 + -0x1e8) = 0x48b3f1;\n                                fcn.0045d120(iVar11, uVar27, iVar14, uVar9);\n                            }\n                            iVar10 = iVar12;\n                            if (uVar27 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x48b405;\n                                iVar10 = fcn.00444ac0(iVar11);\n                                piVar22 = *(*0x20 + 8);\n                                piVar22[2] = iVar11;\n                                if (*0x598440 == 0) {\n                                    *piVar22 = iVar10;\n                                    iVar11 = iVar12;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x48b425;\n                                    iVar10 = fcn.0045cfe0(iVar11, uVar27, iVar14, uVar9);\n                                    iVar11 = iVar12;\n                                }\n                            }\n                            piVar22[1] = iVar11 + 1;\n                            *(iVar10 + iVar11) = 0x3a;\n                        }\n                    }\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x1e8) = 0x48b105;\n                    fcn.00486e60(*(*0x20 + -0xe0));\n                    arg3 = *(*0x20 + 0x30) + 1;\n                    *(*0x20 + -0x1e8) = 0x48b12e;\n                    fcn.00489ee0(uVar4, *(*0x20 + 0x30), arg3);\n                    iVar13 = *(*0x20 + -0x120) + 1;\n                    unaff_RDI = *(*0x20 + -0xe0);\n                }\n                piVar22 = *(*0x20 + 8);\n                iVar13 = piVar22[1];\n                iVar11 = *piVar22;\n                piVar21 = piVar22;\n                iVar14 = iVar11;\n                if (piVar22[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48b476;\n                    iVar14 = fcn.00444ac0(iVar13);\n                    piVar21 = *(*0x20 + 8);\n                    piVar21[2] = iVar13;\n                    if (*0x598440 == 0) {\n                        *piVar21 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48b495;\n                        iVar14 = fcn.0045cfe0(iVar13, piVar22, arg3, uVar9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar21[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            if (uVar27 != 0x1a) {\n                *(*0x20 + -0x1e8) = 0x48ade5;\n                fcn.00486f00(arg1, unaff_RDI, arg3, in_R9);\n                return;\n            }\ncode_r0x0048adcf:\n            *(*0x20 + -0x1e8) = 0x48add7;\n            fcn.004884a0(arg1);\n            return;\n        }\n        if (uVar27 == 0x16) {\n            if (arg3 == NULL) {\n                *(*0x20 + -0x1e8) = 0x48aa91;\n                iVar13 = fcn.00475380(unaff_RDI);\n                bVar31 = iVar13 != 0;\n                arg1 = *(*0x20 + -0x78);\n                arg3 = *(*0x20 + 0x30);\n                unaff_RDI = *(*0x20 + -0xe0);\n            }\n            else {\n                bVar31 = false;\n            }\n            if (bVar31) {\n                *(*0x20 + -0x1e8) = 0x48aadf;\n                uVar4 = fcn.00474580(unaff_RDI);\n                uVar27 = unaff_RDI & 0x1f;\n                if (uVar27 < 0x16) {\n                    if ((uVar27 == 0x11) || (uVar27 == 0x15)) {\ncode_r0x0048ab11:\n                        piVar22 = *(*0x20 + 8);\n                        iVar13 = piVar22[1];\n                        iVar11 = *piVar22;\n                        piVar21 = piVar22;\n                        iVar14 = iVar11;\n                        if (piVar22[2] < iVar13 + 1U) {\n                            *(*0x20 + -0x78) = arg1;\n                            *(*0x20 + -0x80) = uVar4;\n                            *(*0x20 + -0xe0) = unaff_RDI;\n                            *(*0x20 + -0x1e8) = 0x48ab57;\n                            iVar12 = iVar11;\n                            iVar14 = fcn.00444ac0(iVar13);\n                            piVar21 = *(*0x20 + 8);\n                            piVar21[2] = iVar13;\n                            if (*0x598440 == 0) {\n                                *piVar21 = iVar14;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48ab76;\n                                iVar14 = fcn.0045cfe0(iVar13, piVar22, arg3, iVar12);\n                            }\n                            arg1 = *(*0x20 + -0x78);\n                            iVar13 = iVar11;\n                        }\n                        piVar21[1] = iVar13 + 1;\n                        *(iVar14 + iVar13) = 0x26;\n                        *(*0x20 + -0x1e8) = 0x48abc5;\n                        fcn.00489ee0(arg1, piVar21, *(*0x20 + 0x30) + 1);\n                        return;\n                    }\n                }\n                else if ((uVar27 == 0x17) || (uVar27 == 0x19)) goto code_r0x0048ab11;\n                arg1 = *(*0x20 + -0x78);\n            }\n            goto code_r0x0048adcf;\n        }\n    }\n    *(*0x20 + -0x100) = uVar27;\n    if (uVar26 < 0x72) {\n        if ((uVar26 != 0x58) && (uVar26 != 0x71)) goto code_r0x0048a7c3;\n    }\n    else if ((uVar26 != 0x73) && (uVar26 != 0x78)) goto code_r0x0048a7c3;\n    *(*0x20 + -0x1e8) = 0x48a697;\n    iVar13 = fcn.004758a0(unaff_RDI);\n    *(*0x20 + -0x168) = iVar13;\n    *(*0x20 + -0xd8) = arg1;\n    pcVar24 = *(iVar13 + 0x48);\n    *(*0x20 + -0x1e8) = 0x48a6ad;\n    iVar13 = (*pcVar24)();\n    pcVar24 = *(iVar13 + 0x98);\n    *(*0x20 + -0x1e8) = 0x48a6b9;\n    iVar13 = (*pcVar24)();\n    if (iVar13 == 8) {\n        if (*(*0x20 + -0x100) == 0x17) {\n            iVar11 = *(*0x20 + -0x78);\n            iVar13 = *(*0x20 + -0xe0);\n            *(*0x20 + -0x1e8) = 0x48a787;\n            iVar14 = fcn.00473240(iVar13);\n        }\n        else {\n            uVar4 = *(*0x20 + -0xe0);\n            if ((uVar4 >> 8 & 1) == 0) {\n                *(*0x20 + -0x1e8) = 0x48a6ff;\n                uVar4 = fcn.00474ba0(uVar4);\n                *(*0x20 + -0x110) = uVar4;\n                *(*0x20 + -0x1e8) = 0x48a719;\n                iVar14 = fcn.004449e0(uVar4);\n                *(*0x20 + -0x90) = iVar14;\n                for (iVar12 = 0; iVar13 = *(*0x20 + -0x110),  iVar11 = iVar13,  iVar12 < iVar13; iVar12 = iVar12 + 1) {\n                    *(*0x20 + -0x138) = iVar12;\n                    puVar15 = *(*0x20 + -0x78);\n                    uVar27 = *(*0x20 + -0xe0);\n                    *(*0x20 + -0x1e8) = 0x48b871;\n                    fcn.00474860(uVar27);\n                    uVar27 = uVar27 & 0x1f;\n                    *(*0x20 + -0x100) = uVar27;\n                    if (uVar27 < 10) {\n                        if (uVar27 == 7) {\n                            uVar20 = *puVar15;\n                        }\n                        else if (uVar27 == 8) {\n                            uVar20 = *puVar15;\n                        }\n                        else {\n                            if (uVar27 != 9) {\ncode_r0x0048b8e7:\n                                *(*0x20 + -0x1e8) = 0x48b8f3;\n                                puVar15 = fcn.0040c140();\n                                puVar15[1] = 0x12;\n                                *puVar15 = 0x4a8b91;\n                                puVar15[2] = *(*0x20 + -0x100);\n                                *(*0x20 + -0x1e8) = 0x48b925;\n                                fcn.004327c0();\n                                goto code_r0x0048b925;\n                            }\n                            uVar20 = *puVar15;\n                        }\n                    }\n                    else if (uVar27 == 10) {\n                        uVar20 = *puVar15;\n                    }\n                    else if (uVar27 == 0xb) {\n                        uVar20 = *puVar15;\n                    }\n                    else {\n                        if (uVar27 != 0xc) goto code_r0x0048b8e7;\n                        uVar20 = *puVar15;\n                    }\n                    iVar12 = *(*0x20 + -0x138);\n                    iVar14 = *(*0x20 + -0x90);\n                    *(iVar14 + iVar12) = uVar20;\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48a73d;\n                fcn.00474ba0(uVar4);\n                iVar11 = *(*0x20 + -0x78);\n                iVar13 = *(*0x20 + -0xe0);\n                *(*0x20 + -0x1e8) = 0x48a75f;\n                fcn.00475520(iVar13);\n                *(*0x20 + -0x1e8) = 0x48a765;\n                iVar14 = fcn.00473240(iVar13);\n            }\n        }\n        *(*0x20 + -0x108) = iVar13;\n        *(*0x20 + -0x110) = iVar11;\n        *(*0x20 + -0xa0) = iVar14;\n        pcVar24 = *(*(*0x20 + -0x168) + 0xf8);\n        *(*0x20 + -0x1e8) = 0x48b7da;\n        uVar4 = (*pcVar24)();\n        *(*0x20 + -0x1e8) = 0x48b80c;\n        fcn.00487dc0(*(*0x20 + -0x110), pcVar24, uVar4, iVar11);\n        return;\n    }\n    in_RAX = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x78);\n    unaff_RDI = *(*0x20 + -0xe0);\n    arg3 = *(*0x20 + 0x30);\ncode_r0x0048a7c3:\n    if (*(in_RAX + 10) == '\\0') {\n        uVar27 = in_RAX[1];\n        uVar9 = *in_RAX;\n        uVar6 = uVar9;\n        if (in_RAX[2] < uVar27 + 1) {\n            *(*0x20 + -0x1e8) = 0x48a7fa;\n            uVar8 = uVar27;\n            uVar6 = fcn.00444ac0(uVar27);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar27;\n            if (*0x598440 == 0) {\n                *in_RAX = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48a819;\n                uVar6 = fcn.0045cfe0(uVar27, unaff_RDI, arg3, uVar8);\n            }\n            unaff_RDI = *(*0x20 + -0xe0);\n            arg3 = *(*0x20 + 0x30);\n            uVar27 = uVar9;\n        }\n        in_RAX[1] = uVar27 + 1;\n        *(uVar6 + uVar27) = 0x5b;\n        iVar13 = 0;\n        while( true ) {\n            *(*0x20 + -0x128) = iVar13;\n            *(*0x20 + -0x1e8) = 0x48b6c8;\n            iVar13 = fcn.00474ba0(unaff_RDI);\n            if (iVar13 <= *(*0x20 + -0x128)) break;\n            if (0 < *(*0x20 + -0x128)) {\n                piVar22 = *(*0x20 + 8);\n                iVar13 = piVar22[1];\n                iVar11 = *piVar22;\n                uVar9 = piVar22[2];\n                piVar21 = piVar22;\n                iVar14 = iVar11;\n                if (uVar9 < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x48b709;\n                    iVar14 = fcn.00444ac0(iVar13);\n                    piVar21 = *(*0x20 + 8);\n                    piVar21[2] = iVar13;\n                    if (*0x598440 == 0) {\n                        *piVar21 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x48b728;\n                        iVar14 = fcn.0045cfe0(iVar13, piVar22, uVar9, uVar27);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar21[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x20;\n            }\n            uVar4 = *(*0x20 + -0x78);\n            *(*0x20 + -0x1e8) = 0x48b665;\n            fcn.00474860(*(*0x20 + -0xe0));\n            arg3 = *(*0x20 + 0x30) + 1;\n            *(*0x20 + -0x1e8) = 0x48b68e;\n            fcn.00489ee0(uVar4, *(*0x20 + 0x30), arg3);\n            iVar13 = *(*0x20 + -0x128) + 1;\n            unaff_RDI = *(*0x20 + -0xe0);\n        }\n        piVar22 = *(*0x20 + 8);\n        iVar13 = piVar22[1];\n        iVar11 = *piVar22;\n        piVar21 = piVar22;\n        iVar14 = iVar11;\n        if (piVar22[2] < iVar13 + 1U) {\n            *(*0x20 + -0x1e8) = 0x48b773;\n            iVar14 = fcn.00444ac0(iVar13);\n            piVar21 = *(*0x20 + 8);\n            piVar21[2] = iVar13;\n            if (*0x598440 == 0) {\n                *piVar21 = iVar14;\n                iVar13 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48b792;\n                iVar14 = fcn.0045cfe0(iVar13, piVar22, arg3, uVar27);\n                iVar13 = iVar11;\n            }\n        }\n        piVar21[1] = iVar13 + 1;\n        *(iVar14 + iVar13) = 0x5d;\n        return;\n    }\n    *(*0x20 + -0x1e8) = 0x48a86b;\n    iVar13 = fcn.004758a0(unaff_RDI);\n    pcVar24 = *(iVar13 + 0xf8);\n    *(*0x20 + -0x1e8) = 0x48a877;\n    uVar7 = (*pcVar24)();\n    *(*0x20 + -0x148) = arg1;\n    puVar15 = *(*0x20 + 8);\n    puVar18 = puVar15[1];\n    *(*0x20 + -0xe8) = puVar18;\n    *(*0x20 + -0xf0) = arg1 + puVar18;\n    uVar4 = *puVar15;\n    puVar29 = puVar15[2];\n    if (puVar15[2] < arg1 + puVar18) {\n        *(*0x20 + -200) = uVar7;\n        *(*0x20 + -0x1e8) = 0x48a8c5;\n        uVar4 = fcn.00444ac0(puVar18);\n        arg1 = *(*0x20 + -0x148);\n        puVar29 = puVar18;\n    }\n    *(*0x20 + -0xf8) = puVar29;\n    *(*0x20 + -0x88) = uVar4;\n    *(*0x20 + -0x1e8) = 0x48a90b;\n    fcn.0045ddc0(arg1);\n    uVar27 = *(*0x20 + -0xf0);\n    puVar19 = *(*0x20 + 8);\n    puVar19[1] = uVar27;\n    uVar9 = *(*0x20 + -0xf8);\n    puVar19[2] = uVar9;\n    if (*0x598440 == 0) {\n        uVar6 = *(*0x20 + -0x88);\n        *puVar19 = uVar6;\n    }\n    else {\n        uVar6 = *(*0x20 + -0x88);\n        *(*0x20 + -0x1e8) = 0x48a94f;\n        fcn.0045d120(uVar27, uVar9, uVar4, arg1);\n    }\n    if (*(*0x20 + -0x100) == 0x17) {\n        piVar22 = *(*0x20 + -0x78);\n        if (*piVar22 == 0) {\n            iVar13 = *(*0x20 + -0xe8);\n            iVar11 = *(*0x20 + -0x148);\n            uVar8 = iVar11 + iVar13 + 5;\n            uVar17 = uVar27;\n            if (uVar9 < uVar8) {\n                *(*0x20 + -0xe8) = uVar8;\n                *(*0x20 + -0x1e8) = 0x48a9b1;\n                uVar6 = fcn.00444ac0(uVar27);\n                uVar8 = *(*0x20 + -0xe8);\n                puVar19 = *(*0x20 + 8);\n                uVar17 = *(*0x20 + -0xf0);\n                uVar9 = uVar27;\n            }\n            *(uVar6 + uVar17) = 0x6c696e28;\n            *(uVar6 + 4 + uVar17) = 0x29;\n            puVar19[1] = uVar8;\n            puVar19[2] = uVar9;\n            if (*0x598440 == 0) {\n                *puVar19 = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48a9f6;\n                fcn.0045d120(uVar17, uVar9, iVar13, iVar11);\n            }\n            return;\n        }\n    }\n    else {\n        piVar22 = *(*0x20 + -0x78);\n    }\n    iVar13 = *(*0x20 + -0xe8);\n    uVar8 = uVar6;\n    if (uVar9 < *(*0x20 + -0x148) + iVar13 + 1U) {\n        *(*0x20 + -0x1e8) = 0x48aa3a;\n        uVar8 = fcn.00444ac0(uVar27);\n        puVar19 = *(*0x20 + 8);\n        puVar19[2] = uVar27;\n        if (*0x598440 == 0) {\n            *puVar19 = uVar8;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x48aa59;\n            uVar8 = fcn.0045cfe0(uVar27, uVar9, piVar22, iVar13);\n        }\n        piVar22 = *(*0x20 + -0x78);\n        uVar27 = uVar6;\n    }\n    puVar19[1] = uVar27 + 1;\n    *(uVar8 + uVar27) = 0x7b;\n    iVar11 = 0;\n    while( true ) {\n        *(*0x20 + -0x130) = iVar11;\n        *(*0x20 + -0x1e8) = 0x48b529;\n        iVar11 = fcn.00474ba0(*(*0x20 + -0xe0));\n        if (iVar11 <= *(*0x20 + -0x130)) break;\n        if (0 < *(*0x20 + -0x130)) {\n            piVar22 = *(*0x20 + 8);\n            uVar9 = piVar22[1];\n            uVar27 = uVar9 + 2;\n            iVar11 = *piVar22;\n            uVar6 = uVar9;\n            uVar8 = piVar22[2];\n            if (piVar22[2] < uVar27) {\n                *(*0x20 + -0xe8) = uVar9;\n                *(*0x20 + -0xf0) = uVar27;\n                *(*0x20 + -0x1e8) = 0x48b585;\n                iVar11 = fcn.00444ac0(uVar9);\n                piVar22 = *(*0x20 + 8);\n                uVar27 = *(*0x20 + -0xf0);\n                uVar6 = *(*0x20 + -0xe8);\n                uVar8 = uVar9;\n            }\n            *(iVar11 + uVar6) = 0x202c;\n            piVar22[1] = uVar27;\n            piVar22[2] = uVar8;\n            if (*0x598440 == 0) {\n                *piVar22 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48b5d5;\n                fcn.0045d120(uVar6, piVar22, uVar8, iVar13);\n            }\n        }\n        uVar4 = *(*0x20 + -0x78);\n        *(*0x20 + -0x1e8) = 0x48b4cc;\n        fcn.00474860(*(*0x20 + -0xe0));\n        *(*0x20 + -0x1e8) = 0x48b4f5;\n        fcn.00489ee0(uVar4, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n        iVar11 = *(*0x20 + -0x130) + 1;\n        piVar22 = *(*0x20 + -0x78);\n    }\n    piVar21 = *(*0x20 + 8);\n    iVar11 = piVar21[1];\n    iVar14 = *piVar21;\n    piVar23 = piVar21;\n    iVar12 = iVar14;\n    if (piVar21[2] < iVar11 + 1U) {\n        *(*0x20 + -0x1e8) = 0x48b606;\n        iVar12 = fcn.00444ac0(iVar11);\n        piVar23 = *(*0x20 + 8);\n        piVar23[2] = iVar11;\n        if (*0x598440 == 0) {\n            *piVar23 = iVar12;\n            iVar11 = iVar14;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x48b627;\n            iVar12 = fcn.0045cfe0(iVar11, piVar21, piVar22, iVar13);\n            iVar11 = iVar14;\n        }\n    }\n    piVar23[1] = iVar11 + 1;\n    *(iVar12 + iVar11) = 0x7d;\n    return;\n}\n",
        "token_count": 15945
    },
    "0048bd20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0048bd20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t *noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX <= unaff_RDI) {\n                return 0;\n            }\n            if (unaff_RDI < unaff_RBX) {\n                iVar1 = *(in_RAX + unaff_RDI * 0x10);\n                noname_2 = *(in_RAX + 8 + unaff_RDI * 0x10);\n                if (iVar1 == 0x4954a0) {\n                    uVar4 = *noname_2;\n                }\n                else {\n                    uVar4 = 0;\n                    if (iVar1 == 0) {\n                        noname_2 = NULL;\n                        uVar5 = 0;\n                    }\n                    else {\n                        puVar2 = *0x5443e0;\n                        if ((*0x5443d0 != '\\0') && (*0x5443d8 = iVar1,  puVar2 = noname_2,  *0x598440 != 0)) {\n                            *(*0x20 + -0x30) = 0x48bdba;\n                            fcn.0045d160(arg1, unaff_RDI, noname_2, 0x4954a0);\n                            puVar2 = *0x5443e0;\n                        }\n                        *0x5443e0 = puVar2;\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x10) = noname_2;\n                        if (*(*0x20 + -0x18) == 0) {\n                            uVar5 = 0;\n                            noname_2 = NULL;\n                        }\n                        else {\n                            uVar5 = *(*(*0x20 + -0x18) + 0x17) & 0x1f;\n                        }\n                    }\n                    if (uVar5 - 2 < 5) {\n                        if (uVar5 < 4) {\n                            if (uVar5 == 2) {\n                                uVar4 = *noname_2;\n                            }\n                            else {\n                                uVar4 = *noname_2;\n                            }\n                        }\n                        else if (uVar5 == 4) {\n                            uVar4 = *noname_2;\n                        }\n                        else if (uVar5 == 5) {\n                            uVar4 = *noname_2;\n                        }\n                        else {\n                            uVar4 = *noname_2;\n                        }\n                    }\n                    else if (uVar5 - 7 < 6) {\n                        if (uVar5 < 10) {\n                            if (uVar5 == 7) {\n                                uVar5 = *noname_2;\n                            }\n                            else if (uVar5 == 8) {\n                                uVar5 = *noname_2;\n                            }\n                            else {\n                                uVar5 = *noname_2;\n                            }\n                        }\n                        else if (uVar5 == 10) {\n                            uVar5 = *noname_2;\n                        }\n                        else if (uVar5 == 0xb) {\n                            uVar5 = *noname_2;\n                        }\n                        else {\n                            uVar5 = *noname_2;\n                        }\n                        if (-1 < uVar5) {\n                            uVar4 = uVar5;\n                        }\n                    }\n                }\n                if (2000000 < uVar4 + 1000000) {\n                    uVar4 = 0;\n                }\n                return uVar4;\n            }\n            *(*0x20 + -0x30) = 0x48bef4;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045d480(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x48bf0e;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1173
    },
    "0048bf40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0048bf40(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 3) {\n        return 0;\n    }\n    iVar3 = 1;\n    while( true ) {\n        if (unaff_RBX <= iVar3) {\n            return 0;\n        }\n        if (*(in_RAX + iVar3) == ']') break;\n        iVar3 = iVar3 + 1;\n    }\n    if (iVar3 < 2) {\n        bVar2 = false;\n        iVar5 = 0;\n        iVar4 = iVar3;\n    }\n    else {\n        bVar2 = false;\n        iVar5 = 0;\n        for (iVar4 = 1; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            uVar1 = *(in_RAX + iVar4);\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n            if (2000000 < iVar5 + 1000000U) {\n                bVar2 = false;\n                iVar5 = 0;\n                iVar4 = iVar3;\n                break;\n            }\n            iVar5 = (uVar1 - 0x30 & 0xff) + iVar5 * 10;\n            bVar2 = true;\n        }\n    }\n    if ((bVar2) && (iVar4 == iVar3)) {\n        return iVar5 + -1;\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "00401720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401acc)\n\nvoid fcn.00401720(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong arg1;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040c140();\n    iVar2 = fcn.0045d93c();\n    if (*0x598440 == 0) {\n        *(iVar2 + 0x10) = 0x598a21;\n        *(iVar2 + 0x30) = 0x598a20;\n        *(iVar2 + 0x50) = 0x598a22;\n        *(iVar2 + 0x70) = 0x598a23;\n        *(iVar2 + 0x90) = 0x598a24;\n        *(iVar2 + 0xb0) = 0x598a25;\n        *(iVar2 + 0xd0) = 0x598a26;\n        *(iVar2 + 0xf0) = 0x598a27;\n        *(iVar2 + 0x110) = 0x598a29;\n        *(iVar2 + 0x130) = 0x598a2a;\n        *(iVar2 + 0x150) = 0x598a2c;\n        *(iVar2 + 0x170) = 0x598a2e;\n        *(iVar2 + 400) = 0x598a2f;\n        *(iVar2 + 0x1b0) = 0x598a2d;\n        arg1 = 0x598a2b;\n        *(iVar2 + 0x1d0) = 0x598a2b;\n    }\n    else {\n        fcn.0045d0e0(0x598a21);\n        fcn.0045d0e0(0x598a20);\n        fcn.0045d0e0(0x598a22);\n        fcn.0045d0e0(0x598a23);\n        fcn.0045d0e0(0x598a24);\n        fcn.0045d0e0(0x598a25);\n        fcn.0045d0e0(0x598a26);\n        fcn.0045d0e0(0x598a27);\n        fcn.0045d0e0(0x598a29);\n        fcn.0045d0e0(0x598a2a);\n        fcn.0045d0e0(0x598a2c);\n        fcn.0045d0e0(0x598a2e);\n        fcn.0045d0e0(0x598a2f);\n        fcn.0045d0e0(0x598a2d);\n        arg1 = 0x598a2b;\n        iVar2 = fcn.0045d0e0();\n    }\n    *0x544398 = 0xf;\n    *0x5443a0 = 0xf;\n    if (*0x598440 != 0) {\n        fcn.0045cfe0(arg1, param_2, param_3, param_4);\n        iVar2 = *0x544390;\n    }\n    *0x544390 = iVar2;\n    fcn.00401ba0(arg1, param_2);\n    if (uStack40 != 0) {\n        fcn.00401ba0(arg1, param_2);\n        *0x5981dc = uStack40;\n        fcn.00401ba0(arg1, param_2);\n        *0x598a2b = (uStack28 >> 0x1a & 1) != 0;\n        *0x598a2c = (uStack32 & 1) != 0;\n        *0x598a29 = (uStack32 >> 1 & 1) != 0;\n        *0x598a2d = (uStack32 >> 9 & 1) != 0;\n        *0x598a2e = (uStack32 >> 0x13 & 1) != 0;\n        *0x598a2f = (uStack32 >> 0x14 & 1) != 0;\n        *0x598a2a = (uStack32 >> 0x17 & 1) != 0;\n        *0x598a20 = (uStack32 >> 0x19 & 1) != 0;\n        *0x598a28 = (uStack32 >> 0x1b & 1) != 0;\n        uVar1 = uStack28 & 0xffffff00 | *0x598a28;\n        uVar3 = (param_2 & 0xffffff00 | (uStack32 >> 0xc & 1) != 0) & uVar1;\n        arg2 = uVar3;\n        *0x598a27 = uVar3;\n        if ((uStack32 >> 0x1b & 1) != 0) {\n            fcn.00401bc0(uVar1, arg2);\n        }\n        *0x598a22 = 0;\n        if (uStack40 < 7) {\n            *0x598a22 = 0;\n            return;\n        }\n        fcn.00401ba0(0, arg2);\n        *0x598a21 = (uStack36 >> 0x13 & 1) != 0;\n        *0x598a23 = 0;\n        *0x598a24 = (uStack36 >> 3 & 1) != 0;\n        *0x598a25 = (uStack36 >> 8 & 1) != 0;\n        *0x598a26 = (uStack36 >> 9 & 1) != 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1424
    },
    "00402020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00402020(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x00401f0b;\n        }\n        if (0x3f < uVar5) {\n            if (*0x598a23 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x00401e5d;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x00401e4b;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x00401e5d;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x00401e5d;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x00401e4b;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x00401e5d;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x00401e5d;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x00401e96;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x00401e96:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x00401f0b:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x00401e4b:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x00401e5d:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7687
    },
    "00402180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00402180(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x598a23 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4145
    },
    "004022e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004022e0(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x598a23 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x004022c3;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x004022c3:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "004026e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004026e0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return unaff_RBX;\n            }\n            iVar1 = *(*in_RAX + 8);\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x402736;\n                    iVar1 = fcn.00402920(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x40276a;\n                iVar1 = fcn.00402920(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x402797;\n            fcn.00454320();\n            *(*0x20 + -0x38) = 0x4027b0;\n            fcn.00448440(0x18);\n            *(*0x20 + -0x38) = 0x4027b5;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0x38) = 0x4027c5;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4027d5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 586
    },
    "00402800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00402800(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                return unaff_RBX;\n            }\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x402852;\n                    iVar1 = fcn.00402920(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x402886;\n                iVar1 = fcn.00402920(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x4028b3;\n            fcn.00454320();\n            *(*0x20 + -0x38) = 0x4028cc;\n            fcn.00448440(0x18);\n            *(*0x20 + -0x38) = 0x4028d1;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0x38) = 0x4028e5;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4028f5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00402920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00402920(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*(in_RAX + 0x14) & 8) != 0) {\n        iVar1 = *in_RAX;\n        if (iVar1 == 4) {\n            uVar3 = fcn.0045cee0();\n            return uVar3;\n        }\n        if (iVar1 == 8) {\n            uVar3 = fcn.0045cf20();\n            return uVar3;\n        }\n        uVar3 = fcn.0045cea0(iVar1);\n        return uVar3;\n    }\n    uVar5 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar5 < 0x11) {\n        if (0xe < uVar5) {\n            if (uVar5 == 0xf) {\n                uVar3 = fcn.00402620();\n                return uVar3;\n            }\n            uVar3 = fcn.00402680();\n            return uVar3;\n        }\n        if (uVar5 == 0xd) {\n            uVar3 = fcn.00402420();\n            return uVar3;\n        }\n        if (uVar5 == 0xe) {\n            uVar3 = fcn.00402520();\n            return uVar3;\n        }\n    }\n    else if (uVar5 < 0x15) {\n        if (uVar5 == 0x11) {\n            for (uVar6 = 0; uVar6 <= in_RAX[8] && in_RAX[8] != uVar6; uVar6 = uVar6 + 1) {\n                arg1 = fcn.00402920(arg1);\n            }\n            return arg1;\n        }\n        if (uVar5 == 0x14) {\n            if (in_RAX[8] == 0) {\n                uVar3 = fcn.00402800();\n                return uVar3;\n            }\n            uVar3 = fcn.004026e0();\n            return uVar3;\n        }\n    }\n    else {\n        if (uVar5 == 0x18) {\n            uVar3 = fcn.0045cec0();\n            return uVar3;\n        }\n        if (uVar5 == 0x19) {\n            iVar1 = in_RAX[8];\n            puVar7 = in_RAX[7];\n            if (iVar1 < 1) {\n                return arg1;\n            }\n            iVar4 = 0;\n            while( true ) {\n                cVar2 = fcn.00455080(arg1, *puVar7, in_R8);\n                if (cVar2 == '\\0') {\n                    arg1 = fcn.00402920(arg1);\n                }\n                iVar4 = iVar4 + 1;\n                if (iVar1 <= iVar4) break;\n                puVar7 = puVar7 + 3;\n            }\n            return arg1;\n        }\n    }\n    fcn.00454320();\n    uVar3 = 0x18;\n    fcn.00448440(0x18);\n    fcn.00409a20();\n    fcn.004327c0();\n    return uVar3;\n}\n",
        "token_count": 828
    },
    "00403080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (((*0x598a20 != '\\0') && (*0x598a2d != '\\0')) && (*0x598a2e != '\\0')) {\n        *0x5981d3 = 1;\n        fcn.0042e020(0x80);\n        return;\n    }\n    fcn.0042e020(0x20);\n    *0x598480 = *0x598480 | 1;\n    *0x598488 = *0x598488 | 1;\n    *0x598490 = *0x598490 | 1;\n    *0x598498 = *0x598498 | 1;\n    return;\n}\n",
        "token_count": 217
    },
    "004031a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004031a0(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x598440 != '\\0') {\n        fcn.00403140();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 64
    },
    "004034e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004034e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uchar uStack131;\n    uint8_t uStack130;\n    uint8_t uStack129;\n    uint64_t uStack128;\n    uint64_t uStack120;\n    uchar auStack112 [8];\n    uint64_t uStack104;\n    int64_t iStack96;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    ulong uStack40;\n    code **ppcStack32;\n    code **ppcStack24;\n    ulong uStack16;\n    \n    while (auStack72 < *(unaff_R14 + 0x10) || auStack72 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    ppcStack24 = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n    uStack16 = 0x4b0478;\n    uStack129 = 1;\n    if ((*(*(unaff_R14 + 0x30) + 0xf8) != '\\0') || (*0x5981f4 != 0)) {\n        *(*(unaff_R14 + 0x30) + 0xf8) = 0;\n        fcn.0045ac40();\n    }\n    if (arg1 == 0) {\n        uStack130 = 1;\n    }\n    else {\n        arg1_00 = *(unaff_R14 + 0x158);\n        uVar3 = arg1_00 + 1;\n        iVar1 = *(unaff_R14 + 0x150);\n        uVar4 = *(unaff_R14 + 0x160);\n        iVar2 = iVar1;\n        if (*(unaff_R14 + 0x160) < uVar3) {\n            uStack104 = arg1_00;\n            iVar2 = fcn.00444ac0(arg1_00);\n            uVar3 = iVar1 + 1;\n            uVar4 = arg1_00;\n            arg1_00 = uStack104;\n        }\n        *(iVar2 + arg1_00 * 8) = arg1;\n        if (uVar3 == 0) {\n            fcn.0045d480(0);\n            fcn.00431660();\n            return;\n        }\n        if (*0x598440 != '\\0') {\n            uStack128 = uVar3;\n            uStack120 = uVar4;\n            iStack96 = iVar2;\n            fcn.00403140();\n            uVar3 = uStack128;\n            uVar4 = uStack120;\n            iVar2 = iStack96;\n        }\n        *(unaff_R14 + 0x150) = iVar2;\n        *(unaff_R14 + 0x160) = uVar4;\n        *(unaff_R14 + 0x158) = uVar3;\n        auStack56 = CONCAT88(unaff_R14, 0x4038a0);\n        uStack40 = 0x4b01c0;\n        ppcStack24 = auStack56;\n        uStack129 = 3;\n        uStack130 = 3;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0x108) == 0) {\n        fcn.00405360();\n    }\n    uStack131 = 1;\n    auStack72 = CONCAT88(&uStack131, 0x403840);\n    ppcStack32 = auStack72;\n    uStack130 = uStack130 | 4;\n    uStack129 = uStack130;\n    (*in_RAX)(uStack130, auStack112);\n    uStack131 = 0;\n    if ((uStack130 & 4) != 0) {\n        uStack130 = uStack130 & 0xfb;\n        uStack129 = uStack130;\n        (**ppcStack32)();\n    }\n    if ((uStack130 & 2) != 0) {\n        uStack130 = uStack130 & 0xfd;\n        uStack129 = uStack130;\n        (**ppcStack24)();\n    }\n    if ((uStack130 & 1) != 0) {\n        uStack129 = uStack130 & 0xfe;\n        fcn.0043e580();\n    }\n    return;\n}\n",
        "token_count": 1010
    },
    "00403900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403900(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    char *in_RAX;\n    int64_t unaff_R14;\n    \n    if (*in_RAX != '\\0') {\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(unaff_R14 + 0x30);\n        *(*piVar3 + 0x38) = **(*piVar3 + 0x38);\n        if (0 < *(piVar3 + 0x21)) {\n            *(piVar3 + 0x1d) = 0;\n            *(piVar3 + 0x21) = *(piVar3 + 0x21) + -1;\n            *(piVar3 + 0x6a) = 0;\n        }\n        iVar2 = *(piVar3 + 0x1b);\n        *(piVar3 + 0x1b) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00403a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403a60(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00403980();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00403980();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x598340;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.0045ac40();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00403c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403c20(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403980();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403980();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00403d80(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00403cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403cc0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403980();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403980();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00403d80(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00404440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404440(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t arg1;\n    ulong uVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar4 = *puVar1;\n            if (uVar4 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar3 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n                    uVar4 = SUB168(auVar3, 0);\n                    if (((SUB168(auVar3 >> 0x40, 0) == 0) && (uVar4 < 0xffffffffffa1)) && (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 == 0) {\n                            *(*0x20 + -0x40) = 0x40455d;\n                            arg1 = fcn.0040b760(1);\n                            if (*0x598440 == 0) {\n                                *(arg1 + 0x10) = arg1 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x40457a;\n                                arg1 = fcn.0045d0e0(arg1 + 0x10);\n                            }\n                        }\n                        else {\n                            arg2 = *(*0x20 + -0x18);\n                            if (*(arg2 + 8) == 0) {\n                                uVar5 = 1;\n                                *(*0x20 + -0x40) = 0x4044d3;\n                                arg1 = fcn.0040b760();\n                                if (*0x598440 == 0) {\n                                    *(arg1 + 0x10) = arg1 + 0x60;\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = 0x4044f4;\n                                    arg1 = fcn.0045d100(uVar5, arg1 + 0x60, param_3, param_4);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = uVar4;\n                                *(*0x20 + -0x40) = 0x40450a;\n                                uVar5 = fcn.0040c140();\n                                *(*0x20 + -0x10) = uVar5;\n                                *(*0x20 + -0x40) = 0x404525;\n                                uVar5 = fcn.0040b760(1);\n                                if (*0x598440 == 0) {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(arg1 + 0x10) = uVar5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(*0x20 + -0x40) = 0x404547;\n                                    fcn.0045cfe0(arg1, arg2, param_3, param_4);\n                                }\n                            }\n                        }\n                        puVar2 = *(*0x20 + -0x18);\n                        *(arg1 + 0x18) = *puVar2;\n                        if (*0x598440 == 0) {\n                            *(arg1 + 0x20) = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40459e;\n                            arg1 = fcn.0045d0e0();\n                        }\n                        *(arg1 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x4045c5;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x40) = 0x4045d6;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x4045e7;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4045f7;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1214
    },
    "00404660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404660(uint64_t *param_1, uint64_t param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    uint64_t arg4;\n    uint64_t arg4_00;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                puVar3 = 0x4;\n                *(*0x20 + -0x88) = 0x404765;\n                fcn.00435860();\n                *(*0x20 + -0x88) = 0x404776;\n                fcn.00432f60();\n                param_1 = puVar3;\ncode_r0x00404779:\n                do {\n                    piVar9 = puVar3[7];\n                    if (piVar9 == NULL) {\n                        piVar9 = NULL;\n                        break;\n                    }\n                    puVar6 = puVar3 + 7;\n                    uVar7 = piVar9[1];\n                    if (uVar7 == 0) {\n                        if (*0x598440 == 0) {\n                            *(puVar3 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar8 = 0;\n                            *(*0x20 + -0x88) = 0x4047f7;\n                            fcn.0045d160(param_1, piVar9, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404805;\n                            puVar3 = fcn.0045d160(param_1, piVar9, uVar8, param_4);\n                        }\n                    }\n                    else if (*0x598440 == 0) {\n                        *(uVar7 + 0x10) = 0;\n                        puVar3[7] = uVar7;\n                        piVar9[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar7 + 0x10;\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x4047c9;\n                        fcn.0045d100(puVar6, 0, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x4047d1;\n                        fcn.0045d160(puVar6, uVar8, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x4047da;\n                        puVar3 = fcn.0045d100(puVar6, uVar8, uVar7, iVar4);\n                    }\n                    if (*(piVar9 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar9;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar13 = *piVar1 == 0;\n                        if (bVar13) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar13) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = puVar3;\n                } while (param_3 != '\\0');\n                if (piVar9 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x404cc0;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x88) = 0x404c05;\n                    fcn.00404d00(*(*0x20 + 0x10));\n                    return 1;\n                }\n                if (*puVar3 <= puVar3[1] && puVar3[1] != *puVar3) {\n                    *(*0x20 + -0x88) = 0x404b89;\n                    fcn.00410c20(*(*0x20 + 0x10));\n                    piVar9 = *(*0x20 + 8);\n                    iVar4 = piVar9[5];\n                    piVar9[5] = iVar4 + 1;\n                    if (piVar9[1] == iVar4 + 1) {\n                        piVar9[5] = 0;\n                    }\n                    *piVar9 = *piVar9 + 1;\n                    *(*0x20 + -0x88) = 0x404bbd;\n                    fcn.0040a2a0();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == '\\0') {\n                    *(*0x20 + -0x88) = 0x404885;\n                    fcn.0040a2a0();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x40489b;\n                puVar3 = fcn.00435a80();\n                puVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    puVar3[5] = 0xffffffffffffffff;\n                }\n                if (*0x598440 == 0) {\n                    uVar7 = *(*0x20 + 0x10);\n                    puVar3[3] = uVar7;\n                    puVar3[8] = 0;\n                    param_3 = *(*0x20 + -0x38);\n                    *puVar3 = param_3;\n                }\n                else {\n                    uVar7 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x4048ed;\n                    fcn.0045d100(iVar4, uVar7, param_3, param_4);\n                    uVar8 = 0;\n                    *(*0x20 + -0x88) = 0x4048f9;\n                    fcn.0045d160(iVar4, uVar7, 0, param_4);\n                    param_3 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404906;\n                    puVar3 = fcn.0045d180(iVar4, uVar7, uVar8);\n                }\n                *(puVar3 + 0x34) = 0;\n                puVar6 = puVar3 + 10;\n                if (*0x598440 == 0) {\n                    arg4 = *(*0x20 + 8);\n                    puVar3[10] = arg4;\n                }\n                else {\n                    arg4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x404935;\n                    puVar3 = fcn.0045d180(iVar4, uVar7, param_3);\n                }\n                iVar11 = param_3 + 0x148;\n                iVar12 = param_3 + 0x88;\n                if (*0x598440 == 0) {\n                    *(param_3 + 0x148) = puVar3;\n                    *(param_3 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x40496e;\n                    fcn.0045cfe0(iVar4, uVar7, param_3, arg4);\n                    *(*0x20 + -0x88) = 0x40497b;\n                    puVar3 = fcn.0045d100(iVar4, 0, param_3, arg4);\n                }\n                if (*0x598440 == 0) {\n                    puVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4049a9;\n                    puVar3 = fcn.0045d100(iVar4, 0, param_3, arg4);\n                }\n                *(*0x20 + -0x48) = puVar3;\n                *(*0x20 + -0x20) = puVar6;\n                *(*0x20 + -0x28) = iVar11;\n                *(*0x20 + -0x30) = iVar12;\n                arg4_00 = *(arg4 + 0x50);\n                if (arg4_00 == 0) {\n                    if (*0x598440 == 0) {\n                        puVar3[2] = 0;\n                        *(arg4 + 0x48) = puVar3;\n                        *(arg4 + 0x50) = puVar3;\n                    }\n                    else {\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x404a45;\n                        fcn.0045d100(iVar4, 0, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404a4e;\n                        fcn.0045cfe0(iVar4, uVar8, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x404a56;\n                        fcn.0045cfe0(iVar4, uVar8, param_3, arg4);\n                    }\n                }\n                else if (*0x598440 == 0) {\n                    puVar3[2] = arg4_00;\n                    *(arg4_00 + 8) = puVar3;\n                    *(arg4 + 0x50) = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4049fc;\n                    fcn.0045d180(iVar4, uVar7, param_3);\n                    *(*0x20 + -0x88) = 0x404a05;\n                    fcn.0045cfe0(iVar4, uVar7, param_3, arg4_00);\n                    *(*0x20 + -0x88) = 0x404a0d;\n                    fcn.0045cfe0(iVar4, uVar7, param_3, arg4_00);\n                }\n                uVar2 = *(param_3 + 0xb9);\n                *(param_3 + 0xb9) = 1;\n                param_4 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x404a8c;\n                fcn.00435860();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x598440 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x404acf;\n                        iVar4 = fcn.0045d0e0();\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar7 = *(iVar4 + 0x35);\n                    if (*0x598440 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x404afc;\n                        iVar4 = fcn.0045d100(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar7;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x404b1e;\n                        fcn.00429de0();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar7 = *(*0x20 + -0x51);\n                    }\n                    if (*0x598440 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x404b47;\n                        fcn.0045d100(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x404b4c;\n                    fcn.00435d80();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x404c33;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x88) = 0x404c46;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x88) = 0x404c57;\n                fcn.00432f60();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar7 = in_RAX[1];\n                    if (uVar7 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar7 & 0xffffffffffffff00 | *in_RAX == uVar7;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x598288 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4046e7;\n                    fcn.0045ce80(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404725;\n                fcn.0040a080();\n                puVar3 = *(*0x20 + 8);\n                if (*(puVar3 + 0x1c) == 0) goto code_r0x00404779;\n            }\n            *(*0x20 + -0x88) = 0x404c65;\n            fcn.0040a2a0();\n            unaff_RBX = 0x4c7f08;\n            *(*0x20 + -0x88) = 0x404c78;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x404c91;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3998
    },
    "00404d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404d00(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    code **unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack40;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00404e40(arg1);\n        if (*0x598440 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            piVar2 = fcn.0045d0e0(0);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x598440 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045d0e0();\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045ce80(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.004359a0(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 387
    },
    "00404f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404f40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    ulong arg3;\n    int64_t unaff_R14;\n    bool bVar5;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x404f85;\n                fcn.0040a080();\n                iVar1 = *(*0x20 + 8);\n                if (*(iVar1 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x405309;\n                fcn.0040a2a0();\n                *(*0x20 + -0x40) = 0x40531c;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x40) = 0x40532f;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40533a;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n    *(iVar1 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x0040508c:\n    piVar2 = *(iVar1 + 0x38);\n    if (piVar2 != NULL) goto code_r0x00405099;\n    piVar2 = NULL;\n    goto code_r0x00404fcd;\ncode_r0x00405099:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x598440 == 0) {\n            *(iVar1 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405105;\n            fcn.0045d140(iVar1, piVar2, param_3, param_4);\n            *(*0x20 + -0x40) = 0x40510e;\n            fcn.0045d140(iVar1, piVar2, param_3, param_4);\n        }\n    }\n    else if (*0x598440 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x38) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        iVar4 = iVar4 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x4050d7;\n        fcn.0045d180(iVar1, piVar2, iVar4);\n        *(*0x20 + -0x40) = 0x4050df;\n        fcn.0045d140(iVar1, piVar2, iVar4, param_4);\n        *(*0x20 + -0x40) = 0x4050e8;\n        fcn.0045d180(iVar1, piVar2, iVar4);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = 1;\n        }\n        bVar5 = !bVar5;\n    }\n    param_3 = 1;\n    if (!bVar5) {\ncode_r0x00404fcd:\n        arg3 = 1;\n        if (piVar2 != NULL) {\n            *(*0x20 + -0x20) = piVar2;\n            if (piVar2[3] != 0) {\n                *(*0x20 + -0x40) = 0x404fee;\n                fcn.00410ec0();\n                if (*0x598440 == 0) {\n                    *(*(*0x20 + -0x20) + 0x18) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x405016;\n                    fcn.0045d100(*(*0x20 + -0x20), 0, arg3, param_4);\n                }\n                iVar1 = *(*0x20 + 8);\n                piVar2 = *(*0x20 + -0x20);\n            }\n            if (piVar2[5] != 0) {\n                *(*0x20 + -0x40) = 0x405032;\n                fcn.0045ce80(iVar1, piVar2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                piVar2 = *(*0x20 + -0x20);\n                piVar2[5] = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + 8);\n            }\n            param_3 = 1;\n            iVar4 = *piVar2;\n            if (*0x598440 == 0) {\n                *(iVar4 + 0x88) = piVar2;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x405087;\n                fcn.0045d100(iVar1, piVar2, 1, param_4);\n            }\n            *(piVar2 + 0x35) = 0;\n            *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = iVar4;\n            goto code_r0x0040508c;\n        }\n        goto code_r0x004051ff;\n    }\n    goto code_r0x0040508c;\ncode_r0x004051ff:\n    piVar2 = *(iVar1 + 0x48);\n    if (piVar2 != NULL) goto code_r0x0040520c;\n    piVar2 = NULL;\n    goto code_r0x0040516c;\ncode_r0x0040520c:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x598440 == 0) {\n            *(iVar1 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405274;\n            fcn.0045d120(iVar1, piVar2, arg3, param_4);\n            *(*0x20 + -0x40) = 0x40527d;\n            fcn.0045d120(iVar1, piVar2, arg3, param_4);\n        }\n    }\n    else if (*0x598440 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x48) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x40524a;\n        fcn.0045d180(iVar1, piVar2, arg3);\n        *(*0x20 + -0x40) = 0x405252;\n        fcn.0045d120(iVar1, piVar2, arg3, param_4);\n        *(*0x20 + -0x40) = 0x40525b;\n        fcn.0045d180(iVar1, piVar2, arg3);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = arg3;\n        }\n        bVar5 = !bVar5;\n    }\n    if (!bVar5) {\ncode_r0x0040516c:\n        if (piVar2 == NULL) {\n            *(*0x20 + -0x40) = 0x4052b9;\n            fcn.0040a2a0();\n            while (iVar1 = *(*0x20 + -0x28),  iVar1 != 0) {\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x28) = *(iVar1 + 0xa0);\n                }\n                *(iVar1 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x4052d0;\n                fcn.004359a0();\n            }\n            return;\n        }\n        if (*0x598440 == 0) {\n            piVar2[3] = 0;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405193;\n            fcn.0045d120(iVar1, piVar2, arg3, param_4);\n        }\n        if (piVar2[5] != 0) {\n            *(*0x20 + -0x18) = piVar2;\n            *(*0x20 + -0x40) = 0x4051a5;\n            fcn.0045ce80(iVar1, piVar2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar2 = *(*0x20 + -0x18);\n            piVar2[5] = *(*0x20 + -0x38);\n            arg3 = 1;\n            iVar1 = *(*0x20 + 8);\n        }\n        iVar4 = *piVar2;\n        if (*0x598440 == 0) {\n            *(iVar4 + 0x88) = piVar2;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x4051fa;\n            fcn.0045d100(iVar1, piVar2, arg3, param_4);\n        }\n        *(piVar2 + 0x35) = 0;\n        *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = iVar4;\n    }\n    goto code_r0x004051ff;\n}\n",
        "token_count": 2635
    },
    "004053a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004053a0(uint64_t param_1, uint64_t param_2, uint8_t *param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg2;\n    int64_t arg2_00;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                piVar3 = 0x3;\n                *(*0x20 + -0x90) = 0x405546;\n                fcn.00435860();\n                *(*0x20 + -0x90) = 0x405557;\n                fcn.00432f60();\n                piVar4 = piVar3;\n            }\n            else {\n                if (cVar5 == '\\0') {\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                }\n                if (uVar6 != '\\0') {\n                    if (*(in_RAX + 0x1c) == 0) {\n                        return 0;\n                    }\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n                    }\n                    if (uVar6 != '\\0') {\n                        if (unaff_RBX != 0) {\n                            *(*0x20 + -0x90) = 0x40542e;\n                            fcn.00410ec0();\n                        }\n                        return 1;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x598288 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405485;\n                    fcn.0045ce80(param_1, uVar6);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar7 = *(*0x20 + -0x88);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x58) = uVar7;\n                piVar4 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = piVar4;\n                *(*0x20 + -0x90) = 0x4054bf;\n                fcn.0040a080();\n                piVar3 = *(*0x20 + 8);\n                if ((*(piVar3 + 0x1c) != 0) && (*piVar3 == 0)) {\n                    *(*0x20 + -0x90) = 0x4054df;\n                    fcn.0040a2a0();\n                    if (*(*0x20 + 0x10) != 0) {\n                        *(*0x20 + -0x90) = 0x4054fd;\n                        fcn.00410ec0();\n                    }\n                    return 1;\n                }\n            }\n            do {\n                arg2 = piVar3[9];\n                if (arg2 == NULL) {\n                    arg2 = NULL;\n                    break;\n                }\n                arg1 = piVar3 + 9;\n                iVar8 = arg2[1];\n                if (iVar8 == 0) {\n                    if (*0x598440 == 0) {\n                        *(piVar3 + 9) =\n                             CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x90) = 0x4055d7;\n                        fcn.0045d160(piVar4, arg2, 0, param_4);\n                        *(*0x20 + -0x90) = 0x4055e5;\n                        piVar3 = fcn.0045d160(piVar4, arg2, uVar7, param_4);\n                    }\n                }\n                else if (*0x598440 == 0) {\n                    *(iVar8 + 0x10) = 0;\n                    piVar3[9] = iVar8;\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar10 = iVar8 + 0x10;\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4055a9;\n                    fcn.0045d100(arg1, 0, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x4055b1;\n                    fcn.0045d160(arg1, uVar7, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x4055ba;\n                    piVar3 = fcn.0045d100(arg1, uVar7, iVar8, iVar10);\n                }\n                if (*(arg2 + 0x34) == '\\0') {\n                    param_3 = NULL;\n                }\n                else {\n                    iVar8 = *arg2;\n                    LOCK();\n                    piVar1 = iVar8 + 0x178;\n                    bVar11 = *piVar1 == 0;\n                    if (bVar11) {\n                        *piVar1 = 1;\n                    }\n                    param_3 = (iVar8 & 0xffffff00 | bVar11) ^ 1;\n                }\n                param_4 = 1;\n                piVar4 = piVar3;\n            } while (param_3 != '\\0');\n            if (arg2 != NULL) {\n                *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x18) = 0x405a80;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x90) = 0x405a13;\n                fcn.00405ac0(*(*0x20 + 0x10));\n                return 1;\n            }\n            if (*piVar3 != 0) {\n                iVar8 = piVar3[6] * *(piVar3 + 3) + piVar3[2];\n                if (*(*0x20 + 0x10) != 0) {\n                    *(*0x20 + -0x50) = iVar8;\n                    *(*0x20 + -0x90) = 0x40567c;\n                    fcn.00410c20(iVar8);\n                }\n                *(*0x20 + -0x90) = 0x405692;\n                fcn.00410ec0();\n                piVar4 = *(*0x20 + 8);\n                iVar8 = piVar4[6];\n                piVar4[6] = iVar8 + 1;\n                if (piVar4[1] == iVar8 + 1) {\n                    piVar4[6] = 0;\n                }\n                *piVar4 = *piVar4 + -1;\n                *(*0x20 + -0x90) = 0x4056c5;\n                fcn.0040a2a0();\n                return 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                *(*0x20 + -0x90) = 0x4056f4;\n                fcn.0040a2a0();\n                return 0;\n            }\n            *(*0x20 + -0x38) = unaff_R14;\n            *(*0x20 + -0x90) = 0x405712;\n            piVar4 = fcn.00435a80();\n            piVar4[5] = 0;\n            iVar8 = *(*0x20 + -0x58);\n            if (iVar8 != 0) {\n                piVar4[5] = -1;\n            }\n            if (*0x598440 == 0) {\n                piVar4[3] = *(*0x20 + 0x10);\n                piVar4[8] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40575d;\n                fcn.0045d100(iVar8, *(*0x20 + 0x10), param_3, param_4);\n                *(*0x20 + -0x90) = 0x405768;\n                piVar4 = fcn.0045d100(iVar8, 0, param_3, param_4);\n            }\n            arg2_00 = *(*0x20 + -0x38);\n            iVar10 = arg2_00 + 0x148;\n            if (*0x598440 == 0) {\n                *(arg2_00 + 0x148) = piVar4;\n                *piVar4 = arg2_00;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405790;\n                fcn.0045cfe0(iVar8, arg2_00, param_3, param_4);\n                *(*0x20 + -0x90) = 0x40579b;\n                piVar4 = fcn.0045d100(iVar8, arg2_00, param_3, param_4);\n            }\n            *(piVar4 + 0x34) = 0;\n            piVar3 = piVar4 + 10;\n            arg4 = arg2_00 + 0x88;\n            if (*0x598440 == 0) {\n                noname_1 = *(*0x20 + 8);\n                piVar4[10] = noname_1;\n                *(arg2_00 + 0x88) = 0;\n            }\n            else {\n                noname_1 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x4057e5;\n                fcn.0045d100(iVar8, noname_1, piVar3, arg4);\n                *(*0x20 + -0x90) = 0x4057f3;\n                piVar4 = fcn.0045d160(iVar8, noname_1, 0, arg4);\n            }\n            if (*0x598440 == 0) {\n                piVar4[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x405828;\n                piVar4 = fcn.0045d160(iVar8, arg2_00, 0, arg4);\n            }\n            *(*0x20 + -0x48) = piVar4;\n            *(*0x20 + -0x20) = iVar10;\n            *(*0x20 + -0x28) = piVar3;\n            *(*0x20 + -0x30) = arg4;\n            iVar10 = *(noname_1 + 0x40);\n            if (iVar10 == 0) {\n                if (*0x598440 == 0) {\n                    piVar4[2] = 0;\n                    *(noname_1 + 0x38) = piVar4;\n                    *(noname_1 + 0x40) = piVar4;\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x4058c5;\n                    fcn.0045d160(iVar8, arg2_00, 0, arg4);\n                    *(*0x20 + -0x90) = 0x4058ce;\n                    fcn.0045cfe0(iVar8, arg2_00, uVar7, arg4);\n                    *(*0x20 + -0x90) = 0x4058d6;\n                    fcn.0045cfe0(iVar8, arg2_00, uVar7, arg4);\n                }\n            }\n            else if (*0x598440 == 0) {\n                piVar4[2] = iVar10;\n                *(iVar10 + 8) = piVar4;\n                *(noname_1 + 0x40) = piVar4;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40587c;\n                fcn.0045d160(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x405885;\n                fcn.0045cfe0(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x40588d;\n                fcn.0045cfe0(iVar8, arg2_00, iVar10, arg4);\n            }\n            param_3 = arg2_00 + 0xb9;\n            uVar2 = *param_3;\n            *param_3 = 1;\n            param_4 = uVar2;\n            param_1 = 0xe;\n            *(*0x20 + -0x90) = 0x40590c;\n            fcn.00435860();\n            iVar8 = *(*0x20 + -0x48);\n            param_2 = *(*0x20 + -0x38);\n            if (*(param_2 + 0x148) == iVar8) {\n                if (*0x598440 == 0) {\n                    *(param_2 + 0x148) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x40594f;\n                    iVar8 = fcn.0045d0e0(0);\n                }\n                *(param_2 + 0xb8) = 0;\n                if (0 < *(iVar8 + 0x28)) {\n                    *(*0x20 + -0x90) = 0x405974;\n                    fcn.00429de0();\n                    iVar8 = *(*0x20 + -0x48);\n                    param_2 = *(*0x20 + -0x38);\n                }\n                uVar6 = *(iVar8 + 0x35);\n                *(*0x20 + -0x59) = *(iVar8 + 0x35);\n                if (*0x598440 == 0) {\n                    *(param_2 + 0x88) = 0;\n                    *(iVar8 + 0x50) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x4059b0;\n                    fcn.0045d100(uVar6, 0, param_3, param_4);\n                    *(*0x20 + -0x90) = 0x4059bc;\n                    fcn.0045d100(uVar6, 0, param_3, param_4);\n                }\n                *(*0x20 + -0x90) = 0x4059c5;\n                fcn.00435d80();\n                return 1;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x90) = 0x405a3b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x405a4f;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3965
    },
    "00405ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405ac0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack48;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00404ec0(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        if (arg1 != 0) {\n            fcn.00410c20(*(in_RAX + 0x30) * *(in_RAX + 0x18) + *(in_RAX + 0x10));\n        }\n        fcn.00410c20(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x598440 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        fcn.0045d160(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x598440 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045d0e0();\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045ce80(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.004359a0(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 597
    },
    "004088a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004088a0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    ulong uStack168;\n    uchar auStack136 [128];\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = fcn.004449e0(1);\n    iVar2 = fcn.00453260(1);\n    if (0 < iVar2) {\n        puVar3 = fcn.0040c140();\n        puVar3[1] = 1;\n        puVar3[2] = 1;\n        if (*0x598440 == 0) {\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.0045d0e0(uVar1);\n        }\n        puVar3[4] = 0;\n        puVar3[5] = 2;\n        if (*0x598440 == 0) {\n            puVar3[3] = puVar3 + 6;\n        }\n        else {\n            fcn.0045d0e0();\n        }\n        fcn.0045d730();\n        fcn.00449640();\n        fcn.0045da9a();\n        fcn.0045da9a();\n        return uStack168;\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00408d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00408d20(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x408f3c;\n                    fcn.00454500();\n                    *(*0x20 + -0x48) = 0x408f45;\n                    uVar3 = fcn.00454d60(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x408f5b;\n                    iVar4 = fcn.0040c140();\n                    if (*0x598440 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408fc5;\n                        fcn.0045d0e0(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x408fd3;\n                        iVar4 = fcn.0045d0e0(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x598440 != 0) goto code_r0x00408fa5;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408fa5;\n                        fcn.004327c0();\ncode_r0x00408fa5:\n                        *(*0x20 + -0x48) = 0x408fb3;\n                        fcn.0045d0e0(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x408d8d;\n                iVar4 = fcn.00409020(unaff_RBX);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x408da5;\n                    fcn.0040a080();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x408dbb;\n                    iVar4 = fcn.00409020(*(*0x20 + 0x10));\n                    if (iVar4 == 0) {\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x408e07;\n                        puVar2 = fcn.0040c4a0(0x59a100);\n                        if (*0x598440 == 0) {\n                            *puVar2 = *(*0x20 + 8);\n                            puVar2[1] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x408e32;\n                            iVar4 = fcn.0045d0e0();\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x408e45;\n                            puVar2 = fcn.0045d120(uVar3, iVar4 + 8, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar2;\n                        *(puVar2 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x408e56;\n                        fcn.00409220();\n                        *(*0x20 + -0x48) = 0x408e65;\n                        fcn.00409080();\n                        *(*0x20 + -0x48) = 0x408e73;\n                        fcn.0040a2a0();\n                        iVar4 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0x48) = 0x408dd8;\n                        fcn.0040a2a0();\n                        iVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar4 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x408ea5;\n                    uVar3 = fcn.00409220();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x408ebb;\n                    iVar4 = fcn.0040c140();\n                    if (*0x598440 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408f25;\n                        fcn.0045d0e0(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x408f33;\n                        iVar4 = fcn.0045d0e0(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x598440 != 0) goto code_r0x00408f05;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408f05;\n                        fcn.004327c0();\ncode_r0x00408f05:\n                        *(*0x20 + -0x48) = 0x408f13;\n                        fcn.0045d0e0(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                return iVar4;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x408fe6;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x408ffa;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1913
    },
    "00409080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409080(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x53c818;\n                puVar2 = *0x53c818;\n                if ((*0x53c818)[1] < (uVar1 >> 2) * 3) goto code_r0x0040916a;\n                *(*0x20 + -0x30) = *0x53c818;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x4090ed;\n                piVar3 = fcn.0040b760(1, *0x53c818, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45ee40;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x409125;\n                fcn.00409d60();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x598440 != '\\0') {\n                        *(*0x20 + -0x50) = 0x40914f;\n                        fcn.00403140();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x0040916a:\n                    *0x53c818 = puVar2;\n                    *(*0x20 + -0x50) = 0x409175;\n                    fcn.004091c0();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x409190;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x50) = 0x4091a5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4091b0;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 741
    },
    "00409220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409220(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x409267;\n            iVar3 = fcn.004543c0();\n            arg1_00 = *(*0x20 + -0x30);\n            uVar9 = *(arg1_00 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x58) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x004092e0:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1_00 + 0x38);\n                    arg1_00 = *(arg1_00 + 0x40);\n                    if (uVar10 < arg1_00) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x409325;\n                        uVar4 = fcn.004547a0();\n                        *(*0x20 + -0x50) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x409345;\n                        uVar4 = fcn.00454500();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x409352;\n                        uVar4 = fcn.00454d60(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x40936c;\n                        uVar5 = fcn.00454f20(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x40937f;\n                            uVar5 = fcn.00454d60(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (arg1 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (arg1 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x409591;\n                                fcn.0045d480(arg1);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            noname_2 = uVar10 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x409474;\n                            uVar6 = fcn.00454500();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x58);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x409494;\n                            iVar7 = fcn.004547a0();\n                            iVar8 = *(*0x20 + -0x50);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x4094af;\n                                fcn.00454d60(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x4094cd;\n                                    cVar2 = fcn.00402180(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x4094ec;\n                                fcn.00454f20(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x409505;\n                                    fcn.00454500();\n                                    *(*0x20 + -0xb0) = 0x40950a;\n                                    fcn.00454d60(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x409545;\n                                        cVar2 = fcn.00402180(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x004093a5;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            arg1 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x40959c;\n                    fcn.0045d480(arg1_00);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x4095a6;\n                fcn.0045d580(arg1_00, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x4095b3;\n            in_RAX = fcn.0045d580(arg1_00, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x4095be;\n        fcn.0045ad80();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x004093a5:\n    *(*0x20 + -0xb0) = 0x4093bd;\n    arg4 = fcn.00454a60();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x598440 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x4093f9;\n            fcn.0045cfe0(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1_00 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x004092e0;\n}\n",
        "token_count": 2318
    },
    "004096c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004096c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    puVar1 = fcn.0040c140();\n    if (*0x598440 != 0) goto code_r0x00409735;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        puVar1[4] = 0;\n        puVar1[3] = 0;\n        fcn.004327c0();\ncode_r0x00409735:\n        iVar2 = fcn.0045d0e0(arg1);\n        fcn.0045d100(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045d0e0(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 289
    },
    "004097a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004097a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    puVar1 = fcn.0040c140();\n    if (*0x598440 != 0) goto code_r0x00409827;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        puVar1[4] = 0;\n        puVar1[3] = 0;\n        fcn.004327c0();\ncode_r0x00409827:\n        iVar2 = fcn.0045d0e0(arg1);\n        fcn.0045d100(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045d0e0(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 341
    },
    "00409a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00409a20(void)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x599480;\n    }\n    else {\n        puVar1 = fcn.0040b760(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x598440 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045d0e0(in_RAX);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 204
    },
    "00409ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00409ac0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x599480;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040b760();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x598440 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.0045d100(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 261
    },
    "00409c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409c00(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX != 0) {\n        fcn.00408d20(0);\n        return;\n    }\n    iVar1 = fcn.0040c140();\n    if (*0x598440 != 0) goto code_r0x00409c78;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x18) = 0;\n        fcn.004327c0();\ncode_r0x00409c78:\n        iVar1 = fcn.0045d0e0();\n    } while( true );\n}\n",
        "token_count": 237
    },
    "0040a080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a080(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40a0db;\n                fcn.0042ec60();\n                iVar4 = 0;\n                if (1 < *0x598214) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x40a196;\n                        fcn.0045cb60();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x4b0448;\n                        *(*0x20 + -0x48) = 0x40a16f;\n                        fcn.0045ac40();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x248) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40a218;\n                                    fcn.0042e8c0();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40a245;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40a250;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1118
    },
    "0040a2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a2a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040a316;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x248));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40a316;\n            uVar5 = fcn.0042ebe0();\ncode_r0x0040a316:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40a365;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40a370;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 648
    },
    "0040a380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a380(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40a3ce;\n                uVar1 = fcn.0042ebe0();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40a3e9;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40a3f4;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 411
    },
    "0040a400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040a400(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40a43b;\n                fcn.0042ec60();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x53c810 == 0) {\n                        *(*0x20 + -0x30) = 0x40a485;\n                        fcn.0042e8c0();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40a4cc;\n                            fcn.0042e8c0(iVar1);\n                            *(*0x20 + -0x28) = **0x53c810;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40a4e8;\n                            fcn.0045cbc0();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40a4a8;\n                    fcn.00432f60();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40a525;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40a530;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 738
    },
    "0040a540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040a540(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x53c810 == 0) {\n                fcn.0042e8c0();\n            }\n            else {\n                while (iVar4 = fcn.0042e8c0(),  iVar4 < 0) {\n                    fcn.0045cbc0();\n                }\n            }\n            goto code_r0x0040a770;\n        }\n        fcn.0045ed60();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00432f60();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042e8c0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x53c810;\n        if (iVar2 != 0) {\n            fcn.0045cbc0();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045ed60();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042e8c0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00432f60();\n    }\n    fcn.00432f60();\ncode_r0x0040a770:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 765
    },
    "0040aa20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040aa20(uint64_t param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t noname_1;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x52f2e4 == 0x10) {\n                *(*0x20 + -0x28) = 0x40aa4b;\n                fcn.00430aa0();\n                for (iVar1 = 0; noname_1 = *0x598350,  iVar1 < 0x44; iVar1 = iVar1 + 1) {\n                    param_3 = 0x59b130;\n                    *(iVar1 * 0x18 + 0x59b130) = *(iVar1 * 2 + 0x52f2e0);\n                }\n                if (*0x598358 != 0) {\n                    if (*0x598358 < 0x80001) {\n                        if (0xfff < *0x598358) {\n                            if ((*0x598358 & *0x598358 - 1) == 0) {\n                                if ((*0x598350 & *0x598350 - 1) == 0) {\n                                    if (0x400000 < *0x598350) {\n                                        *0x598350 = 0;\n                                    }\n                                    if (*0x598350 != 0) {\n                                        while (noname_1 = -(*0x598348 < 0x40),  param_1 = *0x598348, \n                                              *0x598350 != (1 << (*0x598348 & 0x3f) & noname_1)) {\n                                            *0x598348 = *0x598348 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40aaf8;\n                                    fcn.00422a20(param_1, noname_1, param_3);\n                                    *(*0x20 + -0x28) = 0x40aafd;\n                                    *0x598310 = fcn.00413ac0();\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40ab1c;\n                                        puVar2 = fcn.004168a0();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x56a858;\n                                        *0x56a858 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40ab94;\n                                fcn.004346e0();\n                                *(*0x20 + -0x28) = 0x40aba5;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x28) = 0x40abb1;\n                                fcn.00434ce0();\n                                *(*0x20 + -0x28) = 0x40abc5;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x28) = 0x40abca;\n                                fcn.00434760();\n                                *(*0x20 + -0x28) = 0x40abdb;\n                                fcn.00432f60();\n                            }\n                            *(*0x20 + -0x28) = 0x40abe5;\n                            fcn.004346e0();\n                            *(*0x20 + -0x28) = 0x40abf6;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x28) = 0x40ac05;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x28) = 0x40ac16;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x28) = 0x40ac1b;\n                            fcn.00434760();\n                            *(*0x20 + -0x28) = 0x40ac2c;\n                            fcn.00432f60();\n                        }\n                        *(*0x20 + -0x28) = 0x40ac31;\n                        fcn.004346e0();\n                        *(*0x20 + -0x28) = 0x40ac45;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x28) = 0x40ac51;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x28) = 0x40ac65;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x28) = 0x40ac6f;\n                        fcn.00434de0();\n                        *(*0x20 + -0x28) = 0x40ac85;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x28) = 0x40ac8a;\n                        fcn.00434760();\n                        *(*0x20 + -0x28) = 0x40ac9b;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x28) = 0x40aca5;\n                    fcn.004346e0();\n                    *(*0x20 + -0x28) = 0x40acb6;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x28) = 0x40acc5;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x28) = 0x40acd6;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x28) = 0x40ace5;\n                    fcn.00434de0();\n                    *(*0x20 + -0x28) = 0x40acf6;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x28) = 0x40acfb;\n                    fcn.00434760();\n                    *(*0x20 + -0x28) = 0x40ad0c;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x28) = 0x40ad1d;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x28) = 0x40ad2e;\n            fcn.00432f60();\n        }\n        *(puVar3 + -8) = 0x40ad34;\n        fcn.0045ad80();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1627
    },
    "0040b760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040b760(uint64_t param_1, ulong param_2, ulong param_3, uint64_t param_4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    bool bVar10;\n    uint64_t in_RAX;\n    int64_t iVar11;\n    uchar (*pauVar12) [16];\n    uint64_t *puVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    uint64_t uVar16;\n    char cVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    uchar uVar20;\n    uchar uVar21;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59820c != 2) {\n                if (in_RAX == 0) {\n                    return 0x5983d8;\n                }\n                if (*0x59865c != '\\0') {\n                    if (*0x598668 != 0) {\n                        *(*0x20 + -0x80) = 0x40b7f9;\n                        iVar11 = fcn.0040c4a0(0x59a100);\n                        return iVar11;\n                    }\n                    if ((*0x5984a0 != '\\0') && (*(unaff_R14 + 0x98) == *0x5984a8)) {\n                        *0x5984b0 = *0x5984b0 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x598204 == 0) {\n                    iVar11 = 0;\n                }\n                else {\n                    iVar11 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (iVar11 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        iVar11 = *(*0x20 + -0x18);\n                    }\n                    iVar15 = *(iVar11 + 0x180) - in_RAX;\n                    *(iVar11 + 0x180) = iVar15;\n                    if (iVar15 < 0) {\n                        *(*0x20 + -0x10) = iVar11;\n                        *(*0x20 + -0x80) = 0x40b885;\n                        fcn.0041a380();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        iVar11 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar2 = *piVar2 + 1;\n                iVar15 = *(unaff_R14 + 0x30);\n                if (*(iVar15 + 0xc0) == 0) {\n                    if (*(iVar15 + 0x50) != unaff_R14) {\n                        *(iVar15 + 0xc0) = 1;\n                        iVar8 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        uVar16 = *0x598310;\n                        if (iVar8 != 0) {\n                            uVar16 = *(iVar8 + 0x40);\n                        }\n                        if (uVar16 != 0) {\n                            if (unaff_RBX == 0) {\n                                param_4 = 1;\n                            }\n                            else {\n                                param_4 = param_4 & 0xffffffffffffff00 | *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar15;\n                            *(*0x20 + -0x38) = uVar16;\n                            *(*0x20 + -0x52) = param_4;\n                            *(*0x20 + -0x18) = iVar11;\n                            uVar18 = param_4;\n                            if (in_RAX < 0x8001) {\n                                if ((param_4 == '\\0') || (0xf < in_RAX)) {\n                                    if (0x3f8 < in_RAX) {\n                                        uVar19 = in_RAX - 0x381 >> 7;\n                                        if (uVar19 < 0xf9) {\n                                            uVar5 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                    [uVar19];\n                                            goto code_r0x0040bb41;\n                                        }\ncode_r0x0040bfdf:\n                                        *(*0x20 + -0x80) = 0x40bfec;\n                                        fcn.0045d4a0(0xf9);\ncode_r0x0040bfec:\n                                        param_1 = 0x81;\n                                        *(*0x20 + -0x80) = 0x40bff9;\n                                        fcn.0045d4a0(0x81);\n                                        goto code_r0x0040bff9;\n                                    }\n                                    uVar19 = in_RAX + 7 >> 3;\n                                    if (0x80 < uVar19) goto code_r0x0040bfec;\n                                    uVar5 = *(uVar19 + 0x52f1a0);\ncode_r0x0040bb41:\n                                    if (0x43 < uVar5) {\ncode_r0x0040bfd2:\n                                        *(*0x20 + -0x80) = 0x40bfdf;\n                                        fcn.0045d480(0x44);\n                                        goto code_r0x0040bfdf;\n                                    }\n                                    uVar6 = *(uVar5 * 2 + 0x52f2e0);\n                                    uVar19 = uVar5 << 1 & 0xff | uVar18 & 0xff;\n                                    if (0x87 < uVar19) {\n                                        *(*0x20 + -0x80) = 0x40bfd2;\n                                        fcn.0045d480(0x88);\n                                        goto code_r0x0040bfd2;\n                                    }\n                                    uVar19 = *(uVar16 + 0x28 + uVar19 * 8);\n                                    uVar9 = *(uVar19 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar9 != 0) {\n                                        for (; (uVar9 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar9 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar16 = *(uVar19 + 0x30) + iVar11;\n                                        if (*(uVar19 + 0x38) <= uVar16) {\n                                            uVar16 = *(*0x20 + -0x38);\n                                            goto code_r0x0040bc2c;\n                                        }\n                                        uVar4 = *(uVar19 + 0x30) + iVar11 + 1;\n                                        if (((uVar4 & 0x3f) == 0) && (*(uVar19 + 0x38) != uVar4)) {\n                                            uVar16 = *(*0x20 + -0x38);\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            *(uVar19 + 0x40) = uVar9 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                            *(uVar19 + 0x30) = uVar4;\n                                            *(uVar19 + 0x60) = *(uVar19 + 0x60) + 1;\n                                            pauVar12 = *(uVar19 + 0x68) * uVar16 + *(uVar19 + 0x18);\n                                            param_1 = *(*0x20 + 0x18);\n                                            uVar16 = *(*0x20 + -0x38);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040bc2c:\n                                        pauVar12 = NULL;\n                                    }\n                                    *(*0x20 + -0x30) = uVar6;\n                                    if (pauVar12 == NULL) {\n                                        uVar19 = uVar5 << 1 | uVar18 & 0xff;\n                                        *(*0x20 + -0x80) = 0x40bc48;\n                                        pauVar12 = fcn.0040b540(param_1, 0, uVar16);\n                                        uVar16 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x52);\n                                        uVar20 = param_1;\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        uVar20 = 0;\n                                    }\n                                    cVar17 = uVar18;\n                                    if ((param_1 != '\\0') && (*(uVar19 + 100) != '\\0')) {\n                                        *(*0x20 + -0x20) = pauVar12;\n                                        *(*0x20 + -0x53) = uVar20;\n                                        *(*0x20 + -0x50) = uVar19;\n                                        *(*0x20 + -0x80) = 0x40bca9;\n                                        fcn.0045db00(param_1, pauVar12, uVar16);\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        pauVar12 = *(*0x20 + -0x20);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                        uVar16 = *(*0x20 + -0x38);\n                                        cVar17 = *(*0x20 + -0x52);\n                                        uVar20 = *(*0x20 + -0x53);\n                                        uVar19 = *(*0x20 + -0x50);\n                                    }\n                                    puVar13 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    uVar19 = *(uVar16 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar19 = uVar19 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar19 = uVar19 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar19 = uVar19 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar19 < 0x11) && (iVar11 = *(uVar16 + 0x10),  iVar11 != 0)) {\n                                        *(uVar16 + 0x18) = in_RAX + uVar19;\n                                        *(uVar16 + 0x20) = *(uVar16 + 0x20) + 1;\n                                        *(iVar15 + 0xc0) = 0;\n                                        iVar7 = *(iVar15 + 0xd8);\n                                        *(iVar15 + 0xd8) = iVar7 + -1;\n                                        if ((iVar7 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar11 + uVar19;\n                                    }\n                                    uVar19 = *(uVar16 + 0x50);\n                                    uVar9 = *(uVar19 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar9 != 0) {\n                                        for (; (uVar9 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar9 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar4 = *(uVar19 + 0x30) + iVar11;\n                                        if (*(uVar19 + 0x38) <= uVar4) goto code_r0x0040ba78;\n                                        uVar1 = *(uVar19 + 0x30) + iVar11 + 1;\n                                        if (((uVar1 & 0x3f) == 0) && (*(uVar19 + 0x38) != uVar1)) {\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            *(uVar19 + 0x40) = uVar9 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                            *(uVar19 + 0x30) = uVar1;\n                                            *(uVar19 + 0x60) = *(uVar19 + 0x60) + 1;\n                                            pauVar12 = *(uVar19 + 0x68) * uVar4 + *(uVar19 + 0x18);\n                                            param_1 = *(*0x20 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040ba78:\n                                        pauVar12 = NULL;\n                                    }\n                                    if (pauVar12 == NULL) {\n                                        *(*0x20 + -0x80) = 0x40ba91;\n                                        pauVar12 = fcn.0040b540();\n                                        uVar16 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x52);\n                                        uVar19 = 5;\n                                        uVar20 = param_1;\n                                        in_RAX = *(*0x20 + 8);\n                                        param_1 = *(*0x20 + 0x18);\n                                        unaff_RBX = *(*0x20 + 0x10);\n                                    }\n                                    else {\n                                        uVar20 = 0;\n                                    }\n                                    cVar17 = uVar18;\n                                    *pauVar12 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(uVar16 + 0x18) && *(uVar16 + 0x18) != in_RAX) ||\n                                       (*(uVar16 + 0x10) == 0)) {\n                                        *(uVar16 + 0x10) = pauVar12;\n                                        *(uVar16 + 0x18) = in_RAX;\n                                    }\n                                    puVar13 = 0x10;\n                                }\n                                uVar21 = 1;\n                            }\n                            else {\n                                if (param_1 == '\\0') {\n                                    uVar18 = 0;\n                                }\n                                else {\n                                    uVar18 = uVar18 ^ 1;\n                                }\n                                *(*0x20 + -0x80) = 0x40bd25;\n                                uVar19 = fcn.00413fe0(uVar18);\n                                *(uVar19 + 0x30) = 1;\n                                *(uVar19 + 0x60) = 1;\n                                pauVar12 = *(uVar19 + 0x18);\n                                puVar13 = *(uVar19 + 0x68);\n                                param_1 = *(*0x20 + 0x18);\n                                uVar16 = *(*0x20 + -0x38);\n                                cVar17 = *(*0x20 + -0x52);\n                                uVar21 = in_RAX;\n                                uVar20 = 1;\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(*0x20 + -0x20) = pauVar12;\n                            *(*0x20 + -0x30) = puVar13;\n                            *(*0x20 + -0x53) = uVar20;\n                            *(*0x20 + -0x51) = uVar21;\n                            *(*0x20 + -0x50) = uVar19;\n                            if (cVar17 == '\\0') {\n                                if (*0x543ac8 == unaff_RBX) {\n                                    in_RAX = 0x48;\n                                }\n                                *(*0x20 + -0x40) = in_RAX;\n                                *(*0x20 + -0x80) = 0x40bdbe;\n                                fcn.00412260(in_RAX);\n                                puVar13 = *(*0x20 + 0x10);\n                                in_RAX = *(*0x20 + -0x40);\n                                if (*puVar13 < in_RAX) {\n                                    uVar16 = in_RAX - *puVar13;\n                                    uVar19 = 0;\n                                    if (puVar13[1] != 0) {\n                                        uVar19 = uVar16 + puVar13[1];\n                                    }\n                                }\n                                else {\n                                    uVar19 = puVar13[1];\n                                    uVar16 = in_RAX;\n                                }\n                                *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar19;\n                                param_1 = in_RAX;\n                            }\n                            else {\n                                uVar19 = 0;\n                            }\n                            *(*0x20 + -0x40) = in_RAX;\n                            *(*0x20 + -0x48) = uVar19;\n                            *(*0x20 + -0x80) = 0x40be14;\n                            fcn.0045cb80(param_1, puVar13, uVar16);\n                            iVar11 = **(in_GS_OFFSET + 0x28);\n                            if (*0x59820c != 0) {\n                                *(*0x20 + -0x80) = 0x40be4a;\n                                fcn.0041cba0(*(*0x20 + -0x30));\n                            }\n                            if (*0x598258 < 1) {\n                                uVar16 = *(*0x20 + -0x30);\n                            }\n                            else {\n                                if (*0x598258 == 1) {\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    uVar19 = **(*0x20 + -0x38);\n                                    uVar16 = *(*0x20 + -0x30);\n                                    if (uVar16 < uVar19) {\n                                        **(*0x20 + -0x38) = uVar19 - uVar16;\n                                        goto code_r0x0040be96;\n                                    }\n                                }\n                                *(*0x20 + -0x80) = 0x40be8a;\n                                fcn.0040c260(uVar16);\n                                uVar16 = *(*0x20 + -0x30);\n                            }\ncode_r0x0040be96:\n                            iVar15 = *(*0x20 + -0x28);\n                            *(iVar15 + 0xc0) = 0;\n                            iVar7 = *(iVar15 + 0xd8);\n                            *(iVar15 + 0xd8) = iVar7 + -1;\n                            if ((iVar7 == 1) && (*(iVar11 + 0xb1) != '\\0')) {\n                                *(iVar11 + 0x10) = 0xfffffffffffffade;\n                            }\n                            if ((*(*0x20 + -0x51) == '\\0') && (*(*0x20 + 0x18) != '\\0')) {\n                                *(*0x20 + -0x80) = 0x40bef1;\n                                fcn.0040c080();\n                                uVar16 = *(*0x20 + -0x30);\n                            }\n                            if (*0x59865c != '\\0') {\n                                if (*0x598660 != 0) {\n                                    *(*0x20 + -0x80) = 0x40bf1d;\n                                    fcn.0042a0e0(*(*0x20 + 0x10));\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                if ((*0x5984a0 != '\\0') && (*(iVar11 + 0x98) == *0x5984a8)) {\n                                    *0x5984b8 = *0x5984b8 + uVar16;\n                                }\n                            }\n                            if (*(*0x20 + -0x18) != 0) {\n                                piVar3 = *(*0x20 + -0x18) + 0x180;\n                                *piVar3 = *piVar3 - (uVar16 - *(*0x20 + -0x40));\n                            }\n                            if (*(*0x20 + -0x53) != '\\0') {\n                                if (((*0x59b128 == '\\0') || (*0x598228 != 0)) || (*0x59820c != 0)) {\n                                    bVar10 = false;\n                                }\n                                else {\n                                    bVar10 = *0x598a98 <= *0x598ab0;\n                                }\n                                if (bVar10) {\n                                    *(*0x20 + -0x80) = 0x40bfa5;\n                                    fcn.00416be0(0);\n                                }\n                            }\n                            return *(*0x20 + -0x20);\n                        }\ncode_r0x0040bff9:\n                        *(*0x20 + -0x80) = 0x40c00a;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x80) = 0x40c01b;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x80) = 0x40c02c;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x80) = 0x40c03d;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        puVar14[0x18] = param_1;\n        *(puVar14 + -8) = 0x40c051;\n        fcn.0045ad80();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 5247
    },
    "0040c080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c080(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.0045abc0();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045db00(uVar2);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040c1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c1a0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40c20f;\n                fcn.0040b760(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40c1f2;\n                fcn.0040b760(1);\n                return;\n            }\n            unaff_RBX = 0x4c7f38;\n            *(*0x20 + -0x28) = 0x40c22c;\n            in_RAX = fcn.004327c0(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40c23c;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 494
    },
    "0040c260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c260(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n            piVar3 = *0x598310;\n            if (iVar2 != 0) {\n                piVar3 = *(iVar2 + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x598258 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40c2bf;\n                    iVar1 = fcn.0040c340();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40c2e5;\n                fcn.00429b20(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40c305;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40c31a;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 604
    },
    "0040c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c5c0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040c613:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40c6ed;\n                        iVar5 = fcn.00415260();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40c66c;\n                        fcn.0040a080();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x598458;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x1650;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40c6ca;\n                        puVar8 = fcn.00415260();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x598458) goto code_r0x0040c811;\n                            do {\n                                *(*0x20 + -0x48) = 0x40c80f;\n                                fcn.00432f60();\ncode_r0x0040c811:\n                                *(*0x20 + -0x48) = 0x40c81d;\n                                fcn.0040a2a0();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x598340;\n                            **ppuVar7 = *0x598340;\n                            LOCK();\n                            bVar9 = uVar4 == *0x598340;\n                            *0x598340 = *0x598340 ^ bVar9 * (*0x598340 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x598458) {\n                        *(*0x20 + -0x48) = 0x40c757;\n                        fcn.0040a2a0();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x59a100) {\n                        *(*0x20 + -0x48) = 0x40c77d;\n                        fcn.0042b960();\n                        *(*0x20 + -0x48) = 0x40c791;\n                        fcn.0042b960();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040c613;\n                    *(*0x20 + -0x48) = 0x40c830;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x48) = 0x40c845;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40c856;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40c86b;\n        fcn.0045f460();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1614
    },
    "0040c880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c880(int64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar2 = uVar1 + unaff_RBX;\n    if (uVar2 <= in_RAX[2]) {\n        *in_RAX = uVar2;\n        uVar2 = -*0x598358 & (uVar2 + *0x598358) - 2;\n        if (in_RAX[1] < uVar2) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00415960(unaff_RDI);\n                fcn.004154c0();\n            }\n            in_RAX[1] = uVar2;\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "0040ca00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ca00(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t arg4;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t *in_R8;\n    int64_t *piVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar4 = *(in_RAX + 0x28);\n    if ((iVar4 == 0) || (arg4 = *(iVar4 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040b760(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar6 = in_R8 + arg4 + -8;\n        if (*piVar6 == 0) {\n            if (*0x598440 == 0) {\n                *(iVar4 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                fcn.0045d140(arg1, iVar4, in_R8, arg4);\n            }\n        }\n        else {\n            iVar4 = arg1;\n            if (*0x598440 == 0) {\n                *piVar6 = 0;\n                iVar1 = in_RAX;\n            }\n            else {\n                iVar1 = fcn.0045d100(arg1, 0, in_R8, arg4);\n            }\n            if (*0x598440 == 0) {\n                *(*(iVar1 + 0x28) + 0x10) = 0;\n            }\n            else {\n                fcn.0045d100(iVar4, 0, in_R8, arg4);\n            }\n        }\n    }\n    iVar4 = arg4;\n    fcn.0040c980();\n    if (*(*(unaff_RBX + 0x40) + 8) == 0) {\n        iVar1 = in_RAX;\n        if (*(in_RAX + 0x28) == 0) {\n            iVar5 = unaff_RBX;\n            uVar2 = fcn.0040c140();\n            if (*0x598440 == 0) {\n                *(in_RAX + 0x28) = uVar2;\n            }\n            else {\n                fcn.0045cfe0(iVar5, in_RAX, in_R8, iVar4);\n            }\n        }\n        piVar6 = *(iVar1 + 0x28);\n        if (*piVar6 == 0) {\n            uVar2 = fcn.0040c140();\n            if (*0x598440 == 0) {\n                **(in_RAX + 0x28) = uVar2;\n                iVar1 = in_RAX;\n            }\n            else {\n                fcn.0045cfe0(in_RAX, iVar1, piVar6, iVar4);\n                iVar1 = in_RAX;\n            }\n        }\n        in_R8 = **(iVar1 + 0x28);\n        iVar1 = in_R8[1];\n        iVar5 = *in_R8;\n        iVar3 = iVar5;\n        if (in_R8[2] < iVar1 + 1U) {\n            arg2 = iVar1;\n            piVar6 = in_R8;\n            iVar3 = fcn.00444ac0(iVar1);\n            in_R8[2] = iVar1;\n            if (*0x598440 == 0) {\n                *in_R8 = iVar3;\n                iVar1 = iVar5;\n            }\n            else {\n                iVar3 = fcn.0045cfe0(iVar1, arg2, piVar6, iVar4);\n                iVar1 = iVar5;\n            }\n        }\n        in_R8[1] = iVar1 + 1;\n        if (*0x598440 == 0) {\n            *(iVar3 + iVar1 * 8) = arg4;\n        }\n        else {\n            arg4 = fcn.0045cfe0(unaff_RBX, iVar1, in_R8, iVar4);\n        }\n    }\n    if (*0x598440 == 0) {\n        *(arg1 + *(unaff_RBX + 0x52) + -8) = arg4;\n    }\n    else {\n        fcn.0045cfe0(*(unaff_RBX + 0x52), arg1, in_R8, iVar4);\n    }\n    return;\n}\n",
        "token_count": 1045
    },
    "0040cce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040cce0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    uint8_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    auVar2 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar2 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar2, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040c140();\n    }\n    iVar5 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar5 + 0xf0);\n    uVar1 = *(iVar5 + 0xf4);\n    *(iVar5 + 0xf0) = uVar1;\n    uVar6 = uVar6 << 0x11 ^ uVar6;\n    uVar7 = uVar1;\n    uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n    arg4 = uVar6;\n    *(iVar5 + 0xf4) = uVar6;\n    *(arg1 + 0xc) = uVar1 + uVar6;\n    uVar6 = 0;\n    while ((uVar3 = uVar6,  8 < unaff_RBX &&\n           (uVar7 = 1 << (uVar3 & 0x3f),  uVar8 = uVar7 >> 1,  uVar7 = uVar8 + (uVar7 & 0xfffffffffffffffe), \n           uVar8 + uVar7 * 4 < unaff_RBX))) {\n        uVar6 = uVar6 + 1;\n    }\n    *(arg1 + 9) = uVar3;\n    iVar5 = arg1;\n    if (uVar3 != 0) {\n        uVar8 = uVar6;\n        arg2 = arg1;\n        uVar4 = fcn.0040cea0(0);\n        if (*0x598440 == 0) {\n            *(arg1 + 0x10) = uVar4;\n        }\n        else {\n            fcn.0045cfe0(arg1, arg2, uVar7, arg4);\n        }\n        if (uVar8 != 0) {\n            iVar5 = fcn.0040c140();\n            if (*0x598440 == 0) {\n                *(arg1 + 0x28) = iVar5;\n                *(iVar5 + 0x10) = uVar8;\n                iVar5 = arg1;\n            }\n            else {\n                fcn.0045cfe0(arg1, arg2, uVar7, arg4);\n                fcn.0045d100(arg1, uVar8, uVar7, arg4);\n                iVar5 = arg1;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 798
    },
    "0040cea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cea0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040cfd2;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x52f2e0);\n                            goto code_r0x0040cfa0;\n                        }\n                        goto code_r0x0040d08c;\n                    }\n                    goto code_r0x0040d099;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x52f1a0);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x52f2e0);\n                        goto code_r0x0040cfa0;\n                    }\n                    goto code_r0x0040d0a6;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040cfa0:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040cfd2;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040cfd2:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x28) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40d02e;\n                        iVar3 = fcn.0040c1a0(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40d015;\n                            fcn.0045db00();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d008;\n                            fcn.00410f20();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x20);\n                    if (*(*0x20 + -0x28) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x598440 == 0) {\n                            *((*(*0x20 + -0x28) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d076;\n                            fcn.0045cfe0(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40d08c;\n                fcn.00430980();\ncode_r0x0040d08c:\n                *(*0x20 + -0x40) = 0x40d099;\n                fcn.0045d480(0x44);\ncode_r0x0040d099:\n                *(*0x20 + -0x40) = 0x40d0a6;\n                fcn.0045d4a0(0xf9);\ncode_r0x0040d0a6:\n                *(*0x20 + -0x40) = 0x40d0b3;\n                fcn.0045d480(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40d0c5;\n            in_RAX = fcn.0045d4a0(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40d0d9;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1607
    },
    "0040d540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040d540(int64_t **arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar9;\n    ulong uVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t in_R8;\n    int64_t iVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040d540:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (unaff_RBX != 0) {\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x80) = 0x40d59e;\n                uVar4 = (*pcVar2)();\n                *(*0x20 + -0x50) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    uVar10 = *(*0x20 + 8);\n                    uVar8 = 1;\n                    *(*0x20 + -0x80) = 0x40d5d5;\n                    iVar5 = fcn.0040b760();\n                    if (*0x598440 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x80) = 0x40d5fd;\n                        fcn.0045cfe0(uVar8, uVar10, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x50);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x48) = arg1_00;\n                        *(*0x20 + -0x80) = 0x40d65b;\n                        fcn.0040e3e0(arg1_00);\n                        uVar4 = *(*0x20 + -0x50);\n                        arg1_00 = *(*0x20 + -0x48);\n                        piVar9 = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    uVar1 = *(iVar5 + 0x52);\n                    iVar12 = piVar9[2];\n                    uVar6 = uVar4 >> 0x38;\n                    if (uVar4 >> 0x38 < 5) {\n                        uVar6 = (uVar4 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x59) = uVar6;\n                    arg2 = 0;\n                    in_R8 = 0;\n                    in_R9 = 0;\n                    iVar12 = arg1_00 * uVar1 + iVar12;\n                    do {\n                        arg1_01 = iVar12;\n                        *(*0x20 + -0x20) = arg1_01;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            uVar7 = *(arg1_01 + uVar4);\n                            if (uVar6 == uVar7) {\n                                *(*0x20 + -0x58) = uVar4;\n                                *(*0x20 + -0x28) = in_R9;\n                                *(*0x20 + -0x38) = in_R8;\n                                *(*0x20 + -0x30) = arg2;\n                                piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                                if ((*(iVar5 + 0x54) & 1) != 0) {\n                                    piVar9 = *piVar9;\n                                }\n                                *(*0x20 + -0x40) = piVar9;\n                                pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                                *(*0x20 + -0x80) = 0x40d802;\n                                cVar3 = (*pcVar2)();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*0x20 + 8);\n                                    if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                                        *(*0x20 + -0x80) = 0x40d865;\n                                        fcn.00410c20(*(*0x20 + -0x10));\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    arg1 = *(*0x20 + -0x20) + *(iVar5 + 0x51) * *(*0x20 + -0x58) + *(iVar5 + 0x50) * 8 +\n                                           8;\n                                    goto code_r0x0040d9c1;\n                                }\n                                uVar6 = *(*0x20 + -0x59);\n                                arg1_01 = *(*0x20 + -0x20);\n                                piVar9 = *(*0x20 + 0x10);\n                                iVar5 = *(*0x20 + 8);\n                                uVar4 = *(*0x20 + -0x58);\n                                arg2 = *(*0x20 + -0x30);\n                                in_R8 = *(*0x20 + -0x38);\n                                in_R9 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                if ((uVar7 < 2) && (arg2 == 0)) {\n                                    in_R8 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                                    in_R9 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                                    arg2 = arg1_01 + uVar4;\n                                }\n                                if (uVar7 == 0) goto code_r0x0040d6a8;\n                            }\n                        }\n                        iVar12 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar12 != 0);\ncode_r0x0040d6a8:\n                    if (piVar9[3] != 0) goto code_r0x0040d897;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040d897;\n                    }\n                    *(*0x20 + -0x80) = 0x40d614;\n                    fcn.0040e200();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x50);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040da05;\n        }\n        goto code_r0x0040da16;\n    }\n    goto code_r0x0040da2a;\ncode_r0x0040d897:\n    iVar12 = in_R8;\n    if (arg2 == 0) {\n        *(*0x20 + -0x80) = 0x40d8aa;\n        arg2 = fcn.0040ca00(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        iVar12 = arg2 + 8;\n        in_R9 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n    }\n    *(*0x20 + -0x28) = in_R9;\n    *(*0x20 + -0x30) = arg2;\n    in_R8 = iVar12;\n    if ((*(iVar5 + 0x54) & 1) != 0) {\n        *(*0x20 + -0x18) = iVar12;\n        uVar10 = 1;\n        *(*0x20 + -0x80) = 0x40d905;\n        in_R8 = fcn.0040b760();\n        if (*0x598440 == 0) {\n            **(*0x20 + -0x18) = in_R8;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40d91f;\n            in_R8 = fcn.0045cfe0(uVar10, arg2, iVar12, in_R9);\n        }\n        arg2 = *(*0x20 + -0x30);\n        iVar5 = *(*0x20 + 8);\n        in_R9 = *(*0x20 + -0x28);\n    }\n    if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n        *(*0x20 + -0x38) = in_R8;\n        uVar8 = 1;\n        *(*0x20 + -0x80) = 0x40d965;\n        uVar10 = fcn.0040b760();\n        if (*0x598440 == 0) {\n            **(*0x20 + -0x28) = uVar10;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40d97f;\n            fcn.0045cfe0(uVar8, arg2, in_R8, in_R9);\n        }\n        in_R8 = *(*0x20 + -0x38);\n    }\n    *(*0x20 + -0x80) = 0x40d99d;\n    fcn.00410c20(*(*0x20 + -0x10));\n    **(*0x20 + -0x30) = *(*0x20 + -0x59);\n    **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n    iVar5 = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x28);\ncode_r0x0040d9c1:\n    uVar7 = *(*(*0x20 + 0x10) + 8);\n    if ((uVar7 & 4) != 0) {\n        *(*(*0x20 + 0x10) + 8) = uVar7 & 0xfb;\n        if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n            arg1 = *arg1;\n        }\n        return arg1;\n    }\n    *(*0x20 + -0x80) = 0x40da05;\n    fcn.00432f60();\ncode_r0x0040da05:\n    *(*0x20 + -0x80) = 0x40da16;\n    fcn.00432f60();\ncode_r0x0040da16:\n    unaff_RBX = 0x4c7f48;\n    *(*0x20 + -0x80) = 0x40da29;\n    in_RAX = fcn.004327c0();\ncode_r0x0040da2a:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + -8) = 0x40da3e;\n    fcn.0045ad80();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    *0x20 = puVar11;\n    goto code_r0x0040d540;\n}\n",
        "token_count": 2997
    },
    "0040e200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e200(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t *arg1_00;\n    int64_t *arg2;\n    int64_t *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar5 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar5 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40e279;\n            iVar1 = fcn.0040cea0(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            arg3 = *(*0x20 + -0x19);\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x598440 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = iVar1;\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x40) = 0x40e2ca;\n                fcn.0045d0e0();\n                *(*0x20 + -0x40) = 0x40e2d3;\n                fcn.0045cfe0(arg1, arg2, arg3, in_R9);\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1_00 = arg2[5];\n            if ((arg1_00 == NULL) || (*arg1_00 == 0)) goto code_r0x0040e334;\n            if (arg1_00[1] == 0) {\n                if (*0x598440 == 0) {\n                    arg1_00[1] = *arg1_00;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40e315;\n                    fcn.0045d140(arg1_00, arg2, arg3, in_R9);\n                }\n                if (*0x598440 == 0) {\n                    *arg2[5] = 0;\n                }\n                else {\n                    arg1_00 = NULL;\n                    *(*0x20 + -0x40) = 0x40e334;\n                    fcn.0045d0e0();\n                }\ncode_r0x0040e334:\n                if (uVar5 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0x40) = 0x40e353;\n                        iVar1 = fcn.0040c140();\n                        if (*0x598440 == 0) {\n                            arg1_00 = *(*0x20 + 0x10);\n                            arg1_00[5] = iVar1;\n                        }\n                        else {\n                            arg1_00 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40e375;\n                            fcn.0045cfe0(arg1_00, arg2, arg3, in_R9);\n                        }\n                        uVar5 = *(*0x20 + -0x10);\n                        arg2 = arg1_00;\n                    }\n                    if (*0x598440 == 0) {\n                        *(arg2[5] + 0x10) = uVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40e39b;\n                        fcn.0045d120(arg1_00, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40e3b6;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x40e3c6;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1365
    },
    "0040e3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e3e0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040e480((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040e480(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040ee60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040ee60(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040ee60:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1._0_4_ = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40eeb4;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40eee5;\n                    iVar5 = fcn.0040b760();\n                    if (*0x598440 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40ef07;\n                        fcn.0045cfe0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40ef59;\n                        fcn.0040f160(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1_01 = iVar2;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1_01 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                iVar2 = arg1_01;\n                                if (iVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1_01 + uVar4) == 0) goto code_r0x0040ef8b;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1_01 + uVar4 * 4 + 8)) goto code_r0x0040f0da;\n                            }\n                        }\n                        iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040ef8b:\n                    if (piVar9[3] != 0) goto code_r0x0040f082;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040f082;\n                    }\n                    *(*0x20 + -0x38) = 0x40ef1b;\n                    fcn.0040e200();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040f114;\n        }\n        goto code_r0x0040f125;\n    }\n    goto code_r0x0040f139;\ncode_r0x0040f082:\n    uVar4 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40f095;\n        iVar6 = fcn.0040ca00(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_01 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    *(arg1_01 + (uVar4 & 7)) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1_01 + uVar4 * 4 + 8) = *(*0x20 + 0x18);\n    *piVar9 = *piVar9 + 1;\n    in_R9 = uVar4 & 7;\ncode_r0x0040f0da:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1_01 + 0x28;\n    }\n    *(*0x20 + -0x38) = 0x40f114;\n    fcn.00432f60();\n    arg1._0_4_ = arg1_01;\ncode_r0x0040f114:\n    *(*0x20 + -0x38) = 0x40f125;\n    fcn.00432f60();\ncode_r0x0040f125:\n    unaff_RBX = 0x4c7f48;\n    *(*0x20 + -0x38) = 0x40f138;\n    in_RAX = fcn.004327c0();\ncode_r0x0040f139:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40f14c;\n    fcn.0045ad80();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1._0_4_ = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040ee60;\n}\n",
        "token_count": 2019
    },
    "0040f160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f160(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040f200((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040f200(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040f780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f780(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t arg1_02;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040f780:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40f7d4;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar8 = *(*0x20 + 0x10);\n                *(piVar8 + 1) = *(piVar8 + 1) ^ 4;\n                if (piVar8[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40f805;\n                    iVar5 = fcn.0040b760();\n                    if (*0x598440 == 0) {\n                        piVar8 = *(*0x20 + 0x10);\n                        piVar8[2] = iVar5;\n                    }\n                    else {\n                        piVar8 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40f827;\n                        fcn.0045cfe0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_01 = (1 << (*(piVar8 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar8[3] != 0) {\n                        *(*0x20 + -0x10) = arg1_01;\n                        *(*0x20 + -0x38) = 0x40f879;\n                        fcn.0040faa0(arg1_01);\n                        uVar4 = *(*0x20 + -0x18);\n                        arg1_01 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar8 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = arg1_01 * *(iVar5 + 0x52) + piVar8[2];\n                    do {\n                        arg1_02 = iVar2;\n                        for (arg1 = 0; arg1 < 8; arg1 = arg1 + 1) {\n                            if (*(arg1_02 + arg1) < 2) {\n                                uVar4 = arg1;\n                                iVar2 = arg1_02;\n                                if (iVar6 != 0) {\n                                    uVar4 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar4;\n                                if (*(arg1_02 + arg1) == 0) goto code_r0x0040f8ab;\n                            }\n                            else {\n                                in_R9 = arg1;\n                                if (*(*0x20 + 0x18) == *(arg1_02 + arg1 * 8 + 8)) goto code_r0x0040fa11;\n                            }\n                        }\n                        iVar2 = *(arg1_02 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040f8ab:\n                    if (piVar8[3] != 0) goto code_r0x0040f9a8;\n                    uVar7 = *(piVar8 + 9);\n                    if ((*piVar8 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar8 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar8 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040f9a8;\n                    }\n                    *(*0x20 + -0x38) = 0x40f83b;\n                    fcn.0040e200();\n                    piVar8 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040fa4b;\n        }\n        goto code_r0x0040fa5c;\n    }\n    goto code_r0x0040fa70;\ncode_r0x0040f9a8:\n    arg1 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40f9bb;\n        iVar6 = fcn.0040ca00(arg1_02);\n        iVar5 = *(*0x20 + 8);\n        piVar8 = *(*0x20 + 0x10);\n        arg1 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_02 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = arg1 & 7;\n    *(arg1_02 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    if (*0x598440 == 0) {\n        *(arg1_02 + arg1 * 8 + 8) = in_R8;\n    }\n    else {\n        *(*0x20 + -0x38) = 0x40fa0e;\n        fcn.0045d160(arg1, iVar5, in_R8, in_R9);\n    }\n    *piVar8 = *piVar8 + 1;\ncode_r0x0040fa11:\n    arg1 = arg1 * *(iVar5 + 0x51);\n    if ((*(piVar8 + 1) & 4) != 0) {\n        *(piVar8 + 1) = *(piVar8 + 1) & 0xfb;\n        return arg1 + arg1_02 + 0x48;\n    }\n    *(*0x20 + -0x38) = 0x40fa4b;\n    fcn.00432f60();\ncode_r0x0040fa4b:\n    *(*0x20 + -0x38) = 0x40fa5c;\n    fcn.00432f60();\ncode_r0x0040fa5c:\n    unaff_RBX = 0x4c7f48;\n    *(*0x20 + -0x38) = 0x40fa6f;\n    in_RAX = fcn.004327c0();\ncode_r0x0040fa70:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + -8) = 0x40fa85;\n    fcn.0045ad80();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    *0x20 = puVar9;\n    goto code_r0x0040f780;\n}\n",
        "token_count": 2050
    },
    "0040faa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040faa0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040fb40((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040fb40(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00410360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410360(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    ulong arg1_01;\n    uint64_t arg1_02;\n    int64_t **ppiVar9;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    \ncode_r0x00410360:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x68) = 0x4103b9;\n                uVar5 = (*pcVar2)();\n                *(*0x20 + -0x38) = uVar5;\n                piVar10 = *(*0x20 + 0x10);\n                *(piVar10 + 1) = *(piVar10 + 1) ^ 4;\n                if (piVar10[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_01 = 1;\n                    *(*0x20 + -0x68) = 0x4103ea;\n                    iVar6 = fcn.0040b760();\n                    if (*0x598440 == 0) {\n                        piVar10 = *(*0x20 + 0x10);\n                        piVar10[2] = iVar6;\n                    }\n                    else {\n                        piVar10 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x68) = 0x41040c;\n                        fcn.0045cfe0(arg1_01, arg2, in_R8, in_R9);\n                    }\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                iVar6 = *(*0x20 + 8);\n                do {\n                    arg1_02 = (1 << (*(piVar10 + 9) & 0x3f)) - 1U & uVar5;\n                    if (piVar10[3] != 0) {\n                        *(*0x20 + -0x30) = arg1_02;\n                        *(*0x20 + -0x68) = 0x410465;\n                        fcn.00410760(arg1_02);\n                        uVar5 = *(*0x20 + -0x38);\n                        arg1_02 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + 8);\n                        piVar10 = *(*0x20 + 0x10);\n                    }\n                    uVar1 = *(iVar6 + 0x52);\n                    iVar3 = piVar10[2];\n                    uVar7 = uVar5 >> 0x38;\n                    if (uVar5 >> 0x38 < 5) {\n                        uVar7 = (uVar5 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x41) = uVar7;\n                    unaff_RDI = NULL;\n                    in_R8 = NULL;\n                    ppiVar12 = arg1_02 * uVar1 + iVar3;\n                    do {\n                        ppiVar9 = ppiVar12;\n                        *(*0x20 + -0x10) = ppiVar9;\n                        for (ppiVar12 = NULL; uVar4 = uVar7,  ppiVar12 < 0x8; ppiVar12 = ppiVar12 + 1) {\n                            uVar8 = *(ppiVar9 + ppiVar12);\n                            if (uVar4 == uVar8) {\n                                ppiVar13 = ppiVar9 + ppiVar12 * 2 + 1;\n                                if (ppiVar9[ppiVar12 * 2 + 2] == *(*0x20 + 0x20)) {\n                                    if (*(*0x20 + 0x18) == *ppiVar13) {\n                                        uVar4 = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x28) = ppiVar12;\n                                        *(*0x20 + -0x20) = ppiVar13;\n                                        *(*0x20 + -0x40) = in_R8;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        *(*0x20 + -0x68) = 0x4105d3;\n                                        uVar4 = fcn.00402180(*(*0x20 + 0x20), iVar6);\n                                        uVar4 = uVar4 ^ 1;\n                                        iVar6 = *(*0x20 + 8);\n                                        piVar10 = *(*0x20 + 0x10);\n                                        unaff_RDI = *(*0x20 + -0x18);\n                                        in_R8 = *(*0x20 + -0x40);\n                                        ppiVar13 = *(*0x20 + -0x20);\n                                        ppiVar12 = *(*0x20 + -0x28);\n                                        ppiVar9 = *(*0x20 + -0x10);\n                                        uVar7 = *(*0x20 + -0x41);\n                                    }\n                                    if (uVar4 == 0) {\n                                        in_R9 = ppiVar13;\n                                        if (*0x598440 == 0) {\n                                            *ppiVar13 = *(*0x20 + 0x18);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x68) = 0x410632;\n                                            fcn.0045d0e0();\n                                            unaff_RDI = ppiVar13;\n                                        }\n                                        goto code_r0x004106ae;\n                                    }\n                                }\n                            }\n                            else {\n                                if ((uVar8 < 2) && (unaff_RDI == NULL)) {\n                                    unaff_RDI = ppiVar9;\n                                    in_R8 = ppiVar12;\n                                }\n                                if (uVar8 == 0) goto code_r0x004104a8;\n                            }\n                        }\n                        ppiVar12 = *(ppiVar9 + (*(iVar6 + 0x52) - 8));\n                    } while (ppiVar12 != NULL);\ncode_r0x004104a8:\n                    if (piVar10[3] != 0) goto code_r0x00410637;\n                    uVar8 = *(piVar10 + 9);\n                    if ((*piVar10 + 1U < 9) ||\n                       (uVar5 = 1 << (uVar8 & 0x3f), \n                       *piVar10 + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar8) {\n                            uVar8 = 0xf;\n                        }\n                        if (*(piVar10 + 10) < 1 << (uVar8 & 0xf)) goto code_r0x00410637;\n                    }\n                    *(*0x20 + -0x68) = 0x410425;\n                    fcn.0040e200();\n                    piVar10 = *(*0x20 + 0x10);\n                    uVar5 = *(*0x20 + -0x38);\n                    iVar6 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x004106eb;\n        }\n        goto code_r0x004106fc;\n    }\n    goto code_r0x00410710;\ncode_r0x00410637:\n    ppiVar12 = in_R8;\n    if (unaff_RDI == NULL) {\n        *(*0x20 + -0x68) = 0x41064a;\n        unaff_RDI = fcn.0040ca00(ppiVar9);\n        iVar6 = *(*0x20 + 8);\n        piVar10 = *(*0x20 + 0x10);\n        ppiVar12 = NULL;\n        uVar4 = *(*0x20 + -0x41);\n    }\n    *(unaff_RDI + (ppiVar12 & 7)) = uVar4;\n    ppiVar9 = unaff_RDI + ppiVar12 * 2 + 1;\n    arg1_00 = *(*0x20 + 0x20);\n    in_R9 = *(*0x20 + 0x18);\n    unaff_RDI[ppiVar12 * 2 + 2] = arg1_00;\n    if (*0x598440 == 0) {\n        *ppiVar9 = in_R9;\n        in_R8 = unaff_RDI;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x4106a5;\n        fcn.0045d180(arg1_00, iVar6, unaff_RDI);\n        in_R8 = unaff_RDI;\n    }\n    *piVar10 = *piVar10 + 1;\n    unaff_RDI = ppiVar9;\n    ppiVar9 = in_R8;\ncode_r0x004106ae:\n    uVar4 = *(iVar6 + 0x51);\n    uVar8 = *(piVar10 + 1);\n    arg1 = uVar8;\n    if ((uVar8 & 4) != 0) {\n        *(piVar10 + 1) = uVar8 & 0xfb;\n        return ppiVar9 + ppiVar12 * uVar4 + 0x88;\n    }\n    *(*0x20 + -0x68) = 0x4106eb;\n    fcn.00432f60();\ncode_r0x004106eb:\n    *(*0x20 + -0x68) = 0x4106fc;\n    fcn.00432f60();\ncode_r0x004106fc:\n    unaff_RBX = 0x4c7f48;\n    *(*0x20 + -0x68) = 0x41070f;\n    in_RAX = fcn.004327c0();\ncode_r0x00410710:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + 0x20) = unaff_RDI;\n    *(puVar11 + -8) = 0x410729;\n    fcn.0045ad80();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    unaff_RDI = *(puVar11 + 0x20);\n    *0x20 = puVar11;\n    goto code_r0x00410360;\n}\n",
        "token_count": 2664
    },
    "00410760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410760(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.00410800((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.00410800(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00410c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410c20(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x598444 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.004116a0(in_RAX[1]);\n        }\n        fcn.0045ddc0(*in_RAX);\n        if (*0x598445 != '\\0') {\n            fcn.00403c20(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00410cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410cc0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x598444 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.004116a0(unaff_RDI);\n    }\n    fcn.0045ddc0(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.00430920();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x598440 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.0045d120(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045d480(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 431
    },
    "00410de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410de0(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x598445 != '\\0') {\n        fcn.00403cc0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x598444 != '\\0') {\n            fcn.004116a0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045ddc0(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 226
    },
    "00410ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410ec0(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x598444 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.004116a0(in_RAX[1]);\n    }\n    fcn.0045db00(*in_RAX);\n    return;\n}\n",
        "token_count": 77
    },
    "004110e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004110e0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434760();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434760();\n        }\n        else {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434760();\n        }\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434760();\n    }\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    if (arg1 != 0) goto code_r0x00411230;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00432f60();\ncode_r0x00411230:\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434760();\n        fcn.0041c760(arg1);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "00411320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00411320(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a638);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x598640 != 0) {\n                fcn.004110e0(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x598640 != 0)) {\n        fcn.004110e0(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 461
    },
    "00411d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411d20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x00411da9;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x00411da9:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar6;\n                    if (*(iVar1 + 0x16c8) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042bc60();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x16c0);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x16c0) + 0x10;\n                    *(iVar1 + 0x16c0) = iVar6;\n                    if (*(iVar1 + 0x16c8) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042bc60();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "00411ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411ec0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x598444 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x16c0);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x16c0) + 0x10;\n                            *(iVar1 + 0x16c0) = iVar8;\n                            if (*(iVar1 + 0x16c8) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042bc60();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00454320();\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434760();\n            fcn.00432f60();\n        }\n        fcn.00454320();\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434fe0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434940();\n        fcn.00434760();\n        fcn.00432f60();\n    }\n    fcn.00432f60();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 691
    },
    "00412f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412f00(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x412fd7;\n                    arg3 = fcn.004133a0(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x41302e;\n                        fcn.004346e0();\n                        *(*0x20 + -0x70) = 0x41303f;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x70) = 0x413049;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x70) = 0x41305a;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x70) = 0x413067;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x70) = 0x41306c;\n                        fcn.00434940();\n                        *(*0x20 + -0x70) = 0x413071;\n                        fcn.00434760();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x413085;\n                        uVar1 = fcn.00432f60();\n                        goto code_r0x00413085;\n                    }\ncode_r0x00412feb:\n                    *(*0x20 + -0x70) = 0x41301a;\n                    fcn.0045db00(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00413085;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00413085;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x004131d0:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x00413205;\ncode_r0x004131b9:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x004131d0;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00413085:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x0041319f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00413185;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x413147;\n                                        fcn.004133a0(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x00412feb;\n                                    }\n                                    *(*0x20 + -0x70) = 0x413176;\n                                    fcn.0045d480(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x413185;\n                                fcn.0045d480(0x28);\ncode_r0x00413185:\n                                *(*0x20 + -0x70) = 0x413192;\n                                fcn.0045d480(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x41319f;\n                            fcn.0045d480(0x28);\ncode_r0x0041319f:\n                            *(*0x20 + -0x70) = 0x4131ac;\n                            fcn.0045d480(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x4131b9;\n                        uVar1 = fcn.0045d480(0x28);\n                        goto code_r0x004131b9;\n                    }\n                    *(*0x20 + -0x70) = 0x413205;\n                    fcn.0045d480(0x28);\ncode_r0x00413205:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x413212;\n                    fcn.0045d480(0x28);\n                }\n                *(*0x20 + -0x70) = 0x413217;\n                fcn.00430980();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x413228;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x413259;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2418
    },
    "004133a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.004133a0(uint8_t *arg1)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_RDI;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    \n    puVar11 = NULL;\n    puVar7 = arg1;\n    puVar8 = arg1;\n    puVar6 = NULL;\ncode_r0x00413574:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar6; puVar6 = puVar6 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar7 = puVar11;\n                    puVar7 = puVar7 + 1;\n                }\n                else {\n                    *puVar7 = puVar11 & 0xf | 0xf0;\n                    puVar7[1] = puVar11 >> 4 & 0xf | 0xf0;\n                    puVar7 = puVar7 + 2;\n                }\n                puVar11 = puVar11 >> 8;\n            }\n            uVar2 = *in_RAX;\n            puVar14 = uVar2 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar5 = puVar6;\n            if (uVar2 < '\\0') break;\n            if ((uVar2 & 0x7f) == 0) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar1 = (puVar7 - puVar8) * 8;\n                        for (puVar8 = puVar6 + (-puVar6 & 7); puVar8 != NULL; puVar8 = puVar8 + -8) {\n                            *puVar7 = puVar11;\n                            puVar11 = puVar11 >> 8;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    else {\n                        iVar1 = (puVar7 - puVar8) * 4;\n                        for (puVar8 = puVar6 + (-puVar6 & 3); puVar8 != NULL; puVar8 = puVar8 + -4) {\n                            *puVar7 = puVar11 & 0xf | 0xf0;\n                            puVar11 = puVar11 >> 4;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    return puVar6 + iVar1;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar4 = 0; uVar4 < puVar14 >> 3; uVar4 = uVar4 + 1) {\n                    uVar13 = puVar11 | *in_RAX << (uVar5 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar7 = uVar13;\n                        puVar7 = puVar7 + 1;\n                    }\n                    else {\n                        *puVar7 = uVar13 & 0xf | 0xf0;\n                        puVar7[1] = uVar13 >> 4 & 0xf | 0xf0;\n                        puVar7 = puVar7 + 2;\n                    }\n                    puVar11 = uVar13 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar2 & 7) != 0) {\n                    puVar11 = puVar11 | *in_RAX << (uVar5 & 0x3f);\n                    puVar6 = puVar6 + (uVar2 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if ((uVar2 & 0x7f) == 0) {\n            uVar4 = 0;\n            while( true ) {\n                uVar2 = *in_RAX;\n                puVar14 = puVar14 | (uVar2 & 0x7f) << (uVar4 & 0x3f) & -(uVar4 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar2) break;\n                uVar4 = uVar4 + 7;\n            }\n        }\n        uVar13 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar2 = *in_RAX;\n            uVar13 = uVar13 | -(uVar4 < 0x40) & (uVar2 & 0x7f) << (uVar4 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar2) break;\n            uVar4 = uVar4 + 7;\n        }\n        puVar3 = uVar13 * puVar14;\n        if (puVar14 < 0x3a) break;\n        uVar4 = puVar14 - puVar6;\n        if (unaff_RDI == 1) {\n            uVar13 = uVar4 & 7;\n            puVar14 = puVar7 + -(uVar4 + 7 >> 3);\n            if (uVar13 != 0) {\n                puVar11 = puVar11 | (*puVar14 >> (-(uVar13 - 8) & 0x3f) & -(-(uVar13 - 8) < 0x40)) << (uVar5 & 0x3f);\n                puVar6 = puVar6 + uVar13;\n                puVar3 = puVar3 + -uVar13;\n                puVar14 = puVar14 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar4 = puVar3 >> 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar13 = puVar11 | *puVar14 << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13;\n                puVar11 = uVar13 >> 8;\n                puVar14 = puVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar4 = puVar3 & 7;\n            if (uVar4 != 0) {\n                puVar11 = puVar11 | ((1 << uVar4) - 1U & *puVar14) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar4;\n            }\n        }\n        else {\n            uVar13 = uVar4 & 3;\n            puVar14 = puVar7 + -(uVar4 + 3 >> 2);\n            if (uVar13 != 0) {\n                puVar11 = puVar11 | ((*puVar14 & 0xf) >> (-(uVar13 - 4) & 0x3f) & -(-(uVar13 - 4) < 0x40)) <<\n                                    (uVar5 & 0x3f);\n                puVar6 = puVar6 + uVar13;\n                puVar3 = puVar3 + -uVar13;\n                puVar14 = puVar14 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar4 = puVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar13 = puVar11 | (*puVar14 & 0xf) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13 & 0xf | 0xf0;\n                puVar11 = uVar13 >> 4;\n                puVar14 = puVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar4 = puVar3 & 3;\n            if (uVar4 != 0) {\n                puVar11 = puVar11 | ((1 << uVar4) - 1U & *puVar14) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar4;\n            }\n        }\n    }\n    puVar10 = puVar6;\n    puVar12 = puVar11;\n    puVar15 = puVar7;\n    if (unaff_RDI != 1) {\n        do {\n            puVar15 = puVar15 + -1;\n            puVar9 = puVar6;\n            if (puVar14 <= puVar10) goto code_r0x00413725;\n            puVar10 = puVar10 + 4;\n            puVar12 = puVar12 << 4 | *puVar15 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar15 = puVar15 + -1;\n        puVar9 = puVar6;\n        if (puVar14 <= puVar10) {\ncode_r0x00413725:\n            puVar6 = puVar10;\n            if (puVar14 < puVar10) {\n                puVar15 = -(puVar10 - puVar14 < 0x40);\n                puVar12 = puVar12 >> (puVar10 - puVar14 & 0x3f) & puVar15;\n                puVar6 = puVar14;\n            }\n            if (puVar6 == 0x1) {\n                puVar6 = puVar3;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x0041378e;\n            }\n            puVar10 = puVar6 * 2;\n            puVar14 = puVar6;\n            if (0x39 < puVar10) goto code_r0x0041378e;\n            for (; puVar14 < 0x41; puVar14 = puVar14 * 2) {\n                puVar10 = puVar12;\n                puVar12 = puVar12 << (puVar14 & 0x3f) & -(puVar14 < 0x40) | puVar12;\n                puVar15 = puVar6;\n            }\n            if (puVar6 != NULL) break;\n            puVar3 = fcn.00430980();\n        }\n        puVar10 = puVar10 + 8;\n        puVar12 = puVar12 << 8 | *puVar15;\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar12 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\ncode_r0x0041378e:\n    while (puVar6 <= puVar3) {\n        puVar11 = puVar11 | puVar12 << (puVar9 & 0x3f) & -(puVar9 < 0x40);\n        puVar9 = puVar6 + puVar9;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar9; puVar9 = puVar9 + -8) {\n                *puVar7 = puVar11;\n                puVar11 = puVar11 >> 8;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar9; puVar9 = puVar9 + -4) {\n                *puVar7 = puVar11 & 0xf | 0xf0;\n                puVar11 = puVar11 >> 4;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        puVar3 = puVar3 + -puVar6;\n    }\n    puVar6 = puVar9;\n    if (puVar3 != NULL) {\n        puVar11 = puVar11 | (puVar12 & (1 << (puVar3 & 0x3f) & -(puVar3 < 0x40)) - 1) << (puVar9 & 0x3f) &\n                            -(puVar9 < 0x40);\n        puVar6 = puVar9 + puVar3;\n    }\n    goto code_r0x00413574;\n}\n",
        "token_count": 2901
    },
    "00413ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00413ac0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x413ba0);\n    fcn.0045ac40();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x5988a0;\n    }\n    if (*0x598258 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040c340();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 247
    },
    "00413d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413d40(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 0x88) {\n                iVar3 = *(in_RAX + 0x28 + uVar4 * 8);\n                if (*(iVar3 + 0x38) == *(iVar3 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x10) = uVar4;\n                    if (iVar3 == 0x5988a0) {\ncode_r0x00413dd7:\n                        *(*0x20 + -0x50) = 0x413def;\n                        iVar3 = fcn.00414540();\n                        if (iVar3 != 0) {\n                            if (*(iVar3 + 0x38) != *(iVar3 + 0x60)) {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(iVar3 + 0x58) = *0x56a5c8 + 3;\n                                *(*0x20 + -0x50) = 0x413e27;\n                                iVar3 = fcn.0042ba20();\n                                uVar2 = *(*0x20 + 0x10);\n                                uVar4 = uVar2 >> 1;\n                                if (uVar4 < 0x44) {\n                                    piVar1 = iVar3 + uVar4 * 8 + 0x48;\n                                    LOCK();\n                                    *piVar1 = *piVar1 + (*(*(*0x20 + -0x20) + 0x38) - *(*(*0x20 + -0x20) + 0x60));\n                                    if (uVar2 == 5) {\n                                        iVar5 = *(*0x20 + 8);\n                                        LOCK();\n                                        *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar5 + 0x20);\n                                        *(iVar5 + 0x20) = 0;\n                                    }\n                                    *(*0x20 + -0x50) = 0x413e8f;\n                                    fcn.0042bb20();\n                                    iVar3 = *(*0x20 + -0x20);\n                                    LOCK();\n                                    *0x598ab0 = *0x598ab0 +\n                                                (*(iVar3 + 0x20) * 0x2000 - *(iVar3 + 0x60) * *(iVar3 + 0x68));\n                                    iVar5 = *(*0x20 + 8);\n                                    LOCK();\n                                    *0x598ab8 = *0x598ab8 + *(iVar5 + 8);\n                                    *(iVar5 + 8) = 0;\n                                    if (*0x54a3d0 != '\\0') {\n                                        *(*0x20 + -0x18) = 0;\n                                        *(*0x20 + -0x18) = *0x598ab0;\n                                        *(*0x20 + -0x50) = 0x413f11;\n                                        fcn.0044eb60(*0x20 + -0x18);\n                                        iVar3 = *(*0x20 + -0x20);\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    if (*0x598204 != 0) {\n                                        *(*0x20 + -0x50) = 0x413f30;\n                                        fcn.0041d0a0();\n                                        iVar3 = *(*0x20 + -0x20);\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    *(iVar5 + 0x28 + *(*0x20 + -0x10) * 8) = iVar3;\n                                    return;\n                                }\n                                *(*0x20 + -0x50) = 0x413f5b;\n                                fcn.0045d480(0x44);\n                            }\n                            *(*0x20 + -0x50) = 0x413f6c;\n                            fcn.00432f60();\n                        }\n                        *(*0x20 + -0x50) = 0x413f7d;\n                        fcn.00432f60();\n                    }\n                    else if (*(iVar3 + 0x58) == *0x56a5c8 + 3) {\n                        *(*0x20 + -0x50) = 0x413dd2;\n                        fcn.00414c40();\n                        goto code_r0x00413dd7;\n                    }\n                    *(*0x20 + -0x50) = 0x413f8e;\n                    fcn.00432f60();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x50) = 0x413f9f;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x50) = 0x413fac;\n            in_RAX = fcn.0045d480(0x88);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x413fbb;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1365
    },
    "00413fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00413fe0(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x29) = param_1;\n                *(*0x20 + 0x19) = unaff_DIL;\n                uVar5 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar5 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x18) = uVar5 << 0xd;\n                *(*0x20 + -0x60) = 0x414046;\n                fcn.004217a0();\n                param_1 = *(*0x20 + 0x19);\n                *(*0x20 + -0x2a) = param_1;\n                uVar2 = *(*0x20 + -0x20);\n                unaff_DIL = *(*0x20 + -0x29);\n                *(*0x20 + -0x60) = 0x414069;\n                iVar3 = fcn.00423560();\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x28) = iVar3;\n                    *(*0x20 + -0x2b) = uVar2;\n                    *(*0x20 + -0x60) = 0x414087;\n                    iVar3 = fcn.0042ba20();\n                    LOCK();\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + *(*0x20 + -0x18);\n                    LOCK();\n                    piVar1 = iVar3 + 0x40;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x60) = 0x4140a9;\n                    fcn.0042bb20(iVar3);\n                    LOCK();\n                    *0x598ab0 = *0x598ab0 + *(*0x20 + -0x18);\n                    if (*0x54a3d0 != '\\0') {\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x10) = *0x598ab0;\n                        unaff_DIL = 1;\n                        *(*0x20 + -0x60) = 0x4140f7;\n                        fcn.0044eb60(*0x20 + -0x10);\n                    }\n                    if (*0x598204 != 0) {\n                        *(*0x20 + -0x60) = 0x41410e;\n                        fcn.0041d0a0();\n                    }\n                    if (*(*0x20 + -0x2a) < 0x88) {\n                        *(*0x20 + -0x60) = 0x414153;\n                        fcn.0042b3c0(*(*0x20 + -0x2a) * 0xc0 + 0x56a938, (*0x56a5c8 >> 1 & 1) * 5);\n                        iVar3 = *(*0x20 + -0x28);\n                        *(iVar3 + 0x70) = *(iVar3 + 0x18) + *(*0x20 + 0x10);\n                        uVar5 = *(iVar3 + 0x18) + 0x800000000000;\n                        uVar4 = uVar5 >> 0x2a;\n                        if (uVar4 < 0x40) {\n                            uVar5 = uVar5 >> 0x16;\n                            if (*(*(uVar4 * 8 + 0x56a638) + (uVar5 & 0xfffff) * 8) == 0) {\n                                uVar5 = 0;\n                            }\n                            *(*0x20 + -0x60) = 0x4141ed;\n                            fcn.00412100(uVar5 & 0xffffffff);\n                            return *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x60) = 0x41420b;\n                        fcn.0045d4a0(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x60) = 0x414215;\n                    fcn.0045d480(0x88);\n                }\n                *(*0x20 + -0x60) = 0x414226;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x60) = 0x414237;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        puVar6[0x19] = unaff_DIL;\n        *(puVar6 + -8) = 0x414250;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        unaff_DIL = puVar6[0x19];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1428
    },
    "00414280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414280(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00414280:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        LOCK();\n        *0x598ab8 = *0x598ab8 + *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x2c) = *0x56a5c8;\n        iVar2 = 0;\n        uVar4 = *0x56a5c8;\n        do {\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x48) = 0x4143e5;\n                iVar3 = fcn.0042ba20(uVar4);\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x48) = 0x414408;\n                fcn.0042bb20(iVar2, iVar3);\n                if (*0x598204 != 0) {\n                    *(*0x20 + -0x48) = 0x41441d;\n                    fcn.0041d0a0();\n                }\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x5988a0) {\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x10) = *(iVar3 + 0x38);\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x48) = 0x41430d;\n                iVar2 = fcn.0042ba20();\n                uVar5 = *(*0x20 + -0x20) >> 1 & 0x7f;\n                if (0x43 < uVar5) goto code_r0x00414427;\n                piVar1 = iVar2 + uVar5 * 8 + 0x48;\n                LOCK();\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x10));\n                *(*0x20 + -0x48) = 0x414350;\n                fcn.0042bb20();\n                if (*(*(*0x20 + -0x28) + 0x58) != *(*0x20 + -0x2c) + 1) {\n                    LOCK();\n                    *0x598ab0 = *0x598ab0 + (*(*0x20 + -0x18) - *(*0x20 + -0x10)) * *(*(*0x20 + -0x28) + 0x68);\n                }\n                *(*0x20 + -0x48) = 0x4143a5;\n                fcn.00414c40(*(*0x20 + -0x20), *(*0x20 + -0x20) * 0xc0);\n                iVar2 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x5988a0;\n                uVar4 = *(*0x20 + -0x2c);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00414435;\ncode_r0x00414427:\n    *(*0x20 + -0x48) = 0x414434;\n    in_RAX = fcn.0045d480(0x44);\ncode_r0x00414435:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x41443f;\n    fcn.0045ad80();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x00414280;\n}\n",
        "token_count": 1145
    },
    "00414540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00414540(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t *in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    \ncode_r0x00414540:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*in_RAX >> 1 < 0x44) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = 0x414586;\n            fcn.004217a0();\n            if (*0x54a3d0 != '\\0') {\n                *(*0x20 + -0x78) = 0x414594;\n                fcn.0044faa0();\n            }\n            *(*0x20 + -0x50) = *0x56a5c8;\n            *(*0x20 + -0x4c) = 0;\n            *(*0x20 + -0x5c) = *(*0x20 + -0x50) >> 1 & 1;\n            *(*0x20 + -0x10) = (*(*0x20 + -0x50) >> 1 & 1) * 5;\n            *(*0x20 + -0x78) = 0x4145cb;\n            iVar1 = fcn.0042b560();\n            if (iVar1 != 0) {\n                cVar2 = '\\0';\n                goto code_r0x004145e7;\n            }\n            iVar4 = *(*0x20 + -0x5c);\n            iVar1 = 100;\n            do {\n                if (iVar1 < 0) {\ncode_r0x00414880:\n                    while (-1 < iVar1) {\n                        if (1 < -(iVar4 + -1)) {\n                            *(*0x20 + -0x78) = 0x414c07;\n                            fcn.0045d480(2);\n                            goto code_r0x00414c07;\n                        }\n                        *(*0x20 + -0x58) = iVar1;\n                        *(*0x20 + -0x78) = 0x4148b1;\n                        iVar1 = fcn.0042b560();\n                        if (iVar1 == 0) break;\n                        if (*(iVar1 + 0x58) == *(*0x20 + -0x50) + -2) {\n                            if (*(*0x20 + -0x4c) == '\\0') {\n                                LOCK();\n                                *0x56a5d0 = *0x56a5d0 + 1;\n                                *(*0x20 + -0x4c) = 1;\n                            }\n                            LOCK();\n                            if (*(*0x20 + -0x50) + -2 == *(iVar1 + 0x58)) {\n                                *(iVar1 + 0x58) = *(*0x20 + -0x50) + -1;\n                                uVar3 = 1;\n                                iVar5 = iVar1;\n                            }\n                            else {\n                                uVar3 = 0;\n                                iVar5 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 0;\n                            iVar5 = 0;\n                        }\n                        *(*0x20 + -0x48) = iVar5;\n                        if (uVar3 != '\\0') {\n                            *(*0x20 + -0x38) = iVar1;\n                            *(*0x20 + -0x78) = 0x41493c;\n                            fcn.004208e0();\n                            *(*0x20 + -0x78) = 0x414946;\n                            iVar1 = fcn.00410f80(uVar3, iVar5, param_3, param_4);\n                            if (*(*(*0x20 + -0x48) + 0x38) != iVar1) {\n                                *(*(*0x20 + -0x48) + 0x30) = iVar1;\n                                if (*(*0x20 + -0x4c) != '\\0') {\n                                    *(*0x20 + -0x4c) = 0;\n                                    LOCK();\n                                    iVar4 = *0x56a5d0 + -1;\n                                    bVar8 = *0x56a5d0 == 1;\n                                    *0x56a5d0 = iVar4;\n                                    if ((bVar8 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                                        *(*0x20 + -0x18) = *0x598ab0;\n                                        *(*0x20 + -0x20) = *0x56a610;\n                                        *(*0x20 + -0x28) = *0x56a600;\n                                        *(*0x20 + -0x30) = *0x56a618;\n                                        *(*0x20 + -0x78) = 0x4149f4;\n                                        uVar6 = *0x56a600;\n                                        fcn.004346e0();\n                                        *(*0x20 + -0x78) = 0x414a05;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x78) = 0x414a13;\n                                        fcn.00434ce0();\n                                        *(*0x20 + -0x78) = 0x414a25;\n                                        fcn.00434fe0();\n                                        uVar3 = *(*0x20 + -0x20);\n                                        *(*0x20 + -0x78) = 0x414a3b;\n                                        fcn.00434ce0();\n                                        *(*0x20 + -0x78) = 0x414a4c;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x78) = 0x414a56;\n                                        fcn.00434ce0();\n                                        *(*0x20 + -0x78) = 0x414a67;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x78) = 0x414a72;\n                                        fcn.004349e0(uVar3, uVar6);\n                                        *(*0x20 + -0x78) = 0x414a85;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x78) = 0x414a8a;\n                                        fcn.00434760();\n                                    }\n                                }\n                                cVar2 = '\\0';\n                                iVar1 = *(*0x20 + -0x38);\n                                goto code_r0x004145e7;\n                            }\n                            *(*0x20 + -0x78) = 0x414968;\n                            fcn.0042b3c0(*(*0x20 + -0x10));\n                        }\n                        iVar4 = *(*0x20 + -0x5c);\n                        iVar1 = *(*0x20 + -0x58) + -1;\n                    }\n                    if (*(*0x20 + -0x4c) != '\\0') {\n                        *(*0x20 + -0x4c) = 0;\n                        LOCK();\n                        iVar4 = *0x56a5d0 + -1;\n                        bVar8 = *0x56a5d0 == 1;\n                        *0x56a5d0 = iVar4;\n                        if ((bVar8 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                            *(*0x20 + -0x18) = *0x598ab0;\n                            *(*0x20 + -0x20) = *0x56a610;\n                            *(*0x20 + -0x28) = *0x56a600;\n                            *(*0x20 + -0x30) = *0x56a618;\n                            *(*0x20 + -0x78) = 0x414b25;\n                            uVar6 = *0x56a600;\n                            fcn.004346e0();\n                            *(*0x20 + -0x78) = 0x414b36;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x78) = 0x414b45;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x78) = 0x414b56;\n                            fcn.00434fe0();\n                            uVar3 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x78) = 0x414b6c;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x78) = 0x414b7d;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x78) = 0x414b87;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x78) = 0x414b98;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x78) = 0x414ba5;\n                            fcn.004349e0(uVar3, uVar6);\n                            *(*0x20 + -0x78) = 0x414bb6;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x78) = 0x414bbb;\n                            fcn.00434760();\n                        }\n                    }\n                    *(*0x20 + -0x5d) = *0x54a3d0;\n                    if (*0x54a3d0 != '\\0') {\n                        *(*0x20 + -0x78) = 0x414bd4;\n                        fcn.0044fba0();\n                    }\n                    *(*0x20 + -0x78) = 0x414bde;\n                    iVar1 = fcn.00414d40();\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    cVar2 = *(*0x20 + -0x5d);\ncode_r0x004145e7:\n                    *(*0x20 + -0x38) = iVar1;\n                    if ((*0x54a3d0 != '\\0') && (cVar2 == '\\0')) {\n                        *(*0x20 + -0x78) = 0x4145fe;\n                        fcn.0044fba0();\n                        iVar1 = *(*0x20 + -0x38);\n                    }\n                    if ((*(iVar1 + 0x38) != *(iVar1 + 0x60)) && (*(iVar1 + 0x30) != *(iVar1 + 0x38))) {\n                        *(*0x20 + -0x78) = 0x414626;\n                        fcn.00410f60();\n                        iVar1 = *(*0x20 + -0x38);\n                        *(iVar1 + 0x40) = *(iVar1 + 0x40) >> (*(iVar1 + 0x30) & 0x3f);\n                        return iVar1;\n                    }\n                    *(*0x20 + -0x78) = 0x41465b;\n                    fcn.00432f60();\n                }\n                else {\n                    if (1 < -(iVar4 + -1)) goto code_r0x00414c07;\n                    *(*0x20 + -0x58) = iVar1;\n                    *(*0x20 + -0x78) = 0x4146a5;\n                    iVar1 = fcn.0042b560();\n                    if (iVar1 == 0) {\n                        iVar1 = *(*0x20 + -0x58);\n                        iVar4 = *(*0x20 + -0x5c);\n                        goto code_r0x00414880;\n                    }\n                    if (*(iVar1 + 0x58) == *(*0x20 + -0x50) + -2) {\n                        if (*(*0x20 + -0x4c) == '\\0') {\n                            LOCK();\n                            *0x56a5d0 = *0x56a5d0 + 1;\n                            *(*0x20 + -0x4c) = 1;\n                        }\n                        LOCK();\n                        if (*(*0x20 + -0x50) + -2 == *(iVar1 + 0x58)) {\n                            *(iVar1 + 0x58) = *(*0x20 + -0x50) + -1;\n                            bVar8 = true;\n                            iVar5 = iVar1;\n                        }\n                        else {\n                            bVar8 = false;\n                            iVar5 = 0;\n                        }\n                    }\n                    else {\n                        bVar8 = false;\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0x40) = iVar5;\n                    if (bVar8) {\n                        *(*0x20 + -0x38) = iVar1;\n                        *(*0x20 + -0x78) = 0x41472e;\n                        fcn.004208e0();\n                        if (*(*0x20 + -0x4c) != '\\0') {\n                            *(*0x20 + -0x4c) = 0;\n                            LOCK();\n                            iVar4 = *0x56a5d0 + -1;\n                            bVar8 = *0x56a5d0 == 1;\n                            *0x56a5d0 = iVar4;\n                            if ((bVar8 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                                *(*0x20 + -0x18) = *0x598ab0;\n                                *(*0x20 + -0x20) = *0x56a610;\n                                *(*0x20 + -0x28) = *0x56a600;\n                                *(*0x20 + -0x30) = *0x56a618;\n                                *(*0x20 + -0x78) = 0x4147b1;\n                                uVar6 = *0x56a600;\n                                fcn.004346e0();\n                                *(*0x20 + -0x78) = 0x4147c5;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x78) = 0x4147d3;\n                                fcn.00434ce0();\n                                *(*0x20 + -0x78) = 0x4147e5;\n                                fcn.00434fe0();\n                                uVar3 = *(*0x20 + -0x20);\n                                *(*0x20 + -0x78) = 0x4147fb;\n                                fcn.00434ce0();\n                                *(*0x20 + -0x78) = 0x41480c;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x78) = 0x414816;\n                                fcn.00434ce0();\n                                *(*0x20 + -0x78) = 0x414827;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x78) = 0x414832;\n                                fcn.004349e0(uVar3, uVar6);\n                                *(*0x20 + -0x78) = 0x414845;\n                                fcn.00434fe0();\n                                *(*0x20 + -0x78) = 0x41484a;\n                                fcn.00434760();\n                            }\n                        }\n                        cVar2 = '\\0';\n                        iVar1 = *(*0x20 + -0x38);\n                        goto code_r0x004145e7;\n                    }\n                }\n                iVar1 = *(*0x20 + -0x58) + -1;\n                iVar4 = *(*0x20 + -0x5c);\n            } while( true );\n        }\n        goto code_r0x00414c13;\n    }\n    goto code_r0x00414c26;\ncode_r0x00414c07:\n    *(*0x20 + -0x78) = 0x414c13;\n    fcn.0045d480(2);\ncode_r0x00414c13:\n    *(*0x20 + -0x78) = 0x414c25;\n    in_RAX = fcn.0045d480(0x44);\ncode_r0x00414c26:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x414c30;\n    fcn.0045ad80();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00414540;\n}\n",
        "token_count": 3762
    },
    "00414c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414c40(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x56a5c8;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x56a5c8 + 1) {\n                    *(unaff_RBX + 0x58) = *0x56a5c8 - 1;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x414ce9;\n                    fcn.004208e0();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x56a5c8;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x414ccd;\n                        fcn.0042b3c0((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x414cb3;\n                        fcn.0042b3c0((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x414d05;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x414d15;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "004152e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004152e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x415325;\n            fcn.0042f720();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x4153d0;\n                        fcn.0042f720();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x41540e;\n            fcn.0045e900();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x41542f;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x415445;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41544f;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x415465;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41546f;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x415474;\n            fcn.00434940();\n            *(*0x20 + -0x58) = 0x415479;\n            fcn.00434760();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x41548a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41549a;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1114
    },
    "004154c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004154c0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x41550e;\n            fcn.0042f7a0();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x4155c5;\n                        fcn.0042f7a0();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x415613;\n            fcn.0045e900();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00415689;\n            do {\n                *(*0x20 + -0x60) = 0x415638;\n                fcn.004346e0();\n                *(*0x20 + -0x60) = 0x415649;\n                fcn.00434fe0();\n                *(*0x20 + -0x60) = 0x415653;\n                fcn.00434ce0();\n                *(*0x20 + -0x60) = 0x415665;\n                fcn.00434fe0();\n                *(*0x20 + -0x60) = 0x41566e;\n                fcn.00434ce0();\n                *(*0x20 + -0x60) = 0x415673;\n                fcn.00434940();\n                *(*0x20 + -0x60) = 0x415678;\n                fcn.00434760();\n                *(*0x20 + -0x60) = 0x415689;\n                iVar1 = fcn.00432f60();\ncode_r0x00415689:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x415695;\n            fcn.004346e0();\n            *(*0x20 + -0x60) = 0x4156a6;\n            fcn.00434fe0();\n            *(*0x20 + -0x60) = 0x4156b0;\n            fcn.00434ce0();\n            *(*0x20 + -0x60) = 0x4156c5;\n            fcn.00434fe0();\n            *(*0x20 + -0x60) = 0x4156ce;\n            fcn.00434ce0();\n            *(*0x20 + -0x60) = 0x4156d3;\n            fcn.00434940();\n            *(*0x20 + -0x60) = 0x4156d8;\n            fcn.00434760();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x4156e9;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4156f9;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1481
    },
    "00415720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415720(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iStack24;\n    \n    fcn.0042b960();\n    fcn.0042f720();\n    if (iStack24 != 0) {\n        return;\n    }\n    fcn.0045e900();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.00432f60();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 163
    },
    "004159c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004159c0(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x004159c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x59820c == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x415a0d;\n            fcn.0040a080();\n            if ((*0x5982e0 != NULL) && (*(*0x5982e0 + 2) != 0x65)) goto code_r0x00415a8f;\n            if (*0x5982d0 != NULL) goto code_r0x00415a6b;\n            *(*0x20 + -0x28) = 0x415a3c;\n            *0x5982d0 = fcn.0040c4a0(0x59a0f8);\n            **0x5982d0 = *0x598260;\n            *0x598260 = *0x5982d0;\n            if (*0x598580 != '\\0') goto code_r0x00415a6b;\n            iVar3 = 0;\n            do {\n                if (iVar3 < 0x40) {\n                    uVar2 = iVar3 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 2) * -5\n                    ;\n                    if (4 < uVar2) goto code_r0x00415bc6;\n                }\n                else {\ncode_r0x00415a6b:\n                    puVar1 = *0x5982d0;\n                    puVar4 = *0x5982d0 + 1;\n                    *0x5982d0 = (*0x5982d0)[1];\n                    *puVar4 = *0x5982e0;\n                    *0x5982e0 = puVar1;\ncode_r0x00415a8f:\n                    puVar4 = *0x5982e0;\n                    uVar2 = *(*0x5982e0 + 2);\n                    if (uVar2 < 0x65) {\n                        LOCK();\n                        *(*0x5982e0 + 2) = *(*0x5982e0 + 2) + 1;\n                        iVar3 = uVar2 * 5;\n                        if (*0x598440 == 0) {\n                            puVar4[uVar2 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x415af8;\n                            fcn.0045d180(iVar3, puVar4, puVar4 + uVar2 * 5 + 4);\n                        }\n                        puVar4[iVar3 + 5] = *(*0x20 + 0x18);\n                        if (*0x598440 == 0) {\n                            puVar4[iVar3 + 6] = *(*0x20 + 0x20);\n                            puVar4[iVar3 + 7] = *(*0x20 + 0x28);\n                            puVar4[iVar3 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x415b38;\n                            fcn.0045d0e0(*(*0x20 + 0x20));\n                            *(*0x20 + -0x28) = 0x415b45;\n                            fcn.0045d0e0(*(*0x20 + 0x28));\n                            *(*0x20 + -0x28) = 0x415b52;\n                            fcn.0045d0e0(*(*0x20 + 8));\n                        }\n                        *0x5981c9 = 1;\n                        *(*0x20 + -0x28) = 0x415b67;\n                        fcn.0040a2a0();\n                        return;\n                    }\n                    iVar3 = 0x65;\n                    *(*0x20 + -0x28) = 0x415b7b;\n                    uVar2 = fcn.0045d480(0x65);\n                }\n                unaff_RSI = 0x598580;\n                *(iVar3 + 0x598580) = *(uVar2 + 0x52c190);\n                iVar3 = iVar3 + 1;\n            } while( true );\n        }\n        goto code_r0x00415bd0;\n    }\n    goto code_r0x00415be6;\ncode_r0x00415bc6:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x415bd0;\n    fcn.0045d480(5);\ncode_r0x00415bd0:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x415be5;\n    in_RAX = fcn.00432f60();\ncode_r0x00415be6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x415c05;\n    fcn.0045ad80();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x004159c0;\n}\n",
        "token_count": 1555
    },
    "00415c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00415c40(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if ((*0x5981c8 == '\\0') || (*0x5981c9 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x5981c8 = '\\0';\n        *0x5981c9 = '\\0';\n        uVar1 = *0x543ad0;\n    }\n    fcn.0040a2a0();\n    return uVar1;\n}\n",
        "token_count": 179
    },
    "00415cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415cec)\n\nvoid fcn.00415cc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x5981f8 == 0) {\n        LOCK();\n        *0x5981f8 = 1;\n        fcn.0043d860();\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "004161a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004165e2)\n\nvoid fcn.004161a0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x598668 != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar3 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar5 = 0;\n                        *(*0x20 + -0xd8) = 0x416238;\n                        uVar3 = fcn.00411320(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x004166dd;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x416860;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x416465;\n                                fcn.0045ac40();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            uVar3 = 0x38;\n                                        }\n                                        else {\n                                            uVar3 = 0x48;\n                                        }\n                                        iVar9 = *(iVar11 + uVar3);\n                                        *(*0x20 + -0x60) = iVar9;\n                                        if (iVar9 != iVar4) {\n                                            uVar13 = *(iVar9 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x41638a;\n                                                iVar4 = fcn.004543c0();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x4163a5;\n                                                    iVar4 = fcn.004543c0();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x0041657b;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar3 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar3) goto code_r0x0041657b;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x0041657b;\n                                                if (*(iVar9 + 0x40) != 0) {\n                                                    uVar3 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x416368;\n                                                    iVar4 = fcn.00409cc0(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x0041657b;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar3 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        arg1_00 = uVar7 & 0xffff;\n                                        if (uVar3 <= arg1_00) {\n                                            iVar12 = 0;\n                                            for (iVar9 = 0; iVar9 < arg1_00 - uVar3; iVar9 = iVar9 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar3 << 3 & uVar3 - 0x100000 >> 0x3f) +\n                                                          iVar9 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x4164c5;\n                                            fcn.00415cc0();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x416800;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x416550;\n                                            fcn.0045ac40();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x41657b;\n                                        fcn.0045d540(arg1_00);\ncode_r0x0041657b:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x416585;\n                                            uVar5 = fcn.00454320();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar3;\n                                            *(*0x20 + -0xd8) = 0x41659c;\n                                            fcn.00454320();\n                                            uVar3 = 0x4acdc6;\n                                            *(*0x20 + -0xd8) = 0x4165cf;\n                                            fcn.004485c0(0x22, uVar7, 0x4a7b46, 0xe);\n                                            *(*0x20 + -0xd8) = 0x4165d4;\n                                            fcn.00432f60();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x4165ee;\n                                    uVar5 = fcn.00454320();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x416605;\n                                    fcn.00454320();\n                                    uVar5 = 0x4acdc6;\n                                    *(*0x20 + -0xd8) = 0x416638;\n                                    fcn.004485c0(0x22, uVar7, 0x4a7b46, 0xe);\n                                    *(*0x20 + -0xd8) = 0x41663d;\n                                    fcn.00432f60();\n                                }\n                                *(*0x20 + -0xd8) = 0x416645;\n                                uVar6 = fcn.00454320();\n                                *(*0x20 + -0x50) = uVar6;\n                                *(*0x20 + -0x70) = uVar5;\n                                *(*0x20 + -0xd8) = 0x41665c;\n                                fcn.00454320();\n                                *(*0x20 + -0xd0) = 0x4a88d3;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x4166a5;\n                                fcn.004486e0(0x22, uVar7, 0x4a7b46, 0xe);\n                                *(*0x20 + -0xd8) = 0x4166aa;\n                                fcn.00432f60();\n                            }\n                            *(*0x20 + -0xd8) = 0x4166b2;\n                            fcn.00454320();\n                            *(*0x20 + -0xd8) = 0x4166d8;\n                            fcn.004484e0(0x29, uVar7, 0x4a8148, 0x10);\n                            *(*0x20 + -0xd8) = 0x4166dd;\n                            fcn.00432f60();\ncode_r0x004166dd:\n                            *(*0x20 + -0xd8) = 0x4166ee;\n                            iVar4 = fcn.00432f60();\n                            goto code_r0x004166ee;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x5983d8) {\n                            return;\n                        }\n                        uVar3 = 0x5983d8;\n                        for (iVar4 = 0x531960; iVar4 != 0; iVar4 = *(iVar4 + 0x210)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x004166ee:\n                            uVar3 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x416773;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0xd8) = 0x416785;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0xd8) = 0x41678a;\n                unaff_RDI = fcn.00454320();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x4167b0;\n                fcn.004484e0(0x28, uVar3, 0x4a78eb, 0xd);\n                *(*0x20 + -0xd8) = 0x4167b5;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x4167c6;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x4167e5;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3480
    },
    "004168a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.004168a0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x4168f6;\n                        fcn.0045db00();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x416925;\n                    uVar3 = fcn.0040c4a0(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = 0x4000;\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x416956;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x416986;\n            fcn.004346e0();\n            *(*0x20 + -0x38) = 0x416997;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x41699c;\n            fcn.00434760();\n            *(*0x20 + -0x38) = 0x4169ad;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4169b8;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 827
    },
    "00416a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416a40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = fcn.00404440();\n    if (*0x598440 != 0) {\n        fcn.0045cfe0(param_1, param_2, param_3, param_4);\n        uVar1 = *0x543ad8;\n    }\n    *0x543ad8 = uVar1;\n    fcn.0043d860();\n    fcn.0043d860();\n    fcn.00405360();\n    fcn.00405360();\n    if (*0x598440 == 0) {\n        *0x543ad8 = 0;\n    }\n    else {\n        fcn.0045cfe0(param_1, param_2, param_3, param_4);\n    }\n    *0x59b128 = 1;\n    return;\n}\n",
        "token_count": 273
    },
    "00416be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004170b2)\n// WARNING: Removing unreachable block (ram,0x004170cb)\n\nvoid fcn.00416be0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x38) = unaff_RBX;\n            while( true ) {\n                if (((*0x59b128 == '\\0') || (*0x598228 != 0)) || (*0x59820c != 0)) {\n                    bVar7 = false;\n                }\n                else if (in_RAX == 0) {\n                    bVar7 = *0x598a98 <= *0x598ab0;\n                }\n                else if (in_RAX == 1) {\n                    if (*0x598a80 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x59b798 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x52c278 < unaff_RBX - *0x59b798;\n                    }\n                }\n                else if (in_RAX == 2) {\n                    bVar7 = 0 < arg1 - *0x598dc0;\n                }\n                else {\n                    bVar7 = true;\n                }\n                if (bVar7) {\n                    *(*0x20 + -0x80) = 0x416d5a;\n                    iVar5 = fcn.004201e0();\n                    bVar7 = iVar5 != -1;\n                    arg1._0_4_ = *(*0x20 + -0x4c);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    in_RAX = *(*0x20 + -0x30);\n                }\n                else {\n                    bVar7 = false;\n                }\n                if (!bVar7) break;\n                *0x5445b4 = *0x5445b4 + 1;\n            }\n            *(*0x20 + -0x80) = 0x416d8c;\n            fcn.00442e60(0);\n            if (((*0x59b128 == '\\0') || (*0x598228 != 0)) || (*0x59820c != 0)) {\n                iVar5 = *(*0x20 + -0x30);\n                bVar7 = false;\n            }\n            else {\n                iVar5 = *(*0x20 + -0x30);\n                if (iVar5 == 0) {\n                    bVar7 = *0x598a98 <= *0x598ab0;\n                }\n                else if (iVar5 == 1) {\n                    if (*0x598a80 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x59b798 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x52c278 < *(*0x20 + -0x38) - *0x59b798;\n                    }\n                }\n                else if (iVar5 == 2) {\n                    bVar7 = 0 < *(*0x20 + -0x4c) - *0x598dc0;\n                }\n                else {\n                    bVar7 = true;\n                }\n            }\n            if (!bVar7) {\n                *(*0x20 + -0x80) = 0x416efe;\n                fcn.004431a0(0);\n                return;\n            }\n            *0x598d80 = iVar5 == 2;\n            if (*0x598638 == 1) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n                if (*0x598638 == 2) {\n                    uVar4 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x80) = 0x416e85;\n            fcn.00442e60(0);\n            *(*0x20 + -0x80) = 0x416e98;\n            fcn.00442e60(0);\n            if (*0x54a3d0 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x54a400;\n                *(*0x20 + -0x80) = 0x416ed4;\n                fcn.0044eb60(*0x20 + -0x28);\n                *0x54a400 = *0x54a400 + 1;\n            }\n            iVar5 = 0;\n            while( true ) {\n                if (*0x544458 <= iVar5) {\n                    *(*0x20 + -0x80) = 0x416f32;\n                    fcn.00418500();\n                    *(*0x20 + -0x78) = 0x4b02b0;\n                    *(*0x20 + -0x80) = 0x416f45;\n                    fcn.0045ac40();\n                    *0x598dc4 = *0x598210;\n                    *0x598dc8 = *0x598210;\n                    if (*0x598214 < *0x598210) {\n                        *0x598dc4 = *0x598214;\n                    }\n                    *0x598e00 = *0x598ab0;\n                    *0x598df0 = 0;\n                    *0x598d78 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x80) = 0x416fa5;\n                    fcn.0045ed60();\n                    *0x598dd0 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x48) = *0x598dd0;\n                    *0x598df8 = *0x598dd0;\n                    if (*0x54a3d0 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x80) = 0x41700a;\n                        fcn.0044eb60(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x78) = 0x4b0428;\n                    *(*0x20 + -0x80) = 0x41701a;\n                    fcn.0045ac40();\n                    *(*0x20 + -0x78) = 0x4b02b8;\n                    *(*0x20 + -0x80) = 0x41703e;\n                    fcn.0045ac40();\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417057;\n                    fcn.00419360();\n                    *0x598dc0 = *0x598dc0 + 1;\n                    *(*0x20 + -0x80) = 0x417069;\n                    fcn.0041ce00();\n                    *0x598e18 = *0x598aa0;\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x80) = 0x41708c;\n                        fcn.00440c20();\n                    }\n                    *0x59820c = 1;\n                    *0x598444 = 1;\n                    *0x598440 = 1;\n                    *0x598d10 = 0xffffffff;\n                    *0x598d20 = 0xffffffff;\n                    *(*0x20 + -0x80) = 0x4170f2;\n                    fcn.004196c0();\n                    *(*0x20 + -0x80) = 0x4170f7;\n                    fcn.0041ccc0();\n                    *0x598204 = 1;\n                    *0x598af8 = *(*0x20 + -0x48);\n                    piVar1 = *(iVar5 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar5 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar11, CONCAT48(uVar10, CONCAT44(uVar9, uVar8)));\n                    *(*0x20 + -0x18) = 0x4172a0;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x78) = *0x20 + -0x18;\n                    *(*0x20 + -0x80) = 0x41714f;\n                    fcn.0045ac40();\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417174;\n                    fcn.004431a0(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar7 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar7) {\n                        *(*0x20 + -0x80) = 0x4171cb;\n                        fcn.0045abc0();\n                    }\n                    *(*0x20 + -0x80) = 0x4171dc;\n                    fcn.004431a0(0);\n                    return;\n                }\n                piVar1 = *(*0x544450 + iVar5 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x56a5c8) break;\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x56a5c8;\n            *(*0x20 + -0x38) = *piVar1;\n            *(*0x20 + -0x80) = 0x4171fb;\n            iVar5 = *0x544458;\n            fcn.004346e0();\n            arg1._0_4_ = iVar5;\n            *(*0x20 + -0x80) = 0x41720c;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x417216;\n            fcn.00434de0();\n            *(*0x20 + -0x80) = 0x417227;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x417232;\n            fcn.00434ce0();\n            *(*0x20 + -0x80) = 0x417245;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x41724e;\n            fcn.00434ce0();\n            *(*0x20 + -0x80) = 0x417253;\n            fcn.00434940();\n            *(*0x20 + -0x80) = 0x417258;\n            fcn.00434760();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x80) = 0x417269;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x41727d;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_4_ = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3319
    },
    "004173e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004173e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack33;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00442e60(0);\n    while ((*0x59820c == 1 && (*0x598d10 == *0x598d20))) {\n        if (*0x598c80 == 0) {\n            if (*0x598d08 < *0x598d0c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.00442e60(0);\n        *0x598208 = 0;\n        fcn.0045ac40();\n        if (*0x598208 == 0) {\n            fcn.0045ed60();\n            *0x598de0 = 0x4b0278;\n            *0x598df8 = 0x4b0278;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x598440 == 0) {\n                arg2 = 0x4a6554;\n                *(iVar1 + 200) = 0x4a6554;\n            }\n            else {\n                arg2 = 0x4a6554;\n                fcn.0045d100(arg1, 0x4a6554, param_3, param_4);\n            }\n            if (*0x54a3d0 != '\\0') {\n                uStack32 = 0;\n                fcn.0044eb60(&uStack32);\n            }\n            fcn.0045ac40();\n            cStack33 = '\\0';\n            auStack24 = CONCAT88(&cStack33, 0x4176e0);\n            arg1_00 = auStack24;\n            fcn.0045ac40();\n            if (cStack33 == '\\0') {\n                *0x598204 = 0;\n                fcn.0041a980();\n                fcn.004431a0(0);\n                fcn.00440c20();\n                fcn.0041d1a0();\n                fcn.004177a0();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x598440 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045cfe0(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.0045ac40();\n            fcn.004431a0(0);\n        }\n        else {\n            fcn.004431a0(0);\n        }\n    }\n    fcn.004431a0(0);\n    return;\n}\n",
        "token_count": 790
    },
    "00418ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418ba0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x598660) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x98) = 0x418bdc;\n                fcn.0042a520();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x59820c == 2) {\n                *(*0x20 + -0x28) = *0x598c80;\n                *0x598d18 = in_RAX;\n                if ((*0x598c80 == 0) && (*0x598d0c <= *0x598d08)) {\n                    if (0 < *0x59862c) {\n                        *(*0x20 + -0x98) = 0x418c3b;\n                        fcn.00419880();\n                    }\n                    if (*0x598c80 == 0) {\n                        *(*0x20 + -0x10) = *0x544450;\n                        *(*0x20 + -0x30) = *0x544458;\n                        iVar3 = 0;\n                        iVar4 = *0x544450;\n                        iVar6 = *0x544458;\n                        while( true ) {\n                            iVar2 = *0x544458;\n                            iVar1 = *0x544450;\n                            if (iVar6 <= iVar3) {\n                                *0x598ac0 = *0x598d00;\n                                for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n                                    iVar4 = *(*(iVar1 + iVar3 * 8) + 0x40);\n                                    if (iVar4 != 0) {\n                                        *(iVar4 + 8) = 0;\n                                    }\n                                }\n                                *0x598ab0 = *0x598d00;\n                                *0x598ab8 = *0x598ac8;\n                                if (*0x54a3d0 != '\\0') {\n                                    *(*0x20 + -0x20) = 0;\n                                    *(*0x20 + -0x20) = *0x598d00;\n                                    *(*0x20 + -0x98) = 0x418d9d;\n                                    fcn.0044eb60(*0x20 + -0x20);\n                                }\n                                return;\n                            }\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x59862c < 1) {\n                                *(*0x20 + -0x98) = 0x418cbe;\n                                fcn.0042bbe0();\n                            }\n                            else {\n                                *(*0x20 + -0x98) = 0x418cae;\n                                fcn.0042bd20();\n                            }\n                            iVar3 = *(*(*0x20 + -0x18) + 0x1698);\n                            if ((iVar3 != 0) &&\n                               ((*(iVar3 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x16a0) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x98) = 0x418c74;\n                            fcn.00421d60();\n                            iVar3 = *(*0x20 + -0x38) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar6 = *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x98) = 0x418db2;\n                        fcn.004346e0();\n                        *(*0x20 + -0x40) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x61) = *(*(*0x20 + -0x18) + 0x5ae);\n                        *(*0x20 + -0x98) = 0x418dcf;\n                        fcn.004346e0();\n                        *(*0x20 + -0x98) = 0x418de5;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x98) = 0x418def;\n                        fcn.00434de0();\n                        *(*0x20 + -0x98) = 0x418e05;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x98) = 0x418e0f;\n                        fcn.00434980();\n                        *(*0x20 + -0x98) = 0x418e14;\n                        fcn.00434760();\n                        if (*(*(*0x20 + -0x18) + 0x1698) == 0) {\n                            *(*0x20 + -0x98) = 0x418ee5;\n                            fcn.004346e0();\n                            *(*0x20 + -0x98) = 0x418ef6;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x98) = 0x418efb;\n                            fcn.00434760();\n                        }\n                        else {\n                            *(*0x20 + -0x30) = *(*(*(*0x20 + -0x18) + 0x1698) + 0x10);\n                            *(*0x20 + -0x98) = 0x418e37;\n                            fcn.004346e0();\n                            *(*0x20 + -0x98) = 0x418e48;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x98) = 0x418e52;\n                            fcn.00434de0();\n                            *(*0x20 + -0x98) = 0x418e57;\n                            fcn.00434760();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x16a0) == 0) goto code_r0x00418ec0;\n                        *(*0x20 + -0x30) = *(*(*(*0x20 + -0x18) + 0x16a0) + 0x10);\n                        *(*0x20 + -0x98) = 0x418e76;\n                        fcn.004346e0();\n                        *(*0x20 + -0x98) = 0x418e87;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x98) = 0x418e91;\n                        fcn.00434de0();\n                        *(*0x20 + -0x98) = 0x418e96;\n                        fcn.00434760();\n                        do {\n                            *(*0x20 + -0x98) = 0x418e9b;\n                            fcn.004346e0();\n                            *(*0x20 + -0x98) = 0x418ea5;\n                            fcn.00434940();\n                            *(*0x20 + -0x98) = 0x418eaa;\n                            fcn.00434760();\n                            *(*0x20 + -0x98) = 0x418ebb;\n                            fcn.00432f60();\ncode_r0x00418ec0:\n                            *(*0x20 + -0x98) = 0x418ec5;\n                            fcn.004346e0();\n                            *(*0x20 + -0x98) = 0x418ed6;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x98) = 0x418edb;\n                            fcn.00434760();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x98) = 0x418f16;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x48) = *0x598d08;\n                *(*0x20 + -0x50) = *0x598d0c;\n                *(*0x20 + -0x30) = *0x598d28;\n                *(*0x20 + -0x38) = *0x598d30;\n                *(*0x20 + -0x58) = *0x598d38;\n                *(*0x20 + -0x60) = *0x598d40;\n                *(*0x20 + -0x98) = 0x418f65;\n                fcn.004346e0();\n                *(*0x20 + -0x98) = 0x418f76;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x418f85;\n                fcn.00434e40();\n                *(*0x20 + -0x98) = 0x418f96;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x418fa5;\n                fcn.00434ce0();\n                *(*0x20 + -0x98) = 0x418fb6;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x418fc5;\n                fcn.00434ce0();\n                *(*0x20 + -0x98) = 0x418fd6;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x418fe5;\n                fcn.00434de0();\n                *(*0x20 + -0x98) = 0x418ff6;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x419005;\n                fcn.00434de0();\n                *(*0x20 + -0x98) = 0x419016;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x419025;\n                fcn.00434de0();\n                *(*0x20 + -0x98) = 0x419036;\n                fcn.00434fe0();\n                *(*0x20 + -0x98) = 0x419045;\n                fcn.00434de0();\n                *(*0x20 + -0x98) = 0x41904a;\n                fcn.00434940();\n                *(*0x20 + -0x98) = 0x41904f;\n                fcn.00434760();\n                *(*0x20 + -0x98) = 0x419065;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x98) = 0x419076;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x419085;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2610
    },
    "004190a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004190a0(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59820c == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4190d9;\n                fcn.0040a080();\n                *0x56a5c8 = *0x56a5c8 + 2;\n                *0x56a5cc = 0;\n                *0x56a600 = 0;\n                *0x56a8a0 = *0x56a888;\n                *0x56a8a8 = *0x56a890;\n                if (*0x598440 == 0) {\n                    *0x56a898 = *0x56a880;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x419137;\n                    fcn.0045d0e0();\n                }\n                *(*0x20 + -0x28) = 0x41914d;\n                *0x56a628 = in_XMM15;\n                fcn.0040a2a0();\n                *0x5445bc = 0;\n                if (*(*0x20 + 8) == 2) {\n                    *(*0x20 + -0x28) = 0x419174;\n                    fcn.0040a080();\n                    *0x56a618 = 0;\n                    *(*0x20 + -0x28) = 0x41918d;\n                    fcn.0040a2a0();\n                    while( true ) {\n                        *(*0x20 + -0x28) = 0x4191e8;\n                        iVar2 = fcn.004201e0();\n                        if (iVar2 == -1) break;\n                        *0x5445b8 = *0x5445b8 + 1;\n                    }\n                    *(*0x20 + -0x28) = 0x4191f3;\n                    fcn.00422480();\n                    do {\n                        *(*0x20 + -0x28) = 0x4191fa;\n                        cVar1 = fcn.00422580();\n                    } while (cVar1 != '\\0');\n                    *(*0x20 + -0x28) = 0x419205;\n                    fcn.00429960();\n                    *(*0x20 + -0x28) = 0x41920a;\n                    fcn.004299e0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41919d;\n                fcn.0040a080();\n                if (*0x5445b0 != '\\0') {\n                    *0x5445b0 = '\\0';\n                    *(*0x20 + -0x28) = 0x4191c5;\n                    fcn.00436ac0(1);\n                }\n                *(*0x20 + -0x28) = 0x4191d3;\n                fcn.0040a2a0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x419225;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x419230;\n        fcn.0045f460();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 922
    },
    "00419360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419360(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x543af8 != NULL) {\n        (***0x543af8)();\n    }\n    fcn.0040a080();\n    iVar2 = *0x544dc0;\n    while (iVar2 != 0) {\n        iVar3 = *(iVar2 + 8);\n        if (*0x598440 == 0) {\n            *(iVar2 + 8) = 0;\n            iVar2 = iVar3;\n        }\n        else {\n            iVar2 = iVar3;\n            fcn.0045d0e0(0);\n        }\n    }\n    if (*0x598440 == 0) {\n        *0x544dc0 = 0;\n    }\n    else {\n        fcn.0045d0e0(0);\n    }\n    fcn.0040a2a0();\n    fcn.0040a080();\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        arg1 = 0x544dd0;\n        iVar3 = *(iVar2 * 8 + 0x544dd0);\n        while (iVar3 != 0) {\n            iVar1 = *(iVar3 + 0x28);\n            if (*0x598440 == 0) {\n                *(iVar3 + 0x28) = 0;\n                iVar3 = iVar1;\n            }\n            else {\n                iVar2 = fcn.0045d100(arg1, 0, param_3, param_4);\n                iVar3 = iVar1;\n            }\n        }\n        if (*0x598440 == 0) {\n            *(arg1 + iVar2 * 8) = 0;\n        }\n        else {\n            iVar2 = fcn.0045d0e0(0);\n        }\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 520
    },
    "004194a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.004194a0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [16];\n    \n    if (unaff_RDI < 10000000) {\n        uVar9 = (unaff_RDI >> 1) / 500;\n        if (uVar9 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                fcn.0045d500(1, 0);\n                uVar9 = arg1;\n            }\n            arg1 = unaff_RBX;\n            iVar6 = fcn.0045d480(unaff_RBX);\n            goto code_r0x0041953c;\n        }\n        iVar6 = 3;\n        for (; 99 < uVar9; uVar9 = uVar9 / 10) {\ncode_r0x0041953c:\n            iVar6 = iVar6 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar6;\n        uVar7 = arg1_00 - 1;\n        uVar10 = unaff_RBX - 1;\ncode_r0x0041956d:\n        uVar12 = uVar10;\n        if ((uVar9 < 10) && (uVar12 < uVar7)) {\n            if (uVar12 < unaff_RBX) {\n                in_RAX[uVar12] = uVar9 + '0';\n                return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n            }\n            fcn.0045d480(unaff_RBX);\n            goto code_r0x004195fe;\n        }\n        uVar10 = uVar9 / 10;\n        arg1_00 = uVar9 % 10;\n        uVar9 = uVar10;\n        if (uVar12 < unaff_RBX) goto code_r0x0041959b;\n        goto code_r0x00419606;\n    }\n    uVar9 = unaff_RDI / 1000000;\n    uVar7 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar10 = uVar7;\ncode_r0x00419617:\n    uVar12 = uVar10;\n    cVar2 = uVar9;\n    if ((uVar9 < 10) && (uVar12 < uVar7)) {\n        if (uVar12 < arg1_00) {\n            in_RAX[uVar12] = cVar2 + '0';\n            return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n        }\n        fcn.0045d480(arg1_00);\n        goto code_r0x004196ac;\n    }\n    uVar9 = uVar9 / 10;\n    if (uVar12 < arg1_00) goto code_r0x0041964b;\n    goto code_r0x004196b4;\ncode_r0x0041959b:\n    in_RAX[uVar12] = arg1_00 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 != uVar7) goto code_r0x0041956d;\n    if (uVar10 < unaff_RBX) {\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n        goto code_r0x0041956d;\n    }\ncode_r0x004195fe:\n    fcn.0045d480(unaff_RBX);\ncode_r0x00419606:\n    arg1 = unaff_RBX;\n    uVar7 = arg1;\n    uVar10 = fcn.0045d480(arg1);\n    goto code_r0x00419617;\ncode_r0x0041964b:\n    in_RAX[uVar12] = cVar2 + uVar9 * -10 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 == uVar7) {\n        if (arg1_00 <= uVar10) {\ncode_r0x004196ac:\n            fcn.0045d480(arg1_00);\ncode_r0x004196b4:\n            fcn.0045d480(arg1_00);\n            while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n                fcn.0045ad80();\n            }\n            if (*0x543ae8 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x543ae8;\n                iVar8 = (*0x543ae8)[1];\n            }\n            *0x598d28 = in_XMM15;\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n                if (*0x598d28 < uVar9) {\n                    *0x598d28 = CONCAT88(*0x598d30, uVar9);\n                }\n            }\n            if (*0x543ae8 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x543ae8;\n                iVar8 = (*0x543ae8)[1];\n            }\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n                if (*0x598d30 < uVar9) {\n                    *0x598d28 = CONCAT88(uVar9, *0x598d28);\n                }\n            }\n            *0x56a8b8 = *0x56a888;\n            *0x56a8c0 = *0x56a888;\n            if (*0x598440 == 0) {\n                *0x56a8b0 = *0x56a880;\n                *0x598d38 = *0x56a888;\n            }\n            else {\n                *0x598d38 = fcn.0045d0e0();\n            }\n            iVar4 = SUB164(*0x598d28, 0);\n            iVar5 = SUB164(*0x598d28 >> 0x40, 0);\n            iVar3 = *0x598d38;\n            *0x598d58 = *0x598268 + iVar4 + iVar5 + iVar3 + 2;\n            *0x598d08 = 0;\n            *0x598d0c = iVar4 + iVar5 + iVar3 + *0x598268 + 2;\n            *0x598d40 = *0x598268;\n            *0x598d48 = 2;\n            *0x598d4c = iVar4 + 2;\n            *0x598d50 = iVar5 + iVar4 + 2;\n            *0x598d54 = iVar3 + iVar4 + iVar5 + 2;\n            return *0x598d58;\n        }\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n    }\n    goto code_r0x00419617;\n}\n",
        "token_count": 1859
    },
    "004196c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004196c0(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x543ae8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x543ae8;\n        iVar5 = (*0x543ae8)[1];\n    }\n    *0x598d28 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x598d28 < uVar8) {\n            *0x598d28 = CONCAT88(*0x598d30, uVar8);\n        }\n    }\n    if (*0x543ae8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x543ae8;\n        iVar5 = (*0x543ae8)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x598d30 < uVar8) {\n            *0x598d28 = CONCAT88(uVar8, *0x598d28);\n        }\n    }\n    *0x56a8b8 = *0x56a888;\n    *0x56a8c0 = *0x56a888;\n    if (*0x598440 == 0) {\n        *0x56a8b0 = *0x56a880;\n        *0x598d38 = *0x56a888;\n    }\n    else {\n        *0x598d38 = fcn.0045d0e0();\n    }\n    iVar3 = SUB164(*0x598d28, 0);\n    iVar4 = SUB164(*0x598d28 >> 0x40, 0);\n    iVar2 = *0x598d38;\n    *0x598d08 = 0;\n    *0x598d0c = iVar3 + iVar4 + iVar2 + *0x598268 + 2;\n    *0x598d40 = *0x598268;\n    *0x598d48 = 2;\n    *0x598d4c = iVar3 + 2;\n    *0x598d50 = iVar4 + iVar3 + 2;\n    *0x598d54 = iVar2 + iVar3 + iVar4 + 2;\n    *0x598d58 = *0x598268 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 788
    },
    "0041a0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a0c0(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x56a8b8;\n            if (unaff_RBX < *0x56a8b8) {\n                uVar5 = *(*0x56a8b0 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x56a5c8;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x56a638) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x56a5c8;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x5981d4 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x0041a297:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x41a2a5;\n                                                    fcn.004346e0();\n                                                    *(*0x20 + -0x80) = 0x41a2b6;\n                                                    fcn.00434fe0();\n                                                    *(*0x20 + -0x80) = 0x41a2bf;\n                                                    fcn.00434ce0();\n                                                    *(*0x20 + -0x80) = 0x41a2c5;\n                                                    fcn.00434900();\n                                                    *(*0x20 + -0x80) = 0x41a2ce;\n                                                    fcn.00434ce0();\n                                                    *(*0x20 + -0x80) = 0x41a2d3;\n                                                    fcn.00434940();\n                                                    *(*0x20 + -0x80) = 0x41a2d8;\n                                                    fcn.00434760();\n                                                    *(*0x20 + -0x80) = 0x41a2e9;\n                                                    fcn.00432f60();\n                                                    goto code_r0x0041a2e9;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41a1ec;\n                                            fcn.0040a080();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x41a297;\n                                                        fcn.00430980();\n                                                        goto code_r0x0041a297;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x41a265;\n                                                    fcn.0041be00(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x41a286;\n                                                    fcn.0041bc60(0x52c180);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x41a205;\n                                            fcn.0040a2a0();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x0041a16c;\n                                        }\ncode_r0x0041a2e9:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x41a2f3;\n                                        fcn.004346e0();\n                                        *(*0x20 + -0x80) = 0x41a305;\n                                        fcn.00434fe0();\n                                        *(*0x20 + -0x80) = 0x41a312;\n                                        fcn.00434ce0();\n                                        *(*0x20 + -0x80) = 0x41a317;\n                                        fcn.00434940();\n                                        *(*0x20 + -0x80) = 0x41a31c;\n                                        fcn.00434760();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41a32d;\n                                        fcn.00432f60();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41a33a;\n                                    fcn.0045d4a0(0x200);\n                                    goto code_r0x0041a33a;\n                                }\ncode_r0x0041a16c:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041a33a:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x41a347;\n                fcn.0045d4a0(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41a34f;\n            in_RAX = fcn.0045d480(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41a35f;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1929
    },
    "0041a380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a380(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar4 = *0x598ad0;\n            iVar5 = -*(in_RAX + 0x180) * *0x598b08;\n            iVar3 = -*(in_RAX + 0x180);\n            if (iVar5 < 0x10000) {\n                iVar3 = *0x4c79b8 * *0x598b10;\n            }\n            arg3 = 0x10000;\n            if (iVar5 < 0x10000) {\n                iVar5 = 0x10000;\n            }\n            if (0 < *0x598ad0) {\n                if (*0x598ad0 < iVar5) {\n                    *(in_RAX + 0x180) = *0x598ad0 * *0x598b10 + *(in_RAX + 0x180) + 1;\n                    iVar3 = iVar4;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + iVar3;\n                    iVar3 = iVar5;\n                }\n                LOCK();\n                *0x598ad0 = *0x598ad0 - iVar3;\n                if (iVar5 == iVar3) {\n                    if (bVar1) {\n                        fcn.0044eb60(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x54a3d0 != '\\0') && (!bVar1)) {\n                fcn.0044eb60(0);\n                bVar1 = true;\n            }\n            fcn.0045ac40();\n            iVar4 = *(in_RAX + 0x88);\n            if (*0x598440 == 0) {\n                *(in_RAX + 0x88) = 0;\n                iVar3 = in_RAX;\n            }\n            else {\n                iVar3 = fcn.0045d100(iVar4, 0, arg3, iVar3);\n            }\n            if (iVar4 != 0) {\n                fcn.004173e0();\n                iVar3 = in_RAX;\n            }\n            if (-1 < *(iVar3 + 0x180)) goto code_r0x0041a5d1;\n            if (*(iVar3 + 0xb1) == '\\0') break;\n            fcn.0045abc0();\n        }\n        cVar2 = fcn.0041aa00();\n    } while (cVar2 == '\\0');\ncode_r0x0041a5d1:\n    if (bVar1) {\n        fcn.0044eb60(0);\n    }\n    return;\n}\n",
        "token_count": 772
    },
    "0041a660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a660(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = in_RAX + 0x88;\n            if (*0x598440 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x50) = 0x41a69e;\n                in_RAX = fcn.0045d0e0();\n            }\n            if (*0x598204 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x41a6d2;\n            fcn.0045ed60();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            LOCK();\n            iVar2 = *0x598d20 + -1;\n            uVar6 = *0x598d20 - 1;\n            uVar8 = *0x598d10;\n            *0x598d20 = iVar2;\n            if (*0x598d10 != uVar6) {\n                *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                *(*0x20 + -0x50) = 0x41a725;\n                fcn.00437220(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x50) = 0x41a74f;\n                uVar5 = fcn.0041ba60();\n                *(*0x20 + -0x20) = uVar5;\n                uVar5 = 2;\n                *(*0x20 + -0x50) = 0x41a768;\n                fcn.00437220(2);\n                dVar4 = *0x598b10;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x180) = *(*0x20 + -0x20) * *0x598b10 + *(iVar1 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x598d20 + 1;\n                uVar8 = *0x598d20 + 1;\n                *0x598d20 = iVar2;\n                if (uVar8 <= *0x598d10) {\n                    if (*0x598d10 == uVar8) {\n                        if (*0x598c80 == 0) {\n                            if (*0x598d08 < *0x598d0c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x598440 == 0) {\n                                *(iVar1 + 0x88) = iVar1;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x41a818;\n                                fcn.0045d140(uVar5, uVar8, param_3, param_4);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x50) = 0x41a81d;\n                    fcn.0045ed60();\n                    iVar1 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    iVar7 = (*(*0x20 + -0x48) - *(*0x20 + -0x28)) + *(iVar1 + 0x1678);\n                    *(iVar1 + 0x1678) = iVar7;\n                    if (5000 < iVar7) {\n                        LOCK();\n                        *0x598ad8 = *0x598ad8 + iVar7;\n                        *(iVar1 + 0x1678) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x34) = uVar8;\n                *(*0x20 + -0x2c) = *0x598d10;\n                *(*0x20 + -0x50) = 0x41a897;\n                fcn.004346e0(dVar4);\n                uVar6 = uVar5;\n                *(*0x20 + -0x50) = 0x41a8a8;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41a8b1;\n                fcn.00434ce0();\n                *(*0x20 + -0x50) = 0x41a8c5;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41a8ce;\n                fcn.00434ce0();\n                *(*0x20 + -0x50) = 0x41a8d3;\n                fcn.00434940();\n                *(*0x20 + -0x50) = 0x41a8d8;\n                fcn.00434760();\n                uVar8 = 0x17;\n                *(*0x20 + -0x50) = 0x41a8e9;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x30) = uVar6;\n            *(*0x20 + -0x2c) = uVar8;\n            *(*0x20 + -0x50) = 0x41a8f6;\n            fcn.004346e0();\n            *(*0x20 + -0x50) = 0x41a907;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x41a910;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x41a925;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x41a92e;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x41a933;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x41a938;\n            fcn.00434760();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x50) = 0x41a949;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x41a959;\n        fcn.0045f460();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1787
    },
    "0041ab40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041ab40(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x598b10,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598da0 == 0) {\n        LOCK();\n        iVar2 = *0x598ad0;\n        *0x598ad0 = *0x598ad0 + in_RAX;\n        return iVar2;\n    }\n    fcn.0040a080();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x598da0;\n        if ((*0x598da0 == 0) || (iVar2 < 1)) goto code_r0x0041ac69;\n        if ((*0x598da0 != 0) && (*0x598da0 = *(*0x598da0 + 0xa0),  *0x598da0 == 0)) {\n            *0x598da8 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.00436ac0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x598da8 != 0) {\n        *(*0x598da8 + 0xa0) = iVar3;\n        iVar2 = *0x598da0;\n    }\n    *0x598da0 = iVar2;\n    *0x598da8 = iVar3;\n    iVar2 = 0;\ncode_r0x0041ac69:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x598ad0;\n        *0x598ad0 = *0x598ad0 + iVar2 * *0x598b08;\n    }\n    iVar2 = fcn.0040a2a0(iVar3);\n    return iVar2;\n}\n",
        "token_count": 541
    },
    "0041ace0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041ace0(void)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    char cVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x178 && *0x20 + -0x178 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x1f8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar5 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar5 < 3) {\n                    if (uVar5 == 1) goto code_r0x0041ad49;\n                }\n                else {\n                    if (4 < uVar5) {\n                        if (uVar5 == 6) {\n                            return;\n                        }\ncode_r0x0041aebc:\n                        *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n                        puVar6 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar6;\n                        *(*0x20 + -0x200) = 0x41aed7;\n                        fcn.004346e0();\n                        *(*0x20 + -0x200) = 0x41aee8;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x200) = 0x41aef5;\n                        fcn.00434f60();\n                        *(*0x20 + -0x200) = 0x41af06;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x200) = 0x41af10;\n                        fcn.00434de0();\n                        *(*0x20 + -0x200) = 0x41af25;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x200) = 0x41af30;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x200) = 0x41af35;\n                        fcn.00434940();\n                        *(*0x20 + -0x200) = 0x41af3a;\n                        fcn.00434760();\n                        *(*0x20 + -0x200) = 0x41af4b;\n                        fcn.00432f60();\n                        while( true ) {\n                            *(*0x20 + -0x28) = *(*(*0x20 + -0x28) + 0x28);\ncode_r0x0041af5f:\n                            if (*(*0x20 + -0x28) == 0) break;\n                            if (*(*(*0x20 + -0x28) + 0x18) != 0) {\n                                *(*0x20 + -0x200) = 0x41af99;\n                                fcn.0041bc60(0x52c180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x28) + 0x28) != 0) {\n                                *(*0x20 + -0x200) = 0x41afd2;\n                                fcn.0041bc60(0x52c180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x28) + 5) != '\\0') {\n                                *(*0x20 + -0x200) = 0x41b013;\n                                fcn.0041bc60(0x52c180);\n                                puVar6 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar6 + 8) != 0) {\n                            *(*0x20 + -0x200) = 0x41b03a;\n                            fcn.0041f8a0(0);\n                        }\n                        iVar4 = 0;\n                        *(*0x20 + -0x200) = 0x41b052;\n                        uVar2 = fcn.0041fcc0(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar2;\n                        do {\n                            *(*0x20 + -0x200) = 0x41b065;\n                            iVar3 = fcn.0041f9e0();\n                            if (iVar3 == 0) {\n                                while (iVar4 = *(*0x20 + -0x50),  iVar4 != 0) {\n                                    *(*0x20 + -0x50) = *(iVar4 + 0x18);\n                                    *(iVar4 + 0x10) = 0;\n                                    *(*0x20 + -0x200) = 0x41b19e;\n                                    fcn.00422260();\n                                }\n                                if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0)) {\n                                    return;\n                                }\n                                iVar4 = 0x19;\n                                *(*0x20 + -0x200) = 0x41b1ee;\n                                iVar3 = fcn.00432f60();\n                            }\n                            else {\n                                iVar3 = iVar3 - *(*0x20 + -0x80);\n                                puVar6 = *(*0x20 + -0x38);\n                            }\n                            while (cVar7 = iVar4,  puVar6 != NULL) {\n                                if (iVar3 < *puVar6) {\n                                    puVar6 = *(puVar6 + 4);\n                                }\n                                else {\n                                    if (iVar3 < *puVar6 + puVar6[1]) goto code_r0x0041b088;\n                                    puVar6 = *(puVar6 + 6);\n                                }\n                            }\n                            puVar6 = NULL;\ncode_r0x0041b088:\n                            if ((puVar6 != NULL) && (iVar3 = *(puVar6 + 2),  iVar3 != 0)) {\n                                *(puVar6 + 2) = 0;\n                                uVar2 = *(iVar3 + 0x10);\n                                if (*(iVar3 + 8) < 0) {\n                                    *(*0x20 + -0x1a5) = cVar7;\n                                    *(*0x20 + -0x198) = puVar6;\n                                    *(*0x20 + -0x30) = iVar3;\n                                    *(*0x20 + -0x200) = 0x41b0ce;\n                                    iVar4 = fcn.00413a20();\n                                    uVar2 = *(iVar4 + 0x18);\n                                    puVar6 = *(*0x20 + -0x198);\n                                    cVar7 = *(*0x20 + -0x1a5);\n                                }\n                                else {\n                                    iVar4 = 0;\n                                }\n                                *(*0x20 + -400) = iVar4;\n                                puVar6 = *puVar6 + *(*0x20 + -0x80);\n                                if (cVar7 == '\\0') {\n                                    *(*0x20 + -0x200) = 0x41b15c;\n                                    fcn.0041bc60(uVar2);\n                                }\n                                else {\n                                    *(*0x20 + -0x200) = 0x41b12b;\n                                    fcn.0041c180(uVar2);\n                                }\n                                iVar4 = *(*0x20 + -400);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x200) = 0x41b17c;\n                                    fcn.004244e0(2);\n                                }\n                            }\n                        } while( true );\n                    }\ncode_r0x0041ad49:\n                    if (unaff_R14 != in_RAX) {\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar9 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar9 = false;\n                            }\n                        }\n                        else {\n                            bVar9 = false;\n                        }\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar9) {\n                            *(*0x20 + -0x200) = 0x41ad92;\n                            fcn.00447620();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x208) = unaff_RBP;\n                        *(*0x20 + -0x200) = 0x41adba;\n                        puVar1 = fcn.0045d6d4();\n                        uVar2 = puVar1[1];\n                        *(*0x20 + -0x80) = *puVar1;\n                        *(*0x20 + -0x78) = uVar2;\n                        if (puVar1[10] != 0) {\n                            *(*0x20 + -0x200) = 0x41adfc;\n                            fcn.0041bc60(0x52c180);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41b3a0;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x1f8) = 0;\n                        *(*0x20 + -0x200) = 0x41ae77;\n                        fcn.00450500(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        *(*0x20 + -0x200) = 0x41ae8e;\n                        fcn.004502e0(0);\n                        puVar6 = *(*0x20 + 8);\n                        *(*0x20 + -0x28) = *(puVar6 + 10);\n                        goto code_r0x0041af5f;\n                    }\n                    *(*0x20 + -0x200) = 0x41b22c;\n                    iVar4 = unaff_R14;\n                    in_RAX = fcn.00432f60();\n                    uVar5 = iVar4;\n                }\n                if (uVar5 != 2) goto code_r0x0041aebc;\n                *(*0x20 + -0x1a0) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x200) = 0x41b250;\n                fcn.004346e0();\n                *(*0x20 + -0x200) = 0x41b265;\n                fcn.00434fe0();\n                *(*0x20 + -0x200) = 0x41b272;\n                fcn.00434f60();\n                *(*0x20 + -0x200) = 0x41b285;\n                fcn.00434fe0();\n                *(*0x20 + -0x200) = 0x41b28f;\n                fcn.00434de0();\n                *(*0x20 + -0x200) = 0x41b2a5;\n                fcn.00434fe0();\n                *(*0x20 + -0x200) = 0x41b2b0;\n                fcn.00434ce0();\n                *(*0x20 + -0x200) = 0x41b2b5;\n                fcn.00434940();\n                *(*0x20 + -0x200) = 0x41b2ba;\n                fcn.00434760();\n                *(*0x20 + -0x200) = 0x41b2cb;\n                in_RAX = fcn.00432f60();\n            }\n            *(*0x20 + -0x19c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x200) = 0x41b2e6;\n            fcn.004346e0();\n            *(*0x20 + -0x200) = 0x41b2f7;\n            fcn.00434fe0();\n            *(*0x20 + -0x200) = 0x41b305;\n            fcn.00434f60();\n            *(*0x20 + -0x200) = 0x41b316;\n            fcn.00434fe0();\n            *(*0x20 + -0x200) = 0x41b325;\n            fcn.00434de0();\n            *(*0x20 + -0x200) = 0x41b336;\n            fcn.00434fe0();\n            *(*0x20 + -0x200) = 0x41b345;\n            fcn.00434e40();\n            *(*0x20 + -0x200) = 0x41b34a;\n            fcn.00434940();\n            *(*0x20 + -0x200) = 0x41b34f;\n            fcn.00434760();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x200) = 0x41b365;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41b375;\n        fcn.0045f460();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3315
    },
    "0041b660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b660(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598444 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x58) = 0x41ba25;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41ba35;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x4b03a0;\n            }\n        }\n        else {\n            uVar8 = 0x4b03a8;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x598d0c <= *0x598d08) goto code_r0x0041b724;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\ncode_r0x0041b97c:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x544e00 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041b724:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x544e00 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041b90d;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x598c80 == 0) {\n                *(*0x20 + -0x58) = 0x41b770;\n                fcn.00421e60();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                iVar1 = *(iVar4 + 0x10);\n                if (iVar1 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *(iVar4 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041b94e;\n                    iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n                }\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x58) = 0x41b7cb;\n                iVar4 = fcn.00421c80(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x58) = 0x41b7d9;\n                    fcn.0042bc60();\n                    *(*0x20 + -0x58) = 0x41b7e5;\n                    iVar4 = fcn.00421c80();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041b90d;\n            }\n            *(*0x20 + -0x58) = 0x41b81a;\n            fcn.0041be00(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x598ac8 = *0x598ac8 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41b85f;\n                    fcn.0041ab40();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x58) = 0x41b8a2;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041b90d;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x598d08 + 1;\n    bVar10 = *0x598d0c <= *0x598d08;\n    *0x598d08 = uVar7;\n    if (bVar10) goto code_r0x0041b724;\n    *(*0x20 + -0x58) = 0x41b9d9;\n    fcn.00419a80();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x58) = 0x41b9ee;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041b90d:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x598ac8 = *0x598ac8 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x58) = 0x41b937;\n                fcn.0041ab40(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041b95b;\ncode_r0x0041b94e:\n    *(*0x20 + -0x58) = 0x41b95b;\n    fcn.0045d480(0xfd);\ncode_r0x0041b95b:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041b97c;\n}\n",
        "token_count": 2441
    },
    "0041ba60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041ba60(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    \ncode_r0x0041ba60:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar5 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x598444 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar6 = -in_RAX[3];\n            iVar4 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar4;\n            do {\n                if ((*(iVar4 + 0xb1) != '\\0') || (unaff_RBX <= in_RAX[3] + iVar6)) goto code_r0x0041bc07;\n                *(*0x20 + -0x18) = iVar6;\n                if (*0x598c80 == 0) {\n                    *(*0x20 + -0x30) = 0x41baea;\n                    fcn.00421e60();\n                    in_RAX = *(*0x20 + 8);\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        *(iVar3 + 0x10) = iVar1 - 1U;\n                        if (0xfc < iVar1 - 1U) goto code_r0x0041bc19;\n                        iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                    }\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41bb45;\n                    iVar3 = fcn.00421c80(0, iVar4);\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41bb53;\n                        fcn.0042bc60();\n                        *(*0x20 + -0x30) = 0x41bb5d;\n                        iVar3 = fcn.00421c80();\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x598d0c <= *0x598d08) {\ncode_r0x0041bc07:\n                        return iVar6 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x598d08 + 1;\n                    bVar7 = *0x598d0c <= *0x598d08;\n                    *0x598d08 = uVar2;\n                    if (bVar7) goto code_r0x0041bc07;\n                    *(*0x20 + -0x30) = 0x41bbab;\n                    fcn.00419a80();\n                    in_RAX = *(*0x20 + 8);\n                    iVar6 = *(*0x20 + -0x18);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41bbc5;\n                    fcn.0041be00(iVar3, iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar6 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x598ac8 = *0x598ac8 + in_RAX[3];\n                        iVar6 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar6 = *(*0x20 + -0x18) + iVar6;\n                    }\n                }\n                iVar4 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041bc26;\n    }\n    goto code_r0x0041bc38;\ncode_r0x0041bc19:\n    *(*0x20 + -0x30) = 0x41bc26;\n    fcn.0045d480(0xfd);\ncode_r0x0041bc26:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41bc37;\n    in_RAX = fcn.00432f60();\ncode_r0x0041bc38:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x41bc47;\n    fcn.0045f460();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x0041ba60;\n}\n",
        "token_count": 1321
    },
    "0041c440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c440(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar8 = arg3 >> 3;\n                if (*0x5981d4 == '\\0') {\n                    uVar6 = 1 << (arg3 & 7);\n                    if (((*0x59862c < 1) || (arg3 <= *(unaff_RDI + 0x30) && *(unaff_RDI + 0x30) != arg3)) ||\n                       (arg3 = puVar8,  (puVar8[*(unaff_RDI + 0x48)] & uVar6) != 0)) {\n                        if ((uVar6 & puVar8[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar8[iVar1] = puVar8[iVar1] | uVar6;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x56a638) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar5 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar5 + 0x21040;\n                            uVar6 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar6 & *(iVar1 + 0x21040 + uVar5)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar6;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041c5b3;\n                        }\n                        goto code_r0x0041c611;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41c5a5;\n                    cVar4 = fcn.00415060(arg1, iVar1, arg3);\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041c5b3:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\n                        bVar3 = false;\ncode_r0x0041c5e1:\n                        if (!bVar3) {\n                            *(*0x20 + -0x50) = 0x41c5f0;\n                            fcn.00421960();\n                        }\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) {\n                        bVar3 = false;\n                        goto code_r0x0041c5e1;\n                    }\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        bVar3 = true;\n                        goto code_r0x0041c5e1;\n                    }\n                    *(*0x20 + -0x50) = 0x41c611;\n                    fcn.0045d480(0xfd);\ncode_r0x0041c611:\n                    *(*0x20 + -0x50) = 0x41c61e;\n                    fcn.0045d4a0(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41c62d;\n                fcn.004346e0();\n                *(*0x20 + -0x50) = 0x41c63e;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41c648;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x41c659;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41c665;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x41c676;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41c685;\n                fcn.00434e40();\n                *(*0x20 + -0x50) = 0x41c696;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41c69b;\n                fcn.00434760();\n                *(*0x20 + -0x50) = 0x41c6b6;\n                fcn.0041c760(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41c6d3;\n                fcn.0041c760(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41c6ef;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41c705;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + -8) = 0x41c729;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1834
    },
    "0041c760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041c760(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x56a638);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434760();\n    if (iVar3 == 0) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n        return;\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434fe0();\n    fcn.00434760();\n    if (*(iVar3 + 99) < *0x53d1f8) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434940();\n        fcn.00434760();\n    }\n    else {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434760();\n            }\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434760();\n            if (unaff_RDI == uVar4) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434760();\n            }\n            fcn.004346e0();\n            fcn.00434940();\n            fcn.00434760();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    return;\n}\n",
        "token_count": 952
    },
    "0041cba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041cba0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    if (*0x5981d4 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x56a638) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n            piVar1 = iVar2 + 0x16a8;\n            *piVar1 = *piVar1 + arg1;\n            piVar1 = iVar2 + 0x16b0;\n            *piVar1 = *piVar1 + unaff_RDI;\n            return;\n        }\n        fcn.0045d4a0(0x40);\n    }\n    fcn.00432f60();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 547
    },
    "0041ce00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ce00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong noname_0;\n    ulong arg2;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 0x48) = in_XMM15;\n    *(in_RAX + 0x58) = in_XMM15;\n    *(in_RAX + 0x68) = in_XMM15;\n    uVar2 = *(in_RAX + 0x30) + 0x100000;\n    if (*(in_RAX + 0x20) < uVar2) {\n        *(in_RAX + 0x20) = uVar2;\n    }\n    dVar5 = *0x598210 * *0x4c7948;\n    iVar3 = *0x4c7958 + dVar5;\n    *(in_RAX + 0x80) = iVar3;\n    dVar6 = iVar3 / dVar5 - *0x4c7978;\n    if ((dVar6 < str.333333._0_8_) || (*0x4c7950 < dVar6)) {\n        if (dVar5 < iVar3) {\n            *(in_RAX + 0x80) = iVar3 + -1;\n        }\n        *(in_RAX + 0x98) = (dVar5 - *(in_RAX + 0x80)) / *0x598210;\n    }\n    else {\n        *(in_RAX + 0x98) = 0;\n    }\n    if (0 < *0x598638) {\n        *(in_RAX + 0x80) = *0x598210;\n        *(in_RAX + 0x98) = 0;\n    }\n    iVar1 = *0x544458;\n    iVar3 = *0x544450;\n    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {\n        *(*(iVar3 + iVar4 * 8) + 0x1678) = in_XMM15;\n    }\n    fcn.0041d0a0();\n    if (0 < *0x598630) {\n        noname_0 = *(in_RAX + 0x88);\n        arg2 = *0x598ab8;\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.004349e0(noname_0, arg2);\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.004349e0(noname_0, arg2);\n        fcn.00434940();\n        fcn.00434760();\n    }\n    return;\n}\n",
        "token_count": 757
    },
    "0041d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\ndouble fcn.0041d1a0(void)\n\n{\n    double dVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong arg2;\n    char unaff_BL;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    int64_t iStack128;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_BL != '\\0') {\n        return *(in_RAX + 0x10);\n    }\n    uVar2 = *(in_RAX + 0x40);\n    uVar4 = *(in_RAX + 0x20) - uVar2;\n    if (uVar4 < 0) {\n        dVar5 = uVar4 >> 1 | uVar4 & 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = uVar4;\n    }\n    if (uVar2 < 0) {\n        dVar6 = uVar2 >> 1 | uVar2 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar2;\n    }\n    dVar5 = dVar5 / dVar6;\n    if (dVar5 < 0.0) {\n        dVar5 = 0.0;\n    }\n    uVar4 = *(in_RAX + 0x30);\n    if (uVar4 < 0) {\n        dVar6 = uVar4 >> 1 | uVar4 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar4;\n    }\n    if (uVar2 < 0) {\n        dVar7 = uVar2 >> 1 | uVar2 & 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar2;\n    }\n    fcn.0045ed60();\n    iVar3 = iStack128 - *(in_RAX + 0x78);\n    dVar8 = *0x4c7948;\n    if (0 < iVar3) {\n        dVar8 = *0x4c7948 + *(in_RAX + 0x58) / (iVar3 * *0x598210);\n    }\n    dVar1 = *(in_RAX + 0x10);\n    dVar6 = *0x4c7958 * ((dVar5 - dVar1) - ((dVar6 / dVar7 - *0x4c7978) - dVar1) * (dVar8 / *0x4c7950));\n    if (0 < *0x598630) {\n        uVar2 = *(in_RAX + 0x40);\n        arg2 = *(in_RAX + 0x18);\n        if (uVar2 < 0) {\n            dVar7 = uVar2 >> 1 | uVar2 & 1;\n            dVar7 = dVar7 + dVar7;\n        }\n        else {\n            dVar7 = uVar2;\n        }\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.00434de0((*0x4c7978 + dVar5) * dVar7);\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434fe0();\n        fcn.004349e0(in_RAX, arg2);\n        fcn.00434940();\n        fcn.00434760();\n    }\n    return dVar6 + dVar1;\n}\n",
        "token_count": 1095
    },
    "0041d600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d600(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x80) < 1) {\n                return;\n            }\n            if (*0x598210 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar2 == NULL)) {\n                return;\n            }\n            iVar6 = *piVar2;\n            *(*0x20 + -0x14) = iVar6;\n            iVar5 = 0;\n            while( true ) {\n                iVar8 = *0x598210;\n                if (4 < iVar5) {\n                    return;\n                }\n                iVar3 = *(unaff_R14 + 0x30);\n                uVar9 = *(iVar3 + 0xf0);\n                uVar1 = *(iVar3 + 0xf4);\n                *(iVar3 + 0xf0) = uVar1;\n                uVar9 = uVar9 ^ uVar9 << 0x11;\n                uVar9 = uVar1 >> 0x10 ^ uVar9 >> 7 ^ uVar1 ^ uVar9;\n                *(iVar3 + 0xf4) = uVar9;\n                iVar8 = (uVar1 + uVar9) * (iVar8 - 1) >> 0x20;\n                if (iVar6 <= iVar8) {\n                    iVar8 = iVar8 + 1;\n                }\n                if (*0x544458 <= iVar8) break;\n                if (*(*(*0x544450 + iVar8 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar5;\n                    *(*0x20 + -0x30) = 0x41d706;\n                    cVar4 = fcn.00440380();\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x10);\n                    iVar6 = *(*0x20 + -0x14);\n                }\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41d734;\n            in_RAX = fcn.0045d480(*0x544458);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41d73f;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 783
    },
    "0041d760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d7f2)\n\nulong fcn.0041d760(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598204 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41d9bc;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41d9cc;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1698) == 0)) ||\n       ((*(*(unaff_RBX + 0x1698) + 0x10) == 0 && (*(*(unaff_RBX + 0x16a0) + 0x10) == 0)))) {\n        if (*0x598c80 == 0) {\n            if (*0x598d08 < *0x598d0c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x5982e8 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = (*0x5982e8 >> 0x13) << 3;\n        *0x5982e8 = *piVar6;\n        LOCK();\n    }\n    if (piVar6 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0x80);\n        if (uVar2 < 1) break;\n        LOCK();\n        puVar1 = in_RAX + 0x80;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x98) == 0.0) {\n            *(*0x20 + -0x38) = 0x41d956;\n            fcn.00409e20(in_RAX, piVar6, 0x5982e8);\n            return 0;\n        }\n        *(*0x20 + -0x10) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = piVar6;\n        *(*0x20 + -0x38) = 0x41d8ba;\n        fcn.0045ed60();\n        iVar5 = *(*0x20 + -0x30) - *(*(*0x20 + -0x10) + 0x78);\n        if (iVar5 < 1) {\n            iVar7 = *(*0x20 + 0x10);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x10);\n            if (*(*(*0x20 + -0x10) + 0x98) < *(iVar7 + 0x1680) / iVar5) {\n                *(*0x20 + -0x38) = 0x41d926;\n                fcn.00409e20();\n                return 0;\n            }\n        }\n        *(iVar7 + 0x1688) = 2;\n        piVar6 = *(*0x20 + -0x20);\n    }\n    else {\n        *(unaff_RBX + 0x1688) = 1;\n    }\n    *(*0x20 + -0x18) = piVar6[2];\n    *(*0x20 + -0x38) = 0x41d987;\n    fcn.00437220(1);\n    if (*0x54a3d0 != '\\0') {\n        *(*0x20 + -0x38) = 0x41d99c;\n        fcn.0044ff80();\n    }\n    return *(*0x20 + -0x18);\n}\n",
        "token_count": 1206
    },
    "0041d9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d9e0(double param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong noname_0;\n    uint64_t uVar4;\n    ulong arg2;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 < 0) {\n                uVar4 = 0xffffffffffffffff;\n                if (param_1 < 0.0) {\n                    param_1 = 0.0;\n                }\n            }\n            else {\n                uVar4 = (iVar1 * *(in_RAX + 0x10) >> 1) / 0x32 + *(in_RAX + 0x10);\n                dVar7 = *0x4c7970 * (iVar1 / *0x4c79a8);\n                if (param_1 <= dVar7) {\n                    dVar7 = param_1;\n                }\n                param_1 = *0x4c7960 * (iVar1 / *0x4c79a8);\n                if (param_1 <= dVar7) {\n                    param_1 = dVar7;\n                }\n            }\n            *(in_RAX + 4) = param_1;\n            if (*in_RAX < 0) {\n                uVar2 = 0xffffffffffffffff;\n                goto code_r0x0041db45;\n            }\n            uVar2 = *(in_RAX + 0x10);\n            if (uVar2 < 0) {\n                dVar7 = uVar2 & 1 | uVar2 >> 1;\n                dVar7 = dVar7 + dVar7;\n            }\n            else {\n                dVar7 = uVar2;\n            }\n            dVar7 = (*0x4c7978 + param_1) * dVar7;\n            if (*0x4c79c8 <= dVar7) {\n                uVar2 = dVar7 - *0x4c79c8 | 0x8000000000000000;\n            }\n            else {\n                uVar2 = dVar7;\n            }\n            uVar5 = *(in_RAX + 2);\n            if ((*0x56a5cc == 0 || *0x56a5d0 != 0) && (uVar5 < *(in_RAX + 0xc) + 0x100000U)) {\n                uVar5 = *(in_RAX + 0xc) + 0x100000U;\n            }\n            if (uVar2 < uVar5) {\n                uVar2 = uVar5;\n            }\n            if (-1 < uVar2) {\n                if (uVar4 < uVar2) {\n                    uVar4 = uVar2;\n                }\ncode_r0x0041db45:\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = uVar2;\n                *(in_RAX + 6) = uVar2;\n                uVar5 = *(in_RAX + 8);\n                *(in_RAX + 8) = uVar4;\n                if (*0x54a3d0 != '\\0') {\n                    *(*0x20 + -0x58) = 0x41db67;\n                    fcn.00450240(uVar2, uVar5);\n                    uVar2 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                if (*0x59820c != 0) {\n                    *(*0x20 + -0x58) = 0x41db85;\n                    fcn.0041d0a0();\n                    uVar2 = *(*0x20 + -0x40);\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                if (*0x56a5cc == 0 || *0x56a5d0 != 0) {\n                    iVar3 = (uVar2 - *(in_RAX + 0xc)) + -0x100000;\n                    if (iVar3 < 0x2000) {\n                        iVar3 = 0x2000;\n                    }\n                    if (*0x56a5f8 - *0x56a600 < 1) {\n                        *0x56a618 = 0.0;\n                    }\n                    else {\n                        *0x56a618 = (*0x56a5f8 - *0x56a600) / iVar3;\n                        *0x56a608 = *0x56a600;\n                        *0x56a610 = *(in_RAX + 0xc);\n                    }\n                }\n                else {\n                    *0x56a618 = 0.0;\n                }\n                *(*0x20 + -0x58) = 0x41dc2c;\n                fcn.0041de80();\n                return;\n            }\n            *(*0x20 + -0x18) = param_1;\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x20) = *(in_RAX + 8);\n            noname_0 = *(in_RAX + 0x10);\n            *(*0x20 + -0x28) = noname_0;\n            arg2 = *(in_RAX + 0xc);\n            *(*0x20 + -0x30) = arg2;\n            *(*0x20 + -0x38) = *0x598d90;\n            *(*0x20 + -0x58) = 0x41dc6d;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x41dc7e;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41dc88;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x41dc99;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41dca5;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x41dcb6;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41dcc5;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x41dcd6;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41dce5;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x41dcf6;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41dd05;\n            fcn.004349e0(noname_0, arg2);\n            *(*0x20 + -0x58) = 0x41dd16;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x41dd25;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x41dd2a;\n            fcn.00434940();\n            *(*0x20 + -0x58) = 0x41dd2f;\n            fcn.00434760();\n            *(*0x20 + -0x58) = 0x41dd45;\n            in_RAX = fcn.00432f60();\n            param_1 = extraout_XMM0_Qa;\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = param_1;\n        *(puVar6 + -8) = 0x41dd56;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        param_1 = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1938
    },
    "0041de80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041de80(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    \n    if (*0x598aa8 == 0) {\n        *0x56a620 = 0xffffffffffffffff;\n        return in_RAX;\n    }\n    if (*0x598aa0 < 0) {\n        dVar2 = *0x598aa0 >> 1 | *0x598aa0 & 1;\n        dVar2 = dVar2 + dVar2;\n    }\n    else {\n        dVar2 = *0x598aa0;\n    }\n    if (*0x598aa8 < 0) {\n        dVar3 = *0x598aa8 >> 1 | *0x598aa8 & 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = *0x598aa8;\n    }\n    if (*0x59b7a0 < 0) {\n        dVar4 = *0x59b7a0 >> 1 | *0x59b7a0 & 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = *0x59b7a0;\n    }\n    dVar4 = dVar4 * (dVar2 / dVar3);\n    if (*0x4c79c8 <= dVar4) {\n        uVar1 = dVar4 - *0x4c79c8 | 0x8000000000000000;\n    }\n    else {\n        uVar1 = dVar4;\n    }\n    *0x56a620 = -*0x598358 & (uVar1 + uVar1 / 10 + *0x598358) - 1;\n    if ((*0x56a620 < *0x59a090 - *0x59a0a0) && (*0x598358 <= (*0x59a090 - *0x59a0a0) - *0x56a620)) {\n        return uVar1 * -0x3333333333333333;\n    }\n    *0x56a620 = 0xffffffffffffffff;\n    return uVar1 * -0x3333333333333333;\n}\n",
        "token_count": 520
    },
    "0041dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041dfc0(void)\n\n{\n    uint uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    uVar1 = *0x544620;\n    if (*0x544610 != '\\0') {\n        *0x544620 = 0;\n        fcn.0044c980(uVar1);\n        *0x544610 = '\\0';\n        *(*0x544608 + 0xa0) = 0;\n        fcn.0043b3a0();\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 184
    },
    "0041e6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041e6c0(uchar param_1)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x30) = 0x41e6ea;\n            fcn.004346e0();\n            unaff_RBX = *0x59a0a0;\n            if (*0x59a090 - *0x59a0a0 != 0) {\n                *(*0x20 + -0x10) = *0x59a0a0;\n                *(*0x20 + -0x18) = (*0x59a098 * 100) / (*0x59a090 - *0x59a0a0);\n                *(*0x20 + -0x30) = 0x41e72d;\n                fcn.004346e0();\n                *(*0x20 + -0x30) = 0x41e73e;\n                fcn.00434fe0();\n                *(*0x20 + -0x30) = 0x41e749;\n                fcn.00434ce0();\n                *(*0x20 + -0x30) = 0x41e74e;\n                fcn.00434900();\n                *(*0x20 + -0x30) = 0x41e75c;\n                fcn.00434ce0();\n                *(*0x20 + -0x30) = 0x41e76d;\n                fcn.00434fe0();\n                *(*0x20 + -0x30) = 0x41e77b;\n                fcn.00434ce0();\n                *(*0x20 + -0x30) = 0x41e78c;\n                fcn.00434fe0();\n                *(*0x20 + -0x30) = 0x41e796;\n                fcn.00434ce0();\n                *(*0x20 + -0x30) = 0x41e7a7;\n                fcn.00434fe0();\n                *(*0x20 + -0x30) = 0x41e7ac;\n                fcn.00434760();\n                if (*(*0x20 + 0x18) != '\\0') {\n                    *(*0x20 + -0x30) = 0x41e7ba;\n                    fcn.004346e0();\n                    *(*0x20 + -0x30) = 0x41e7cb;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x30) = 0x41e7d0;\n                    fcn.00434760();\n                }\n                *(*0x20 + -0x30) = 0x41e7d5;\n                fcn.004346e0();\n                *(*0x20 + -0x30) = 0x41e7da;\n                fcn.00434940();\n                *(*0x20 + -0x30) = 0x41e7df;\n                fcn.00434760();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41e807;\n                    fcn.0040a2a0();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41e816;\n            iVar2 = *0x59a098;\n            in_EAX = fcn.00430980();\n            param_1 = iVar2;\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41e829;\n        fcn.0045ad80();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1127
    },
    "0041e840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e840(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n    }\n    if (0 < *0x598648) {\n        fcn.0041e6c0(0, *(in_RAX + 0x100e0));\n    }\n    fcn.0042b2e0(in_RAX + 0x10090);\n    fcn.0042b0a0();\n    *(in_RAX + 0x100e8) = (*(in_RAX + 0x100a8) + 0x3fffffU & 0xffffffffffc00000) >> 6;\n    *(in_RAX + 0x100e0) = *(in_RAX + 0x100e0) + 1;\n    *(in_RAX + 0x100f0) = 0;\n    *(in_RAX + 0x10100) = *0x52c2b8;\n    *(in_RAX + 0x100f8) = *0x52c298;\n    return;\n}\n",
        "token_count": 288
    },
    "0041eb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ed4c)\n\nint64_t fcn.0041eb20(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    char cVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar3 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 0x800000000000;\n            if (uVar2 < arg1 + 0x800000000000) {\n                uVar3 = arg1 - unaff_RBX;\n            }\n            else {\n                uVar3 = 0;\n            }\n            if (uVar3 == 0) {\n                return 0;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                arg1_00 = *0x598358 >> 0xd;\n                if (arg1_00 == 0) {\n                    arg1_00 = 1;\n                }\n                uVar6 = unaff_RDI >> 0xd;\n                uVar3 = unaff_RDI & 0x1fff;\n                unaff_RDI = uVar6;\n                if (uVar3 != 0) {\n                    unaff_RDI = uVar6 + 1;\n                }\n                uVar3 = *(in_RAX + 0x68);\n                uVar6 = arg1 + 0x7fffffffffff >> 0x16;\n                if (uVar6 < uVar3) {\n                    uVar3 = *(*(in_RAX + 0x60) + uVar6 * 8);\n                    if (uVar3 < 0) {\n                        uVar3 = 0x200000;\n                    }\n                    else {\n                        uVar3 = uVar3 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x28) = unaff_SIL;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x48) = unaff_RDI;\n                    *(*0x20 + -0x50) = arg1_00;\n                    if (uVar3 < arg1_00) {\ncode_r0x0041ecfc:\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41ef60;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x10) = arg1_00;\n                        iVar7 = uVar6 * 0x400000 - 0x800000000000;\n                        if (uVar2 < uVar6 * 0x400000) {\n                            uVar3 = iVar7 - unaff_RBX;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                        if (uVar3 == 0) {\n                            return 0;\n                        }\n                        if (unaff_SIL != '\\0') {\n                            *(*0x20 + -0x38) = iVar7;\n                            uVar1 = *(in_RAX + 0x10108);\n                            *(*0x20 + -0x90) = 0x41edcd;\n                            fcn.0040a2a0(uVar1);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        cVar4 = iVar7;\n                        *(*0x20 + -0x90) = 0x41ede9;\n                        uVar2 = (**(*0x20 + -0x20))(*(*0x20 + -0x20), *0x20 + -0x20);\n                        *(*0x20 + -0x40) = uVar2;\n                        if (*(*0x20 + 0x28) != '\\0') {\n                            *(*0x20 + -0x61) = cVar4;\n                            *(*0x20 + -0x90) = 0x41ee14;\n                            fcn.0040a080();\n                            uVar2 = *(*0x20 + -0x40);\n                            cVar4 = *(*0x20 + -0x61);\n                        }\n                        if (cVar4 == '\\0') {\n                            return 0;\n                        }\n                        if (uVar2 >> 0xd < 0x2000) {\n                            *(*0x20 + -0x90) = 0x41ee7f;\n                            uVar1 = fcn.0041f560(*(*0x20 + -0x50));\n                            *(*0x20 + -0x60) = 0x1ff;\n                            *(*0x20 + -0x90) = 0x41eea6;\n                            fcn.0041f0e0(uVar1);\n                            return *(*0x20 + -0x60) << 0xd;\n                        }\n                        *(*0x20 + -0x90) = 0x41eef1;\n                        fcn.0045d4a0(0x2000);\n                    }\n                    else if (arg1 + 0x7fffffffffff >> 0x23 < 0x2000) {\n                        *(*0x20 + -0x38) = uVar6;\n                        uVar3 = (arg1 - 1 & 0x3fffff) >> 0xd;\n                        *(*0x20 + -0x90) = 0x41ec7e;\n                        uVar1 = fcn.0041f560(arg1_00);\n                        if (uVar3 != 0) {\n                            *(*0x20 + -0x58) = uVar3;\n                            *(*0x20 + -0x90) = 0x41ecd7;\n                            fcn.0041f0e0(uVar1);\n                            return *(*0x20 + -0x58) << 0xd;\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1_00 = *(*0x20 + -0x50);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        unaff_SIL = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x38);\n                        goto code_r0x0041ecfc;\n                    }\n                    *(*0x20 + -0x90) = 0x41eefe;\n                    fcn.0045d4a0(0x2000);\n                }\n                *(*0x20 + -0x90) = 0x41ef09;\n                fcn.0045d4a0(uVar3);\n            }\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x90) = 0x41ef1a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = uVar3;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x41ef39;\n        fcn.0045f460();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1949
    },
    "0041f0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041f0e0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t *piVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar5 = unaff_RBX;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX >> 0xd;\n            if (uVar5 < 0x2000) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x40) = 0x41f14a;\n                fcn.004289c0(unaff_RDI);\n                iVar1 = (*(*0x20 + 0x18) * 0x2000 + *(*0x20 + -0x10) * 0x400000) - 0x800000000000;\n                iVar2 = *(*0x20 + 8);\n                if (*(*0x20 + 0x18) * 0x2000 + *(*0x20 + -0x10) * 0x400000 < *(iVar2 + 0x100f8) + 0x800000000000U) {\n                    *(iVar2 + 0x100f8) = iVar1;\n                }\n                if (*(iVar2 + 0x10118) != '\\0') {\n                    return iVar1;\n                }\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x40) = 0x41f1b5;\n                fcn.004152e0();\n                iVar1 = *0x59a0a0;\n                *(*0x20 + -0x18) = *(*0x20 + 0x20) * 0x2000;\n                LOCK();\n                *0x59a0a0 = *0x59a0a0 + *(*0x20 + 0x20) * 0x2000;\n                *(*0x20 + -0x40) = 0x41f1db;\n                piVar4 = fcn.0042ba20(iVar1);\n                iVar1 = *(*0x20 + -0x18);\n                LOCK();\n                iVar2 = *piVar4;\n                *piVar4 = *piVar4 - iVar1;\n                LOCK();\n                piVar4 = piVar4 + 1;\n                iVar3 = *piVar4;\n                *piVar4 = *piVar4 + iVar1;\n                *(*0x20 + -0x40) = 0x41f1fd;\n                fcn.0042bb20(iVar2, iVar3);\n                return *(*0x20 + -0x20);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x40) = 0x41f219;\n            in_RAX = fcn.0045d4a0(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = uVar5;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x41f233;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 996
    },
    "0041f260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f260(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x0041f3a6;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x0041f3a6:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x0041f3a6;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x0041f3a6;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x0041f3a6;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x0041f3a6;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x41f3e5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x41f3f5;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 874
    },
    "0041f9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041f9e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0041f9e0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x41fad8;\n                    fcn.00422260(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0041fa9b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x41fa6f;\n                    fcn.00422260(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0041fa9b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041fb06;\ncode_r0x0041fa9b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x41fb05;\n    in_RAX = fcn.0045d480(0xfc);\ncode_r0x0041fb06:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x41fb10;\n    fcn.0045ad80();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0041f9e0;\n}\n",
        "token_count": 919
    },
    "0041fde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ff16)\n// WARNING: Removing unreachable block (ram,0x0041fee3)\n\nint64_t fcn.0041fde0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10128);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x5445bc;\ncode_r0x0041fe21:\n            if (0x10f < uVar3) {\n                if (*0x5445bc != 0xffffffff) {\n                    LOCK();\n                    *0x5445bc = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x0041ff66;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x0041ff5a;\n                *(*0x20 + -0x28) = 0x41fe8a;\n                iVar1 = fcn.0042b560();\ncode_r0x0041fec0:\n                if (iVar1 != 0) {\n                    if (*0x5445bc < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x5445bc = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x0041fe21;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x41feb7;\n                iVar1 = fcn.0042b560();\n                goto code_r0x0041fec0;\n            }\n            *(*0x20 + -0x28) = 0x41ff5a;\n            fcn.0045d480(2);\ncode_r0x0041ff5a:\n            *(*0x20 + -0x28) = 0x41ff66;\n            fcn.0045d480(2);\ncode_r0x0041ff66:\n            *(*0x20 + -0x28) = 0x41ff73;\n            in_RAX = fcn.0045d480(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41ff7e;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 806
    },
    "0041ffa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041ffa0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x41ffc5;\n                iVar2 = fcn.004201e0();\n                if (iVar2 == -1) break;\n                *0x5445b8 = *0x5445b8 + 1;\n            }\n            *(*0x20 + -0x24) = *0x56a5c8;\n            iVar2 = 0;\n            uVar1 = *0x56a5c8;\n            while( true ) {\n                if (0x87 < iVar2) {\n                    *(*0x20 + -0x40) = 0x420067;\n                    fcn.0041dfc0();\n                    *(*0x20 + -0x40) = 0x42006c;\n                    fcn.00425800();\n                    return;\n                }\n                uVar3 = -((uVar1 >> 1 & 1) - 1);\n                if (1 < uVar3) break;\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x10) = iVar2 * 0xc0;\n                *(*0x20 + -0x18) = uVar3 * 5;\n                *(*0x20 + -0x40) = 0x420008;\n                fcn.0042b6a0(0x56a8e0);\n                *(*0x20 + -0x40) = 0x42002a;\n                fcn.0042b6a0(*(*0x20 + -0x10) + 0x56a938);\n                iVar2 = *(*0x20 + -0x20) + 1;\n                uVar1 = *(*0x20 + -0x24);\n            }\n            *(*0x20 + -0x40) = 0x420085;\n            fcn.0045d480(2);\n        }\n        *(puVar4 + -8) = 0x42008b;\n        fcn.0045ad80();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 622
    },
    "004201e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004201e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    ulong arg2;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            if (*0x56a5cc != 0) {\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + -1;\n                return -1;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x48) = *0x56a5c8;\n            *(*0x20 + -0x44) = 0;\ncode_r0x0042023d:\n            do {\n                *(*0x20 + -0x70) = 0x420249;\n                iVar5 = fcn.0041fde0();\n                if (iVar5 == 0) {\n                    LOCK();\n                    cVar4 = *0x56a5cc == 0;\n                    if (cVar4) {\n                        *0x56a5cc = 1;\n                    }\n                    iVar5 = -1;\ncode_r0x00420325:\n                    *(*0x20 + -0x38) = iVar5;\n                    if (*(*0x20 + -0x44) != '\\0') {\n                        *(*0x20 + -0x44) = 0;\n                        LOCK();\n                        iVar2 = *0x56a5d0 + -1;\n                        bVar7 = *0x56a5d0 == 1;\n                        *0x56a5d0 = iVar2;\n                        if ((bVar7 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                            *(*0x20 + -0x52) = cVar4;\n                            *(*0x20 + -0x18) = *0x598ab0;\n                            *(*0x20 + -0x20) = *0x56a610;\n                            *(*0x20 + -0x28) = *0x56a600;\n                            *(*0x20 + -0x30) = *0x56a618;\n                            *(*0x20 + -0x70) = 0x4203b1;\n                            arg2 = *0x56a600;\n                            fcn.004346e0();\n                            *(*0x20 + -0x70) = 0x4203c5;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x70) = 0x4203d3;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x70) = 0x4203e5;\n                            fcn.00434fe0();\n                            noname_0 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x4203fb;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x70) = 0x42040c;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x70) = 0x420416;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x70) = 0x420427;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x70) = 0x420432;\n                            fcn.004349e0(noname_0, arg2);\n                            *(*0x20 + -0x70) = 0x420445;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x70) = 0x42044a;\n                            fcn.00434760();\n                            cVar4 = *(*0x20 + -0x52);\n                            iVar5 = *(*0x20 + -0x38);\n                        }\n                    }\n                    if (cVar4 != '\\0') {\n                        *(*0x20 + -0x68) = 0x4b0440;\n                        *(*0x20 + -0x70) = 0x420468;\n                        fcn.0045ac40();\n                        *0x544620 = 1;\n                        iVar5 = *(*0x20 + -0x38);\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return iVar5;\n                }\n                if (*(iVar5 + 99) == '\\x01') {\n                    if (*(iVar5 + 0x58) == *(*0x20 + -0x48) + -2) {\n                        if (*(*0x20 + -0x44) == '\\0') {\n                            LOCK();\n                            *0x56a5d0 = *0x56a5d0 + 1;\n                            *(*0x20 + -0x44) = 1;\n                        }\n                        LOCK();\n                        if (*(*0x20 + -0x48) + -2 == *(iVar5 + 0x58)) {\n                            *(iVar5 + 0x58) = *(*0x20 + -0x48) + -1;\n                            bVar7 = true;\n                        }\n                        else {\n                            iVar5 = 0;\n                            bVar7 = false;\n                        }\n                    }\n                    else {\n                        iVar5 = 0;\n                        bVar7 = false;\n                    }\n                    *(*0x20 + -0x40) = iVar5;\n                    if (bVar7) {\n                        *(*0x20 + -0x38) = *(iVar5 + 0x20);\n                        *(*0x20 + -0x70) = 0x4202e9;\n                        cVar4 = fcn.004208e0();\n                        if (cVar4 == '\\0') {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(*0x20 + -0x38);\n                            LOCK();\n                            *0x56a630 = *0x56a630 + iVar5;\n                        }\n                        cVar4 = false;\n                        goto code_r0x00420325;\n                    }\n                    goto code_r0x0042023d;\n                }\n                iVar2 = *(iVar5 + 0x58);\n                iVar3 = *(*0x20 + -0x48);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x51) = *(iVar5 + 99);\n            *(*0x20 + -0x4c) = iVar2;\n            *(*0x20 + -0x50) = iVar3;\n            *(*0x20 + -0x70) = 0x4204bd;\n            fcn.004346e0();\n            *(*0x20 + -0x70) = 0x4204ce;\n            fcn.00434fe0();\n            *(*0x20 + -0x70) = 0x4204db;\n            fcn.00434ce0();\n            *(*0x20 + -0x70) = 0x4204ec;\n            fcn.00434fe0();\n            *(*0x20 + -0x70) = 0x4204f5;\n            fcn.00434ce0();\n            *(*0x20 + -0x70) = 0x420506;\n            fcn.00434fe0();\n            *(*0x20 + -0x70) = 0x42050f;\n            fcn.00434ce0();\n            *(*0x20 + -0x70) = 0x420514;\n            fcn.00434940();\n            *(*0x20 + -0x70) = 0x420519;\n            fcn.00434760();\n            *(*0x20 + -0x70) = 0x42052a;\n            fcn.00432f60();\n        }\n        *(puVar6 + -8) = 0x420530;\n        fcn.0045ad80();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1971
    },
    "00420540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420540(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                *(*0x20 + -0x38) = *0x56a5c8;\n                *(*0x20 + -0x34) = 0;\n                if (*(in_RAX + 0x58) == *(*0x20 + -0x38) + -2) {\n                    if (*(*0x20 + -0x34) == '\\0') {\n                        LOCK();\n                        *0x56a5d0 = *0x56a5d0 + 1;\n                        *(*0x20 + -0x34) = 1;\n                    }\n                    LOCK();\n                    if (*(*0x20 + -0x38) + -2 == *(in_RAX + 0x58)) {\n                        *(in_RAX + 0x58) = *(*0x20 + -0x38) + -1;\n                        bVar7 = true;\n                        iVar5 = in_RAX;\n                    }\n                    else {\n                        bVar7 = false;\n                        iVar5 = 0;\n                    }\n                }\n                else {\n                    bVar7 = false;\n                    iVar5 = 0;\n                }\n                *(*0x20 + -0x30) = iVar5;\n                if (bVar7) {\n                    *(*0x20 + -0x50) = 0x420731;\n                    fcn.004208e0();\n                    if (*(*0x20 + -0x34) != '\\0') {\n                        *(*0x20 + -0x34) = 0;\n                        LOCK();\n                        iVar2 = *0x56a5d0 + -1;\n                        bVar7 = *0x56a5d0 == 1;\n                        *0x56a5d0 = iVar2;\n                        if ((bVar7 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                            *(*0x20 + -0x10) = *0x598ab0;\n                            *(*0x20 + -0x18) = *0x56a610;\n                            *(*0x20 + -0x20) = *0x56a600;\n                            *(*0x20 + -0x28) = *0x56a618;\n                            *(*0x20 + -0x50) = 0x4207b4;\n                            uVar4 = *0x56a600;\n                            fcn.004346e0();\n                            *(*0x20 + -0x50) = 0x4207c5;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x50) = 0x4207d3;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x50) = 0x4207e5;\n                            fcn.00434fe0();\n                            uVar3 = *(*0x20 + -0x18);\n                            *(*0x20 + -0x50) = 0x4207fb;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x50) = 0x42080c;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x50) = 0x420816;\n                            fcn.00434ce0();\n                            *(*0x20 + -0x50) = 0x420827;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x50) = 0x420832;\n                            fcn.004349e0(uVar3, uVar4);\n                            *(*0x20 + -0x50) = 0x420845;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x50) = 0x42084a;\n                            fcn.00434760();\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(*0x20 + -0x34) != '\\0') {\n                    *(*0x20 + -0x34) = 0;\n                    LOCK();\n                    iVar2 = *0x56a5d0 + -1;\n                    bVar7 = *0x56a5d0 == 1;\n                    *0x56a5d0 = iVar2;\n                    if ((bVar7 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                        *(*0x20 + -0x10) = *0x598ab0;\n                        *(*0x20 + -0x18) = *0x56a610;\n                        *(*0x20 + -0x20) = *0x56a600;\n                        *(*0x20 + -0x28) = *0x56a618;\n                        *(*0x20 + -0x50) = 0x420685;\n                        uVar4 = *0x56a600;\n                        fcn.004346e0();\n                        *(*0x20 + -0x50) = 0x420696;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x50) = 0x4206a5;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x50) = 0x4206b6;\n                        fcn.00434fe0();\n                        uVar3 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x50) = 0x4206cc;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x50) = 0x4206dd;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x50) = 0x4206e7;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x50) = 0x4206f8;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x50) = 0x420705;\n                        fcn.004349e0(uVar3, uVar4);\n                        *(*0x20 + -0x50) = 0x420716;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x50) = 0x42071b;\n                        fcn.00434760();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x38)) || (*(in_RAX + 0x58) == *(*0x20 + -0x38) + 3)) break;\n                    *(*0x20 + -0x48) = 0x4b0448;\n                    *(*0x20 + -0x50) = 0x420865;\n                    fcn.0045ac40();\n                    in_RAX = *(*0x20 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x50) = 0x4208ab;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x4208b6;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1853
    },
    "004217a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004217a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x56a618 == 0.0) {\n        return;\n    }\n    if (*0x54a3d0 != '\\0') {\n        fcn.0044faa0();\n    }\n    do {\n        iVar1 = *0x56a608;\n        uVar3 = (*0x598ab0 - *0x56a610) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x56a618 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x56a600 - iVar1) {\ncode_r0x004218b9:\n                if (*0x54a3d0 != '\\0') {\n                    fcn.0044fba0();\n                }\n                return;\n            }\n            iVar2 = fcn.004201e0(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x56a618 = 0.0;\n                goto code_r0x004218b9;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x56a608 == iVar1);\n    } while( true );\n}\n",
        "token_count": 452
    },
    "00421960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421960(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x4219f5;\n                fcn.00421900();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x4219b9;\n                    fcn.004222c0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x4219c7;\n                    iVar2 = fcn.00421fe0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x59820c == 1)) {\n                    *(*0x20 + -0x28) = 0x421a33;\n                    fcn.0041d600();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x421a47;\n            in_RAX = fcn.0045d480(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x421a57;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 790
    },
    "00421a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421a80(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x421ac6;\n                fcn.00421900();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 < 1) {\n                    if ((cVar6 != '\\0') && (*0x59820c == 1)) {\n                        *(*0x20 + -0x58) = 0x421bc5;\n                        fcn.0041d600();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x421bd7;\n                    fcn.004222c0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x421be5;\n                    iVar3 = fcn.00421fe0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x00421c26;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x421b78;\n                    fcn.0045ddc0(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x421c26;\n            fcn.0045d540(arg1);\ncode_r0x00421c26:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x421c33;\n            in_RAX = fcn.0045d540(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x421c4d;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1373
    },
    "00421c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00421c80(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x421caa;\n                fcn.00421900();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x421cdb;\n                    iVar3 = fcn.00422320();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x421cf4;\n                    fcn.00422260();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x421d45;\n            in_RAX = fcn.0045d480(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421d50;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 627
    },
    "00421d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00421d60(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00422260();\n        }\n        else {\n            fcn.004222c0();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00422260();\n        }\n        else {\n            fcn.004222c0();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x598d00 = *0x598d00 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x598ac8;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x598ac8 = *0x598ac8 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 368
    },
    "00421e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421e60(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.004223c0();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.004222c0();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.00421fe0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x59820c == 1) {\n            fcn.0041d600();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00421f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421f20(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x421f56;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x421f65;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00421f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421f80(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x421fb6;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x421fc5;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00421fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421fe0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598c88 == 0) {\n        piVar1 = NULL;\n        goto code_r0x00422009;\n    }\n    while( true ) {\n        if (*0x598c88 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x598c88 >> 0x13) << 3;\n            *0x598c88 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00421f80();\n            piVar1 = piStack32;\n        }\ncode_r0x00422009:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x598cd8 != 0) {\n            fcn.0040a080();\n            iStack72 = *0x598cd8;\n            if (*0x598cd8 != 0) {\n                fcn.00424900();\n                fcn.00424a80();\n            }\n            fcn.0040a2a0();\n        }\n        if (iStack72 != 0) goto code_r0x004220fe;\n        auStack24 = CONCAT88(&iStack72, 0x422200);\n        fcn.0045ac40();\n        if (iStack72 != 0) break;\n        fcn.00432f60();\n    }\n    fcn.0040a080();\n    fcn.00424a80();\n    fcn.0040a2a0();\ncode_r0x004220fe:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.00409f80();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00422260();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "00422480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422480(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4224a5;\n            fcn.0040a080();\n            if (*0x598c80 == 0) {\n                *0x598c88 = 0;\n                if (*0x598ce8 != NULL) {\n                    for (; *0x598ce8 != NULL; *0x598ce8 = **0x598ce8) {\n                        (*0x598ce8)[2] = 0x598cd8;\n                    }\n                    if (*0x598cd8 == 0) {\n                        *0x598cd8 = *0x598ce8;\n                        *0x598ce0 = *0x598cf0;\n                        *0x598ce8 = in_XMM15;\n                    }\n                    else {\n                        **0x598cf0 = *0x598cd8;\n                        *(*0x598cd8 + 8) = *0x598cf0;\n                        *0x598cd8 = *0x598ce8;\n                        *0x598ce8 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x4224d8;\n                fcn.0040a2a0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42256b;\n            fcn.00432f60();\n        }\n        *(puVar1 + -8) = 0x422571;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "00422580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00422580(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if ((*0x59820c == 0) && (*0x598cd8 != 0)) {\n        fcn.0045ac40();\n        uVar1 = *0x598cd8;\n        fcn.0040a2a0();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.0040a2a0();\n    return 0;\n}\n",
        "token_count": 181
    },
    "004228e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004228e1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a638);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00422981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00422981(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a638);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00422a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422a20(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 0x16a40) = 0x88;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16a48) = 0x4b03c0;\n        *(in_RAX + 0x16a50) = in_RAX;\n    }\n    else {\n        uVar2 = 0x4b03c0;\n        fcn.0045d100(arg1, 0x4b03c0, arg3, in_R9);\n        in_RAX = fcn.0045cfe0(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16a58) = in_XMM15;\n    *(in_RAX + 0x16a68) = 0;\n    *(in_RAX + 0x16a70) = 0;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16a78) = 0x59a0c8;\n    }\n    else {\n        in_RAX = fcn.0045d100(arg1, 0x59a0c8, arg3, in_R9);\n    }\n    *(in_RAX + 0x16a80) = 1;\n    *(in_RAX + 0x16a88) = 0x490;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16a90) = in_XMM15;\n    }\n    else {\n        uVar2 = 0;\n        fcn.0045d100(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.0045d140(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16aa0) = in_XMM15;\n    *(in_RAX + 0x16ab0) = 0;\n    *(in_RAX + 0x16ab8) = 0;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16ac0) = 0x59a0d8;\n    }\n    else {\n        in_RAX = fcn.0045d100(arg1, 0x59a0d8, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ac8) = 1;\n    *(in_RAX + 0x16ad0) = 0x30;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16ad8) = in_XMM15;\n    }\n    else {\n        uVar2 = 0;\n        fcn.0045d100(arg1, 0, arg3, in_R9);\n        in_RAX = fcn.0045d140(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ae8) = in_XMM15;\n    *(in_RAX + 0x16af8) = 0;\n    *(in_RAX + 0x16b00) = 0;\n    if (*0x598440 == 0) {\n        uVar2 = 0x59a100;\n        *(in_RAX + 0x16b08) = 0x59a100;\n    }\n    else {\n        uVar2 = 0x59a100;\n        in_RAX = fcn.0045d100(arg1, 0x59a100, arg3, in_R9);\n    }\n    *(in_RAX + 0x16b10) = 1;\n    *(in_RAX + 0x16b18) = 0x18;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16b20) = in_XMM15;\n    }\n    else {\n        fcn.0045d140(arg1, uVar2, arg3, in_R9);\n        arg3 = 0;\n        in_RAX = fcn.0045d160(arg1, uVar2, 0, in_R9);\n    }\n    *(in_RAX + 0x16b30) = in_XMM15;\n    *(in_RAX + 0x16b40) = 0;\n    *(in_RAX + 93000) = 0;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16b50) = uVar2;\n    }\n    else {\n        in_RAX = fcn.0045d100(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16b58) = 1;\n    *(in_RAX + 0x16b60) = 0x18;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16b68) = in_XMM15;\n    }\n    else {\n        fcn.0045d140(arg1, uVar2, arg3, in_R9);\n        arg3 = 0;\n        in_RAX = fcn.0045d160(arg1, uVar2, 0, in_R9);\n    }\n    *(in_RAX + 0x16b78) = in_XMM15;\n    *(in_RAX + 0x16b88) = 0;\n    *(in_RAX + 0x16b90) = 0;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16b98) = uVar2;\n    }\n    else {\n        in_RAX = fcn.0045d100(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16ba0) = 1;\n    *(in_RAX + 0x16bb0) = 0x18;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16bb8) = in_XMM15;\n    }\n    else {\n        fcn.0045d140(arg1, uVar2, arg3, in_R9);\n        in_RAX = fcn.0045d140(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16bc8) = in_XMM15;\n    *(in_RAX + 0x16bd8) = 0;\n    *(in_RAX + 0x16be0) = 0;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x16be8) = uVar2;\n    }\n    else {\n        in_RAX = fcn.0045d100(arg1, uVar2, arg3, in_R9);\n    }\n    *(in_RAX + 0x16bf0) = 1;\n    *(in_RAX + 0x16a80) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10440 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00425980(0x59a0f8);\n    return;\n}\n",
        "token_count": 1753
    },
    "00422de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422de0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10188)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x54a3d0 != '\\0') {\n        fcn.0044faa0();\n    }\n    arg1 = *(in_RAX + 0x10400);\n    bVar6 = false;\ncode_r0x00422e8d:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00422f97:\n            if (bVar6) {\n                fcn.0040a2a0();\n            }\n            if (*0x54a3d0 != '\\0') {\n                fcn.0044fba0();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10190);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10190;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00422e8d;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10188;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10188) = 0x8000000000000000;\n            goto code_r0x00422f97;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.0040a080();\n        }\n        uVar7 = fcn.00423020(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10190) = *(in_RAX + 0x10190) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 862
    },
    "00423020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00423020(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint8_t uVar3;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar5;\n    int64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uint64_t uVar10;\n    int64_t iVar11;\n    bool bVar12;\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RSI;\n        arg1_00 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0xa0) = *0x56a5c8;\n            *(*0x20 + -0x9c) = 0;\n            unaff_RDI = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x88) = unaff_RDI;\n                    if (*(*0x20 + -0x9c) != '\\0') {\n                        *(*0x20 + -0x9c) = 0;\n                        LOCK();\n                        iVar1 = *0x56a5d0 + -1;\n                        bVar12 = *0x56a5d0 == 1;\n                        *0x56a5d0 = iVar1;\n                        if ((bVar12 && *0x56a5cc != 0) && (0 < *0x598630)) {\n                            *(*0x20 + -0x40) = *0x598ab0;\n                            *(*0x20 + -0x48) = *0x56a610;\n                            *(*0x20 + -0x50) = *0x56a600;\n                            *(*0x20 + -0x58) = *0x56a618;\n                            *(*0x20 + -0xc0) = 0x4231ed;\n                            arg2 = *0x56a600;\n                            fcn.004346e0();\n                            *(*0x20 + -0xc0) = 0x4231fe;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xc0) = 0x42320c;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xc0) = 0x42321d;\n                            fcn.00434fe0();\n                            noname_0 = *(*0x20 + -0x48);\n                            *(*0x20 + -0xc0) = 0x423233;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xc0) = 0x423245;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xc0) = 0x42324f;\n                            fcn.00434ce0();\n                            *(*0x20 + -0xc0) = 0x423265;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xc0) = 0x423270;\n                            fcn.004349e0(noname_0, arg2);\n                            *(*0x20 + -0xc0) = 0x423285;\n                            fcn.00434fe0();\n                            *(*0x20 + -0xc0) = 0x42328a;\n                            fcn.00434760();\n                            unaff_RDI = *(*0x20 + -0x88);\n                        }\n                    }\n                    if (*0x54a3d0 != '\\0') {\n                        *(*0x20 + -0xc0) = 0x4232af;\n                        fcn.0040a2a0();\n                        *(*0x20 + -0xc0) = 0x4232c8;\n                        fcn.0044fb00(*(*0x20 + -0x88));\n                        *(*0x20 + -0xc0) = 0x4232d7;\n                        fcn.0040a080();\n                        unaff_RDI = *(*0x20 + -0x88);\n                    }\n                    return unaff_RDI;\n                }\n                uVar5 = unaff_RSI >> 9;\n                arg1_00 = arg3;\n                if (arg1 <= uVar5) goto code_r0x0042350a;\n                uVar6 = *(unaff_RBX + uVar5 * 8);\n                uVar5 = uVar6 >> 0x14;\n                if (0x3f < uVar5) goto code_r0x004234fd;\n                uVar5 = *(*(in_RAX + 0x10198 + uVar5 * 8) + (uVar6 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar7 = uVar6 >> 3;\n                if (0x40 < uVar7) break;\n                iVar11 = uVar7 - 0x40;\n                uVar7 = iVar11 >> 0x3f & uVar7;\n                iVar8 = uVar5 + uVar7 + 0x21000;\n                iVar9 = uVar5 + uVar7 + 0x21040;\n                arg1_00 = arg3 >> 3;\n                if (-iVar11 < arg1_00 || -arg1_00 == iVar11) {\n                    arg1_00 = -iVar11;\n                }\n                *(*0x20 + -0x28) = arg3;\n                *(*0x20 + -0x70) = uVar5;\n                *(*0x20 + -0x30) = uVar6;\n                *(*0x20 + -0x18) = iVar8;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + -0x80) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RSI;\n                for (uVar7 = 0; uVar7 < arg1_00; uVar7 = uVar7 + 1) {\n                    *(*0x20 + -0x10) = iVar8 + uVar7;\n                    if (arg1_00 <= uVar7) {\ncode_r0x004234e5:\n                        *(*0x20 + -0xc0) = 0x4234f0;\n                        fcn.0045d480(arg1_00);\n                        goto code_r0x004234f0;\n                    }\n                    uVar3 = *(iVar8 + uVar7) & ~*(uVar7 + iVar9);\n                    if (uVar3 != 0) {\n                        *(*0x20 + -0x78) = uVar7;\n                        for (unaff_RBX = 0; unaff_RBX < 8; unaff_RBX = unaff_RBX + 1) {\n                            if ((1 << (unaff_RBX & 0x1f) & uVar3) != 0) {\n                                uVar10 = uVar6 + uVar7 * 8 + unaff_RBX;\n                                if (0x1ff < uVar10) {\n                                    *(*0x20 + -0xc0) = 0x4234e5;\n                                    fcn.0045d4a0(0x200);\n                                    goto code_r0x004234e5;\n                                }\n                                iVar11 = *(uVar5 + 0x20000 + uVar10 * 8);\n                                if (*(iVar11 + 0x58) == *(*0x20 + -0xa0) + -2) {\n                                    if (*(*0x20 + -0x9c) == '\\0') {\n                                        LOCK();\n                                        *0x56a5d0 = *0x56a5d0 + 1;\n                                        *(*0x20 + -0x9c) = 1;\n                                    }\n                                    LOCK();\n                                    if (*(*0x20 + -0xa0) + -2 == *(iVar11 + 0x58)) {\n                                        *(iVar11 + 0x58) = *(*0x20 + -0xa0) + -1;\n                                        in_RAX = *(*0x20 + 8);\n                                        bVar12 = true;\n                                    }\n                                    else {\n                                        in_RAX = *(*0x20 + 8);\n                                        iVar11 = 0;\n                                        bVar12 = false;\n                                    }\n                                }\n                                else {\n                                    iVar11 = 0;\n                                    bVar12 = false;\n                                }\n                                *(*0x20 + -0x98) = iVar11;\n                                if (bVar12) {\n                                    *(*0x20 + -0x60) = unaff_RBX;\n                                    *(*0x20 + -0x68) = unaff_RDI;\n                                    *(*0x20 + -0x90) = *(iVar11 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x423433;\n                                    fcn.0040a2a0();\n                                    *(*0x20 + -0xc0) = 0x42343f;\n                                    uVar2 = fcn.004208e0();\n                                    *(*0x20 + -0xa1) = uVar2;\n                                    *(*0x20 + -0xc0) = 0x423452;\n                                    fcn.0040a080();\n                                    unaff_RDI = *(*0x20 + -0x68);\n                                    if (*(*0x20 + -0xa1) != '\\0') {\n                                        unaff_RDI = *(*0x20 + -0x90) + *(*0x20 + -0x68);\n                                    }\n                                    uVar3 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x78) + *(*0x20 + -0x20));\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x60);\n                                    uVar5 = *(*0x20 + -0x70);\n                                    arg1_00 = *(*0x20 + -0x80);\n                                    iVar8 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x30);\n                                    uVar7 = *(*0x20 + -0x78);\n                                }\n                                unaff_RSI = *(*0x20 + -0x38);\n                                iVar9 = *(*0x20 + -0x20);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            arg3 = *(*0x20 + -0x28);\n                        }\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                unaff_RSI = unaff_RSI + arg1_00 * 8;\n                arg3 = arg3 + arg1_00 * -8;\n            }\ncode_r0x004234f0:\n            *(*0x20 + -0xc0) = 0x4234fd;\n            fcn.0045d560(0x40);\ncode_r0x004234fd:\n            arg1 = 0x40;\n            *(*0x20 + -0xc0) = 0x42350a;\n            fcn.0045d4a0(0x40);\ncode_r0x0042350a:\n            *(*0x20 + -0xc0) = 0x423512;\n            in_RAX = fcn.0045d4a0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = uVar5;\n        *(puVar4 + 0x30) = arg1_00;\n        *(puVar4 + -8) = 0x423536;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2961
    },
    "00423a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00423a00(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x1228) != 0) goto code_r0x00423a57;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0x1228) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00423a57:\n                uVar1 = *(iVar2 + 0x1228) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0x1228 + *(iVar2 + 0x1228) * 8);\n                    *(iVar2 + 0x1228) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045d480(0x80);\n            }\n            uVar3 = fcn.004168a0(iVar2 + 0x16a40);\n            *(iStack16 + 0x1230 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.004168a0();\n    return uVar3;\n}\n",
        "token_count": 470
    },
    "00424a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00424a80(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x424afd;\n            fcn.004346e0();\n            *(*0x20 + -0x38) = 0x424b0e;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x424b18;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424b1d;\n            fcn.00434900();\n            *(*0x20 + -0x38) = 0x424b27;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424b2c;\n            fcn.00434900();\n            *(*0x20 + -0x38) = 0x424b36;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424b3b;\n            fcn.00434900();\n            *(*0x20 + -0x38) = 0x424b45;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424b4a;\n            fcn.00434940();\n            *(*0x20 + -0x38) = 0x424b4f;\n            fcn.00434760();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x424b65;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x424b75;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 815
    },
    "00424ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00424ba0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x424bc7;\n            iVar6 = fcn.00422980();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x424bee;\n                fcn.00420540();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x424c1e;\n                fcn.0040a080();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x424c73;\n                        fcn.0040a2a0();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x56a638) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x424d45;\n                        fcn.0040a2a0();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x424d8b;\n                    fcn.0045d4a0(0x40);\n                }\n                *(*0x20 + -0x48) = 0x424d98;\n                fcn.0045d4a0(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x424da9;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x424db9;\n        fcn.0045ad80();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1424
    },
    "00424de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00424de0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x424e06;\n            iVar4 = fcn.00422980();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x424e2d;\n                fcn.00420540();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x424e4f;\n                fcn.0040a080();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x00424e90;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x00424e90:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00424f1c;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x56a638) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00424f1c:\n                        *(*0x20 + -0x48) = 0x424f26;\n                        fcn.0040a2a0();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x424f70;\n                    fcn.0045d4a0(0x40);\n                }\n                *(*0x20 + -0x48) = 0x424f7d;\n                fcn.0045d4a0(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x424f8e;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x424f9d;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1218
    },
    "00424fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00424fc0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    puVar5 = fcn.004168a0();\n    fcn.0040a2a0();\n    *(puVar5 + 10) = 1;\n    if (*0x598440 == 0) {\n        puVar5[2] = unaff_RBX;\n    }\n    else {\n        fcn.0045d0e0(unaff_RBX);\n    }\n    puVar5[3] = arg1;\n    if (*0x598440 == 0) {\n        puVar5[4] = unaff_RDI;\n        puVar5[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045d100(puVar5 + 4, unaff_RDI, in_R8, in_R9);\n        fcn.0045d0e0(uStack0000000000000028);\n    }\n    cVar4 = fcn.00424ba0();\n    if (cVar4 != '\\0') {\n        if (*0x59820c != 0) {\n            fcn.00411320(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.0041be00();\n            fcn.0041bc60(0x52c180);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.0040a080();\n    *0x570fa0 = *0x570fa0 - *0x570f70;\n    *puVar5 = *0x570f88;\n    *0x570f88 = puVar5;\n    fcn.0040a2a0();\n    return 0;\n}\n",
        "token_count": 649
    },
    "00425980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00425980(ulong arg1)\n\n{\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x52d760 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x598440 == 0) {\n                    *(in_RAX + 0x10110) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x4259cf;\n                    in_RAX = fcn.0045d0e0();\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4259e6;\n                fcn.0042a7e0();\n                *(*0x20 + -0x28) = 0x4259f0;\n                fcn.00427c40();\n                arg1_00 = *0x52c2a0;\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x10078) = *0x52c2a0;\n                if (*0x598440 == 0) {\n                    *(arg2 + 0x10108) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x425a2b;\n                    fcn.0045cfe0(arg1_00, arg2, in_R8, in_R9);\n                }\n                *(arg2 + 0x100f8) = *0x52c2a0;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x52d760;\n            *(*0x20 + -0x28) = 0x425a4d;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x425a5e;\n            fcn.00434fe0();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x425a7a;\n            fcn.00434de0(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x425a7f;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x425a85;\n            fcn.00434760();\n            *(*0x20 + -0x28) = 0x425a8a;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x425a9b;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x425aa5;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x425aaa;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x425aaf;\n            fcn.00434760();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x425ac5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x425ada;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1015
    },
    "004266c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004266c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10118) != '\\0') goto code_r0x00426733;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x56a638);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00426733:\n                *(*0x20 + -0x20) = 0x42673e;\n                iVar1 = fcn.0042a9a0();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x52c298;\n            }\n            *(*0x20 + -0x20) = 0x42676c;\n            in_RAX = fcn.0045d4a0(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42677c;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 518
    },
    "00427540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00427540(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x10078);\n            uVar1 = uVar3 + 0x800000000000;\n            uVar5 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar5 || *(in_RAX + 0x10088) == uVar5) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = (uVar3 & 0x3fffff) >> 0xd;\n            if (-(uVar3 - 0x200) < unaff_RBX) goto code_r0x00427659;\n            uVar6 = *(in_RAX + 0x68);\n            if (uVar5 < uVar6) {\n                uVar6 = *(*(in_RAX + 0x60) + uVar5 * 8);\n                if (uVar6 < 0) {\n                    uVar6 = 0x200000;\n                }\n                else {\n                    uVar6 = uVar6 >> 0x15 & 0x1fffff;\n                }\n                if (uVar6 < unaff_RBX) {\ncode_r0x00427659:\n                    *(*0x20 + -0x40) = 0x42765e;\n                    iVar2 = fcn.004267a0();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x52c2a0;\n                        }\n                        return 0;\n                    }\ncode_r0x00427698:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x4276b4;\n                    fcn.00426340(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar5;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x40) = 0x427625;\n                    iVar2 = fcn.00429060(uVar3);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00427698;\n                    }\n                    *(*0x20 + -0x40) = 0x427707;\n                    fcn.004346e0();\n                    *(*0x20 + -0x40) = 0x427718;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x40) = 0x427725;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x40) = 0x427736;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x40) = 0x427745;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x40) = 0x42774a;\n                    fcn.00434940();\n                    *(*0x20 + -0x40) = 0x42774f;\n                    fcn.00434760();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x427765;\n                    fcn.004346e0();\n                    *(*0x20 + -0x40) = 0x427776;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x40) = 0x42778a;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x40) = 0x42779b;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x40) = 0x4277a5;\n                    fcn.00434e40();\n                    *(*0x20 + -0x40) = 0x4277aa;\n                    fcn.00434940();\n                    *(*0x20 + -0x40) = 0x4277af;\n                    fcn.00434760();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x4277c5;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x40) = 0x4277d2;\n                fcn.0045d4a0(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x4277dd;\n            in_RAX = fcn.0045d4a0(uVar6);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4277ed;\n        fcn.0045f460();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1563
    },
    "00427800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427800(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX + 0x800000000000;\n            if (uVar5 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            uVar7 = (arg1 * 0x2000 + unaff_RBX) - 1;\n            uVar6 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            if (*(in_RAX + 0x10100) + 0x800000000000U < uVar6) {\n                *(in_RAX + 0x10100) = uVar7;\n            }\n            if (arg1 == 1) {\n                if (uVar5 >> 0x23 < 0x2000) {\n                    uVar7 = (unaff_RBX & 0x3fffff) >> 0x13;\n                    if (uVar7 < 8) {\n                        puVar1 = (uVar5 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar5 >> 0x23) * 8) + uVar7 * 8;\n                        *puVar1 = *puVar1 & ~(1 << ((unaff_RBX & 0x3fffff) >> 0xd & 0x3f));\n                        goto code_r0x004279b6;\n                    }\n                    *(*0x20 + -0x60) = 0x4279dc;\n                    fcn.0045d4a0(8);\n                }\n                *(*0x20 + -0x60) = 0x4279e9;\n                fcn.0045d4a0(0x2000);\n                goto code_r0x004279e9;\n            }\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar7 = (uVar7 & 0x3fffff) >> 0xd;\n            if (uVar6 >> 0x16 == uVar5 >> 0x16) {\n                uVar5 = uVar5 >> 0x23;\n                if (0x1fff < uVar5) {\n                    *(*0x20 + -0x60) = 0x427a07;\n                    uVar7 = fcn.0045d4a0(0x2000);\n                    goto code_r0x00427a07;\n                }\n                *(*0x20 + -0x60) = 0x427954;\n                fcn.00428b00((uVar7 - unaff_RBX) + 1);\ncode_r0x004279e9:\n                arg1 = *(*0x20 + -0x10);\ncode_r0x004279b6:\n                *(*0x20 + -0x60) = 0x4279c5;\n                fcn.00425d60(arg1);\n                return;\n            }\n            if (uVar5 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = uVar6 >> 0x16;\n                *(*0x20 + -0x28) = uVar5 >> 0x16;\n                *(*0x20 + -0x30) = uVar7;\n                *(*0x20 + -0x60) = 0x427908;\n                fcn.00428b00(-(unaff_RBX - 0x200));\n                uVar5 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x28);\n                uVar7 = *(*0x20 + -0x20);\n                while (arg1 = iVar2 + 1,  arg1 < uVar7) {\n                    uVar7 = arg1 >> 0xd;\n                    if (0x1fff < uVar7) goto code_r0x00427a9d;\ncode_r0x00427a07:\n                    *(*0x20 + -0x38) = arg1;\n                    uVar3 = *(uVar5 + 0x78 + uVar7 * 8);\n                    *(*0x20 + -0x60) = 0x427a27;\n                    fcn.00428c20(uVar3, (arg1 & 0x1fff) << 7);\n                    uVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x20);\n                    uVar7 = unaff_RBX;\n                    iVar2 = *(*0x20 + -0x38);\n                }\n                if (*(*0x20 + -0x18) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x427a8e;\n                    fcn.00428b00(*(*0x20 + -0x30) + 1);\n                    goto code_r0x004279e9;\n                }\n                *(*0x20 + -0x60) = 0x427a9d;\n                fcn.0045d4a0(0x2000);\ncode_r0x00427a9d:\n                *(*0x20 + -0x60) = 0x427aa7;\n                fcn.0045d4a0(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x427ab4;\n            in_RAX = fcn.0045d4a0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x427ac9;\n        fcn.0045f460();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1640
    },
    "00427c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00427c40(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x52d7a0;\n            *(*0x20 + -0x28) = *0x52d7a8;\n            *(*0x20 + -0x24) = *0x52d7ac;\n            *(*0x20 + -0x20) = *0x52d7b0;\n            *(*0x20 + -0x1c) = *0x52d7b4;\n            *(*0x20 + -0x18) = *0x52d7b8;\n            *(*0x20 + -0x14) = *0x52d7bc;\n            *(*0x20 + -0x10) = *0x52d7c0;\n            *(*0x20 + -0xc) = *0x52d7c4;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    return;\n                }\n                *(*0x20 + -0x58) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar5 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x70) = 0x427cdd;\n                iVar3 = fcn.00415860(arg1, *0x598358 + uVar5 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar1 = *(*0x20 + -0x50);\n                *(*0x20 + -0x38) = uVar1;\n                iVar2 = *(*0x20 + 8);\n                iVar3 = *(*0x20 + -0x58);\n                noname_1 = *(*0x20 + -0x48);\n                *(iVar2 + 8 + iVar3 * 0x18) = 0;\n                *(iVar2 + 0x10 + iVar3 * 0x18) = uVar1;\n                if (*0x598440 == 0) {\n                    *(iVar2 + iVar3 * 0x18) = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x427d4d;\n                    fcn.0045d100(arg1, noname_1, iVar3, iVar3 * 3);\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x70) = 0x427d6d;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x427d78;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 939
    },
    "004282c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004282c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.00428380();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "004284c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004284c0(void)\n\n{\n    uint64_t *puVar1;\n    uchar (*pauVar2) [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004284c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar5 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        uVar3 = *in_RAX;\n        uVar7 = uVar3 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar6 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar6;\n        uVar4 = (uVar3 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar4;\n        uVar3 = 0;\n        do {\n            if (0x3f < uVar3) {\n                if (*in_RAX + 0x800000000000 < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42866c;\n                fcn.00425d60(0x40);\n                pauVar2 = *(*0x20 + 8);\n                *pauVar2 = in_XMM15;\n                *pauVar2[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar3 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004286a5;\n                uVar8 = uVar4 + uVar3 >> 6;\n                if (7 < uVar8) goto code_r0x00428694;\n                puVar1 = (uVar6 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8) + uVar8 * 8;\n                *puVar1 = *puVar1 & ~(1 << (uVar4 + uVar3 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar3 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00428687;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x50) = 0x42860b;\n                fcn.004289c0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar3 = *(*0x20 + -0x28);\n                uVar7 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x18);\n            }\n            uVar3 = uVar3 + 1;\n        } while( true );\n    }\n    goto code_r0x004286b3;\ncode_r0x00428687:\n    *(*0x20 + -0x50) = 0x428694;\n    fcn.0045d4a0(0x2000);\ncode_r0x00428694:\n    *(*0x20 + -0x50) = 0x4286a5;\n    fcn.0045d4a0(8);\ncode_r0x004286a5:\n    *(*0x20 + -0x50) = 0x4286b2;\n    in_RAX = fcn.0045d4a0(0x2000);\ncode_r0x004286b3:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x4286c5;\n    fcn.0045f460();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x004284c0;\n}\n",
        "token_count": 1193
    },
    "004289c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004289c0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        uVar4 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | 1 << (uVar4 & 0x3f);\n            return;\n        }\n        uVar1 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar1 >> 6;\n        if (uVar6 == uVar5) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar4 & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 | -1 << (uVar4 & 0x3f);\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0xffffffffffffffff;\n            }\n            uVar5 = (uVar1 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045d4a0(8);\n    }\n    fcn.0045d4a0(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 510
    },
    "00428b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428b00(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        uVar4 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar4 & 0x3f));\n            return;\n        }\n        uVar1 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar1 >> 6;\n        if (uVar6 == uVar5) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar4 & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (uVar4 & 0x3f));\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0;\n            }\n            uVar5 = (uVar1 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar5 & 0x3f) & -(uVar5 < 0x40));\n            return;\n        }\n        fcn.0045d4a0(8);\n    }\n    fcn.0045d4a0(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 506
    },
    "00428c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00428c40(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar3 = unaff_RBX >> 6;\n                if (7 < uVar3) {\n                    *(*0x20 + -0x40) = 0x428d8a;\n                    in_RAX = fcn.0045d4a0(8);\n                    goto code_r0x00428d8a;\n                }\n                return *(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f) & 1;\n            }\n            uVar3 = unaff_RBX >> 6;\n            if (uVar3 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar3) {\n                    if (*0x5981d8 == 0) {\n                        *(*0x20 + -0x40) = 0x428d49;\n                        uVar3 = fcn.00401d20();\n                    }\n                    else {\n                        uVar3 = popcnt(*(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar3;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    in_RDX = *0x5981d8;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x20) = uVar3;\n                        *(*0x20 + -0x40) = 0x428cd9;\n                        in_R8 = fcn.00401d20();\n                        in_RDX = *0x5981d8;\n                        uVar3 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar3 * 8) >> (uVar1 & 0x3f));\n                    }\n                    while( true ) {\n                        uVar3 = uVar3 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar3) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar3;\n                            *(*0x20 + -0x40) = 0x428db9;\n                            in_R9 = fcn.00401d20();\n                            in_RDX = *0x5981d8;\n                            uVar3 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar3 * 8));\n                        }\ncode_r0x00428d8a:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar3 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x428e17;\n                        iVar2 = fcn.00401d20();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar2 = popcnt((-(uVar3 < 0x40) & 1 << (uVar3 & 0x3f)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar2 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x428e3a;\n                fcn.0045d4a0(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x428e47;\n            in_RAX = fcn.0045d4a0(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = uVar3;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x428e5c;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1401
    },
    "00429060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00429060(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.00429220(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.00429120(arg1);\n    return iVar1;\n}\n",
        "token_count": 308
    },
    "00429440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429440(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX == 1) {\n                iVar1 = unaff_RBX * 8 + 0xb0;\n                goto code_r0x00429483;\n            }\n            if (in_RAX - 2U < 2) {\n                iVar1 = unaff_RBX * 8 + 0x40;\ncode_r0x00429483:\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x429499;\n                iVar1 = fcn.0040c4a0(0x59a0e0);\n                *0x598290 = *0x598290 + *(*0x20 + -0x10);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x30) = 0x4294d2;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4294e5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 538
    },
    "00429500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00429500(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x429545;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x429550;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 285
    },
    "004299e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004299e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if (*0x598304 == '\\0') {\n        fcn.00429a40();\n        *0x598304 = '\\x01';\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 127
    },
    "00429ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429ee0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    double *pdVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x429f35;\n            fcn.0045d6f4();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x108;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x170) = 0x429f97;\n                uVar1 = fcn.00453260(0x20);\n            }\n            else {\n                *(*0x20 + -0x168) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x170) = 0x429f7f;\n                uVar1 = fcn.00450500(0, in_RDX, *0x20 + -0x108, 0x20);\n            }\n            *(*0x20 + -0x118) = uVar1;\n            *(*0x20 + -0x170) = 0x429faa;\n            fcn.0040a080();\n            arg1 = *(*0x20 + -0x118);\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x170) = 0x42a0a6;\n            in_RAX = fcn.0045d4c0(arg1, 0x20);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x42a0c5;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n    *(*0x20 + -0x170) = 0x429fdb;\n    uVar1 = fcn.004295c0(*0x20 + -0x108);\n    *(*0x20 + -0x110) = uVar1;\n    if (*(*0x20 + 0x20) == 2) {\n        if (*(*0x20 + 8) < *(*0x20 + 0x10)) {\n            *(*0x20 + -0x170) = 0x42a00a;\n            pdVar2 = fcn.00429560();\n            *pdVar2 = *(*0x20 + 0x10) / *(*0x20 + 8) + *pdVar2;\n            *(*0x20 + -0x170) = 0x42a045;\n            iVar3 = fcn.00429560();\n            *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 0x10);\n            goto code_r0x0042a080;\n        }\n    }\n    *(*0x20 + -0x170) = 0x42a058;\n    pdVar2 = fcn.00429560();\n    *pdVar2 = *0x4c7978 + *pdVar2;\n    *(*0x20 + -0x170) = 0x42a072;\n    iVar3 = fcn.00429560();\n    *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 8);\ncode_r0x0042a080:\n    *(*0x20 + -0x170) = 0x42a08c;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 1161
    },
    "0042a7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042a7e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    arg1 = unaff_RBX;\n    uVar1 = fcn.0040c4a0(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x598440 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045cfe0(arg1, in_RAX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 248
    },
    "0042bbe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bbe0(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x598445 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42bc45;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42bc50;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "0042bc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bc60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x16c0) = iVar1 + 0x16d0;\n        return;\n    }\n    if ((*0x598445 != '\\0') && (in_RAX != 0)) {\n        fcn.00403a60();\n        if (*0x598444 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x16c0) = iVar1 + 0x16d0;\n            return;\n        }\n    }\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 217
    },
    "0042bd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bd20(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x16c0) - (in_RAX + 0x16d0) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x16c0) = 0;\n                if (*0x5981d4 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x16d0 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42bd9b;\n                        fcn.0041c3c0(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42bdbe;\n                    fcn.0042bbe0();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar6 = arg1;\n                    if (0xfff < *(in_RAX + 0x16d0 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42be05;\n                        iVar3 = fcn.00411320(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar8 = 1 << (uVar4 & 7);\n                            if ((uVar8 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar8;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042bfad;\n                                iVar2 = *(*(uVar4 * 8 + 0x56a638) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar8 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar8 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar8;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar6 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar6) goto code_r0x0042bfa5;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x16d0 + uVar6 * 8) = iVar3;\n                                    uVar6 = uVar6 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x16a8) = *(in_RAX + 0x16a8) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar6;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42bf7c;\n                    fcn.00421a80(arg1);\n                    *(*0x20 + -0x48) = 0x42bf8d;\n                    fcn.0042bbe0();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42bfa5;\n                fcn.0045d500(arg1, 0x200);\ncode_r0x0042bfa5:\n                *(*0x20 + -0x48) = 0x42bfad;\n                fcn.0045d480(arg1);\ncode_r0x0042bfad:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42bfba;\n                fcn.0045d4a0(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42bfc5;\n            in_RAX = fcn.0045d4e0(uVar4, 0x200);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42bfd0;\n        fcn.0045f460();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1587
    },
    "0042bfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bfe0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598218 == 0) {\n        fcn.0040a080();\n        if (*0x598218 == 0) {\n            fcn.0042c2a0();\n            *0x598218 = 1;\n        }\n        fcn.0040a2a0();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042c0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042c0e0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x28);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042c0f6;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x28;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042c0f6:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x88);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042c10e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x88;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042c10e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 533
    },
    "0042c1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042c1e0(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040c4a0(0x59a100);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xe8) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xe8 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040a2a0();\n    return puVar1;\n}\n",
        "token_count": 272
    },
    "0042c3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042c3a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f7a0();\n    if (iStack16 == 0) {\n        fcn.0045e900();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0042c460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042c460(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x598220 != 0) {\n                return *0x598220;\n            }\n            *0x598220 = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x52c288;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42c4bc;\n            uVar1 = fcn.0042f7a0();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42c4e7;\n            fcn.0045e900();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42c508;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x42c519;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x42c525;\n            fcn.00434ce0();\n            *(*0x20 + -0x48) = 0x42c536;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x42c53b;\n            fcn.00434760();\n            *(*0x20 + -0x48) = 0x42c54c;\n            fcn.00432f60();\n        }\n        *(puVar2 + -8) = 0x42c552;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 710
    },
    "0042c560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042c560(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x52c288 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x598210;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x52c288;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42c6c7;\n                fcn.0042f8a0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42c70c;\n                    fcn.0045e900();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42c757;\n                        fcn.004346e0();\n                        *(*0x20 + -0x888) = 0x42c768;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x888) = 0x42c774;\n                        fcn.00434de0();\n                        *(*0x20 + -0x888) = 0x42c785;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x888) = 0x42c78a;\n                        fcn.00434760();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42c79b;\n                        fcn.00432f60();\n                        goto code_r0x0042c79b;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x598220 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42c7e5;\n                            fcn.0042c460();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 0x10);\n                        *(*0x20 + -0x880) = *0x543a70;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42c845;\n                        fcn.0042f820();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42c86b;\n                            fcn.0045e900();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42c897;\n                        fcn.0042c900(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042c79b:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42c8cb;\n                fcn.0045d480(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42c8d0;\n            in_RAX = fcn.00430980();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42c8db;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2014
    },
    "0042ca80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042ca80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = unaff_RBX;\n            if (*0x5983a8 == 0) {\n                arg1 = 0x598b60;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x598b60;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42cad1;\n                fcn.0042f6a0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x598b60) = 0x5c;\n                    *0x5983a8 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x10);\n                    goto code_r0x0042cb1f;\n                }\n            }\n            else {\ncode_r0x0042cb1f:\n                if (*0x5981d5 == '\\0') {\n                    uVar1 = *0x5983a8;\n                    if (*0x5983a8 < 0x106) {\n                        *(*0x20 + -0x20) = *0x5983a8 + arg1;\n                        if (*0x5983a8 + arg1 < 0x106) {\n                            uVar2 = 0x598b60;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x5983a8;\n                            *(*0x20 + -0x50) = 0x42cbcf;\n                            uVar2 = fcn.00444ac0(*0x5983a8);\n                            arg1 = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42cbf8;\n                        fcn.0045ddc0(arg1);\n                        uVar1 = *(*0x20 + -0x20);\n                        if (uVar1 != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42cc1f;\n                            fcn.0042f620();\n                            return *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x50) = 0x42cc49;\n                        fcn.0045d480(0);\n                        arg1 = in_RAX;\n                    }\n                    *(*0x20 + -0x50) = 0x42cc53;\n                    fcn.0045d4e0(uVar1, 0x105);\n                }\n                else if (arg1 != 0) {\n                    *(*0x20 + -0x48) = *0x543a30;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42cb58;\n                    fcn.0042f720();\n                    return *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42cc5d;\n                fcn.0045d480(arg1);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42cc6e;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42cc85;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1237
    },
    "0042cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cca0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42cd05;\n            fcn.0042f620();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42cd67;\n                iVar1 = fcn.0042c9c0(0x10);\n                if (*0x598440 != 0) {\n                    *(*0x20 + -0x160) = 0x42cd85;\n                    fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x543a18;\n                }\n                *0x543a18 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42cde7;\n                uVar3 = fcn.0042c9c0(0x1b);\n                if (*0x598440 != 0) {\n                    *(*0x20 + -0x160) = 0x42ce05;\n                    fcn.0045cfe0(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x543a20;\n                }\n                *0x543a20 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42ce45;\n                iVar1 = fcn.0042c9c0(0xf);\n                if (*0x598440 != 0) {\n                    *(*0x20 + -0x160) = 0x42ce65;\n                    fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x543a30;\n                }\n                *0x543a30 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42ce9d;\n                iVar2 = fcn.0042c9c0(0xf);\n                iVar1 = iVar2;\n                if (*0x598440 != 0) {\n                    *(*0x20 + -0x160) = 0x42cebb;\n                    iVar2 = fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x543a38;\n                }\n                *0x543a38 = iVar1;\n                if ((iVar2 == 0) || (*0x543a30 == 0)) {\n                    *0x5981d5 = false;\n                }\n                else {\n                    *0x5981d5 = *0x543a18 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42cf14;\n                iVar1 = fcn.0042ca80(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42cf68;\n                    uVar3 = fcn.0042c9c0(0x12);\n                    if (*0x598440 != 0) {\n                        *(*0x20 + -0x160) = 0x42cf86;\n                        fcn.0045cfe0(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x543a58;\n                    }\n                    *0x543a58 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42cfae;\n                    iVar1 = fcn.0042ca80(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42d007;\n                        uVar3 = fcn.0042c9c0(0x16);\n                        if (*0x598440 != 0) {\n                            *(*0x20 + -0x160) = 0x42d025;\n                            fcn.0045cfe0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x543a40;\n                        }\n                        *0x543a40 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42d075;\n                        uVar3 = fcn.0042c9c0(0x11);\n                        if (*0x598440 != 0) {\n                            *(*0x20 + -0x160) = 0x42d093;\n                            fcn.0045cfe0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x543a60;\n                        }\n                        *0x543a60 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42d0e5;\n                        uVar3 = fcn.0042c9c0(0x17);\n                        if (*0x598440 != 0) {\n                            *(*0x20 + -0x160) = 0x42d105;\n                            fcn.0045cfe0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x543a68;\n                        }\n                        *0x543a68 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42d12d;\n                        iVar1 = fcn.0042ca80(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42d174;\n                            iVar1 = fcn.0042c9c0(0x10);\n                            if (*0x598440 != 0) {\n                                *(*0x20 + -0x160) = 0x42d192;\n                                fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x543a78;\n                            }\n                            *0x543a78 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42d1c7;\n                            iVar2 = fcn.0042c9c0(0xe);\n                            iVar1 = iVar2;\n                            if (*0x598440 != 0) {\n                                *(*0x20 + -0x160) = 0x42d1e5;\n                                iVar2 = fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x543a80;\n                            }\n                            *0x543a80 = iVar1;\n                            if ((*0x543a78 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42d22c;\n                                iVar1 = fcn.0042ca80(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42d285;\n                                    iVar2 = fcn.0042c9c0(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x598440 != 0) {\n                                        *(*0x20 + -0x160) = 0x42d2a5;\n                                        iVar2 = fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x543a70;\n                                    }\n                                    *0x543a70 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42d2fa;\n                                        iVar1 = fcn.0042c9c0(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42d309;\n                                            fcn.0042dd40();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42d32a;\n                                    fcn.00432f60();\n                                }\n                                *(*0x20 + -0x160) = 0x42d33b;\n                                fcn.00432f60();\n                            }\n                            *(*0x20 + -0x160) = 0x42d34c;\n                            fcn.00432f60();\n                        }\n                        *(*0x20 + -0x160) = 0x42d35d;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x160) = 0x42d36e;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x160) = 0x42d37f;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x160) = 0x42d390;\n            fcn.00432f60();\n        }\n        *(puVar6 + -8) = 0x42d396;\n        fcn.0045ad80();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3569
    },
    "0042d540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d625)\n// WARNING: Removing unreachable block (ram,0x0042d63e)\n\nulong fcn.0042d540(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f720();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.0042f620();\n    return 0;\n}\n",
        "token_count": 183
    },
    "0042d660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d660(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x5981ca == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.0042f620();\n            return uStack16;\n        }\n        fcn.0042f620();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 143
    },
    "0042dd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042dd40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42ddaa;\n            iVar1 = fcn.0042c9c0(0x18);\n            iVar2 = iVar1;\n            if (*0x598440 != 0) {\n                *(*0x20 + -0x98) = 0x42ddc8;\n                iVar1 = fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x543a28;\n            }\n            *0x543a28 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42de15;\n                iVar2 = fcn.0042c9c0(0x18);\n                if (*0x598440 != 0) {\n                    *(*0x20 + -0x98) = 0x42de33;\n                    fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x543a48;\n                }\n                *0x543a48 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42de89;\n                iVar1 = fcn.0042c9c0(0x1a);\n                iVar2 = iVar1;\n                if (*0x598440 != 0) {\n                    *(*0x20 + -0x98) = 0x42dea7;\n                    iVar1 = fcn.0045cfe0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x543a50;\n                }\n                *0x543a50 = iVar2;\n                if ((*0x543a48 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x543a50;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42dee5;\n                    fcn.0042f620();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x543a48;\n                            *(*0x20 + -0x88) = 0x598380;\n                            *(*0x20 + -0x98) = 0x42df36;\n                            fcn.0042f620();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x5981d6 = 1;\n                            *0x598378 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42dfc5;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x98) = 0x42dfd6;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x98) = 0x42dfe7;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x98) = 0x42dff8;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42e005;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1552
    },
    "0042e0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e0c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0042e0c0:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42e0e5;\n        iVar1 = fcn.0042f5c0();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42e12f;\n                    iVar1 = fcn.004449e0(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x544478 = uVar6;\n                    *0x544480 = uVar6;\n                    if (*0x598440 != 0) {\n                        *(*0x20 + -0x68) = 0x42e165;\n                        fcn.0045cfe0(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x544470;\n                    }\n                    *0x544470 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    uVar4 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042e1a0;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042e2fa;\n    }\n    goto code_r0x0042e308;\ncode_r0x0042e1a0:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42e231;\n        fcn.0042f620();\n        *(*0x20 + -0x18) = 0x497000;\n        *(*0x20 + -0x10) = 0x4b01e8;\n        *(*0x20 + -0x68) = 0x42e26c;\n        uVar2 = fcn.00458b20(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42e28a;\n        fcn.0042f6a0();\n        *(*0x20 + -0x68) = 0x42e2a5;\n        fcn.0042d3a0();\n        return;\n    }\n    if (uVar4 == 0) goto code_r0x0042e2f0;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = uVar4;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42e1c5;\n    uVar2 = fcn.004493e0();\n    iVar7 = *0x544470;\n    uVar4 = *(*0x20 + -0x30);\n    uVar6 = *0x544478;\n    if (*0x544478 <= uVar4) goto code_r0x0042e2e5;\n    *(*0x544470 + 8 + uVar4 * 0x10) = iVar1;\n    if (*0x598440 == 0) {\n        *(iVar7 + uVar4 * 0x10) = uVar2;\n        uVar6 = uVar4;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42e20d;\n        fcn.0045cfe0(iVar7, uVar4, param_3, param_4);\n        uVar6 = uVar4;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    uVar4 = *(*0x20 + -0x40);\n    while( true ) {\n        if (uVar4 == 0) {\n            *(*0x20 + -0x68) = 0x42e2e5;\n            fcn.0045d480(0);\n            goto code_r0x0042e2e5;\n        }\n        if (*piVar3 == 0) break;\n        uVar4 = uVar4 - 1;\n        piVar3 = piVar3 + (-uVar4 >> 0x3f & 2U);\n    }\n    iVar1 = uVar6 + 1;\n    uVar4 = uVar4 - 1;\n    iVar7 = piVar3 + (-uVar4 >> 0x3f & 2U);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042e1a0;\ncode_r0x0042e2e5:\n    *(*0x20 + -0x68) = 0x42e2f0;\n    fcn.0045d480(uVar6);\ncode_r0x0042e2f0:\n    *(*0x20 + -0x68) = 0x42e2fa;\n    fcn.0045d480(uVar4);\ncode_r0x0042e2fa:\n    *(*0x20 + -0x68) = 0x42e307;\n    fcn.0045d480(0x1000000);\ncode_r0x0042e308:\n    *(puVar8 + -8) = 0x42e30d;\n    fcn.0045ad80();\n    *0x20 = puVar8;\n    goto code_r0x0042e0c0;\n}\n",
        "token_count": 1603
    },
    "0042e3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042e3a0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.0042f620();\n    }\n    else if (in_RAX == 2) {\n        fcn.0042f620();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045d4c0(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042e4db:\n            fcn.0042f820();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.0042f6a0();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042e560(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042e4db;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 333
    },
    "0042e8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042e8c0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.0042f6a0();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045ed60();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.0042f7a0();\n            if (uStack56 != 1) break;\n            fcn.0045ed60();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.0045ac40();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.0045ac40();\n            return 0xffffffff;\n        }\n    }\n    fcn.0045ac40();\n    return 0xffffffff;\n}\n",
        "token_count": 431
    },
    "0042ebe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ebe0(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.0042f620();\n    if (iStack16 == 0) {\n        fcn.0045ac40();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0042ec60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ec60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x338) == 0) {\n        fcn.0042f7a0();\n        *(in_RAX + 0x338) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045ac40();\n        }\n        fcn.0042f7a0();\n        *(in_RAX + 0x340) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045ac40();\n            fcn.0042f620();\n            *(in_RAX + 0x338) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "0042ef80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ef80(void)\n\n{\n    uint64_t uVar1;\n    uchar (*pauVar2) [16];\n    int64_t iVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar7;\n    uint in_XMM15_Db;\n    uint uVar8;\n    uint in_XMM15_Dc;\n    uint uVar9;\n    uint in_XMM15_Dd;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x42eff3;\n            fcn.0042f920();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar3 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x10) = iVar3 + 0x328;\n                *(*0x20 + -0xb8) = 0x42f036;\n                fcn.0040a080();\n                iVar3 = *(*0x20 + -0x18);\n                *(iVar3 + 0x330) = *(*0x20 + -0x68);\n                if ((*(iVar3 + 0x348) == 0) && (*0x5981ca != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x42f085;\n                    fcn.0042f7a0();\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    iVar3 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x348) = iVar3;\n                    if (iVar3 != 0) goto code_r0x0042f0b8;\n                }\n                else {\ncode_r0x0042f0b8:\n                    *(*0x20 + -0xb8) = 0x42f0c5;\n                    fcn.0040a2a0();\n                    pauVar2 = *0x20 + -0x48;\n                    *pauVar2 = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = pauVar2;\n                    *(*0x20 + -0xa0) = pauVar2;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x42f106;\n                    fcn.0042f720();\n                    puVar4 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar3 = *(*0x20 + -0x40);\n                        uVar1 = iVar3 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar5 = puVar4[1];\n                        *(*0x20 + -0x50) = uVar5;\n                        if ((uVar1 <= uVar5) && ((uVar5 - iVar3) - 0x4000 < 0x4000001)) {\n                            *puVar4 = uVar1;\n                            puVar4[2] = iVar3 + 0x53a0U;\n                            puVar4[3] = iVar3 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x42f16e;\n                            fcn.0045ce40();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x42f197;\n                        fcn.004346e0();\n                        *(*0x20 + -0xb8) = 0x42f1a8;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb8) = 0x42f1b2;\n                        fcn.00434e40();\n                        *(*0x20 + -0xb8) = 0x42f1c5;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb8) = 0x42f1cf;\n                        fcn.00434e40();\n                        *(*0x20 + -0xb8) = 0x42f1e5;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xb8) = 0x42f1ea;\n                        fcn.00434760();\n                        *(*0x20 + -0xb8) = 0x42f1fb;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0xb8) = 0x42f205;\n                    fcn.0045e900();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x42f226;\n                    fcn.004346e0();\n                    *(*0x20 + -0xb8) = 0x42f237;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xb8) = 0x42f245;\n                    fcn.00434ce0();\n                    *(*0x20 + -0xb8) = 0x42f24a;\n                    fcn.00434940();\n                    *(*0x20 + -0xb8) = 0x42f24f;\n                    fcn.00434760();\n                    *(*0x20 + -0xb8) = 0x42f265;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0xb8) = 0x42f26a;\n                fcn.0045e900();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x42f28b;\n                fcn.004346e0();\n                *(*0x20 + -0xb8) = 0x42f29c;\n                fcn.00434fe0();\n                *(*0x20 + -0xb8) = 0x42f2a6;\n                fcn.00434ce0();\n                *(*0x20 + -0xb8) = 0x42f2ab;\n                fcn.00434940();\n                *(*0x20 + -0xb8) = 0x42f2b0;\n                fcn.00434760();\n                *(*0x20 + -0xb8) = 0x42f2c5;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0xb8) = 0x42f2ca;\n            fcn.0045e900();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x42f2eb;\n            fcn.004346e0();\n            *(*0x20 + -0xb8) = 0x42f2fc;\n            fcn.00434fe0();\n            *(*0x20 + -0xb8) = 0x42f306;\n            fcn.00434ce0();\n            *(*0x20 + -0xb8) = 0x42f30b;\n            fcn.00434940();\n            *(*0x20 + -0xb8) = 0x42f310;\n            fcn.00434760();\n            *(*0x20 + -0xb8) = 0x42f325;\n            fcn.00432f60();\n        }\n        *(puVar6 + -8) = 0x42f32b;\n        fcn.0045ad80();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2352
    },
    "0042f4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042f4e0(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x298) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2d0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2d8) = unaff_R14;\n        *(iVar1 + 0x2c8) = in_stack_00000000;\n        *(iVar1 + 0x2d0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.0045cbc0();\n    if (bVar2) {\n        *(iVar1 + 0x2d0) = 0;\n    }\n    return *(iVar1 + 0x2b0);\n}\n",
        "token_count": 250
    },
    "0042fc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042fc20(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    char cVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    uint64_t **ppuVar10;\n    uint64_t *puVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint uVar14;\n    uint in_XMM15_Db;\n    uint uVar15;\n    uint in_XMM15_Dc;\n    uint uVar16;\n    uint in_XMM15_Dd;\n    uint uVar17;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x350) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 800;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x350) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x328;\n                *(*0x20 + -0x560) = 0x42fc8d;\n                fcn.0040a080();\n                if (*(*(*0x20 + -0x10) + 0x330) == 0) {\n                    *(*0x20 + -0x560) = 0x42fcae;\n                    uVar7 = fcn.0040a2a0();\n                    iVar8 = *(*0x20 + -0x10);\n                    *(iVar8 + 0x350) = 0;\n                    LOCK();\n                    piVar1 = iVar8 + 800;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar7;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x330);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x42fd2b;\n                fcn.0042f920();\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                uVar17 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x430077;\n                fcn.0045e900();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x430098;\n                fcn.004346e0();\n                *(*0x20 + -0x560) = 0x4300a9;\n                fcn.00434fe0();\n                *(*0x20 + -0x560) = 0x4300b3;\n                fcn.00434ce0();\n                *(*0x20 + -0x560) = 0x4300b8;\n                fcn.00434940();\n                *(*0x20 + -0x560) = 0x4300bd;\n                fcn.00434760();\n                *(*0x20 + -0x560) = 0x4300ce;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x560) = 0x4300df;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + -8) = 0x4300ea;\n        fcn.0045ad80();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n    *(*0x20 + -0x560) = 0x42fd5a;\n    fcn.0040a2a0();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n    puVar9 = *0x20 + -0x4f0;\n    for (iVar8 = 0x9a; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x42fd98;\n    fcn.0040a080();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42fdb2;\n    fcn.0042f620();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x42fffa;\n        fcn.0040a2a0();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x430014;\n        uVar7 = fcn.0042f620();\n        iVar8 = *(*0x20 + -0x10);\n        *(iVar8 + 0x350) = 0;\n        LOCK();\n        piVar1 = iVar8 + 800;\n        *piVar1 = *piVar1 + 1;\n        return uVar7;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x42fdfb;\n    fcn.0042f6a0();\n    *(*0x20 + -0x560) = 0x42fe1d;\n    fcn.0040a2a0();\n    iVar8 = *(*0x20 + -0x18);\n    uVar7 = *(iVar8 + 0x98);\n    ppuVar10 = *(*0x20 + -0x10);\n    puVar11 = *ppuVar10;\n    if (((((puVar11 == NULL) || (uVar7 <= *puVar11)) || (puVar11[1] < uVar7 || puVar11[1] == uVar7)) &&\n        (((puVar11 = ppuVar10[10],  puVar11 == NULL || (uVar7 <= *puVar11)) ||\n         (puVar11[1] < uVar7 || puVar11[1] == uVar7)))) &&\n       (((puVar11 = ppuVar10[0x12],  puVar11 == NULL || (uVar7 <= *puVar11)) ||\n        (puVar11[1] < uVar7 || puVar11[1] == uVar7)))) {\n        puVar11 = NULL;\n    }\n    if (puVar11 == NULL) {\n        bVar13 = false;\n        goto code_r0x0042fecd;\n    }\n    if (*(puVar11 + 0xb1) == '\\0') {\n        if (*(puVar11[6] + 0xa0) == 0) {\n            bVar13 = false;\n            goto code_r0x0042fecd;\n        }\n        if (*(*(puVar11[6] + 0xa0) + 0x2708) == '\\0') {\n            bVar13 = false;\n            goto code_r0x0042fecd;\n        }\n    }\n    bVar13 = (*(puVar11 + 0x12) & 0xffffefff) == 2;\ncode_r0x0042fecd:\n    if (bVar13) {\n        uVar4 = *(iVar8 + 0xf8);\n        uVar5 = *(iVar8 + 0x98);\n        *(*0x20 + -0x560) = 0x42fef1;\n        cVar6 = fcn.004341a0(uVar5);\n        if (cVar6 != '\\0') {\n            iVar8 = *(*0x20 + -0x18);\n            puVar9 = *(iVar8 + 0x98) + -8;\n            uVar5 = CONCAT71(*0x4b0181, *0x4b0180);\n            *puVar9 = uVar4;\n            *(iVar8 + 0x98) = puVar9;\n            *(iVar8 + 0xf8) = uVar5;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar8;\n            *(*0x20 + -0x560) = 0x42ff4f;\n            fcn.0042f6a0();\n        }\n        ppuVar10 = *(*0x20 + -0x10);\n    }\n    *(ppuVar10 + 0x6a) = 0;\n    LOCK();\n    *(ppuVar10 + 100) = *(ppuVar10 + 100) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42ff9a;\n    fcn.0042f620();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42ffc8;\n    uVar7 = fcn.0042f620();\n    return uVar7;\n}\n",
        "token_count": 2749
    },
    "00430100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430100(int64_t arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x430127;\n            fcn.0044abe0();\n            *(*0x20 + -0x28) = 0x43012c;\n            fcn.0044b2c0();\n            if (unaff_RBX < 8) {\ncode_r0x00430149:\n                if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) || (*(arg1 + 0xc0) == 0)) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43017c;\n                fcn.00432f60();\n            }\n            else {\n                arg1 = 8;\n                *(*0x20 + -0x28) = 0x430145;\n                cVar1 = fcn.00402180(8, in_RDX);\n                if (cVar1 == '\\0') goto code_r0x00430149;\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = 0x43018b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4301a5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "004301c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004301c0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x430206;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x430216;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 348
    },
    "004309e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004309e0(void)\n\n{\n    int32_t *in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        if (*in_RAX == 0) {\n            *(in_RAX + 1) = 0;\n            *(in_RAX + 6) = 0;\n            *(in_RAX + 2) = auStackX8;\n            *(in_RAX + 4) = in_stack_00000000;\n            *(in_RAX + 0x10) = 0;\n            *(in_RAX + 0xe) = 0;\n            *(in_RAX + 8) = 0;\n            *(in_RAX + 0xc) = 0;\n            *(in_RAX + 10) = *(unaff_R14 + 0x28);\n            *(unaff_R14 + 0x28) = in_RAX;\n            fcn.0045cf80();\n            return;\n        }\n        fcn.00432f60();\n    }\n    fcn.00432f60();\n    puVar5 = auStack24;\ncode_r0x00430aa0:\n    puVar6 = puVar5;\n    if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n        puVar6 = puVar5 + -0x48;\n        *(puVar5 + -8) = puVar7;\n        puVar7 = puVar5 + -8;\n        *(puVar5 + -0x1c) = 0;\n        *(puVar5 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n            *(puVar5 + iVar1 * 4 + -0x1c) = 0xffffffff;\n        }\n        uVar2 = 0;\n        do {\n            if (uVar2 < 9) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = uVar2 + 7 >> 4;\n            }\n            if (4 < uVar3) {\n                return;\n            }\n            if (uVar2 < 9) {\n                uVar4 = 0x50;\n            }\n            else {\n                uVar4 = uVar2 + 0x48;\n            }\n            if (uVar4 < 0x8000) {\n                if (uVar4 < 0x3f9) {\n                    uVar4 = uVar4 + 7 >> 3;\n                    if (0x80 < uVar4) goto code_r0x00430cd2;\n                    uVar4 = *(uVar4 + 0x52f1a0);\n                    if (0x43 < uVar4) goto code_r0x00430cc5;\n                    uVar4 = *(uVar4 * 2 + 0x52f2e0);\n                }\n                else {\n                    uVar4 = uVar4 - 0x381 >> 7;\n                    if (0xf8 < uVar4) goto code_r0x00430cb7;\n                    if (0x43 < \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                               [uVar4]) goto code_r0x00430caa;\n                    uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [uVar4] * 2 + 0x52f2e0);\n                }\n            }\n            else if (uVar4 <= uVar4 + 0x2000) {\n                uVar4 = uVar4 + 0x1fff & 0xffffffffffffe000;\n            }\n            if (*(puVar5 + uVar3 * 4 + -0x1c) < 0) {\n                *(puVar5 + uVar3 * 4 + -0x1c) = uVar4;\n            }\n            else if (uVar4 != *(puVar5 + uVar3 * 4 + -0x1c)) goto code_r0x00430c23;\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00430ce0;\ncode_r0x00430c23:\n    *(puVar5 + -0x30) = uVar3;\n    *(puVar5 + -0x38) = uVar4;\n    *(puVar5 + -0x28) = uVar2;\n    *(puVar5 + -0x50) = 0x430c37;\n    fcn.004346e0();\n    *(puVar5 + -0x50) = 0x430c48;\n    fcn.00434fe0();\n    *(puVar5 + -0x50) = 0x430c52;\n    fcn.00434ce0();\n    *(puVar5 + -0x50) = 0x430c65;\n    fcn.00434fe0();\n    *(puVar5 + -0x50) = 0x430c6f;\n    fcn.00434ce0();\n    *(puVar5 + -0x50) = 0x430c85;\n    fcn.00434fe0();\n    *(puVar5 + -0x50) = 0x430c8f;\n    fcn.00434ce0();\n    *(puVar5 + -0x50) = 0x430c94;\n    fcn.00434940();\n    *(puVar5 + -0x50) = 0x430c99;\n    fcn.00434760();\n    *(puVar5 + -0x50) = 0x430caa;\n    fcn.00432f60();\ncode_r0x00430caa:\n    *(puVar5 + -0x50) = 0x430cb7;\n    fcn.0045d480(0x44);\ncode_r0x00430cb7:\n    *(puVar5 + -0x50) = 0x430cc5;\n    fcn.0045d4a0(0xf9);\ncode_r0x00430cc5:\n    *(puVar5 + -0x50) = 0x430cd2;\n    fcn.0045d480(0x44);\ncode_r0x00430cd2:\n    *(puVar5 + -0x50) = 0x430cdf;\n    fcn.0045d4a0(0x81);\ncode_r0x00430ce0:\n    *(puVar6 + -8) = 0x430ce5;\n    fcn.0045ad80();\n    puVar5 = puVar6;\n    goto code_r0x00430aa0;\n}\n",
        "token_count": 1783
    },
    "00430d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.00430d80(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int32_t *piStack72;\n    int64_t iStack64;\n    ulong uStack56;\n    int32_t iStack48;\n    int32_t **ppiStack40;\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    piStack72 = NULL;\n    if (in_EAX < 9) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = in_EAX + 7U >> 4;\n    }\n    iStack48 = in_EAX;\n    if (uVar4 < 5) {\n        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n        arg3 = uVar4 * 3;\n        if ((*(iVar5 + 0x70 + uVar4 * 0x18) == 0) && (*(uVar4 * 8 + 0x544dd0) != 0)) {\n            auStack32 = CONCAT88(iVar5, 0x4310c0);\n            iStack64 = iVar5;\n            uStack16 = uVar4;\n            fcn.0045ac40();\n            iVar5 = iStack64;\n        }\n        iVar1 = *(iVar5 + 0x70 + uVar4 * 0x18);\n        if (0 < iVar1) {\n            piStack72 = *(*(iVar5 + 0x68 + uVar4 * 0x18) + -8 + iVar1 * 8);\n            arg1 = iVar1 - 1;\n            arg4 = *(iVar5 + 0x70 + uVar4 * 0x18);\n            if (arg1 < arg4) {\n                if (*0x598440 == 0) {\n                    *(*(iVar5 + 0x68 + uVar4 * 0x18) + -8 + iVar1 * 8) = 0;\n                }\n                else {\n                    iStack48 = fcn.0045d120(arg1, arg2, arg3, arg4);\n                }\n                uVar4 = *(iVar5 + 0x78 + arg3 * 8);\n                if (arg1 <= uVar4) {\n                    *(iVar5 + 0x70 + arg3 * 8) = arg1;\n                    goto code_r0x00430ebf;\n                }\n                fcn.0045d500(arg1, uVar4);\n            }\n            fcn.0045d480(arg4);\n            pcVar2 = swi(3);\n            piVar3 = (*pcVar2)();\n            return piVar3;\n        }\n    }\ncode_r0x00430ebf:\n    if (piStack72 == NULL) {\n        uStack56 = 0x430f60;\n        ppiStack40 = &piStack72;\n        fcn.0045ac40();\n        iStack48 = in_EAX;\n    }\n    *piStack72 = iStack48;\n    *(piStack72 + 5) = 1;\n    return piStack72;\n}\n",
        "token_count": 759
    },
    "00431260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431260(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    int64_t arg4;\n    int64_t iVar5;\n    int64_t arg3;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if (*(in_RAX + 8) != 0) {\n        fcn.004315e0();\n    }\n    if (*(in_RAX + 6) != 0) {\n        fcn.00431620();\n    }\n    if (*(in_RAX + 5) == '\\0') {\n        return;\n    }\n    if (*in_RAX < 9) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *in_RAX + 7U >> 4;\n    }\n    if (4 < uVar4) {\n        return;\n    }\n    arg3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    arg4 = uVar4 * 3;\n    if (*(arg3 + 0x78 + uVar4 * 0x18) == *(arg3 + 0x70 + uVar4 * 0x18)) {\n        fcn.0045ac40();\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    *in_RAX = 0;\n    *(in_RAX + 1) = 0;\n    *(in_RAX + 6) = 0;\n    *(in_RAX + 2) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(in_RAX + 0x10) = 0;\n    *(in_RAX + 0xe) = 0;\n    iVar5 = arg3;\n    iVar6 = arg4;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0xc) = 0;\n        *(in_RAX + 10) = 0;\n        piVar2 = in_RAX;\n    }\n    else {\n        fcn.0045d100(arg1, 0, arg3, arg4);\n        piVar2 = fcn.0045d100(arg1, 0, iVar5, iVar6);\n    }\n    arg1_00 = *(iVar5 + 0x70 + iVar6 * 8);\n    iVar1 = *(iVar5 + 0x68 + iVar6 * 8);\n    iVar3 = iVar1;\n    if (*(iVar5 + 0x78 + iVar6 * 8) < arg1_00 + 1U) {\n        iVar3 = fcn.00444ac0(arg1_00);\n        *(arg3 + 0x78 + uVar4 * 0x18) = arg1_00;\n        if (*0x598440 == 0) {\n            *(arg3 + 0x68 + uVar4 * 0x18) = iVar3;\n            piVar2 = in_RAX;\n            arg1_00 = iVar1;\n            iVar5 = arg3;\n            iVar6 = arg4;\n        }\n        else {\n            iVar3 = fcn.0045cfe0(arg1_00, arg4, arg3, iVar6);\n            piVar2 = in_RAX;\n            arg1_00 = iVar1;\n            iVar5 = arg3;\n            iVar6 = arg4;\n        }\n    }\n    *(iVar5 + 0x70 + iVar6 * 8) = arg1_00 + 1;\n    if (*0x598440 == 0) {\n        *(iVar3 + arg1_00 * 8) = piVar2;\n    }\n    else {\n        fcn.0045cfe0(arg1_00, arg1_00 + 1, iVar5, iVar6);\n    }\n    return;\n}\n",
        "token_count": 956
    },
    "00431660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431660(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    ulong arg1;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    ulong auStackX8 [4];\n    \n    puVar4 = *(unaff_R14 + 0x28);\n    if (puVar4 == NULL) {\n        return;\n    }\n    if (*(puVar4 + 2) != auStackX8) {\n        return;\n    }\n    if (*(puVar4 + 6) == '\\0') {\n        uVar1 = *puVar4;\n        arg3 = uVar1;\n        if (uVar1 != 0) {\n            if (uVar1 == 8) {\n                auStackX8[0] = *(puVar4 + 0x12);\n            }\n            else {\n                fcn.0045ddc0(uVar1);\n            }\n        }\n        arg1 = *(puVar4 + 6);\n        if (*0x598440 == 0) {\n            *(puVar4 + 6) = 0;\n        }\n        else {\n            arg3 = 0;\n            puVar4 = fcn.0045d160(arg1, puVar4 + 6, 0, param_4);\n        }\n        if (*0x598440 == 0) {\n            *(unaff_R14 + 0x28) = *(puVar4 + 10);\n        }\n        else {\n            fcn.0045d100(arg1, *(puVar4 + 10), arg3, param_4);\n        }\n        fcn.00431260(arg1);\n        fcn.0045cba0();\n        return;\n    }\n    cVar3 = fcn.00431e80(param_1, auStackX8, param_3, param_4);\n    if (cVar3 != '\\0') {\n        if (*0x598440 == 0) {\n            *(unaff_R14 + 0x28) = *(puVar4 + 10);\n        }\n        else {\n            fcn.0045d100(unaff_R14, *(puVar4 + 10), param_3, param_4);\n        }\n        fcn.00431260(unaff_R14);\n        return;\n    }\n    fcn.00432f60();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 565
    },
    "004317e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004317e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.00409cc0(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00409cc0(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00409a20();\n                    *(in_RAX + 8) = 0x495b60;\n                    if (*0x598440 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045cfe0(0x495b60, in_RAX, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00409a20();\n                *(in_RAX + 8) = 0x495b60;\n                if (*0x598440 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045cfe0(0x495b60, in_RAX, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.004572c0();\n    return;\n}\n",
        "token_count": 450
    },
    "00431940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431940(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.00431940(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434760();\n    fcn.00407800(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 289
    },
    "00431e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00431e80(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    ulong in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint8_t *puVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uchar uVar15;\n    uint64_t arg4_00;\n    int32_t *piVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int64_t unaff_R14;\n    \ncode_r0x00431e80:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar13 = 0;\n        puVar7 = *(unaff_RBX + 0xc);\n        do {\n            puVar12 = puVar7 + 1;\n            if (*puVar7 < 0x80) {\n                if (iVar13 < 0) goto code_r0x004326a0;\n                iVar9 = 0;\n                uVar14 = 0;\n                goto code_r0x00431edf;\n            }\n            if (iVar13 < 0) goto code_r0x004326b8;\n            iVar13 = iVar13 + 7;\n            puVar7 = puVar12;\n        } while (iVar13 < 0x1d);\n        goto code_r0x004326a5;\n    }\n    goto code_r0x004326be;\n    while( true ) {\n        if (uVar14 < 0) goto code_r0x00432698;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n        uVar14 = uVar14 + 7;\n        if (0x1c < uVar14) break;\ncode_r0x00431edf:\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar14 < 0) goto code_r0x00432680;\n            uVar10 = (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n            uVar8 = uVar10;\n            iVar9 = 0;\n            uVar14 = 0;\n            goto code_r0x00431f39;\n        }\n    }\n    goto code_r0x00432685;\n    while( true ) {\n        if (uVar14 < 0) goto code_r0x00432678;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n        uVar14 = uVar14 + 7;\n        if (0x1c < uVar14) break;\ncode_r0x00431f39:\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar14 < 0) goto code_r0x00432660;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = uVar10;\n            arg4_00 = *(*(unaff_RBX + 0xe) - uVar8);\n            uVar14 = (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + iVar9;\n            goto code_r0x00431fc0;\n        }\n    }\n    goto code_r0x00432665;\ncode_r0x00431fc0:\n    uVar14 = uVar14 - 1;\n    if (uVar14 < 0) {\n        return 1;\n    }\n    iVar9 = 0;\n    uVar5 = 0;\n    while( true ) {\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) break;\n        if (uVar5 < 0) goto code_r0x00432658;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n        uVar5 = uVar5 + 7;\n        if (0x1c < uVar5) goto code_r0x00432645;\n    }\n    if (uVar5 < 0) goto code_r0x00432640;\n    uVar10 = (uVar1 << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n    puVar7 = uVar10;\n    iVar9 = 0;\n    uVar5 = 0;\n    while( true ) {\n        uVar1 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar1 < 0x80) break;\n        if (uVar5 < 0) goto code_r0x00432638;\n        iVar9 = ((uVar1 & 0xffffff7f) << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9;\n        uVar5 = uVar5 + 7;\n        if (0x1c < uVar5) goto code_r0x00432625;\n    }\n    if (uVar5 < 0) goto code_r0x00432620;\n    iVar18 = 0;\n    uVar6 = 0;\n    while( true ) {\n        uVar2 = *puVar12;\n        puVar12 = puVar12 + 1;\n        if (uVar2 < 0x80) break;\n        if (uVar6 < 0) goto code_r0x00432618;\n        iVar18 = ((uVar2 & 0xffffff7f) << (uVar6 & 0x1f) & -(uVar6 < 0x20)) + iVar18;\n        uVar6 = uVar6 + 7;\n        if (0x1c < uVar6) goto code_r0x00432605;\n    }\n    if (uVar6 < 0) goto code_r0x00432600;\n    uVar17 = (uVar2 << (uVar6 & 0x1f) & -(uVar6 < 0x20)) + iVar18;\n    if (uVar10 != 0) goto code_r0x004325ea;\n    *(*0x20 + -0x38) = uVar14;\n    uVar10 = -(uVar14 < 0x20) & 1 << (uVar14 & 0x1f);\n    if ((uVar10 & arg4_00) == 0) {\n        for (uVar10 = 0; uVar10 < uVar17; uVar10 = uVar10 + 1) {\n            iVar13 = 0;\n            while (0x7f < *puVar12) {\n                if (iVar13 < 0) goto code_r0x004325e5;\n                iVar13 = iVar13 + 7;\n                puVar12 = puVar12 + 1;\n                if (0x1c < iVar13) goto code_r0x004325d0;\n            }\n            if (iVar13 < 0) {\ncode_r0x004325cb:\n                *(*0x20 + -0x80) = 0x4325d0;\n                fcn.00430920();\ncode_r0x004325d0:\n                *(*0x20 + -0x80) = 0x4325e5;\n                fcn.004327c0();\ncode_r0x004325e5:\n                *(*0x20 + -0x80) = 0x4325ea;\n                fcn.00430920();\n                goto code_r0x004325ea;\n            }\n            iVar13 = 0;\n            puVar7 = puVar12 + 1;\n            while (0x7f < *puVar7) {\n                if (iVar13 < 0) goto code_r0x004325c6;\n                iVar13 = iVar13 + 7;\n                puVar7 = puVar7 + 1;\n                if (0x1c < iVar13) goto code_r0x004325b3;\n            }\n            if (iVar13 < 0) {\ncode_r0x004325ae:\n                *(*0x20 + -0x80) = 0x4325b3;\n                fcn.00430920();\ncode_r0x004325b3:\n                *(*0x20 + -0x80) = 0x4325c6;\n                fcn.004327c0();\ncode_r0x004325c6:\n                *(*0x20 + -0x80) = 0x4325cb;\n                fcn.00430920();\n                goto code_r0x004325cb;\n            }\n            iVar13 = 0;\n            puVar7 = puVar7 + 1;\n            while (puVar12 = puVar7 + 1,  0x7f < *puVar7) {\n                if (iVar13 < 0) goto code_r0x004325a9;\n                iVar13 = iVar13 + 7;\n                puVar7 = puVar12;\n                if (0x1c < iVar13) goto code_r0x00432596;\n            }\n            if (iVar13 < 0) {\n                *(*0x20 + -0x80) = 0x432596;\n                fcn.00430920();\ncode_r0x00432596:\n                *(*0x20 + -0x80) = 0x4325a9;\n                fcn.004327c0();\ncode_r0x004325a9:\n                *(*0x20 + -0x80) = 0x4325ae;\n                fcn.00430920();\n                goto code_r0x004325ae;\n            }\ncode_r0x004324dd:\n        }\n        uVar10 = arg4_00;\n    }\n    else {\n        uVar3 = *(*(unaff_RBX + 0xe) - ((uVar1 << (uVar5 & 0x1f) & -(uVar5 < 0x20)) + iVar9));\n        if (*0x598440 == 0) {\n            *(unaff_RBX + 6) = uVar3;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x432095;\n            fcn.0045d160(uVar14, uVar8, uVar3, arg4_00);\n        }\n        if (*unaff_RBX == 0) {\n            piVar16 = NULL;\n        }\n        else {\n            piVar16 = unaff_RBX + 0x12;\n        }\n        *(*0x20 + -0x44) = puVar7;\n        *(*0x20 + -0x4c) = uVar17;\n        *(*0x20 + -0x59) = uVar10;\n        *(*0x20 + -0x10) = unaff_RBX + 6;\n        *(*0x20 + -0x30) = piVar16;\n        *(*0x20 + -0x5a) = arg4_00;\n        uVar4 = 0;\n        while (uVar4 < uVar17) {\n            *(*0x20 + -0x40) = 0;\n            while (uVar1 = *puVar12,  puVar12 = puVar12 + 1,  0x7f < uVar1) {\n                uVar14 = *(*0x20 + -0x40);\n                if (uVar14 < 0) goto code_r0x004324d8;\n                puVar7 = -(uVar14 < 0x20);\n                if (0x1c < uVar14 + 7) goto code_r0x004324c5;\n                puVar7 = *(*0x20 + -0x44);\n                *(*0x20 + -0x40) = uVar14 + 7;\n            }\n            if (*(*0x20 + -0x40) < 0) goto code_r0x004324c0;\n            puVar7 = NULL;\n            uVar14 = 0;\n            while( true ) {\n                *(*0x20 + -0x54) = puVar7;\n                uVar1 = *puVar12;\n                puVar7 = uVar1;\n                puVar12 = puVar12 + 1;\n                if (uVar1 < 0x80) break;\n                if (uVar14 < 0) goto code_r0x004324b8;\n                puVar7 = ((uVar1 & 0xffffff7f) << (uVar14 & 0x1f) & -(uVar14 < 0x20)) + *(*0x20 + -0x54);\n                uVar14 = uVar14 + 7;\n                if (0x1c < uVar14) goto code_r0x004324a5;\n            }\n            if (uVar14 < 0) {\ncode_r0x004324a0:\n                *(*0x20 + -0x80) = 0x4324a5;\n                fcn.00430920();\ncode_r0x004324a5:\n                *(*0x20 + -0x80) = 0x4324b8;\n                fcn.004327c0();\ncode_r0x004324b8:\n                *(*0x20 + -0x80) = 0x4324bd;\n                fcn.00430920();\ncode_r0x004324c0:\n                *(*0x20 + -0x80) = 0x4324c5;\n                fcn.00430920();\ncode_r0x004324c5:\n                unaff_RBX = 0x4c7f68;\n                *(*0x20 + -0x80) = 0x4324d8;\n                fcn.004327c0();\ncode_r0x004324d8:\n                puVar12 = puVar7;\n                *(*0x20 + -0x80) = 0x4324dd;\n                uVar10 = fcn.00430920();\n                goto code_r0x004324dd;\n            }\n            uVar8 = 0;\n            puVar7 = NULL;\n            while( true ) {\n                uVar2 = *puVar12;\n                puVar12 = puVar12 + 1;\n                if (uVar2 < 0x80) break;\n                if (puVar7 < 0) goto code_r0x00432498;\n                *(*0x20 + -0x50) = uVar8;\n                uVar8 = *(*0x20 + -0x50) + ((uVar2 & 0xffffff7f) << (puVar7 & 0x1f) & -(puVar7 < 0x20));\n                puVar7 = puVar7 + 7;\n                if (0x1c < puVar7) goto code_r0x00432485;\n                arg4_00 = *(*0x20 + -0x5a);\n            }\n            if (puVar7 < 0) {\n                *(*0x20 + -0x80) = 0x432485;\n                fcn.00430920();\n                uVar8 = arg4_00;\ncode_r0x00432485:\n                *(*0x20 + -0x80) = 0x432498;\n                fcn.004327c0();\n                arg4_00 = uVar8;\ncode_r0x00432498:\n                *(*0x20 + -0x80) = 0x43249d;\n                fcn.00430920();\n                goto code_r0x004324a0;\n            }\n            *(*0x20 + -0x48) = uVar4;\n            *(*0x20 + -0x18) = puVar12;\n            *(*0x20 + -0x80) = 0x432290;\n            fcn.0045ddc0(*(*0x20 + -0x54) + (uVar1 << (uVar14 & 0x1f) & -(uVar14 < 0x20)));\n            puVar12 = *(*0x20 + -0x18);\n            uVar14 = *(*0x20 + -0x38);\n            uVar8 = *(*0x20 + -0x58);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg4_00 = *(*0x20 + -0x5a);\n            puVar7 = *(*0x20 + -0x44);\n            uVar17 = *(*0x20 + -0x4c);\n            uVar10 = *(*0x20 + -0x59);\n            uVar4 = *(*0x20 + -0x48) + 1;\n        }\n        *(*0x20 + -0x20) = puVar12;\n        iVar13 = *(unaff_RBX + 0xe);\n        uVar10 = arg4_00 & ~uVar10;\n        uVar15 = uVar10;\n        *(*0x20 + -0x59) = uVar15;\n        *(iVar13 - uVar8) = uVar15;\n        *(*0x20 + -0x28) = *(unaff_RBX + 8);\n        uVar3 = *(unaff_RBX + 6);\n        *(*0x20 + -0x80) = 0x4320fb;\n        fcn.004326e0(uVar3, uVar8, uVar14, uVar10);\n        if ((*(*0x20 + -0x28) != 0) && (*(*(*0x20 + -0x28) + 0x31) != '\\0')) {\n            return 1;\n        }\n        if (*0x598440 == 0) {\n            *(*(*0x20 + 0x10) + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x432136;\n            fcn.0045d0e0(0);\n        }\n        *(*0x20 + -0x80) = 0x432145;\n        uVar14 = fcn.0045db00();\n        unaff_RBX = *(*0x20 + 0x10);\n        if ((*(unaff_RBX + 8) != 0) && (*(*(unaff_RBX + 8) + 0x30) != '\\0')) {\n            return uVar14 & 0xffffffffffffff00 | *(*0x20 + -0x59) == '\\0';\n        }\n        puVar12 = *(*0x20 + -0x20);\n        uVar10 = *(*0x20 + -0x59);\n    }\n    uVar14 = *(*0x20 + -0x38);\n    arg4_00 = uVar10;\n    uVar8 = *(*0x20 + -0x58);\n    goto code_r0x00431fc0;\ncode_r0x004325ea:\n    *(*0x20 + -0x80) = 0x4325fb;\n    fcn.00432f60();\ncode_r0x00432600:\n    *(*0x20 + -0x80) = 0x432605;\n    fcn.00430920();\ncode_r0x00432605:\n    *(*0x20 + -0x80) = 0x432618;\n    fcn.004327c0();\ncode_r0x00432618:\n    *(*0x20 + -0x80) = 0x43261d;\n    fcn.00430920();\ncode_r0x00432620:\n    *(*0x20 + -0x80) = 0x432625;\n    fcn.00430920();\ncode_r0x00432625:\n    *(*0x20 + -0x80) = 0x432638;\n    fcn.004327c0();\ncode_r0x00432638:\n    *(*0x20 + -0x80) = 0x43263d;\n    fcn.00430920();\ncode_r0x00432640:\n    *(*0x20 + -0x80) = 0x432645;\n    fcn.00430920();\ncode_r0x00432645:\n    *(*0x20 + -0x80) = 0x432658;\n    fcn.004327c0();\ncode_r0x00432658:\n    *(*0x20 + -0x80) = 0x43265d;\n    fcn.00430920();\ncode_r0x00432660:\n    *(*0x20 + -0x80) = 0x432665;\n    fcn.00430920();\ncode_r0x00432665:\n    *(*0x20 + -0x80) = 0x432678;\n    fcn.004327c0();\ncode_r0x00432678:\n    *(*0x20 + -0x80) = 0x43267d;\n    fcn.00430920();\ncode_r0x00432680:\n    *(*0x20 + -0x80) = 0x432685;\n    fcn.00430920();\ncode_r0x00432685:\n    *(*0x20 + -0x80) = 0x432698;\n    fcn.004327c0();\ncode_r0x00432698:\n    *(*0x20 + -0x80) = 0x43269d;\n    fcn.00430920();\ncode_r0x004326a0:\n    *(*0x20 + -0x80) = 0x4326a5;\n    fcn.00430920();\ncode_r0x004326a5:\n    unaff_RBX = 0x4c7f68;\n    *(*0x20 + -0x80) = 0x4326b8;\n    fcn.004327c0();\ncode_r0x004326b8:\n    *(*0x20 + -0x80) = 0x4326bd;\n    in_RAX = fcn.00430920();\ncode_r0x004326be:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + -8) = 0x4326cd;\n    fcn.0045ad80();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    *0x20 = puVar11;\n    goto code_r0x00431e80;\n}\n",
        "token_count": 5240
    },
    "004326e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004326e0(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong *arg1_00;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1_00 = arg1;\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00432f00();\n        arg1_00 = puStackX8;\n        if (*0x598440 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045cfe0(arg1, noname_1, arg3, arg4);\n        }\n        arg1_00[4] = in_stack_00000000;\n        if (*0x598440 == 0) {\n            arg1_00[5] = &puStackX8;\n        }\n        else {\n            fcn.0045cfe0(arg1_00, noname_1, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x598440 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045cfe0(arg1_00, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "004327c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004327c0(ulong param_1, ulong param_2, ulong param_3, int64_t param_4)\n\n{\n    code *pcVar1;\n    ulong noname_1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0x90) == unaff_R14) {\n                if (*(iVar3 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar3 + 0xd0) == 0) {\n                        if (*(iVar3 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x598440 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x4328ac;\n                                fcn.0045d100(param_1, *0x20 + -0x40, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x598230 = *0x598230 + 1;\n                            *(*0x20 + -0xc0) = 0x4328d4;\n                            fcn.00431a40(*0x20 + 8);\ncode_r0x004328d4:\n                            do {\n                                iVar3 = *(*0x20 + -0x48);\n                                iVar6 = *(iVar3 + 0x28);\n                                if (iVar6 == 0) {\n                                    uVar4 = *(iVar3 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x432b5a;\n                                    fcn.004317e0(uVar4);\n                                    *(*0x20 + -0xc0) = 0x432b68;\n                                    fcn.004332c0();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar3 + 0x28;\n                                if (*(iVar6 + 4) != '\\0') {\n                                    if (*(iVar6 + 0x20) != 0) {\n                                        *(*(iVar6 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x598440 == 0) {\n                                        *(iVar6 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43292d;\n                                        iVar3 = fcn.0045d140(iVar6 + 0x20, iVar7, param_3, param_4);\n                                    }\n                                    if (*(iVar6 + 6) == '\\0') {\n                                        if (*0x598440 == 0) {\n                                            *(iVar6 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x43295a;\n                                            iVar3 = fcn.0045d140(iVar6 + 0x18, iVar7, param_3, param_4);\n                                        }\n                                        uVar4 = *(iVar6 + 0x28);\n                                        if (*0x598440 == 0) {\n                                            *(iVar3 + 0x28) = uVar4;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x432975;\n                                            fcn.0045d0e0();\n                                        }\n                                        *(*0x20 + -0xc0) = 0x43297d;\n                                        fcn.00431260(uVar4);\n                                        goto code_r0x004328d4;\n                                    }\n                                }\n                                *(iVar6 + 4) = 1;\n                                iVar3 = iVar6 + 0x20;\n                                if (*0x598440 == 0) {\n                                    *(iVar6 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4329b3;\n                                    fcn.0045d140(iVar3, iVar7, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = iVar6;\n                                *(*0x20 + -0x60) = iVar3;\n                                if (*(iVar6 + 6) == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x432a12;\n                                    uVar4 = fcn.00432f00();\n                                    *(*0x20 + -0x40) = uVar4;\n                                    pcVar1 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x432a26;\n                                    (*pcVar1)();\n                                    iVar3 = *(*0x20 + -0x70);\n                                    cVar2 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4329d5;\n                                    cVar2 = fcn.00431e80(iVar3, *0x20 + -0x40, param_3, param_4);\n                                    if (cVar2 == '\\0') {\n                                        iVar3 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar3 = *(*0x20 + -0x70);\n                                        if (*(*(iVar3 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar2;\n                                            *(*0x20 + -0xc0) = 0x4329fa;\n                                            fcn.00431a40(0);\n                                            cVar2 = *(*0x20 + -0x9a);\n                                            iVar3 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar6 = *(*0x20 + -0x48);\n                                if (*(iVar6 + 0x28) != iVar3) goto code_r0x00432cef;\n                                if (*0x598440 == 0) {\n                                    *(iVar3 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432a69;\n                                    cVar2 = fcn.0045d140(iVar6, iVar3, param_3, param_4);\n                                }\n                                uVar4 = *(iVar3 + 0x10);\n                                *(*0x20 + -0x98) = uVar4;\n                                param_3 = *(iVar3 + 8);\n                                *(*0x20 + -0x88) = param_3;\n                                if (cVar2 != '\\0') {\n                                    if (*0x598440 == 0) {\n                                        *(iVar3 + 0x18) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432a9d;\n                                        cVar2 = fcn.0045d120(iVar6, iVar3, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar2;\n                                    if (*0x598440 == 0) {\n                                        *(iVar6 + 0x28) = *(iVar3 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432abe;\n                                        fcn.0045d120(iVar6, iVar3, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x432ac6;\n                                    fcn.00431260(iVar6);\n                                    cVar2 = *(*0x20 + -0x99);\n                                    iVar6 = *(*0x20 + -0x48);\n                                    uVar4 = *(*0x20 + -0x98);\n                                    param_3 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar3 = *(*0x20 + -0x28);\n                            if (*0x598440 == 0) {\n                                *(iVar6 + 0x20) = iVar3;\n                                iVar7 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                iVar7 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x432b0e;\n                                cVar2 = fcn.0045d100(iVar6, iVar3, param_3, param_4);\n                            }\n                            if (((iVar3 == 0) || (*(iVar3 + 0x32) == '\\0')) || (*(iVar3 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x598230 = *0x598230 + -1;\n                                iVar3 = *(iVar6 + 0x28);\n                                if (cVar2 == '\\0') {\n                                    iVar5 = iVar3;\n                                    iVar3 = *(iVar3 + 0x28);\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                while ((iVar3 != 0 && (*(iVar3 + 4) == '\\0'))) {\n                                    if (*(iVar3 + 6) == '\\0') {\n                                        iVar5 = iVar3;\n                                        iVar3 = *(iVar3 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = iVar5;\n                                        if (iVar5 == 0) {\n                                            if (*0x598440 == 0) {\n                                                *(iVar6 + 0x28) = *(iVar3 + 0x28);\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x432c05;\n                                                fcn.0045d120(iVar6, iVar3, param_3, iVar7);\n                                                param_4 = iVar7;\n                                            }\n                                        }\n                                        else if (*0x598440 == 0) {\n                                            *(iVar5 + 0x28) = *(iVar3 + 0x28);\n                                        }\n                                        else {\n                                            param_4 = iVar5 + 0x28;\n                                            *(*0x20 + -0xc0) = 0x432bd4;\n                                            fcn.0045d120(iVar6, iVar3, param_3, param_4);\n                                        }\n                                        uVar4 = *(iVar3 + 0x28);\n                                        *(*0x20 + -0x78) = uVar4;\n                                        *(*0x20 + -0xc0) = 0x432c16;\n                                        fcn.00431260(uVar4);\n                                        iVar6 = *(*0x20 + -0x48);\n                                        uVar4 = *(*0x20 + -0x98);\n                                        iVar7 = *(*0x20 + -0x50);\n                                        param_3 = *(*0x20 + -0x88);\n                                        iVar3 = *(*0x20 + -0x78);\n                                        iVar5 = *(*0x20 + -0x80);\n                                    }\n                                }\n                                if (*0x598440 == 0) {\n                                    *(iVar6 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x432c55;\n                                    fcn.0045d100(iVar6, *(*0x20 + -0x28), param_3, param_4);\n                                }\n                                while( true ) {\n                                    iVar3 = *(iVar6 + 0x20);\n                                    if (iVar3 == 0) goto code_r0x00432cb0;\n                                    if (*(iVar3 + 0x31) == '\\0') break;\n                                    noname_1 = *(iVar3 + 0x18);\n                                    if (*0x598440 == 0) {\n                                        *(iVar6 + 0x20) = noname_1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x432c7c;\n                                        fcn.0045d100(iVar6, noname_1, param_3, param_4);\n                                    }\n                                }\n                                if (iVar3 == 0) goto code_r0x00432cb0;\n                                do {\n                                    *(iVar6 + 0x110) = param_3;\n                                    *(iVar6 + 0x118) = uVar4;\n                                    *(*0x20 + -0xc0) = 0x432c9f;\n                                    fcn.0045abc0();\n                                    *(*0x20 + -0xc0) = 0x432cb0;\n                                    fcn.00432f60();\ncode_r0x00432cb0:\n                                    *(iVar6 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar6 + 0x110) = *(iVar3 + 0x28);\n                            *(iVar6 + 0x118) = *(iVar3 + 0x20);\n                            *(*0x20 + -0xc0) = 0x432cde;\n                            fcn.0045abc0();\n                            *(*0x20 + -0xc0) = 0x432cef;\n                            fcn.00432f60();\ncode_r0x00432cef:\n                            *(*0x20 + -0xc0) = 0x432d05;\n                            fcn.00432f60();\n                        }\n                        *(*0x20 + -0xc0) = 0x432d0a;\n                        fcn.004346e0();\n                        *(*0x20 + -0xc0) = 0x432d1b;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xc0) = 0x432d25;\n                        fcn.00434760();\n                        *(*0x20 + -0xc0) = 0x432d3a;\n                        fcn.00407800();\n                        *(*0x20 + -0xc0) = 0x432d3f;\n                        fcn.004346e0();\n                        *(*0x20 + -0xc0) = 0x432d45;\n                        fcn.00434940();\n                        *(*0x20 + -0xc0) = 0x432d4a;\n                        fcn.00434760();\n                        *(*0x20 + -0xc0) = 0x432d5b;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0xc0) = 0x432d65;\n                    fcn.004346e0();\n                    *(*0x20 + -0xc0) = 0x432d76;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xc0) = 0x432d7b;\n                    fcn.00434760();\n                    *(*0x20 + -0xc0) = 0x432d90;\n                    fcn.00407800();\n                    *(*0x20 + -0xc0) = 0x432d95;\n                    fcn.004346e0();\n                    *(*0x20 + -0xc0) = 0x432d9a;\n                    fcn.00434940();\n                    *(*0x20 + -0xc0) = 0x432d9f;\n                    fcn.00434760();\n                    *(*0x20 + -0xc0) = 0x432da5;\n                    fcn.004346e0();\n                    *(*0x20 + -0xc0) = 0x432db6;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xc0) = 0x432dbb;\n                    fcn.00434760();\n                    iVar3 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar3 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar3 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x432de5;\n                    fcn.004346e0();\n                    *(*0x20 + -0xc0) = 0x432df4;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xc0) = 0x432df9;\n                    fcn.00434760();\n                    *(*0x20 + -0xc0) = 0x432dfe;\n                    fcn.004346e0();\n                    *(*0x20 + -0xc0) = 0x432e05;\n                    fcn.00434940();\n                    *(*0x20 + -0xc0) = 0x432e0a;\n                    fcn.00434760();\n                    *(*0x20 + -0xc0) = 0x432e1b;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0xc0) = 0x432e25;\n                fcn.004346e0();\n                *(*0x20 + -0xc0) = 0x432e36;\n                fcn.00434fe0();\n                *(*0x20 + -0xc0) = 0x432e3b;\n                fcn.00434760();\n                *(*0x20 + -0xc0) = 0x432e50;\n                fcn.00407800();\n                *(*0x20 + -0xc0) = 0x432e55;\n                fcn.004346e0();\n                *(*0x20 + -0xc0) = 0x432e5a;\n                fcn.00434940();\n                *(*0x20 + -0xc0) = 0x432e5f;\n                fcn.00434760();\n                *(*0x20 + -0xc0) = 0x432e70;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0xc0) = 0x432e75;\n            fcn.004346e0();\n            *(*0x20 + -0xc0) = 0x432e86;\n            fcn.00434fe0();\n            *(*0x20 + -0xc0) = 0x432e8b;\n            fcn.00434760();\n            *(*0x20 + -0xc0) = 0x432ea5;\n            fcn.00407800();\n            *(*0x20 + -0xc0) = 0x432eaa;\n            fcn.004346e0();\n            *(*0x20 + -0xc0) = 0x432eaf;\n            fcn.00434940();\n            *(*0x20 + -0xc0) = 0x432eb4;\n            fcn.00434760();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x432ec5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x432ed5;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4666
    },
    "00432f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00432f20(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00432f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432f60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    fcn.0045ac40();\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*(iVar1 + 0xc4) == 0) {\n        *(iVar1 + 0xc4) = 1;\n    }\n    fcn.004331c0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 115
    },
    "00433440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00433440(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x570f28 == 0) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434760();\n                fcn.0042e320();\n            }\n            fcn.0042e320();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x598228;\n    LOCK();\n    *0x598228 = *0x598228 + 1;\n    fcn.0040a040(iVar2);\n    if ((0 < *0x598650) || (0 < *0x59864c)) {\n        fcn.00440420();\n    }\n    fcn.00436ce0();\n    return 1;\n}\n",
        "token_count": 489
    },
    "004335c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004335c0(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434760();\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    uVar4 = *0x52c188;\n    if (*(*(unaff_R14 + 0x30) + 0xc4) < 1) {\n        bVar6 = (*0x52c188 >> 1 & 1) != 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar5 = *0x52c188 >> 2;\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n    }\n    if (uVar5 != 0) {\n        iVar2 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar5) || (uVar5 = *(unaff_R14 + 0x30),  0 < *(uVar5 + 0xc4))) {\n                fcn.004346e0(arg1, uVar5, *0x52c188);\n                fcn.00434fe0();\n                fcn.00434760();\n                fcn.004529a0(0);\n            }\n        }\n        else {\n            fcn.004346e0(arg1, uVar5, *0x52c188);\n            fcn.00434940();\n            fcn.00434760();\n            fcn.00453720();\n            fcn.004529a0(0);\n        }\n        if ((*0x5981c6 == '\\0') && (iVar2 != in_RAX | bVar6)) {\n            *0x5981c6 = '\\x01';\n            fcn.00453960();\n        }\n    }\n    fcn.0040a2a0();\n    LOCK();\n    iVar3 = *0x598228 + -1;\n    bVar6 = *0x598228 != 1;\n    *0x598228 = iVar3;\n    if (bVar6) {\n        fcn.0040a080();\n        fcn.0040a080();\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 755
    },
    "00433860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00433860(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2d0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "004338e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004338e0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044abe0();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x28) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00433e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433e80(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x433ed4;\n                fcn.00436d80(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x433eee;\n                    fcn.00436ac0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x28) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x433f25;\n            fcn.004346e0();\n            *(*0x20 + -0x50) = 0x433f36;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x433f45;\n            fcn.00434f60();\n            *(*0x20 + -0x50) = 0x433f56;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x433f65;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x433f76;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x433f85;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x433f8a;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x433f8f;\n            fcn.00434760();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x24) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x433faf;\n            fcn.004346e0();\n            *(*0x20 + -0x50) = 0x433fc5;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x433fcf;\n            fcn.00434f60();\n            *(*0x20 + -0x50) = 0x433fe5;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x433fef;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x434005;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x434010;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x434015;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x43401a;\n            fcn.00434760();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x43402b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x43403e;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1160
    },
    "00434760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434760(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040a2a0();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004347c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004347c0(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4347fd;\n            fcn.00434560(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x0043489d:\n                *(*0x20 + -0x38) = 0x4348b1;\n                fcn.00456700(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x0043489d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x43486c;\n                fcn.0045ddc0(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4348cd;\n            in_RAX = fcn.0045d500(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4348e5;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 868
    },
    "00435860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00435860(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x598440 == 0) {\n                    *(arg2 + 600) = unaff_RBX;\n                    *(arg2 + 0x250) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 600;\n                    *(*0x20 + -0x20) = 0x4358de;\n                    fcn.0045d120(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x4358ea;\n                    fcn.0045cfe0(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 0x260) = unaff_DIL;\n                *(arg2 + 0x268) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x435936;\n                fcn.0045abc0();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x435952;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x435970;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 826
    },
    "00435a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00435a80(ulong param_1, uint64_t param_2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar9 + 0xa0);\n    uVar8 = uVar7;\n    if (*(uVar7 + 0xe18) != 0) goto code_r0x00435ae5;\n    arg4 = unaff_R14;\n    fcn.0040a080();\n    param_2 = uVar7 + 0xe10;\n    iStack40 = iVar9;\n    uStack24 = param_2;\n    uStack16 = uVar7;\n    do {\n        while ((uVar8 = *0x544dc0,  uVar10 = *(uVar7 + 0xe20) >> 1,  *(uVar7 + 0xe18) < uVar10 &&\n               (uVar10 = *0x544dc0,  *0x544dc0 != 0))) {\n            if (*0x598440 == 0) {\n                puVar1 = *0x544dc0 + 8;\n                *0x544dc0 = *(*0x544dc0 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045d180(uVar7, param_2, *0x544dc0);\n                fcn.0045d180(uVar7, param_2, uVar8);\n            }\n            arg4 = *(uVar7 + 0xe18);\n            iVar9 = *(uVar7 + 0xe10);\n            iVar4 = iVar9;\n            if (*(uVar7 + 0xe20) < arg4 + 1U) {\n                uVar10 = uVar8;\n                arg4_00 = arg4;\n                iVar4 = fcn.00444ac0(arg4);\n                *(uStack16 + 0xe20) = arg4;\n                uVar7 = uStack16;\n                param_2 = uStack24;\n                if (*0x598440 == 0) {\n                    *(uStack16 + 0xe10) = iVar4;\n                    arg4 = iVar9;\n                }\n                else {\n                    iVar4 = fcn.0045cfe0(arg4, uStack16, uVar10, arg4_00);\n                    arg4 = iVar9;\n                }\n            }\n            *(uVar7 + 0xe18) = arg4 + 1;\n            if (*0x598440 == 0) {\n                *(iVar4 + arg4 * 8) = uVar8;\n            }\n            else {\n                fcn.0045d160(uVar7, param_2, uVar8, arg4);\n            }\n        }\n        fcn.0040a2a0();\n        iVar9 = iStack40;\n        uVar8 = uStack16;\n        if (*(uStack16 + 0xe18) == 0) {\n            uVar5 = fcn.0040c140();\n            param_2 = *(uStack16 + 0xe18);\n            uVar7 = *(uStack16 + 0xe10);\n            uVar6 = uVar7;\n            if (*(uStack16 + 0xe20) < param_2 + 1) {\n                uVar6 = fcn.00444ac0(param_2);\n                *(uStack16 + 0xe20) = param_2;\n                if (*0x598440 == 0) {\n                    *(uStack16 + 0xe10) = uVar6;\n                    param_2 = uVar7;\n                }\n                else {\n                    uVar6 = fcn.0045cfe0(param_2, uStack16, uVar10, arg4);\n                    param_2 = uVar7;\n                }\n            }\n            *(uVar8 + 0xe18) = param_2 + 1;\n            if (*0x598440 == 0) {\n                *(uVar6 + param_2 * 8) = uVar5;\n            }\n            else {\n                fcn.0045cfe0(uVar8, param_2, uVar10, arg4);\n            }\n        }\ncode_r0x00435ae5:\n        uVar7 = *(uVar8 + 0xe18);\n        arg4 = *(uVar8 + 0xe10);\n        uVar10 = uVar7 - 1;\n        if (uVar10 < uVar7) {\n            iVar4 = *(arg4 + -8 + uVar7 * 8);\n            if (*0x598440 == 0) {\n                *(arg4 + -8 + uVar7 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                uVar10 = fcn.0045d180(uVar7, param_2, uVar8);\n            }\n            param_2 = *(uVar8 + 0xe20);\n            if (uVar10 <= param_2) {\n                *(uVar8 + 0xe18) = uVar10;\n                if (*(iVar4 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar4;\n                }\n                uVar10 = fcn.00432f60();\n            }\n            fcn.0045d500(uVar10, param_2);\n            uVar7 = uVar10;\n        }\n        fcn.0045d480(uVar7);\n    } while( true );\n}\n",
        "token_count": 1434
    },
    "00435d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435d80(void)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0xe18) == *(arg2 + 0xe20)) {\n                                    iVar5 = 0;\n                                    iVar6 = 0;\n                                    iVar7 = arg3;\n                                    iVar4 = arg2;\n                                    while( true ) {\n                                        arg1_01 = *(iVar4 + 0xe18);\n                                        if (arg1_01 <= *(iVar4 + 0xe20) >> 1) break;\n                                        arg1 = arg1_01 - 1;\n                                        if (arg1_01 <= arg1) {\ncode_r0x00436031:\n                                            fcn.0045d480(arg1_01);\n                                            goto code_r0x0043603c;\n                                        }\n                                        iVar8 = *(*(iVar4 + 0xe10) + -8 + arg1_01 * 8);\n                                        if (*0x598440 == 0) {\n                                            *(*(iVar4 + 0xe10) + -8 + arg1_01 * 8) = 0;\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        else {\n                                            fcn.0045d120(iVar5, iVar6, iVar7, iVar4);\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        if (*(iVar4 + 0xe20) < arg1) {\n                                            fcn.0045d500(arg1, *(iVar4 + 0xe20));\n                                            goto code_r0x00436031;\n                                        }\n                                        *(iVar4 + 0xe18) = arg1;\n                                        iVar6 = iVar5;\n                                        if (arg2_00 != 0) {\n                                            if (*0x598440 == 0) {\n                                                *(arg1_00 + 8) = iVar5;\n                                                iVar6 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045d120(arg1_00, arg2_00, iVar7, iVar4);\n                                                iVar6 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    fcn.0040a080();\n                                    if (*0x598440 == 0) {\n                                        *(iVar5 + 8) = *0x544dc0;\n                                        *0x544dc0 = iVar6;\n                                    }\n                                    else {\n                                        fcn.0045d100(iVar5, *0x544dc0, iVar7, iVar4);\n                                        fcn.0045d0e0(iVar6);\n                                    }\n                                    fcn.0040a2a0();\n                                }\n                                iVar6 = *(arg2 + 0xe18);\n                                iVar7 = *(arg2 + 0xe10);\n                                iVar4 = iVar7;\n                                if (*(arg2 + 0xe20) < iVar6 + 1U) {\n                                    iVar5 = arg3;\n                                    iVar8 = arg2;\n                                    iVar4 = fcn.00444ac0(iVar6);\n                                    *(arg2 + 0xe20) = iVar6;\n                                    if (*0x598440 == 0) {\n                                        *(arg2 + 0xe10) = iVar4;\n                                        iVar6 = iVar7;\n                                    }\n                                    else {\n                                        iVar4 = fcn.0045cfe0(iVar6, arg2, iVar5, iVar8);\n                                        iVar6 = iVar7;\n                                    }\n                                }\n                                *(arg2 + 0xe18) = iVar6 + 1;\n                                if (*0x598440 == 0) {\n                                    *(iVar4 + iVar6 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045cfe0(iVar6, iVar6 + 1, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x0043603c:\n                            fcn.00432f60();\n                        }\n                        fcn.00432f60();\n                    }\n                    fcn.00432f60();\n                }\n                fcn.00432f60();\n            }\n            fcn.00432f60();\n        }\n        fcn.00432f60();\n    }\n    fcn.00432f60();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1313
    },
    "00436220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436220(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x43625b;\n                fcn.0040a080();\n                uVar2 = *0x544430;\n                arg1_00 = *0x544438;\n                uVar3 = *0x544430;\n                if (*0x544440 < *0x544438 + 1) {\n                    *(*0x20 + -0x58) = 0x436285;\n                    arg1 = *0x544438;\n                    uVar3 = fcn.00444ac0(*0x544438);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar3;\n                    *0x544440 = arg1;\n                    if (*0x598440 != 0) {\n                        *(*0x20 + -0x58) = 0x4362aa;\n                        uVar3 = fcn.0045cfe0(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x544430;\n                    }\n                }\n                *0x544430 = uVar2;\n                *0x544438 = arg1_00 + 1;\n                if (*0x598440 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(uVar3 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x4362dd;\n                    fcn.0045d100(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x544438 != 0) {\n                    uVar2 = *0x543a90;\n                    if ((*0x543a90 != *0x544430) && (uVar2 = *0x544430,  *0x598440 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x544430;\n                        *(*0x20 + -0x58) = 0x436314;\n                        fcn.00403140();\n                        uVar2 = *(*0x20 + -0x10);\n                    }\n                    *0x543a90 = uVar2;\n                    uVar1 = *0x598268;\n                    *0x598268 = *0x544438;\n                    *(*0x20 + -0x58) = 0x436345;\n                    fcn.0040a2a0(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x436356;\n                fcn.0045d480(0);\n            }\n            *(*0x20 + -0x58) = 0x436367;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x436372;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 917
    },
    "004368e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004368e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00453260(0x20);\n    }\n    fcn.0040a080();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00436880();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    arg2 = in_RAX;\n    uVar2 = fcn.0045cf20();\n    *(in_RAX + 0xf0) = uVar2;\n    fcn.0045ce80(in_RAX, arg2);\n    uVar3 = fcn.0045cf20();\n    *(in_RAX + 0xf4) = uVar3;\n    if ((*(in_RAX + 0xf0) | uVar3) == 0) {\n        *(in_RAX + 0xf4) = 1;\n    }\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2;\n    }\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x128) = *0x543a98;\n    }\n    else {\n        fcn.0045d0e0();\n    }\n    if (*0x598440 != '\\0') {\n        fcn.00403140();\n    }\n    *0x543a98 = in_RAX;\n    fcn.0040a2a0();\n    uVar4 = fcn.0040c140();\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045cfe0(in_RAX, arg2, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 594
    },
    "00436ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436ac0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x54a3d0 != '\\0') {\n                *(*0x20 + -0x58) = 0x436aef;\n                fcn.0044ff80();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x436b31;\n                fcn.00437220(1);\n                *(*0x20 + -0x58) = 0x436b50;\n                fcn.004412a0(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x436b55;\n                fcn.00439b20();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x30) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x436bac;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x436bbd;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x436bc7;\n            fcn.00434f60();\n            *(*0x20 + -0x58) = 0x436bd8;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x436be5;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x436bf6;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x436c05;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x436c0a;\n            fcn.00434940();\n            *(*0x20 + -0x58) = 0x436c0f;\n            fcn.00434760();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x2c) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x436c2f;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x436c45;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x436c4f;\n            fcn.00434f60();\n            *(*0x20 + -0x58) = 0x436c65;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x436c6f;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x436c85;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x436c90;\n            fcn.00434ce0();\n            *(*0x20 + -0x58) = 0x436c95;\n            fcn.00434940();\n            *(*0x20 + -0x58) = 0x436c9a;\n            fcn.00434760();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x436cab;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x436cbf;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1401
    },
    "00437220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00437220(ulong arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x4375a0));\n        uStack64 = auStack24;\n        fcn.0045ac40();\n    }\n    iVar8 = 0;\n    piVar3 = NULL;\n    while( true ) {\n        LOCK();\n        if (unaff_EBX == *(in_RAX + 0x90)) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00432f60();\n            pcVar1 = swi(3);\n            piVar3 = (*pcVar1)();\n            return piVar3;\n        }\n        if (iVar8 == 0) {\n            fcn.0045ed60();\n            piVar3 = uStack64 + 0x271;\n        }\n        fcn.0045ed60();\n        piStack40 = piVar3;\n        iStack32 = iVar8;\n        if (uStack64 < piVar3) {\n            uVar5 = 0;\n            while ((piVar3 = piStack40,  uVar5 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x0043751c:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045cb60();\n                uVar5 = uVar5 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x4b0448;\n            fcn.0045ac40();\n            fcn.0045ed60();\n            piVar3 = 0x4b0e0c;\n        }\n        iVar8 = iStack32 + 1;\n    }\n    *(in_RAX + 0x90) = arg1;\n    uVar2 = unaff_EBX;\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        uVar2 = *(in_RAX + 0xbd) + 1;\n        *(in_RAX + 0xbd) = uVar2;\n    }\n    piVar3 = uVar2;\n    if (*(in_RAX + 0xbc) != '\\0') {\n        fcn.0045ed60();\n        piVar3 = uStack64;\n        if (unaff_EBX == 1) {\n            piVar3 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar3;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar5 = *(in_RAX + 200);\n            if (uVar5 < 0) {\n                LOCK();\n                piVar3 = *0x5464e8;\n                *0x5464e8 = *0x5464e8 + 1;\n            }\n            else {\n                if (uVar5 < 0x10) {\n                    iVar8 = 0;\n                    uVar7 = uVar5;\n                }\n                else {\n                    iVar6 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                        }\n                    }\n                    if (uVar5 == 0) {\n                        iVar6 = -1;\n                    }\n                    iVar8 = iVar6 + -3;\n                    if (iVar8 * 0x10 < 0x2d0) {\n                        iVar6 = uVar5 >> ((iVar6 - 4U | ~-(iVar6 - 4U < 0x40)) & 0x3f);\n                        iVar4 = ((iVar6 >> 0x3f) >> 0x3c) + iVar6 >> 4;\n                        uVar5 = iVar4 * 0x10;\n                        uVar7 = iVar6 + iVar4 * -0x10;\n                    }\n                    else {\n                        iVar8 = 0x2c;\n                        uVar7 = 0xf;\n                    }\n                }\n                uVar7 = iVar8 * 0x10 + uVar7;\n                if (0x2cf < uVar7) {\n                    fcn.0045d4a0(0x2d0);\n                    goto code_r0x0043751c;\n                }\n                piVar3 = uVar7 * 8 + 0x544e68;\n                LOCK();\n                *piVar3 = *piVar3 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 1284
    },
    "00437640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00437640(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4376a5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4376b8;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "00437760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437760(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    ulong in_RAX;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1 = 0;\n    fcn.00442e60(0);\n    arg2 = *(unaff_R14 + 0x30);\n    *(arg2 + 0xd0) = unaff_RBX;\n    if (*0x598440 == 0) {\n        *(arg2 + 200) = in_RAX;\n    }\n    else {\n        fcn.0045cfe0(arg1, arg2, param_3, param_4);\n    }\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 229
    },
    "004378a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004378a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ac40();\n    arg1 = **(in_GS_OFFSET + 0x28);\n    piVar1 = *(arg1 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(arg1 + 0x30);\n    *(iVar3 + 0xd0) = 0;\n    if (*0x598440 == 0) {\n        *(iVar3 + 200) = 0;\n    }\n    else {\n        fcn.0045d100(arg1, 0, param_3, param_4);\n    }\n    fcn.004431a0(0);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(arg1 + 0xb1) != '\\0')) {\n        *(arg1 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "00437cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00437cc0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00437cc0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x598218 != 0) {\n            *(*0x20 + -0x60) = 0x437d05;\n            uVar4 = fcn.0042c560();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x437d14;\n            fcn.0043b3a0();\n        }\n        *(*0x20 + -0x60) = 0x437d25;\n        fcn.0040a080();\n        if (*0x598224 != 0) {\n            *0x598224 = 0;\n        }\n        *(*0x20 + -0x60) = 0x437d4b;\n        uVar4 = fcn.0043ec80();\n        *(*0x20 + -0x18) = uVar4;\n        *0x544e00 = 0;\n        if (*0x544e10 != 0) {\n            *0x544e10 = 0;\n            *(*0x20 + -0x60) = 0x437d79;\n            fcn.0040a380();\n        }\n        *(*0x20 + -0x60) = 0x437d87;\n        fcn.0040a2a0();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x437df5;\n                fcn.0045ed60();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x437e34;\n                    fcn.0044eb60(0);\n                }\n                *(*0x20 + -0x60) = 0x437e39;\n                fcn.00439b20();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x437ded;\n                fcn.00438f00(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00437e74;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x437dda;\n                fcn.0040a380();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00437e86;\ncode_r0x00437e74:\n    *(*0x20 + -0x60) = 0x437e85;\n    in_AL = fcn.00432f60();\ncode_r0x00437e86:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x437e8f;\n    fcn.0045ad80();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x00437cc0;\n}\n",
        "token_count": 1130
    },
    "00438040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438040(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x5981c5 == '\\0') {\n        *0x5981c5 = '\\x01';\n        fcn.00438b40();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004380e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004380e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar in_AL;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (iVar4 != 0x544900) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x28) = 0x43811a;\n                fcn.0042f340();\n                if (*(*(*0x20 + -0x10) + 0x50) != 0) {\n                    *(*0x20 + -0x28) = 0x438134;\n                    fcn.00445b80();\n                    if (*0x598440 == 0) {\n                        *(*(*0x20 + -0x10) + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x43815c;\n                        fcn.0045d100(*(*0x20 + -0x10), 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x28) = 0x438169;\n                fcn.0040a080();\n                iVar4 = *(*0x20 + -0x10);\n                piVar3 = 0x543a98;\n                while (iVar2 = *piVar3,  iVar2 != 0) {\n                    if (iVar2 == iVar4) {\n                        iVar2 = *(iVar4 + 0x128);\n                        if (*0x598440 == 0) {\n                            *piVar3 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4381ac;\n                            fcn.0045d100(iVar4, iVar2, param_3, param_4);\n                        }\n                        uVar1 = *(*0x20 + 8);\n                        if (uVar1 == 0) {\n                            *(iVar4 + 0xec) = 1;\n                            if (*0x598440 == 0) {\n                                *(iVar4 + 0x278) = *0x544df8;\n                                *0x544df8 = iVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = 0x4381ee;\n                                fcn.0045d120(iVar4, uVar1, param_3, param_4);\n                                *(*0x20 + -0x28) = 0x4381fa;\n                                fcn.0045d0e0();\n                            }\n                        }\n                        *(*0x20 + -0x28) = 0x438208;\n                        fcn.0040a2a0();\n                        iVar4 = *0x598328;\n                        LOCK();\n                        *0x598328 = *0x598328 + *(*(*0x20 + -0x10) + 0x100);\n                        *(*0x20 + -0x28) = 0x438225;\n                        fcn.0043f640(*(*0x20 + -0x10), iVar4);\n                        *(*0x20 + -0x28) = 0x43822a;\n                        fcn.00439840();\n                        *(*0x20 + -0x28) = 0x438238;\n                        fcn.0040a080();\n                        *0x544d40 = *0x544d40 + 1;\n                        *(*0x20 + -0x28) = 0x438245;\n                        fcn.0043f800();\n                        *(*0x20 + -0x28) = 0x438253;\n                        fcn.0040a2a0();\n                        *(*0x20 + -0x28) = 0x43825d;\n                        fcn.0042f3e0();\n                        if (*(*0x20 + 8) != '\\0') {\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x438285;\n                        fcn.0042ef40(*(*0x20 + -0x10));\n                        return;\n                    }\n                    piVar3 = iVar2 + 0x128;\n                }\n                *(*0x20 + -0x28) = 0x4382a5;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x28) = 0x4382aa;\n            fcn.0043f640();\n            *(*0x20 + -0x28) = 0x4382af;\n            fcn.00439840();\n            *(*0x20 + -0x28) = 0x4382bd;\n            fcn.0040a080();\n            *0x544d40 = *0x544d40 + 1;\n            *(*0x20 + -0x28) = 0x4382c9;\n            fcn.0043f800();\n            *(*0x20 + -0x28) = 0x4382d7;\n            fcn.0040a2a0();\n            *(*0x20 + -0x28) = 0x4382dc;\n            fcn.00438080();\n            *(*0x20 + -0x28) = 0x4382ed;\n            in_AL = fcn.00432f60();\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x4382f7;\n        fcn.0045ad80();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1403
    },
    "00438320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438320(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x438379;\n            fcn.0040a080();\n            if (*0x544e30 == 0) {\n                *0x544e30 = *0x598210 + -1;\n                if (*0x598440 == 0) {\n                    *0x544e28 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x4383bc;\n                    fcn.0045cfe0(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x544458;\n                iVar9 = *0x544450;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x26d0;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x4383fb;\n                fcn.004402e0();\n                for (iVar8 = *0x544d50; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x26d0) == 1) {\n                        *(iVar8 + 0x26d0) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x43843a;\n                        (*pcVar6)();\n                        *0x544e30 = *0x544e30 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x544e30;\n                *(*0x20 + -0x68) = 0x438465;\n                fcn.0040a2a0();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x438474;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x544450;\n                *(*0x20 + -0x40) = *0x544458;\n                iVar9 = *0x544450;\n                iVar10 = *0x544458;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x26d0) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                        }\n                        else {\n                            bVar13 = false;\n                        }\n                    }\n                    else {\n                        bVar13 = false;\n                    }\n                    if (bVar13) {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x54a3d0 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x4384f8;\n                            fcn.00450180();\n                            *(*0x20 + -0x68) = 0x438505;\n                            fcn.0044f9e0();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x438515;\n                        fcn.00439840();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                    param_3 = 0;\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x43854c;\n                        cVar7 = fcn.0040a7e0();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x43853b;\n                        fcn.004402e0();\n                    }\n                    *0x544e38 = 0;\n                }\n                if (*0x544e30 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x544458 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x4385a5;\n                            fcn.0040a080();\n                            if (*0x598440 == 0) {\n                                *0x544e28 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x4385c9;\n                                fcn.0045d0e0(0);\n                            }\n                            *(*0x20 + -0x68) = 0x4385d7;\n                            fcn.0040a2a0();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x544450 + iVar8 * 8) + 0x26d0) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x43861e;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x68) = 0x43862f;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x68) = 0x438645;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x438650;\n        fcn.0045f460();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1930
    },
    "00438660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00438660(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x26d0;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x544e28)();\n    fcn.0040a080();\n    iVar3 = *0x544e30 + -1;\n    bVar4 = *0x544e30 == 1;\n    *0x544e30 = iVar3;\n    if (bVar4) {\n        fcn.0040a380();\n    }\n    uVar2 = fcn.0040a2a0();\n    return uVar2;\n}\n",
        "token_count": 262
    },
    "00438720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00438720(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t arg2;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = *(unaff_R14 + 0x30);\n    iVar6 = unaff_R14;\n    if (*(arg2 + 0xa0) == 0) {\n        fcn.0043f4c0();\n    }\n    if (*0x544df8 != 0) {\n        fcn.0040a080(arg1);\n        iStack40 = *0x544df8;\n        iVar4 = 0;\n        while (iStack40 != 0) {\n            if (*(iStack40 + 0xec) == 0) {\n                fcn.0045ac40();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iStack40 = *(iStack40 + 0x278);\n            }\n            else {\n                arg2 = *(iStack40 + 0x278);\n                if (*0x598440 == 0) {\n                    *(iStack40 + 0x278) = iVar4;\n                    iVar4 = iStack40;\n                    iStack40 = arg2;\n                }\n                else {\n                    fcn.0045cfe0(iStack40, arg2, in_R8, in_R9);\n                    iVar4 = iStack40;\n                    iStack40 = arg2;\n                }\n            }\n        }\n        if (*0x598440 != 0) {\n            fcn.0045cfe0(0, arg2, in_R8, in_R9);\n            iVar4 = *0x544df8;\n        }\n        *0x544df8 = iVar4;\n        fcn.0040a2a0();\n    }\n    piVar3 = fcn.0040c140();\n    if (*0x598440 == 0) {\n        piVar3[0x11] = unaff_RBX;\n    }\n    else {\n        piVar3 = fcn.0045d0e0();\n    }\n    fcn.004368e0();\n    iVar4 = fcn.0043d700();\n    if (*0x598440 == 0) {\n        *piVar3 = iVar4;\n    }\n    else {\n        iVar4 = fcn.0045cfe0(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    piVar5 = piVar3;\n    if (*0x598440 == 0) {\n        *(iVar4 + 0x30) = piVar3;\n    }\n    else {\n        fcn.0045d0e0();\n    }\n    if (in_RAX == *(*(iVar6 + 0x30) + 0xa0)) {\n        fcn.0043f640();\n        piVar5 = piVar3;\n    }\n    iVar2 = *(*(iVar6 + 0x30) + 0xd8);\n    *(*(iVar6 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return piVar5;\n}\n",
        "token_count": 896
    },
    "00438bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438bc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = fcn.00438720(0xffffffffffffffff);\n    iVar3 = fcn.0043d700();\n    *(iVar3 + 0x40) = 0x45cfa1;\n    iVar5 = *(iVar3 + 8) + -0x20;\n    *(iVar3 + 0x38) = iVar5;\n    *(iVar3 + 0x60) = 0;\n    *(iVar3 + 0x48) = iVar3;\n    *(iVar3 + 0x78) = *(iVar3 + 0x40);\n    *(iVar3 + 0x70) = iVar5;\n    uVar4 = *(iVar3 + 0x38);\n    *(iVar3 + 0x80) = uVar4;\n    fcn.00437220(6);\n    iVar5 = iVar2;\n    if (*0x598440 == 0) {\n        *(iVar3 + 0x30) = iVar2;\n    }\n    else {\n        iVar3 = fcn.0045d0e0();\n    }\n    if (*0x598440 == 0) {\n        *(iVar5 + 0x90) = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045cfe0(iVar5, uVar4, param_3, param_4);\n    }\n    *(iVar5 + 0x244) = *(iVar5 + 0x244) + 1;\n    *(iVar5 + 0x138) = iVar3;\n    *(iVar3 + 0xe8) = iVar5;\n    LOCK();\n    iVar5 = *0x544d00 + 1;\n    *0x544d00 = *0x544d00 + 1;\n    *(iVar3 + 0x98) = iVar5;\n    fcn.00436220();\n    iVar1 = *0x544d48;\n    LOCK();\n    *0x544d48 = *0x544d48 + 1;\n    uVar4 = fcn.00438e00(iVar1);\n    *(iVar2 + 0x130) = uVar4;\n    *0x5981f0 = *0x5981f0 + 1;\n    *0x5982b8 = iVar2;\n    return;\n}\n",
        "token_count": 623
    },
    "00438e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00438ea0)\n\nuint64_t fcn.00438e00(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x5982b8 == 1) {\n            fcn.0045ed40();\n        }\n        if ((*0x5982b8 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x5981f4 = *0x5981f4 + 1;\n        }\n        fcn.0045ec60();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x5982b8;\n    *0x5982b8 = *0x5982b8 ^ *0x5982b8 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "00438f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438f00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x438f2b;\n            iVar2 = fcn.00438720(arg1);\n            iVar1 = *(*0x20 + 0x10);\n            *(iVar2 + 0x118) = iVar1 != 0;\n            *(iVar2 + 0xa8) = iVar1;\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar2,  *(arg1 + 0x240) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x438fd9;\n                fcn.00439020();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x438f7c;\n            fcn.0040a080();\n            if (*0x598520 != 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 0x130) = *0x598508;\n                *0x598508 = iVar1;\n                if (*0x598510 != '\\0') {\n                    *0x598510 = '\\0';\n                    *(*0x20 + -0x30) = 0x438fbc;\n                    fcn.0040a380();\n                }\n                *(*0x20 + -0x30) = 0x438fca;\n                fcn.0040a2a0();\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x438ff4;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x439009;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 714
    },
    "00439020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439020(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5981cd == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x4390ed;\n                fcn.00442ba0();\n                *(*0x20 + -0x40) = 0x4390f7;\n                fcn.0042edc0();\n                *(*0x20 + -0x40) = 0x439105;\n                fcn.00442ce0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x543850 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = CONCAT71(*0x4b0371, vtable.I_f.0);\n                *(*0x20 + -0x40) = 0x439098;\n                fcn.00442ba0();\n                *(*0x20 + -0x38) = *0x543850;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x4390b2;\n                fcn.0045cbc0();\n                *(*0x20 + -0x40) = 0x4390d2;\n                fcn.00442ce0();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x439125;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x439130;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 658
    },
    "00439140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439140(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x598520 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x598520 = 1;\n    fcn.00438f00(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00439220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00439220(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0x288) == 0) {\n        return 0;\n    }\n    fcn.0040a080();\n    ppcVar1 = *(*(unaff_R14 + 0x30) + 0x290);\n    if (ppcVar1 != NULL) {\n        if (*0x59820c != 0) {\n            fcn.00432f60();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        (**ppcVar1)();\n        *(*(unaff_R14 + 0x30) + 0x290) = 0;\n        *(*(unaff_R14 + 0x30) + 0x288) = 0;\n    }\n    uVar3 = fcn.0040a2a0();\n    return uVar3 & 0xffffffffffffff00 | ppcVar1 != NULL;\n}\n",
        "token_count": 262
    },
    "00439460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439460(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x28) = 0x4394b5;\n                        fcn.0040a080();\n                        *(*0x20 + -0x28) = 0x4394c5;\n                        fcn.00440dc0();\n                        *(*0x20 + -0x28) = 0x4394d3;\n                        fcn.0040a2a0();\n                        *(*0x20 + -0x28) = 0x4394d8;\n                        fcn.00438080();\n                        *(*0x20 + -0x28) = 0x4394ed;\n                        fcn.0043f4c0();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x28) = 0x43951c;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x28) = 0x43952d;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x28) = 0x43953e;\n            fcn.00432f60();\n        }\n        *(puVar2 + -8) = 0x439545;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 529
    },
    "00439580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439580(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uchar unaff_BL;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint64_t uVar8;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x4395c5;\n            fcn.0040a080();\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 == 0) {\n                *(*0x20 + -0x48) = 0x4395d4;\n                iVar5 = fcn.00441180();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x48) = 0x4396e5;\n                    fcn.0040a2a0();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x00439705:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x544d5c + -1;\n                    uVar7 = *0x544d5c - 1;\n                    uVar8 = uVar7;\n                    *0x544d5c = iVar2;\n                    if (-1 < uVar7) goto code_r0x00439705;\n                    *(*0x20 + -0x48) = 0x43974b;\n                    cVar4 = fcn.00432f60();\n                    goto code_r0x0043974b;\n                }\n            }\n            iVar3 = *0x544d20;\n            if (*0x544d20 != 0) {\n                *0x544d20 = *(*0x544d20 + 0x130);\n                *0x544d28 = *0x544d28 + -1;\n            }\n            *(*0x20 + -0x18) = iVar5;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x439610;\n                uVar6 = fcn.00436880();\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x48) = 0x439625;\n                fcn.0040a2a0();\n                *(*0x20 + -0x48) = 0x43964f;\n                fcn.00438f00(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x439698;\n            fcn.0040a2a0();\n            uVar8 = *(*0x20 + -0x10);\n            if (*(uVar8 + 0xe4) == '\\0') {\n                if (*(uVar8 + 0xa8) == 0) {\n                    cVar4 = *(*0x20 + 0x10);\n                    if (cVar4 == '\\0') {\n                        cVar4 = '\\0';\ncode_r0x0043974b:\n                        *(uVar8 + 0xe4) = cVar4;\n                        *(uVar8 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x439769;\n                        fcn.0040a380();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar5 + 0x5f4) != *(iVar5 + 0x5f4));\n                    if ((*(iVar5 + 0x5f4) == *(iVar5 + 0x5f0)) && (*(iVar5 + 0xdf8) == 0)) goto code_r0x0043974b;\n                    *(*0x20 + -0x48) = 0x4397e7;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x48) = 0x4397f8;\n                fcn.00432f60();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x439809;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar9 + 8) = in_RAX;\n        puVar9[0x10] = unaff_BL;\n        *(puVar9 + -8) = 0x439818;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_BL = puVar9[0x10];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1548
    },
    "00439840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439840(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    do {\n    } while (*(in_RAX + 0x5f4) != *(in_RAX + 0x5f4));\n    if (((*(in_RAX + 0x5f4) != *(in_RAX + 0x5f0)) || (*(in_RAX + 0xdf8) != 0)) || (*0x544d70 != 0)) {\n        fcn.00439580();\n        return;\n    }\n    if (*0x598204 != 0) {\n        if ((*(in_RAX + 0x1698) == 0) || ((*(*(in_RAX + 0x1698) + 0x10) == 0 && (*(*(in_RAX + 0x16a0) + 0x10) == 0)))) {\n            if (*0x598c80 == 0) {\n                if (*0x598d08 < *0x598d0c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00439580();\n            return;\n        }\n    }\n    uVar2 = *0x544d5c + *0x544d58;\n    if ((*0x544d5c + *0x544d58 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x544d5c == 0)) {\n        *0x544d5c = 1;\n        fcn.00439580();\n        return;\n    }\n    fcn.0040a080(uVar2);\n    if (*0x544e00 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x544e04 + -1;\n        bVar5 = *0x544e04 == 1;\n        *0x544e04 = iVar3;\n        if (bVar5) {\n            fcn.0040a380();\n        }\n        fcn.0040a2a0();\n        return;\n    }\n    if (*(in_RAX + 0x26d0) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x26d0) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x26d0) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x544e28)();\n        iVar3 = *0x544e30 + -1;\n        bVar5 = *0x544e30 == 1;\n        *0x544e30 = iVar3;\n        if (bVar5) {\n            fcn.0040a380();\n        }\n    }\n    if (*0x544d70 == 0) {\n        if ((*0x544d58 == *0x598210 + -1) && (*0x544d08 != 0)) {\n            fcn.0040a2a0();\n            fcn.00439580();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1668);\n        iVar4 = *(in_RAX + 0x1670);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.00441060();\n        fcn.0040a2a0();\n        if (iVar4 != 0) {\n            fcn.0043b2c0();\n        }\n        return;\n    }\n    fcn.0040a2a0();\n    fcn.00439580();\n    return;\n}\n",
        "token_count": 957
    },
    "00439ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439ba0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x138) != 0) && (*(*(iVar2 + 0x138) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x439bf0;\n                    fcn.0043f640();\n                    *(*0x20 + -0x50) = 0x439bf5;\n                    fcn.00439840();\n                }\n                *(*0x20 + -0x50) = 0x439bff;\n                fcn.0043f7a0();\n                *(*0x20 + -0x50) = 0x439c05;\n                fcn.00438080();\n                uVar1 = *(*(*(*(*0x20 + -0x20) + 0x30) + 0x138) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x439c36;\n                    fcn.0043f4c0();\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x439c5d;\n                fcn.004346e0();\n                *(*0x20 + -0x50) = 0x439c6e;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439c79;\n                fcn.00434ce0();\n                *(*0x20 + -0x50) = 0x439c8a;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439c8f;\n                fcn.00434760();\n                iVar2 = *(*(*(*0x20 + -0x20) + 0x30) + 0x138);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x34) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x439cc5;\n                fcn.004346e0();\n                *(*0x20 + -0x50) = 0x439cd6;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439ce5;\n                fcn.00434f60();\n                *(*0x20 + -0x50) = 0x439cf6;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439d05;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x439d16;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439d25;\n                fcn.00434ce0();\n                *(*0x20 + -0x50) = 0x439d2a;\n                fcn.00434940();\n                *(*0x20 + -0x50) = 0x439d2f;\n                fcn.00434760();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x50) = 0x439d4f;\n                fcn.004346e0();\n                *(*0x20 + -0x50) = 0x439d65;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439d6f;\n                fcn.00434f60();\n                *(*0x20 + -0x50) = 0x439d85;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439d8f;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x439da5;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x439db0;\n                fcn.00434ce0();\n                *(*0x20 + -0x50) = 0x439db5;\n                fcn.00434940();\n                *(*0x20 + -0x50) = 0x439dba;\n                fcn.00434760();\n                *(*0x20 + -0x50) = 0x439dcb;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x50) = 0x439ddc;\n            fcn.00432f60();\n        }\n        *(puVar3 + -8) = 0x439de5;\n        fcn.0045ad80();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1389
    },
    "00439e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439e00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x439e3f;\n                    fcn.0043f7a0();\n                    *(*0x20 + -0x28) = 0x439e45;\n                    uVar2 = fcn.0043f640();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x439e5e;\n                    fcn.0040a380();\n                    *(*0x20 + -0x28) = 0x439e65;\n                    fcn.00439460();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x439e85;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x28) = 0x439e96;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x439ea5;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 495
    },
    "00439ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439ec0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544e00 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x00439f10:\n                    *(*0x20 + -0x28) = 0x439f15;\n                    uVar2 = fcn.0043f640();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x439f28;\n                    fcn.0040a080();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x544e04 + -1;\n                    bVar5 = *0x544e04 == 1;\n                    *0x544e04 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x439f54;\n                        fcn.0040a380();\n                    }\n                    *(*0x20 + -0x28) = 0x439f65;\n                    fcn.0040a2a0();\n                    *(*0x20 + -0x28) = 0x439f6a;\n                    fcn.00439460();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x544d5c + -1;\n                iVar3 = *0x544d5c + -1;\n                *0x544d5c = iVar1;\n                if (-1 < iVar3) goto code_r0x00439f10;\n                *(*0x20 + -0x28) = 0x439f85;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x28) = 0x439f96;\n            fcn.00432f60();\n        }\n        *(puVar4 + -8) = 0x439f9c;\n        fcn.0045ad80();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 630
    },
    "00439fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439fc0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598440 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045cfe0(arg1, *(unaff_R14 + 0x30), arg3, arg4);\n    }\n    if (*0x598440 == 0) {\n        in_RAX[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        in_RAX = fcn.0045d140(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.00437220(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe0) != *0x544e40) {\n        fcn.0042fb40();\n    }\n    if (*0x54a3d0 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.004500a0();\n        }\n        fcn.0044fd40();\n    }\n    fcn.0045aba0();\n    return;\n}\n",
        "token_count": 483
    },
    "0043a140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a378)\n// WARNING: Removing unreachable block (ram,0x0043a37d)\n\nuint64_t fcn.0043a140(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong arg3;\n    ulong noname_2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\ncode_r0x0043a16e:\n    while (uVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x544e00 != 0) {\n        fcn.00439ec0();\n    }\n    if (*(uVar2 + 0x26d0) != 0) {\n        fcn.00438660();\n    }\n    uVar3 = fcn.0043bac0();\n    if (((*0x5981c8 != '\\0') && (*0x5981c9 != '\\0')) && (iVar4 = fcn.00415c40(),  iVar4 != 0)) {\n        fcn.00436ac0(1);\n    }\n    iVar4 = **0x53c810;\n    if (iVar4 != 0) {\n        fcn.0045cbc0();\n        iStack232 = iVar4;\n    }\n    uVar5 = fcn.004416e0();\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*0x544d70 != 0) {\n        fcn.0040a080();\n        uStack64 = fcn.00440e20();\n        fcn.0040a2a0();\n        if (uStack64 != 0) {\n            return uStack64;\n        }\n    }\n    if (*0x598218 == 0) {\n        bVar12 = false;\n    }\n    else if (*0x59821c == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x544d08 != 0;\n    }\n    if ((bVar12) && (uVar5 = fcn.0042c560(),  uVar5 != 0)) {\n        fcn.0043b3a0();\n        fcn.00437220(1);\n        if (*0x54a3d0 != '\\0') {\n            fcn.0044ff80();\n        }\n        return uVar5;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar11 = *0x598210 - *0x544d58;\n        bVar12 = *0x544d5c << 1 < uVar11;\n    }\n    else {\n        bVar12 = true;\n        uVar11 = *0x598210;\n    }\n    uVar5 = uVar11;\n    if (bVar12) goto code_r0x0043a328;\n    uVar5 = 0;\n    goto code_r0x0043a387;\ncode_r0x0043a328:\n    uVar3 = *(unaff_R14 + 0x30);\n    if (*(uVar3 + 0xe4) == '\\0') {\n        *(uVar3 + 0xe4) = 1;\n        LOCK();\n        uVar3 = *0x544d5c;\n        *0x544d5c = *0x544d5c + 1;\n    }\n    uVar9 = fcn.0043abe0();\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (!bVar12) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\ncode_r0x0043a387:\n        if (*0x598204 == 0) {\n            bVar12 = false;\n        }\n        else if ((*(uVar2 + 0x1698) == 0) || ((*(*(uVar2 + 0x1698) + 0x10) == 0 && (*(*(uVar2 + 0x16a0) + 0x10) == 0))))\n        {\n            if (*0x598c80 == 0) {\n                if (*0x598d08 < *0x598d0c) {\n                    bVar12 = true;\n                }\n                else {\n                    bVar12 = false;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n        }\n        else {\n            bVar12 = true;\n        }\n        uVar9 = uVar2;\n        if (!bVar12) goto code_r0x0043a40c;\n        while( true ) {\n            if (*0x5982e8 == 0) {\n                piVar10 = NULL;\n            }\n            else {\n                piVar10 = (*0x5982e8 >> 0x13) << 3;\n                *0x5982e8 = *piVar10;\n                LOCK();\n            }\n            if (piVar10 != NULL) {\n                *(uVar9 + 0x1688) = 3;\n                uVar2 = piVar10[2];\n                fcn.00437220(1);\n                if (*0x54a3d0 != '\\0') {\n                    fcn.0044ff80();\n                }\n                return uVar2;\n            }\ncode_r0x0043a40c:\n            noname_2 = *0x544500;\n            arg3 = *0x5444c0;\n            uStack48 = *0x544450;\n            uStack104 = *0x544458;\n            uStack96 = *0x544460;\n            uStack72 = *0x5444b0;\n            uStack80 = *0x5444f0;\n            uVar9 = *0x544458;\n            fcn.0040a080();\n            if ((*0x544e00 != 0) || (*(uVar2 + 0x26d0) != 0)) break;\n            if (*0x544d70 != 0) {\n                uStack56 = fcn.00440e20();\n                fcn.0040a2a0();\n                return uStack56;\n            }\n            uVar6 = fcn.0043f640();\n            if (uVar6 == uVar2) {\n                fcn.00441060();\n                fcn.0040a2a0();\n                uVar6 = uStack104;\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar5;\n                if (cVar1 == '\\0') {\ncode_r0x0043a603:\n                    iVar4 = *0x544d08;\n                    if (*0x598218 == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x59821c == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x544d08 = 0;\n                        bVar12 = iVar4 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x598218 != 0) && ((*0x544d10 == 0 || (uVar7 < *0x544d10)))) {\n                            fcn.0042c460();\n                        }\ncode_r0x0043a9c0:\n                        fcn.00439460();\n                        goto code_r0x0043a16e;\n                    }\n                    uVar9 = 0x544d10;\n                    *0x544d10 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            if ((uVar7 != 0) && (uVar3 == 0)) {\n                                uStack88 = uVar7;\n                                fcn.0045ed60();\n                            }\n                            uVar3 = fcn.0042c560(unaff_R14, 0x544d10);\n                            uVar2 = *0x544d10;\n                            *0x544d10 = 0;\n                            fcn.0045ed60(uVar2);\n                            iVar4 = *0x544d08;\n                            *0x544d08 = iStack232;\n                            if ((*0x5982c0 == 0) || (uVar3 != 0)) {\n                                fcn.0040a080(iVar4);\n                                iStack40 = fcn.00441180();\n                                fcn.0040a2a0();\n                                if (iStack40 == 0) {\n                                    fcn.0043b3a0();\n                                    goto code_r0x0043a9c0;\n                                }\n                                fcn.0043f4c0();\n                                if (uVar3 != 0) {\n                                    fcn.0043b3a0();\n                                    fcn.00437220(1);\n                                    if (*0x54a3d0 != '\\0') {\n                                        fcn.0044ff80();\n                                    }\n                                    return uVar3;\n                                }\n                                if (cVar1 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x544d5c = *0x544d5c + 1;\n                                }\n                            }\n                            else {\n                                fcn.00439460();\n                            }\n                            goto code_r0x0043a16e;\n                        }\n                        fcn.00432f60();\n                    }\n                    fcn.00432f60();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    uVar11 = *0x544d5c - 1;\n                    uVar8 = *0x544d5c - 1;\n                    uVar9 = uVar8;\n                    *0x544d5c = uVar11;\n                    if (-1 < uVar8) {\n                        iVar4 = fcn.0043af60(uStack96, uVar9, arg3);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.0043b140();\n                            if (iVar4 != 0) {\n                                iStack40 = iVar4;\n                                fcn.0043f4c0();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x544d5c = *0x544d5c + 1;\n                                *(iStack40 + 0x1688) = 3;\n                                fcn.00437220(1);\n                                if (*0x54a3d0 != '\\0') {\n                                    fcn.0044ff80();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.0043b0a0(uStack96, uVar9, noname_2, uVar5);\n                            goto code_r0x0043a603;\n                        }\n                        fcn.0043f4c0();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x544d5c = *0x544d5c + 1;\n                        goto code_r0x0043a16e;\n                    }\n                }\n                fcn.00432f60();\n            }\n            fcn.00432f60();\n        }\n        fcn.0040a2a0();\n    }\n    goto code_r0x0043a16e;\n}\n",
        "token_count": 2770
    },
    "0043b140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b219)\n\nint64_t fcn.0043b140(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598204 == 0) {\n        return 0;\n    }\n    if (*0x598c80 == 0) {\n        if (*0x598d08 < *0x598d0c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0040a080();\n        iVar2 = fcn.00441180();\n        if (iVar2 == 0) {\n            fcn.0040a2a0();\n            return 0;\n        }\n        if (*0x598204 != 0) {\n            if (*0x5982e8 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                piVar3 = (*0x5982e8 >> 0x13) << 3;\n                *0x5982e8 = *piVar3;\n                LOCK();\n            }\n            if (piVar3 == NULL) {\n                fcn.00441060();\n                fcn.0040a2a0();\n                return 0;\n            }\n            fcn.0040a2a0();\n            return iVar2;\n        }\n        fcn.00441060();\n        fcn.0040a2a0();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 415
    },
    "0043b320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b320(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x544d5c + -1) {\n                    *(*0x20 + -0x20) = 0x43b365;\n                    *0x544d5c = *0x544d5c + -1;\n                    fcn.00439b20();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43b385;\n                *0x544d5c = *0x544d5c + -1;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x20) = 0x43b396;\n            fcn.00432f60();\n        }\n        *(puVar1 + -8) = 0x43b39c;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 375
    },
    "0043b3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043b3a0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x54a3d0 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.0044ff80();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.00437220(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.0040a080();\n        iVar2 = *0x544d60;\n        iVar4 = *0x544d68;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x544d68 != 0)) {\n            *(*0x544d68 + 0xa0) = iStack64;\n            iVar2 = *0x544d60;\n        }\n        *0x544d68 = iVar4;\n        *0x544d60 = iVar2;\n        *0x544d70 = *0x544d70 + arg1;\n        piVar1 = fcn.0040a2a0();\n        while ((arg1 != 0 && (*0x544d58 != 0))) {\n            piVar1 = fcn.00439580();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x544d58;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.0040a080();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x544d68 == 0) {\n                *0x544d60 = auStack48._0_8_;\n            }\n            else {\n                *(*0x544d68 + 0xa0) = auStack48._0_8_;\n            }\n            *0x544d68 = auStack48._8_8_;\n        }\n        *0x544d70 = *0x544d70 + iVar2;\n        fcn.0040a2a0();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x544d58 != 0))) {\n            fcn.00439580();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.004415a0(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1048
    },
    "0043b6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b6c0(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar3 + 0x138) != 0) {\n                    *(*0x20 + -0x48) = 0x43b6fd;\n                    fcn.00439ba0();\n                    uVar4 = *(*(*(*0x20 + -0x20) + 0x30) + 0x138);\n                    *(*0x20 + -0x48) = 0x43b717;\n                    fcn.00439fc0(uVar4, param_2, param_3, param_4);\n                }\n                uVar5 = *(*0x20 + -0x20);\n                param_2 = *(uVar5 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        while( true ) {\n                            iVar3 = *(*(uVar5 + 0x30) + 0xa0);\n                            *(iVar3 + 0x2708) = 0;\n                            if (*0x544e00 == 0) break;\n                            *(*0x20 + -0x48) = 0x43ba5a;\n                            fcn.00439ec0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        if (*(iVar3 + 0x26d0) != 0) {\n                            *(*0x20 + -0x10) = iVar3;\n                            *(*0x20 + -0x48) = 0x43b76c;\n                            fcn.00438660();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        param_2 = *(uVar5 + 0x30);\n                        if ((*(param_2 + 0xe4) != '\\0') &&\n                           ((*(iVar3 + 0xdf8) != 0 ||\n                            (param_2 = *(iVar3 + 0x5f0),  *(iVar3 + 0x5f4) != *(iVar3 + 0x5f0))))) break;\n                        *(*0x20 + -0x48) = 0x43b7b3;\n                        fcn.0043bac0();\n                        if ((*0x54a3d0 == '\\0') && (*0x54a3d1 == '\\0')) {\n                            iVar3 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43b7ca;\n                            iVar3 = fcn.0044e9e0();\n                            bVar9 = iVar3 == 0;\n                            if (!bVar9) {\n                                *(*0x20 + -0x28) = iVar3;\n                                uVar5 = 0;\n                                *(*0x20 + -0x48) = 0x43b7e5;\n                                fcn.00437220(1);\n                                *(*0x20 + -0x48) = 0x43b7f1;\n                                fcn.0044ff80();\n                                iVar3 = *(*0x20 + -0x28);\n                                bVar9 = iVar3 == 0;\n                            }\n                            uVar5 = uVar5 & 0xffffffffffffff00 | !bVar9;\n                        }\n                        uVar7 = 0;\n                        if ((iVar3 == 0) && (*0x598204 != 0)) {\n                            *(*0x20 + -0x2b) = uVar5;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = *(*(iVar6 + 0x30) + 0xa0);\n                            *(*0x20 + -0x48) = 0x43b834;\n                            iVar3 = fcn.0041d760();\n                            uVar5 = iVar6 & 0xffffff00 | iVar3 != 0 | *(*0x20 + -0x2b);\n                        }\n                        *(*0x20 + -0x29) = uVar5;\n                        if (iVar3 == 0) {\n                            iVar6 = *(*0x20 + -0x20);\n                            if ((*(*(*(iVar6 + 0x30) + 0xa0) + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x544d70)) {\n                                *(*0x20 + -0x48) = 0x43b889;\n                                fcn.0040a080();\n                                uVar7 = 1;\n                                *(*0x20 + -0x48) = 0x43b8a5;\n                                uVar4 = fcn.00440e20();\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x48) = 0x43b8b8;\n                                fcn.0040a2a0();\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                iVar3 = *(*0x20 + -0x18);\n                            }\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43b8e5;\n                            iVar3 = fcn.004416e0();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43b8f9;\n                            iVar3 = fcn.0043a140();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x2a) = uVar7;\n                        *(*0x20 + -0x18) = iVar3;\n                        if (*(*(iVar6 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x48) = 0x43b91e;\n                            fcn.0043b320();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (*0x544d78 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43b949;\n                            uVar1 = fcn.00453da0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043ba1b:\n                            if (uVar5 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43ba25;\n                                fcn.00439b20();\n                                iVar3 = *(*0x20 + -0x18);\n                                iVar6 = *(*0x20 + -0x20);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x48) = 0x43ba4b;\n                                fcn.00439fc0(uVar5, iVar6, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x48) = 0x43b733;\n                            fcn.00439e00();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43b979;\n                            fcn.0040a080();\n                            if (*0x544d78 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x43b998;\n                                cVar2 = fcn.00453da0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43ba07;\n                                fcn.0040a2a0();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                goto code_r0x0043ba1b;\n                            }\n                            iVar3 = *(*0x20 + -0x18);\n                            *(iVar3 + 0xa0) = 0;\n                            iVar6 = iVar3;\n                            if (*0x544d88 != 0) {\n                                *(*0x544d88 + 0xa0) = iVar3;\n                                iVar6 = *0x544d80;\n                            }\n                            *0x544d80 = iVar6;\n                            *0x544d90 = *0x544d90 + 1;\n                            *(*0x20 + -0x48) = 0x43b9ef;\n                            *0x544d88 = iVar3;\n                            fcn.0040a2a0();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x43ba78;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x48) = 0x43ba89;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x48) = 0x43ba9a;\n            fcn.00432f60();\n        }\n        *(puVar8 + -8) = 0x43baa5;\n        fcn.0045ad80();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2495
    },
    "0043bac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043bac0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(in_RAX + 0x1668);\n    iVar2 = *(in_RAX + 0x1670);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045ed60();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x26fc) <= *(in_RAX + 0x26f8) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.0040a080();\n    if (0 < *(in_RAX + 0x26e8)) {\n        fcn.0044d780();\n        do {\n            if (*(in_RAX + 0x26e8) < 1) break;\n            iVar1 = fcn.0044dbc0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x26e8) >> 2 < *(in_RAX + 0x26fc))) {\n        fcn.0044e020();\n    }\n    fcn.0040a2a0();\n    return unaff_RBX;\n}\n",
        "token_count": 495
    },
    "0043be80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043be80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43bebf;\n                fcn.00437220(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43beee;\n                fcn.0040a080();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x544d68 != 0) {\n                    *(*0x544d68 + 0xa0) = iVar1;\n                    iVar2 = *0x544d60;\n                }\n                *0x544d60 = iVar2;\n                *0x544d70 = *0x544d70 + 1;\n                *(*0x20 + -0x38) = 0x43bf3f;\n                *0x544d68 = iVar1;\n                fcn.0040a2a0();\n                *(*0x20 + -0x38) = 0x43bf45;\n                fcn.0043b6c0();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43bf70;\n            fcn.004346e0();\n            *(*0x20 + -0x38) = 0x43bf85;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x43bf8f;\n            fcn.00434f60();\n            *(*0x20 + -0x38) = 0x43bfa5;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x43bfaf;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x43bfc5;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x43bfd0;\n            fcn.00434ce0();\n            *(*0x20 + -0x38) = 0x43bfd5;\n            fcn.00434940();\n            *(*0x20 + -0x38) = 0x43bfda;\n            fcn.00434760();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43bffa;\n            fcn.004346e0();\n            *(*0x20 + -0x38) = 0x43c00b;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x43c015;\n            fcn.00434f60();\n            *(*0x20 + -0x38) = 0x43c026;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x43c030;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x43c045;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x43c050;\n            fcn.00434ce0();\n            *(*0x20 + -0x38) = 0x43c055;\n            fcn.00434940();\n            *(*0x20 + -0x38) = 0x43c05a;\n            fcn.00434760();\n            *(*0x20 + -0x38) = 0x43c06b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43c076;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1212
    },
    "0043c1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c1e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x54a3d0 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044eb60(0);\n    }\n    fcn.0043be80();\n    return;\n}\n",
        "token_count": 143
    },
    "0043c260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c260(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x54a3d0 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43c292;\n                fcn.0044ff00();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043c2de;\n                *(*0x20 + -0x48) = 0x43c2c7;\n                iVar1 = fcn.0044abe0();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x29) & 2) == 0) {\ncode_r0x0043c2de:\n                        *(*0x20 + -0x48) = 0x43c2ed;\n                        fcn.00437640(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43c325;\n                        fcn.00436d80(9);\n                        *(*0x20 + -0x48) = 0x43c32a;\n                        fcn.0043b6c0();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43c339;\n                    uVar2 = fcn.0044b2c0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43c348;\n                    fcn.004346e0();\n                    *(*0x20 + -0x48) = 0x43c359;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x48) = 0x43c368;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x48) = 0x43c379;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x48) = 0x43c37e;\n                    fcn.00434760();\n                    *(*0x20 + -0x48) = 0x43c38f;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x48) = 0x43c3a5;\n                in_RAX = fcn.00432f60();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43c3c6;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x43c3d7;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x43c3e5;\n            fcn.00434f60();\n            *(*0x20 + -0x48) = 0x43c3f6;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x43c405;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x43c416;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x43c425;\n            fcn.00434ce0();\n            *(*0x20 + -0x48) = 0x43c42a;\n            fcn.00434940();\n            *(*0x20 + -0x48) = 0x43c42f;\n            fcn.00434760();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43c44f;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x43c465;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x43c46f;\n            fcn.00434f60();\n            *(*0x20 + -0x48) = 0x43c485;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x43c48f;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x43c4a5;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x43c4b0;\n            fcn.00434ce0();\n            *(*0x20 + -0x48) = 0x43c4b5;\n            fcn.00434940();\n            *(*0x20 + -0x48) = 0x43c4ba;\n            fcn.00434760();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43c4cb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43c4d6;\n        fcn.0045f460();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1564
    },
    "0045f260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045f260(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    while (puVar1 = iVar2 + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n        fcn.0045ad80();\n    }\n    if (*0x54a3d0 != '\\0') {\n        fcn.0044eb60(0);\n    }\n    fcn.0045abc0();\n    return;\n}\n",
        "token_count": 143
    },
    "0043c8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c8e0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x60) = 0;\n        *(unaff_R14 + 0x58) = 0;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00436200();\n        }\n        return;\n    }\n    fcn.00432f60();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 215
    },
    "0043c960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c960(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043c8e0();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00437220(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.0045ac40();\n    }\n    if (*0x54a3d0 != '\\0') {\n        fcn.0045ac40();\n        fcn.0043c8e0();\n    }\n    if (*0x544e10 != 0) {\n        fcn.0045ac40();\n        fcn.0043c8e0();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x26d0) != 0) {\n        fcn.0045ac40();\n        fcn.0043c8e0();\n    }\n    *(unaff_R14[6] + 0x274) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x544e00 != 0) {\n        fcn.0045ac40();\n        fcn.0043c8e0();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 563
    },
    "0043d220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043d2f9)\n\nulong fcn.0043d220(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x544e04 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043f520();\n            fcn.0043d3e0();\n            return 1;\n        }\n    }\n    if (*0x544d50 != 0) {\n        fcn.0045ac40();\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "0043d3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d3e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x274)) {\n        if (*0x54a3d0 != '\\0') {\n            fcn.0045ac40();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0043d980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043d980(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    char cVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    ulong *puVar11;\n    ulong arg2;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    uint32_t uVar13;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                if (in_RAX != 0) {\n                    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar2 = *piVar2 + 1;\n                    *(*0x20 + -0x10) = unaff_R14;\n                    *(*0x20 + -0x34) = 0;\n                    *(*0x20 + -0x18) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x20) = *(*(unaff_R14 + 0x30) + 0xa0);\n                    *(*0x20 + -0x50) = 0x43da05;\n                    iVar7 = fcn.0043e220();\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x50) = 0x43da14;\n                        uVar8 = fcn.0043d700();\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0x50) = 0x43da25;\n                        fcn.00437220(6);\n                        *(*0x20 + -0x50) = 0x43da2f;\n                        fcn.00436220();\n                        iVar7 = *(*0x20 + -0x28);\n                    }\n                    if (*(iVar7 + 8) != 0) {\n                        if (*(iVar7 + 0x90) == 6) {\n                            *(*0x20 + -0x28) = iVar7;\n                            uVar8 = *(iVar7 + 8);\n                            *(*0x20 + -0x30) = uVar8;\n                            *(*0x20 + -0x50) = 0x43da6d;\n                            fcn.0045db00(uVar8, iVar7 + 0x38);\n                            iVar7 = (*(*0x20 + -0x30) - (*(*0x20 + -0x34) + (-(*(*0x20 + -0x34) + 0x20) & 7U))) + -0x20;\n                            iVar10 = *(*0x20 + -0x28);\n                            *(iVar10 + 0x38) = iVar7;\n                            *(iVar10 + 0x80) = iVar7;\n                            *(iVar10 + 0x40) = 0x45cfa1;\n                            *(iVar10 + 0x48) = iVar10;\n                            puVar11 = *(iVar10 + 0x38) + -8;\n                            puVar5 = *(*0x20 + 8);\n                            uVar8 = *puVar5;\n                            arg4 = *(iVar10 + 0x40);\n                            *puVar11 = arg4;\n                            *(iVar10 + 0x38) = puVar11;\n                            *(iVar10 + 0x40) = uVar8;\n                            if (*0x598440 == 0) {\n                                *(iVar10 + 0x50) = puVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x43daf7;\n                                fcn.0045cfe0(iVar10, iVar10 + 0x50, uVar8, arg4);\n                            }\n                            arg2 = *(*0x20 + 0x28);\n                            *(iVar10 + 0x128) = arg2;\n                            *(*0x20 + -0x50) = 0x43db0d;\n                            uVar9 = fcn.0043dd60();\n                            if (*0x598440 == 0) {\n                                iVar7 = *(*0x20 + -0x28);\n                                *(iVar7 + 0x130) = uVar9;\n                            }\n                            else {\n                                iVar7 = *(*0x20 + -0x28);\n                                *(*0x20 + -0x50) = 0x43db35;\n                                fcn.0045cfe0(iVar7, arg2, uVar8, arg4);\n                            }\n                            *(iVar7 + 0x138) = **(*0x20 + 8);\n                            iVar10 = *(*(*(*0x20 + -0x10) + 0x30) + 0x90);\n                            if (iVar10 != 0) {\n                                if (*0x598440 == 0) {\n                                    *(iVar7 + 0x168) = *(iVar10 + 0x168);\n                                }\n                                else {\n                                    *(*0x20 + -0x50) = 0x43db7e;\n                                    fcn.0045d140(iVar7, *(*0x20 + -0x10), uVar8, arg4);\n                                }\n                            }\n                            *(*0x20 + -0x50) = 0x43db88;\n                            cVar6 = fcn.00453da0();\n                            if (cVar6 != '\\0') {\n                                LOCK();\n                                *0x544d48 = *0x544d48 + 1;\n                            }\n                            iVar7 = *(unaff_R14 + 0x30);\n                            uVar13 = *(iVar7 + 0xf0);\n                            uVar3 = *(iVar7 + 0xf4);\n                            *(iVar7 + 0xf0) = uVar3;\n                            uVar13 = uVar13 ^ uVar13 << 0x11;\n                            uVar13 = uVar3 >> 0x10 ^ uVar13 >> 7 ^ uVar3 ^ uVar13;\n                            *(iVar7 + 0xf4) = uVar13;\n                            uVar3 = uVar3 + uVar13;\n                            iVar7 = *(*0x20 + -0x28);\n                            *(iVar7 + 0xbd) = uVar3;\n                            if ((uVar3 & 7) == 0) {\n                                *(iVar7 + 0xbc) = 1;\n                            }\n                            *(*0x20 + -0x50) = 0x43dbfe;\n                            fcn.00437220(1);\n                            iVar10 = *0x544d00;\n                            iVar7 = *(*0x20 + -0x20);\n                            if (*(iVar7 + 0x5e8) == *(iVar7 + 0x5e0)) {\n                                LOCK();\n                                iVar1 = *0x544d00 + 1;\n                                *0x544d00 = *0x544d00 + 0x10;\n                                *(iVar7 + 0x5e0) = iVar1;\n                                *(iVar7 + 0x5e8) = iVar10 + 0x11;\n                            }\n                            iVar10 = *(*0x20 + -0x28);\n                            *(iVar10 + 0x98) = *(iVar7 + 0x5e0);\n                            *(iVar7 + 0x5e0) = *(iVar7 + 0x5e0) + 1;\n                            if (*0x54a3d0 != '\\0') {\n                                *(*0x20 + -0x50) = 0x43dc69;\n                                fcn.0044fc60();\n                                iVar10 = *(*0x20 + -0x28);\n                            }\n                            iVar4 = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8);\n                            *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return iVar10;\n                        }\n                        *(*0x20 + -0x50) = 0x43dcb8;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x50) = 0x43dcc9;\n                    fcn.00432f60();\n                    *(*0x20 + -0x50) = 0x43dcda;\n                    fcn.00432f60();\n                }\n                iVar7 = *(unaff_R14 + 0x30);\n                *(iVar7 + 0xc4) = 0xffffffff;\n                *(*0x20 + -0x50) = 0x43dcf9;\n                fcn.00432f60();\n                arg1._0_4_ = iVar7;\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x50) = 0x43dd0a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + 0x28) = unaff_RSI;\n        *(puVar12 + -8) = 0x43dd28;\n        fcn.0045f460();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1._0_4_ = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        unaff_RSI = *(puVar12 + 0x28);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 2381
    },
    "0043dd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043dd60(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x598654 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar6 = *(in_RAX + 0x130);\n            if (puVar6 == NULL) {\n                uVar8 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar6;\n                uVar8 = puVar6[1];\n            }\n            *(*0x20 + -0x378) = uVar8;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar8 + 1;\n            if (*0x598654 < iVar9) {\n                iVar9 = *0x598654;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43de05;\n            uVar4 = fcn.004449e0(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43de4e;\n                fcn.00410de0(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43de6f;\n                fcn.0045d62e();\n                *(*0x20 + -0x3d0) = 0;\n                *(*0x20 + -0x3d8) = 0x43dea8;\n                uVar4 = fcn.00450500(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43debf;\n                puVar5 = fcn.004449e0(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43deef;\n                    fcn.0045ddc0(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x128);\n                if (*0x598440 == 0) {\n                    puVar6 = *(*0x20 + -0x38);\n                    *puVar6 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar6 + 1) = *(*0x20 + -0x28);\n                    *(puVar6 + 0xc) = uVar1;\n                    *(puVar6 + 2) = uVar2;\n                    *(puVar6 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar6 + 3) = *(*0x20 + -0x18);\n                    *(puVar6 + 0x1c) = uVar1;\n                    *(puVar6 + 4) = uVar2;\n                    *(puVar6 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43dfb0;\n                    fcn.00410c20(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43dfbc;\n                puVar6 = fcn.0040c140();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x598440 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43dfef;\n                    puVar6 = fcn.0045d0e0(*(*0x20 + -0x38));\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43e009;\n            in_RAX = fcn.0045d540(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43e014;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1615
    },
    "0043e020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e020(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*(*unaff_RBX + 8) - **unaff_RBX != 0x2000) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43e074;\n                    fcn.00445b80();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0xe00);\n                *(in_RAX + 0xe00) = unaff_RBX;\n                iVar2 = *(in_RAX + 0xe08) + 1;\n                *(in_RAX + 0xe08) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0xe08)) {\n                        piVar1 = *(in_RAX + 0xe00);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0xe00) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43e165;\n                    fcn.0040a080();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x544da8;\n                        *0x544da8 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x544da0;\n                        *0x544da0 = *(*0x20 + -0x38);\n                    }\n                    *0x544db0 = *0x544db0 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43e1e5;\n                    fcn.0040a2a0();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43e1fb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43e20b;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1195
    },
    "0043e220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e220(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    do {\n        piVar1 = *(in_RAX + 0xe00);\n        if ((piVar1 != NULL) || ((*0x544da0 == 0 && (*0x544da8 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0xe00) = piVar1[0x14];\n                *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n                if (*piVar1 == 0) {\n                    fcn.0045ac40();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.0040a080();\n        while (*(in_RAX + 0xe08) < 0x20) {\n            if (*0x544da0 == 0) {\n                if (*0x544da8 == 0) break;\n                iVar2 = *0x544da8;\n                *0x544da8 = *(*0x544da8 + 0xa0);\n            }\n            else {\n                iVar2 = *0x544da0;\n                *0x544da0 = *(*0x544da0 + 0xa0);\n            }\n            *0x544db0 = *0x544db0 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0xe00);\n            *(in_RAX + 0xe00) = iVar2;\n            *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + 1;\n        }\n        fcn.0040a2a0();\n    } while( true );\n}\n",
        "token_count": 481
    },
    "0043e420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043e420(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0xe00);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0xe00) = piVar1[0x14];\n        }\n        *(in_RAX + 0xe08) = *(in_RAX + 0xe08) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0040a080();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x544da8;\n        *0x544da8 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x544da0;\n        *0x544da0 = auStack72._0_8_;\n    }\n    *0x544db0 = *0x544db0 + iVar2;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 590
    },
    "0043e580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e580(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x244) == 0) {\n        fcn.0045ac40();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x244;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x244) == 0) && (*(iVar2 + 0x240) == 0)) {\n        *(iVar2 + 0x138) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0043e660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e660(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint unaff_EBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x386) = 0;\n            *(in_RAX + 0x388) = 0x80;\n            if (*0x598440 == 0) {\n                *(in_RAX + 900) = in_RAX + 0x38a;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43e6bc;\n                in_RAX = fcn.0045d0e0();\n            }\n            for (iVar5 = 0; iVar5 < 5; iVar5 = iVar5 + 1) {\n                *(in_RAX + iVar5 * 6 + 0x1c) = 0;\n                *(in_RAX + iVar5 * 6 + 0x1e) = 0x20;\n                if (*0x598440 == 0) {\n                    *(in_RAX + iVar5 * 6 + 0x1a) = in_RAX + iVar5 * 0x40 + 0x38;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x43e711;\n                    in_RAX = fcn.0045d0e0();\n                }\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x20) = 0x43e72b;\n            fcn.0042bbe0(in_RAX + 0x5b0);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                iVar6 = *(*0x20 + 0x10);\n                if (iVar6 != 0) {\n                    *(*0x20 + -0x20) = 0x43e765;\n                    uVar2 = fcn.00413ac0();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    iVar6 = *(*0x20 + 0x10);\n                    goto code_r0x0043e772;\n                }\n                if (*0x598310 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x598310;\n                    goto code_r0x0043e772;\n                }\n            }\n            else {\n                iVar6 = *(*0x20 + 0x10);\ncode_r0x0043e772:\n                arg1 = *0x5444f8;\n                iVar7 = ((iVar6 >> 0x1f) >> 0x1b) + iVar6 >> 5;\n                uVar4 = iVar6 + iVar7 * -0x20;\n                if (-1 < uVar4) {\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    uVar3 = iVar7;\n                    if (uVar3 < *0x5444f8) {\n                        puVar1 = *0x5444f0 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x5444b8) {\n                            puVar1 = *0x5444b0 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43e7e6;\n                        fcn.0045d480(*0x5444b8);\n                    }\n                    *(*0x20 + -0x20) = 0x43e7ee;\n                    fcn.0045d480(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43e7f3;\n                fcn.00430920();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43e805;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_EBX;\n        *(puVar8 + -8) = 0x43e814;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_EBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1234
    },
    "0043e840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e840(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    while (*(in_RAX + 0x5f0) != *(in_RAX + 0x5f4)) {\n        uVar2 = *(in_RAX + 0x5f4) - 1;\n        *(in_RAX + 0x5f4) = uVar2;\n        iVar1 = *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8);\n        *(iVar1 + 0xa0) = *0x544d60;\n        if (*0x544d68 == 0) {\n            *0x544d68 = iVar1;\n        }\n        *0x544d70 = *0x544d70 + 1;\n        *0x544d60 = iVar1;\n    }\n    iVar1 = *(in_RAX + 0xdf8);\n    if (iVar1 != 0) {\n        *(iVar1 + 0xa0) = *0x544d60;\n        if (*0x544d68 == 0) {\n            *0x544d68 = iVar1;\n        }\n        *0x544d70 = *0x544d70 + 1;\n        *0x544d60 = iVar1;\n        *(in_RAX + 0xdf8) = 0;\n    }\n    if (0 < *(in_RAX + 0x26e8)) {\n        fcn.0040a080();\n        fcn.0040a080();\n        fcn.0044d520(*(in_RAX + 0x26e8));\n        *(in_RAX + 0x26e8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        iVar1 = in_RAX;\n        if (*0x598440 == 0) {\n            *(in_RAX + 0x26e0) = 0;\n        }\n        else {\n            fcn.0045d100(in_RAX, 0, param_3, param_4);\n        }\n        *(iVar1 + 0x26f8) = 0;\n        *(iVar1 + 0x1668) = 0;\n        fcn.0040a2a0();\n        fcn.0040a2a0();\n    }\n    if (*0x59820c != 0) {\n        fcn.0042bd20();\n        fcn.00421d60(in_RAX);\n    }\n    fcn.00410f20(in_RAX + 0xe28);\n    *(in_RAX + 0xe18) = 0;\n    *(in_RAX + 0xe20) = 0x80;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0xe10) = in_RAX + 0xe28;\n    }\n    else {\n        fcn.0045d100(in_RAX, in_RAX + 0xe28, param_3, param_4);\n    }\n    for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n        fcn.00410f20();\n        *(in_RAX + 0x70 + iVar1 * 0x18) = 0;\n        *(in_RAX + 0x78 + iVar1 * 0x18) = 0x20;\n        if (*0x598440 == 0) {\n            *(in_RAX + 0x68 + iVar1 * 0x18) = in_RAX + iVar1 * 0x100 + 0xe0;\n        }\n        else {\n            fcn.0045cfe0(iVar1, iVar1 * 3, in_RAX + iVar1 * 0x18 + 0x68, param_4);\n        }\n    }\n    fcn.0045ac40();\n    fcn.00413c20(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043e420();\n    fcn.0044eaa0();\n    *(in_RAX + 0x1678) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1084
    },
    "0043ec80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ec80(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t in_EAX;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *unaff_RBX;\n    int64_t *piVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint64_t arg4;\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x598210) && (0 < in_EAX)) {\n                *(*0x20 + -0x68) = *0x598210;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x54a3d0 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb0) = 0x43ecfc;\n                    fcn.0044eb60(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x43ed05;\n                fcn.0045ed60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar6 = *(*0x20 + -0xa8);\n                if (*0x544e48 == 0) {\n                    uVar13 = *(*0x20 + -0x68);\n                }\n                else {\n                    uVar13 = *(*0x20 + -0x68);\n                    *0x544e50 = *0x544e50 + uVar13 * (iVar6 - *0x544e48);\n                }\n                uVar14 = *(*0x20 + 8);\n                uVar7 = uVar14;\n                uVar18 = ((uVar14 + 0x1f >> 0x1f) >> 0x1b) + uVar14 + 0x1f >> 5;\n                arg4 = uVar18;\n                *(*0x20 + -100) = uVar18;\n                *0x544e48 = iVar6;\n                if (*0x544458 < uVar14) {\n                    *(*0x20 + -0xb0) = 0x43ed97;\n                    fcn.0040a080();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x544460 < iVar1) {\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0xb0) = 0x43eddc;\n                        uVar5 = fcn.004449e0(iVar1);\n                        *(*0x20 + -0x10) = uVar5;\n                        uVar5 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xb0) = 0x43ee06;\n                        fcn.00410de0(uVar5);\n                        *0x544458 = *(*0x20 + -0x48);\n                        *0x544460 = *0x544458;\n                        if (*0x598440 == 0) {\n                            *0x544450 = *(*0x20 + -0x10);\n                            piVar16 = *0x544458;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43ee47;\n                            fcn.0045d140(uVar5, *0x544458, uVar7, arg4);\n                            piVar16 = *0x544458;\n                        }\ncode_r0x0043ee4e:\n                        *0x544458 = piVar16;\n                        unaff_RSI = *0x5444b8;\n                        uVar13 = *(*0x20 + -100);\n                        uVar7 = uVar13;\n                        if (*0x5444c0 < uVar13) {\n                            *(*0x20 + -0x50) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43eeb3;\n                            uVar5 = fcn.00444880(*0x5444b8);\n                            unaff_RBX = *(*0x20 + -0x50);\n                            piVar16 = unaff_RBX;\n                            piVar15 = unaff_RBX;\n                            if (*0x598440 != 0) {\n                                *(*0x20 + -0xb0) = 0x43eee5;\n                                piVar16 = *0x5444b8;\n                                *0x5444b8 = unaff_RBX;\n                                piVar15 = *0x5444c0;\n                                *0x5444c0 = unaff_RBX;\n                                fcn.0045cfe0(piVar16, piVar15, uVar7, arg4);\n                                uVar5 = *0x5444b0;\n                                piVar16 = *0x5444b8;\n                                piVar15 = *0x5444c0;\n                            }\n                            *0x5444c0 = piVar15;\n                            *0x5444b8 = piVar16;\n                            *0x5444b0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43eeff;\n                            uVar5 = fcn.00444880(*0x5444f8);\n                            *0x544500 = *(*0x20 + -0x50);\n                            piVar16 = *0x544500;\n                            if (*0x598440 != 0) {\n                                *(*0x20 + -0xb0) = 0x43ef30;\n                                piVar16 = *0x5444f8;\n                                *0x5444f8 = *0x544500;\n                                fcn.0045cfe0(piVar16, *0x544500, uVar7, arg4);\n                                uVar5 = *0x5444f0;\n                                piVar16 = *0x5444f8;\n                            }\ncode_r0x0043ef32:\n                            *0x5444f8 = piVar16;\n                            *0x5444f0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43ef3e;\n                            fcn.0040a2a0();\n                            uVar13 = *(*0x20 + -0x68);\n                            uVar7 = *(*0x20 + 8);\n                            arg4 = *(*0x20 + -100);\n                            goto code_r0x0043ef80;\n                        }\n                        unaff_RBX = uVar13;\n                        piVar15 = *0x5444c0;\n                        if (unaff_RBX <= *0x5444c0) {\n                            piVar15 = *0x544500;\n                            *0x5444b8 = unaff_RBX;\n                            uVar5 = *0x5444f0;\n                            piVar16 = unaff_RBX;\n                            if (unaff_RBX <= *0x544500) goto code_r0x0043ef32;\n                            goto code_r0x0043f479;\n                        }\n                        goto code_r0x0043f485;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar15 = *0x544460;\n                    piVar16 = unaff_RSI;\n                    if (unaff_RSI <= *0x544460) goto code_r0x0043ee4e;\n                }\n                else {\ncode_r0x0043ef80:\n                    while( true ) {\n                        piVar16 = uVar13;\n                        if (uVar7 <= uVar13) break;\n                        unaff_RSI = uVar13;\n                        piVar12 = *0x544458;\n                        piVar15 = piVar16;\n                        if (*0x544458 <= unaff_RSI) goto code_r0x0043f471;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x40) = unaff_RSI;\n                        iVar6 = (*0x544450)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb0) = 0x43efc7;\n                            iVar6 = fcn.0040c140();\n                            piVar16 = *(*0x20 + -0x58);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb0) = 0x43efe5;\n                        fcn.0043e660();\n                        piVar12 = *0x544458;\n                        piVar15 = *0x544450;\n                        if (*0x544458 <= *(*0x20 + -0x40)) goto code_r0x0043f46c;\n                        piVar15 = *0x544450 + *(*0x20 + -0x40);\n                        if (*0x598440 != '\\0') {\n                            *(*0x20 + -0x18) = piVar15;\n                            piVar16 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb0) = 0x43f02f;\n                            fcn.00403140();\n                            piVar15 = *(*0x20 + -0x18);\n                        }\n                        *piVar15 = *(*0x20 + -0x28);\n                        uVar13 = *(*0x20 + -0x58) + 1;\n                        uVar7 = *(*0x20 + 8);\n                        arg4 = *(*0x20 + -100);\n                        unaff_RBX = piVar16;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043f0f8:\n                        piVar15 = *(*0x20 + -0x20);\ncode_r0x0043f100:\n                        *(piVar15[6] + 0xa0) = 0;\n                        piVar16 = *0x544450;\n                        piVar12 = *0x544458;\n                        if (*0x544458 != NULL) {\n                            iVar6 = **0x544450;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb0) = 0x43f145;\n                            fcn.0043f4c0();\n                            if (*0x54a3d0 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x43f153;\n                                fcn.0044fd40();\n                            }\n                            goto code_r0x0043f153;\n                        }\n                    }\n                    else {\n                        if (uVar7 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043f0f8;\n                            if (*0x54a3d0 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb0) = 0x43f095;\n                                fcn.0044eb60(0);\n                                *(*0x20 + -0xb0) = 0x43f0ad;\n                                fcn.0044f9e0();\n                                arg4 = *(*0x20 + -100);\n                            }\n                            piVar15 = *(*0x20 + -0x20);\n                            *(*(piVar15[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043f100;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb0) = 0x43f0f6;\n                        fcn.00414460();\n                        piVar16 = unaff_RBX;\ncode_r0x0043f153:\n                        *0x598310 = 0;\n                        uVar14 = *(*0x20 + -0x68);\n                        uVar13 = *(*0x20 + 8);\n                        uVar18 = uVar13;\n                        while (piVar12 = *0x544458,  piVar15 = uVar14,  uVar13 < uVar14) {\n                            piVar16 = uVar13;\n                            unaff_RSI = *0x544458;\n                            if (*0x544458 <= piVar16) goto code_r0x0043f458;\n                            *(*0x20 + -0x5c) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43f17a;\n                            fcn.0043e840();\n                            uVar18 = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0x68);\n                            unaff_RSI = piVar12;\n                            uVar13 = *(*0x20 + -0x5c) + 1;\n                        }\n                        if (uVar18 == *0x544458) {\ncode_r0x0043f245:\n                            uVar9 = uVar18;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = 0;\n                            while( true ) {\n                                uVar18 = uVar18 - 1;\n                                piVar12 = uVar18;\n                                *(*0x20 + -0x30) = uVar7;\n                                if (uVar18 < 0) {\n                                    *0x544580 = uVar9;\n                                    *0x544590 = 0;\n                                    for (uVar13 = 1; uVar7 = *0x544588,  uVar11 = uVar9,  uVar14 = uVar13, \n                                        uVar13 <= uVar9; uVar13 = uVar13 + 1) {\n                                        while (uVar18 = uVar11,  uVar18 != 0) {\n                                            uVar11 = uVar14 % uVar11;\n                                            uVar14 = uVar18;\n                                        }\n                                        if (uVar14 == 1) {\n                                            uVar11 = *0x544590 + 1;\n                                            uVar10 = *0x544590;\n                                            uVar8 = *0x544588;\n                                            if (*0x544598 < uVar11) {\n                                                *(*0x20 + -0x54) = uVar13;\n                                                *(*0x20 + -0xb0) = 0x43f37e;\n                                                uVar9 = *0x544590;\n                                                uVar10 = *0x544588;\n                                                uVar8 = fcn.00444ac0(*0x544590);\n                                                uVar4 = uVar8;\n                                                *0x544598 = uVar9;\n                                                if (*0x598440 != 0) {\n                                                    *(*0x20 + -0xb0) = 0x43f3a5;\n                                                    uVar8 = fcn.0045cfe0(uVar9, uVar11, uVar10, arg4);\n                                                    uVar4 = *0x544588;\n                                                }\n                                                *0x544588 = uVar4;\n                                                uVar9 = *(*0x20 + 8);\n                                                uVar13 = *(*0x20 + -0x54);\n                                                uVar10 = uVar7;\n                                            }\n                                            *0x544590 = uVar10 + 1;\n                                            *(uVar8 + uVar10 * 4) = uVar13;\n                                        }\n                                    }\n                                    *0x598210 = uVar9;\n                                    return;\n                                }\n                                if (*0x544458 <= uVar18) break;\n                                uVar11 = (*0x544450)[uVar18];\n                                arg4 = uVar7;\n                                if (*(*(iVar6 + 0x30) + 0xa0) != uVar11) {\n                                    *(uVar11 + 4) = 0;\n                                    iVar3 = *0x544d20;\n                                    do {\n                                    } while (*(uVar11 + 0x5f4) != *(uVar11 + 0x5f4));\n                                    if ((*(uVar11 + 0x5f4) == *(uVar11 + 0x5f0)) && (*(uVar11 + 0xdf8) == 0)) {\n                                        *(*0x20 + -0x60) = uVar18;\n                                        *(*0x20 + -0xb0) = 0x43f2c5;\n                                        fcn.00441060();\n                                        uVar9 = *(*0x20 + 8);\n                                        uVar18 = *(*0x20 + -0x60);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        uVar7 = *(*0x20 + -0x30);\n                                        arg4 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x544d20 != 0) {\n                                            *0x544d20 = *(*0x544d20 + 0x130);\n                                            *0x544d28 = *0x544d28 + -1;\n                                        }\n                                        *(uVar11 + 0x38) = iVar3;\n                                        *(uVar11 + 8) = uVar7;\n                                        uVar7 = uVar11;\n                                        arg4 = uVar11;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb0) = 0x43f43a;\n                            fcn.0045d480(*0x544458);\ncode_r0x0043f43a:\n                            *(*0x20 + -0xb0) = 0x43f445;\n                            fcn.0045d500(piVar16, piVar12);\ncode_r0x0043f445:\n                            *(*0x20 + -0xb0) = 0x43f44d;\n                            fcn.0045d500(piVar16, piVar12);\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43f1cc;\n                            fcn.0040a080();\n                            piVar15 = *(*0x20 + 8);\n                            piVar12 = piVar15;\n                            piVar16 = *0x544460;\n                            if (piVar15 <= *0x544460) {\n                                piVar16 = *(*0x20 + -100);\n                                piVar12 = *0x5444c0;\n                                *0x544458 = piVar15;\n                                if (piVar16 <= *0x5444c0) {\n                                    piVar12 = *0x544500;\n                                    *0x5444b8 = piVar16;\n                                    if (piVar16 <= *0x544500) {\n                                        *(*0x20 + -0xb0) = 0x43f23e;\n                                        *0x5444f8 = piVar16;\n                                        fcn.0040a2a0();\n                                        uVar18 = *(*0x20 + 8);\n                                        goto code_r0x0043f245;\n                                    }\n                                    goto code_r0x0043f43a;\n                                }\n                                goto code_r0x0043f445;\n                            }\n                        }\n                        *(*0x20 + -0xb0) = 0x43f458;\n                        piVar15 = piVar16;\n                        fcn.0045d500(piVar12, piVar16);\ncode_r0x0043f458:\n                        *(*0x20 + -0xb0) = 0x43f465;\n                        piVar12 = unaff_RSI;\n                        fcn.0045d480(unaff_RSI);\n                    }\n                    *(*0x20 + -0xb0) = 0x43f46c;\n                    fcn.0045d480(piVar12);\ncode_r0x0043f46c:\n                    *(*0x20 + -0xb0) = 0x43f471;\n                    fcn.0045d480(piVar12);\n                    unaff_RBX = piVar16;\ncode_r0x0043f471:\n                    *(*0x20 + -0xb0) = 0x43f479;\n                    fcn.0045d480(piVar12);\ncode_r0x0043f479:\n                    *(*0x20 + -0xb0) = 0x43f485;\n                    fcn.0045d500(unaff_RBX, piVar15);\ncode_r0x0043f485:\n                    *(*0x20 + -0xb0) = 0x43f48d;\n                    fcn.0045d500(unaff_RBX, piVar15);\n                }\n                *(*0x20 + -0xb0) = 0x43f495;\n                fcn.0045d500(unaff_RSI, piVar15);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb0) = 0x43f4a6;\n            in_EAX = fcn.00432f60();\n        }\n        *(puVar17 + 8) = in_EAX;\n        *(puVar17 + -8) = 0x43f4b0;\n        fcn.0045ad80();\n        in_EAX = *(puVar17 + 8);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 4916
    },
    "0043f4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f4c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0043f520();\n    fcn.00414460();\n    if (*0x54a3d0 != '\\0') {\n        fcn.0044f980();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0043f520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f520(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00432f60();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434940();\n        fcn.00434760();\n        fcn.00432f60();\n    } while( true );\n}\n",
        "token_count": 286
    },
    "0043f640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f640(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x54a3d0 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43f69e;\n                        fcn.0044f9e0();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43f6dd;\n                fcn.004346e0();\n                *(*0x20 + -0x48) = 0x43f6ee;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x43f6f8;\n                fcn.00434f60();\n                *(*0x20 + -0x48) = 0x43f709;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x43f713;\n                fcn.00434f60();\n                *(*0x20 + -0x48) = 0x43f725;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x43f72f;\n                fcn.00434e40();\n                *(*0x20 + -0x48) = 0x43f745;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x43f74f;\n                fcn.00434ce0();\n                *(*0x20 + -0x48) = 0x43f754;\n                fcn.00434940();\n                *(*0x20 + -0x48) = 0x43f759;\n                fcn.00434760();\n                *(*0x20 + -0x48) = 0x43f76a;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x48) = 0x43f77b;\n            fcn.00432f60();\n        }\n        *(puVar4 + -8) = 0x43f785;\n        fcn.0045ad80();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 844
    },
    "0043f800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f800(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5981ce != '\\0') || (*0x5981cc != '\\0')) {\n                return;\n            }\n            if (*0x598228 != 0) {\n                return;\n            }\n            if ((*0x5981cd == '\\0') && (*0x5981c5 != '\\0')) {\n                *(*0x20 + -0x50) = 0x43f866;\n                *0x5982b8 = fcn.00438e00();\n                uVar5 = *0x5981f0 != 0;\n            }\n            else {\n                uVar5 = 0;\n            }\n            iVar1 = *0x544d2c;\n            uVar6 = *0x544d28;\n            iVar8 = *0x544d30 - *0x544d40;\n            uVar12 = *0x544d3c;\n            uVar7 = ((iVar8 - *0x544d28) - *0x544d2c) - *0x544d3c;\n            uVar9 = uVar7;\n            if (uVar5 < uVar7) {\n                return;\n            }\n            uVar5 = *0x544d28;\n            uVar11 = *0x544d3c;\n            if (-1 < uVar7) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x43fae0;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43f8ee;\n                fcn.00436380();\n                uVar11 = uVar12;\n                uVar5 = uVar6;\n                if (*(*0x20 + -0x28) != 0) {\n                    if (*0x5982c0 == 0) {\ncode_r0x0043f91e:\n                        uVar6 = *0x544458;\n                        iVar2 = 0;\n                        while( true ) {\n                            if (*0x544458 <= iVar2) {\n                                uVar4 = *(unaff_R14 + 0x30);\n                                *(uVar4 + 0xc4) = 0xffffffff;\n                                *(*0x20 + -0x50) = 0x43f97b;\n                                fcn.0040a2a0();\n                                uVar9 = 0x25;\n                                *(*0x20 + -0x50) = 0x43f98c;\n                                fcn.00432f60();\n                                goto code_r0x0043f98c;\n                            }\n                            if (0 < *(*(*0x544450 + iVar2 * 8) + 0x26e8)) break;\n                            iVar2 = iVar2 + 1;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43f909;\n                    iVar2 = fcn.0044e4c0();\n                    if (uVar9 == 0) goto code_r0x0043f91e;\n                    puVar3 = 0x544d50;\n                    *0x5982c0 = iVar2;\n                    while( true ) {\n                        uVar11 = uVar12;\n                        uVar4 = *puVar3;\n                        if (uVar4 == 0) break;\n                        if (uVar9 == uVar4) {\n                            *puVar3 = *(uVar9 + 8);\n                            break;\n                        }\ncode_r0x0043f98c:\n                        puVar3 = uVar4 + 8;\n                    }\n                    uVar12 = *0x544d20;\n                    if (*0x544d20 != 0) {\n                        uVar6 = *(*0x544d20 + 0x130);\n                        *0x544d28 = *0x544d28 - 1;\n                        *0x544d20 = uVar6;\n                    }\n                    uVar5 = uVar6;\n                    if (uVar12 != 0) {\n                        *(uVar12 + 0xa8) = uVar9;\n                        *(*0x20 + -0x50) = 0x43f9e5;\n                        fcn.0040a380();\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x43fa05;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x50) = 0x43fa13;\n                fcn.0040a2a0();\n                *(*0x20 + -0x50) = 0x43fa25;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*0x20 + -0x2c) = uVar5;\n            *(*0x20 + -0x30) = iVar1;\n            *(*0x20 + -0x34) = uVar11;\n            *(*0x20 + -0x50) = 0x43fa3c;\n            fcn.004346e0();\n            *(*0x20 + -0x50) = 0x43fa4d;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x43fa59;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x43fa6a;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x43fa76;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x43fa87;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x43fa94;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x43faa5;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x43fab1;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x43fab6;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x43fabb;\n            fcn.00434760();\n            *(*0x20 + -0x50) = 0x43facc;\n            fcn.00432f60();\n        }\n        *(puVar10 + -8) = 0x43fad2;\n        fcn.0045ad80();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1723
    },
    "004400a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004400a0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x544458; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x544450 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.00440380();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x5f4) != *(iVar2 + 0x5f4));\n                    if (*(iVar2 + 0x5f4) == *(iVar2 + 0x5f0)) {\n                        if (*(iVar2 + 0xdf8) == 0) {\n                            bVar6 = *0x544d5c + *0x544d58 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040a2a0();\n                        fcn.0043f7a0();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x54a3d0 != '\\0') {\n                                fcn.00450180();\n                                fcn.0044f9e0();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.00439840();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.0043f7a0();\n                        fcn.0040a080();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040a2a0();\n    return iVar4;\n}\n",
        "token_count": 762
    },
    "004402e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004402e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x544458,  iVar1 = *0x544450,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.00440380();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 224
    },
    "00440380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00440380(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x598658 == 0) {\n                *(in_RAX + 0x2708) = 1;\n                fcn.0042fc20();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 255
    },
    "00440420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440420(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack56 < *(unaff_R14 + 0x10) || &uStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ed60();\n    if (*0x598398 == 0) {\n        *0x598398 = iStack184;\n    }\n    fcn.0040a080();\n    iStack40 = *0x598398;\n    uStack48 = *0x544d58;\n    uStack56 = *0x544d5c;\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434de0(iStack184 - iStack40 >> 0x3f, (iStack184 - iStack40) / 1000000);\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434760();\n    if (in_AL != '\\0') {\n        uStack48 = *0x544e00;\n        iStack40 = *0x544d2c;\n        uStack56 = *0x544e10;\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434940();\n        fcn.00434760();\n    }\n    iVar3 = *0x544458;\n    iStack16 = *0x544450;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 0x5f0);\n        if (in_AL == '\\0') {\n            fcn.004346e0();\n            fcn.00434900();\n            fcn.00434760();\n            if (iVar4 == 0) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434760();\n            }\n            fcn.004346e0();\n            fcn.00434ce0(uVar1);\n            fcn.00434760();\n            if (iVar4 == *0x544458 + -1) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434760();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            uStack56 = *(iVar2 + 0x10);\n            iStack40 = *(iVar2 + 0xe08);\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434ce0(uVar1);\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434940();\n            fcn.00434760();\n        }\n    }\n    iVar4 = *0x543a98;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434fe0();\n            fcn.00434980();\n            fcn.00434fe0();\n            fcn.00434980();\n            fcn.00434fe0();\n            fcn.00434de0();\n            fcn.00434940();\n            fcn.00434760();\n            iVar4 = *(iStack32 + 0x128);\n        }\n        fcn.00436380();\n        fcn.0040a260();\n        return;\n    }\n    fcn.0040a260();\n    return;\n}\n",
        "token_count": 1331
    },
    "00440c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440c20(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar2 = *0x544d90;\n    uVar1 = in_AL ^ 1;\n    if (*0x544d78 != uVar1) {\n        *0x544d78 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040a2a0();\n        }\n        else {\n            *0x544d90 = 0;\n            if (*0x544d88 != 0) {\n                *(*0x544d88 + 0xa0) = 0;\n                if (*0x544d68 == 0) {\n                    *0x544d60 = *0x544d80;\n                }\n                else {\n                    *(*0x544d68 + 0xa0) = *0x544d80;\n                }\n                *0x544d68 = *0x544d88;\n            }\n            *0x544d70 = *0x544d70 + iVar2;\n            *0x544d80 = in_XMM15;\n            fcn.0040a2a0();\n            while ((iVar2 != 0 && (*0x544d58 != 0))) {\n                fcn.00439580();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 401
    },
    "00440d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00440d60(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x544d78 != '\\0') {\n        uVar1 = fcn.00453da0();\n        return uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 115
    },
    "004415a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004415a0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(in_RAX + 0x5f0);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x5f4); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x5f8 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x5f4) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.0040a080();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x544d60;\n        iVar3 = *0x544d68;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x544d68 != 0)) {\n            *(*0x544d68 + 0xa0) = uVar4;\n            uVar5 = *0x544d60;\n        }\n        *0x544d68 = iVar3;\n        *0x544d60 = uVar5;\n        *0x544d70 = *0x544d70 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040a2a0();\n    }\n    return;\n}\n",
        "token_count": 561
    },
    "004418c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004418c0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 0x5f0);\n            uVar6 = *(in_RAX + 0x5f4) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x5f8 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 0x5f0)) {\n                    *(in_RAX + 0x5f0) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0xdf8),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.0045ac40();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 580
    },
    "00441a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00441a60(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x5f4);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x441a9d;\n            iVar5 = fcn.004418c0(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x5f8 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 0x5f0)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x5f4) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x441b1a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x441b2e;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "00441b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441b60(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    ulong uVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *piVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar6 = 0;\n                while (uVar6 <= in_RAX[1] && in_RAX[1] != uVar6) {\n                    *(*0x20 + -0xf0) = uVar6;\n                    *(*0x20 + -0x138) = 0x441bd1;\n                    fcn.00441b60();\n                    in_RAX = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0xf0) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x5984a0 == '\\0') {\n                    uVar4 = 0;\n                    uVar5 = 0;\n                    uVar8 = 0;\n                }\n                else {\n                    *(*0x20 + -0x138) = 0x441c05;\n                    fcn.0045ed60();\n                    uVar4 = *(*0x20 + -0x130);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *0x5984b8;\n                    uVar8 = *0x5984b0;\n                }\n                *(*0x20 + -0xe8) = uVar5;\n                *(*0x20 + -0xe0) = uVar8;\n                *(*0x20 + -0x108) = uVar4;\n                iVar1 = in_RAX[1];\n                *(*0x20 + -0xc0) = iVar1;\n                piVar10 = in_RAX + iVar1 + 3;\n                *(*0x20 + -0x20) = piVar10;\n                uVar6 = 0;\n                while (uVar6 <= in_RAX[2] && in_RAX[2] != uVar6) {\n                    *(*0x20 + -0xf8) = uVar6;\n                    pcVar2 = piVar10[uVar6];\n                    *(*0x20 + -0x138) = 0x441c8a;\n                    (*pcVar2)(uVar5, piVar10 + uVar6);\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8);\n                    uVar4 = *(*0x20 + -0x108);\n                    piVar10 = *(*0x20 + -0x20);\n                    uVar6 = *(*0x20 + -0xf8) + 1;\n                }\n                if (*0x5984a0 == '\\0') goto code_r0x00441e82;\n                *(*0x20 + -0x138) = 0x441cd0;\n                fcn.0045ed60(uVar5, uVar4);\n                uVar11 = 0;\n                uVar12 = 0;\n                uVar13 = 0;\n                uVar14 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -200) = *0x5984b0;\n                *(*0x20 + -0xd0) = *0x5984b8;\n                *(*0x20 + -0x110) = *(*0x20 + -0x130);\n                uVar5 = *(*(*0x20 + 8) + 0x18 + *(*0x20 + -0xc0) * 8);\n                *(*0x20 + -0x138) = 0x441d29;\n                fcn.0044abe0();\n                *(*0x20 + -0x138) = 0x441d2e;\n                uVar4 = fcn.0044b380();\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x100) = uVar5;\n                *(*0x20 + -0xb8) = 0;\n                *(*0x20 + -0xb0) = CONCAT412(uVar14, CONCAT48(uVar13, CONCAT44(uVar12, uVar11)));\n                *(*0x20 + -0x138) = 0x441d55;\n                fcn.004346e0();\n                *(*0x20 + -0x138) = 0x441d66;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441d78;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441d89;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441d8e;\n                fcn.00434760();\n                *(*0x20 + -0x138) = 0x441daf;\n                uVar5 = fcn.004194a0(0x18);\n                *(*0x20 + -0x138) = 0x441dc5;\n                uVar4 = fcn.00448800(0x18);\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0xd8) = uVar5;\n                *(*0x20 + -0x138) = 0x441dd7;\n                fcn.004346e0();\n                *(*0x20 + -0x138) = 0x441de9;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441dfa;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441dff;\n                fcn.00434760();\n                *(*0x20 + -0x138) = 0x441e1e;\n                uVar5 = fcn.004194a0(0x18);\n                *(*0x20 + -0x138) = 0x441e31;\n                uVar4 = fcn.00448800(0x18);\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0xd8) = uVar5;\n                *(*0x20 + -0x138) = 0x441e45;\n                fcn.004346e0();\n                *(*0x20 + -0x138) = 0x441e57;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441e68;\n                fcn.00434fe0();\n                *(*0x20 + -0x138) = 0x441e6d;\n                fcn.00434760();\n                uVar6 = *(*0x20 + -0xd0) - *(*0x20 + -0xe8);\n                uVar7 = 0x17;\n                while (cVar3 = uVar6,  9 < uVar6) {\n                    uVar6 = uVar6 / 10;\n                    if (0x17 < uVar7) goto code_r0x00442065;\n                    *(*0x20 + (uVar7 - 0xb8)) = cVar3 + uVar6 * -10 + '0';\n                    uVar7 = uVar7 - 1;\n                }\n                if (uVar7 < 0x18) {\n                    *(*0x20 + (uVar7 - 0xb8)) = cVar3 + '0';\n                    *(*0x20 + -0x138) = 0x441f18;\n                    uVar5 = fcn.00448800(-(uVar7 - 0x18));\n                    *(*0x20 + -0x10) = uVar5;\n                    *(*0x20 + -0xd8) = *0x20 + ((uVar7 & uVar7 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x138) = 0x441f2a;\n                    fcn.004346e0();\n                    *(*0x20 + -0x138) = 0x441f3c;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x138) = 0x441f4d;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x138) = 0x441f52;\n                    fcn.00434760();\n                    uVar7 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                    uVar6 = 0x17;\n                    while (cVar3 = uVar7,  9 < uVar7) {\n                        uVar7 = uVar7 / 10;\n                        if (0x17 < uVar6) goto code_r0x00442046;\n                        *(*0x20 + (uVar6 - 0xb8)) = cVar3 + uVar7 * -10 + '0';\n                        uVar6 = uVar6 - 1;\n                    }\n                    if (uVar6 < 0x18) {\n                        *(*0x20 + (uVar6 - 0xb8)) = cVar3 + '0';\n                        *(*0x20 + -0x138) = 0x441fe5;\n                        uVar5 = fcn.00448800(-(uVar6 - 0x18));\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0xd8) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x138) = 0x441ff7;\n                        fcn.004346e0();\n                        *(*0x20 + -0x138) = 0x442009;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x138) = 0x44201a;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x138) = 0x44201f;\n                        fcn.00434760();\n                        *(*0x20 + -0x138) = 0x442025;\n                        fcn.004346e0();\n                        *(*0x20 + -0x138) = 0x44202a;\n                        fcn.00434940();\n                        *(*0x20 + -0x138) = 0x44202f;\n                        fcn.00434760();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00441e82:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x138) = 0x442046;\n                    fcn.0045d480(0x18);\ncode_r0x00442046:\n                    *(*0x20 + -0x138) = 0x442053;\n                    fcn.0045d480(0x18);\n                }\n                *(*0x20 + -0x138) = 0x442065;\n                fcn.0045d480(0x18);\ncode_r0x00442065:\n                *(*0x20 + -0x138) = 0x442072;\n                fcn.0045d480(0x18);\n            }\n            *(*0x20 + -0x138) = 0x442085;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x442090;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2879
    },
    "004420a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004420a0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = unaff_RBX;\n    *0x5981e4 = in_EAX;\n    if (*0x598440 != 0) {\n        fcn.0045d120(arg1, arg2, arg3, arg4);\n        uVar1 = *0x543aa0;\n    }\n    *0x543aa0 = uVar1;\n    return;\n}\n",
        "token_count": 188
    },
    "00442100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044223a)\n// WARNING: Removing unreachable block (ram,0x0044224b)\n// WARNING: Removing unreachable block (ram,0x0044225c)\n// WARNING: Removing unreachable block (ram,0x0044226d)\n// WARNING: Removing unreachable block (ram,0x0044227e)\n// WARNING: Removing unreachable block (ram,0x0044228f)\n// WARNING: Removing unreachable block (ram,0x004422a5)\n// WARNING: Removing unreachable block (ram,0x004422b6)\n// WARNING: Removing unreachable block (ram,0x004422c7)\n// WARNING: Removing unreachable block (ram,0x004422d8)\n\nulong fcn.00442100(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x5983b0 = 0x2a;\n    *0x5983b8 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 278
    },
    "00442ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442ce0(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00442d56;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x442d30;\n                    fcn.0040a080();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x442d4a;\n                        fcn.0040a380();\n                    }\n                    *(*0x20 + -0x20) = 0x442d56;\n                    fcn.0040a2a0();\n                }\ncode_r0x00442d56:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x442d9b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x442da6;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 637
    },
    "00442dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442dc0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045ce80(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.004359a0();\n    return;\n}\n",
        "token_count": 155
    },
    "00442e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00442e60(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x44315c;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x443175;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x39) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x442ed2;\n    iVar5 = fcn.00435a80();\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x28) = 0;\n    *(iVar5 + 0x20) = 0;\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x598288 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x442f45;\n        fcn.0045ce80(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x598320 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x442f9f;\n            fcn.0045ce80(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x546500;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x546500;\n        *(*0x20 + -0x68) = 0x443005;\n        fcn.0040a080();\n        piVar1 = *(*0x20 + -0x30) + 0x546510;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            if (iVar2 == 0) goto code_r0x0044302f;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\ncode_r0x0044302f:\n        if (iVar2 != 0) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x4430e6;\n            fcn.0040a2a0(iVar2);\ncode_r0x004430e6:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x443110;\n                fcn.00429de0(iVar5 - *(*0x20 + -0x38), *(*0x20 + 0x20));\n            }\n            *(*0x20 + -0x68) = 0x44311a;\n            uVar6 = fcn.00435d80();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x44304c;\n        fcn.004433c0(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x443073;\n        fcn.00435860(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x0044309e;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x0044309e:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x004430e6;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1795
    },
    "004431a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004431a0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uchar unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar3 = in_RAX >> 3;\n            uVar5 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3) >> 0x40, 0);\n            iVar7 = (uVar3 + ((uVar5 + uVar3 >> 1 | CARRY8(uVar5, uVar3) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar7 + 0x546510) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar7 + 0x546510;\n            *(*0x20 + -0x30) = iVar7;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar7 + 0x546500;\n            *(*0x20 + -0x50) = 0x443234;\n            fcn.0040a080();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x4432e6;\n                uVar4 = fcn.0040a2a0();\n                return uVar4;\n            }\n            uVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x443265;\n            iVar7 = fcn.00443760(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x38) = uVar4;\n            if (iVar7 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x44328e;\n            fcn.0040a2a0();\n            iVar7 = *(*0x20 + -0x28);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar7 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x50) = 0x4432bb;\n                fcn.00457ac0();\n                iVar7 = *(*0x20 + -0x28);\n            }\n            if (*(iVar7 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x443385;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x443399;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + 0x10) != '\\0') {\n        piVar2 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *piVar2;\n            if (iVar1 == 0) goto code_r0x00443360;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\ncode_r0x00443360:\n        if (iVar1 != 0) {\n            *(iVar7 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x443312;\n    uVar4 = fcn.00442dc0(*(*0x20 + 0x18));\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x443337;\n        uVar4 = fcn.0045abc0();\n    }\n    return uVar4;\n}\n",
        "token_count": 1267
    },
    "004433c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004433c0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    uint64_t uVar5;\n    int64_t **arg3;\n    int64_t *arg4;\n    int64_t *noname_1;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004433c0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = arg1 + 1;\n        if (*0x598440 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x20) = 0x44340a;\n            fcn.0045d180(arg1, arg2, uVar5);\n            *(*0x20 + -0x20) = 0x443416;\n            fcn.0045d120(arg1, arg2, uVar5, arg1 + 3);\n            *(*0x20 + -0x20) = 0x443425;\n            fcn.0045d180(arg1, arg2, uVar5);\n            *(*0x20 + -0x20) = 0x44342d;\n            in_RAX = fcn.0045d180(arg1, arg2, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar2 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar2,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x598440 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443617;\n                            fcn.0045d0e0();\n                        }\n                    }\n                    else if (*0x598440 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4435fd;\n                        fcn.0045d0e0();\n                    }\n                    if (*0x598440 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443639;\n                        fcn.0045d0e0();\n                        *(*0x20 + -0x20) = 0x443645;\n                        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x598440 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443491;\n                        fcn.0045d0e0();\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x598440 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4434bc;\n                        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                    }\n                    iVar3 = arg4[2];\n                    if (*0x598440 == 0) {\n                        arg1[2] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4434d7;\n                        iVar3 = fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                    }\n                    if (*0x598440 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4434f2;\n                        iVar3 = fcn.0045d120(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar3 != 0) {\n                        if (*0x598440 == 0) {\n                            *(iVar3 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443511;\n                            fcn.0045d0e0();\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x598440 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443532;\n                            fcn.0045d0e0();\n                        }\n                    }\n                    if (*0x598440 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x44354b;\n                        fcn.0045d180(arg1, arg2, arg3);\n                    }\n                    iVar3 = arg4[9];\n                    if (*0x598440 == 0) {\n                        arg1[9] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x443567;\n                        iVar3 = fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                    }\n                    if (iVar3 == 0) {\n                        if (*0x598440 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x443585;\n                            fcn.0045d180(arg1, arg2, arg3);\n                        }\n                    }\n                    if (*0x598440 == 0) {\n                        arg4[7] = 0;\n                        arg4[2] = 0;\n                        arg4[1] = 0;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4435be;\n                        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x4435c7;\n                        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x4435d0;\n                        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                        *(*0x20 + -0x20) = 0x4435d9;\n                        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar2 = *arg3;\n        }\n        iVar3 = *(unaff_R14 + 0x30);\n        uVar6 = *(iVar3 + 0xf0);\n        uVar1 = *(iVar3 + 0xf4);\n        *(iVar3 + 0xf0) = uVar1;\n        uVar6 = uVar6 ^ uVar6 << 0x11;\n        uVar5 = uVar1;\n        uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n        *(iVar3 + 0xf4) = uVar6;\n        *(arg1 + 6) = uVar1 + uVar6 | 1;\n        if (*0x598440 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x20) = 0x4436b4;\n            unaff_RDI = arg3;\n            fcn.0045d100(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x20) = 0x4436bc;\n            arg3 = unaff_RDI;\n            in_RAX = fcn.0045d0e0();\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        do {\n            iVar3 = arg1[7];\n            if ((iVar3 == 0) || (uVar6 = *(iVar3 + 0x30),  uVar6 <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar3 + 0x10) == arg1) {\n                *(*0x20 + -0x20) = 0x4436fd;\n                fcn.00443be0(arg1, uVar6, arg3, uVar5);\n            }\n            else {\n                if (*(iVar3 + 8) != arg1) goto code_r0x00443709;\n                *(*0x20 + -0x20) = 0x4436f6;\n                fcn.00443aa0(arg1, uVar6, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x0044371d;\ncode_r0x00443709:\n    unaff_RBX = 0x4c7e58;\n    *(*0x20 + -0x20) = 0x44371c;\n    in_RAX = fcn.004327c0();\ncode_r0x0044371d:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    puVar4[0x20] = unaff_RDI;\n    *(puVar4 + -8) = 0x443736;\n    fcn.0045ad80();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = puVar4[0x20];\n    *0x20 = puVar4;\n    goto code_r0x004433c0;\n}\n",
        "token_count": 2559
    },
    "00443760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00443760(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    int64_t noname_0;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar4 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar4 = noname_0 + 0x10;\n        }\n        else {\n            piVar4 = noname_0 + 8;\n        }\n        noname_0 = *piVar4;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045ce80(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x004439e7;\n                fcn.00443aa0(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x004439e7:\n            fcn.00443be0(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x598440 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045d100(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x598440 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045d100(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x598440 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045d100(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x598440 == 0) {\n            *piVar4 = iVar3;\n        }\n        else {\n            fcn.0045d140(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        if (*0x598440 == 0) {\n            *(iVar3 + 0x38) = *(noname_0 + 0x38);\n        }\n        else {\n            fcn.0045d100(noname_0, *(noname_0 + 0x38), param_3, param_4);\n        }\n        iVar5 = *(noname_0 + 0x10);\n        if (*0x598440 == 0) {\n            *(iVar3 + 0x10) = iVar5;\n        }\n        else {\n            fcn.0045d100(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x598440 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045d140(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        iVar5 = *(noname_0 + 8);\n        if (*0x598440 == 0) {\n            *(iVar3 + 8) = iVar5;\n        }\n        else {\n            fcn.0045d100(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x598440 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045d140(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x598440 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045d100(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x598440 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045d100(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x598440 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045d100(noname_0, 0, param_3, param_4);\n            fcn.0045d100(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x598440 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045d100(noname_0, 0, param_3, param_4);\n        fcn.0045d140(noname_0, uVar6, param_3, param_4);\n        fcn.0045d100(noname_0, uVar6, param_3, param_4);\n        fcn.0045d100(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1842
    },
    "00443aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443aa0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 8);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 0x10);\n            if (*0x598440 == 0) {\n                *(arg1 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 8) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443ae5;\n                fcn.0045d120(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x443aee;\n                fcn.0045d0e0();\n                *(*0x20 + -0x20) = 0x443af7;\n                in_RAX = fcn.0045d140(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x598440 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443b14;\n                    in_RAX = fcn.0045d120(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x598440 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443b2c;\n                in_RAX = fcn.0045d100(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x598440 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443b8d;\n                fcn.0045d0e0();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x598440 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443b51;\n                fcn.0045d0e0();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x598440 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443b71;\n                    fcn.0045d0e0();\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x443ba8;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x443bb8;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 962
    },
    "00443be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443be0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 0x10);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 8);\n            if (*0x598440 == 0) {\n                *(arg1 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 0x10) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443c25;\n                fcn.0045d120(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x443c2e;\n                fcn.0045d0e0();\n                *(*0x20 + -0x20) = 0x443c37;\n                in_RAX = fcn.0045d140(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x598440 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443c54;\n                    in_RAX = fcn.0045d120(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x598440 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x443c6c;\n                in_RAX = fcn.0045d100(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x598440 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443ccd;\n                fcn.0045d0e0();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x598440 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x443c91;\n                fcn.0045d0e0();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x598440 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x443cb1;\n                    fcn.0045d0e0();\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x443ce8;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x443cf8;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 961
    },
    "00443dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443dc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f6a0();\n    if (*0x543a20 == 0) {\n        fcn.0042f620();\n    }\n    else {\n        fcn.0042f6a0();\n        fcn.0042f6a0();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00443f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00443f00(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x531a10) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x531a18) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.004338e0(),  cVar2 != '\\0')) {\n            fcn.004441e0(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != 0) && (CONCAT71(*0x4b0181, *0x4b0180) != *(unaff_RBX + 0xf8))) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = CONCAT71(*0x4b0419, *0x4b0418);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 618
    },
    "00444180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444180(ulong arg1)\n\n{\n    if ((*0x5981ce == '\\0') && (*0x5981cc == '\\0')) {\n        if (*0x5981d1 != '\\0') {\n            return 0;\n        }\n        fcn.004441e0(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "004441e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004441e0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    ulong *unaff_R14;\n    ulong *puVar3;\n    \n    puVar3 = unaff_R14;\n    if (*0x598228 != 0) {\n        fcn.0042e320();\n    }\n    *0x598228 = 1;\n    *puVar3 = 0;\n    puVar3[2] = 0x13a0;\n    puVar3[3] = 0x13a0;\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434900();\n    fcn.00434e40();\n    fcn.00434900();\n    fcn.00434e40();\n    fcn.00434900();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    piVar1 = puVar3[6];\n    if (((piVar1[0x27] != 0) && (0 < *(piVar1 + 0x21))) && (*piVar1 == arg1)) {\n        if (*0x5981cd != '\\0') {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434760();\n        }\n        arg1 = *(puVar3[6] + 0x138);\n    }\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    *(puVar3[6] + 0xc4) = 1;\n    *(puVar3[6] + 0x98) = arg1;\n    uVar2 = *0x52c188 >> 2;\n    if (*(unaff_R14[6] + 0xf9) != 0) {\n        uVar2 = *(unaff_R14[6] + 0xf9);\n    }\n    if (uVar2 != 0) {\n        fcn.00452a00(0);\n        fcn.00453960();\n        fcn.00406680();\n    }\n    fcn.0042e320();\n    return;\n}\n",
        "token_count": 549
    },
    "00444880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444880(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x004448ea;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x004448ea:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x444909;\n                    iVar3 = fcn.0040b760(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44492c;\n                        fcn.0045db00(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x444945;\n                    iVar3 = fcn.0040b760(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x598440 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x444967;\n                        fcn.00411b20(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x444985;\n                fcn.0045ddc0(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x4c7e68;\n            *(*0x20 + -0x48) = 0x4449a8;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4449c5;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1011
    },
    "00444ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00444ac0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x4c7e88;\n            *(*0x20 + -0x68) = 0x445145;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x445165;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x5983d8;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0x3ff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = (unaff_RDI >> 2) + unaff_RDI) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x00444b2e;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x00444b2e:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00444bf9:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x00444f29;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xa5ffc);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x52f2e0);\n                        goto code_r0x00444bf9;\n                    }\n                    goto code_r0x004450b9;\n                }\n                goto code_r0x004450c6;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x52f1a0;\n                piVar6 = *(piVar6 + 0xa5e34);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x52f2e0);\n                    goto code_r0x00444bf9;\n                }\n                goto code_r0x004450d3;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00444cd4:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x00444f29;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xa5ffc);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x52f2e0);\n                            goto code_r0x00444cd4;\n                        }\n                        goto code_r0x00445085;\n                    }\n                    goto code_r0x00445092;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x52f1a0;\n                    piVar10 = *(piVar10 + 0xa5e34);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x52f2e0);\n                        goto code_r0x00444cd4;\n                    }\n                    goto code_r0x0044509f;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00444df4:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x00444f29:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x444f6c;\n                                uVar4 = fcn.0040b760(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x444f89;\n                                fcn.0045db00();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x444faa;\n                                uVar4 = fcn.0040b760(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x598440 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x444fdb;\n                                    fcn.00411b20((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x444ff4;\n                            fcn.0045ddc0(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x4c7e88;\n                        *(*0x20 + -0x68) = 0x445025;\n                        fcn.004327c0();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x00445025:\n                        *(*0x20 + -0x68) = 0x44502f;\n                        fcn.0045d480(0x44);\ncode_r0x0044502f:\n                        *(*0x20 + -0x68) = 0x445039;\n                        fcn.0045d4a0(0xf9);\ncode_r0x00445039:\n                        *(*0x20 + -0x68) = 0x445045;\n                        fcn.0045d480(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x00445045;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xa5ffc);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x52f2e0);\n                                goto code_r0x00444df4;\n                            }\n                            goto code_r0x0044504f;\n                        }\n                        goto code_r0x0044505c;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xa5e34);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x52f2e0);\n                            goto code_r0x00444df4;\n                        }\n                        goto code_r0x00445069;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00444ef5:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x00444f29;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x52f2e0);\n                                goto code_r0x00444ef5;\n                            }\n                            goto code_r0x00445025;\n                        }\n                        goto code_r0x0044502f;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x52f1a0);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x52f2e0);\n                            goto code_r0x00444ef5;\n                        }\n                        goto code_r0x00445039;\n                    }\ncode_r0x00445045:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x44504f;\n                    fcn.0045d4a0(0x81);\ncode_r0x0044504f:\n                    *(*0x20 + -0x68) = 0x44505c;\n                    fcn.0045d480(0x44);\ncode_r0x0044505c:\n                    *(*0x20 + -0x68) = 0x445069;\n                    fcn.0045d4a0(0xf9);\ncode_r0x00445069:\n                    *(*0x20 + -0x68) = 0x445076;\n                    fcn.0045d480(0x44);\n                }\n                *(*0x20 + -0x68) = 0x445085;\n                fcn.0045d4a0(0x81);\n                piVar8 = piVar7;\ncode_r0x00445085:\n                *(*0x20 + -0x68) = 0x445092;\n                fcn.0045d480(0x44);\ncode_r0x00445092:\n                *(*0x20 + -0x68) = 0x44509f;\n                fcn.0045d4a0(0xf9);\ncode_r0x0044509f:\n                *(*0x20 + -0x68) = 0x4450ac;\n                fcn.0045d480(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x4450b9;\n            fcn.0045d4a0(0x81);\n            piVar8 = piVar10;\ncode_r0x004450b9:\n            *(*0x20 + -0x68) = 0x4450c6;\n            fcn.0045d480(0x44);\ncode_r0x004450c6:\n            *(*0x20 + -0x68) = 0x4450d3;\n            fcn.0045d4a0(0xf9);\ncode_r0x004450d3:\n            *(*0x20 + -0x68) = 0x4450e5;\n            fcn.0045d480(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x4450f2;\n        in_RAX = fcn.0045d4a0(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4216
    },
    "004451a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004451a0(void)\n\n{\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 2; iVar1 = iVar1 + 1) {\n        *(iVar1 * 0x40 + 0x598788) = 0;\n        *(iVar1 * 0x40 + 0x598790) = 0;\n    }\n    for (iVar1 = 0; iVar1 < 0x23; iVar1 = iVar1 + 1) {\n        *(iVar1 * 0x10 + 0x599248) = 0;\n        *(iVar1 * 0x10 + 0x599250) = 0;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00445200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00445200(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x598788);\n                if (iVar1 != 0) goto code_r0x0044529e;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x598788;\n                *(*0x20 + -0x40) = 0x445266;\n                iVar1 = fcn.00423740();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x44532f;\n                                    fcn.00424a80();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x0044529e:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x4452d5;\n                                            fcn.00424900();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x4452f8;\n                                    iVar1 = fcn.00432f60();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x44534f;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x40) = 0x445365;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x40) = 0x445376;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x40) = 0x445385;\n            in_AL = fcn.0045d480(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x44538f;\n        fcn.0045ad80();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 891
    },
    "004453a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004453a0(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x56a638) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x445456;\n                            fcn.00424a80(0x598780);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00445465;\n                        }\n                    }\n                    else {\ncode_r0x00445465:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x59820c != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x4454b3;\n                            fcn.00424900(0x598780);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x4454d1;\n                            fcn.004244e0(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x4454e5;\n                        fcn.0045d480(2);\n                    }\n                    *(*0x20 + -0x38) = 0x4454ef;\n                    fcn.0045d480(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x445505;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x38) = 0x445512;\n            in_RAX = fcn.0045d4a0(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x445525;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 902
    },
    "00445540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445540(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x598780;\n                *(*0x20 + -0x40) = 0x445591;\n                fcn.0040a080();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x4455a5;\n                    puVar3 = fcn.00445200();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x4455f4;\n                fcn.0040a2a0();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x445635;\n            in_RAX = fcn.0045d480(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445645;\n        fcn.0045f460();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "00445660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445660(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x598780;\n                *(*0x20 + -0x40) = 0x4456d4;\n                fcn.0040a080();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x4456f7;\n                    fcn.004453a0();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x44572f;\n                fcn.0040a2a0();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x44576a;\n            in_RAX = fcn.0045d480(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445779;\n        fcn.0045f460();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 778
    },
    "004457a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004457a0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.0040a080();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.004453a0();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.0040a2a0();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "004458a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004458a0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x598628 != 0) {\n                        uVar6 = -*0x598358;\n                        piVar8 = (*0x598358 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44592c;\n                        puVar2 = fcn.00415260();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x445955;\n                        fcn.00432f60();\n                        goto code_r0x00445955;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00445955:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x445985;\n                        fcn.0040a080();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x599248);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x4459b9;\n                                fcn.00424900();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x4459d1;\n                            fcn.0040a2a0();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x4459f1;\n                                iVar3 = fcn.00423740(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x445a2e;\n                                    fcn.00432f60();\n                                    goto code_r0x00445a2e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x00445a2e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x445a38;\n                        uVar1 = fcn.0045d480(0x23);\n                        goto code_r0x00445a38;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00445a38:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x598780;\n                            *(*0x20 + -0x78) = 0x445a87;\n                            fcn.0040a080();\n                            *(*0x20 + -0x78) = 0x445a91;\n                            uVar4 = fcn.00445200();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x445aa5;\n                            fcn.0040a2a0();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x445ae5;\n                                fcn.00445540();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x445b32;\n                        fcn.0045d480(2);\n                    }\n                    *(*0x20 + -0x78) = 0x445b3c;\n                    fcn.0045d480(2);\n                }\n                *(*0x20 + -0x78) = 0x445b4d;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x78) = 0x445b5e;\n            uVar1 = fcn.00432f60();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x445b68;\n        fcn.0045f460();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1833
    },
    "00445b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445b80(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX - in_RAX;\n            if ((uVar5 & uVar5 - 1) == 0) {\n                if (unaff_RBX <= uVar5 + in_RAX) {\n                    if (*0x598628 != 0) {\n                        *(*0x20 + -0x80) = 0x445c73;\n                        fcn.004152e0();\n                        return;\n                    }\n                    puVar4 = in_RAX;\n                    uVar6 = uVar5;\n                    if (0x7fff < uVar5) {\n                        uVar5 = in_RAX + 0x100000000000 >> 0x2a;\n                        if (uVar5 < 0x40) {\n                            iVar8 = *(*(*(uVar5 * 8 + 0x56a638) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) +\n                                      0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                            puVar4 = in_RAX >> 0xd & 0x100 | *(iVar8 + 99);\n                            if (*(iVar8 + 99) == 2) {\n                                if (*0x59820c == 0) {\n                                    *(*0x20 + -0x80) = 0x445c6b;\n                                    fcn.004244e0(1);\n                                    return;\n                                }\n                                iVar9 = 0;\n                                for (uVar5 = *(iVar8 + 0x20); 1 < uVar5; uVar5 = uVar5 >> 1) {\n                                    iVar9 = iVar9 + 1;\n                                }\n                                *(*0x20 + -0x58) = iVar8;\n                                *(*0x20 + -0x48) = iVar9;\n                                *(*0x20 + -0x80) = 0x445cab;\n                                fcn.0040a080();\n                                if (*(*0x20 + -0x48) < 0x23) {\n                                    *(*0x20 + -0x80) = 0x445cce;\n                                    fcn.00424a80(0x599248);\n                                    *(*0x20 + -0x80) = 0x445cdc;\n                                    fcn.0040a2a0();\n                                    return;\n                                }\n                                *(*0x20 + -0x80) = 0x445ce8;\n                                in_RAX = fcn.0045d480(0x23);\n                            }\n                            *(*0x20 + -0x20) = in_RAX;\n                            *(*0x20 + -0x50) = *(iVar8 + 0x18);\n                            *(*0x20 + -0x80) = 0x445cfb;\n                            fcn.004346e0();\n                            *(*0x20 + -0x80) = 0x445d05;\n                            fcn.00434e40();\n                            *(*0x20 + -0x80) = 0x445d0a;\n                            fcn.00434900();\n                            *(*0x20 + -0x80) = 0x445d14;\n                            fcn.00434f60();\n                            *(*0x20 + -0x80) = 0x445d19;\n                            fcn.00434940();\n                            *(*0x20 + -0x80) = 0x445d1e;\n                            fcn.00434760();\n                            uVar6 = 0xe;\n                            *(*0x20 + -0x80) = 0x445d2f;\n                            fcn.00432f60();\n                        }\n                        iVar2 = 0x40;\n                        *(*0x20 + -0x80) = 0x445d3c;\n                        uVar5 = fcn.0045d4a0(0x40);\n                        goto code_r0x00445d3c;\n                    }\n                    *(*0x20 + -0x10) = unaff_R14;\n                    uVar3 = 0;\n                    for (; iVar2 = uVar3,  0x2000 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00445d3c:\n                        uVar3 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x28) = puVar4;\n                    iVar8 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                    if ((iVar8 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                        if ((uVar3 & 0xff) < 2) {\n                            *(*0x20 + -0x59) = uVar3;\n                            *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x598780;\n                            *(*0x20 + -0x80) = 0x445d99;\n                            fcn.0040a080();\n                            *(*0x20 + -0x80) = 0x445da8;\n                            fcn.004453a0();\n                            *(*0x20 + -0x80) = 0x445db4;\n                            fcn.0040a2a0();\n                            return;\n                        }\n                    }\n                    else {\n                        iVar8 = *(iVar8 + 0x40);\n                        if ((uVar3 & 0xff) < 2) {\n                            iVar9 = (uVar3 & 0xff) * 0x10;\n                            if (0x7fff < *(iVar8 + 0x470 + iVar9)) {\n                                *(*0x20 + -0x30) = uVar5;\n                                *(*0x20 + -0x40) = iVar8;\n                                *(*0x20 + -0x38) = iVar9;\n                                *(*0x20 + -0x80) = 0x445df6;\n                                fcn.00445660();\n                                uVar5 = *(*0x20 + -0x30);\n                                puVar4 = *(*0x20 + -0x28);\n                                iVar8 = *(*0x20 + -0x40);\n                                iVar9 = *(*0x20 + -0x38);\n                            }\n                            *puVar4 = *(iVar8 + 0x468 + iVar9);\n                            *(iVar8 + 0x468 + iVar9) = puVar4;\n                            piVar1 = iVar8 + 0x470 + iVar9;\n                            *piVar1 = *piVar1 + uVar5;\n                            return;\n                        }\n                        *(*0x20 + -0x80) = 0x445e3a;\n                        fcn.0045d480(2);\n                    }\n                    *(*0x20 + -0x80) = 0x445e45;\n                    fcn.0045d480(2);\n                }\n                *(*0x20 + -0x80) = 0x445e56;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x445e67;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x445e77;\n        fcn.0045f460();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1916
    },
    "00445ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445ea0(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00446071:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x44608f;\n        fcn.0045ad80();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x598640 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x445ff0;\n                            uVar9 = fcn.0044b2c0();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x445fff;\n                            fcn.004346e0();\n                            *(*0x20 + -0x68) = 0x446010;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x68) = 0x44601f;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x68) = 0x446030;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x68) = 0x44603a;\n                            fcn.00434f60();\n                            *(*0x20 + -0x68) = 0x44604b;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x68) = 0x446055;\n                            fcn.00434e40();\n                            *(*0x20 + -0x68) = 0x44605a;\n                            fcn.00434940();\n                            *(*0x20 + -0x68) = 0x44605f;\n                            fcn.00434760();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x446070;\n                            in_RAX = fcn.00432f60();\n                            goto code_r0x00446071;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x00445f1e;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x00445f1e;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x00445f1e:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1597
    },
    "004466c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004466c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x128 && *0x20 + -0x128 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x1a8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar7 = in_RAX[1];\n                iVar4 = *in_RAX;\n                if (iVar4 != 0) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar7;\n                    *(*0x20 + -0x138) = iVar4;\n                    *(*0x20 + -0x140) = in_RAX[7];\n                    *(*0x20 + -0x1b0) = 0x446734;\n                    uVar2 = fcn.004458a0();\n                    *(*0x20 + -0x148) = uVar2;\n                    *(*0x20 + -0x150) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = unaff_RBP;\n                    *(*0x20 + -0x1b0) = 0x446759;\n                    fcn.0045d6e6();\n                    uVar3 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar3;\n                    uVar8 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar8;\n                    *(*0x20 + -0x118) = unaff_RBX - uVar8;\n                    iVar4 = uVar8 - *(*0x20 + -0x140);\n                    *(*0x20 + -0x158) = iVar4;\n                    iVar7 = *(*0x20 + 8);\n                    if (*(iVar7 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + 0x10);\n                        if ((uVar9 < uVar8 - uVar3) &&\n                           (uVar6 = uVar8 - uVar3 & 0xffffffffffffff00 | *(iVar7 + 0xb9),  *(iVar7 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b0) = 0x446986;\n                            fcn.00432f60();\n                            goto code_r0x00446986;\n                        }\n                        for (iVar7 = *(iVar7 + 0x148); iVar7 != 0; iVar7 = *(iVar7 + 0x40)) {\n                            uVar3 = *(iVar7 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                               (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                                *(iVar7 + 0x18) = uVar3 + *(*0x20 + -0x118);\n                            }\n                        }\n                    }\n                    else {\n                        uVar9 = 0;\n                        uVar6 = uVar8;\n                        for (uVar8 = *(iVar7 + 0x148); uVar8 != 0; uVar8 = *(uVar8 + 0x40)) {\n                            uVar10 = *(*(uVar8 + 0x50) + 0x18) + *(uVar8 + 0x18);\n                            if (((uVar3 <= uVar10) && (uVar10 < uVar6)) && (uVar9 < uVar10)) {\n                                uVar9 = uVar10;\n                            }\ncode_r0x00446986:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b0) = 0x4469cf;\n                        iVar4 = fcn.00446540(*0x20 + -0x128);\n                        iVar4 = *(*0x20 + -0x158) - iVar4;\n                    }\n                    *(*0x20 + -0x1b0) = 0x44682f;\n                    fcn.0045ddc0(iVar4);\n                    iVar7 = *(*0x20 + 8);\n                    uVar3 = *(iVar7 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        *(iVar7 + 0x50) = *(*0x20 + -0x118) + uVar3;\n                    }\n                    uVar3 = *(iVar7 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        *(iVar7 + 0x68) = uVar3 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b0) = 0x446898;\n                    fcn.00446400();\n                    piVar1 = *(*0x20 + 8);\n                    uVar3 = piVar1[4];\n                    if ((*(*0x20 + -0x128) < uVar3 || *(*0x20 + -0x128) == uVar3) &&\n                       (uVar3 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar3)) {\n                        piVar1[4] = *(*0x20 + -0x118) + uVar3;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar7 = *(*0x20 + -0x148);\n                    *piVar1 = iVar7;\n                    iVar4 = *(*0x20 + -0x150);\n                    piVar1[1] = iVar4;\n                    piVar1[2] = iVar7 + 0x13a0;\n                    piVar1[7] = iVar4 - *(*0x20 + -0x158);\n                    iVar7 = *(*0x20 + -0x118);\n                    piVar1[0x10] = piVar1[0x10] + iVar7;\n                    *(*0x20 + -0x1a8) = 0;\n                    *(*0x20 + -0x1b0) = 0x446953;\n                    fcn.00450500(0, iVar7, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b0) = 0x446965;\n                    fcn.00445b80();\n                    return;\n                }\n                *(*0x20 + -0x1b0) = 0x4469f7;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b0) = 0x446a08;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x446a18;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1954
    },
    "00447620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00447620(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2d0) == 0)) {\n                            if (0 < *0x598634) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x4476e9;\n                            iVar2 = fcn.0044abe0(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x28) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x447746;\n                            fcn.004466c0();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x447775;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x20) = 0x447786;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x20) = 0x447797;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x20) = 0x4477a8;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4477b3;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 807
    },
    "00447960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00447960(uchar param_1)\n\n{\n    int32_t iVar1;\n    int64_t **in_RAX;\n    ulong uVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *piVar10;\n    int32_t iVar11;\n    int64_t *piVar12;\n    int32_t iVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            piVar3 = in_RAX[3];\n            if (piVar3 == NULL) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            piVar10 = *in_RAX;\n            *(*0x20 + -0x28) = piVar10;\n            piVar12 = in_RAX[1];\n            *(*0x20 + -0x30) = piVar12;\n            if (*piVar10 == piVar3) {\n                iVar1 = -1;\n            }\n            else {\n                *(*0x20 + -0x98) = piVar3 + -1;\n                *(*0x20 + -0xd8) = 0x4479f0;\n                iVar1 = fcn.0044b9c0(1);\n                piVar10 = *(*0x20 + -0x28);\n                piVar12 = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x98);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0x98) = piVar3;\n            if (iVar1 == -1) {\n                iVar1 = 0;\n            }\n            *(*0x20 + -0xa4) = iVar1;\n            if (in_RAX[7] - in_RAX[5] == 0) {\n                iVar13 = 0;\n                iVar6 = 0;\n                goto code_r0x00447b47;\n            }\n            *(*0x20 + -0x90) = in_RAX[7] - in_RAX[5];\n            if (*(piVar10 + 0x2b) < 2) {\n                piVar4 = NULL;\n            }\n            else {\n                iVar6 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                if ((iVar6 >> 2 & 1) != 0) {\n                    if ((piVar10 >> 2 & 1) != 0) {\n                        *(*0x20 + -0x50) = iVar6;\n                        *(*0x20 + -0xd8) = 0x447a7f;\n                        fcn.004346e0();\n                        *(*0x20 + -0xd8) = 0x447a90;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447a9d;\n                        fcn.00434f60();\n                        *(*0x20 + -0xd8) = 0x447aa5;\n                        fcn.00434940();\n                        *(*0x20 + -0xd8) = 0x447aaa;\n                        fcn.00434760();\n                        in_RAX = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0xa4);\n                        piVar12 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + -0x50);\n                        piVar10 = *(*0x20 + -0x28);\n                    }\n                    iVar6 = iVar6 + 4;\n                }\n                piVar4 = *(iVar6 + 8);\n            }\n            piVar3 = piVar12;\n            if ((piVar4 != NULL) && (iVar11 = *piVar4,  0 < iVar11)) {\n                iVar13 = piVar4[1];\n                if (iVar13 < 1) {\n                    iVar13 = 0;\n                    iVar6 = 0;\ncode_r0x00447b47:\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x9c) = iVar13;\n                    if (in_RAX[9] == NULL) {\n                        iVar11 = 0;\n                        iVar6 = 0;\n                        goto code_r0x00447ca2;\n                    }\n                    piVar3 = in_RAX[10];\n                    if (piVar3 != NULL) {\n                        iVar1 = in_RAX[9] >> 3;\n                        iVar11 = *piVar3;\n                        if (iVar1 < *piVar3) {\n                            iVar11 = iVar1;\n                        }\n                        iVar6 = piVar3[1];\n                        goto code_r0x00447ca2;\n                    }\n                    if (*(piVar10 + 0x2b) == '\\0') {\n                        piVar4 = NULL;\n                    }\n                    else {\n                        ppiVar5 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                        if ((ppiVar5 >> 2 & 1) != 0) {\n                            if ((piVar10 >> 2 & 1) != 0) {\n                                *(*0x20 + -0x68) = ppiVar5;\n                                *(*0x20 + -0xd8) = 0x447bd3;\n                                fcn.004346e0();\n                                *(*0x20 + -0xd8) = 0x447be5;\n                                fcn.00434fe0();\n                                *(*0x20 + -0xd8) = 0x447bf2;\n                                fcn.00434f60();\n                                *(*0x20 + -0xd8) = 0x447bf7;\n                                fcn.00434940();\n                                *(*0x20 + -0xd8) = 0x447bfc;\n                                fcn.00434760();\n                                in_RAX = *(*0x20 + 8);\n                                iVar1 = *(*0x20 + -0xa4);\n                                ppiVar5 = *(*0x20 + -0x68);\n                                piVar12 = *(*0x20 + -0x30);\n                                iVar13 = *(*0x20 + -0x9c);\n                                piVar10 = *(*0x20 + -0x28);\n                            }\n                            ppiVar5 = ppiVar5 + 4;\n                        }\n                        piVar4 = *ppiVar5;\n                    }\n                    piVar3 = piVar12;\n                    if ((piVar4 != NULL) && (iVar11 = *piVar4,  0 < iVar11)) {\n                        *(*0x20 + -0x48) = piVar4;\n                        if ((-1 < iVar1) && (iVar1 < iVar11)) {\n                            iVar11 = piVar4[1];\n                            if (iVar11 < 1) {\n                                iVar11 = 0;\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = piVar4 + iVar1 * (iVar11 + 7 >> 3) + 8;\n                            }\ncode_r0x00447ca2:\n                            if (in_RAX[10] == NULL) {\n                                if (*(piVar10 + 0x2b) < 3) {\n                                    puVar7 = NULL;\n                                }\n                                else {\n                                    iVar8 = piVar10 + *(piVar10 + 4) * 4 + 0x2c;\n                                    if ((iVar8 >> 2 & 1) != 0) {\n                                        if ((piVar10 >> 2 & 1) != 0) {\n                                            *(*0x20 + -0x60) = iVar8;\n                                            *(*0x20 + -0x40) = iVar6;\n                                            *(*0x20 + -0xa0) = iVar11;\n                                            *(*0x20 + -0xd8) = 0x447d2a;\n                                            fcn.004346e0();\n                                            *(*0x20 + -0xd8) = 0x447d3b;\n                                            fcn.00434fe0();\n                                            *(*0x20 + -0xd8) = 0x447d48;\n                                            fcn.00434f60();\n                                            *(*0x20 + -0xd8) = 0x447d4d;\n                                            fcn.00434940();\n                                            *(*0x20 + -0xd8) = 0x447d52;\n                                            fcn.00434760();\n                                            iVar8 = *(*0x20 + -0x60);\n                                            iVar13 = *(*0x20 + -0x9c);\n                                        }\n                                        iVar8 = iVar8 + 4;\n                                    }\n                                    puVar7 = *(iVar8 + 0x10);\n                                }\n                                if (puVar7 != NULL) {\n                                    uVar2 = *puVar7;\n                                    *(*0x20 + -0x20) = puVar7 + 1;\n                                    *(*0x20 + -0x18) = uVar2;\n                                    *(*0x20 + -0x10) = uVar2;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = *0x53d210;\n                                *(*0x20 + -0x18) = *0x53d218;\n                                *(*0x20 + -0x10) = *0x53d220;\n                            }\n                            return iVar13;\n                        }\n                        *(*0x20 + -0xd8) = 0x447e05;\n                        uVar2 = fcn.0044b2c0();\n                        *(*0x20 + -0x38) = uVar2;\n                        *(*0x20 + -0x70) = piVar12;\n                        *(*0x20 + -0x78) = **(*0x20 + -0x48);\n                        *(*0x20 + -0xd8) = 0x447e27;\n                        fcn.004346e0();\n                        *(*0x20 + -0xd8) = 0x447e38;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447e45;\n                        fcn.00434de0(*(*0x20 + -0xa4));\n                        *(*0x20 + -0xd8) = 0x447e56;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447e65;\n                        fcn.00434de0();\n                        *(*0x20 + -0xd8) = 0x447e76;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447e88;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447e99;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447ea5;\n                        fcn.00434e40();\n                        *(*0x20 + -0xd8) = 0x447eb6;\n                        fcn.00434fe0();\n                        *(*0x20 + -0xd8) = 0x447ebb;\n                        fcn.00434760();\n                        *(*0x20 + -0xd8) = 0x447ecc;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0xd8) = 0x447ed7;\n                    piVar12 = piVar3;\n                    uVar2 = fcn.0044b2c0();\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x70) = piVar3;\n                    *(*0x20 + -0x80) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x88) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -0xd8) = 0x447f05;\n                    fcn.004346e0();\n                    *(*0x20 + -0xd8) = 0x447f16;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xd8) = 0x447f28;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xd8) = 0x447f39;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xd8) = 0x447f45;\n                    fcn.00434e40();\n                    *(*0x20 + -0xd8) = 0x447f56;\n                    fcn.00434fe0();\n                    *(*0x20 + -0xd8) = 0x447f65;\n                    fcn.00434e40();\n                    *(*0x20 + -0xd8) = 0x447f6a;\n                    fcn.00434940();\n                    *(*0x20 + -0xd8) = 0x447f6f;\n                    fcn.00434760();\n                    *(*0x20 + -0xd8) = 0x447f85;\n                    fcn.00432f60();\n                }\n                else {\n                    *(*0x20 + -0x58) = piVar4;\n                    if ((-1 < iVar1) && (iVar1 < iVar11)) {\n                        iVar6 = piVar4 + (iVar13 + 7 >> 3) * iVar1 + 8;\n                        goto code_r0x00447b47;\n                    }\n                }\n                *(*0x20 + -0xd8) = 0x447f90;\n                piVar3 = piVar12;\n                uVar2 = fcn.0044b2c0();\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -0x70) = piVar12;\n                *(*0x20 + -0x78) = **(*0x20 + -0x58);\n                *(*0x20 + -0xd8) = 0x447faf;\n                fcn.004346e0();\n                *(*0x20 + -0xd8) = 0x447fc5;\n                fcn.00434fe0();\n                *(*0x20 + -0xd8) = 0x447fd1;\n                fcn.00434de0(*(*0x20 + -0xa4));\n                *(*0x20 + -0xd8) = 0x447fe5;\n                fcn.00434fe0();\n                *(*0x20 + -0xd8) = 0x447fef;\n                fcn.00434de0();\n                *(*0x20 + -0xd8) = 0x448005;\n                fcn.00434fe0();\n                *(*0x20 + -0xd8) = 0x448017;\n                fcn.00434fe0();\n                *(*0x20 + -0xd8) = 0x448028;\n                fcn.00434fe0();\n                *(*0x20 + -0xd8) = 0x448032;\n                fcn.00434e40();\n                *(*0x20 + -0xd8) = 0x448045;\n                fcn.00434fe0();\n                *(*0x20 + -0xd8) = 0x44804a;\n                fcn.00434760();\n                *(*0x20 + -0xd8) = 0x44805b;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0xd8) = 0x448066;\n            uVar2 = fcn.0044b2c0();\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x70) = piVar3;\n            *(*0x20 + -0x80) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xd8) = 0x448089;\n            fcn.004346e0();\n            *(*0x20 + -0xd8) = 0x44809a;\n            fcn.00434fe0();\n            *(*0x20 + -0xd8) = 0x4480ac;\n            fcn.00434fe0();\n            *(*0x20 + -0xd8) = 0x4480bd;\n            fcn.00434fe0();\n            param_1 = *(*0x20 + -0x90);\n            *(*0x20 + -0xd8) = 0x4480cf;\n            fcn.00434e40();\n            *(*0x20 + -0xd8) = 0x4480e5;\n            fcn.00434fe0();\n            *(*0x20 + -0xd8) = 0x4480ef;\n            fcn.00434e40();\n            *(*0x20 + -0xd8) = 0x4480f4;\n            fcn.00434940();\n            *(*0x20 + -0xd8) = 0x4480f9;\n            fcn.00434760();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xd8) = 0x44810a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x44811e;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4133
    },
    "004481a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004481a0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x004481a0:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 < 1) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x004481e0;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x004483e5;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x004481e0:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x00448247;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x00448247;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x00448247:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x4482bb;\n                            iVar2 = fcn.0045d480(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x448265;\n                    iVar2 = fcn.00448900();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX < 1) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x44831c;\n                            fcn.0045ddc0(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x448390;\n                    fcn.0045d540(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x448398;\n                in_RAX = fcn.0045d480(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x004483f7;\ncode_r0x004483e5:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x4483f6;\n    in_RAX = fcn.00432f60();\ncode_r0x004483f7:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x448410;\n    fcn.0045ad80();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x004481a0;\n}\n",
        "token_count": 1879
    },
    "00448800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00448800(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040b760(0);\n            }\n            fcn.0045ddc0(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x5378a0;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00449d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.00449d80(void)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack136;\n    ulong uStack128;\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    while (auStack120 < *(unaff_R14 + 0x10) || auStack120 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    auStack120 = in_XMM15;\n    auStack104 = in_XMM15;\n    fcn.004541c0();\n    iStack136 = SUB168(in_XMM15, 0);\n    if ((iStack136 == 0) && (auStack120._0_8_ == 0)) {\n        return 0;\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar4 = 0;\n    while( true ) {\n        uVar2 = fcn.00458a20();\n        fcn.00458a20(iStack136);\n        uStack56 = fcn.0045d730();\n        uStack64 = auStack120._0_8_;\n        uStack48 = auStack120._0_8_;\n        uStack128 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack40 = uStack128;\n        uStack32 = auStack120._8_8_;\n        uVar1 = arg1 + 1;\n        uStack72 = uVar2;\n        if (uVar5 < arg1 + 1) {\n            iVar3 = fcn.00444ac0(arg1);\n            uVar1 = iVar4 + 1;\n            iVar4 = iVar3;\n            uVar5 = arg1;\n        }\n        arg1 = uVar1;\n        if (*0x598440 == 0) {\n            fcn.0045da9a(in_RAX, uVar5, arg1);\n        }\n        else {\n            fcn.00410c20(auStack88);\n        }\n        if (auStack104._0_8_ == 0) break;\n        fcn.004541c0();\n    }\n    fcn.004541c0();\n    return iVar4;\n}\n",
        "token_count": 601
    },
    "0044a000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044a000(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t *arg2;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = 0x44a025;\n            ppiVar3 = fcn.0040c140();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar6 = 0x531960; iVar6 != 0; iVar6 = *(iVar6 + 0x210)) {\n                if (*(iVar6 + 0x208) == '\\0') {\n                    *(*0x20 + -0x10) = iVar6;\n                    piVar7 = ppiVar3[1];\n                    piVar9 = *ppiVar3;\n                    piVar4 = piVar9;\n                    if (ppiVar3[2] < piVar7 + 1U) {\n                        *(*0x20 + -0x60) = 0x44a07a;\n                        arg2 = piVar7;\n                        piVar4 = fcn.00444ac0(piVar7);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar7;\n                        if (*0x598440 == 0) {\n                            *ppiVar3 = piVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x44a096;\n                            piVar4 = fcn.0045cfe0(piVar7, arg2, param_3, param_4);\n                        }\n                        iVar6 = *(*0x20 + -0x10);\n                        piVar7 = piVar9;\n                    }\n                    param_3 = piVar7 + 1;\n                    ppiVar3[1] = param_3;\n                    if (*0x598440 == 0) {\n                        piVar4[piVar7] = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x60) = 0x44a0c5;\n                        ppiVar3 = fcn.0045d0e0();\n                    }\n                    if ((*(iVar6 + 0x1e0) == 0) && (*(iVar6 + 0x1e8) == 0)) {\n                        iVar1 = *(iVar6 + 0xd8);\n                        iVar6 = *(iVar6 + 0xd0);\n                        *(*0x20 + -0x60) = 0x44a105;\n                        uVar2 = fcn.004132a0();\n                        iVar8 = *(*0x20 + -0x10);\n                        *(iVar8 + 0x1e0) = uVar2;\n                        if (*0x598440 == 0) {\n                            *(iVar8 + 0x1e8) = iVar1 - iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x44a12e;\n                            fcn.0045d120(iVar8, piVar7, param_3, param_4);\n                        }\n                        iVar1 = *(iVar8 + 0xe8);\n                        iVar8 = *(iVar8 + 0xe0);\n                        *(*0x20 + -0x60) = 0x44a148;\n                        uVar2 = fcn.004132a0();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x1f0) = uVar2;\n                        if (*0x598440 == 0) {\n                            *(iVar6 + 0x1f8) = iVar1 - iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x60) = 0x44a171;\n                            fcn.0045d120(iVar6, piVar7, param_3, param_4);\n                        }\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar7 = ppiVar3[1];\n            piVar9 = NULL;\n            while( true ) {\n                if (piVar7 <= piVar9) goto code_r0x0044a1e6;\n                iVar6 = (*ppiVar3)[piVar9];\n                if (*(iVar6 + 0x1d8) != '\\0') break;\n                piVar9 = piVar9 + 1;\n            }\n            if (*0x598440 == 0) {\n                **ppiVar3 = iVar6;\n            }\n            else {\n                *(*0x20 + -0x60) = 0x44a1ae;\n                ppiVar3 = fcn.0045d140(piVar9, piVar7, param_3, param_4);\n            }\n            piVar7 = ppiVar3[1];\n            if (piVar9 < piVar7) {\n                if (*0x598440 == 0) {\n                    (*ppiVar3)[piVar9] = 0x531960;\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x44a1e5;\n                    ppiVar3 = fcn.0045d0e0(0x531960);\n                }\ncode_r0x0044a1e6:\n                if (*0x598440 != '\\0') {\n                    *(*0x20 + -0x60) = 0x44a1fe;\n                    fcn.00403140();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar5 = *0x543ae8;\n                *0x543ae8 = ppiVar3;\n                return uVar5;\n            }\n            *(*0x20 + -0x60) = 0x44a225;\n            fcn.0045d480(piVar7);\n        }\n        *(puVar10 + -8) = 0x44a22b;\n        fcn.0045ad80();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1509
    },
    "0044a240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044a240(void)\n\n{\n    int32_t **ppiVar1;\n    int64_t arg1;\n    char cVar2;\n    int32_t **in_RAX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int32_t *arg1_00;\n    ulong *puVar6;\n    int32_t *piVar7;\n    int64_t unaff_R14;\n    int32_t *piStack112;\n    int32_t *piStack96;\n    ulong uStack80;\n    ulong *puStack72;\n    int32_t *piStack64;\n    int64_t iStack56;\n    ulong uStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    while (&uStack80 < *(unaff_R14 + 0x10) || &uStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar4 = *in_RAX;\n    if ((((*piVar4 == -6) && (*(piVar4 + 1) == '\\0')) && (*(piVar4 + 5) == '\\0')) &&\n       ((*(piVar4 + 6) == '\\x01' && (*(piVar4 + 7) == '\\b')))) {\n        ppiVar1 = in_RAX[0x10];\n        arg1_00 = in_RAX[0x11];\n        iVar5 = arg1_00 + -1;\n        piVar4 = NULL;\ncode_r0x0044a2ca:\n        piVar7 = piVar4;\n        if (piVar7 < iVar5) {\n            piVar4 = piVar7 + 1;\n            if (piVar4 < arg1_00) goto code_r0x0044a2eb;\n            goto code_r0x0044a7d5;\n        }\n        if (arg1_00 != NULL) {\n            if ((*ppiVar1 == in_RAX[0x14]) && (ppiVar1[iVar5 * 2] == in_RAX[0x15])) {\n                piVar4 = in_RAX[0x39];\n                puVar6 = in_RAX[0x38];\n                if (piVar4 < 1) {\n                    return;\n                }\n                iVar5 = 0;\n                while( true ) {\n                    uStack48 = *puVar6;\n                    iStack40 = *(puVar6 + 1);\n                    iStack36 = *(puVar6 + 0xc);\n                    iStack32 = *(puVar6 + 2);\n                    iStack28 = *(puVar6 + 0x14);\n                    iStack24 = *(puVar6 + 3);\n                    iStack20 = *(puVar6 + 0x1c);\n                    arg1 = puVar6[3];\n                    iStack16 = *(puVar6 + 4);\n                    iStack12 = *(puVar6 + 0x24);\n                    if ((*(puVar6[4] + 8) != arg1) ||\n                       (puStack72 = puVar6,  cVar2 = fcn.00402180(arg1, piVar4),  cVar2 == '\\0')) break;\n                    iVar5 = iVar5 + 1;\n                    if (piVar4 <= iVar5) {\n                        return;\n                    }\n                    puVar6 = puStack72 + 5;\n                }\n                arg1_00 = in_RAX[0x36];\n                piStack96 = in_RAX[0x37];\n                uStack80 = uStack48;\n                piStack64 = arg1_00;\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434fe0();\n                fcn.00434940();\n                fcn.00434760();\n                fcn.00432f60();\n            }\n            fcn.00432f60();\n        }\n        piVar4 = fcn.0045d480(arg1_00);\n        do {\n            piStack64 = piVar4;\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434900();\n            fcn.00434fe0();\n            fcn.00434940();\n            fcn.00434760();\n            piStack112 = piStack112 + 1;\ncode_r0x0044a706:\n            arg1_00 = piStack112;\n            if (piStack96 < piStack112) goto code_r0x0044a79b;\n            piVar7 = in_RAX[0xe];\n            piVar3 = in_RAX[0x11];\n            if (piVar3 <= piStack112) goto code_r0x0044a790;\n            arg1_00 = piStack112 * 0x10;\n            piVar3 = piStack112;\n            if (piVar7 <= *(arg1_00 + 2 + in_RAX[0x10])) goto code_r0x0044a785;\n            piVar4 = fcn.0044b2c0();\n            arg1_00 = in_RAX[0x11];\n            piVar7 = in_RAX[0x10];\n        } while (piStack112 < arg1_00);\n        fcn.0045d480(arg1_00);\ncode_r0x0044a785:\n        fcn.0045d4a0(piVar7);\ncode_r0x0044a790:\n        fcn.0045d480(piVar3);\ncode_r0x0044a79b:\n        fcn.00432f60();\n        goto code_r0x0044a7ac;\n    }\ncode_r0x0044a7dd:\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434e40();\n    fcn.00434e40();\n    fcn.00434e40();\n    fcn.00434e40();\n    fcn.00434760();\n    piVar4 = in_RAX[0x31];\n    if (in_RAX[0x32] != NULL) goto code_r0x0044a88f;\n    do {\n        fcn.004346e0();\n        fcn.00434940();\n        fcn.00434760();\n        piVar4 = fcn.00432f60();\ncode_r0x0044a88f:\n        piStack64 = piVar4;\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434fe0();\n        fcn.00434760();\n    } while( true );\ncode_r0x0044a2eb:\n    if (ppiVar1[piVar4 * 2] < ppiVar1[piVar7 * 2]) goto code_r0x0044a2fb;\n    goto code_r0x0044a2ca;\ncode_r0x0044a2fb:\n    arg1_00 = in_RAX[0xe];\n    if (ppiVar1[piVar7 * 2 + 1] < arg1_00) {\n        if (ppiVar1[piVar4 * 2 + 1] < arg1_00) {\n            if (piVar4 < iVar5) {\n                iStack56 = ppiVar1[piVar7 * 2 + 1] + in_RAX[0xd];\n                fcn.0044b2c0(ppiVar1[piVar4 * 2 + 1] + in_RAX[0xd]);\n            }\n            piVar3 = fcn.0044b2c0();\n            arg1_00 = in_RAX[0x11];\n            if (piVar7 < arg1_00) {\n                if (piVar4 < arg1_00) {\n                    piStack64 = piVar3;\n                    fcn.004346e0();\n                    fcn.00434fe0();\n                    fcn.00434e40();\n                    fcn.00434fe0();\n                    fcn.00434fe0();\n                    fcn.00434e40();\n                    fcn.00434fe0();\n                    fcn.00434760();\n                    if (in_RAX[0x32] != NULL) {\n                        piStack64 = in_RAX[0x31];\n                        fcn.004346e0();\n                        fcn.00434fe0();\n                        fcn.00434fe0();\n                        fcn.00434760();\n                    }\n                    fcn.004346e0();\n                    fcn.00434940();\n                    fcn.00434760();\n                    piStack112 = NULL;\n                    piStack96 = piVar7;\n                    goto code_r0x0044a706;\n                }\ncode_r0x0044a7ac:\n                fcn.0045d480(arg1_00);\n            }\n            fcn.0045d480(arg1_00);\n        }\n        fcn.0045d4a0(arg1_00);\n    }\n    fcn.0045d4a0(arg1_00);\ncode_r0x0044a7d5:\n    fcn.0045d480(arg1_00);\n    goto code_r0x0044a7dd;\n}\n",
        "token_count": 2112
    },
    "0044ada0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044affa)\n// WARNING: Removing unreachable block (ram,0x0044b007)\n// WARNING: Removing unreachable block (ram,0x0044b13d)\n// WARNING: Removing unreachable block (ram,0x0044b017)\n// WARNING: Removing unreachable block (ram,0x0044b109)\n// WARNING: Removing unreachable block (ram,0x0044b1d0)\n// WARNING: Removing unreachable block (ram,0x0044b1fd)\n// WARNING: Removing unreachable block (ram,0x0044b154)\n// WARNING: Removing unreachable block (ram,0x0044b20e)\n\nuint fcn.0044ada0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t *in_RAX;\n    int32_t iVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_R8;\n    uint64_t **ppuVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    uint64_t **ppuVar11;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack100;\n    uint64_t uStack88;\n    uint64_t *apuStack24 [2];\n    \n    while( true ) {\n        ppuVar11 = apuStack24;\n        iVar5 = arg1;\n        if (*(unaff_R14 + 0x10) <= ppuVar11 && ppuVar11 != *(unaff_R14 + 0x10)) break;\n        fcn.0045ad80();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    arg1_00 = arg1;\n    if (unaff_RSI == 0) goto code_r0x0044ae0a;\n    uVar6 = unaff_RDI >> 3 & 1;\n    ppuVar8 = NULL;\n    do {\n        arg1_00 = arg1;\n        if (ppuVar8 < 8) {\n            iVar1 = unaff_RSI + uVar6 * 0x80;\n            iVar10 = ppuVar8 * 0x10;\n            ppuVar11 = ppuVar8;\n            if ((*(iVar1 + 8 + iVar10) == arg1) && (*(iVar1 + iVar10) == unaff_RDI)) {\n                return *(iVar1 + 0xc + iVar10);\n            }\n        }\n        else {\ncode_r0x0044ae0a:\n            if (in_RAX == NULL) {\n                if ((in_R8 == '\\0') || (*0x598228 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434e40();\n                fcn.00434940();\n                fcn.00434760();\n                fcn.00432f60();\ncode_r0x0044af01:\n                do {\n                    fcn.0044bba0(arg1_00);\n                } while (uStack88 <= uStackX32);\n                if (in_stack_00000028 != 0) {\n                    iVar1 = *(unaff_R14 + 0x30);\n                    uVar7 = *(iVar1 + 0xf0);\n                    uVar2 = *(iVar1 + 0xf4);\n                    *(iVar1 + 0xf0) = uVar2;\n                    uVar7 = uVar7 ^ uVar7 << 0x11;\n                    uVar7 = uVar2 >> 0x10 ^ uVar7 >> 7 ^ uVar2 ^ uVar7;\n                    *(iVar1 + 0xf4) = uVar7;\n                    iVar9 = (uStackX32 >> 3 & 1) * 0x80;\n                    iVar1 = in_stack_00000028 + iVar9;\n                    iVar10 = (uVar7 + uVar2 & 7) * 0x10;\n                    uVar3 = *(in_stack_00000028 + 8 + iVar9);\n                    uVar4 = *(in_stack_00000028 + 0xc + iVar9);\n                    *(iVar1 + iVar10) = *(in_stack_00000028 + iVar9);\n                    *(iVar1 + 8 + iVar10) = uVar3;\n                    *(iVar1 + 0xc + iVar10) = uVar4;\n                    *(in_stack_00000028 + iVar9) = uStackX32;\n                    *(in_stack_00000028 + 8 + iVar9) = iStackX24;\n                    *(in_stack_00000028 + 0xc + iVar9) = uStack100;\n                }\n                return uStack100;\n            }\n            arg1 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x60);\n            iVar5 = arg1_00;\n            if ((arg1_00 & 0xffffffff) <= arg1) {\n                uStack88 = *in_RAX;\n                uStack100 = 0xffffffff;\n                arg1_00 = uVar6 - (arg1_00 & 0xffffffff);\n                iStackX24 = iVar5;\n                uStackX32 = unaff_RDI;\n                in_stack_00000028 = unaff_RSI;\n                apuStack24[0] = in_RAX;\n                goto code_r0x0044af01;\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045d540(arg1);\n        }\n        ppuVar8 = ppuVar11 + 1;\n    } while( true );\n}\n",
        "token_count": 1384
    },
    "0044bd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044bd40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44bdce;\n                        cVar8 = fcn.0044c020(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x598440 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44be45;\n                                fcn.0045d100(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & (*(piVar15 + 0x15) + piVar14[4]) - 1;\n                            *(*0x20 + -0x38) = 0;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar9 = piVar14[3];\n                            *(*0x20 + -0x30) = iVar9;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar10 = *piVar15;\n                            *(*0x20 + -0x18) = iVar10;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((iVar9 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg4 == *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3)) {\n                                        *(iVar1 + -8 + iVar2 * 0x28) = iVar3 + iVar10;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                iVar10 = piVar14[1];\n                                iVar1 = *piVar14;\n                                uVar11 = piVar14[2];\n                                iVar9 = iVar1;\n                                if (uVar11 < iVar10 + 1U) {\n                                    *(*0x20 + -0x90) = 0x44bf27;\n                                    iVar9 = fcn.00444ac0(iVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = iVar10;\n                                    if (*0x598440 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44bf47;\n                                        iVar9 = fcn.0045cfe0(iVar10, uVar11, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                    iVar10 = iVar1;\n                                }\n                                piVar14[1] = iVar10 + 1;\n                                *(iVar9 + iVar10 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + iVar10 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + 8) = *(*0x20 + -0x30);\n                                *(iVar9 + 0xc) = uVar4;\n                                *(iVar9 + 0x10) = uVar5;\n                                *(iVar9 + 0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar9 + 0x1c) = uVar4;\n                                *(iVar9 + 0x20) = uVar5;\n                                *(iVar9 + 0x24) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar11 = *(piVar15 + 0x15);\n                            uVar11 = -uVar11 & (piVar14[5] + uVar11) - 1;\n                            piVar14[5] = uVar11;\n                            piVar14[5] = *piVar15 + uVar11;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44bfdc;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7e98;\n            *(*0x20 + -0x90) = 0x44bfef;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x44bfff;\n        fcn.0045ad80();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1909
    },
    "0044c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044c020(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    bool bVar16;\n    bool bVar17;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar11 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar6 = uVar11;\n            uVar10 = uVar11;\n            if (uVar10 < 0xc) {\n                if (uVar10 < 7) {\n                    if (4 < uVar10 - 1) {\n                        if (uVar10 == 6) {\ncode_r0x0044c219:\n                            uVar12 = *unaff_RBX;\n                            iVar13 = in_RAX[6];\n                            bVar17 = SBORROW8(*0x52c280, iVar13);\n                            iVar7 = *0x52c280 - iVar13;\n                            bVar16 = *0x52c280 == iVar13;\n                            if (iVar13 < *0x52c280) {\n                                *(*0x20 + -0x58) = 0;\n                                *(*0x20 + -0x50) = in_XMM15;\n                                *(*0x20 + -0x40) = in_XMM15;\n                                *(*0x20 + -0x58) = 2;\n                                *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                                *(*0x20 + -0x40) = in_RAX[6];\n                                *(*0x20 + -0x38) = uVar12;\n                                iVar8 = in_RAX[1];\n                                iVar1 = *in_RAX;\n                                iVar7 = iVar1;\n                                iVar15 = *0x52c280;\n                                if (in_RAX[2] < iVar8 + 1U) {\n                                    *(*0x20 + -0x60) = iVar13;\n                                    *(*0x20 + -0x68) = *0x52c280;\n                                    *(*0x20 + -0xb8) = 0x44c29b;\n                                    iVar7 = fcn.00444ac0(iVar8);\n                                    in_RAX = *(*0x20 + 8);\n                                    in_RAX[2] = iVar8;\n                                    if (*0x598440 == 0) {\n                                        *in_RAX = iVar7;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x44c2ba;\n                                        iVar7 = fcn.0045cfe0(iVar8, uVar12, iVar13, iVar15);\n                                    }\n                                    iVar13 = *(*0x20 + -0x60);\n                                    iVar15 = *(*0x20 + -0x68);\n                                    iVar8 = iVar1;\n                                }\n                                in_RAX[1] = iVar8 + 1;\n                                *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                                iVar7 = iVar7 + iVar8 * 0x28;\n                                uVar2 = *(*0x20 + -0x4c);\n                                uVar3 = *(*0x20 + -0x48);\n                                uVar4 = *(*0x20 + -0x44);\n                                *(iVar7 + 8) = *(*0x20 + -0x50);\n                                *(iVar7 + 0xc) = uVar2;\n                                *(iVar7 + 0x10) = uVar3;\n                                *(iVar7 + 0x14) = uVar4;\n                                uVar2 = *(*0x20 + -0x3c);\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x34);\n                                *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                                *(iVar7 + 0x1c) = uVar2;\n                                *(iVar7 + 0x20) = uVar3;\n                                *(iVar7 + 0x24) = uVar4;\n                                in_RAX[6] = in_RAX[6] + 1;\n                                bVar17 = SBORROW8(iVar15, iVar13);\n                                iVar7 = iVar15 - iVar13;\n                                bVar16 = iVar15 == iVar13;\n                            }\n                            return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n                        }\ncode_r0x0044c315:\n                        *(*0x20 + -0xb8) = 0x44c31d;\n                        fcn.00454320();\n                        *(*0x20 + -0xb8) = 0x44c345;\n                        fcn.004484e0(0x16, uVar6, 0x4af094, 0x37);\n                        *(*0x20 + -0xb8) = 0x44c34a;\n                        fcn.00409a20();\n                        *(*0x20 + -0xb8) = 0x44c359;\n                        fcn.004327c0();\n                        goto code_r0x0044c359;\n                    }\n                }\n                else if (10 < uVar10) {\n                    if (uVar10 == 0xb) goto code_r0x0044c219;\n                    goto code_r0x0044c315;\n                }\ncode_r0x0044c0f7:\n                uVar12 = *unaff_RBX;\n                iVar13 = in_RAX[6];\n                bVar17 = SBORROW8(*0x52c280, iVar13);\n                iVar7 = *0x52c280 - iVar13;\n                bVar16 = *0x52c280 == iVar13;\n                if (iVar13 < *0x52c280) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar12;\n                    iVar8 = in_RAX[1];\n                    iVar1 = *in_RAX;\n                    iVar7 = iVar1;\n                    iVar15 = *0x52c280;\n                    if (in_RAX[2] < iVar8 + 1U) {\n                        *(*0x20 + -0x60) = iVar13;\n                        *(*0x20 + -0x68) = *0x52c280;\n                        *(*0x20 + -0xb8) = 0x44c18b;\n                        iVar7 = fcn.00444ac0(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x598440 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44c1ac;\n                            iVar7 = fcn.0045cfe0(iVar8, uVar12, iVar13, iVar15);\n                        }\n                        iVar13 = *(*0x20 + -0x60);\n                        iVar15 = *(*0x20 + -0x68);\n                        iVar8 = iVar1;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar2;\n                    *(iVar7 + 0x10) = uVar3;\n                    *(iVar7 + 0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar2;\n                    *(iVar7 + 0x20) = uVar3;\n                    *(iVar7 + 0x24) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar17 = SBORROW8(iVar15, iVar13);\n                    iVar7 = iVar15 - iVar13;\n                    bVar16 = iVar15 == iVar13;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n            }\n            if (uVar10 < 0x12) {\n                if (uVar10 != 0xc) {\n                    if ((uVar10 == 0x11) && (unaff_RBX[8] == 1)) {\n                        *(*0x20 + -0xb8) = 0x44c0bd;\n                        uVar6 = fcn.0044c020(arg1);\n                        return uVar6;\n                    }\n                    goto code_r0x0044c315;\n                }\n                goto code_r0x0044c0f7;\n            }\n            if (uVar10 == 0x16) goto code_r0x0044c0f7;\n            if (uVar10 != 0x19) {\n                if (uVar10 != 0x1a) goto code_r0x0044c315;\n                goto code_r0x0044c0f7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar13 = unaff_RBX[8];\n            *(*0x20 + -0x60) = iVar13;\n            uVar6 = 0;\n            uVar9 = arg1;\n            while( true ) {\n                if (iVar13 <= uVar6) {\n                    return 1;\n                }\n                iVar13 = unaff_RBX[7];\n                arg1 = unaff_RBX[8];\n                if (arg1 <= uVar6) break;\n                *(*0x20 + -0x70) = uVar6;\n                uVar6 = *(iVar13 + 0x10 + uVar6 * 0x18);\n                *(*0x20 + -0xb8) = 0x44c3b3;\n                cVar5 = fcn.0044c020((uVar6 >> 1) + uVar9);\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\ncode_r0x0044c359:\n                uVar6 = *(*0x20 + -0x70) + 1;\n                iVar13 = *(*0x20 + -0x60);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar9 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0xb8) = 0x44c3e9;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x44c3fe;\n        fcn.0045ad80();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2927
    },
    "0044c7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044c7e0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg3_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x598218 == 0) {\n                *(*0x20 + -0x58) = 0x44c810;\n                fcn.0042bfe0();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x26e8);\n                arg3_00 = *(in_RAX + 0x26e0);\n                arg4 = *(in_RAX + 0x26f0);\n                if (arg4 < iVar4 + 1U) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44c86c;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00444ac0(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x26f0) = iVar4;\n                    if (*0x598440 == 0) {\n                        *(in_RAX + 0x26e0) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44c897;\n                        iVar3 = fcn.0045cfe0(iVar4, in_RAX, arg3, arg4);\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    param_1 = iVar4;\n                    iVar4 = arg3_00;\n                    arg3_00 = iVar3;\n                }\n                *(in_RAX + 0x26e8) = iVar4 + 1;\n                if (*0x598440 == 0) {\n                    *(arg3_00 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44c8cd;\n                    fcn.0045d120(param_1, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x26f0);\n                *(*0x20 + -0x58) = 0x44c8ed;\n                fcn.0044e5a0(arg1, in_RAX, arg3_00, arg4);\n                iVar4 = *(*0x20 + 8);\n                param_1 = *(iVar4 + 0x26e8);\n                if (param_1 != 0) {\n                    if (**(iVar4 + 0x26e0) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1668) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x26f8;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44c938;\n                fcn.0045d480(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44c949;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44c959;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1104
    },
    "0044c980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044c980(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    do {\n        while( true ) {\n            while (uVar2 = *(in_RAX + 8),  5 < uVar2) {\n                if (uVar2 < 8) {\n                    if (uVar2 == 6) {\n                        fcn.0045ac40();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    }\n                    else {\n                        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                        *piVar1 = *piVar1 + 1;\n                        iVar4 = *(unaff_R14 + 0x30);\n                        LOCK();\n                        if (uVar2 == *(in_RAX + 8)) {\n                            *(in_RAX + 8) = 6;\n                            iVar5 = *in_RAX;\n                            LOCK();\n                            if (*(in_RAX + 8) == 6) {\n                                *(in_RAX + 8) = 3;\n                            }\n                            else {\n                                fcn.0044e940();\n                            }\n                            iVar3 = *(iVar4 + 0xd8);\n                            *(iVar4 + 0xd8) = iVar3 + -1;\n                            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            LOCK();\n                            *(iVar5 + 0x26fc) = *(iVar5 + 0x26fc) + 1;\n                            return 1;\n                        }\n                        iVar3 = *(iVar4 + 0xd8);\n                        *(iVar4 + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 8) goto code_r0x0044ca70;\n                    if (uVar2 == 9) goto code_r0x0044cad8;\n                    fcn.0044e940();\n                }\n            }\n            if (1 < uVar2) break;\n            if (uVar2 == 0) {\n                return 0;\n            }\ncode_r0x0044ca70:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar4 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar5 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044e940();\n                }\n                iVar3 = *(iVar4 + 0xd8);\n                *(iVar4 + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar5 + 0x26fc) = *(iVar5 + 0x26fc) + 1;\n                return 1;\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        if (uVar2 != 2) {\n            return 0;\n        }\ncode_r0x0044cad8:\n        fcn.0045ac40();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    } while( true );\n}\n",
        "token_count": 1031
    },
    "0044cc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044cc40(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x26e8);\n            if (unaff_RBX < uVar3) {\n                piVar1 = *(*(in_RAX + 0x26e0) + unaff_RBX * 8);\n                if (in_RAX == *piVar1) {\n                    *piVar1 = 0;\n                    uVar3 = *(in_RAX + 0x26e8);\n                    arg3 = uVar3 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044ccd6:\n                        arg4 = *(in_RAX + 0x26e8);\n                        if (arg3 < arg4) {\n                            if (*0x598440 == 0) {\n                                *(*(in_RAX + 0x26e0) + -8 + uVar3 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44cd10;\n                                in_RAX = fcn.0045d140(uVar3, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x26f0);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x26e8) = arg3;\n                                uVar3 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar2 = *(in_RAX + 0x26e0);\n                                    arg1 = *(in_RAX + 0x26f0);\n                                    *(*0x20 + -0x38) = 0x44cd65;\n                                    uVar2 = fcn.0044e5a0(arg1, uVar2, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar2;\n                                    uVar2 = *(*(*0x20 + 8) + 0x26f0);\n                                    *(*0x20 + -0x38) = 0x44cd91;\n                                    fcn.0044e720(uVar2);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar3 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x26e8) == 0) {\n                                        *(in_RAX + 0x1668) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n                                    }\n                                }\n                                LOCK();\n                                *(in_RAX + 0x26f8) = *(in_RAX + 0x26f8) + -1;\n                                return uVar3;\n                            }\n                            *(*0x20 + -0x38) = 0x44cdf2;\n                            fcn.0045d500(arg3, arg2);\n                        }\n                        uVar3 = arg4;\n                        *(*0x20 + -0x38) = 0x44cdfd;\n                        fcn.0045d480(uVar3);\ncode_r0x0044cdfd:\n                        *(*0x20 + -0x38) = 0x44ce05;\n                        fcn.0045d480(uVar3);\n                    }\n                    else if (arg3 < uVar3) {\n                        if (unaff_RBX < uVar3) {\n                            if (*0x598440 == 0) {\n                                *(*(in_RAX + 0x26e0) + unaff_RBX * 8) = *(*(in_RAX + 0x26e0) + -8 + uVar3 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44ccd6;\n                                in_RAX = fcn.0045d180(uVar3, arg2, arg3);\n                            }\n                            goto code_r0x0044ccd6;\n                        }\n                        goto code_r0x0044cdfd;\n                    }\n                    *(*0x20 + -0x38) = 0x44ce0d;\n                    fcn.0045d480(uVar3);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44ce1e;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x38) = 0x44ce26;\n            in_RAX = fcn.0045d480(uVar3);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44ce36;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1356
    },
    "0044ce60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ce60(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    uint64_t arg4;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg4 = *(in_RAX + 0x26e8);\n            if (arg4 != 0) {\n                if (in_RAX == ***(in_RAX + 0x26e0)) {\n                    ***(in_RAX + 0x26e0) = 0;\n                    iVar1 = *(in_RAX + 0x26e8);\n                    arg1 = iVar1 - 1;\n                    if (0 < arg1) {\n                        uVar2 = (*(in_RAX + 0x26e0))[iVar1 + -1];\n                        if (*0x598440 == 0) {\n                            **(in_RAX + 0x26e0) = uVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44cedf;\n                            in_RAX = fcn.0045d160(arg1, arg2, uVar2, in_R9);\n                        }\n                    }\n                    arg3 = *(in_RAX + 0x26e0);\n                    arg4 = *(in_RAX + 0x26e8);\n                    if (arg1 < arg4) {\n                        if (*0x598440 == 0) {\n                            *(arg3 + -8 + iVar1 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44cf19;\n                            in_RAX = fcn.0045d140(arg1, arg2, arg3, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x26f0);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x26e8) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                uVar2 = *(in_RAX + 0x26f0);\n                                *(*0x20 + -0x30) = 0x44cf54;\n                                fcn.0044e720(uVar2);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x26e8) == 0) {\n                                *(in_RAX + 0x1668) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n                            }\n                            LOCK();\n                            *(in_RAX + 0x26f8) = *(in_RAX + 0x26f8) + -1;\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44cfa5;\n                        fcn.0045d500(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44cfb0;\n                    in_R9 = arg4;\n                    fcn.0045d480(arg4);\n                }\n                *(*0x20 + -0x30) = 0x44cfc5;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x30) = 0x44cfcc;\n            in_RAX = fcn.0045d480(arg4);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44cfd7;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 975
    },
    "0044de80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044de80(int64_t arg1)\n\n{\n    code **arg2;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    uVar1 = *(unaff_RBX + 0x30);\n    iVar2 = *(unaff_RBX + 0x10);\n    if (iVar2 < 1) {\n        fcn.0044ce60(arg1, arg2);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044e940();\n        }\n    }\n    else {\n        iVar2 = iVar2 * ((arg1 - *(unaff_RBX + 8)) / iVar2 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar2;\n        if (iVar2 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044e720(*(in_RAX + 0x26f0));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044e940();\n        }\n        if (*(in_RAX + 0x26e8) == 0) {\n            *(in_RAX + 0x1668) = 0;\n        }\n        else {\n            *(in_RAX + 0x1668) = *(**(in_RAX + 0x26e0) + 8);\n        }\n    }\n    fcn.0040a2a0();\n    (**arg2)(uVar1);\n    fcn.0040a080();\n    return;\n}\n",
        "token_count": 498
    },
    "0044e5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044e5a0(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44e5d1;\n                fcn.0044e940();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44e608;\n                    fcn.0044e940();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044e6ba;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044e6af;\n                    if (*0x598440 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44e666;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045d180(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x598440 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44e694;\n                            unaff_RDI = fcn.0045d140(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44e6af;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e6af:\n                *(*0x20 + -0x28) = 0x44e6ba;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e6ba:\n                *(*0x20 + -0x28) = 0x44e6c5;\n                fcn.0045d480(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44e6d0;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045d480(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44e6ea;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1285
    },
    "0044e720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e720(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44e751;\n                fcn.0044e940();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44e788;\n                    fcn.0044e940();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044e8e7;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044e8dc;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044e8d1;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x0044e8c6;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0044e8bb;\n                    if (unaff_RBX <= arg3) goto code_r0x0044e8b0;\n                    if (*0x598440 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44e870;\n                        in_RAX = fcn.0045d180(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x598440 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44e89b;\n                            fcn.0045d140(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44e8b0;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e8b0:\n                *(*0x20 + -0x28) = 0x44e8bb;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e8bb:\n                *(*0x20 + -0x28) = 0x44e8c6;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e8c6:\n                *(*0x20 + -0x28) = 0x44e8d1;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e8d1:\n                *(*0x20 + -0x28) = 0x44e8dc;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e8dc:\n                *(*0x20 + -0x28) = 0x44e8e7;\n                fcn.0045d480(unaff_RBX);\ncode_r0x0044e8e7:\n                *(*0x20 + -0x28) = 0x44e8f2;\n                fcn.0045d480(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44e8fd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045d480(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44e917;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1849
    },
    "0044e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044e9e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*0x54a428 != 0) && ((*0x54a418 != 0 || (*0x54a3d1 != '\\0')))) {\n        fcn.0040a080();\n        iVar1 = *0x54a428;\n        if ((*0x54a428 != 0) && ((*0x54a418 != 0 || (*0x54a3d1 != '\\0')))) {\n            *0x54a428 = 0;\n            fcn.0040a2a0();\n            return iVar1;\n        }\n        fcn.0040a2a0();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 227
    },
    "0044eaa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044eaa0(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    puVar1 = *(in_RAX + 0x1630);\n    *(in_RAX + 0x1630) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.0040a080();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x54a418 != NULL) {\n        **0x54a420 = puVar1;\n        puVar2 = *0x54a418;\n    }\n    *0x54a418 = puVar2;\n    *0x54a420 = puVar1;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 243
    },
    "0044eb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044eb60(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = fcn.0044f200();\n    if ((*0x54a3d0 == '\\0') && (*(iVar1 + 0x270) == '\\0')) {\n        fcn.0044f280();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044ec60(unaff_RBX & 0xffffffff, noname_1, noname_1, arg1);\n    fcn.0044f280();\n    return;\n}\n",
        "token_count": 249
    },
    "0044f0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044f0e0(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x10) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x40) = 0x44f156;\n                arg1 = fcn.00453260(arg1);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x44f139;\n                arg1 = fcn.004533e0(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x40) = 0x44f196;\n                uVar1 = fcn.0044f580(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x40) = 0x44f1aa;\n            in_RAX = fcn.0045d500(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44f1c9;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "0044f280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f280(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_EAX == -1) {\n        fcn.0040a2a0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044f300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044f300(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint unaff_EBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54a3c8 == 0) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = *0x54a3c8 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x54a3c8;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar4;\n            if (uVar4 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44f359;\n                fcn.0040a080();\n                in_RAX = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x54a418;\n            puVar2 = *0x54a420;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x54a418 != NULL)) {\n                **0x54a420 = in_RAX;\n                puVar3 = *0x54a418;\n                puVar2 = in_RAX;\n            }\n            *0x54a420 = puVar2;\n            *0x54a418 = puVar3;\n            if (*0x54a410 == NULL) {\n                *(*0x20 + -0x38) = 0x44f3c8;\n                puVar3 = fcn.00415260();\n                if (puVar3 != NULL) goto code_r0x0044f3d1;\n            }\n            else {\n                puVar3 = *0x54a410;\n                *0x54a410 = **0x54a410;\ncode_r0x0044f3d1:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44f3ed;\n                fcn.0045ce80(uVar4, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar4 = *(*0x20 + -0x30) >> 6;\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 8) = uVar4;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar5 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar5;\n                    for (uVar6 = *(*0x20 + 0x10); 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                        if (0xfbe7 < uVar5) goto code_r0x0044f532;\n                        *(iVar1 + 0x418 + uVar5) = uVar6 | 0x80;\n                        uVar5 = uVar5 + 1;\n                    }\n                    if (uVar5 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar5) = uVar6;\n                        uVar5 = uVar5 + 1;\n                        *(iVar1 + 0x10) = uVar5;\n                        for (; 0x7f < uVar4; uVar4 = uVar4 >> 7) {\n                            if (0xfbe7 < uVar5) goto code_r0x0044f515;\n                            *(iVar1 + 0x418 + uVar5) = uVar4 | 0x80;\n                            uVar5 = uVar5 + 1;\n                        }\n                        if (uVar5 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar5) = uVar4;\n                            *(iVar1 + 0x10) = uVar5 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44f4f9;\n                                fcn.0040a2a0();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44f515;\n                        fcn.0045d480(0xfbe8);\ncode_r0x0044f515:\n                        *(*0x20 + -0x38) = 0x44f525;\n                        fcn.0045d480(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44f532;\n                    fcn.0045d480(0xfbe8);\ncode_r0x0044f532:\n                    *(*0x20 + -0x38) = 0x44f53f;\n                    fcn.0045d480(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44f54c;\n                fcn.0045d480(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44f55d;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44f56c;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1561
    },
    "0044f860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044f860(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x44f8c8;\n                    piVar1 = fcn.00415260();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0044f8ec;\n                    }\n                    goto code_r0x0044f925;\n                }\n            }\n            else {\ncode_r0x0044f8ec:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x44f925;\n                fcn.0045d4a0(0xfff8);\ncode_r0x0044f925:\n                *(*0x20 + -0x28) = 0x44f936;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x44f947;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44f957;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 678
    },
    "0044f9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044f9e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044eb60(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "0044faa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044faa0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x1638) == '\\0') {\n                *(iVar1 + 0x1638) = 1;\n                *(iVar1 + 0x1640) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44faf4;\n            fcn.00432f60();\n        }\n        *(puVar2 + -8) = 0x44fafa;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "0044fb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044fb00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x1638) != '\\0') {\n        if (*(iVar1 + 0x1640) == 0) {\n            fcn.0044eb60(0);\n        }\n        *(iVar1 + 0x1640) = *(iVar1 + 0x1640) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0044fba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044fba0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x1638) != '\\0') {\n                if (*(iVar1 + 0x1640) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x1640);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x1648);\n                    *(*0x20 + -0x50) = 0x44fc17;\n                    fcn.0044eb60(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x1638) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x44fc3e;\n            fcn.00432f60();\n        }\n        *(puVar2 + -8) = 0x44fc45;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 426
    },
    "0044fd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044fd40(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1688) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x44fe3c;\n                    fcn.0044eb60(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x44fe7f;\n                fcn.0044eb60(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1688) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1688) * 8 + 0x55a468);\n                *(*0x20 + -0x68) = 0x44fdf8;\n                fcn.0044eb60(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44fe93;\n            fcn.0045d480(4);\n        }\n        *(puVar3 + -8) = 0x44fe99;\n        fcn.0045ad80();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 689
    },
    "00450180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450180(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044eb60(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "004502e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004502e0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    code **unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t *piVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004502e0:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0xa8;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x60) = 0;\n        *(*0x20 + -0xb8) = *0x20 + -8;\n        *(*0x20 + -0xb0) = 0x450334;\n        iVar5 = fcn.0045d730();\n        unaff_RBP = *(*0x20 + -0xb8);\n        iVar5 = *(iVar5 + 0x28);\n        do {\n            if (iVar5 == 0) {\n                return;\n            }\n            *(*0x20 + -0x70) = iVar5;\n            puVar2 = *(iVar5 + 0x18);\n            if (puVar2 == NULL) {\n                *(*0x20 + -0x50) = 0;\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                *(*0x20 + -0x10) = 0;\n            }\n            else {\n                *(*0x20 + -0x78) = puVar2;\n                *(*0x20 + -0x50) = *puVar2;\n                *(*0x20 + -0xb0) = 0x4503a6;\n                iVar5 = fcn.0044abe0();\n                if (iVar5 == 0) goto code_r0x00450478;\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x58) = unaff_RBX;\n                if (**(*0x20 + -0x70) == 0) {\n                    piVar8 = NULL;\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x70) + 0x12;\n                }\n                *(*0x20 + -0x20) = piVar8;\n                iVar1 = *(iVar5 + 0xc);\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x10) = 0;\n                if (iVar1 == -0x80000000) {\n                    *(*0x20 + -0xb0) = 0x450414;\n                    uVar6 = fcn.00452300(unaff_RBX);\n                    *(*0x20 + -0x18) = uVar6;\n                    *(*0x20 + -0x10) = iVar5;\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            *(*0x20 + -0x48) = *(*0x20 + -0x50);\n            pcVar3 = *unaff_RBX;\n            *(*0x20 + -0xb0) = 0x450450;\n            cVar4 = (*pcVar3)();\n            if (cVar4 == '\\0') {\n                return;\n            }\n            iVar5 = *(*(*0x20 + -0x70) + 0x28);\n            arg1 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n        } while( true );\n    }\n    goto code_r0x004504c6;\ncode_r0x00450478:\n    *(*0x20 + -0x80) = *(*0x20 + -0x50);\n    *(*0x20 + -0xb0) = 0x450487;\n    fcn.004346e0();\n    *(*0x20 + -0xb0) = 0x450498;\n    fcn.00434fe0();\n    *(*0x20 + -0xb0) = 0x4504a5;\n    fcn.00434e40();\n    *(*0x20 + -0xb0) = 0x4504aa;\n    fcn.00434940();\n    *(*0x20 + -0xb0) = 0x4504af;\n    fcn.00434760();\n    unaff_RBX = 0xa;\n    *(*0x20 + -0xb0) = 0x4504c5;\n    in_RAX = fcn.00432f60();\ncode_r0x004504c6:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + -8) = 0x4504da;\n    fcn.0045ad80();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    *0x20 = puVar7;\n    goto code_r0x004502e0;\n}\n",
        "token_count": 1286
    },
    "00451f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451f60(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x2b) < 6) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = in_RAX + *(in_RAX + 0x20) * 4 + 0x2c;\n                if ((iVar4 >> 2 & 1) != 0) {\n                    if ((in_RAX >> 2 & 1) != 0) {\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x30) = iVar4;\n                        *(*0x20 + 0x18) = arg1;\n                        *(*0x20 + -0x60) = 0x451fc5;\n                        fcn.004346e0();\n                        unaff_RBX = 0x19;\n                        *(*0x20 + -0x60) = 0x451fd6;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x60) = 0x451fe5;\n                        fcn.00434f60();\n                        *(*0x20 + -0x60) = 0x451fea;\n                        fcn.00434940();\n                        *(*0x20 + -0x60) = 0x451fef;\n                        fcn.00434760();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    iVar4 = iVar4 + 4;\n                }\n                iVar4 = *(iVar4 + 0x28);\n            }\n            if (iVar4 == 0) {\n                return;\n            }\n            *(*0x20 + -0x28) = iVar4;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x18) = 0x452280;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x42) = 1;\n            uVar2 = 0;\n            while (uVar2 < 0xab) {\n                uVar1 = *(iVar4 + uVar2);\n                uVar5 = uVar2 + 1;\n                *(*0x20 + -0x40) = uVar5;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x60) = 0x45207d;\n                            fcn.004346e0();\n                            *(*0x20 + -0x60) = 0x45208e;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x60) = 0x452093;\n                            fcn.00434760();\n                        }\n                        *(*0x20 + -0x60) = 0x452098;\n                        fcn.004346e0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x60) = 0x4520a9;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x60) = 0x4520ae;\n                        fcn.00434760();\n                        uVar2 = *(*0x20 + -0x40);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x60) = 0x4520d7;\n                            fcn.004346e0();\n                            *(*0x20 + -0x60) = 0x4520e8;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x60) = 0x4520ed;\n                            fcn.00434760();\n                        }\n                        *(*0x20 + -0x60) = 0x4520f2;\n                        fcn.004346e0();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x60) = 0x452105;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x60) = 0x45210a;\n                        fcn.00434760();\n                        uVar2 = *(*0x20 + -0x40);\n                    }\n                    else {\ncode_r0x0045218a:\n                        *(*0x20 + -0x38) = uVar2;\n                        if (*(*0x20 + -0x42) == '\\0') {\n                            *(*0x20 + -0x41) = uVar1;\n                            *(*0x20 + -0x60) = 0x4521a5;\n                            fcn.004346e0();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x60) = 0x4521b6;\n                            fcn.00434fe0();\n                            *(*0x20 + -0x60) = 0x4521bb;\n                            fcn.00434760();\n                            uVar2 = *(*0x20 + -0x38);\n                            iVar4 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x40);\n                        }\n                        if (0xaa < uVar5) {\n                            *(*0x20 + -0x60) = 0x45223c;\n                            fcn.0045d480(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar2 + 1 + iVar4);\n                        *(*0x20 + -0x60) = 0x4521eb;\n                        (**(*0x20 + -0x18))(*(*0x20 + -0x18), *0x20 + -0x18);\n                        uVar2 = *(*0x20 + -0x38) + 2;\n                    }\ncode_r0x00452216:\n                    *(*0x20 + -0x42) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x60) = 0x4521fb;\n                        fcn.004346e0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x60) = 0x45220c;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x60) = 0x452211;\n                        fcn.00434760();\n                        uVar2 = *(*0x20 + -0x40);\n                        goto code_r0x00452216;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x0045218a;\n                    }\n                    if (*(*0x20 + -0x42) == '\\0') {\n                        *(*0x20 + -0x60) = 0x452133;\n                        fcn.004346e0();\n                        *(*0x20 + -0x60) = 0x452145;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x60) = 0x45214a;\n                        fcn.00434760();\n                    }\n                    *(*0x20 + -0x60) = 0x45214f;\n                    fcn.004346e0();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x60) = 0x452165;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x60) = 0x45216a;\n                    fcn.00434760();\n                    *(*0x20 + -0x42) = 1;\n                    uVar2 = *(*0x20 + -0x40);\n                }\n                iVar4 = *(*0x20 + -0x28);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x60) = 0x452246;\n            in_RAX = fcn.0045d480(0xab);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x45225b;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2137
    },
    "00452760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00452760(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044abe0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00453480(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.00452800(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 225
    },
    "00452dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00452dc0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434760();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044abe0();\n        cVar1 = fcn.00453540(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.00452f80(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    iVar2 = fcn.0044abe0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00453540();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.00452800(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 472
    },
    "00453480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00453480(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((0 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00453540(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 216
    },
    "00453540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00453540(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    bool bVar4;\n    uint64_t noname_0;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        param_1 = param_1 & 0xff;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    arg2 = *0x52c188 >> 2;\n    if (uVar1 != 0) {\n        arg2 = uVar1;\n    }\n    if (1 < arg2) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x16') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x13')) && (unaff_SIL != '\\x0f')) {\n        return false;\n    }\n    noname_0 = param_1;\n    piVar3 = fcn.0044b2c0();\n    if ((((unaff_RBX == 0xf) && (noname_0 = 0x2e656d69746e7572,  *piVar3 == 0x2e656d69746e7572)) &&\n        ((*(piVar3 + 1) == 0x61706f67 && ((*(piVar3 + 0xc) == 0x696e && (*(piVar3 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.004022e0(noname_0, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            cVar2 = '\\0';\n        }\n        else {\n            cVar2 = fcn.00402180(8, unaff_RBX);\n        }\n        if (cVar2 == '\\0') {\n            bVar4 = true;\n        }\n        else if (((unaff_RBX < 9) || (*piVar3 != 0x2e656d69746e7572)) || (*(piVar3 + 1) < 0x41)) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *(piVar3 + 1) < 0x5b;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 663
    },
    "00453e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00453e80(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong auStack64 [7];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x543ab8 != 0) {\n        auStack64[0] = 0;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00453fc0(auStack64);\n        }\n        auStack64[0] = 0;\n        fcn.004541c0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434940();\n        fcn.00434760();\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00453fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00453fc0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.004541c0();\n        if (arg1[3] == 0) {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434760();\n        }\n        else {\n            fcn.00449320();\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434940();\n            fcn.00434760();\n        }\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n        if (arg1[1] != 0) {\n            fcn.00449320();\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434900();\n            fcn.00434760();\n        }\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434940();\n        fcn.00434760();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 405
    },
    "004541c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004541c0(void)\n\n{\n    code **ppcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*0x598228 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        ppcVar1 = 0x4b01c8;\n    }\n    else {\n        ppcVar1 = 0x4b0168;\n    }\n    (**ppcVar1)(ppcVar1, ppcVar1);\n    return;\n}\n",
        "token_count": 171
    },
    "00454240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454240(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    code **ppcVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x543ac0 == 0) {\n                return;\n            }\n            if ((*0x598228 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                ppcVar2 = 0x4b01c8;\n            }\n            else {\n                ppcVar2 = 0x4b0168;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *ppcVar2;\n                *(*0x20 + -0x40) = 0x4542ca;\n                (*pcVar1)();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x4542e5;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4542ff;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 634
    },
    "00454320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00454320(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x454345;\n            fcn.00454500();\n            *(*0x20 + -0x20) = 0x45434a;\n            iVar1 = fcn.00454d60(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1U);\n            }\n            *(*0x20 + -0x20) = 0x454396;\n            in_RAX = fcn.0045d540(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4543a5;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "00454a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00454a60(ulong param_1, uint64_t param_2)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_EBX == 0xffffffff) {\n        return CONCAT71(*0x4b0481, *0x4b0480);\n    }\n    for (uVar4 = 0x531960; uVar4 != 0; uVar4 = *(uVar4 + 0x210)) {\n        if ((*(uVar4 + 0x118) < in_RAX || *(uVar4 + 0x118) == in_RAX) &&\n           (in_RAX <= *(uVar4 + 0x120) && *(uVar4 + 0x120) != in_RAX)) goto code_r0x00454ac4;\n    }\n    uVar4 = 0;\ncode_r0x00454ac4:\n    if (uVar4 == 0) {\n        fcn.0040a080();\n        puVar2 = fcn.0040eb20(unaff_EBX);\n        uVar5 = *puVar2;\n        uVar4 = uVar5;\n        fcn.0040a2a0();\n        if (uVar5 != 0) {\n            return uVar5;\n        }\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434760();\n        for (iVar3 = 0x531960; iVar3 != 0; iVar3 = *(iVar3 + 0x210)) {\n            uVar4 = *(iVar3 + 0x118);\n            param_2 = *(iVar3 + 0x120);\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434940();\n            fcn.00434760();\n        }\n        fcn.00432f60();\n        goto code_r0x00454c3b;\n    }\n    param_2 = *(uVar4 + 0x128);\n    uVar5 = *(uVar4 + 0x130);\n    if (uVar5 < 2) {\n        param_2 = unaff_EBX + *(uVar4 + 0xb0);\n        goto code_r0x00454c3b;\n    }\n    iVar3 = 0;\n    do {\n        if (iVar3 < uVar5) {\n            uVar1 = *(param_2 + iVar3 * 0x18);\n            uVar6 = unaff_EBX;\n            if ((uVar1 <= uVar6) && (uVar6 < *(param_2 + 8 + iVar3 * 0x18) + uVar1)) {\n                param_2 = (*(param_2 + 0x10 + iVar3 * 0x18) + uVar6) - uVar1;\n                goto code_r0x00454c3b;\n            }\n        }\n        else {\n            param_2 = 0;\ncode_r0x00454c3b:\n            uVar5 = *(uVar4 + 0xb8);\n            if (param_2 <= uVar5) {\n                return param_2;\n            }\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434fe0();\n            fcn.00434e40();\n            fcn.00434940();\n            fcn.00434760();\n            unaff_EBX = 0x21;\n            iVar3 = fcn.00432f60();\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 994
    },
    "00455080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00455080(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(in_RAX + iVar4 + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00430920();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 1) {\n        uVar3 = uVar3 & 0xffffffffffffff00 | *(in_RAX + 2) == '_';\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 319
    },
    "00455120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00455120(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    uchar (*arg1) [16];\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t arg4;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x531b70 == 0) {\n                return in_RAX;\n            }\n            arg1 = *0x20 + -0x1b8;\n            *arg1 = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x531aa8 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x4551af;\n                fcn.0045d6f8();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x4551cf;\n            uVar5 = fcn.0040cce0(arg1);\n            if (*0x543ae8 == NULL) {\n                piVar16 = NULL;\n                piVar7 = NULL;\n                piVar12 = NULL;\n            }\n            else {\n                piVar7 = **0x543ae8;\n                piVar16 = (*0x543ae8)[1];\n                piVar12 = (*0x543ae8)[2];\n            }\n            if (piVar16 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar19 = *piVar7;\n                iVar13 = (-(piVar12 + -1) >> 0x3f & 8U) + piVar7;\n                *(*0x20 + -0x1f0) = iVar13;\n                iVar21 = piVar16 + -1;\n                *(*0x20 + -0x240) = iVar21;\n                iVar9 = 0;\n                do {\n                    if (iVar21 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar19;\n                    iVar17 = *(iVar13 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar17;\n                    arg4 = *(iVar19 + 0x140);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar20 = *(iVar19 + 0x148);\n                    *(*0x20 + -0x250) = iVar20;\n                    iVar14 = 0;\n                    while (iVar14 < iVar20) {\n                        *(*0x20 + -600) = iVar14;\n                        uVar1 = *(arg4 + iVar14 * 4);\n                        if (*(iVar19 + 0x200) == 0) {\n                            iVar21 = uVar1 + *(iVar19 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455427;\n                            piVar7 = fcn.0040eb20(uVar1);\n                            iVar21 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar21;\n                        uVar1 = *(iVar21 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x45544d;\n                        piVar7 = fcn.0040eb20(uVar1);\n                        uVar11 = piVar7[1];\n                        iVar21 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar13 = 0; iVar13 < uVar11; iVar13 = iVar13 + 1) {\n                            if (*(iVar21 + iVar13 * 8) == iVar9) goto code_r0x004553ab;\n                        }\n                        uVar10 = uVar11 + 1;\n                        uVar6 = uVar11;\n                        iVar13 = iVar21;\n                        uVar18 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar11;\n                            *(*0x20 + -0x2c0) = 0x455485;\n                            iVar13 = fcn.00444ac0(uVar11);\n                            uVar10 = iVar21 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar18 = uVar11;\n                        }\n                        *(*0x20 + -0x210) = iVar13;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar18;\n                        iVar21 = iVar13 + uVar6 * 8;\n                        if (*0x598440 == 0) {\n                            *(iVar13 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x4554ca;\n                            fcn.0045d100(uVar6, iVar9, iVar21, arg4);\n                        }\n                        uVar11 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x4554e5;\n                        puVar8 = fcn.0040ee60(uVar11);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x598440 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455525;\n                            fcn.0045d100(uVar11, *(*0x20 + -0x210), iVar21, arg4);\n                        }\ncode_r0x004553ab:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                        iVar19 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar20 = *(*0x20 + -0x250);\n                        iVar14 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar17 + 0x200) == 0) {\n                        *(*0x20 + -0x2c0) = 0x4552a5;\n                        uVar5 = fcn.0040cce0(0);\n                        uVar11 = *0x5444d0;\n                        uVar10 = *0x5444d8;\n                        uVar6 = *0x5444d0;\n                        if (*0x5444e0 < *0x5444d8 + 1) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x4552d9;\n                            uVar6 = fcn.00444ac0(*0x5444d8);\n                            uVar18 = uVar6;\n                            *0x5444e0 = uVar10;\n                            if (*0x598440 != 0) {\n                                *(*0x20 + -0x2c0) = 0x4552fe;\n                                uVar6 = fcn.0045cfe0(uVar10, iVar13, iVar19, arg4);\n                                uVar18 = *0x5444d0;\n                            }\n                            *0x5444d0 = uVar18;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar10 = uVar11;\n                        }\n                        *0x5444d8 = uVar10 + 1;\n                        if (*0x598440 == 0) {\n                            *(uVar6 + uVar10 * 8) = uVar5;\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(iVar21 + 0x200) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x45533e;\n                            fcn.0045cfe0(uVar10, *0x5444d8, iVar19, arg4);\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x455352;\n                            fcn.0045cfe0(uVar10, iVar21, iVar19, arg4);\n                        }\n                        iVar13 = *(iVar21 + 0x140);\n                        *(*0x20 + -0x200) = iVar13;\n                        iVar19 = *(iVar21 + 0x148);\n                        *(*0x20 + -0x250) = iVar19;\n                        iVar9 = 0;\n                        while (iVar9 < iVar19) {\n                            *(*0x20 + -600) = iVar9;\n                            iVar2 = *(iVar13 + iVar9 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar19 = iVar2 + *(iVar21 + 0x118);\n                            *(*0x20 + -0x208) = iVar19;\n                            uVar1 = *(iVar19 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x455587;\n                            piVar7 = fcn.0040eb20(uVar1);\n                            iVar9 = *piVar7;\n                            *(*0x20 + -0x210) = iVar9;\n                            iVar13 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar13;\n                            iVar21 = 0;\n                            while (iVar21 < iVar13) {\n                                *(*0x20 + -0x268) = iVar21;\n                                *(*0x20 + -0x228) = *(iVar9 + iVar21 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x455679;\n                                fcn.0045d719();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x455692;\n                                uVar4 = fcn.00449600();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x4556b6;\n                                cVar3 = fcn.00455700(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x004555b7;\n                                }\n                                iVar19 = *(*0x20 + -0x268);\n                                iVar9 = *(*0x20 + -0x210);\n                                iVar13 = *(*0x20 + -0x260);\n                                iVar21 = iVar19 + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x004555b7:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar11 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x4555de;\n                            puVar8 = fcn.0040ee60(uVar11);\n                            if (*0x598440 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x455609;\n                                fcn.0045d100(uVar11, *(*0x20 + -0x228), iVar19, arg4);\n                            }\n                            iVar21 = *(*0x20 + -0x1f8);\n                            iVar13 = *(*0x20 + -0x200);\n                            iVar19 = *(*0x20 + -0x250);\n                            iVar9 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar19 = iVar17;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x4556e9;\n            fcn.0045d480(0);\n        }\n        *(puVar15 + -8) = 0x4556ef;\n        in_RAX = fcn.0045ad80();\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 3321
    },
    "00457760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457760(void)\n\n{\n    if (*0x598440 != '\\0') {\n        fcn.00403140();\n    }\n    fcn.004630e0();\n    return;\n}\n",
        "token_count": 46
    },
    "004577c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004577c0(ulong arg1)\n\n{\n    if (*0x598440 != '\\0') {\n        fcn.00403140();\n    }\n    fcn.004630c0(arg1);\n    return;\n}\n",
        "token_count": 52
    },
    "00457a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457a60(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = in_RAX;\n    if (*0x598440 != 0) {\n        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x543af8;\n    }\n    *0x543af8 = uVar1;\n    return;\n}\n",
        "token_count": 168
    },
    "00457be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00457be0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x457c09;\n            iVar2 = fcn.0042c1e0();\n            *(*0x20 + -0x18) = iVar2;\n            *(*0x20 + -0x10) = iVar2 + 8;\n            *(*0x20 + -0x38) = 0x457c25;\n            fcn.0040a080();\n            iVar2 = *(*0x20 + -0x18);\n            if ((*(iVar2 + 0x88) == 0) || (*(iVar2 + 0x88) == 1)) {\n                if ((*(iVar2 + 0x28) == 0) || (*(iVar2 + 0x28) == 1)) {\n                    *(iVar2 + 0x10) = *(*0x20 + 8);\n                    *(iVar2 + 0x18) = 0;\n                    *(iVar2 + 0x20) = *(iVar2 + 0x20) + 1;\n                    *(iVar2 + 0x28) = 0;\n                    *(iVar2 + 0x78) = 0;\n                    *(iVar2 + 0x80) = *(iVar2 + 0x80) + 1;\n                    *(iVar2 + 0x88) = 0;\n                    *(iVar2 + 0xd8) = 0;\n                    *(iVar2 + 0xe0) = iVar2;\n                    *(*0x20 + -0x38) = 0x457cac;\n                    fcn.0040a2a0();\n                    *(*0x20 + -0x38) = 0x457cbb;\n                    iVar1 = fcn.0042c3a0();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x1c) = iVar1;\n                        *(*0x20 + -0x38) = 0x457cd4;\n                        fcn.0042c060();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x457d09;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x38) = 0x457d1a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x457d25;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 757
    },
    "00457d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457d40(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x18) != '\\0') {\n                if ((*(in_RAX + 0x88) == 0) || (*(in_RAX + 0x88) == 1)) {\n                    if ((*(in_RAX + 0x28) == 0) || (*(in_RAX + 0x28) == 1)) {\n                        *(*0x20 + -0x20) = 0x457d8e;\n                        fcn.0042c060();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x457da9;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x20) = 0x457dba;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x20) = 0x457dcb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x457dd6;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 418
    },
    "00457e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457e00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    int64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 8;\n            *(*0x20 + -0x38) = 0x457e31;\n            fcn.0040a080();\n            arg1 = *(*0x20 + 8);\n            if (*(arg1 + 0x18) == '\\0') break;\n            *(*0x20 + -0x38) = 0x457fcf;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x457fda;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n    *(arg1 + 0x18) = 1;\n    *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n    *(arg1 + 0x80) = *(arg1 + 0x80) + 1;\n    *(*0x20 + -0x18) = 0;\n    *(*0x20 + -0x18) = 0;\n    do {\n        uVar4 = *(arg1 + 0x28);\n        if (uVar4 == 1) {\n            uVar4 = 0;\n            goto code_r0x00457e9c;\n        }\n        if (uVar4 == 0) {\n            uVar4 = 0;\n            goto code_r0x00457e9c;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x28;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar4 == uVar2) * *puVar1;\n    } while (uVar4 != uVar2);\n    if (uVar4 == 2) {\n        uVar4 = 0;\n    }\ncode_r0x00457e9c:\n    *(*0x20 + -0x18) = uVar4;\n    while( true ) {\n        uVar4 = *(arg1 + 0x88);\n        if (uVar4 == 1) {\n            uVar4 = 0;\n            goto code_r0x00457ed8;\n        }\n        if (uVar4 == 0) break;\n        LOCK();\n        puVar1 = arg1 + 0x88;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar4 == uVar2) * *puVar1;\n        if (uVar4 == uVar2) {\n            if (uVar4 == 2) {\n                uVar4 = 0;\n            }\ncode_r0x00457ed8:\n            *(*0x20 + -0x20) = uVar4;\n            if (*(arg1 + 0x48) != 0) {\n                *(*0x20 + -0x38) = 0x457eed;\n                fcn.0044c980();\n                if (*0x598440 == 0) {\n                    arg1 = *(*0x20 + 8);\n                    *(arg1 + 0x48) = 0;\n                }\n                else {\n                    arg1 = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = 0x457f15;\n                    fcn.0045d100(arg1, 0, param_3, param_4);\n                }\n            }\n            if (*(arg1 + 0xa8) != 0) {\n                *(*0x20 + -0x38) = 0x457f30;\n                fcn.0044c980();\n                if (*0x598440 == 0) {\n                    *(*(*0x20 + 8) + 0xa8) = 0;\n                }\n                else {\n                    *(*0x20 + -0x38) = 0x457f5e;\n                    fcn.0045d0e0(0);\n                }\n            }\n            *(*0x20 + -0x38) = 0x457f6a;\n            fcn.0040a2a0();\n            iVar3 = *0x59821c;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x59821c = *0x59821c + -1;\n                *(*0x20 + -0x38) = 0x457f8f;\n                fcn.004359a0(iVar3);\n            }\n            iVar3 = *0x59821c;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x59821c = *0x59821c + -1;\n                *(*0x20 + -0x38) = 0x457fb4;\n                fcn.004359a0(iVar3);\n            }\n            return;\n        }\n    }\n    uVar4 = 0;\n    goto code_r0x00457ed8;\n}\n",
        "token_count": 1335
    },
    "004580a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004580a0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack40;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.00432f60();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar5 = fcn.0043d220();\n    if (cVar5 != '\\0') {\n        if (*0x54a3d0 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x274))) {\n                fcn.0045ac40();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.00437220(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x544d78 != '\\0') && (cVar5 = fcn.00440d60(),  cVar5 == '\\0')) {\n            fcn.00435820();\n        }\n        return;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x54a3d0 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x274) == *(iVar2 + 0x14)))) {\n            iStack40 = 0x4b0448;\n            fcn.0045ac40();\n        }\n        fcn.0045ce80(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack40;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    fcn.0045abc0();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return;\n}\n",
        "token_count": 795
    },
    "00458360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00458360(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x598214 < 2)) || (*0x598210 <= *0x544d58 + *0x544d5c + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x5f4) != *(iVar1 + 0x5f4));\n    if ((*(iVar1 + 0x5f4) == *(iVar1 + 0x5f0)) && (*(iVar1 + 0xdf8) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00458660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00458660(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t *puVar5;\n    ulong *puVar6;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if (*0x544570 == 0) {\n        iVar3 = fcn.0040cc60();\n        if (*0x598440 != 0) {\n            fcn.0045cfe0(param_1, param_2, param_3, param_4);\n            iVar3 = *0x544570;\n        }\n        *0x544570 = iVar3;\n        uVar4 = fcn.0040cc60();\n        if (*0x598440 != 0) {\n            fcn.0045cfe0(param_1, param_2, param_3, param_4);\n            uVar4 = *0x544578;\n        }\n        *0x544578 = uVar4;\n        *0x544568 = 0xffffffff;\n    }\n    uVar4 = *0x544578;\n    puVar5 = fcn.0040f5e0(in_RAX);\n    uVar2 = *0x544568;\n    uVar1 = *puVar5;\n    if (uVar4 == '\\0') {\n        arg1 = *0x544568;\n        *0x544568 = *0x544568 - 1;\n        puVar6 = fcn.0040ee60(arg1);\n        if (*0x598440 == 0) {\n            *puVar6 = in_RAX;\n        }\n        else {\n            fcn.0045d0e0();\n        }\n        puVar5 = fcn.0040f780(in_RAX);\n        *puVar5 = uVar2;\n        uVar1 = uVar2;\n    }\n    fcn.0040a2a0();\n    return uVar1;\n}\n",
        "token_count": 523
    },
    "00458b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00458b20(uchar param_1)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    int64_t **ppiVar2;\n    ulong *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t *arg1;\n    uint64_t arg2;\n    ulong uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar *arg1_00;\n    int64_t *piVar9;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar6 = 0x38;\n                }\n                else {\n                    iVar6 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar6 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar6 = 0;\n                    while (iVar6 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar6;\n                        *(*0x20 + -0x100) = 0x458bf6;\n                        fcn.0044bd40();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar6 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x30);\n                    piVar9 = uVar1;\n                    arg1_00 = (*(in_RAX + 0x32) & 0x7fff) + uVar1;\n                    arg1 = arg1_00 & 0xffff;\n                    if (piVar9 <= arg1) {\n                        arg4 = uVar1;\n                        arg3 = piVar9 << 3;\n                        arg1_00 = piVar9 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((*(in_RAX + 0x14) & 1) == 0) {\n                                iVar6 = 0x38;\n                            }\n                            else {\n                                iVar6 = 0x48;\n                            }\n                            arg1 = *(arg1_00 + iVar6 + in_RAX);\n                            if (*arg1 == 8) {\n                                if ((*(in_RAX + 0x14) & 1) == 0) {\n                                    iVar6 = 0x38;\n                                }\n                                else {\n                                    iVar6 = 0x48;\n                                }\n                                uVar5 = *(*(arg1_00 + iVar6 + in_RAX) + 0x17) & 0x1f;\n                                arg1 = uVar5;\n                                cVar4 = uVar5;\n                                if ((cVar4 != '\\r') && (cVar4 != '\\x0e')) {\n                                    if (*0x52c280 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x458d3b;\n                                        fcn.0040a080();\n                                        iVar6 = *0x5981a8;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x458d65;\n                                        ppiVar2 = fcn.0040d100(*0x20 + -0xa8);\n                                        arg1 = *ppiVar2;\n                                        if (iVar6 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x458f08;\n                                            fcn.0040a2a0();\n                                            return *(*0x20 + -0xd8) * 5 + CONCAT71(*0x4b01b9, *0x4b01b8);\n                                        }\n                                        iVar6 = *0x5981a8;\n                                        if (*0x5981a8 == 0) {\n                                            *(*0x20 + -0x100) = 0x458d7f;\n                                            iVar6 = fcn.0040cc60();\n                                            if (*0x598440 != 0) {\n                                                arg1_00 = 0x5981a8;\n                                                *(*0x20 + -0x100) = 0x458d9d;\n                                                fcn.0045cfe0(arg1, arg2, arg3, arg4);\n                                                iVar6 = *0x5981a8;\n                                            }\n                                        }\n                                        *0x5981a8 = iVar6;\n                                        bVar10 = *0x5981b0 < 2000;\n                                        if (*0x5981b0 < 2000) {\n                                            arg1_00 = *0x20 + -0x88;\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x458dcf;\n                                            iVar6 = fcn.0045d730();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar7 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar7;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar10) {\n                                                *(*0x20 + -0xe0) = iVar6;\n                                                *(*0x20 + -200) = iVar6 * 5;\n                                                if (*0x598440 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x458e6f;\n                                                    fcn.0045da9a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x458e8c;\n                                                    fcn.00410c20(*0x20 + -0x58);\n                                                    uVar7 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar7;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x458eb3;\n                                                puVar3 = fcn.0040d540(*0x20 + -0xa8);\n                                                *puVar3 = *(*0x20 + -0xe0);\n                                                *0x5981b0 = *0x5981b0 + 1;\n                                                *(*0x20 + -0x100) = 0x458ed0;\n                                                fcn.0040a2a0();\n                                                return *(*0x20 + -200) + CONCAT71(*0x4b01b9, *0x4b01b8);\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x458f3b;\n                                            fcn.0045d480(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x458f49;\n                                        fcn.0040a2a0();\n                                        *(*0x20 + -0x100) = 0x458f5a;\n                                        fcn.00432f60();\n                                    }\n                                    *(*0x20 + -0x100) = 0x458f6d;\n                                    fcn.004327c0();\n                                }\n                                *(*0x20 + -0x100) = 0x458f85;\n                                fcn.004327c0();\n                            }\n                            *(*0x20 + -0x100) = 0x458f98;\n                            fcn.004327c0();\n                        }\n                        *(*0x20 + -0x100) = 0x458fab;\n                        fcn.004327c0();\n                    }\n                    *(*0x20 + -0x100) = 0x458fb3;\n                    fcn.0045d540(arg1);\n                }\n                *(*0x20 + -0x100) = 0x458fc5;\n                fcn.0045d4c0(arg1_00, 0x100000);\n                param_1 = SUB81(arg1_00, 0);\n            }\n            unaff_RBX = 0x4c7eb8;\n            *(*0x20 + -0x100) = 0x458fd8;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x458fec;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2831
    },
    "00459020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459020(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uint64_t uStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [16];\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x5981d5 == '\\0') {\n        *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2e8) = 1;\n        *(iVar2 + 0x2f0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2e0) = *0x543a38;\n        *(iVar2 + 0x2e8) = 3;\n        auStack32 = ZEXT816(uStackX8);\n        uStack16 = 0x800;\n        *(iVar2 + 0x2f0) = auStack32;\n    }\n    fcn.004031e0();\n    iStackX24 = *(iVar2 + 0x2f8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x308);\n    }\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 447
    },
    "00459c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459c40(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX < 1) {\n        return;\n    }\n    arg1 = *(unaff_R14 + 0x170);\n    if (arg1 == 0) {\n        arg1 = fcn.0040c140();\n        if (*0x598440 == 0) {\n            *(unaff_R14 + 0x170) = arg1;\n        }\n        else {\n            arg1 = fcn.0045cfe0(unaff_R14, noname_1, arg3, in_R9);\n        }\n    }\n    if (*0x598440 == 0) {\n        *(arg1 + 0x18) = 0x4b02d0;\n    }\n    else {\n        fcn.0045d100(arg1, 0x4b02d0, arg3, in_R9);\n    }\n    *(arg1 + 0x20) = 0x493260;\n    if (*0x598440 == 0) {\n        *(arg1 + 0x28) = unaff_R14;\n    }\n    else {\n        fcn.0045d100(arg1, unaff_R14, arg3, in_R9);\n    }\n    fcn.0045ed60();\n    *(arg1 + 0x38) = iStack56 + in_RAX;\n    if (iStack56 + in_RAX < 0) {\n        *(arg1 + 0x38) = 0x7fffffffffffffff;\n    }\n    fcn.00435860(0x13);\n    return;\n}\n",
        "token_count": 452
    },
    "0045cbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045cbc0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar6 = *(in_GS_OFFSET + 0x28);\n    if (*piVar6 != 0) {\n        piVar1 = *(*piVar6 + 0x30);\n        iVar2 = *piVar6;\n        if ((*piVar1 != iVar2) && (piVar1[10] != iVar2)) {\n            iVar3 = *piVar1;\n            pcVar5 = fcn.00459e40();\n            *piVar6 = iVar3;\n            uVar7 = *(iVar3 + 0x38) - 0x40U & 0xfffffffffffffff0;\n            *(uVar7 + 0x30) = iVar2;\n            *(uVar7 + 0x28) = *(iVar2 + 8) - *0x20;\n            *(uVar7 - 8) = 0x45cc33;\n            uVar4 = (*pcVar5)(uStackX16);\n            iVar2 = *(*(uVar7 + 0x30) + 8);\n            iVar3 = *(uVar7 + 0x28);\n            **(in_GS_OFFSET + 0x28) = *(uVar7 + 0x30);\n            *((iVar2 - iVar3) + 0x18) = uVar4;\n            return;\n        }\n    }\n    uVar4 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar4;\n    return;\n}\n",
        "token_count": 413
    },
    "0045cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045cca0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStack32;\n    int64_t *piStack16;\n    \n    piVar3 = *(in_GS_OFFSET + 0x28);\n    iVar4 = 0;\n    if (piVar3 != NULL) {\n        iVar4 = *piVar3;\n    }\n    if (iVar4 == 0) {\n        fcn.0045ec40();\n        (*0x4389e0)();\n        piStack16 = NULL;\n        piVar3 = *(in_GS_OFFSET + 0x28);\n        piVar5 = *(*piVar3 + 0x30);\n        *(*piVar5 + 0x38) = &stack0xffffffffffffffe0;\n    }\n    else {\n        piVar5 = *(iVar4 + 0x30);\n        piStack16 = piVar5;\n    }\n    uStack32 = *(*piVar5 + 0x38);\n    *(*piVar5 + 0x38) = &stack0xffffffffffffffe0;\n    iVar4 = piVar5[0x12];\n    *piVar3 = iVar4;\n    iVar1 = *(iVar4 + 0x38);\n    *(iVar1 + -8) = *(iVar4 + 0x40);\n    *(iVar1 + -0x28) = uStackX8;\n    *(iVar1 + -0x20) = uStackX16;\n    *(iVar1 + -0x18) = uStackX24;\n    *(iVar1 + -0x30) = 0x45cd77;\n    (*0x45eea0)();\n    piVar3 = *(in_GS_OFFSET + 0x28);\n    iVar4 = *piVar3;\n    *(iVar4 + 0x40) = *(iVar1 + -8);\n    *(iVar4 + 0x38) = iVar1;\n    iVar4 = **(*piVar3 + 0x30);\n    *piVar3 = iVar4;\n    puVar2 = *(iVar4 + 0x38);\n    *(iVar4 + 0x38) = *puVar2;\n    if (puVar2[2] == 0) {\n        puVar2[-1] = 0x45cdd6;\n        (*0x45f240)();\n        puVar2[-1] = 0x45cdde;\n        fcn.0045ec40();\n    }\n    return;\n}\n",
        "token_count": 597
    },
    "0045ce80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045ce80(ulong noname_0, ulong arg2)\n\n{\n    rdtsc();\n    return;\n}\n",
        "token_count": 30
    },
    "0045cea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045cea0(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x5981d3 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x598480 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x598700, auVar5 ^ *0x598700);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4c9e20));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4c9d20);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x598710, auVar5 ^ *0x598710);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x598710, auVar5 ^ *0x598710);\n                auVar8 = aesenc(auVar5 ^ *0x598720, auVar5 ^ *0x598720);\n                auVar5 = aesenc(auVar5 ^ *0x598730, auVar5 ^ *0x598730);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x598710, auVar5 ^ *0x598710);\n                auVar8 = aesenc(auVar5 ^ *0x598720, auVar5 ^ *0x598720);\n                auVar9 = aesenc(auVar5 ^ *0x598730, auVar5 ^ *0x598730);\n                auVar10 = aesenc(auVar5 ^ *0x598740, auVar5 ^ *0x598740);\n                auVar11 = aesenc(auVar5 ^ *0x598750, auVar5 ^ *0x598750);\n                auVar12 = aesenc(auVar5 ^ *0x598760, auVar5 ^ *0x598760);\n                auVar5 = aesenc(auVar5 ^ *0x598770, auVar5 ^ *0x598770);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x598710, auVar5 ^ *0x598710);\n            auVar8 = aesenc(auVar5 ^ *0x598720, auVar5 ^ *0x598720);\n            auVar9 = aesenc(auVar5 ^ *0x598730, auVar5 ^ *0x598730);\n            auVar10 = aesenc(auVar5 ^ *0x598740, auVar5 ^ *0x598740);\n            auVar11 = aesenc(auVar5 ^ *0x598750, auVar5 ^ *0x598750);\n            auVar12 = aesenc(auVar5 ^ *0x598760, auVar5 ^ *0x598760);\n            auVar5 = aesenc(auVar5 ^ *0x598770, auVar5 ^ *0x598770);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3907
    },
    "0045cec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045cec0(void)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uchar (**in_RAX) [16];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    \n    if (*0x5981d3 == '\\0') {\n        while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n            fcn.0045ad80();\n        }\n        uVar3 = fcn.00408a60(in_RAX[1]);\n        return uVar3;\n    }\n    pauVar1 = in_RAX[1];\n    pauVar2 = *in_RAX;\n    auVar4 = pinsrw(ZEXT816(unaff_RBX), pauVar1, 4);\n    auVar4 = pshufhw(auVar4, auVar4, 0);\n    auVar5 = aesenc(auVar4 ^ *0x598700, auVar4 ^ *0x598700);\n    if (pauVar1 < 0x10) {\n        if (pauVar1 == NULL) {\n            auVar4 = aesenc(auVar5, auVar5);\n            return SUB168(auVar4, 0);\n        }\n        if ((pauVar2[1] & 0xff0) == 0) {\n            auVar4 = pshufb(*(*pauVar1 + pauVar2[-1]), *(pauVar1 * 0x10 + 0x4c9e20));\n        }\n        else {\n            auVar4 = *pauVar2 & *(pauVar1 * 0x10 + 0x4c9d20);\n        }\n    }\n    else {\n        if (pauVar1 != 0x10) {\n            if (pauVar1 < 0x21) {\n                auVar4 = aesenc(auVar4 ^ *0x598710, auVar4 ^ *0x598710);\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                return SUB168(auVar4, 0) ^ SUB168(auVar5, 0);\n            }\n            if (pauVar1 < 0x41) {\n                auVar6 = aesenc(auVar4 ^ *0x598710, auVar4 ^ *0x598710);\n                auVar7 = aesenc(auVar4 ^ *0x598720, auVar4 ^ *0x598720);\n                auVar4 = aesenc(auVar4 ^ *0x598730, auVar4 ^ *0x598730);\n                auVar7 = *(*pauVar1 + pauVar2[-2]) ^ auVar7;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                return SUB168(auVar4, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar5, 0) ^ SUB168(auVar7, 0);\n            }\n            if (pauVar1 <= pe_nt_image_headers64) {\n                auVar6 = aesenc(auVar4 ^ *0x598710, auVar4 ^ *0x598710);\n                auVar7 = aesenc(auVar4 ^ *0x598720, auVar4 ^ *0x598720);\n                auVar8 = aesenc(auVar4 ^ *0x598730, auVar4 ^ *0x598730);\n                auVar9 = aesenc(auVar4 ^ *0x598740, auVar4 ^ *0x598740);\n                auVar10 = aesenc(auVar4 ^ *0x598750, auVar4 ^ *0x598750);\n                auVar11 = aesenc(auVar4 ^ *0x598760, auVar4 ^ *0x598760);\n                auVar4 = aesenc(auVar4 ^ *0x598770, auVar4 ^ *0x598770);\n                auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n                auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n                auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(pauVar2[2] ^ auVar7, pauVar2[2] ^ auVar7);\n                auVar8 = aesenc(pauVar2[3] ^ auVar8, pauVar2[3] ^ auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                       SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n            }\n            auVar6 = aesenc(auVar4 ^ *0x598710, auVar4 ^ *0x598710);\n            auVar7 = aesenc(auVar4 ^ *0x598720, auVar4 ^ *0x598720);\n            auVar8 = aesenc(auVar4 ^ *0x598730, auVar4 ^ *0x598730);\n            auVar9 = aesenc(auVar4 ^ *0x598740, auVar4 ^ *0x598740);\n            auVar10 = aesenc(auVar4 ^ *0x598750, auVar4 ^ *0x598750);\n            auVar11 = aesenc(auVar4 ^ *0x598760, auVar4 ^ *0x598760);\n            auVar4 = aesenc(auVar4 ^ *0x598770, auVar4 ^ *0x598770);\n            auVar5 = *(*pauVar1 + pauVar2[-8]) ^ auVar5;\n            auVar6 = *(*pauVar1 + pauVar2[-7]) ^ auVar6;\n            auVar7 = *(*pauVar1 + pauVar2[-6]) ^ auVar7;\n            auVar8 = *(*pauVar1 + pauVar2[-5]) ^ auVar8;\n            auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n            auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n            auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n            auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n            uVar3 = pauVar1[-1] + 0xf >> 7;\n            do {\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, *pauVar2);\n                auVar6 = aesenc(auVar6, pauVar2[1]);\n                auVar7 = aesenc(auVar7, pauVar2[2]);\n                auVar8 = aesenc(auVar8, pauVar2[3]);\n                auVar9 = aesenc(auVar9, pauVar2[4]);\n                auVar10 = aesenc(auVar10, pauVar2[5]);\n                auVar11 = aesenc(auVar11, pauVar2[6]);\n                auVar4 = aesenc(auVar4, pauVar2[7]);\n                pauVar2 = pauVar2[8];\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar4, auVar4);\n            auVar4 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar4 = aesenc(auVar4, auVar4);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                   SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n        }\n        auVar4 = *pauVar2;\n    }\n    auVar4 = aesenc(auVar4 ^ auVar5, auVar4 ^ auVar5);\n    auVar4 = aesenc(auVar4, auVar4);\n    auVar4 = aesenc(auVar4, auVar4);\n    return SUB168(auVar4, 0);\n}\n",
        "token_count": 3187
    },
    "0045cee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045cee0(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x5981d3 != '\\0') {\n        auVar1 = pinsrd(ZEXT816(unaff_RBX), *in_RAX, 2);\n        auVar1 = aesenc(auVar1, *0x598700);\n        auVar1 = aesenc(auVar1, *0x598710);\n        auVar1 = aesenc(auVar1, *0x598720);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x598480 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d124b) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 288
    },
    "0045cf20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045cf20(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x5981d3 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x598700);\n        auVar1 = aesenc(auVar1, *0x598710);\n        auVar1 = aesenc(auVar1, *0x598720);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x598480 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 288
    },
    "0045db00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045db00(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar in_YMM0 [32];\n    uchar auVar7 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        if (unaff_RBX == 0) {\n            return;\n        }\n        if (unaff_RBX < 3) {\n            (*in_RAX)[0] = 0;\n            in_RAX[-1][unaff_RBX + 0x1f] = 0;\n            return;\n        }\n        if (unaff_RBX < 5) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n            return;\n        }\n        if (unaff_RBX < 8) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n            return;\n        }\n        if (unaff_RBX == 8) {\n            **in_RAX = 0;\n            return;\n        }\n        if (unaff_RBX < 0x11) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n            return;\n        }\n        if (unaff_RBX < 0x21) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x41) break;\n        if (unaff_RBX < 0x81) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x101) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (*0x598a23 == '\\x01') {\n            auVar7 = vpxor_avx2(in_YMM0, in_YMM0);\n            if (0x1ffffff < unaff_RBX) {\n                auVar2 = vmovdqu_avx(auVar7);\n                *in_RAX = auVar2;\n                uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n                pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n                do {\n                    pauVar6 = pauVar5;\n                    uVar4 = uVar3;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    *pauVar6 = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[1] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[2] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[3] = auVar2;\n                    uVar3 = uVar4 - 0x80;\n                    pauVar5 = pauVar6[4];\n                } while (0x7f < uVar4 - 0x80);\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-1] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-2] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-3] + uVar4) = auVar2;\n                auVar7 = vmovdqu_avx(auVar7);\n                *(pauVar6[-4] + uVar4) = auVar7;\n                vzeroupper_avx();\n                return;\n            }\n            do {\n                pauVar5 = in_RAX;\n                uVar3 = unaff_RBX;\n                auVar2 = vmovdqu_avx(auVar7);\n                *pauVar5 = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[1] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[2] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[3] = auVar2;\n                unaff_RBX = uVar3 - 0x80;\n                in_RAX = pauVar5[4];\n            } while (0x7f < uVar3 - 0x80);\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-1] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-2] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-3] + uVar3) = auVar2;\n            auVar7 = vmovdqu_avx(auVar7);\n            *(pauVar5[-4] + uVar3) = auVar7;\n            vzeroupper_avx();\n            return;\n        }\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    **in_RAX = in_XMM15_Da;\n    *(*in_RAX + 4) = in_XMM15_Db;\n    *(*in_RAX + 8) = in_XMM15_Dc;\n    *(*in_RAX + 0xc) = in_XMM15_Dd;\n    *(*in_RAX + 0x10) = in_XMM15_Da;\n    *(*in_RAX + 0x14) = in_XMM15_Db;\n    *(*in_RAX + 0x18) = in_XMM15_Dc;\n    *(*in_RAX + 0x1c) = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4866
    },
    "0045ddc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045ddc0(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x5981d2 & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x598a26 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13219
    },
    "0045ed60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ed60(void)\n\n{\n    if (*0x5981d6 == '\\0') {\n        return;\n    }\n    fcn.0042dbc0();\n    return;\n}\n",
        "token_count": 44
    },
    "0045edc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045edc0(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x5981d6 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042dc40();\n    return iVar1;\n}\n",
        "token_count": 104
    },
    "0045f040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045f040(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t in_GS_OFFSET;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    while (puVar1 = iVar2 + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n        fcn.0045ad80();\n    }\n    uVar3 = CONCAT71(*0x4b0171, *0x4b0170);\n    if (*0x598440 != 0) {\n        fcn.0045cfe0(arg1, arg2, arg3, arg4);\n        uVar3 = *0x543aa8;\n    }\n    *0x543aa8 = uVar3;\n    fcn.00444660();\n    fcn.0042cca0();\n    fcn.00443d20();\n    fcn.00443dc0();\n    fcn.0042d720();\n    *0x598234 = fcn.0042d660();\n    fcn.0042d7e0();\n    *0x598214 = fcn.0042d540();\n    fcn.0042f620();\n    *0x598358 = uVar4;\n    fcn.0042f6a0();\n    return;\n}\n",
        "token_count": 341
    },
    "0045f0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045f0e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.0045abc0();\n    }\n    else {\n        fcn.0045abc0();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 120
    },
    "0045f1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436684)\n\nvoid fcn.0045f1e0(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x544d38 = 10000;\n            iVar2 = 0x531960;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x43659a;\n                fcn.0044a240();\n                iVar2 = *(*(puVar4 + -0x20) + 0x210);\n            }\n            *(puVar4 + -0x58) = 0x4365b0;\n            fcn.004451a0();\n            *(puVar4 + -0x58) = 0x4365b5;\n            fcn.0040aa20();\n            *(puVar4 + -0x58) = 0x4365ca;\n            fcn.0042e020(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x4365e5;\n            fcn.004368e0(uVar1);\n            *(puVar4 + -0x58) = 0x4365ea;\n            fcn.004364e0();\n            *(puVar4 + -0x58) = 0x4365ef;\n            fcn.00403080();\n            *(puVar4 + -0x58) = 0x4365f4;\n            fcn.0044a000();\n            *(puVar4 + -0x58) = 0x4365f9;\n            fcn.00455120();\n            *(puVar4 + -0x58) = 0x4365fe;\n            fcn.004095e0();\n            *(puVar4 + -0x58) = 0x43660e;\n            fcn.0042e0c0();\n            *(puVar4 + -0x58) = 0x436613;\n            fcn.00442700();\n            *(puVar4 + -0x58) = 0x436618;\n            fcn.004169e0();\n            *(puVar4 + -0x58) = 0x436626;\n            fcn.0040a080();\n            *(puVar4 + -0x58) = 0x43662b;\n            fcn.0045ed60();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x544d08 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x598214;\n            *(puVar4 + -0x58) = 0x436665;\n            fcn.00406bc0();\n            *(puVar4 + -0x58) = 0x43666a;\n            fcn.00449240();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x436693;\n            iVar3 = fcn.0043ec80();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x4366aa;\n                fcn.0040a2a0();\n                if (1 < *0x598620) {\n                    *0x598445 = 1;\n                    *0x598440 = CONCAT31(*0x598441, 1);\n                    *(puVar4 + -0x10) = *0x544450;\n                    *(puVar4 + -0x28) = *0x544458;\n                    iVar2 = 0;\n                    arg1 = *0x544450;\n                    param_2 = *0x544458;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x436785;\n                        fcn.0042bbe0(arg1, iVar2 + 0x16c0);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x53d058 == 0) {\n                    *0x53d058 = 7;\n                    if (*0x598440 == 0) {\n                        *0x53d050 = 0x4a6931;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x436726;\n                        fcn.0045cfe0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x53d0a8 == 1) {\n                    *0x53d0a8 = 0;\n                    if (*0x598440 == 0) {\n                        *0x53d0a0 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x43675f;\n                        fcn.0045cfe0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x4367b6;\n            fcn.00432f60();\n        }\n        *(puVar5 + -8) = 0x4367bc;\n        fcn.0045ad80();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1462
    },
    "0045f220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045f220(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00437f40();\n    fcn.004380e0();\n    return;\n}\n",
        "token_count": 199
    },
    "0045f300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442506)\n// WARNING: Removing unreachable block (ram,0x00442508)\n// WARNING: Removing unreachable block (ram,0x0044250e)\n// WARNING: Removing unreachable block (ram,0x00442529)\n// WARNING: Removing unreachable block (ram,0x0044252f)\n// WARNING: Removing unreachable block (ram,0x00442531)\n// WARNING: Removing unreachable block (ram,0x00442537)\n// WARNING: Removing unreachable block (ram,0x0044254a)\n// WARNING: Removing unreachable block (ram,0x00442550)\n// WARNING: Removing unreachable block (ram,0x00442569)\n// WARNING: Removing unreachable block (ram,0x0044256b)\n// WARNING: Removing unreachable block (ram,0x00442577)\n// WARNING: Removing unreachable block (ram,0x00442591)\n// WARNING: Removing unreachable block (ram,0x00442593)\n// WARNING: Removing unreachable block (ram,0x004425b2)\n// WARNING: Removing unreachable block (ram,0x004425bc)\n// WARNING: Removing unreachable block (ram,0x004425cd)\n// WARNING: Removing unreachable block (ram,0x00442574)\n// WARNING: Removing unreachable block (ram,0x004425de)\n// WARNING: Removing unreachable block (ram,0x004425ef)\n// WARNING: Removing unreachable block (ram,0x00442605)\n// WARNING: Removing unreachable block (ram,0x00442616)\n// WARNING: Removing unreachable block (ram,0x00442627)\n\nvoid fcn.0045f300(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0;\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0;\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x442649;\n                                                fcn.00432f60();\n                                            }\n                                            *(puVar8 + -0x48) = 0x44265a;\n                                            fcn.00432f60();\n                                        }\n                                        *(puVar8 + -0x48) = 0x44266b;\n                                        fcn.00432f60();\n                                    }\n                                    *(puVar8 + -0x48) = 0x44267c;\n                                    fcn.00432f60();\n                                }\n                                *(puVar8 + -0x48) = 0x44268d;\n                                fcn.00432f60();\n                            }\n                            *(puVar8 + -0x48) = 0x44269e;\n                            fcn.00432f60();\n                        }\n                        *(puVar8 + -0x48) = 0x4426af;\n                        fcn.00432f60();\n                    }\n                    *(puVar8 + -0x48) = 0x4426c5;\n                    fcn.00432f60();\n                }\n                *(puVar8 + -0x48) = 0x4426d6;\n                fcn.00432f60();\n            }\n            *(puVar8 + -0x48) = 0x4426e7;\n            fcn.00432f60();\n        }\n        *(puVar9 + -8) = 0x4426ed;\n        fcn.0045ad80();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1680
    },
    "0045f440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045f440(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t **ppuVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    ulong *puVar12;\n    ulong uVar13;\n    uint64_t uVar14;\n    ulong unaff_RBX;\n    uchar *puVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar15 = *0x20;\n    do {\n        puVar16 = puVar15;\n        if (*(iVar9 + 0x10) <= puVar15 + -0x128 && puVar15 + -0x128 != *(iVar9 + 0x10)) {\n            puVar16 = puVar15 + -0x1a8;\n            *(puVar15 + -8) = unaff_RBP;\n            unaff_RBP = puVar15 + -8;\n            puVar12 = *(iVar9 + 0x30);\n            puVar1 = puVar12[3];\n            if (puVar1[2] != 0xfffffffffffffb2e) {\n                *(puVar15 + -0xf0) = iVar9;\n                puVar10 = puVar12[0x12];\n                *(puVar15 + -0xe0) = puVar10;\n                if (puVar1 == puVar10) break;\n                *(puVar15 + -200) = puVar12;\n                *(puVar15 + -0x130) = puVar1;\n                *(puVar15 + -0xd0) = *puVar12;\n                *(puVar15 + -0xd8) = puVar12[10];\n                *(puVar15 + -0x1b0) = 0x4474de;\n                fcn.004346e0();\n                *(puVar15 + -0x1b0) = 0x4474ef;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x4474f9;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x44750a;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x447517;\n                fcn.00434f60();\n                *(puVar15 + -0x1b0) = 0x447528;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x447535;\n                fcn.00434f60();\n                *(puVar15 + -0x1b0) = 0x447546;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x447553;\n                fcn.00434f60();\n                *(puVar15 + -0x1b0) = 0x447565;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x447572;\n                fcn.00434f60();\n                *(puVar15 + -0x1b0) = 0x447577;\n                fcn.00434940();\n                *(puVar15 + -0x1b0) = 0x44757c;\n                fcn.00434760();\n                iVar4 = *(*(puVar15 + -0xf0) + 0x30);\n                *(puVar15 + -0x40) = *(iVar4 + 8);\n                uVar5 = *(iVar4 + 0x14);\n                uVar6 = *(iVar4 + 0x18);\n                uVar7 = *(iVar4 + 0x1c);\n                *(puVar15 + -0x38) = *(iVar4 + 0x10);\n                *(puVar15 + -0x34) = uVar5;\n                *(puVar15 + -0x30) = uVar6;\n                *(puVar15 + -0x2c) = uVar7;\n                uVar5 = *(iVar4 + 0x24);\n                uVar6 = *(iVar4 + 0x28);\n                uVar7 = *(iVar4 + 0x2c);\n                *(puVar15 + -0x28) = *(iVar4 + 0x20);\n                *(puVar15 + -0x24) = uVar5;\n                *(puVar15 + -0x20) = uVar6;\n                *(puVar15 + -0x1c) = uVar7;\n                uVar5 = *(iVar4 + 0x34);\n                uVar6 = *(iVar4 + 0x38);\n                uVar7 = *(iVar4 + 0x3c);\n                *(puVar15 + -0x18) = *(iVar4 + 0x30);\n                *(puVar15 + -0x14) = uVar5;\n                *(puVar15 + -0x10) = uVar6;\n                *(puVar15 + -0xc) = uVar7;\n                *(puVar15 + -0x1b0) = 0x4475e5;\n                fcn.00452aa0(*(puVar15 + -0x18));\n                *(puVar15 + -0x1b0) = 0x4475f6;\n                fcn.00432f60();\n            }\n            unaff_RBX = 0x17;\n            *(puVar15 + -0x1b0) = 0x447607;\n            fcn.00432f60();\n        }\n        *(puVar16 + -8) = 0x44760d;\n        fcn.0045ad80();\n        puVar15 = puVar16;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar15 + -0xb0) = puVar12[1];\n        uVar5 = *(puVar12 + 0x14);\n        uVar6 = *(puVar12 + 3);\n        uVar7 = *(puVar12 + 0x1c);\n        *(puVar15 + -0xa8) = *(puVar12 + 2);\n        *(puVar15 + -0xa4) = uVar5;\n        *(puVar15 + -0xa0) = uVar6;\n        *(puVar15 + -0x9c) = uVar7;\n        uVar5 = *(puVar12 + 0x24);\n        uVar6 = *(puVar12 + 5);\n        uVar7 = *(puVar12 + 0x2c);\n        *(puVar15 + -0x98) = *(puVar12 + 4);\n        *(puVar15 + -0x94) = uVar5;\n        *(puVar15 + -0x90) = uVar6;\n        *(puVar15 + -0x8c) = uVar7;\n        uVar5 = *(puVar12 + 0x34);\n        uVar6 = *(puVar12 + 7);\n        uVar7 = *(puVar12 + 0x3c);\n        *(puVar15 + -0x88) = *(puVar12 + 6);\n        *(puVar15 + -0x84) = uVar5;\n        *(puVar15 + -0x80) = uVar6;\n        *(puVar15 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar12 = puVar10[2];\n        *(puVar15 + -0x138) = puVar12;\n        if ((puVar12 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar15 + -0x1a8) = puVar10 + 7;\n            *(puVar15 + -0x1b0) = 0x446b71;\n            fcn.0045aba0();\n            puVar10 = *(puVar15 + -0xe0);\n            puVar12 = *(puVar15 + -0x138);\n        }\n        uVar14 = *puVar10;\n        if (uVar14 != 0) {\n            uVar2 = puVar10[7];\n            uVar11 = uVar2 - 8;\n            *(puVar15 + -0x178) = uVar11;\n            if (uVar11 < uVar14) {\n                *(puVar15 + -0x140) = uVar14;\n                *(puVar15 + -0x148) = uVar2;\n                *(puVar15 + -0x150) = puVar10[1];\n                *(puVar15 + -0xf8) = *(puVar15 + -0xa8);\n                *(puVar15 + -0x100) = *(puVar15 + -0xb0);\n                *(puVar15 + -0x108) = *(puVar15 + -0x88);\n                *(puVar15 + -0x110) = puVar10[8];\n                *(puVar15 + -0x118) = puVar10[0xc];\n                *(puVar15 + -0xb8) = puVar10[10];\n                *(puVar15 + -0x1b0) = 0x446c25;\n                fcn.004346e0();\n                *(puVar15 + -0x1b0) = 0x446c36;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446c45;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446c56;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446c65;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446c76;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446c85;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446c96;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446ca5;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446cb6;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446cc5;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446cd6;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446ce5;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446cf6;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446d05;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446d16;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446d25;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446d36;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446d45;\n                fcn.00434e40();\n                *(puVar15 + -0x1b0) = 0x446d56;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446d65;\n                fcn.00434f60();\n                *(puVar15 + -0x1b0) = 0x446d76;\n                fcn.00434fe0();\n                *(puVar15 + -0x1b0) = 0x446d7b;\n                fcn.00434760();\n                puVar10 = *(puVar15 + -0xe0);\n                puVar12 = *(puVar15 + -0x138);\n                uVar11 = *(puVar15 + -0x178);\n            }\n            if (*puVar10 < uVar11 || *puVar10 == uVar11) {\n                if (puVar12 != 0xfffffffffffffade) {\ncode_r0x00446e1a:\n                    uVar14 = puVar10[1];\n                    uVar11 = *puVar10;\n                    *(puVar15 + -0x160) = uVar14 - uVar11;\n                    uVar2 = puVar10[8];\n                    *(puVar15 + -0x1b0) = 0x446e32;\n                    iVar9 = fcn.0044abe0(uVar14 - uVar11, uVar2);\n                    uVar14 = *(puVar15 + -0x160);\n                    uVar11 = uVar14 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar15 + -0x120) = uVar11;\n                        *(puVar15 + -0x1b0) = 0x446e52;\n                        iVar8 = fcn.0044b8c0();\n                        for (uVar11 = *(puVar15 + -0x120);\n                            uVar11 - (*(*(puVar15 + -0xe0) + 8) - *(*(puVar15 + -0xe0) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar11 = uVar11 << 1) {\n                        }\n                        uVar14 = *(puVar15 + -0x160);\n                    }\n                    if (*(*(puVar15 + -0xe0) + 0x10) == -0x113) {\n                        uVar11 = uVar14;\n                    }\n                    if ((uVar11 <= *0x52c2b0) && (uVar11 <= *0x52c2a8)) {\n                        *(puVar15 + -0x158) = uVar11;\n                        *(puVar15 + -0x1b0) = 0x446ebd;\n                        fcn.00437220(8);\n                        *(puVar15 + -0x1b0) = 0x446ecf;\n                        fcn.004466c0();\n                        *(puVar15 + -0x1b0) = 0x446ee6;\n                        fcn.00437220(2);\n                        *(puVar15 + -0x1a8) = *(puVar15 + -0xe0) + 0x38;\n                        *(puVar15 + -0x1b0) = 0x446efb;\n                        fcn.0045aba0();\n                        return;\n                    }\n                    if (*0x52c2a8 <= *0x52c2b0) goto code_r0x0044700c;\n                    *(puVar15 + -0x1b0) = 0x446f32;\n                    fcn.004346e0();\n                    *(puVar15 + -0x1b0) = 0x446f45;\n                    fcn.00434fe0();\n                    *(puVar15 + -0x1b0) = 0x446f51;\n                    fcn.00434ce0();\n                    *(puVar15 + -0x1b0) = 0x446f65;\n                    fcn.00434fe0();\n                    *(puVar15 + -0x1b0) = 0x446f6a;\n                    fcn.00434760();\n                    do {\n                        *(puVar15 + -0x140) = **(puVar15 + -0xe0);\n                        *(puVar15 + -0x148) = (*(puVar15 + -0xe0))[1];\n                        *(puVar15 + -0x1b0) = 0x446f88;\n                        fcn.004346e0();\n                        *(puVar15 + -0x1b0) = 0x446f99;\n                        fcn.00434fe0();\n                        *(puVar15 + -0x1b0) = 0x446fa5;\n                        fcn.00434e40();\n                        *(puVar15 + -0x1b0) = 0x446fb6;\n                        fcn.00434fe0();\n                        *(puVar15 + -0x1b0) = 0x446fc5;\n                        fcn.00434e40();\n                        *(puVar15 + -0x1b0) = 0x446fd6;\n                        fcn.00434fe0();\n                        *(puVar15 + -0x1b0) = 0x446fe5;\n                        fcn.00434e40();\n                        *(puVar15 + -0x1b0) = 0x446ff6;\n                        fcn.00434fe0();\n                        *(puVar15 + -0x1b0) = 0x446ffb;\n                        fcn.00434760();\n                        *(puVar15 + -0x1b0) = 0x44700c;\n                        fcn.00432f60();\ncode_r0x0044700c:\n                        *(puVar15 + -0x1b0) = 0x447011;\n                        fcn.004346e0();\n                        *(puVar15 + -0x1b0) = 0x447025;\n                        fcn.00434fe0();\n                        *(puVar15 + -0x1b0) = 0x447031;\n                        fcn.00434ce0();\n                        *(puVar15 + -0x1b0) = 0x447045;\n                        fcn.00434fe0();\n                        *(puVar15 + -0x1b0) = 0x44704a;\n                        fcn.00434760();\n                    } while( true );\n                }\n                ppuVar3 = *(*(puVar15 + -0xf0) + 0x30);\n                if (*ppuVar3 != puVar10) {\n                    if ((ppuVar3[0x14] != NULL) || (*(ppuVar3 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar15 + -0x1b0) = 0x446de5;\n                            fcn.00447620();\n                            puVar10 = *(puVar15 + -0xe0);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar15 + -0x1b0) = 0x446e05;\n                            fcn.0043c260();\n                        }\n                        *(puVar15 + -0x1b0) = 0x446e12;\n                        fcn.0043c1e0();\n                        puVar10 = *(puVar15 + -0xe0);\n                        goto code_r0x00446e1a;\n                    }\n                    *(puVar15 + -0x1b0) = 0x447085;\n                    fcn.00432f60();\n                }\n                *(puVar15 + -0x1b0) = 0x447096;\n                puVar10 = fcn.00432f60();\n            }\n            puVar12 = *(puVar10 + 0x12);\n            *(puVar15 + -0x17c) = *(puVar10 + 0x12);\n            *(puVar15 + -0x128) = puVar10[0x13];\n            *(puVar15 + -0x1b0) = 0x4470b4;\n            fcn.004346e0();\n            *(puVar15 + -0x1b0) = 0x4470c5;\n            fcn.00434fe0();\n            *(puVar15 + -0x1b0) = 0x4470d2;\n            fcn.00434f60();\n            *(puVar15 + -0x1b0) = 0x4470e5;\n            fcn.00434fe0();\n            *(puVar15 + -0x1b0) = 0x4470f2;\n            fcn.00434de0();\n            *(puVar15 + -0x1b0) = 0x447105;\n            fcn.00434fe0();\n            *(puVar15 + -0x1b0) = 0x447110;\n            fcn.00434e40();\n            *(puVar15 + -0x1b0) = 0x447125;\n            fcn.00434fe0();\n            *(puVar15 + -0x1b0) = 0x44712a;\n            fcn.00434760();\n            *(puVar15 + -0x140) = **(puVar15 + -0xe0);\n            *(puVar15 + -0x1b0) = 0x44713f;\n            fcn.004346e0();\n            *(puVar15 + -0x1b0) = 0x447150;\n            fcn.00434fe0();\n            *(puVar15 + -0x1b0) = 0x44715a;\n            fcn.00434e40();\n            *(puVar15 + -0x1b0) = 0x44716b;\n            fcn.00434fe0();\n            *(puVar15 + -0x1b0) = 0x447175;\n            fcn.00434e40();\n            *(puVar15 + -0x1b0) = 0x44717a;\n            fcn.00434940();\n            *(puVar15 + -0x1b0) = 0x44717f;\n            fcn.00434760();\n            *(puVar15 + -0x1b0) = 0x447190;\n            fcn.00432f60();\n        }\n        unaff_RBX = 0x19;\n        *(puVar15 + -0x1b0) = 0x4471a5;\n        puVar10 = fcn.00432f60();\n    }\n    *(puVar15 + -0x78) = puVar12[1];\n    uVar5 = *(puVar12 + 0x14);\n    uVar6 = *(puVar12 + 3);\n    uVar7 = *(puVar12 + 0x1c);\n    *(puVar15 + -0x70) = *(puVar12 + 2);\n    *(puVar15 + -0x6c) = uVar5;\n    *(puVar15 + -0x68) = uVar6;\n    *(puVar15 + -100) = uVar7;\n    uVar5 = *(puVar12 + 0x24);\n    uVar6 = *(puVar12 + 5);\n    uVar7 = *(puVar12 + 0x2c);\n    *(puVar15 + -0x60) = *(puVar12 + 4);\n    *(puVar15 + -0x5c) = uVar5;\n    *(puVar15 + -0x58) = uVar6;\n    *(puVar15 + -0x54) = uVar7;\n    uVar5 = *(puVar12 + 0x34);\n    uVar6 = *(puVar12 + 7);\n    uVar7 = *(puVar12 + 0x3c);\n    *(puVar15 + -0x50) = *(puVar12 + 6);\n    *(puVar15 + -0x4c) = uVar5;\n    *(puVar15 + -0x48) = uVar6;\n    *(puVar15 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar15 + -0x78);\n    puVar10[0xf] = *(puVar15 + -0x70);\n    uVar14 = puVar10[8];\n    *(puVar15 + -0x1b0) = 0x4471f9;\n    iVar9 = fcn.0044abe0(uVar14);\n    if (iVar9 != 0) goto code_r0x00447486;\n    unaff_RBX = 9;\n    uVar13 = 0x4a6c72;\n    iVar9 = 0;\n    do {\n        *(puVar15 + -0x168) = unaff_RBX;\n        *(puVar15 + -0xe8) = uVar13;\n        *(puVar15 + -0x170) = iVar9;\n        puVar12 = *(puVar15 + -0xe0);\n        *(puVar15 + -0x140) = puVar12[7];\n        *(puVar15 + -0x148) = *puVar12;\n        *(puVar15 + -0x150) = puVar12[1];\n        *(puVar15 + -0xf8) = *(puVar15 + -0x70);\n        *(puVar15 + -0x100) = *(puVar15 + -0x78);\n        *(puVar15 + -0x108) = *(puVar15 + -0x50);\n        *(puVar15 + -0x110) = puVar12[8];\n        *(puVar15 + -0x118) = puVar12[0xc];\n        *(puVar15 + -0xb8) = puVar12[10];\n        *(puVar15 + -0x1b0) = 0x4472a5;\n        fcn.004346e0();\n        *(puVar15 + -0x1b0) = 0x4472b6;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x4472c8;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x4472d9;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x4472e5;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x4472f6;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447305;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x447316;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447325;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x447336;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447345;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x447356;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447365;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x447376;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447385;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x447396;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x4473a5;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x4473b6;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x4473c5;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x4473d6;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x4473e5;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x4473f6;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447405;\n        fcn.00434e40();\n        *(puVar15 + -0x1b0) = 0x447416;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x447425;\n        fcn.00434f60();\n        *(puVar15 + -0x1b0) = 0x447436;\n        fcn.00434fe0();\n        *(puVar15 + -0x1b0) = 0x44743b;\n        fcn.00434760();\n        *(*(*(puVar15 + -0xf0) + 0x30) + 0xf9) = 2;\n        *(puVar15 + -0x1b0) = 0x447475;\n        fcn.00452aa0(*(puVar15 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar15 + -0x1b0) = 0x447486;\n        iVar9 = fcn.00432f60();\ncode_r0x00447486:\n        *(puVar15 + -0xc0) = iVar9;\n        *(puVar15 + -0x1b0) = 0x447493;\n        uVar13 = fcn.0044b2c0();\n        iVar9 = *(*(puVar15 + -0xe0) + 0x40) - **(puVar15 + -0xc0);\n    } while( true );\n}\n",
        "token_count": 6976
    },
    "00464340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464340(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 800) != 0) {\n        if (unaff_RBX < 1) {\n            if (unaff_RBX < 0) {\n                for (; unaff_RBX < -0x3c; unaff_RBX = unaff_RBX + 0x3c) {\n                    fcn.00463f20();\n                }\n                fcn.00463f20();\n            }\n        }\n        else {\n            for (; 0x3c < unaff_RBX; unaff_RBX = unaff_RBX + -0x3c) {\n                fcn.00464120();\n            }\n            fcn.00464120();\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00464400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464400(void)\n\n{\n    code *pcVar1;\n    uchar *in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    bool bVar3;\n    \n    if ((unaff_RBX < 0) || (*(in_RAX + 800) <= unaff_RBX)) {\n        return;\n    }\n    if (799 < unaff_RBX) {\n        fcn.0045d480(800);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((in_RAX[unaff_RBX] == 0x35) && (*(in_RAX + 800) == unaff_RBX + 1)) {\n        if (in_RAX[0x331] != '\\0') goto code_r0x00464471;\n        if (unaff_RBX < 1) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = in_RAX[unaff_RBX - 1] - 0x30 & 1;\n        }\n    }\n    else {\n        bVar3 = 0x34 < in_RAX[unaff_RBX];\n    }\n    if (bVar3 == false) {\n        *(in_RAX + 800) = unaff_RBX;\n        while (iVar2 = *(in_RAX + 800),  0 < iVar2) {\n            if (799 < iVar2 - 1U) {\n                iVar2 = 800;\n                in_RAX = fcn.0045d480(800);\n                goto code_r0x004644de;\n            }\n            if (in_RAX[iVar2 + -1] != '0') break;\n            *(in_RAX + 800) = iVar2 - 1U;\n        }\n        if (iVar2 != 0) {\n            return;\n        }\n        *(in_RAX + 0x328) = 0;\n        return;\n    }\ncode_r0x00464471:\n    iVar2 = unaff_RBX - 1;\n    while( true ) {\n        if (iVar2 < 0) {\n            *in_RAX = 0x31;\n            *(in_RAX + 800) = 1;\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + 1;\n            return;\n        }\n        if (in_RAX[iVar2] < 0x39) break;\ncode_r0x004644de:\n        iVar2 = iVar2 + -1;\n    }\n    in_RAX[iVar2] = in_RAX[iVar2] + 1;\n    *(in_RAX + 800) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 594
    },
    "00464540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00464540(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint8_t uVar6;\n    uint32_t unaff_EDI;\n    uint64_t *arg4;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    bool bVar12;\n    uint in_XMM0_Da;\n    uint extraout_XMM0_Da;\n    uint in_XMM0_Db;\n    uint extraout_XMM0_Db;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar6 = unaff_EDI;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == 0x20) {\n                uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n                arg4 = 0x52c880;\n                goto code_r0x0046459f;\n            }\n            if (arg3 == 0x40) break;\n            unaff_RBX = 0x4c7f78;\n            *(*0x20 + -0x138) = 0x464bfd;\n            in_RAX = fcn.004327c0();\n            in_XMM0_Da = extraout_XMM0_Da;\n            in_XMM0_Db = extraout_XMM0_Db;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        puVar5[0x28] = uVar6;\n        *(puVar5 + 0x30) = unaff_RSI;\n        *(puVar5 + 0x38) = arg3;\n        *(puVar5 + -8) = 0x464c27;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        in_XMM0_Da = *(puVar5 + 0x20);\n        in_XMM0_Db = *(puVar5 + 0x20) >> 0x20;\n        unaff_EDI = puVar5[0x28];\n        unaff_RSI = *(puVar5 + 0x30);\n        arg3 = *(puVar5 + 0x38);\n        *0x20 = puVar5;\n    } while( true );\n    uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    arg4 = 0x52c8a0;\ncode_r0x0046459f:\n    *(*0x20 + -0xa8) = uVar10;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 0x18) = arg1;\n    uVar8 = *arg4;\n    uVar1 = arg4[1];\n    uVar4 = -(uVar1 + uVar8 < 0x40);\n    *(*0x20 + -0x90) = -(uVar1 < 0x40);\n    *(*0x20 + -0x98) = -(uVar8 < 0x40);\n    uVar7 = uVar10 >> (uVar1 + uVar8 & 0x3f);\n    uVar1 = (*(*0x20 + -0x90) & 1 << (uVar1 & 0x3f)) - 1;\n    uVar11 = uVar10 >> (uVar8 & 0x3f) & -(uVar8 < 0x40) & uVar1;\n    uVar8 = 1 << (uVar8 & 0x3f) & *(*0x20 + -0x98);\n    uVar10 = uVar8 - 1 & *(*0x20 + -0xa8);\n    if (uVar11 == uVar1) {\n        if (uVar10 == 0) {\n            if ((uVar4 & uVar7) == 0) {\n                iVar2 = 4;\n                uVar3 = 0x4a6331;\n            }\n            else {\n                iVar2 = 4;\n                uVar3 = 0x4a6335;\n            }\n        }\n        else {\n            iVar2 = 3;\n            uVar3 = 0x4a62b0;\n        }\n        *(*0x20 + -0x90) = unaff_RBX + iVar2;\n        uVar10 = *(*0x20 + 0x18);\n        if (*(*0x20 + 0x18) < unaff_RBX + iVar2) {\n            *(*0x20 + -200) = iVar2;\n            *(*0x20 + -0x50) = uVar3;\n            *(*0x20 + -0x138) = 0x4646bd;\n            in_RAX = fcn.00444ac0(unaff_RBX);\n            iVar2 = *(*0x20 + -200);\n            uVar10 = unaff_RBX;\n        }\n        *(*0x20 + -0xa0) = uVar10;\n        *(*0x20 + -0x40) = in_RAX;\n        *(*0x20 + -0x138) = 0x4646f4;\n        fcn.0045ddc0(iVar2);\n        return *(*0x20 + -0x40);\n    }\n    if (uVar11 == 0) {\n        uVar11 = 1;\n    }\n    else {\n        uVar10 = uVar10 | uVar8;\n    }\n    bVar12 = (uVar4 & uVar7) != 0;\n    uVar8 = bVar12;\n    uVar4 = uVar1 & 0xffffffffffffff00 | uVar8;\n    iVar2 = uVar11 + arg4[2];\n    if (uVar6 == 0x62) {\n        *(*0x20 + -0x138) = 0x464bda;\n        uVar3 = fcn.00466100(*(*0x20 + 0x18), uVar4, iVar2, arg4);\n        return uVar3;\n    }\n    if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n        *(*0x20 + -0x138) = 0x464776;\n        uVar3 = fcn.004662c0(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    if (*0x52c181 == '\\0') {\n        *(*0x20 + -0x138) = 0x464bb5;\n        uVar3 = fcn.00464c60(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xc9) = bVar12;\n    *(*0x20 + 0x30) = unaff_RSI;\n    *(*0x20 + 0x28) = uVar6;\n    *(*0x20 + -0x38) = in_XMM15;\n    *(*0x20 + -0x28) = in_XMM15;\n    *(*0x20 + -0x18) = in_XMM15;\n    if (-1 < unaff_RSI) {\n        if (uVar6 == 0x66) {\n            bVar12 = false;\n        }\n        else {\n            iVar9 = unaff_RSI;\n            if (uVar6 < 0x48) {\n                if (uVar6 == 0x45) {\ncode_r0x0046480e:\n                    iVar9 = unaff_RSI + 1;\n                }\n                else if (uVar6 == 0x47) {\ncode_r0x00464829:\n                    if (unaff_RSI == 0) {\n                        unaff_RSI = 1;\n                        iVar9 = unaff_RSI;\n                    }\n                }\n            }\n            else {\n                if (uVar6 == 0x65) goto code_r0x0046480e;\n                if (uVar6 == 0x67) goto code_r0x00464829;\n            }\n            *(*0x20 + -0x48) = arg4;\n            *(*0x20 + -0xb8) = iVar2;\n            *(*0x20 + -0xc0) = uVar10;\n            *(*0x20 + -0x90) = unaff_RSI;\n            *(*0x20 + -0x88) = 0;\n            *(*0x20 + -0x80) = in_XMM15;\n            if ((arg3 == 0x20) && (iVar9 < 10)) {\n                *(*0x20 + -0x38) = *0x20 + -0x88;\n                *(*0x20 + -0x30) = 0x18;\n                *(*0x20 + -0x28) = 0x18;\n                uVar1 = *arg4;\n                *(*0x20 + -0x138) = 0x4648d4;\n                fcn.00466a80(iVar2 - uVar1, uVar1, uVar10);\n                uVar4 = *(*0x20 + -0xc9);\n                unaff_RSI = *(*0x20 + -0x90);\n                unaff_EDI = *(*0x20 + 0x28);\n                uVar10 = *(*0x20 + -0xc0);\n                bVar12 = true;\n            }\n            else {\n                if (iVar9 < 0x13) {\n                    *(*0x20 + -0xb0) = iVar9;\n                    *(*0x20 + -0x38) = *0x20 + -0x88;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x28) = 0x18;\n                    uVar1 = *arg4;\n                    *(*0x20 + -0x138) = 0x464976;\n                    fcn.00466d20(iVar2 - uVar1, uVar1, uVar10);\n                    iVar9 = *(*0x20 + -0xb0);\n                    uVar4 = *(*0x20 + -0xc9);\n                    unaff_RSI = *(*0x20 + -0x90);\n                    unaff_EDI = *(*0x20 + 0x28);\n                    uVar10 = *(*0x20 + -0xc0);\n                }\n                bVar12 = iVar9 < 0x13;\n            }\n        }\n        if (!bVar12) {\n            *(*0x20 + -0x138) = 0x4649fd;\n            uVar3 = fcn.00464c60(*(*0x20 + 0x18), unaff_EDI, uVar4 & 0xffffffff, uVar10);\n            return uVar3;\n        }\n        goto code_r0x00464b41;\n    }\n    *(*0x20 + -0x70) = in_XMM15;\n    *(*0x20 + -0x60) = in_XMM15;\n    *(*0x20 + -0x38) = *0x20 + -0x70;\n    *(*0x20 + -0x30) = 0x20;\n    *(*0x20 + -0x28) = 0x20;\n    uVar10 = *arg4;\n    *(*0x20 + -0x138) = 0x464a65;\n    fcn.004672a0(iVar2 - uVar10, uVar10);\n    uVar6 = *(*0x20 + 0x28);\n    if (uVar6 < 0x48) {\n        if (uVar6 == 0x45) {\ncode_r0x00464aab:\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) + -1) {\n                unaff_RSI = *(*0x20 + -0x20) + -1;\n            }\n        }\n        else if (uVar6 == 0x47) {\ncode_r0x00464b11:\n            unaff_RSI = *(*0x20 + -0x20);\n        }\n        else {\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    else {\n        if (uVar6 == 0x65) goto code_r0x00464aab;\n        if (uVar6 == 0x66) {\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) - *(*0x20 + -0x18)) {\n                unaff_RSI = *(*0x20 + -0x20) - *(*0x20 + -0x18);\n            }\n        }\n        else {\n            if (uVar6 == 0x67) goto code_r0x00464b11;\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    uVar4 = *(*0x20 + -0xc9);\ncode_r0x00464b41:\n    *(*0x20 + -0x130) = *(*0x20 + -0x38);\n    *(*0x20 + -300) = *(*0x20 + -0x34);\n    *(*0x20 + -0x128) = *(*0x20 + -0x30);\n    *(*0x20 + -0x124) = *(*0x20 + -0x2c);\n    *(*0x20 + -0x120) = *(*0x20 + -0x28);\n    *(*0x20 + -0x11c) = *(*0x20 + -0x24);\n    *(*0x20 + -0x118) = *(*0x20 + -0x20);\n    *(*0x20 + -0x114) = *(*0x20 + -0x1c);\n    *(*0x20 + -0x110) = *(*0x20 + -0x18);\n    *(*0x20 + -0x10c) = *(*0x20 + -0x14);\n    *(*0x20 + -0x108) = *(*0x20 + -0x10);\n    *(*0x20 + -0x104) = *(*0x20 + -0xc);\n    *(*0x20 + -0x138) = 0x464b85;\n    uVar3 = fcn.004650c0(*(*0x20 + 0x18), uVar4, unaff_RSI);\n    return uVar3;\n}\n",
        "token_count": 3520
    },
    "00465320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00465320(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    ulong unaff_RBP;\n    int64_t iVar10;\n    int64_t *unaff_RDI;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    uint8_t uVar14;\n    bool bVar15;\n    \ncode_r0x00465320:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x618 && *0x20 + -0x618 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x698;\n        *(*0x20 + -8) = unaff_RBP;\n        if (unaff_RBX == 0) {\n            *(in_RAX + 800) = 0;\n            return;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        iVar7 = unaff_RDI[2];\n        *(*0x20 + -0x688) = iVar7 + 1;\n        if ((iVar7 + 1 < arg1) &&\n           (iVar10 = *(in_RAX + 0x328) - *(in_RAX + 800),  iVar5 = (arg1 - *unaff_RDI) * 100, \n           iVar7 = iVar5 + iVar10 * -0x14c,  iVar7 == 0 || SBORROW8(iVar5, iVar10 * 0x14c) != iVar7 < 0)) {\n            return;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x340) = 0;\n        *(*0x20 + -0x6a8) = *0x20 + -8;\n        *(*0x20 + -0x6a0) = 0x4653ef;\n        fcn.0045d629();\n        uVar2 = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x46540b;\n        fcn.00463dc0(unaff_RBX * 2 + 1);\n        *(*0x20 + -0x6a0) = 0x465432;\n        fcn.00464340();\n        if ((1 << (**(*0x20 + 0x20) & 0x3f) & -(**(*0x20 + 0x20) < 0x40)) < *(*0x20 + 0x10)) {\n            iVar7 = *(*0x20 + 0x18);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x18);\n            if (iVar7 != *(*0x20 + -0x688)) {\n                iVar7 = iVar7 + -1;\n            }\n        }\n        *(*0x20 + -0x680) = iVar7;\n        *(*0x20 + -0x678) = 0;\n        *(*0x20 + -0x6a8) = uVar2;\n        *(*0x20 + -0x6a0) = 0x4654cf;\n        fcn.0045d629();\n        unaff_RBP = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x4654e5;\n        fcn.00463dc0();\n        iVar7 = *(*0x20 + -0x680);\n        iVar5 = **(*0x20 + 0x20);\n        *(*0x20 + -0x6a0) = 0x465505;\n        fcn.00464340();\n        puVar3 = *(*0x20 + 8);\n        unaff_RDI = NULL;\n        uVar6 = 0;\n        unaff_RBX = (iVar7 - iVar5) - 1;\n        do {\n            iVar7 = *(*0x20 + -0x18);\n            iVar5 = *(puVar3 + 0x328);\n            uVar8 = unaff_RDI + (iVar5 - iVar7);\n            iVar10 = *(puVar3 + 800);\n            if (iVar10 <= uVar8) {\n                return;\n            }\n            uVar1 = unaff_RDI + (*(*0x20 + -0x350) - iVar7);\n            if ((uVar1 < 0) || (*(*0x20 + -0x358) == uVar1 || *(*0x20 + -0x358) < uVar1)) {\n                uVar11 = 0x30;\n            }\n            else {\n                if (799 < uVar1) goto code_r0x004657ff;\n                uVar11 = *(*0x20 + (uVar1 - 0x678));\n            }\n            if (uVar8 < 0) {\n                uVar13 = 0x30;\n            }\n            else {\n                if (799 < uVar8) goto code_r0x004657f2;\n                uVar13 = puVar3[uVar8];\n            }\n            if (unaff_RDI < *(*0x20 + -0x20)) {\n                if (0x31f < unaff_RDI) goto code_r0x004657e5;\n                uVar14 = (*0x20 + -0x340)[unaff_RDI];\n            }\n            else {\n                uVar14 = 0x30;\n            }\n            if (uVar11 == uVar13) {\n                uVar12 = *(*0x20 + 0x10);\n                if ((*(*0x20 + 0x10) & 1) == 0) {\n                    bVar15 = *(*0x20 + -0x358) == unaff_RDI + (*(*0x20 + -0x350) - iVar7) + 1;\n                }\n                else {\n                    bVar15 = false;\n                }\n            }\n            else {\n                uVar12 = *(*0x20 + 0x10);\n                bVar15 = true;\n            }\n            if (uVar6 == 0) {\n                if (uVar13 + 1 < uVar14) {\n                    uVar6 = 2;\n                }\n                else {\n                    if (uVar14 == uVar13) goto code_r0x00465653;\n                    uVar6 = 1;\n                }\n            }\n            else {\ncode_r0x00465653:\n                if ((uVar6 == 1) && ((uVar13 != 0x39 || (uVar14 != 0x30)))) {\n                    uVar6 = 2;\n                }\n            }\n            if (uVar6 == 0) {\n                bVar4 = false;\n            }\n            else if (((uVar12 & 1) == 0) || (1 < uVar6)) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = unaff_RDI + 1 < *(*0x20 + -0x20);\n            }\n            if (bVar15) {\n                if (bVar4) {\n                    *(*0x20 + -0x6a0) = 0x4656ef;\n                    fcn.00464400();\n                    return;\n                }\n                if (bVar15) goto code_r0x004656b0;\n            }\n            if (bVar4) {\n                iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n                if (iVar7 < 0) {\n                    return;\n                }\n                if (iVar7 < iVar10) {\n                    while( true ) {\n                        if (uVar8 < 0) {\n                            *puVar3 = 0x31;\n                            *(puVar3 + 800) = 1;\n                            *(puVar3 + 0x328) = *(puVar3 + 0x328) + 1;\n                            return;\n                        }\n                        if (799 < uVar8) break;\n                        if (puVar3[uVar8] < 0x39) {\n                            puVar3[uVar8] = puVar3[uVar8] + 1;\n                            *(puVar3 + 800) = uVar8 + 1;\n                            return;\n                        }\n                        uVar8 = uVar8 - 1;\n                    }\n                    *(*0x20 + -0x6a0) = 0x465789;\n                    fcn.0045d480(800);\n                    return;\n                }\n                return;\n            }\n            unaff_RDI = unaff_RDI + 1;\n            unaff_RBX = uVar8;\n        } while( true );\n    }\n    goto code_r0x0046580d;\ncode_r0x004656b0:\n    iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n    if (iVar7 < 0) {\n        return;\n    }\n    if (iVar10 <= iVar7) {\n        return;\n    }\n    *(puVar3 + 800) = iVar7;\n    do {\n        iVar7 = *(puVar3 + 800);\n        if (iVar7 < 1) {\ncode_r0x004657c8:\n            if (iVar7 != 0) {\n                return;\n            }\n            *(puVar3 + 0x328) = 0;\n            return;\n        }\n        if (799 < iVar7 - 1U) break;\n        uVar8 = puVar3[iVar7 + -1];\n        if (puVar3[iVar7 + -1] != 0x30) goto code_r0x004657c8;\n        *(puVar3 + 800) = iVar7 - 1U;\n    } while( true );\n    *(*0x20 + -0x6a0) = 0x4657e5;\n    fcn.0045d480(800);\n    unaff_RBX = uVar8;\ncode_r0x004657e5:\n    *(*0x20 + -0x6a0) = 0x4657f2;\n    fcn.0045d480(800);\ncode_r0x004657f2:\n    *(*0x20 + -0x6a0) = 0x4657ff;\n    fcn.0045d480(800);\ncode_r0x004657ff:\n    arg1 = 800;\n    *(*0x20 + -0x6a0) = 0x46580c;\n    in_RAX = fcn.0045d480(800);\ncode_r0x0046580d:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x465826;\n    fcn.0045ad80();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x00465320;\n}\n",
        "token_count": 2605
    },
    "00465840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00465840(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uchar in_R8B;\n    uchar uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        cVar8 = unaff_RDI;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = in_RAX;\n            *(*0x20 + 0x58) = unaff_RSI;\n            *(*0x20 + 0x60) = in_R8B;\n            uVar5 = unaff_RBX;\n            if (cVar8 != '\\0') {\n                uVar5 = unaff_RBX + 1;\n                uVar2 = in_RAX;\n                uVar7 = arg1;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar5) {\n                    *(*0x20 + 0x40) = unaff_RBX;\n                    *(*0x20 + -0x90) = 0x4658ae;\n                    uVar2 = fcn.00444ac0(unaff_RBX);\n                    uVar5 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar7 = unaff_RBX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar2 + uVar6) = 0x2d;\n                in_RAX = uVar2;\n                arg1 = uVar7;\n                unaff_RBX = uVar6;\n            }\n            cVar8 = unaff_RDI;\n            if (*(*0x20 + 0x20) == 0) {\n                uVar13 = 0x30;\ncode_r0x00465904:\n                uVar6 = uVar5 + 1;\n                uVar3 = in_RAX;\n                uVar7 = arg1;\n                uVar2 = uVar5;\n                if (arg1 < uVar6) {\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x42) = uVar13;\n                    *(*0x20 + -0x90) = 0x46592f;\n                    uVar3 = fcn.00444ac0(uVar5);\n                    uVar6 = in_RAX + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar13 = *(*0x20 + -0x42);\n                    uVar7 = uVar5;\n                    unaff_RBX = in_RAX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar3 + uVar2) = uVar13;\n                uVar5 = uVar6;\n                if (unaff_RSI < 1) goto code_r0x00465a8f;\n                uVar5 = uVar6 + 1;\n                uVar4 = uVar3;\n                uVar1 = uVar7;\n                uVar2 = uVar6;\n                if (uVar7 < uVar5) {\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x90) = 0x465985;\n                    uVar4 = fcn.00444ac0(uVar6);\n                    uVar5 = uVar3 + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar1 = uVar6;\n                    unaff_RBX = uVar3;\n                    unaff_RDI = uVar7;\n                }\n                uVar7 = uVar1;\n                cVar8 = unaff_RDI;\n                *(uVar4 + uVar2) = 0x2e;\n                uVar2 = unaff_RSI + 1U;\n                if (*(*0x20 + 0x20) < unaff_RSI + 1U) {\n                    uVar2 = *(*0x20 + 0x20);\n                }\n                if (uVar2 < 2) {\n                    iVar9 = 1;\n                    uVar3 = uVar4;\n                    goto code_r0x00465ce0;\n                }\n                uVar3 = *(*0x20 + 0x18);\n                uVar6 = *(*0x20 + 8);\n                if (uVar2 <= uVar3) {\n                    *(*0x20 + -0x40) = uVar2;\n                    uVar1 = (uVar2 + uVar5) - 1;\n                    *(*0x20 + -0x18) = uVar1;\n                    if (uVar7 < uVar1) {\n                        *(*0x20 + -0x28) = uVar5;\n                        *(*0x20 + -0x10) = (-(uVar3 - 1) >> 0x3f & 1U) + uVar6;\n                        *(*0x20 + -0x90) = 0x465a35;\n                        uVar4 = fcn.00444ac0(uVar5);\n                        uVar2 = *(*0x20 + -0x40);\n                        uVar7 = uVar5;\n                    }\n                    *(*0x20 + -0x20) = uVar7;\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x90) = 0x465a65;\n                    fcn.0045ddc0(uVar2 - 1);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x20);\n                    uVar5 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x10);\ncode_r0x00465ce0:\n                    for (; iVar9 <= unaff_RSI; iVar9 = iVar9 + 1) {\n                        uVar2 = uVar3;\n                        uVar6 = uVar5;\n                        uVar4 = uVar5 + 1;\n                        if (uVar7 < uVar5 + 1) {\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x30) = uVar5;\n                            *(*0x20 + -0x90) = 0x465d10;\n                            uVar2 = fcn.00444ac0(uVar5);\n                            iVar9 = *(*0x20 + -0x40);\n                            unaff_RSI = *(*0x20 + 0x58);\n                            in_R8B = *(*0x20 + 0x60);\n                            uVar6 = *(*0x20 + -0x30);\n                            uVar7 = uVar5;\n                            uVar4 = uVar3 + 1;\n                        }\n                        uVar5 = uVar4;\n                        *(uVar2 + uVar6) = 0x30;\n                        uVar3 = uVar2;\n                    }\ncode_r0x00465a8f:\n                    uVar6 = uVar5 + 1;\n                    uVar4 = uVar3;\n                    uVar2 = uVar5;\n                    if (uVar7 < uVar6) {\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x90) = 0x465ab2;\n                        uVar4 = fcn.00444ac0(uVar5);\n                        uVar6 = uVar3 + 1;\n                        in_R8B = *(*0x20 + 0x60);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar5;\n                    }\n                    *(uVar4 + uVar2) = in_R8B;\n                    iVar9 = *(*0x20 + 0x28) + -1;\n                    if (*(*0x20 + 0x20) == 0) {\n                        iVar9 = 0;\n                    }\n                    if (iVar9 < 0) {\n                        iVar9 = -iVar9;\n                        uVar13 = 0x2d;\n                    }\n                    else {\n                        uVar13 = 0x2b;\n                    }\n                    *(*0x20 + -0x38) = iVar9;\n                    uVar5 = uVar6 + 1;\n                    uVar3 = uVar4;\n                    uVar2 = uVar6;\n                    if (uVar7 < uVar5) {\n                        *(*0x20 + -0x18) = uVar6;\n                        *(*0x20 + -0x42) = uVar13;\n                        *(*0x20 + -0x90) = 0x465b29;\n                        uVar3 = fcn.00444ac0(uVar6);\n                        uVar5 = uVar4 + 1;\n                        iVar9 = *(*0x20 + -0x38);\n                        uVar13 = *(*0x20 + -0x42);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar6;\n                    }\n                    *(*0x20 + -0x18) = uVar5;\n                    *(uVar3 + uVar2) = uVar13;\n                    if (iVar9 < 10) {\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x90) = 0x465b68;\n                            uVar3 = fcn.00444ac0(uVar5);\n                            iVar9 = *(*0x20 + -0x38);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = 0x30;\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else if (iVar9 < 100) {\n                        iVar10 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        iVar9 = iVar9 + iVar10 * -10;\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x90) = 0x465bd7;\n                            uVar3 = fcn.00444ac0(uVar5);\n                            iVar10 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = iVar10 + '0';\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else {\n                        iVar10 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar9) >> 0x40, 0) + iVar9;\n                        iVar11 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        cVar8 = iVar11 + ((iVar11 & 0xff) / 10) * -10;\n                        iVar9 = iVar9 + iVar11 * -10;\n                        if (uVar7 < uVar5 + 3) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x41) = cVar8;\n                            *(*0x20 + -0x90) = 0x465c85;\n                            uVar3 = fcn.00444ac0(uVar5);\n                            cVar8 = *(*0x20 + -0x41);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x20);\n                        }\n                        *(uVar3 + uVar5) = (iVar10 >> 6) + '0';\n                        *(uVar3 + 1 + uVar5) = cVar8 + '0';\n                        *(uVar3 + 2 + uVar5) = iVar9 + '0';\n                    }\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x465d45;\n                fcn.0045d500(uVar2, uVar3);\n            }\n            else {\n                uVar6 = *(*0x20 + 0x10);\n                if (*(*0x20 + 0x10) != 0) {\n                    uVar13 = **(*0x20 + 8);\n                    goto code_r0x00465904;\n                }\n            }\n            arg1 = uVar6;\n            *(*0x20 + -0x90) = 0x465d4f;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar12 + 0x38) = in_RAX;\n        *(puVar12 + 0x40) = unaff_RBX;\n        *(puVar12 + 0x48) = arg1;\n        puVar12[0x50] = cVar8;\n        *(puVar12 + 0x58) = unaff_RSI;\n        puVar12[0x60] = in_R8B;\n        *(puVar12 + -8) = 0x465d73;\n        fcn.0045ad80();\n        in_RAX = *(puVar12 + 0x38);\n        unaff_RBX = *(puVar12 + 0x40);\n        arg1 = *(puVar12 + 0x48);\n        unaff_RDI = puVar12[0x50];\n        unaff_RSI = *(puVar12 + 0x58);\n        in_R8B = puVar12[0x60];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3425
    },
    "00466a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00466a80(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < unaff_RDI) {\n                if (unaff_RDI < 10) {\n                    if (unaff_EBX == 0) {\n                        *(in_RAX + 0x18) = in_XMM15;\n                        return;\n                    }\n                    uVar2 = unaff_EBX * 2 + 1;\n                    iVar4 = 0x3f;\n                    if (uVar2 != 0) {\n                        for (; uVar2 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n                        }\n                    }\n                    uVar2 = arg1;\n                    if (iVar4 < 0x19) {\n                        uVar1 = -(-(iVar4 + -0x19) < 0x20);\n                        arg3 = uVar1;\n                        unaff_EBX = unaff_EBX << (-(iVar4 + -0x19) & 0x1f) & uVar1;\n                        uVar2 = (iVar4 + arg1) - 0x19;\n                    }\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    unaff_RDI = unaff_RDI - (uVar2 * 0x13441 + 0x1ce618 >> 0x12);\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    arg1 = unaff_RDI - 1;\n                    if (arg1 < 0x1c) {\n                        arg3 = arg3 & 0xffffffffffffff00 | -1 < arg1;\n                    }\n                    else {\n                        arg3 = 0;\n                    }\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x1d) = arg3;\n                    *(*0x20 + -0x1c) = unaff_EBX;\n                    *(*0x20 + -0x48) = 0x466b50;\n                    uVar1 = fcn.00467cc0(arg1, arg1, arg3);\n                    if (uVar2 < 0) break;\n                    *(*0x20 + -0x48) = 0x466cc5;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x48) = 0x466cd8;\n                fcn.004327c0();\n            }\n            unaff_EBX = 0x4c7f88;\n            *(*0x20 + -0x48) = 0x466ceb;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x466d05;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n    if (*(*0x20 + -0x10) + 9U < 10) {\n        if (*(*0x20 + -0x1c) != 0) {\n            uVar7 = *(*0x20 + -0x1c);\n            for (iVar4 = 0; SBORROW8(iVar4, -*(*0x20 + -0x18)) != iVar4 + *(*0x20 + -0x18) < 0; iVar4 = iVar4 + 1) {\n                if (uVar7 != (uVar7 / 5) * 5) goto code_r0x00466b88;\n                uVar7 = uVar7 / 5;\n            }\n        }\n        cVar5 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x00466b88:\n        cVar5 = *(*0x20 + -0x1d);\n    }\n    uVar2 = -uVar2;\n    uVar6 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) - 1 & uVar1;\n    if (cVar5 == '\\0') {\n        uVar2 = uVar2 - 1;\n        uVar7 = -(uVar2 < 0x20);\n        uVar1 = uVar2 & 0xffffff00 | (uVar8 >> (uVar2 & 0x1f) & -(uVar2 < 0x20)) == 1;\n        goto code_r0x00466c20;\n    }\n    uVar9 = -(uVar2 - 1 < 0x20);\n    uVar7 = uVar9;\n    uVar9 = 1 << (uVar2 - 1 & 0x1f) & uVar9;\n    if (uVar9 < uVar8) {\ncode_r0x00466bf1:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar5 = arg1 & 0xffffffff;\n            if (cVar5 == '\\0') goto code_r0x00466bf1;\n            if ((uVar9 == uVar8) && (cVar5 != '\\0')) {\n                uVar1 = uVar1 >> (uVar2 & 0x1f) & -(uVar2 < 0x20) & 1;\n                goto code_r0x00466c20;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x00466c20:\n    if (uVar8 != 0) {\n        uVar6 = 0;\n    }\n    *(*0x20 + -0x48) = 0x466c45;\n    fcn.00466fc0(uVar6 ^ 1, uVar1, uVar7, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1681
    },
    "00466d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00466d20(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t noname_2;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 0x13) {\n                if (unaff_RBX == 0) {\n                    *(in_RAX + 0x18) = in_XMM15;\n                    return;\n                }\n                iVar3 = 0x3f;\n                if (unaff_RBX != 0) {\n                    for (; unaff_RBX >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                    }\n                }\n                if (unaff_RBX == 0) {\n                    iVar3 = -1;\n                }\n                uVar4 = arg1;\n                if (iVar3 + 1 < 0x37) {\n                    unaff_RBX = unaff_RBX << (-(iVar3 + -0x36) & 0x3f) & -(-(iVar3 + -0x36) < 0x40);\n                    uVar4 = (iVar3 + arg1) - 0x36;\n                }\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 8) = in_RAX;\n                unaff_RDI = unaff_RDI - (uVar4 * 0x13441 + 0x4105b6 >> 0x12);\n                *(*0x20 + -0x10) = unaff_RDI;\n                arg1 = unaff_RDI - 1;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x21) = arg1 < 0x38;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x466df0;\n                uVar2 = fcn.00467da0(arg1);\n                if (uVar4 < 0) break;\n                *(*0x20 + -0x50) = 0x466f65;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7fb8;\n            *(*0x20 + -0x50) = 0x466f78;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x466f92;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    if (*(*0x20 + -0x10) + 0x15U < 0x16) {\n        if (*(*0x20 + -0x18) != 0) {\n            uVar8 = *(*0x20 + -0x18);\n            for (iVar3 = 0; SBORROW8(iVar3, -*(*0x20 + -0x20)) != iVar3 + *(*0x20 + -0x20) < 0; iVar3 = iVar3 + 1) {\n                if (uVar8 != (uVar8 / 5) * 5) goto code_r0x00466e25;\n                uVar8 = uVar8 / 5;\n            }\n        }\n        cVar6 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x00466e25:\n        cVar6 = *(*0x20 + -0x21);\n    }\n    uVar4 = -uVar4;\n    uVar7 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar4 & 0x3f) & -(uVar4 < 0x40)) - 1 & uVar2;\n    if (cVar6 == '\\0') {\n        uVar4 = uVar4 - 1;\n        noname_2 = -(uVar4 < 0x40);\n        uVar1 = uVar4 & 0xffffff00 | (uVar8 >> (uVar4 & 0x3f) & noname_2) == 1;\n        goto code_r0x00466ec3;\n    }\n    noname_2 = -(uVar4 - 1 < 0x40);\n    uVar9 = 1 << (uVar4 - 1 & 0x3f) & noname_2;\n    if (uVar9 < uVar8) {\ncode_r0x00466e93:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar6 = arg1 & 0xffffffff;\n            if (cVar6 == '\\0') goto code_r0x00466e93;\n            if ((uVar9 == uVar8) && (cVar6 != '\\0')) {\n                uVar1 = uVar2 >> (uVar4 & 0x3f) & -(uVar4 < 0x40) & 1;\n                goto code_r0x00466ec3;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x00466ec3:\n    if (uVar8 != 0) {\n        uVar7 = 0;\n    }\n    *(*0x20 + -0x50) = 0x466ee5;\n    fcn.00466fc0(uVar7 ^ 1, uVar1, noname_2, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1586
    },
    "004672a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004672a0(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    char cVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint32_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t *unaff_RDI;\n    char cVar16;\n    ulong uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t unaff_R14;\n    uint64_t uVar20;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 0) {\n                *(in_RAX + 0x18) = in_XMM15;\n                return;\n            }\n            if (arg1 < 1) {\n                iVar14 = 0;\n                if (unaff_RBX != 0) {\n                    for (; (unaff_RBX >> iVar14 & 1) == 0; iVar14 = iVar14 + 1) {\n                    }\n                }\n                uVar9 = -arg1;\n                if (SBORROW8(iVar14, uVar9) == iVar14 + arg1 < 0) {\n                    *(*0x20 + -0x98) = 0x467305;\n                    fcn.004677c0(-(uVar9 < 0x40) & unaff_RBX >> (uVar9 & 0x3f), iVar14, 0);\n                    return;\n                }\n            }\n            uVar9 = *unaff_RDI;\n            if ((unaff_RBX == (1 << (uVar9 & 0x3f) & -(uVar9 < 0x40))) && (arg1 != (unaff_RDI[2] - uVar9) + 1)) {\n                iVar10 = unaff_RBX * 4;\n                iVar14 = iVar10 + 2;\n                arg1 = arg1 + -2;\n                iVar1 = iVar10;\n            }\n            else {\n                iVar10 = unaff_RBX << 1;\n                iVar14 = unaff_RBX * 2 + 1;\n                arg1 = arg1 + -1;\n                iVar1 = unaff_RBX * 2;\n            }\n            if (arg1 == 0) {\n                *(*0x20 + -0x98) = 0x4674db;\n                fcn.004677c0(iVar10, unaff_RBX, 0);\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = iVar1 + -1;\n            *(*0x20 + -0x18) = iVar10;\n            *(*0x20 + -0x50) = iVar14;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            iVar14 = arg1 * -0x13441 >> 0x12;\n            *(*0x20 + -0x58) = iVar14;\n            iVar14 = iVar14 + 1;\n            *(*0x20 + -0x48) = iVar14;\n            uVar17 = 0x52c880;\n            if (unaff_RDI == 0x52c880) {\n                *(*0x20 + -0x98) = 0x4673d2;\n                uVar4 = fcn.00467cc0(iVar14, unaff_RBX, 0x52c880);\n                *(*0x20 + -0x60) = uVar4;\n                *(*0x20 + -0x62) = iVar14;\n                uVar6 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x4673ee;\n                uVar4 = fcn.00467cc0(uVar6, unaff_RBX, uVar17);\n                *(*0x20 + -0x5c) = uVar4;\n                *(*0x20 + -0x61) = uVar6;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46740a;\n                uVar5 = fcn.00467cc0(arg1, unaff_RBX, uVar17);\n                uVar9 = *(*0x20 + -0x60);\n                uVar20 = *(*0x20 + -0x5c);\n                unaff_RDI = uVar5;\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            else {\n                *(*0x20 + -0x98) = 0x467430;\n                uVar17 = fcn.00467da0(iVar14);\n                *(*0x20 + -0x28) = uVar17;\n                *(*0x20 + -0x62) = iVar14;\n                uVar17 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46744d;\n                uVar6 = fcn.00467da0(uVar17);\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x61) = uVar17;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46746a;\n                unaff_RDI = fcn.00467da0(arg1);\n                uVar9 = *(*0x20 + -0x28);\n                uVar20 = *(*0x20 + -0x20);\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            if (iVar14 < 0) break;\n            unaff_RBX = 0x4c7fc8;\n            *(*0x20 + -0x98) = 0x46778c;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + -8) = 0x4677a6;\n        fcn.0045ad80();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        *0x20 = puVar12;\n    } while( true );\n    iVar1 = *(*0x20 + -0x48);\n    if (0x37 < iVar1) {\n        arg1 = 0;\n        cVar3 = '\\0';\n        cVar16 = '\\0';\n    }\n    cVar7 = arg1;\n    if (*(*0x20 + -0x58) + 0x19U < 0x18) {\n        iVar10 = -iVar1;\n        if (*(*0x20 + -0x40) != 0) {\n            uVar15 = *(*0x20 + -0x40);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x004676b9;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar16 = '\\x01';\ncode_r0x004676b9:\n        if (*(*0x20 + -0x18) != 0) {\n            uVar15 = *(*0x20 + -0x18);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00467716;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar3 = '\\x01';\ncode_r0x00467716:\n        if (*(*0x20 + -0x50) != 0) {\n            uVar15 = *(*0x20 + -0x50);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x00467501;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar7 = '\\x01';\n    }\ncode_r0x00467501:\n    *(*0x20 + -0x30) = unaff_RDI;\n    uVar11 = -iVar14;\n    uVar15 = -(uVar11 < 0x40);\n    uVar8 = uVar11;\n    uVar18 = (1 << (uVar8 & 0x3f) & uVar15) - 1;\n    noname_1 = uVar9 >> (uVar8 & 0x3f) & uVar15;\n    uVar15 = uVar20 >> (uVar8 & 0x3f) & uVar15;\n    uVar20 = uVar20 & uVar18;\n    if ((cVar7 == '\\0') || ((*(*0x20 + -0x30) & uVar18) != 0)) {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    else {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    if (cVar3 == '\\0') {\n        uVar2 = -(uVar11 - 1 < 0x40);\n        uVar13 = uVar2 & 0xffffff00 | (uVar20 >> (uVar11 - 1 & 0x3f) & uVar2) == 1;\n    }\n    else {\n        uVar11 = 1 << (uVar11 - 1 & 0x3f) & -(uVar11 - 1 < 0x40);\n        if (uVar11 < uVar20) {\n            uVar13 = 1;\n        }\n        else if (uVar11 == uVar20) {\n            uVar13 = uVar15 & 1;\n        }\n        else {\n            uVar13 = 0;\n        }\n    }\n    if (((cVar16 == '\\0') || ((uVar18 & uVar9) != 0)) || ((uVar5 & 1) != 0)) {\n        noname_1 = noname_1 + 1;\n    }\n    *(*0x20 + -0x98) = 0x467645;\n    fcn.004677c0(uVar15, noname_1, uVar13);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x58)) + -1;\n    return;\n}\n",
        "token_count": 2767
    },
    "004677c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004677c0(char *arg1, ulong noname_1, char **arg3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_RAX;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t noname_1_00;\n    char *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    char *unaff_RSI;\n    char **unaff_RDI;\n    char **ppcVar9;\n    uint32_t uVar10;\n    char **arg1_00;\n    int64_t unaff_R14;\n    char *unaff_R15;\n    \n    do {\n        cVar8 = unaff_RSI;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            pcVar5 = (unaff_RBX >> 1) / 500000000;\n            unaff_RBX = unaff_RBX + pcVar5 * -1000000000;\n            pcVar6 = (arg1 >> 1) / 500000000;\n            arg1_00 = arg1 + pcVar6 * -1000000000;\n            noname_1_00 = (unaff_RDI >> 1) / 500000000;\n            if (noname_1_00 == 0) {\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x4678d9;\n                fcn.00467ac0(arg1_00, noname_1_00, arg3, 8);\n                goto code_r0x004678d9;\n            }\n            if (pcVar5 < noname_1_00) {\n                uVar10 = arg1_00;\n                if (cVar8 == '\\0') {\n                    unaff_RSI = NULL;\n                }\n                else {\n                    unaff_RSI = uVar10 == 0;\n                }\n                if (uVar10 < 0x1dcd6501) {\n                    arg3 = (uVar10 & 0xffffff00 | uVar10 == 500000000) & arg3;\n                }\n                else {\n                    arg3 = 0x1;\n                }\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x4678b4;\n                arg1_00 = arg3;\n                fcn.00467ac0(pcVar6, noname_1_00, arg3, 8);\n                *(*(*0x20 + 8) + 0x20) = *(*(*0x20 + 8) + 0x20) + 9;\n                goto code_r0x004678d9;\n            }\n            in_RAX[3] = NULL;\n            pcVar3 = 0x9;\n            ppcVar9 = unaff_RDI >> 1;\n            unaff_RDI = arg1_00;\ncode_r0x004679b0:\n            cVar8 = unaff_RSI;\n            if (pcVar6 != 0) {\n                cVar4 = pcVar6 + ((pcVar6 & 0xffffffff) / 10) * -10;\n                unaff_R15 = pcVar3 + -1;\n                arg1 = in_RAX[1];\n                arg1_00 = *in_RAX;\n                pcVar6 = (pcVar6 & 0xffffffff) / 10;\n                if (arg1 <= unaff_R15) goto code_r0x00467a5c;\ncode_r0x0046799b:\n                (pcVar3 + -1)[arg1_00] = cVar4 + '0';\n                pcVar3 = unaff_R15;\n                pcVar5 = unaff_RBX;\n                ppcVar9 = unaff_RDI;\n                goto code_r0x004679b0;\n            }\n            pcVar6 = in_RAX[1];\n            pcVar1 = *in_RAX;\n            pcVar2 = in_RAX[2];\n            if (pcVar3 <= pcVar6) {\n                in_RAX[1] = pcVar6 + -pcVar3;\n                in_RAX[2] = pcVar2 + -pcVar3;\n                if (*0x598440 == 0) {\n                    *in_RAX = pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3);\n                    arg1_00 = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x467a2a;\n                    pcVar3 = fcn.0045d100(pcVar6 + -pcVar3, pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3), arg3, \n                                          in_RAX);\n                    arg1_00 = unaff_RDI;\n                }\n                in_RAX[3] = -(pcVar3 + -9);\n                in_RAX = -(pcVar3 + -9) + 8;\n                *(*0x20 + -0x30) = 0x467a4d;\n                fcn.00467ac0(arg1_00, in_RAX, arg3, in_RAX);\ncode_r0x004678d9:\n                unaff_RDI = *(*0x20 + 8);\n                while (pcVar6 = unaff_RDI[3],  0 < pcVar6) {\n                    pcVar5 = unaff_RDI[1];\n                    unaff_RBX = *unaff_RDI;\n                    if (pcVar5 <= pcVar6 + -1) goto code_r0x00467996;\n                    if ((pcVar6 + -1)[unaff_RBX] != '0') break;\n                    unaff_RDI[3] = pcVar6 + -1;\n                }\ncode_r0x00467913:\n                pcVar6 = unaff_RDI[3];\n                if (pcVar6 < 1) {\n                    return;\n                }\n                pcVar5 = unaff_RDI[1];\n                unaff_RBX = *unaff_RDI;\n                if (pcVar5 == NULL) goto code_r0x0046798f;\n                if (*unaff_RBX != '0') {\n                    return;\n                }\n                unaff_RDI[3] = pcVar6 + -1;\n                unaff_RDI[4] = unaff_RDI[4] + -1;\n                pcVar5 = unaff_RDI[1];\n                pcVar6 = *unaff_RDI;\n                unaff_RBX = unaff_RDI[2];\n                if (pcVar5 != NULL) {\n                    unaff_RSI = pcVar5 + -1;\n                    unaff_RDI[1] = unaff_RSI;\n                    unaff_RDI[2] = unaff_RBX + -1;\n                    if (*0x598440 == 0) {\n                        *unaff_RDI = pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1);\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x467979;\n                        fcn.0045d100(pcVar5, pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1), arg3, in_RAX);\n                    }\n                    goto code_r0x00467913;\n                }\n                *(*0x20 + -0x30) = 0x46798f;\n                fcn.0045d540(0);\ncode_r0x0046798f:\n                *(*0x20 + -0x30) = 0x467996;\n                fcn.0045d480(pcVar5);\ncode_r0x00467996:\n                *(*0x20 + -0x30) = 0x46799b;\n                pcVar3 = fcn.0045d480(pcVar5);\n                cVar4 = pcVar5;\n                goto code_r0x0046799b;\n            }\n            *(*0x20 + -0x30) = 0x467a5c;\n            arg1 = unaff_RBX;\n            fcn.0045d560(pcVar6);\n            unaff_RBX = pcVar5;\n            unaff_RDI = ppcVar9;\ncode_r0x00467a5c:\n            *(*0x20 + -0x30) = 0x467a67;\n            in_RAX = fcn.0045d4a0(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = cVar8;\n        puVar7[0x29] = arg3;\n        *(puVar7 + -8) = 0x467a8b;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = puVar7[0x28];\n        arg3 = puVar7[0x29];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2204
    },
    "00468500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00468500(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar6;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x51) = in_R9B;\n            *(*0x20 + -0x52) = in_R10B;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 8) = in_RAX;\n                iVar2 = unaff_RSI + unaff_RBX + 2;\n                *(*0x20 + -0x48) = iVar2;\n                *(*0x20 + -0xa0) = 0x468586;\n                in_RAX = fcn.004449e0(iVar2);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0xa0) = 0x4685a8;\n                    fcn.0045ddc0(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = *(*0x20 + -0x48);\n            }\n            arg1_00 = unaff_RBX + 1;\n            iVar2 = in_RAX;\n            uVar4 = unaff_RBX;\n            if (arg1 < arg1_00) {\n                *(*0x20 + -0xa0) = 0x468605;\n                iVar2 = fcn.00444ac0(unaff_RBX);\n                arg1_00 = in_RAX + 1;\n                uVar4 = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = unaff_RBX;\n            }\n            *(iVar2 + uVar4) = in_R8B;\n            while( true ) {\n                *(*0x20 + -0x28) = arg1_00;\n                if (uVar6 < 1) {\n                    if (arg1 < arg1_00 + 1) {\n                        *(*0x20 + -0xa0) = 0x4688ca;\n                        iVar2 = fcn.00444ac0(arg1_00);\n                        in_R8B = *(*0x20 + 0x30);\n                        arg1_00 = *(*0x20 + -0x28);\n                    }\n                    *(iVar2 + arg1_00) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x30) = uVar6;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    unaff_RBX = 1;\n                    unaff_RSI = uVar6;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0xa0) = 0x4686a5;\n                    uVar1 = fcn.004637e0();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    arg1_00 = *(*0x20 + -0x28);\n                    iVar2 = *(*0x20 + -0x20);\n                    unaff_RBX = uVar6;\n                }\n                *(*0x20 + -0x50) = unaff_RBX;\n                if ((unaff_RBX == 1) && (uVar1 == 0xfffd)) {\n                    uVar6 = arg1_00 + 2;\n                    uVar4 = arg1_00;\n                    if (arg1 < uVar6) {\n                        *(*0x20 + -0x40) = uVar6;\n                        *(*0x20 + -0xa0) = 0x468725;\n                        iVar2 = fcn.00444ac0(arg1_00);\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x40);\n                        arg1 = arg1_00;\n                    }\n                    *(iVar2 + uVar4) = 0x785c;\n                    arg1_01 = uVar4 + 3;\n                    uVar7 = *((*unaff_RDI >> 4) + 0x4a8168);\n                    iVar3 = iVar2;\n                    if (arg1 < arg1_01) {\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x46879f;\n                        iVar3 = fcn.00444ac0(uVar6);\n                        arg1_01 = iVar2 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = uVar6;\n                    }\n                    *(uVar4 + 2 + iVar3) = uVar7;\n                    arg1_00 = arg1_01 + 1;\n                    uVar7 = *((*unaff_RDI & 0xf) + 0x4a8168);\n                    iVar2 = iVar3;\n                    uVar6 = arg1_01;\n                    if (arg1 < arg1_00) {\n                        *(*0x20 + -0x28) = arg1_01;\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x46881e;\n                        iVar2 = fcn.00444ac0(arg1_01);\n                        arg1_00 = iVar3 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar6 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = arg1_01;\n                    }\n                    *(iVar2 + uVar6) = uVar7;\n                }\n                else {\n                    *(*0x20 + -0xa0) = 0x468874;\n                    iVar2 = fcn.00468ac0(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    unaff_RBX = *(*0x20 + -0x50);\n                }\n                if (unaff_RSI < unaff_RBX) break;\n                uVar6 = unaff_RSI - unaff_RBX;\n                unaff_RDI = unaff_RDI + (unaff_RBX & -uVar6 >> 0x3f);\n            }\n            *(*0x20 + -0xa0) = 0x468905;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045d540(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8B;\n        puVar5[0x31] = in_R9B;\n        puVar5[0x32] = in_R10B;\n        *(puVar5 + -8) = 0x468933;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8B = puVar5[0x30];\n        in_R9B = puVar5[0x31];\n        in_R10B = puVar5[0x32];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2688
    },
    "004692e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004692e0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            while( true ) {\n                if (unaff_RBX < 1) {\n                    return 1;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x30) = 0x46931d;\n                iVar1 = fcn.004637e0();\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < unaff_RBX) break;\n                uVar2 = uVar2 - unaff_RBX;\n                in_RAX = (-uVar2 >> 0x3f & unaff_RBX) + *(*0x20 + -0x10);\n                if (unaff_RBX < 2) {\n                    if (iVar1 == 0xfffd) {\n                        return 0;\n                    }\n                    if (iVar1 < 0x20) {\n                        unaff_RBX = uVar2;\n                        if (iVar1 != 9) {\n                            return 0;\n                        }\n                    }\n                    else if ((iVar1 == 0x60) || (unaff_RBX = uVar2,  iVar1 == 0x7f)) {\n                        return 0;\n                    }\n                }\n                else {\n                    unaff_RBX = uVar2;\n                    if (iVar1 == 0xfeff) {\n                        return 0;\n                    }\n                }\n            }\n            *(*0x20 + -0x30) = 0x4693ae;\n            in_RAX = fcn.0045d540(uVar2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4693be;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "00469a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00469a40(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t *noname_1;\n    int64_t **ppiVar7;\n    uchar *puVar8;\n    int32_t *arg2;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong arg3;\n    ulong arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack0000000000000028;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    ulong uStack24;\n    char cStack16;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack72 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        auStack72 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack72._0_8_ == 0x49c5e0) {\n        uVar6 = *auStack72._8_8_;\n        cStack16 = *(auStack72._8_8_ + 1);\n    }\n    else {\n        cStack16 = 0;\n        uVar6 = 0;\n    }\n    arg4 = uVar6;\n    uStack24 = uVar6;\n    auStack40._0_8_ = unaff_RBX;\n    auStack40._8_8_ = arg1;\n    fcn.0040d100(auStack40);\n    if ((uVar6 != '\\0') &&\n       (auStack40._0_8_ = fcn.00469fc0(uStack0000000000000028),  auStack40._8_8_ = unaff_RDI,  unaff_RDI != '\\0')) {\n        return auStack40._0_8_;\n    }\n    LOCK();\n    if (*in_RAX == 0) {\n        *in_RAX = 1;\n    }\n    else {\n        fcn.0046a460();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack56 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack56._0_8_ == 0x49c5e0) {\n        uVar6 = *auStack56._8_8_;\n        cVar4 = *(auStack56._8_8_ + 1);\n    }\n    else {\n        cVar4 = '\\0';\n        uVar6 = 0;\n    }\n    arg3 = uVar6;\n    uStack24 = uVar6;\n    cStack16 = cVar4;\n    auStack40._8_8_ = arg1;\n    puVar5 = fcn.0040d100(auStack40);\n    uVar3 = *puVar5;\n    if (uVar6 == '\\0') {\n        uVar3 = *(in_RAX + 6);\n        auStack40._8_8_ = arg1;\n        fcn.0040d100(auStack40);\n        if (uVar3 == '\\0') {\n            if (cVar4 == '\\0') {\n                fcn.0046a200();\n                cStack16 = '\\x01';\n                uStack24 = uVar6;\n                fcn.004098a0();\n                fcn.00462fa0(&uStack24);\n            }\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar5 = fcn.0040c140();\n            *puVar5 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (*0x598440 == 0) {\n                puVar5[1] = uStack0000000000000028;\n            }\n            else {\n                fcn.0045d100(unaff_RDI, uStack0000000000000028, arg3, arg4);\n            }\n            noname_1 = fcn.0040c140();\n            if (*0x598440 == 0) {\n                *noname_1 = puVar5;\n            }\n            else {\n                fcn.0045d100(uVar6, puVar5, arg3, arg4);\n            }\n            puVar8 = auStack40;\n            ppiVar7 = fcn.0040d540(puVar8);\n            if (*0x598440 == 0) {\n                *ppiVar7 = noname_1;\n            }\n            else {\n                fcn.0045d100(puVar8, noname_1, arg3, arg4);\n            }\n        }\n        else {\n            uVar6 = fcn.00469fc0(uStack0000000000000028);\n            auStack40 = CONCAT88(unaff_RDI, uVar6);\n            fcn.0046a120();\n            unaff_RDI = uVar6;\n        }\n    }\n    else {\n        cVar4 = fcn.004577c0(0);\n        if (cVar4 != '\\0') {\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar8 = auStack40;\n            arg2 = in_RAX;\n            puVar5 = fcn.0040d540(puVar8);\n            if (*0x598440 == 0) {\n                *puVar5 = uVar3;\n            }\n            else {\n                fcn.0045cfe0(puVar8, arg2, arg3, arg4);\n            }\n        }\n        uVar6 = fcn.00469fc0(uStack0000000000000028);\n        auStack40 = CONCAT88(unaff_RDI, uVar6);\n        unaff_RDI = uVar6;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.0046a760();\n    }\n    return unaff_RDI;\n}\n",
        "token_count": 1462
    },
    "00469fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00469fc0(ulong arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    puVar3 = *in_RAX;\n    if (puVar3 == *0x543b28) {\n        return 0;\n    }\n    if (puVar3 != NULL) {\n        return *puVar3;\n    }\n    puVar3 = fcn.0040c140();\n    *puVar3 = unaff_RBX;\n    if (*0x598440 == 0) {\n        puVar3[1] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045d100(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    while( true ) {\n        cVar2 = fcn.004577c0(puVar3);\n        if (cVar2 != '\\0') {\n            return unaff_RBX;\n        }\n        puVar1 = *in_RAX;\n        if (puVar1 == *0x543b28) break;\n        if (puVar1 != NULL) {\n            return *puVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "0046a120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046a120(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    ulong uStack24;\n    uchar uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(in_RAX + 0x20) + 1;\n    *(in_RAX + 0x20) = iVar1;\n    if (*(in_RAX + 0x18) == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = **(in_RAX + 0x18);\n    }\n    if (iVar2 <= iVar1) {\n        uStack16 = 0;\n        uStack24 = *(in_RAX + 0x18);\n        fcn.004098a0();\n        fcn.00462fa0(&uStack24);\n        if (*0x598440 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045d0e0(0);\n        }\n        *(in_RAX + 0x20) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "0046a200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046a200(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_R14;\n    ulong uStack120;\n    ulong uStack112;\n    ulong *puStack104;\n    ulong *puStack96;\n    uchar auStack64 [56];\n    \n    while (auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x18) != 0) {\n        return;\n    }\n    uVar5 = 0;\n    uVar3 = fcn.0040cce0(0);\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x18) = uVar3;\n    }\n    else {\n        fcn.0045cfe0(uVar5, in_RAX, param_3, param_4);\n    }\n    fcn.0045d72b();\n    fcn.0040da60(&puStack104, in_RAX, param_3, param_4);\n    while (puStack104 != NULL) {\n        uVar3 = *puStack96;\n        uVar5 = *puStack104;\n        uVar1 = puStack104[1];\n        cVar2 = fcn.0046a3e0();\n        if (cVar2 == '\\0') {\n            uStack120 = uVar5;\n            uStack112 = uVar1;\n            puVar4 = fcn.0040d540(&uStack120);\n            if (*0x598440 == 0) {\n                *puVar4 = uVar3;\n            }\n            else {\n                fcn.0045d0e0(uVar3);\n            }\n        }\n        fcn.0040dce0();\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "0046a460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0046a460(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00458360();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.004583e0();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00458000();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.004589a0();\n        }\n        fcn.00458860(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.004589a0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00458000();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 795
    },
    "0046a840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046a840(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack64 [16];\n    uchar auStack48 [16];\n    uint uStack32;\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.0046a460();\n    }\n    auStack64 = CONCAT88(in_RAX + 1, 0x46a9e0);\n    ppcStack16 = auStack64;\n    if (*in_RAX == 0) {\n        auStack48 = CONCAT88(in_RAX, 0x46a9a0);\n        uStack32 = 1;\n        ppcStack24 = auStack48;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 332
    },
    "0046aa40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046aa40(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX == 0) {\n        return;\n    }\n    arg1_00 = arg1;\n    piVar1 = fcn.0046adc0();\n    if (*piVar1 == 0) {\n        *piVar1 = unaff_RBX;\n        if (*0x598440 == 0) {\n            piVar1[1] = arg1;\n        }\n        else {\n            fcn.0045d100(arg1_00, arg1, in_R8, in_R9);\n        }\n        unaff_RBX = 0;\n        arg1 = 0;\n    }\n    if (unaff_RBX != 0) {\n        fcn.0046b620(arg1);\n    }\n    fcn.00458300();\n    return;\n}\n",
        "token_count": 282
    },
    "0046ab20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046ab20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = fcn.0046adc0();\n    arg1 = *piVar1;\n    *piVar1 = 0;\n    if (*0x598440 == 0) {\n        piVar1[1] = 0;\n    }\n    else {\n        fcn.0045d140(arg1, piVar1[1], param_3, param_4);\n    }\n    if ((arg1 == 0) && (arg1 = fcn.0046b800(),  arg1 == 0)) {\n        arg1 = fcn.0046ac00();\n    }\n    fcn.00458300();\n    if ((arg1 == 0) && (*(in_RAX + 0x20) != NULL)) {\n        (***(in_RAX + 0x20))();\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "0046ac00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046ac00(void)\n\n{\n    uint64_t uVar1;\n    ulong *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    ulong uVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar3 = in_RAX[1];\n    uVar5 = *in_RAX;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        if (iVar3 == -1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (iVar4 + unaff_RBX + 1) % iVar3;\n        }\n        iVar2 = fcn.0046b880(iVar3, iVar2 << 7);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    uVar1 = in_RAX[3];\n    if (uVar1 <= unaff_RBX) {\n        return 0;\n    }\n    iVar4 = in_RAX[2];\n    iVar2 = unaff_RBX * 0x80;\n    iVar3 = *(iVar4 + iVar2);\n    if (iVar3 != 0) {\n        *(iVar4 + iVar2) = 0;\n        if (*0x598440 == 0) {\n            *(iVar4 + 8 + iVar2) = 0;\n        }\n        else {\n            fcn.0045d0e0(0, iVar4, iVar3, *(iVar4 + 8 + iVar2), uVar5);\n        }\n        return iVar3;\n    }\n    iVar4 = 0;\n    while( true ) {\n        if (uVar1 <= iVar4) {\n            in_RAX[3] = 0;\n            return 0;\n        }\n        if (uVar1 == 0xffffffffffffffff) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (iVar4 + unaff_RBX) % uVar1;\n        }\n        iVar3 = fcn.0046b880(uVar1, iVar3 << 7);\n        if (iVar3 != 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 550
    },
    "0046ae40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046ae40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t arg2;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&ppcStack16 < *(unaff_R14 + 0x10) || &ppcStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    ppcStack16 = NULL;\n    fcn.00458300();\n    LOCK();\n    if (*0x5983e0 == 0) {\n        *0x5983e0 = 1;\n    }\n    else {\n        fcn.0046a460();\n    }\n    auStack32 = CONCAT88(0x5983e0, 0x46b0e0);\n    ppcStack16 = auStack32;\n    uVar1 = fcn.004582e0();\n    uVar3 = *0x544510;\n    iVar4 = *in_RAX;\n    if (in_RAX[1] < uVar1 || in_RAX[1] == uVar1) {\n        if (iVar4 == 0) {\n            uVar5 = *0x544518;\n            uVar2 = *0x544510;\n            if ((*0x544520 < *0x544518 + 1) &&\n               (arg1 = *0x544518,  arg2 = *0x544518,  uVar2 = fcn.00444ac0(*0x544518),  uVar5 = uVar3,  uVar3 = uVar2, \n               *0x544520 = arg1,  *0x598440 != 0)) {\n                uVar2 = fcn.0045cfe0(arg1, arg2, param_3, param_4);\n                uVar3 = *0x544510;\n            }\n            *0x544510 = uVar3;\n            *0x544518 = uVar5 + 1;\n            if (*0x598440 == 0) {\n                *(uVar2 + uVar5 * 8) = in_RAX;\n            }\n            else {\n                fcn.0045d0e0();\n            }\n        }\n        uVar3 = fcn.00405d60();\n        iVar4 = fcn.004449e0(uVar3);\n        if (uVar3 != 0) {\n            fcn.00457760();\n            in_RAX[1] = uVar3;\n            if (uVar1 < uVar3) {\n                (**ppcStack16)();\n                return uVar1 * 0x80 + iVar4;\n            }\n            fcn.0045d480(uVar3);\n        }\n        fcn.0045d480(uVar3);\n        fcn.00431660();\n        return 0;\n    }\n    (**ppcStack16)();\n    return uVar1 * 0x80 + iVar4;\n}\n",
        "token_count": 725
    },
    "0046b2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046b2e0(uint64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t *in_RAX;\n    uint64_t arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        arg1_00 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = in_RAX[2];\n            arg4 = in_RAX[1];\n            uVar1 = *in_RAX >> 0x20;\n            if (uVar1 == *in_RAX + arg1_00) {\n                return 0;\n            }\n            uVar2 = uVar1 & arg1_00 - 1;\n            if (uVar2 < arg1_00) {\n                arg2 = uVar2 * 0x10;\n                if (*(arg4 + arg2) == 0) {\n                    iVar4 = 0x497720;\n                    if (unaff_RBX != 0) {\n                        iVar4 = unaff_RBX;\n                    }\n                    *(arg4 + arg2) = iVar4;\n                    uVar2 = 0;\n                    if (unaff_RBX != 0) {\n                        uVar2 = arg1;\n                    }\n                    if (*0x598440 == 0) {\n                        *(arg4 + 8 + arg2) = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x46b36f;\n                        in_RAX = fcn.0045d120(arg1, arg2, arg1_00 - 1, arg4);\n                    }\n                    LOCK();\n                    *in_RAX = *in_RAX + 0x100000000;\n                    return 1;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x20) = 0x46b3af;\n            in_RAX = fcn.0045d480(arg1_00);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1_00;\n        *(puVar3 + -8) = 0x46b3c5;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 729
    },
    "0046b3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046b3e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t arg2;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                iVar5 = uVar1 >> 0x20;\n                if (uVar1 == iVar5) {\n                    return 0;\n                }\n                uVar6 = iVar5 - 1;\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar6 << 0x20 | uVar1 & 0xffffffff));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg2 = *(uVar2 + 8 + iVar4);\n                arg3 = *(uVar2 + iVar4);\n                if ((arg3 == 0x497720) && (arg2 == 0)) {\n                    arg3 = 0;\n                    arg2 = 0;\n                }\n                arg4 = uVar2 + iVar4 + 8;\n                if (*0x598440 == 0) {\n                    *(uVar2 + iVar4) = 0;\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x46b49e;\n                    fcn.0045d140(in_RAX, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x46b4a6;\n                    fcn.0045d140(in_RAX, arg2, arg3, arg4);\n                }\n                return arg3;\n            }\n            *(*0x20 + -0x20) = 0x46b4d3;\n            in_RAX = fcn.0045d480(uVar1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x46b4de;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 724
    },
    "0046b500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046b500(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t arg2;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar6 = uVar1;\n                if (uVar6 == uVar1 >> 0x20) {\n                    return 0;\n                }\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar1 & 0xffffffff00000000 | uVar6 + 1));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg1 = *(uVar2 + 8 + iVar4);\n                arg2 = *(uVar2 + iVar4);\n                if ((arg2 == 0x497720) && (arg1 == 0)) {\n                    arg2 = 0;\n                    arg1 = 0;\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = arg2;\n                if (*0x598440 == 0) {\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x46b5bf;\n                    fcn.0045d120(arg1, arg2, uVar2 + iVar4, arg4);\n                }\n                *(*0x20 + -0x30) = 0x46b5c9;\n                fcn.00457760();\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x30) = 0x46b5fa;\n            in_RAX = fcn.0045d480(uVar1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46b605;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 717
    },
    "0046b620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046b620(ulong arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t noname_1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t arg1_01;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar4 = *in_RAX;\n    noname_1 = iVar4;\n    if (iVar4 == 0) {\n        noname_1 = fcn.0040c140();\n        arg1_00 = 8;\n        uVar2 = fcn.004449e0(8);\n        *(noname_1 + 0x10) = 8;\n        *(noname_1 + 0x18) = 8;\n        if (*0x598440 == 0) {\n            *(noname_1 + 8) = uVar2;\n            *in_RAX = noname_1;\n        }\n        else {\n            fcn.0045cfe0(arg1_00, iVar4, in_R8, in_R9);\n            fcn.0045d120(arg1_00, iVar4, in_R8, in_R9);\n        }\n        fcn.00457760(in_RAX);\n    }\n    cVar1 = fcn.0046b2e0(arg1);\n    if (cVar1 == '\\0') {\n        iVar4 = *(noname_1 + 0x10);\n        iVar3 = fcn.0040c140();\n        iVar4 = iVar4 * 2;\n        if (0x3fffffff < iVar4) {\n            iVar4 = 0x40000000;\n        }\n        if (*0x598440 == 0) {\n            *(iVar3 + 0x28) = noname_1;\n        }\n        else {\n            fcn.0045d100(iVar4, noname_1, in_R8, in_R9);\n        }\n        arg1_01 = iVar4;\n        uVar2 = fcn.004449e0(iVar4);\n        *(iVar3 + 0x10) = iVar4;\n        *(iVar3 + 0x18) = iVar4;\n        if (*0x598440 == 0) {\n            *(iVar3 + 8) = uVar2;\n            *in_RAX = iVar3;\n        }\n        else {\n            fcn.0045cfe0(arg1_01, iVar4, in_R8, in_R9);\n            fcn.0045d120(arg1_01, iVar4, in_R8, in_R9);\n        }\n        fcn.00457760(noname_1);\n        fcn.0046b2e0(arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 676
    },
    "0046f900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0046f900(void)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    ulong *in_RAX;\n    int64_t iVar7;\n    int64_t arg1;\n    int64_t *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t **arg3_00;\n    int64_t **ppiVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = in_RAX[1];\n            arg1 = in_RAX[4];\n            iVar1 = in_RAX[3];\n            iVar7 = iVar1;\n            if (in_RAX[5] < arg1 + 1U) {\n                *(*0x20 + -0x88) = uVar8;\n                *(*0x20 + -0xd8) = 0x46f965;\n                arg3 = iVar1;\n                iVar7 = fcn.00444ac0(arg1);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = arg1;\n                if (*0x598440 == 0) {\n                    *(arg2 + 0x18) = iVar7;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x46f98b;\n                    iVar7 = fcn.0045cfe0(arg1, arg2, arg3, in_R9);\n                }\n                uVar8 = *(*0x20 + -0x88);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = iVar1;\n            }\n            in_RAX[4] = arg1 + 1;\n            *(iVar7 + arg1 * 8) = uVar8;\n            if (*unaff_RBX == 0) {\n                in_RAX[6] = -*(unaff_RBX + 0x15) & (in_RAX[6] + *(unaff_RBX + 0x15)) - 1;\n                return NULL;\n            }\n            *(*0x20 + -0x50) = *in_RAX;\n            uVar3 = *(in_RAX + 0xc);\n            uVar4 = *(in_RAX + 2);\n            uVar5 = *(in_RAX + 0x14);\n            *(*0x20 + -0x48) = *(in_RAX + 1);\n            *(*0x20 + -0x44) = uVar3;\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x3c) = uVar5;\n            uVar3 = *(in_RAX + 0x1c);\n            uVar4 = *(in_RAX + 4);\n            uVar5 = *(in_RAX + 0x24);\n            *(*0x20 + -0x38) = *(in_RAX + 3);\n            *(*0x20 + -0x34) = uVar3;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x2c) = uVar5;\n            uVar3 = *(in_RAX + 0x2c);\n            uVar4 = *(in_RAX + 6);\n            uVar5 = *(in_RAX + 0x34);\n            *(*0x20 + -0x28) = *(in_RAX + 5);\n            *(*0x20 + -0x24) = uVar3;\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x1c) = uVar5;\n            uVar3 = *(in_RAX + 0x3c);\n            uVar4 = *(in_RAX + 8);\n            uVar5 = *(in_RAX + 0x44);\n            *(*0x20 + -0x18) = *(in_RAX + 7);\n            *(*0x20 + -0x14) = uVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar5;\n            *(*0x20 + -0xd8) = 0x46f9fe;\n            cVar6 = fcn.0046fe60(0);\n            if (cVar6 != '\\0') {\n                return NULL;\n            }\n            if (*0x598440 == 0) {\n                arg3_00 = *(*0x20 + 8);\n                *arg3_00 = *(*0x20 + -0x50);\n                uVar3 = *(*0x20 + -0x44);\n                uVar4 = *(*0x20 + -0x40);\n                uVar5 = *(*0x20 + -0x3c);\n                *(arg3_00 + 1) = *(*0x20 + -0x48);\n                *(arg3_00 + 0xc) = uVar3;\n                *(arg3_00 + 2) = uVar4;\n                *(arg3_00 + 0x14) = uVar5;\n                uVar3 = *(*0x20 + -0x34);\n                uVar4 = *(*0x20 + -0x30);\n                uVar5 = *(*0x20 + -0x2c);\n                *(arg3_00 + 3) = *(*0x20 + -0x38);\n                *(arg3_00 + 0x1c) = uVar3;\n                *(arg3_00 + 4) = uVar4;\n                *(arg3_00 + 0x24) = uVar5;\n                uVar3 = *(*0x20 + -0x24);\n                uVar4 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x1c);\n                *(arg3_00 + 5) = *(*0x20 + -0x28);\n                *(arg3_00 + 0x2c) = uVar3;\n                *(arg3_00 + 6) = uVar4;\n                *(arg3_00 + 0x34) = uVar5;\n                uVar3 = *(*0x20 + -0x14);\n                uVar4 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0xc);\n                *(arg3_00 + 7) = *(*0x20 + -0x18);\n                *(arg3_00 + 0x3c) = uVar3;\n                *(arg3_00 + 8) = uVar4;\n                *(arg3_00 + 0x44) = uVar5;\n            }\n            else {\n                *(*0x20 + -0xd8) = 0x46fa76;\n                fcn.00410c20(*0x20 + -0x50);\n                arg3_00 = *(*0x20 + 8);\n            }\n            in_R9 = **(*0x20 + 0x10);\n            uVar9 = *(*(*0x20 + 0x10) + 0x15);\n            arg3_00[6] = -uVar9 & arg3_00[6] + (uVar9 - 1);\n            *(*0x20 + -0x80) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x80) = 1;\n            *(*0x20 + -0x70) = in_R9;\n            piVar10 = arg3_00[6];\n            *(*0x20 + -0x68) = piVar10;\n            arg1_00 = arg3_00[1];\n            piVar2 = *arg3_00;\n            unaff_RBX = piVar2;\n            ppiVar12 = arg3_00;\n            if (arg3_00[2] < arg1_00 + 1U) {\n                *(*0x20 + -0x90) = in_R9;\n                *(*0x20 + -0xd8) = 0x46fafa;\n                unaff_RBX = fcn.00444ac0(arg1_00);\n                ppiVar12 = *(*0x20 + 8);\n                ppiVar12[2] = arg1_00;\n                if (*0x598440 == 0) {\n                    *ppiVar12 = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x46fb19;\n                    unaff_RBX = fcn.0045cfe0(arg1_00, piVar10, arg3_00, in_R9);\n                }\n                in_R9 = *(*0x20 + -0x90);\n                arg1_00 = piVar2;\n            }\n            ppiVar12[1] = arg1_00 + 1;\n            piVar10 = unaff_RBX + arg1_00 * 6;\n            uVar3 = *(*0x20 + -0x7c);\n            uVar4 = *(*0x20 + -0x78);\n            uVar5 = *(*0x20 + -0x74);\n            *piVar10 = *(*0x20 + -0x80);\n            *(piVar10 + 4) = uVar3;\n            *(piVar10 + 1) = uVar4;\n            *(piVar10 + 0xc) = uVar5;\n            uVar3 = *(*0x20 + -0x6c);\n            uVar4 = *(*0x20 + -0x68);\n            uVar5 = *(*0x20 + -100);\n            *(unaff_RBX + arg1_00 * 6 + 2) = *(*0x20 + -0x70);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x14) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 3) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x1c) = uVar5;\n            uVar3 = *(*0x20 + -0x5c);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x54);\n            *(unaff_RBX + arg1_00 * 6 + 4) = *(*0x20 + -0x60);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x24) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 5) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x2c) = uVar5;\n            ppiVar12[6] = ppiVar12[6] + in_R9;\n            piVar10 = ppiVar12[1];\n            if (piVar10 - 1U < piVar10) {\n                return *ppiVar12 + piVar10 * 6 + -6;\n            }\n            *(*0x20 + -0xd8) = 0x46fbd3;\n            in_RAX = fcn.0045d480(piVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x46fbe5;\n        fcn.0045ad80();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2857
    },
    "0046fc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046fc00(void)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int64_t arg2;\n    uint64_t arg1;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    uchar uVar8;\n    int64_t iVar9;\n    int64_t *arg2_00;\n    int64_t *piVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    ulong arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar9 = *(in_RAX + 0x20);\n            iVar2 = *(in_RAX + 0x18);\n            arg3 = *(in_RAX + 8);\n            iVar7 = iVar2;\n            if (*(in_RAX + 0x28) < iVar9 + 1U) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = arg3;\n                *(*0x20 + -0x90) = 0x46fc65;\n                iVar7 = fcn.00444ac0(iVar9);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = iVar9;\n                if (*0x598440 == 0) {\n                    *(arg2 + 0x18) = iVar7;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x46fc8b;\n                    iVar7 = fcn.0045cfe0(iVar9, arg2, arg3, in_R9);\n                }\n                arg3 = *(*0x20 + -0x40);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = iVar2;\n            }\n            in_R9 = iVar9 + 1;\n            *(in_RAX + 0x20) = in_R9;\n            *(iVar7 + iVar9 * 8) = arg3;\n            if (((*(unaff_RBX + 0x17) & 0x20) == 0) || (*(unaff_RBX + 8) != 0)) {\n                *(*0x20 + -0x90) = 0x46fcd8;\n                cVar6 = fcn.004705c0(8);\n                uVar8 = 1;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x46fcf2;\n                cVar6 = fcn.004705c0(8);\n                uVar8 = 0;\n            }\n            if (cVar6 != '\\0') {\n                return 0;\n            }\n            arg2_00 = *(*0x20 + 8);\n            arg2_00[6] = arg2_00[6] + 7U & 0xfffffffffffffff8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x38) = 1;\n            *(*0x20 + -0x28) = 8;\n            *(*0x20 + -0x20) = arg2_00[6];\n            iVar9 = arg2_00[1];\n            iVar2 = *arg2_00;\n            piVar10 = arg2_00;\n            unaff_RBX = iVar2;\n            if (arg2_00[2] < iVar9 + 1U) {\n                *(*0x20 + -0x41) = uVar8;\n                *(*0x20 + -0x90) = 0x46fd72;\n                iVar7 = iVar9;\n                unaff_RBX = fcn.00444ac0(iVar9);\n                piVar10 = *(*0x20 + 8);\n                piVar10[2] = iVar9;\n                if (*0x598440 == 0) {\n                    *piVar10 = unaff_RBX;\n                    iVar9 = iVar2;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x46fd91;\n                    unaff_RBX = fcn.0045cfe0(iVar9, arg2_00, iVar7, in_R9);\n                    iVar9 = iVar2;\n                }\n            }\n            piVar10[1] = iVar9 + 1;\n            puVar1 = unaff_RBX + iVar9 * 0x30;\n            uVar3 = *(*0x20 + -0x34);\n            uVar4 = *(*0x20 + -0x30);\n            uVar5 = *(*0x20 + -0x2c);\n            *puVar1 = *(*0x20 + -0x38);\n            puVar1[1] = uVar3;\n            puVar1[2] = uVar4;\n            puVar1[3] = uVar5;\n            iVar9 = unaff_RBX + iVar9 * 0x30;\n            uVar3 = *(*0x20 + -0x24);\n            uVar4 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x1c);\n            *(iVar9 + 0x10) = *(*0x20 + -0x28);\n            *(iVar9 + 0x14) = uVar3;\n            *(iVar9 + 0x18) = uVar4;\n            *(iVar9 + 0x1c) = uVar5;\n            uVar3 = *(*0x20 + -0x14);\n            uVar4 = *(*0x20 + -0x10);\n            uVar5 = *(*0x20 + -0xc);\n            *(iVar9 + 0x20) = *(*0x20 + -0x18);\n            *(iVar9 + 0x24) = uVar3;\n            *(iVar9 + 0x28) = uVar4;\n            *(iVar9 + 0x2c) = uVar5;\n            piVar10[6] = piVar10[6] + 8;\n            arg1 = piVar10[1];\n            if (arg1 - 1 < arg1) {\n                return arg1 * 0x30 + *piVar10 + -0x30;\n            }\n            *(*0x20 + -0x90) = 0x46fe27;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x46fe37;\n        fcn.0045ad80();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1716
    },
    "0046fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0046fe60(int64_t arg1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg2;\n    uint64_t *unaff_RBX;\n    int64_t arg3;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint64_t *puStackX16;\n    uint64_t uStack176;\n    uint64_t uStack160;\n    ulong uStack144;\n    uchar auStack136 [8];\n    uint uStack128;\n    uint uStack124;\n    uchar auStack120 [8];\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [8];\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [8];\n    ulong uStack48;\n    uchar auStack40 [8];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [8];\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        puStackX16 = unaff_RBX;\n    }\n    uVar7 = *(unaff_RBX + 0x17) & 0x1f;\n    if (0x10 < uVar7) {\n        if (uVar7 < 0x17) {\n            if (uVar7 < 0x14) {\n                if (uVar7 == 0x11) {\n                    if (unaff_RBX[8] == 0) {\n                        return 1;\n                    }\n                    if (unaff_RBX[8] == 1) {\n                        uVar4 = fcn.0046fe60(arg1);\n                        return uVar4;\n                    }\n                    return 0;\n                }\n            }\n            else if (uVar7 == 0x14) {\n                uVar4 = fcn.004705c0(8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0x19) {\n                if (uVar7 == 0x17) {\n                    uVar4 = fcn.004705c0(8);\n                    return uVar4;\n                }\n                uVar4 = fcn.004705c0(8);\n                return uVar4;\n            }\n            if (uVar7 == 0x19) {\n                uStack160 = unaff_RBX[8];\n                uStack176 = 0;\n                puStackX16 = unaff_RBX;\n                goto code_r0x00470198;\n            }\n            if (uVar7 != 0x1a) goto code_r0x00470135;\n        }\n        uVar4 = fcn.004705c0(*unaff_RBX);\n        return uVar4;\n    }\n    if (uVar7 < 0xc) {\n        if (uVar7 < 7) {\n            if (uVar7 - 1 < 5) goto code_r0x0046ff8b;\n            if (uVar7 == 6) {\ncode_r0x0046ffbf:\n                uVar4 = fcn.004705c0(8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0xb) goto code_r0x0046ff8b;\n            if (uVar7 == 0xb) goto code_r0x0046ffbf;\n        }\ncode_r0x00470135:\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434940();\n        fcn.00434760();\n        fcn.004327c0();\n        do {\n            uStack176 = uStack176 + 1;\ncode_r0x00470198:\n            if (uStack160 <= uStack176) {\n                return 1;\n            }\n            if (puStackX16[8] <= uStack176) {\n                uVar4 = fcn.0045d480(puStackX16[8]);\n                return uVar4;\n            }\n            cVar2 = fcn.0046fe60((*(puStackX16[7] + 0x10 + uStack176 * 0x18) >> 1) + arg1);\n        } while (cVar2 != '\\0');\n        return 0;\n    }\n    if (0xe < uVar7) {\n        if (uVar7 == 0xf) {\n            if ((*0x52c258 < in_RAX[8] + 2) || (*0x52c260 < 4)) {\n                uVar4 = 0;\n            }\n            else {\n                for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                    uStack96 = SUB168(in_XMM15 >> 0x40, 0);\n                    _auStack104 = CONCAT88(arg1 + iVar9 * 4, 4);\n                    _auStack88 = CONCAT88(uStack96, 4);\n                    _auStack72 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                    iVar6 = in_RAX[1];\n                    iVar5 = *in_RAX;\n                    iVar3 = iVar5;\n                    if (in_RAX[2] < iVar6 + 1U) {\n                        iVar10 = iVar9;\n                        iVar8 = iVar6;\n                        iVar3 = fcn.00444ac0(iVar6);\n                        in_RAX[2] = iVar6;\n                        if (*0x598440 == 0) {\n                            *in_RAX = iVar3;\n                            iVar6 = iVar5;\n                        }\n                        else {\n                            iVar3 = fcn.0045cfe0(iVar6, iVar10, iVar8, in_R9);\n                            iVar6 = iVar5;\n                        }\n                    }\n                    in_RAX[1] = iVar6 + 1;\n                    in_R9 = iVar3 + iVar6 * 0x30;\n                    *in_R9 = auStack104._0_4_;\n                    in_R9[1] = auStack104._4_4_;\n                    in_R9[2] = uStack96;\n                    in_R9[3] = uStack96._4_4_;\n                    iVar3 = iVar3 + iVar6 * 0x30;\n                    *(iVar3 + 0x10) = auStack88._0_4_;\n                    *(iVar3 + 0x14) = auStack88._4_4_;\n                    *(iVar3 + 0x18) = uStack80;\n                    *(iVar3 + 0x1c) = uStack76;\n                    *(iVar3 + 0x20) = auStack72._0_4_;\n                    *(iVar3 + 0x24) = auStack72._4_4_;\n                    *(iVar3 + 0x28) = uStack64;\n                    *(iVar3 + 0x2c) = uStack60;\n                    in_RAX[8] = in_RAX[8] + 1;\n                }\n                uVar4 = 1;\n            }\n            return uVar4;\n        }\n        if ((in_RAX[8] + 2 <= *0x52c258) && (7 < *0x52c260)) {\n            for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                uStack144 = SUB168(in_XMM15 >> 0x40, 0);\n                iVar6 = arg1 + iVar9 * 8;\n                _auStack136 = CONCAT88(uStack144, 8);\n                _auStack120 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar5 = in_RAX[1];\n                iVar10 = *in_RAX;\n                iVar3 = iVar10;\n                if (in_RAX[2] < iVar5 + 1U) {\n                    iVar8 = iVar9;\n                    arg3 = iVar5;\n                    iVar3 = fcn.00444ac0(iVar5);\n                    in_RAX[2] = iVar5;\n                    if (*0x598440 == 0) {\n                        *in_RAX = iVar3;\n                        iVar5 = iVar10;\n                    }\n                    else {\n                        iVar3 = fcn.0045cfe0(iVar5, iVar8, arg3, in_R9);\n                        iVar5 = iVar10;\n                    }\n                }\n                in_RAX[1] = iVar5 + 1;\n                in_R9 = iVar3 + iVar5 * 0x30;\n                uStack144._0_4_ = iVar6;\n                uStack144._4_4_ = iVar6 >> 0x20;\n                *in_R9 = 4;\n                in_R9[1] = 0;\n                in_R9[2] = uStack144;\n                in_R9[3] = uStack144._4_4_;\n                iVar3 = iVar3 + iVar5 * 0x30;\n                *(iVar3 + 0x10) = auStack136._0_4_;\n                *(iVar3 + 0x14) = auStack136._4_4_;\n                *(iVar3 + 0x18) = uStack128;\n                *(iVar3 + 0x1c) = uStack124;\n                *(iVar3 + 0x20) = auStack120._0_4_;\n                *(iVar3 + 0x24) = auStack120._4_4_;\n                *(iVar3 + 0x28) = uStack112;\n                *(iVar3 + 0x2c) = uStack108;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    if (uVar7 != 0xc) {\n        uVar7 = *unaff_RBX;\n        if ((*0x52c258 < in_RAX[8] + 1) || (*0x52c260 < uVar7)) {\n            uVar4 = 0;\n        }\n        else {\n            for (iVar9 = 0; iVar9 < 1; iVar9 = iVar9 + 1) {\n                uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n                _auStack56 = CONCAT88(arg1 + iVar9 * uVar7, 4);\n                _auStack40 = CONCAT88(uStack48, uVar7);\n                _auStack24 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar6 = in_RAX[1];\n                iVar5 = *in_RAX;\n                iVar3 = iVar5;\n                if (in_RAX[2] < iVar6 + 1U) {\n                    arg2 = uVar7;\n                    iVar10 = iVar9;\n                    iVar8 = iVar6;\n                    iVar3 = fcn.00444ac0(iVar6);\n                    in_RAX[2] = iVar6;\n                    if (*0x598440 == 0) {\n                        *in_RAX = iVar3;\n                        iVar6 = iVar5;\n                    }\n                    else {\n                        iVar3 = fcn.0045cfe0(iVar6, arg2, iVar10, iVar8);\n                        iVar6 = iVar5;\n                    }\n                }\n                in_RAX[1] = iVar6 + 1;\n                puVar1 = iVar3 + iVar6 * 0x30;\n                *puVar1 = auStack56._0_4_;\n                puVar1[1] = auStack56._4_4_;\n                puVar1[2] = uStack48;\n                puVar1[3] = uStack48._4_4_;\n                iVar3 = iVar3 + iVar6 * 0x30;\n                *(iVar3 + 0x10) = auStack40._0_4_;\n                *(iVar3 + 0x14) = auStack40._4_4_;\n                *(iVar3 + 0x18) = uStack32;\n                *(iVar3 + 0x1c) = uStack28;\n                *(iVar3 + 0x20) = auStack24._0_4_;\n                *(iVar3 + 0x24) = auStack24._4_4_;\n                *(iVar3 + 0x28) = uStack16;\n                *(iVar3 + 0x2c) = uStack12;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            uVar4 = 1;\n        }\n        return uVar4;\n    }\ncode_r0x0046ff8b:\n    uVar4 = fcn.004705c0(*unaff_RBX);\n    return uVar4;\n}\n",
        "token_count": 2934
    },
    "004705c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004705c0(int64_t arg1)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    int64_t arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    ulong uVar9;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 9) {\n                if ((unaff_SIL == 0) || (arg1 == 8)) {\n                    if (in_RAX[7] + unaff_RDI <= *0x52c268) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 0x20) = unaff_RDI;\n                        *(*0x20 + 0x28) = unaff_SIL;\n                        *(*0x20 + 0x18) = arg1;\n                        for (arg2 = 0; arg2 < unaff_RDI; arg2 = arg2 + 1) {\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            uVar9 = 2;\n                            if ((unaff_SIL & 1 << (arg2 & 0x1f) & -(arg2 < 0x20)) != 0) {\n                                uVar9 = 3;\n                            }\n                            *(*0x20 + -0x38) = uVar9;\n                            *(*0x20 + -0x30) = unaff_RBX + arg2 * arg1;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x18) = in_RAX[7];\n                            arg1_00 = in_RAX[1];\n                            arg3 = arg1_00 + 1;\n                            iVar2 = *in_RAX;\n                            iVar7 = iVar2;\n                            if (in_RAX[2] < arg3) {\n                                *(*0x20 + -0x40) = arg2;\n                                *(*0x20 + -0x88) = 0x470726;\n                                iVar7 = fcn.00444ac0(arg1_00);\n                                piVar3 = *(*0x20 + 8);\n                                piVar3[2] = arg1_00;\n                                if (*0x598440 == 0) {\n                                    *piVar3 = iVar7;\n                                }\n                                else {\n                                    *(*0x20 + -0x88) = 0x470747;\n                                    iVar7 = fcn.0045cfe0(arg1_00, arg2, arg3, arg1);\n                                }\n                                arg2 = *(*0x20 + -0x40);\n                                unaff_SIL = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                arg1 = *(*0x20 + 0x18);\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                arg1_00 = iVar2;\n                            }\n                            in_RAX[1] = arg1_00 + 1;\n                            puVar1 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x34);\n                            uVar5 = *(*0x20 + -0x30);\n                            uVar6 = *(*0x20 + -0x2c);\n                            *puVar1 = *(*0x20 + -0x38);\n                            puVar1[1] = uVar4;\n                            puVar1[2] = uVar5;\n                            puVar1[3] = uVar6;\n                            iVar7 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x24);\n                            uVar5 = *(*0x20 + -0x20);\n                            uVar6 = *(*0x20 + -0x1c);\n                            *(iVar7 + 0x10) = *(*0x20 + -0x28);\n                            *(iVar7 + 0x14) = uVar4;\n                            *(iVar7 + 0x18) = uVar5;\n                            *(iVar7 + 0x1c) = uVar6;\n                            uVar4 = *(*0x20 + -0x14);\n                            uVar5 = *(*0x20 + -0x10);\n                            uVar6 = *(*0x20 + -0xc);\n                            *(iVar7 + 0x20) = *(*0x20 + -0x18);\n                            *(iVar7 + 0x24) = uVar4;\n                            *(iVar7 + 0x28) = uVar5;\n                            *(iVar7 + 0x2c) = uVar6;\n                            in_RAX[7] = in_RAX[7] + 1;\n                        }\n                        return 1;\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x88) = 0x4707a7;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7cd8;\n            *(*0x20 + -0x88) = 0x4707ba;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        puVar8[0x28] = unaff_SIL;\n        *(puVar8 + -8) = 0x4707d9;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_SIL = puVar8[0x28];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1578
    },
    "00471120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00471120(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x200 && *0x20 + -0x200 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x280;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RSI >> 9 & 1) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x1a0) = unaff_RSI;\n                *(*0x20 + -0x180) = unaff_RDI;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x188) = arg1;\n                *(*0x20 + -0x1b1) = *(arg1 + 0x17);\n                *(*0x20 + -0x288) = 0x4711ac;\n                iVar1 = fcn.004758a0(unaff_RSI);\n                uVar5 = *(*0x20 + -0x1b1) & 0x1f | *(*0x20 + -0x1a0) & 0x1e0;\n                if (iVar1 == 0x4c9f20) {\n                    *(*0x20 + -0x1b0) = uVar5;\n                    *(*0x20 + -400) = unaff_RDI;\n                    *(*0x20 + -0x1a8) = CONCAT71(*0x4b0151, *0x4b0150);\n                    *(*0x20 + -0xc0) = 0;\n                    *(*0x20 + -0x290) = unaff_RBP;\n                    *(*0x20 + -0x288) = 0x47122f;\n                    fcn.0045d70f();\n                    uVar3 = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x47123d;\n                    fcn.00472340();\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x280);\n                    *(*0x20 + -0x290) = uVar3;\n                    *(*0x20 + -0x288) = 0x47126f;\n                    fcn.0045da46();\n                    *(*0x20 + -0x178) = *(*0x20 + -0xc0);\n                    *(*0x20 + -0x290) = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x4712af;\n                    fcn.0045da46();\n                    *(*0x20 + -0x288) = 0x4712bf;\n                    puVar2 = fcn.0040c140();\n                    *puVar2 = *(*0x20 + -0x1a8);\n                    if (*0x598440 == 0) {\n                        puVar2[1] = *(*0x20 + -0xd0);\n                    }\n                    else {\n                        *(*0x20 + -0x288) = 0x4712eb;\n                        puVar2 = fcn.0045d0e0();\n                    }\n                    *(*0x20 + -0x198) = puVar2;\n                    puVar2[2] = *(*0x20 + -0xe8);\n                    uVar5 = *(*0x20 + -200);\n                    *(puVar2 + 3) = *(*0x20 + -200);\n                    iVar1 = *(*0x20 + -0x1a0) >> 10;\n                    puVar2[4] = iVar1;\n                    puVar2[7] = *(*0x20 + -0x1b0);\n                    if (*0x598440 == 0) {\n                        uVar3 = *(*0x20 + -0x188);\n                        puVar2[5] = uVar3;\n                        puVar2[6] = *(*0x20 + -0x180);\n                    }\n                    else {\n                        uVar3 = *(*0x20 + -0x188);\n                        *(*0x20 + -0x288) = 0x47135b;\n                        fcn.0045d0e0();\n                        *(*0x20 + -0x288) = 0x47136c;\n                        fcn.0045d180(uVar3, uVar5, iVar1);\n                    }\n                    *(*0x20 + -0x288) = 0x471385;\n                    fcn.00473340(uVar3, uVar5, iVar1);\n                    return;\n                }\n                arg1 = 0x4a1a20;\n                *(*0x20 + -0x288) = 0x4713ca;\n                fcn.004097a0(0x4a1a20);\n            }\n            unaff_RBX = 0x4c7d18;\n            *(*0x20 + -0x288) = 0x4713dd;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = uVar5;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x4713fc;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1503
    },
    "00471420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00471420(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *unaff_RBX;\n    uint64_t uVar4;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack80 = *unaff_RBX;\n    uStack72 = *(unaff_RBX + 1);\n    uStack68 = *(unaff_RBX + 0xc);\n    uStack64 = *(unaff_RBX + 2);\n    uStack60 = *(unaff_RBX + 0x14);\n    uStack56 = *(unaff_RBX + 3);\n    uStack52 = *(unaff_RBX + 0x1c);\n    uStack48 = *(unaff_RBX + 4);\n    uStack44 = *(unaff_RBX + 0x24);\n    uStack40 = *(unaff_RBX + 5);\n    uStack36 = *(unaff_RBX + 0x2c);\n    uStack32 = *(unaff_RBX + 6);\n    uStack28 = *(unaff_RBX + 0x34);\n    uStack24 = *(unaff_RBX + 7);\n    uStack20 = *(unaff_RBX + 0x3c);\n    uStack16 = *(unaff_RBX + 8);\n    uStack12 = *(unaff_RBX + 0x44);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        uVar4 = iVar2 + uVar3 * -8;\n        if (uVar4 < 0) {\n            fcn.00430920();\n            break;\n        }\n        if ((1 << (uVar4 & 0x1f) & -(uVar4 < 0x20) & *(in_RAX + 0x18 + uVar3)) == 0) {\n            unaff_RBX[iVar2 + 0x18] = 0;\n        }\n        else {\n            unaff_RBX[iVar2 + 0x18] = (&uStack80)[iVar2];\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045d480(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 658
    },
    "00471c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00471c20(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x471c45;\n            fcn.00458560();\n            *(*0x20 + -0x20) = 0x471c4a;\n            iVar1 = fcn.004714e0(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1U);\n            }\n            *(*0x20 + -0x20) = 0x471c96;\n            in_RAX = fcn.0045d540(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x471ca5;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 474
    },
    "00472340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00472340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *arg1;\n    uint uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    uchar *arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x338 && *0x20 + -0x338 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x3b8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = 0;\n            *(*0x20 + -0x3c8) = *0x20 + -8;\n            *(*0x20 + -0x3c0) = 0x472390;\n            iVar2 = fcn.0045d70f();\n            unaff_RBP = *(*0x20 + -0x3c8);\n            arg2 = *(iVar2 + 0x17) & 0x1f;\n            if (arg2 == 0x13) {\n                if ((unaff_RBX == 0) || (arg2 = *(unaff_RBX + 0x17) & 0x1f,  arg2 != 0x14)) {\n                    *(*0x20 + 200) = unaff_RBX;\n                    *(*0x20 + 0xc0) = iVar2;\n                    *(*0x20 + -0x270) = iVar2;\n                    *(*0x20 + -0x268) = unaff_RBX;\n                    *(*0x20 + -0x280) = iVar2;\n                    *(*0x20 + -0x278) = unaff_RBX;\n                    arg1_00 = *0x20 + -0x280;\n                    *(*0x20 + -0x3c0) = 0x472415;\n                    fcn.004697c0(arg1_00);\n                    if (arg1_00 == '\\0') {\n                        uVar7 = *(*0x20 + 200);\n                        *(*0x20 + -0x3c0) = 0x47253b;\n                        fcn.00470800();\n                        *(*0x20 + 8) = *(*0x20 + -0x3b8);\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47256f;\n                        fcn.0045da46();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        *(*0x20 + -0x2f0) = *(*0x20 + 0xa0) + *(*0x20 + 0x80);\n                        *(*0x20 + -0x3c0) = 0x472597;\n                        puVar3 = fcn.0040c140();\n                        *(puVar3 + 0x15) = 8;\n                        *puVar3 = *(*0x20 + -0x2f0) + 7U & 0xfffffffffffffff8;\n                        puVar3[1] = **(*0x20 + 0xb0) << 3;\n                        arg1 = *(*0x20 + 0xb0);\n                        if (*arg1 == 0) {\n                            bVar9 = *(*0x20 + 200) == 0;\ncode_r0x0047261d:\n                            *(*0x20 + -0x2a0) = puVar3;\n                            if (bVar9) {\n                                *(*0x20 + -0x3c0) = 0x4726ab;\n                                fcn.00471c20();\n                                uVar4 = 0x4a6162;\n                                param_4 = 1;\n                                *(*0x20 + -0x3c0) = 0x4726d7;\n                                fcn.004484e0(9, arg2, 0x4a6162, 1);\n                            }\n                            else {\n                                *(*0x20 + -0x3c0) = 0x47262f;\n                                uVar4 = fcn.00471c20();\n                                *(*0x20 + -0x288) = uVar4;\n                                *(*0x20 + -0x2e8) = uVar7;\n                                *(*0x20 + -0x3c0) = 0x47264c;\n                                fcn.00471c20();\n                                *(*0x20 + -0x3b8) = 0x4a6162;\n                                *(*0x20 + -0x3b0) = 1;\n                                uVar4 = 0x4a618d;\n                                param_4 = 2;\n                                *(*0x20 + -0x3c0) = 0x47269c;\n                                fcn.004486e0(0xb, arg2, 0x4a618d, 2);\n                            }\n                            *(*0x20 + -0x3c0) = 0x4726e5;\n                            fcn.00471680(0, arg2);\n                            *(*0x20 + -0x3c0) = 0x4726ea;\n                            uVar1 = fcn.00458660();\n                            *(*(*0x20 + -0x2a0) + 0x28) = uVar1;\n                            *(*0x20 + -0x3c0) = 0x472705;\n                            uVar5 = fcn.0040c140();\n                            *(*0x20 + -0x290) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x472719;\n                            puVar6 = fcn.0040c140();\n                            *puVar6 = 0x472a20;\n                            if (*0x598440 == 0) {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                puVar6[1] = uVar5;\n                                arg2 = *(*0x20 + -0x290);\n                                *(arg2 + 0x20) = puVar6;\n                            }\n                            else {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                *(*0x20 + -0x3c0) = 0x472757;\n                                fcn.0045d0e0();\n                                arg2 = *(*0x20 + -0x290);\n                                *(*0x20 + -0x3c0) = 0x472768;\n                                fcn.0045cfe0(uVar5, arg2, uVar4, param_4);\n                            }\n                            *(*0x20 + -0x270) = *(*0x20 + 0xc0);\n                            param_3 = *(*0x20 + 200);\n                            *(*0x20 + -0x268) = param_3;\n                            *(*0x20 + -0xd0) = 0;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x4727af;\n                            fcn.0045d70b();\n                            *(*0x20 + -0xd0) = uVar5;\n                            *(*0x20 + -200) = arg2;\n                            *(*0x20 + -0xc0) = *(*0x20 + 8);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x4727f2;\n                            fcn.0045da46();\n                            uVar4 = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x47280a;\n                            uVar5 = fcn.004098a0();\n                            *(*0x20 + -0x288) = uVar5;\n                            *(*0x20 + -0x298) = *0x20 + -0x270;\n                            *(*0x20 + -0x3c0) = 0x47282e;\n                            fcn.004098a0();\n                            puVar6 = *(*0x20 + -0x288);\n                            *(*0x20 + -0x3c0) = 0x472850;\n                            fcn.00469a40(*(*0x20 + -0x298));\n                            *(*0x20 + -0xd0) = 0;\n                            *(*0x20 + -0x3c8) = uVar4;\n                            *(*0x20 + -0x3c0) = 0x472873;\n                            iVar2 = fcn.0045d70b();\n                            unaff_RBP = *(*0x20 + -0x3c8);\n                            if (iVar2 == 0x49d2e0) {\n                                *(*0x20 + -0xd0) = *puVar6;\n                                *(*0x20 + -0x3c8) = unaff_RBP;\n                                *(*0x20 + -0x3c0) = 0x4728af;\n                                fcn.0045da38();\n                                *(*0x20 + -0x260) = *(*0x20 + -0xd0);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x4728ef;\n                                fcn.0045da38();\n                                *(*0x20 + 8) = *(*0x20 + -0x250);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x472932;\n                                fcn.0045da46();\n                                return;\n                            }\n                            *(*0x20 + -0x3c0) = 0x472955;\n                            fcn.004096c0(0x497ba0);\n                        }\n                        else {\n                            arg2 = *(arg1 + 4);\n                            uVar7 = *(arg1 + 2);\n                            if (arg2 != 0) {\n                                if (*0x598440 == 0) {\n                                    puVar3[4] = uVar7;\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                else {\n                                    *(*0x20 + -0x3c0) = 0x472605;\n                                    puVar3 = fcn.0045d120(arg1, arg2, param_3, param_4);\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                goto code_r0x0047261d;\n                            }\n                        }\n                        *(*0x20 + -0x3c0) = 0x47295f;\n                        fcn.0045d480(arg2);\n                    }\n                    else {\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47244f;\n                        iVar2 = fcn.0045d70b();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        if (iVar2 == 0x49d2e0) {\n                            *(*0x20 + -0xd0) = *0x49b6e0;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x47248f;\n                            fcn.0045da38();\n                            *(*0x20 + -0x198) = *(*0x20 + -0xd0);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x4724cf;\n                            fcn.0045da38();\n                            *(*0x20 + 8) = *(*0x20 + -0x188);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x472512;\n                            fcn.0045da46();\n                            return;\n                        }\n                    }\n                    *(*0x20 + -0x3c0) = 0x47296e;\n                    fcn.004096c0(0x497ba0);\n                }\n                *(*0x20 + -0x3c0) = 0x472976;\n                fcn.00471c20();\n                *(*0x20 + -0x3c0) = 0x47298f;\n                fcn.00448440(0x2c);\n                *(*0x20 + -0x3c0) = 0x472994;\n                fcn.00409a20();\n                *(*0x20 + -0x3c0) = 0x4729a5;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x3c0) = 0x4729aa;\n            fcn.00471c20();\n            *(*0x20 + -0x3c0) = 0x4729c5;\n            fcn.00448440(0x25);\n            *(*0x20 + -0x3c0) = 0x4729ca;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0x3c0) = 0x4729d9;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar8 + 0xc0) = in_RAX;\n        *(puVar8 + 200) = unaff_RBX;\n        *(puVar8 + -8) = 0x4729ef;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 0xc0);\n        unaff_RBX = *(puVar8 + 200);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3267
    },
    "00472a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00472a60(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar8 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(arg1 + 8) == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = *(arg1 + 0x17) & 0x1f;\n            if (0x14 < uVar8) {\n                if (0x18 < uVar8) {\n                    if (uVar8 == 0x19) {\n                        iVar6 = *(arg1 + 0x40);\n                        *(*0x20 + -0x10) = iVar6;\n                        uVar8 = 0;\n                        while( true ) {\n                            if (iVar6 <= uVar8) {\n                                return;\n                            }\n                            iVar6 = *(arg1 + 0x38);\n                            unaff_RBX = *(arg1 + 0x40);\n                            if (unaff_RBX <= uVar8) break;\n                            *(*0x20 + -0x18) = uVar8;\n                            uVar2 = *(iVar6 + 8 + uVar8 * 0x18);\n                            *(*0x20 + -0x68) = 0x472b25;\n                            fcn.00472a60(uVar2);\n                            uVar8 = *(*0x20 + -0x18) + 1;\n                            iVar6 = *(*0x20 + -0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x68) = 0x472b71;\n                        in_RAX = fcn.0045d480(unaff_RBX);\n                        goto code_r0x00472b71;\n                    }\n                    if (uVar8 != 0x1a) {\n                        return;\n                    }\n                }\n                break;\n            }\n            if (uVar8 == 0x11) {\n                uVar8 = 0;\n                goto code_r0x00472cd2;\n            }\n            if (uVar8 - 0x12 < 2) break;\n            if (uVar8 != 0x14) {\n                return;\n            }\n            while( true ) {\n                uVar1 = *in_RAX;\n                uVar8 = unaff_RBX >> 3;\n                if (uVar8 <= uVar1) break;\n                if ((uVar1 & 7) == 0) {\n                    uVar7 = *(in_RAX + 4);\n                    uVar3 = *(in_RAX + 2);\n                    uVar8 = uVar3;\n                    if (*(in_RAX + 6) < uVar7 + 1) {\n                        *(*0x20 + -0x68) = 0x472d19;\n                        uVar8 = fcn.00444ac0(uVar7);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = uVar7;\n                        if (*0x598440 == 0) {\n                            *(in_RAX + 2) = uVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x472d3a;\n                            uVar8 = fcn.0045cfe0(uVar7, in_RAX, unaff_RBX, in_R9);\n                        }\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar7 = uVar3;\n                    }\n                    *(in_RAX + 4) = uVar7 + 1;\n                    *(uVar8 + uVar7) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                if (arg1 <= *in_RAX >> 3) goto code_r0x00472e97;\n                *in_RAX = *in_RAX + 1;\n            }\n            if ((uVar1 & 7) == 0) {\n                uVar7 = *(in_RAX + 4);\n                uVar3 = *(in_RAX + 2);\n                uVar8 = uVar3;\n                if (*(in_RAX + 6) < uVar7 + 1) {\n                    *(*0x20 + -0x68) = 0x472d98;\n                    uVar8 = fcn.00444ac0(uVar7);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 6) = uVar7;\n                    if (*0x598440 == 0) {\n                        *(in_RAX + 2) = uVar8;\n                        uVar7 = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x472db9;\n                        uVar8 = fcn.0045cfe0(uVar7, in_RAX, unaff_RBX, in_R9);\n                        uVar7 = uVar3;\n                    }\n                }\n                *(in_RAX + 4) = uVar7 + 1;\n                *(uVar8 + uVar7) = 0;\n            }\n            arg1 = *(in_RAX + 4);\n            uVar1 = *in_RAX;\n            in_R9 = uVar1;\n            uVar7 = uVar1 >> 3;\n            if (uVar7 < arg1) {\n                in_R9 = uVar1 & 7;\n                *(*(in_RAX + 2) + uVar7) = *(uVar7 + *(in_RAX + 2)) | 1 << (uVar1 & 7);\n                uVar1 = *in_RAX;\n                *in_RAX = uVar1 + 1;\n                if ((uVar1 + 1 & 7) == 0) {\n                    iVar6 = *(in_RAX + 4);\n                    iVar4 = *(in_RAX + 2);\n                    iVar5 = iVar4;\n                    if (*(in_RAX + 6) < iVar6 + 1U) {\n                        *(*0x20 + -0x68) = 0x472e29;\n                        iVar5 = fcn.00444ac0(iVar6);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = iVar6;\n                        if (*0x598440 == 0) {\n                            *(in_RAX + 2) = iVar5;\n                            iVar6 = iVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x472e4b;\n                            iVar5 = fcn.0045cfe0(iVar6, in_RAX, uVar7, in_R9);\n                            iVar6 = iVar4;\n                        }\n                    }\n                    *(in_RAX + 4) = iVar6 + 1;\n                    *(iVar5 + iVar6) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                uVar8 = *in_RAX >> 3;\n                if (uVar8 < arg1) {\n                    *(*(in_RAX + 2) + uVar8) = *(uVar8 + *(in_RAX + 2)) | 1 << (*in_RAX & 7);\n                    *in_RAX = *in_RAX + 1;\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x472e8f;\n                fcn.0045d480(arg1);\n            }\n            *(*0x20 + -0x68) = 0x472e97;\n            fcn.0045d480(arg1);\ncode_r0x00472e97:\n            *(*0x20 + -0x68) = 0x472e9e;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = uVar8;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x472eb3;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00472b76:\n    uVar1 = *in_RAX;\n    if (unaff_RBX >> 3 <= uVar1) {\n        if ((uVar1 & 7) == 0) {\n            iVar6 = *(in_RAX + 4);\n            iVar4 = *(in_RAX + 2);\n            iVar5 = iVar4;\n            if (*(in_RAX + 6) < iVar6 + 1U) {\n                *(*0x20 + -0x68) = 0x472c31;\n                iVar5 = fcn.00444ac0(iVar6);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 6) = iVar6;\n                if (*0x598440 == 0) {\n                    *(in_RAX + 2) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x472c52;\n                    iVar5 = fcn.0045cfe0(iVar6, in_RAX, unaff_RBX, in_R9);\n                    iVar6 = iVar4;\n                }\n            }\n            *(in_RAX + 4) = iVar6 + 1;\n            *(iVar5 + iVar6) = 0;\n        }\n        uVar8 = *(in_RAX + 2);\n        arg1 = *(in_RAX + 4);\n        uVar7 = *in_RAX >> 3;\n        if (uVar7 < arg1) {\n            *(uVar8 + uVar7) = *(uVar7 + uVar8) | 1 << (*in_RAX & 7);\n            *in_RAX = *in_RAX + 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x472c96;\n            fcn.0045d480(arg1);\ncode_r0x00472c96:\n            *(*0x20 + -0x68) = 0x472c9d;\n            fcn.0045d480(arg1);\n            do {\n                *(*0x20 + -0x20) = uVar8;\n                uVar2 = *(arg1 + 0x30);\n                *(*0x20 + -0x68) = 0x472cbb;\n                fcn.00472a60(uVar2);\n                uVar8 = *(*0x20 + -0x20) + 1;\n                arg1 = *(*0x20 + 0x18);\ncode_r0x00472cd2:\n            } while (*(arg1 + 0x40) != uVar8 && uVar8 <= *(arg1 + 0x40));\n        }\n        return;\n    }\n    if ((uVar1 & 7) == 0) {\n        iVar6 = *(in_RAX + 4);\n        iVar4 = *(in_RAX + 2);\n        iVar5 = iVar4;\n        if (*(in_RAX + 6) < iVar6 + 1U) {\n            *(*0x20 + -0x68) = 0x472bb2;\n            iVar5 = fcn.00444ac0(iVar6);\n            in_RAX = *(*0x20 + 8);\n            *(in_RAX + 6) = iVar6;\n            if (*0x598440 == 0) {\n                *(in_RAX + 2) = iVar5;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x472bd3;\n                iVar5 = fcn.0045cfe0(iVar6, in_RAX, unaff_RBX, in_R9);\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar6 = iVar4;\n        }\n        *(in_RAX + 4) = iVar6 + 1;\n        *(iVar5 + iVar6) = 0;\n    }\n    arg1 = *(in_RAX + 4);\n    uVar8 = *in_RAX >> 3;\n    if (arg1 <= uVar8) goto code_r0x00472c96;\ncode_r0x00472b71:\n    *in_RAX = *in_RAX + 1;\n    goto code_r0x00472b76;\n}\n",
        "token_count": 3005
    },
    "00473160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.00473160(uint64_t arg1)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((arg1 & 0x1f) == 1) {\n        return *unaff_RBX;\n    }\n    uVar1 = fcn.00473100();\n    puVar2 = fcn.0040c140();\n    puVar2[1] = unaff_RBX;\n    if (*0x598440 != 0) goto code_r0x004731ed;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.004327c0();\ncode_r0x004731ed:\n        puVar2 = fcn.0045d0e0(uVar1);\n    } while( true );\n}\n",
        "token_count": 250
    },
    "00473240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00473240(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    pcVar4 = arg1 & 0x1f;\n    if (pcVar4 == 0x17) {\n        iVar1 = fcn.00471dc0();\n        pcVar4 = *(iVar1 + 0x98);\n        iVar1 = (*pcVar4)();\n        if (iVar1 == 8) {\n            return *unaff_RBX;\n        }\n        unaff_RBX = 0x4c7d48;\n        fcn.004327c0();\n    }\n    uVar2 = fcn.00473100();\n    puVar3 = fcn.0040c140();\n    puVar3[1] = unaff_RBX;\n    if (*0x598440 != 0) goto code_r0x00473307;\n    *puVar3 = uVar2;\n    do {\n        puVar3[2] = pcVar4;\n        fcn.004327c0();\ncode_r0x00473307:\n        puVar3 = fcn.0045d0e0(uVar2);\n    } while( true );\n}\n",
        "token_count": 340
    },
    "00473340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00473340(int64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t arg1_00;\n    uint64_t noname_1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            noname_1_00 = *(arg1 + 0x17) & 0x1f;\n            if (noname_1_00 == 0x14) {\n                noname_1_00 = *(arg1 + 0x38);\n                if (arg3 <= *(arg1 + 0x40) && *(arg1 + 0x40) != arg3) {\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x28) = noname_1_00;\n                    *(*0x20 + -0x80) = 0x4733c5;\n                    puVar2 = fcn.00458560();\n                    if ((*puVar2 & 1) != 0) {\n                        noname_1_00 = **(*0x20 + -0x20);\n                        if (noname_1_00 != 0) {\n                            uVar4 = *(noname_1_00 + 8);\n                            if (*(*0x20 + 0x30) < 100000) {\n                                *(*0x20 + -0x30) = noname_1_00;\n                                *(*0x20 + -0x38) = uVar4;\n                                *(*0x20 + -0x80) = 0x473429;\n                                fcn.004585a0();\n                                return *(*0x20 + -0x38);\n                            }\n                            goto code_r0x0047354e;\n                        }\n                        goto code_r0x00473558;\n                    }\n                    goto code_r0x0047359c;\n                }\n            }\n            else {\n                *(*0x20 + -0x80) = 0x473450;\n                iVar3 = fcn.00471ce0();\n                if (*(*0x20 + 0x30) < unaff_RBX) {\n                    iVar5 = *(*0x20 + 0x30) * 0x10;\n                    uVar1 = *(iVar3 + 4 + iVar5);\n                    noname_1_00 = uVar1;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = *(iVar3 + 8 + iVar5);\n                    *(*0x20 + -0x80) = 0x47348a;\n                    puVar2 = fcn.00458560();\n                    arg1_00 = *puVar2;\n                    if ((*puVar2 & 1) != 0) {\n                        *(*0x20 + -0x80) = 0x47349e;\n                        uVar4 = fcn.0040c140();\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = 0x4734b1;\n                        uVar4 = fcn.004585e0();\n                        if (*0x598440 == 0) {\n                            **(*0x20 + -0x10) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x80) = 0x4734ce;\n                            fcn.0045cfe0(arg1_00, noname_1_00, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x80) = 0x4734dd;\n                        fcn.004585a0();\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x80) = 0x473527;\n                    fcn.004484e0(9, noname_1_00, 0x4a96a8, 0x15);\n                    *(*0x20 + -0x80) = 0x47352c;\n                    fcn.00409a20();\n                    *(*0x20 + -0x80) = 0x47353b;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x80) = 0x47354e;\n                fcn.004327c0();\ncode_r0x0047354e:\n                *(*0x20 + -0x80) = 0x473558;\n                fcn.0045d480(100000);\ncode_r0x00473558:\n                *(*0x20 + -0x80) = 0x473588;\n                fcn.004484e0(9, noname_1_00, 0x4ac893, 0x21);\n                *(*0x20 + -0x80) = 0x47358d;\n                fcn.00409a20();\n                *(*0x20 + -0x80) = 0x47359c;\n                fcn.004327c0();\ncode_r0x0047359c:\n                arg1 = 9;\n                unaff_RDI = *(*0x20 + 8);\n                unaff_RSI = *(*0x20 + 0x10);\n                arg3 = 0x4a96a8;\n                in_R9 = 0x15;\n                *(*0x20 + -0x80) = 0x4735cc;\n                fcn.004484e0(9, noname_1_00, 0x4a96a8, 0x15);\n                *(*0x20 + -0x80) = 0x4735d1;\n                fcn.00409a20();\n                *(*0x20 + -0x80) = 0x4735e5;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7d58;\n            *(*0x20 + -0x80) = 0x4735f8;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x47361c;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1830
    },
    "00474ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00474ba0(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x13) {\n                if (arg1 == 0x11) {\n                    return in_RAX[8];\n                }\n                if (arg1 != 0x12) {\ncode_r0x00474c88:\n                    *(*0x20 + -0x28) = 0x474c94;\n                    puVar2 = fcn.0040c140();\n                    puVar2[1] = 0x11;\n                    *puVar2 = 0x4a876d;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x28) = 0x474cbe;\n                    fcn.004327c0();\n                    goto code_r0x00474cbe;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x474c10;\n                    iVar1 = fcn.00457820();\n                    return iVar1;\n                }\n            }\n            else {\n                if (arg1 != 0x15) {\n                    if (arg1 == 0x17) {\n                        return *(unaff_RBX + 8);\n                    }\n                    if (arg1 == 0x18) {\n                        return *(unaff_RBX + 8);\n                    }\n                    goto code_r0x00474c88;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x474c50;\n                    iVar1 = fcn.004579a0();\n                    return iVar1;\n                }\ncode_r0x00474cbe:\n                *(*0x20 + -0x28) = 0x474cd1;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7c88;\n            *(*0x20 + -0x28) = 0x474ce5;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x474cfa;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 828
    },
    "00474ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00474ee0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t **in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t **arg2;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX[3] == NULL) {\n                arg2 = in_RAX[1];\n                if ((**in_RAX == 8) && ((*in_RAX)[1] != 0)) {\n                    if ((in_RAX[2] >> 7 & 1) != 0) {\n                        arg2 = *arg2;\n                    }\n                    *(*0x20 + -0x20) = 0x474f3a;\n                    uVar1 = fcn.004578a0();\n                    if (*0x598440 == 0) {\n                        *(*(*0x20 + 8) + 0x18) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x474f5c;\n                        fcn.0045cfe0(*(*0x20 + 8), arg2, param_3, param_4);\n                    }\ncode_r0x00474f7e:\n                    *(*0x20 + -0x20) = 0x474f87;\n                    uVar3 = fcn.00457960();\n                    return uVar3 & 0xffffffffffffff00 | uVar3 != 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x20) = 0x474f66;\n                iVar2 = fcn.00457960();\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x20) = 0x474f79;\n                    fcn.00457920();\n                    goto code_r0x00474f7e;\n                }\n                *(*0x20 + -0x20) = 0x474faa;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x20) = 0x474fbd;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x474fc8;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 685
    },
    "00474fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00474fe0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((arg1 & 0x1f) == 0x15) {\n        puVar1 = fcn.0040c140();\n        puVar1[2] = arg1;\n        if (*0x598440 == 0) {\n            *puVar1 = in_RAX;\n            puVar1[1] = unaff_RBX;\n        }\n        else {\n            iVar2 = fcn.0045d0e0(in_RAX);\n            fcn.0045d100(iVar2 + 8, unaff_RBX, in_R8, in_R9);\n        }\n        return;\n    }\n    uVar3 = fcn.00473100();\n    puVar1 = fcn.0040c140();\n    puVar1[1] = unaff_RBX;\n    if (*0x598440 != 0) goto code_r0x004750cd;\n    *puVar1 = uVar3;\n    do {\n        puVar1[2] = arg1 & 0x1f;\n        fcn.004327c0();\ncode_r0x004750cd:\n        puVar1 = fcn.0045d0e0(uVar3);\n    } while( true );\n}\n",
        "token_count": 383
    },
    "004752a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004752a0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((arg1 & 0x1f) == 0x19) {\n        return *(in_RAX + 0x40);\n    }\n    uVar1 = fcn.00473100();\n    puVar2 = fcn.0040c140();\n    puVar2[1] = unaff_RBX;\n    if (*0x598440 != 0) goto code_r0x0047532d;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.004327c0();\ncode_r0x0047532d:\n        puVar2 = fcn.0045d0e0(uVar1);\n    } while( true );\n}\n",
        "token_count": 266
    },
    "00475380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00475380(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    ulong *puVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar2 = arg1 & 0x1f;\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = arg1;\n            if (uVar2 < 0x16) {\n                if (uVar2 == 0x12) {\ncode_r0x0047544e:\n                    if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                        if ((uVar3 >> 7 & 1) != 0) {\n                            unaff_RBX = *unaff_RBX;\n                        }\n                        return unaff_RBX;\n                    }\n                    *(*0x20 + -0x28) = 0x475492;\n                    fcn.004327c0();\n                    goto code_r0x00475492;\n                }\n                if (uVar2 != 0x13) {\n                    if (uVar2 != 0x15) goto code_r0x00475492;\n                    goto code_r0x0047544e;\n                }\n                if ((uVar3 >> 9 & 1) != 0) {\n                    return CONCAT71(*0x4b0151, *0x4b0150);\n                }\n                arg1 = uVar2;\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    if ((uVar3 >> 7 & 1) != 0) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    if (unaff_RBX != NULL) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    return unaff_RBX;\n                }\n            }\n            else {\n                if (uVar2 == 0x16) {\n                    if (in_RAX[1] == 0) {\n                        return *unaff_RBX;\n                    }\n                    goto code_r0x0047544e;\n                }\n                if (uVar2 == 0x17) {\n                    return *unaff_RBX;\n                }\n                if (uVar2 == 0x1a) goto code_r0x0047544e;\ncode_r0x00475492:\n                *(*0x20 + -0x28) = 0x47549e;\n                puVar1 = fcn.0040c140();\n                puVar1[1] = 0x15;\n                *puVar1 = 0x4a9a44;\n                arg1 = *(*0x20 + -0x10);\n                puVar1[2] = arg1;\n                *(*0x20 + -0x28) = 0x4754c8;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7c88;\n            *(*0x20 + -0x28) = 0x4754db;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4754f0;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 972
    },
    "00475520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00475520(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar9;\n    int64_t unaff_RDI;\n    ulong *in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg1;\n            uVar4 = arg1 & 0x1f;\n            if (uVar4 == 0x11) {\n                uVar6 = arg1;\n                arg1 = uVar4;\n                if ((uVar6 >> 8 & 1) != 0) {\n                    arg1 = *(in_RAX + 0x40);\n                    in_RAX = *(in_RAX + 0x38);\n                    puVar3 = unaff_RBX;\ncode_r0x00475586:\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= arg1)) {\n                        *(*0x20 + -0x28) = in_RAX;\n                        *(*0x20 + -0x20) = puVar3;\n                        *(*0x20 + -0x38) = arg1;\n                        *(*0x20 + -0x50) = 0x4755c5;\n                        piVar1 = fcn.0040c140();\n                        *piVar1 = 0;\n                        iVar7 = *(*0x20 + 0x20);\n                        piVar1[1] = *(*0x20 + 0x28) - iVar7;\n                        iVar5 = *(*0x20 + -0x38) - iVar7;\n                        piVar1[2] = iVar5;\n                        if (iVar5 < 1) {\n                            if (*0x598440 == 0) {\n                                *piVar1 = *(*0x20 + -0x20);\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x47563e;\n                                fcn.0045d100(iVar5, *(*0x20 + -0x20), in_R8, in_R9);\n                            }\n                            iVar9 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            iVar9 = *(*0x20 + -0x28);\n                            iVar7 = iVar7 * **(iVar9 + 0x30) + *(*0x20 + -0x20);\n                            if (*0x598440 == 0) {\n                                *piVar1 = iVar7;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x47561c;\n                                fcn.0045d100(iVar5, iVar7, *(*0x20 + -0x20), in_R9);\n                            }\n                        }\n                        return iVar9;\n                    }\n                    goto code_r0x00475754;\n                }\n            }\n            else {\n                if (uVar4 == 0x17) {\n                    puVar3 = *unaff_RBX;\n                    arg1 = unaff_RBX[2];\n                    in_R8 = puVar3;\n                    goto code_r0x00475586;\n                }\n                if (uVar4 == 0x18) {\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= unaff_RBX[1])) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x50) = 0x4756b0;\n                        piVar2 = fcn.0040c140();\n                        iVar7 = *(*0x20 + 0x20);\n                        piVar1 = *(*0x20 + -0x10) + 1;\n                        if (*piVar1 != iVar7 && iVar7 <= *piVar1) {\n                            iVar5 = **(*0x20 + -0x10);\n                            piVar2[1] = *(*0x20 + 0x28) - iVar7;\n                            iVar5 = iVar5 + iVar7;\n                            if (*0x598440 == 0) {\n                                *piVar2 = iVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x4756ef;\n                                fcn.0045d100(iVar7, iVar5, in_R8, in_R9);\n                            }\n                        }\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x50) = 0x475719;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x50) = 0x47572a;\n                puVar3 = fcn.0040c140();\n                puVar3[1] = 0x13;\n                *puVar3 = 0x4a9150;\n                arg1 = *(*0x20 + -0x30);\n                puVar3[2] = arg1;\n                *(*0x20 + -0x50) = 0x475754;\n                fcn.004327c0();\ncode_r0x00475754:\n                *(*0x20 + -0x50) = 0x475767;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7ce8;\n            *(*0x20 + -0x50) = 0x47577a;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + -8) = 0x475799;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1674
    },
    "00476760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00476760(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RSI;\n    uint64_t uVar3;\n    uint64_t unaff_RDI;\n    int64_t arg1_00;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RDI - arg1 == 1) {\n        while (uVar2 = unaff_RSI,  unaff_RDI < uVar2) {\n            uStack24 = unaff_RDI + uVar2 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            unaff_RSI = uStack24;\n            if (cVar1 != '\\0') {\n                unaff_RDI = uStack24 + 1;\n                unaff_RSI = uVar2;\n            }\n        }\n        while (arg1 < unaff_RDI - 1) {\n            uStack16 = arg1 + 1;\n            (**(in_RAX + 0x28))(uStack16);\n            arg1 = uStack16;\n        }\n        return;\n    }\n    uStack16 = unaff_RDI;\n    if (unaff_RSI - unaff_RDI != 1) {\n        uStack24 = unaff_RSI + arg1 >> 1;\n        iVar4 = unaff_RDI + uStack24;\n        uVar2 = unaff_RDI;\n        arg1_00 = arg1;\n        if (uStack24 < unaff_RDI) {\n            uVar2 = uStack24;\n            arg1_00 = iVar4 - unaff_RSI;\n        }\n        while (uVar3 = uVar2,  arg1_00 < uVar3) {\n            uVar2 = arg1_00 + uVar3 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            if (cVar1 == '\\0') {\n                arg1_00 = uVar2 + 1;\n                uVar2 = uVar3;\n            }\n        }\n        iVar4 = iVar4 - arg1_00;\n        if ((arg1_00 < uStack16) && (uStack16 < iVar4)) {\n            fcn.00476b00(arg1_00);\n        }\n        if ((arg1 < arg1_00) && (arg1_00 < uStack24)) {\n            fcn.00476760(arg1);\n        }\n        if ((uStack24 < iVar4) && (iVar4 < unaff_RSI)) {\n            fcn.00476760(uStack24);\n        }\n        return;\n    }\n    while (uVar2 = unaff_RDI,  arg1 < uVar2) {\n        uStack24 = arg1 + uVar2 >> 1;\n        cVar1 = (**(in_RAX + 0x20))(uStack24);\n        unaff_RDI = uStack24;\n        if (cVar1 == '\\0') {\n            arg1 = uStack24 + 1;\n            unaff_RDI = uVar2;\n        }\n    }\n    for (; arg1 < uStack16; uStack16 = uStack16 - 1) {\n        (**(in_RAX + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 801
    },
    "00476fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00476fc0(ulong arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uint64_t arg1_01;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t arg1_02;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    while (&iStack56 < *(unaff_R14 + 0x10) || &iStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iStack24 = unaff_RBX;\n    uStack16 = in_RAX;\n    iVar2 = fcn.004758a0(arg1);\n    iVar2 = (**(iVar2 + 0x98))();\n    if (iVar2 != 0x15) {\n        return NULL;\n    }\n    arg1_00 = fcn.00474ba0(arg1);\n    iStack32 = fcn.004449e0(arg1_00);\n    iStack40 = fcn.004449e0(arg1_00);\n    uStack48 = fcn.00474fe0(arg1);\n    arg1_01 = 0;\n    iVar2 = iStack40;\n    uVar10 = 0;\n    uVar8 = arg1_00;\n    iStack56 = iStack32;\n    while (uVar7 = arg1_01,  cVar1 = fcn.00474ee0(),  cVar1 != '\\0') {\n        uVar3 = fcn.00474d20();\n        iVar5 = iStack56;\n        uVar11 = uVar10 + 1;\n        iVar9 = iVar2;\n        iVar4 = iStack56;\n        if (uVar8 < uVar11) {\n            uVar8 = uVar10;\n            iStack24 = iVar2;\n            uStack16 = uVar3;\n            iVar4 = fcn.00444ac0(uVar10);\n            uVar11 = iVar5 + 1;\n            uVar3 = uStack16;\n            iVar9 = iStack24;\n        }\n        arg2 = uVar10 * 3;\n        *(iVar4 + 0x10 + uVar10 * 0x18) = uVar7;\n        arg1_02 = iVar4 + uVar10 * 0x18;\n        iVar5 = iVar4 + uVar10 * 0x18 + 8;\n        iStack56 = iVar4;\n        if (*0x598440 == 0) {\n            *(iVar4 + uVar10 * 0x18) = uVar3;\n            *(iVar4 + 8 + uVar10 * 0x18) = iVar9;\n        }\n        else {\n            fcn.0045cfe0(arg1_02, arg2, iVar4, iVar5);\n            fcn.0045d120(arg1_02, arg2, iVar4, iVar5);\n        }\n        uVar3 = fcn.00474e00();\n        uVar7 = arg1_01 + 1;\n        if (arg1_00 < uVar7) {\n            arg1_00 = arg1_01;\n            iStack24 = iVar9;\n            uStack16 = uVar3;\n            iVar5 = fcn.00444ac0(arg1_01);\n            uVar7 = iVar2 + 1;\n            uVar3 = uStack16;\n            iVar9 = iStack24;\n            iVar2 = iVar5;\n        }\n        *(iVar2 + 0x10 + arg1_01 * 0x18) = arg1_02;\n        iVar4 = iVar2 + arg1_01 * 0x18;\n        iVar5 = iVar2 + arg1_01 * 0x18 + 8;\n        uVar10 = uVar11;\n        if (*0x598440 == 0) {\n            *(iVar2 + arg1_01 * 0x18) = uVar3;\n            *(iVar2 + 8 + arg1_01 * 0x18) = iVar9;\n            arg1_01 = uVar7;\n        }\n        else {\n            fcn.0045cfe0(iVar4, arg1_00, iVar2, iVar5);\n            fcn.0045d120(iVar4, arg1_00, iVar2, iVar5);\n            arg1_01 = uVar7;\n        }\n    }\n    piVar6 = fcn.0040c140();\n    piVar6[1] = uVar10;\n    piVar6[2] = uVar8;\n    if (*0x598440 == 0) {\n        *piVar6 = iStack56;\n    }\n    else {\n        piVar6 = fcn.0045d0e0(iStack56);\n    }\n    piVar6[4] = arg1_01;\n    piVar6[5] = arg1_00;\n    if (*0x598440 == 0) {\n        piVar6[3] = iVar2;\n    }\n    else {\n        piVar6 = fcn.0045d0e0(iVar2);\n    }\n    fcn.004765a0();\n    return piVar6;\n}\n",
        "token_count": 1269
    },
    "004781e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004781e0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar3 = arg1 & 0x1f;\n            *(*0x20 + -0x10) = uVar3;\n            uVar2 = arg3;\n            if (uVar3 < 0x15) {\n                unaff_RDI = uVar3 - 0x12;\n                if (unaff_RDI < 2) goto code_r0x00478259;\n                if (uVar3 == 0x14) {\ncode_r0x00478246:\n                    unaff_RBX = *unaff_RBX;\n                    goto code_r0x00478275;\n                }\n            }\n            else {\n                if (0x16 < uVar3) {\n                    if (uVar3 == 0x17) goto code_r0x00478246;\n                    if (uVar3 != 0x1a) goto code_r0x004783f3;\n                }\ncode_r0x00478259:\n                if ((arg1 >> 9 & 1) != 0) {\ncode_r0x0047830d:\n                    arg3 = arg3 & 0x1f;\n                    *(*0x20 + -0x10) = arg3;\n                    if (arg3 < 0x15) {\n                        if (1 < arg3 - 0x12) {\n                            if (arg3 == 0x14) {\ncode_r0x0047833d:\n                                unaff_RSI = *unaff_RSI;\n                                goto code_r0x00478361;\n                            }\ncode_r0x00478387:\n                            *(*0x20 + -0x28) = 0x478393;\n                            puVar1 = fcn.0040c140();\n                            puVar1[1] = 0x13;\n                            *puVar1 = 0x4a913d;\n                            puVar1[2] = *(*0x20 + -0x10);\n                            *(*0x20 + -0x28) = 0x4783bd;\n                            fcn.004327c0();\n                            goto code_r0x004783bd;\n                        }\n                    }\n                    else if (0x16 < arg3) {\n                        if (arg3 == 0x17) goto code_r0x0047833d;\n                        if (arg3 != 0x1a) goto code_r0x00478387;\n                    }\n                    if ((uVar2 >> 9 & 1) != 0) {\n                        return 0;\n                    }\n                    if ((uVar2 >> 7 & 1) != 0) {\n                        unaff_RSI = *unaff_RSI;\n                    }\ncode_r0x00478361:\n                    if (unaff_RSI != NULL) {\n                        return 0;\n                    }\n                    return 1;\n                }\n                if ((arg1 >> 7 & 1) != 0) {\n                    unaff_RBX = *unaff_RBX;\n                }\ncode_r0x00478275:\n                if (unaff_RBX != NULL) goto code_r0x0047830d;\n                arg3 = arg3 & 0x1f;\n                *(*0x20 + -0x10) = arg3;\n                if (arg3 < 0x15) {\n                    if (arg3 - 0x12 < 2) goto code_r0x004782cc;\n                    if (arg3 == 0x14) {\ncode_r0x004782b7:\n                        unaff_RSI = *unaff_RSI;\n                        goto code_r0x004782e1;\n                    }\n                }\n                else {\n                    if (arg3 < 0x17) {\ncode_r0x004782cc:\n                        if ((uVar2 >> 9 & 1) == 0) {\n                            if ((uVar2 >> 7 & 1) != 0) {\n                                unaff_RSI = *unaff_RSI;\n                            }\ncode_r0x004782e1:\n                            if (unaff_RSI == NULL) {\n                                return 0;\n                            }\n                        }\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg3 == 0x17) goto code_r0x004782b7;\n                    if (arg3 == 0x1a) goto code_r0x004782cc;\n                }\ncode_r0x004783bd:\n                *(*0x20 + -0x28) = 0x4783c9;\n                puVar1 = fcn.0040c140();\n                puVar1[1] = 0x13;\n                *puVar1 = 0x4a913d;\n                puVar1[2] = *(*0x20 + -0x10);\n                *(*0x20 + -0x28) = 0x4783f3;\n                fcn.004327c0();\n            }\ncode_r0x004783f3:\n            *(*0x20 + -0x28) = 0x4783ff;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4a913d;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x478429;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x47844d;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1663
    },
    "00478de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00478de0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xb0) = 0x478e18;\n            uVar1 = fcn.0047a600();\n            iVar3 = *0x5439d0;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x00478e2f;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x00478e2f:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xb0) = 0x478e65;\n                pcVar2 = fcn.0040ff80(*(*0x20 + 8));\n                unaff_RBX = *0x544320;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xb0) = 0x478eec;\n                    uVar1 = fcn.0045f5c0();\n                    goto code_r0x00478eec;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xb0) = 0x478e8f;\n                fcn.00448440(*0x544328);\n                *(*0x20 + -0xb0) = 0x478e94;\n                iVar3 = fcn.0047a600();\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x00478ead;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x00478ead:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xb0) = 0x478ec5;\n                    uVar1 = fcn.0045f560();\ncode_r0x00478eec:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x58) = iVar3;\n                        *(*0x20 + -0xb0) = 0x478f05;\n                        uVar1 = fcn.0047a760();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xb0) = 0x478f1e;\n                        uVar1 = fcn.0040c140();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xb0) = 0x478f30;\n                        uVar1 = fcn.004099a0();\n                        uVar5 = 0x4c8280;\n                        puVar4 = *(*0x20 + -0x18);\n                        *puVar4 = 0x4c8280;\n                        if (*0x598440 == 0) {\n                            puVar4[1] = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x478f5a;\n                            fcn.0045cfe0(0x4c8280, puVar4, param_3, param_4);\n                        }\n                        puVar4[3] = *(*0x20 + -0x48);\n                        if (*0x598440 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + 8);\n                            *(*0x20 + -0xb0) = 0x478f8b;\n                            fcn.0045d100(uVar5, puVar4, param_3, param_4);\n                        }\n                        uVar5 = 0x4a6197;\n                        arg4 = 2;\n                        *(*0x20 + -0xb0) = 0x478fbb;\n                        uVar1 = fcn.004485c0(0xf, puVar4, 0x4a6197, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4a7ece;\n                        if (*0x598440 == 0) {\n                            *(iVar3 + 0x20) = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x478fdf;\n                            fcn.0045cfe0(iVar3, puVar4, uVar5, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x60) = uVar1;\n                    *(*0x20 + -0xb0) = 0x479009;\n                    puVar4 = fcn.0040c140();\n                    uVar1 = *(*0x20 + -0x48);\n                    puVar4[1] = uVar1;\n                    if (*0x598440 == 0) {\n                        *puVar4 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xb0) = 0x479038;\n                        puVar4 = fcn.0045d100(uVar1, *(*0x20 + 8), param_3, param_4);\n                    }\n                    puVar4[2] = *(*0x20 + -0x60);\n                    return puVar4;\n                }\n                *(*0x20 + -0xb0) = 0x479077;\n                fcn.0045d480(0);\n            }\n            *(*0x20 + -0xb0) = 0x479085;\n            in_RAX = fcn.0045d480(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x479095;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1644
    },
    "004790c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004790c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x80) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            for (iVar4 = 0; iVar4 < arg1; iVar4 = iVar4 + 1) {\n                if (*(unaff_RBX + iVar4) == '\\0') {\n                    arg1 = 0;\n                    iVar6 = 0x4c8280;\n                    iVar4 = 0;\n                    goto code_r0x00479166;\n                }\n            }\n            *(*0x20 + -0xa0) = arg1 + 1;\n            *(*0x20 + -200) = 0x479145;\n            iVar4 = fcn.00444880(arg1);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg1 = *(*0x20 + -0xa0);\n            iVar6 = 0;\n            in_RAX = *(*0x20 + 8);\ncode_r0x00479166:\n            if (iVar6 != 0) {\n                iVar4 = 0;\n                goto code_r0x00479180;\n            }\n            if (arg1 != 0) {\n                iVar6 = 0;\ncode_r0x00479180:\n                if (iVar6 != 0) {\n                    return NULL;\n                }\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -200) = 0x479198;\n                iVar6 = iVar4;\n                uVar1 = fcn.0045f600();\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x98) = iVar4;\n                    *(*0x20 + -200) = 0x4791b6;\n                    uVar2 = fcn.0047a760();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x88) = iVar4;\n                    *(*0x20 + -200) = 0x4791cc;\n                    uVar2 = fcn.0040c140();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -200) = 0x4791db;\n                    uVar2 = fcn.004099a0();\n                    uVar1 = 0x4c8280;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x4c8280;\n                    if (*0x598440 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -200) = 0x479205;\n                        fcn.0045cfe0(0x4c8280, puVar3, iVar6, in_R9);\n                    }\n                    uVar2 = *(*0x20 + -0x80);\n                    puVar3[3] = uVar2;\n                    if (*0x598440 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -200) = 0x479236;\n                        fcn.0045d160(uVar1, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -0xd0) = unaff_RBP;\n                    *(*0x20 + -200) = 0x47924f;\n                    fcn.0045d72b();\n                    *(*0x20 + -0x68) = 0x4a7ebf;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4a7b38;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4a6197;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -200) = 0x4792f2;\n                    uVar1 = fcn.004481a0(6);\n                    iVar4 = *(*0x20 + -0x78);\n                    *(iVar4 + 0x28) = *0x20 + -0x68;\n                    if (*0x598440 == 0) {\n                        *(iVar4 + 0x20) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -200) = 0x479313;\n                        fcn.0045cfe0(iVar4, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x90) = uVar1;\n                *(*0x20 + -200) = 0x47933d;\n                puVar3 = fcn.0040c140();\n                if (*0x598440 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -200) = 0x479365;\n                    puVar3 = fcn.0045d100(uVar2, *(*0x20 + 8), iVar6, in_R9);\n                }\n                puVar3[2] = *(*0x20 + -0x80);\n                if (*0x598440 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -200) = 0x479396;\n                    puVar3 = fcn.0045d100(uVar2, *(*0x20 + 0x10), iVar6, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x90);\n                return puVar3;\n            }\n            *(*0x20 + -200) = 0x4793d5;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4793ea;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1838
    },
    "0047a220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047a220(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0046a460();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x47a380);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.00478de0();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00457760(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 350
    },
    "0047a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047a3e0(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0046a460();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x47a5a0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.0047a220();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.004790c0(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00457760(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 397
    },
    "004813c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004813c0(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.00478b20(arg1);\n        uVar1 = fcn.00448c40(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "004827a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004827a0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x4827f4;\n                    uVar3 = fcn.00483200();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x48281f;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x48282a;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 424
    },
    "00483320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00483320(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    cVar1 = fcn.00482680();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x544100;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x4c8240;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.0047a940(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.00457e00();\n    }\n    uVar2 = fcn.004827a0();\n    fcn.004587a0(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "004836a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004836a0(void)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    int64_t *arg1;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint8_t uVar11;\n    int64_t *piVar12;\n    int64_t in_R11;\n    int64_t unaff_R14;\n    int64_t *piStack64;\n    int64_t iStack24;\n    uint8_t *puStack16;\n    \n    while (piVar10 = &iStack24,  piVar10 < *(unaff_R14 + 0x10) || piVar10 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar5 = NULL;\n    piVar4 = NULL;\n    iVar6 = 0;\n    arg1 = NULL;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX < 1) {\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444ac0(arg1);\n                    piVar10 = iVar6 + 1;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n            }\n            return iVar6;\n        }\n        uVar1 = *in_RAX;\n        uVar9 = uVar8;\n        iStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                    piVar10 = arg1 + 1;\n                    iVar3 = iVar6;\n                    if (piVar4 < piVar10) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00444ac0(arg1);\n                        piVar10 = iVar6 + 1;\n                    }\n                    *(iVar3 + arg1) = 0x5c;\n                    arg1 = piVar10;\n                    iVar6 = iVar3;\n                }\n                return iVar6;\n            }\ncode_r0x00483862:\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar12 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444ac0(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar12;\n                iVar6 = iVar3;\n            }\n            piVar12 = arg1 + 1;\n            iVar3 = iVar6;\n            if (piVar4 < piVar12) {\n                piVar4 = arg1;\n                iVar3 = fcn.00444ac0(arg1);\n                piVar12 = iVar6 + 1;\n                uVar9 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = iStack24;\n            }\n            *(iVar3 + arg1) = uVar1;\n            piVar5 = NULL;\n            iVar6 = iVar3;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                in_R11 = piVar5 / 2;\n                piVar2 = uVar1;\n                piVar12 = piVar5;\n                piStack64 = piVar5;\n                goto code_r0x004838df;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00483862;\n            piVar5 = piVar5 + 1;\n            piVar12 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.0045d540(0);\n            iVar3 = iVar6;\n            while( true ) {\n                *(iVar3 + arg1) = 0x5c;\n                in_R11 = in_R11 + -1;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n                piVar2 = piVar5;\ncode_r0x004838df:\n                piVar5 = piVar2;\n                uVar7 = uVar9;\n                if (in_R11 < 1) break;\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444ac0(arg1);\n                    piVar10 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    piVar5 = uVar1;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    piVar12 = piStack64;\n                }\n            }\n            if ((piVar12 & 1) == 0) {\n                piVar12 = arg1;\n                if (((uVar9 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    piVar12 = arg1 + 1;\n                    iVar3 = iVar6;\n                    uVar11 = piVar5;\n                    if (piVar4 < piVar12) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00444ac0(arg1);\n                        piVar12 = iVar6 + 1;\n                        uVar7 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = iStack24;\n                        uVar11 = uVar1;\n                    }\n                    *(iVar3 + arg1) = uVar11;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX + -1;\n                    iVar6 = iVar3;\n                }\n                uVar9 = uVar7 ^ 1;\n            }\n            else {\n                piVar12 = arg1 + 1;\n                uVar11 = piVar5;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00444ac0(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    iVar6 = iVar3;\n                    uVar11 = uVar1;\n                }\n                *(iVar6 + arg1) = uVar11;\n            }\n            piVar5 = NULL;\n        }\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = piVar12;\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1709
    },
    "00483ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00483ae0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar6 = 0;\n    while (0 < unaff_RBX) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.004836a0();\n            uVar3 = fcn.00448800(unaff_RBX);\n            uVar7 = uVar5 + 1;\n            arg2 = iVar6;\n            if (arg1 < uVar7) {\n                arg1 = uVar5;\n                arg2 = fcn.00444ac0(uVar5);\n                uVar7 = iVar6 + 1;\n            }\n            iVar4 = uVar5 * 0x10;\n            *(arg2 + 8 + iVar4) = uVar2;\n            in_RAX = uVar1;\n            uVar5 = uVar7;\n            unaff_RBX = iVar6;\n            if (*0x598440 == 0) {\n                *(arg2 + iVar4) = uVar3;\n                iVar6 = arg2;\n            }\n            else {\n                fcn.0045cfe0(arg1, arg2, arg2 + iVar4, in_R9);\n                iVar6 = arg2;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 504
    },
    "00484580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484580(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t **in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    ulong arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 1) {\n                return;\n            }\n            piVar1 = *in_RAX;\n            uVar6 = piVar1[1];\n            arg2_00 = piVar1[2];\n            iVar3 = *piVar1;\n            arg1 = unaff_RBX + uVar6;\n            if (arg2_00 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x20) = uVar6;\n                iVar3 = unaff_RBX + arg2_00 * 2;\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x48) = 0x4845f5;\n                iVar3 = fcn.004449e0(iVar3);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = (*in_RAX)[1];\n                iVar5 = *(*0x20 + -0x18);\n                if (iVar2 < *(*0x20 + -0x18)) {\n                    iVar5 = iVar2;\n                }\n                if (iVar3 != **in_RAX) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x48) = 0x484625;\n                    fcn.0045ddc0(iVar5);\n                    iVar3 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg1 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + -0x20);\n                arg2_00 = *(*0x20 + -0x18);\n            }\n            if (*(in_RAX + 0xe) == '\\0') {\n                arg2 = 0x20;\n            }\n            else {\n                arg2 = 0x30;\n            }\n            if (arg1 <= arg2_00) {\n                if (uVar6 <= arg1) {\n                    iVar2 = iVar3 + (uVar6 & uVar6 - arg2_00 >> 0x3f);\n                    for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n                        *(iVar2 + iVar5) = arg2;\n                    }\n                    piVar1 = *in_RAX;\n                    piVar1[1] = arg1;\n                    piVar1[2] = arg2_00;\n                    if (*0x598440 == 0) {\n                        *piVar1 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4846b3;\n                        fcn.0045d140(arg1, arg2, iVar2, arg2_00);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x4846c5;\n                fcn.0045d540(arg1);\n            }\n            *(*0x20 + -0x48) = 0x4846cd;\n            in_RAX = fcn.0045d500(arg1, arg2_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4846dd;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1051
    },
    "00484700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484700(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.00463b00(unaff_RDI);\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.00484580();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444ac0(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045ddc0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x598440 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045cfe0(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444ac0(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045ddc0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x598440 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045d0e0(uVar3);\n            }\n            fcn.00484580();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00444ac0(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045ddc0(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x598440 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045cfe0(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "004849c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004849c0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.00463c60();\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.00484580();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444ac0(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045ddc0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x598440 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045cfe0(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00444ac0(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045ddc0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x598440 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045d0e0(uVar3);\n            }\n            fcn.00484580();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00444ac0(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045ddc0(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x598440 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045cfe0(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 772
    },
    "00484d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484d00(void)\n\n{\n    int64_t arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int32_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = in_RAX + 0x28;\n            if ((*(in_RAX + 9) == '\\0') || (iVar6 = *(in_RAX + 0x20),  iVar6 < 5)) {\n                arg1_00 = 0x44;\n                iVar6 = 4;\n            }\n            else {\n                arg1 = iVar6 + 9;\n                if (arg1 < 0x45) {\n                    arg1_00 = 0x44;\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar6;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x60) = 0x484d66;\n                    iVar2 = fcn.004449e0(arg1);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar6 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x30);\n                    in_RAX = *(*0x20 + 8);\n                }\n            }\n            *(*0x20 + -0x20) = arg1_00;\n            *(*0x20 + -0x10) = iVar2;\n            *(*0x20 + -0x28) = iVar6;\n            if (*(in_RAX + 0xc) == '\\0') {\n                cVar1 = '\\0';\n            }\n            else if (unaff_RBX < 0x110000) {\n                *(*0x20 + -0x60) = 0x484db5;\n                cVar1 = fcn.004693e0();\n                arg1_00 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar6 = *(*0x20 + -0x28);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            arg1_01 = arg1_00;\n            if (cVar1 == '\\0') {\ncode_r0x00484f04:\n                for (; 0xf < unaff_RBX; unaff_RBX = unaff_RBX >> 4) {\n                    uVar7 = arg1_00 - 1;\n                    uVar4 = unaff_RBX & 0xf;\n                    if (arg1_01 <= uVar7) goto code_r0x00484fff;\n                    *((arg1_00 - 1) + iVar2) = *(uVar4 + 0x4a852b);\n                    iVar6 = iVar6 + -1;\n                    arg1_00 = uVar7;\n                }\n                uVar7 = arg1_00 - 1;\n                if (uVar7 < arg1_01) {\n                    *((arg1_00 - 1) + iVar2) = *(unaff_RBX + 0x4a852b);\n                    while (iVar6 = iVar6 + -1,  0 < iVar6) {\n                        if (arg1_01 <= uVar7 - 1) goto code_r0x00484fe9;\n                        *((uVar7 - 1) + iVar2) = 0x30;\n                        uVar7 = uVar7 - 1;\n                    }\n                    if (uVar7 - 1 < arg1_01) {\n                        *((uVar7 - 1) + iVar2) = 0x2b;\n                        if (uVar7 - 2 < arg1_01) {\n                            *((uVar7 - 2) + iVar2) = 0x55;\n                            *(*0x20 + -0x31) = *(in_RAX + 0xe);\n                            *(in_RAX + 0xe) = 0;\n                            *(*0x20 + -0x60) = 0x484fbc;\n                            fcn.00484700((arg1_01 - uVar7) + 2);\n                            *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x31);\n                            return;\n                        }\n                        *(*0x20 + -0x60) = 0x484fde;\n                        fcn.0045d480(arg1_01);\n                    }\n                    *(*0x20 + -0x60) = 0x484fe9;\n                    fcn.0045d480(arg1_01);\ncode_r0x00484fe9:\n                    *(*0x20 + -0x60) = 0x484ff4;\n                    fcn.0045d480(arg1_01);\n                }\n                *(*0x20 + -0x60) = 0x484fff;\n                fcn.0045d480(arg1_01);\n                uVar4 = unaff_RBX;\ncode_r0x00484fff:\n                *(*0x20 + -0x60) = 0x48500a;\n                fcn.0045d480(arg1_01);\ncode_r0x0048500a:\n                *(*0x20 + -0x60) = 0x48500f;\n                fcn.0045d480(arg1_01);\ncode_r0x0048500f:\n                *(*0x20 + -0x60) = 0x485014;\n                fcn.0045d480(arg1_01);\n                unaff_RBX = uVar4;\n                arg1_00 = uVar7;\ncode_r0x00485014:\n                *(*0x20 + -0x60) = 0x48501f;\n                fcn.0045d540(arg1_00);\n            }\n            else if (arg1_00 - 1 < arg1_00) {\n                *((arg1_00 - 1) + iVar2) = 0x27;\n                iVar3 = unaff_RBX;\n                if (iVar3 < 0) {\n                    iVar6 = -1;\n                }\n                else if (iVar3 < 0x80) {\n                    iVar6 = 1;\n                }\n                else if (iVar3 < 0x800) {\n                    iVar6 = 2;\n                }\n                else if (iVar3 - 0xd800U < 0x800) {\n                    iVar6 = -1;\n                }\n                else if (iVar3 < 0x10000) {\n                    iVar6 = 3;\n                }\n                else if (iVar3 < 0x110000) {\n                    iVar6 = 4;\n                }\n                else {\n                    iVar6 = -1;\n                }\n                iVar6 = arg1_00 - iVar6;\n                if (iVar6 - 1U <= arg1_00) {\n                    *(*0x20 + -0x18) = iVar6;\n                    uVar4 = (arg1_00 - iVar6) + 1;\n                    uVar7 = -uVar4 >> 0x3f;\n                    *(*0x20 + -0x60) = 0x484ea5;\n                    fcn.004639a0(uVar4, iVar2, uVar7, iVar6 - 1U & uVar7);\n                    iVar6 = *(*0x20 + -0x18);\n                    arg1_01 = *(*0x20 + -0x20);\n                    if (iVar6 - 2U < arg1_01) {\n                        iVar2 = *(*0x20 + -0x10);\n                        *(iVar6 + -2 + iVar2) = 0x27;\n                        arg1_00 = iVar6 - 3;\n                        if (arg1_00 < arg1_01) {\n                            *(iVar6 + -3 + iVar2) = 0x20;\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar6 = *(*0x20 + -0x28);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x00484f04;\n                        }\n                        goto code_r0x0048500a;\n                    }\n                    goto code_r0x0048500f;\n                }\n                goto code_r0x00485014;\n            }\n            *(*0x20 + -0x60) = 0x485027;\n            in_RAX = fcn.0045d480(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x485037;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2166
    },
    "00485060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485060(uint64_t arg1, uint64_t noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint uVar7;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t unaff_R12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \ncode_r0x00485060:\n    uVar7 = unaff_RSI;\n    puVar6 = *0x20;\n    arg1_00 = unaff_R12;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x28) = arg3;\n        if (unaff_RDI == '\\0') {\n            noname_1 = 0;\n        }\n        else {\n            noname_1 = noname_1 & 0xffffffffffffff00 | unaff_RBX < 0;\n        }\n        if (noname_1 != '\\0') {\n            unaff_RBX = -unaff_RBX;\n        }\n        *(*0x20 + -0x21) = noname_1;\n        *(*0x20 + 8) = in_RAX;\n        iVar3 = in_RAX + 0x28;\n        if ((*(in_RAX + 8) == '\\0') && (*(in_RAX + 9) == '\\0')) {\n            arg1_00 = 0x44;\n        }\n        else {\n            iVar9 = *(in_RAX + 0x18) + *(in_RAX + 0x20) + 3;\n            if (iVar9 < 0x45) {\n                arg1_00 = 0x44;\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x24) = uVar7;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + 0x30) = arg4;\n                *(*0x20 + 0x28) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x4850fc;\n                iVar3 = fcn.004449e0(iVar9);\n                arg1 = *(*0x20 + 0x18);\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RSI = *(*0x20 + 0x24);\n                arg3 = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x30);\n                arg1_00 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (*(in_RAX + 9) == '\\0') {\n            if ((*(in_RAX + 0xe) == '\\0') || (*(in_RAX + 8) == '\\0')) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = *(in_RAX + 0x18);\n                if (((noname_1 != '\\0') || (*(in_RAX + 0xb) != '\\0')) || (*(in_RAX + 0xd) != '\\0')) {\n                    iVar9 = iVar9 + -1;\n                }\n            }\n        }\n        else {\n            iVar9 = *(in_RAX + 0x20);\n            if ((iVar9 == 0) && (unaff_RBX == 0)) {\n                *(*0x20 + -0x23) = *(in_RAX + 0xe);\n                *(in_RAX + 0xe) = 0;\n                *(*0x20 + -0x50) = 0x48515a;\n                fcn.00484580();\n                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x23);\n                return;\n            }\n        }\n        unaff_RDI = arg1_00;\n        if (8 < arg1) {\n            uVar4 = noname_1;\n            if (arg1 == 10) goto code_r0x004854ea;\n            if (arg1 != 0x10) goto code_r0x004854bc;\n            do {\n                if (unaff_RBX < 0x10) goto code_r0x00485220;\n                unaff_R12 = arg1_00;\n                if (arg4 <= (unaff_RBX & 0xf)) goto code_r0x004854b1;\n                uVar1 = *(arg3 + (unaff_RBX & 0xf));\n                noname_1 = uVar1;\n                if (arg1_00 <= unaff_RDI - 1) goto code_r0x004854a6;\n                *((unaff_RDI - 1) + iVar3) = uVar1;\n                unaff_RBX = unaff_RBX >> 4;\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RDI = unaff_RDI - 1;\n                unaff_R13 = unaff_RBX;\n            } while( true );\n        }\n        if (arg1 != 2) {\n            if (arg1 != 8) goto code_r0x004854bc;\n            goto code_r0x00485546;\n        }\n        do {\n            uVar7 = unaff_RSI;\n            if (unaff_RBX < 2) {\ncode_r0x00485220:\n                do {\n                    uVar4 = arg1_00;\n                    if (unaff_RBX < arg4) {\n                        unaff_R13 = unaff_RDI - 1;\n                        if (unaff_R13 < arg1_00) {\n                            *((unaff_RDI - 1) + iVar3) = *(unaff_RBX + arg3);\n                            for (; (uVar4 = arg1_00,  0 < unaff_R13 &&\n                                   (uVar4 = arg1_00 - unaff_R13,  arg1_00 - unaff_R13 < iVar9));\n                                unaff_R13 = unaff_R13 - 1) {\n                                *((unaff_R13 - 1) + iVar3) = 0x30;\n                            }\n                            uVar8 = unaff_R13;\n                            if (*(in_RAX + 0xc) == '\\0') goto code_r0x0048532b;\n                            if (arg1 == 2) {\n                                arg3 = unaff_R13 - 1;\n                                if (arg3 < arg1_00) {\n                                    *((unaff_R13 - 1) + iVar3) = 0x62;\n                                    arg3 = unaff_R13 - 2;\n                                    if (arg3 < arg1_00) {\n                                        *((unaff_R13 - 2) + iVar3) = 0x30;\n                                        uVar8 = arg3;\n                                        goto code_r0x0048532b;\n                                    }\n                                    goto code_r0x00485475;\n                                }\n                            }\n                            else {\n                                if (arg1 == 8) {\n                                    if (unaff_R13 < arg1_00) {\n                                        if (*(iVar3 + unaff_R13) == '0') {\ncode_r0x0048532b:\n                                            uVar5 = uVar8;\n                                            if (unaff_RSI == 0x4f) {\n                                                if (uVar8 - 1 < arg1_00) {\n                                                    *((uVar8 - 1) + iVar3) = 0x6f;\n                                                    if (uVar8 - 2 < arg1_00) {\n                                                        *((uVar8 - 2) + iVar3) = 0x30;\n                                                        uVar5 = uVar8 - 2;\n                                                        goto code_r0x00485360;\n                                                    }\n                                                    goto code_r0x00485426;\n                                                }\n                                            }\n                                            else {\ncode_r0x00485360:\n                                                if (noname_1 == '\\0') {\n                                                    if (*(in_RAX + 0xb) == '\\0') {\n                                                        if (*(in_RAX + 0xd) == '\\0') {\ncode_r0x004853b0:\n                                                            uVar2 = *(in_RAX + 0xe);\n                                                            *(in_RAX + 0xe) = 0;\n                                                            if (uVar5 <= arg1_00) {\n                                                                *(*0x20 + -0x22) = uVar2;\n                                                                *(*0x20 + -0x50) = 0x4853de;\n                                                                fcn.00484700(arg1_00 - uVar5);\n                                                                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x22);\n                                                                return;\n                                                            }\n                                                            *(*0x20 + -0x50) = 0x485405;\n                                                            fcn.0045d540(arg1_00);\n                                                            noname_1 = uVar5;\n                                                        }\n                                                        else {\n                                                            noname_1 = uVar5 - 1;\n                                                            if (noname_1 < arg1_00) {\n                                                                *((uVar5 - 1) + iVar3) = 0x20;\n                                                                uVar5 = noname_1;\n                                                                goto code_r0x004853b0;\n                                                            }\n                                                        }\n                                                        *(*0x20 + -0x50) = 0x485410;\n                                                        fcn.0045d480(arg1_00);\n                                                    }\n                                                    else {\n                                                        noname_1 = uVar5 - 1;\n                                                        if (noname_1 < arg1_00) {\n                                                            *((uVar5 - 1) + iVar3) = 0x2b;\n                                                            uVar5 = noname_1;\n                                                            goto code_r0x004853b0;\n                                                        }\n                                                    }\n                                                    *(*0x20 + -0x50) = 0x48541b;\n                                                    fcn.0045d480(arg1_00);\n                                                }\n                                                else {\n                                                    noname_1 = uVar5 - 1;\n                                                    if (noname_1 < arg1_00) {\n                                                        *((uVar5 - 1) + iVar3) = 0x2d;\n                                                        uVar5 = noname_1;\n                                                        goto code_r0x004853b0;\n                                                    }\n                                                }\n                                                *(*0x20 + -0x50) = 0x485426;\n                                                fcn.0045d480(arg1_00);\ncode_r0x00485426:\n                                                *(*0x20 + -0x50) = 0x485431;\n                                                fcn.0045d480(arg1_00);\n                                            }\n                                            *(*0x20 + -0x50) = 0x48543c;\n                                            fcn.0045d480(arg1_00);\ncode_r0x0048543c:\n                                            *(*0x20 + -0x50) = 0x485447;\n                                            fcn.0045d480(arg1_00);\ncode_r0x00485447:\n                                            *(*0x20 + -0x50) = 0x485452;\n                                            fcn.0045d480(arg1_00);\n                                            arg3 = uVar8;\n                                            goto code_r0x00485452;\n                                        }\n                                        arg3 = unaff_R13 - 1;\n                                        if (arg3 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = 0x30;\n                                            uVar8 = arg3;\n                                            goto code_r0x0048532b;\n                                        }\n                                        goto code_r0x0048545f;\n                                    }\n                                }\n                                else {\n                                    if (arg1 != 0x10) goto code_r0x0048532b;\n                                    if (0x10 < arg4) {\n                                        arg4 = unaff_R13 - 1;\n                                        uVar8 = *(arg3 + 0x10);\n                                        if (arg4 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = *(arg3 + 0x10);\n                                            uVar8 = unaff_R13 - 2;\n                                            if (uVar8 < arg1_00) {\n                                                *((unaff_R13 - 2) + iVar3) = 0x30;\n                                                goto code_r0x0048532b;\n                                            }\n                                            goto code_r0x0048543c;\n                                        }\n                                        goto code_r0x00485447;\n                                    }\ncode_r0x00485452:\n                                    *(*0x20 + -0x50) = 0x48545f;\n                                    fcn.0045d480(arg4);\ncode_r0x0048545f:\n                                    *(*0x20 + -0x50) = 0x48546a;\n                                    fcn.0045d480(arg1_00);\n                                }\n                                *(*0x20 + -0x50) = 0x485475;\n                                fcn.0045d480(arg1_00);\ncode_r0x00485475:\n                                *(*0x20 + -0x50) = 0x485485;\n                                fcn.0045d480(arg1_00);\n                            }\n                            *(*0x20 + -0x50) = 0x485490;\n                            fcn.0045d480(arg1_00);\n                            unaff_RDI = arg1_00;\n                        }\n                        *(*0x20 + -0x50) = 0x48549b;\n                        fcn.0045d480(uVar4);\n                    }\n                    unaff_RBX = unaff_R13;\n                    *(*0x20 + -0x50) = 0x4854a6;\n                    fcn.0045d4a0(arg4);\n                    arg1_00 = uVar4;\ncode_r0x004854a6:\n                    *(*0x20 + -0x50) = 0x4854b1;\n                    fcn.0045d480(arg1_00);\n                    unaff_R12 = arg1_00;\ncode_r0x004854b1:\n                    arg1 = arg4;\n                    *(*0x20 + -0x50) = 0x4854bc;\n                    arg4 = arg1;\n                    fcn.0045d4a0(arg1);\n                    arg1_00 = unaff_RDI;\n                    unaff_R13 = unaff_RBX;\ncode_r0x004854bc:\n                    unaff_RBX = 0x4c7c48;\n                    *(*0x20 + -0x50) = 0x4854cf;\n                    uVar4 = fcn.004327c0();\n                    unaff_RDI = arg1_00;\n                    arg1_00 = unaff_R12;\n                    do {\n                        *((unaff_RDI - 1) + iVar3) = unaff_RBX + '0';\n                        unaff_RSI = uVar4 & 0xffffffff;\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x21);\n                        unaff_RBX = noname_1;\n                        unaff_RDI = unaff_R13;\ncode_r0x004854ea:\n                        noname_1 = uVar4;\n                        if (unaff_RBX < 10) goto code_r0x00485220;\n                        unaff_R13 = unaff_RDI - 1;\n                        noname_1 = unaff_RBX / 10;\n                        uVar4 = unaff_RSI & 0xffffffff;\n                        unaff_RSI = noname_1 * 10;\n                        unaff_RBX = unaff_RBX % 10;\n                    } while (unaff_R13 < arg1_00);\n                    *(*0x20 + -0x50) = 0x485525;\n                    arg1 = arg1_00;\n                    in_RAX = fcn.0045d480(arg1_00);\n                    while( true ) {\n                        *(*0x20 + -0x18) = unaff_R13;\n                        unaff_R13 = (unaff_RBX & 7) + 0x30;\n                        *((unaff_RDI - 1) + iVar3) = unaff_R13;\n                        unaff_RBX = unaff_RBX >> 3;\n                        unaff_RDI = *(*0x20 + -0x18);\ncode_r0x00485546:\n                        if (unaff_RBX < 8) break;\n                        unaff_R13 = unaff_RDI - 1;\n                        if (arg1_00 <= unaff_R13) {\n                            *(*0x20 + -0x50) = 0x485565;\n                            arg1 = arg1_00;\n                            in_RAX = fcn.0045d480(arg1_00);\n                            goto code_r0x00485565;\n                        }\n                    }\n                } while( true );\n            }\n            unaff_R13 = unaff_RDI - 1;\n            if (arg1_00 <= unaff_R13) goto code_r0x00485598;\ncode_r0x00485565:\n            *(*0x20 + -0x18) = unaff_R13;\n            unaff_R13 = (unaff_RBX & 1) + 0x30;\n            *((unaff_RDI - 1) + iVar3) = unaff_R13;\n            unaff_RBX = unaff_RBX >> 1;\n            unaff_RDI = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x004855a6;\ncode_r0x00485598:\n    *(*0x20 + -0x50) = 0x4855a5;\n    arg1 = arg1_00;\n    in_RAX = fcn.0045d480(arg1_00);\ncode_r0x004855a6:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    puVar6[0x20] = unaff_RDI;\n    *(puVar6 + 0x24) = uVar7;\n    *(puVar6 + 0x28) = arg3;\n    *(puVar6 + 0x30) = arg4;\n    *(puVar6 + -8) = 0x4855cd;\n    fcn.0045ad80();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = puVar6[0x20];\n    unaff_RSI = *(puVar6 + 0x24);\n    arg3 = *(puVar6 + 0x28);\n    arg4 = *(puVar6 + 0x30);\n    *0x20 = puVar6;\n    unaff_R12 = arg1_00;\n    goto code_r0x00485060;\n}\n",
        "token_count": 4328
    },
    "00485600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485600(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            uVar1 = arg1;\n            do {\n                if (uVar1 <= arg1_00) {\n                    return unaff_RBX;\n                }\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    arg1 = arg1_00;\n                    arg2 = uVar1;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = arg1_00;\n                    *(*0x20 + -0x20) = iVar3;\n                    *(*0x20 + -0x40) = 0x48567a;\n                    fcn.004563c0(arg1_00);\n                    arg1 = *(*0x20 + -0x18);\n                    arg2 = *(*0x20 + -0x10);\n                    iVar3 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    arg1_00 = uVar1;\n                }\n                iVar3 = iVar3 + -1;\n                uVar1 = arg2;\n            } while (-1 < iVar3);\n            if (arg1 <= arg2) {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x40) = 0x4856bc;\n            in_RAX = fcn.0045d4c0(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4856d1;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "00485700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485700(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            while( true ) {\n                if (arg1 <= arg1_00) {\n                    return unaff_RBX;\n                }\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) break;\n                if (arg1 <= arg1_00) goto code_r0x004857ed;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    iVar1 = 1;\n                }\n                else {\n                    *(*0x20 + -0x20) = arg1_00;\n                    *(*0x20 + -0x28) = iVar3;\n                    iVar1 = arg1 - arg1_00;\n                    *(*0x20 + -0x48) = 0x4857a9;\n                    fcn.00463620(unaff_RDI - arg1_00);\n                    arg1_00 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                    iVar3 = *(*0x20 + -0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                arg1_00 = arg1_00 + iVar1;\n            }\n            if (arg1_00 <= unaff_RDI) {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x48) = 0x4857ed;\n            fcn.0045d500(arg1_00, unaff_RDI);\n            arg1 = arg1_00;\ncode_r0x004857ed:\n            *(*0x20 + -0x48) = 0x4857f2;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48580c;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 851
    },
    "00485940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485940(int64_t *arg1, ulong noname_1, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t **in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *arg1_00;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uchar uVar6;\n    uint8_t uVar7;\n    int64_t *piVar8;\n    int64_t *in_R10;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    int64_t *piVar10;\n    bool bVar11;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x38) = arg4;\n            piVar4 = arg1;\n            if (unaff_RDI != 0) {\n                piVar4 = unaff_RSI;\n            }\n            if ((*(in_RAX + 9) != '\\0') && (in_RAX[4] < piVar4)) {\n                piVar4 = in_RAX[4];\n            }\n            arg3 = piVar4 << 1;\n            if (arg3 < 1) {\n                if (*(in_RAX + 1) != '\\0') {\n                    *(*0x20 + -0x90) = 0x485b4c;\n                    fcn.00484580();\n                }\n                return;\n            }\n            if (*(in_RAX + 0xd) == '\\0') {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 * 2 + 2;\n                }\n            }\n            else {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 << 2;\n                }\n                arg3 = (arg3 + piVar4) - 1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = piVar4;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = arg3;\n            if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) == '\\0')) {\n                *(*0x20 + -0x90) = 0x485a46;\n                fcn.00484580();\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x40);\n                arg4 = *(*0x20 + 0x38);\n                in_R10 = *(*0x20 + 0x40);\n                piVar4 = *(*0x20 + -0x10);\n            }\n            piVar10 = *in_RAX;\n            arg1_00 = piVar10[1];\n            piVar9 = piVar10[2];\n            iVar2 = *piVar10;\n            iVar1 = iVar2;\n            if (*(in_RAX + 0xc) == '\\0') {\ncode_r0x00485b38:\n                piVar10 = NULL;\n                while( true ) {\n                    if (piVar4 <= piVar10) {\n                        piVar4 = *in_RAX;\n                        piVar4[1] = arg1_00;\n                        piVar4[2] = piVar9;\n                        if (*0x598440 == 0) {\n                            *piVar4 = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x90) = 0x485df0;\n                            in_RAX = fcn.0045d0e0(iVar1);\n                        }\n                        if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) != '\\0')) {\n                            *(*0x20 + -0x90) = 0x485e0d;\n                            fcn.00484580();\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x38) = piVar10;\n                    iVar2 = iVar1;\n                    if (*(in_RAX + 0xd) == '\\0') {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else if (piVar10 < 1) {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else {\n                        piVar3 = arg1_00;\n                        piVar8 = arg1_00 + 1U;\n                        if (piVar9 < arg1_00 + 1U) {\n                            *(*0x20 + -0x20) = arg1_00;\n                            *(*0x20 + -0x90) = 0x485bcc;\n                            iVar2 = fcn.00444ac0(arg1_00);\n                            arg1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x38);\n                            in_R10 = *(*0x20 + 0x40);\n                            piVar4 = *(*0x20 + -0x10);\n                            piVar10 = *(*0x20 + -0x38);\n                            in_RAX = *(*0x20 + 8);\n                            piVar3 = *(*0x20 + -0x20);\n                            piVar8 = iVar1 + 1;\n                            piVar9 = arg1_00;\n                        }\n                        arg1_00 = piVar8;\n                        *(iVar2 + piVar3) = 0x20;\n                        iVar1 = unaff_RDI;\n                        if (*(in_RAX + 0xc) != '\\0') {\n                            if (in_R10 < 0x11) goto code_r0x00485e49;\n                            uVar6 = *(arg4 + 0x10);\n                            piVar8 = arg1_00;\n                            piVar3 = arg1_00 + 2U;\n                            if (piVar9 < arg1_00 + 2U) {\n                                *(*0x20 + -0x28) = arg1_00;\n                                *(*0x20 + -0x41) = uVar6;\n                                *(*0x20 + -0x90) = 0x485c6c;\n                                iVar1 = fcn.00444ac0(arg1_00);\n                                piVar3 = iVar2 + 2;\n                                arg1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RSI = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                uVar6 = *(*0x20 + -0x41);\n                                in_R10 = *(*0x20 + 0x40);\n                                piVar10 = *(*0x20 + -0x38);\n                                in_RAX = *(*0x20 + 8);\n                                piVar4 = *(*0x20 + -0x10);\n                                piVar8 = *(*0x20 + -0x28);\n                                iVar2 = iVar1;\n                                piVar9 = arg1_00;\n                                iVar1 = *(*0x20 + 0x20);\n                            }\n                            arg1_00 = piVar3;\n                            *(iVar2 + piVar8) = 0x30;\n                            *(iVar2 + 1 + piVar8) = uVar6;\n                            arg4 = *(*0x20 + 0x38);\n                        }\n                        bVar11 = iVar1 == 0;\n                        arg3 = *(*0x20 + -0x40);\n                    }\n                    if (bVar11) {\n                        if (arg1 <= piVar10) goto code_r0x00485e33;\n                        uVar7 = *(unaff_RBX + piVar10);\n                        arg1 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        if (unaff_RSI <= piVar10) goto code_r0x00485e3e;\n                        uVar7 = *(unaff_RDI + piVar10);\n                    }\n                    *(*0x20 + -0x43) = uVar7;\n                    arg3 = uVar7 >> 4;\n                    if (in_R10 <= arg3) goto code_r0x00485e28;\n                    uVar7 = *(arg3 + arg4);\n                    arg3 = uVar7;\n                    arg1 = *(*0x20 + -0x43) & 0xf;\n                    if (in_R10 <= arg1) break;\n                    uVar6 = *(arg1 + arg4);\n                    piVar3 = arg1_00;\n                    piVar8 = arg1_00 + 2U;\n                    iVar1 = iVar2;\n                    if (piVar9 < arg1_00 + 2U) {\n                        *(*0x20 + -0x41) = uVar7;\n                        *(*0x20 + -0x42) = uVar6;\n                        *(*0x20 + -0x30) = arg1_00;\n                        *(*0x20 + -0x90) = 0x485d7e;\n                        iVar1 = fcn.00444ac0(arg1_00);\n                        uVar6 = *(*0x20 + -0x42);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        uVar7 = *(*0x20 + -0x41);\n                        arg4 = *(*0x20 + 0x38);\n                        piVar4 = *(*0x20 + -0x10);\n                        piVar10 = *(*0x20 + -0x38);\n                        in_RAX = *(*0x20 + 8);\n                        piVar3 = *(*0x20 + -0x30);\n                        piVar8 = iVar2 + 2;\n                        piVar9 = arg1_00;\n                    }\n                    arg1_00 = piVar8;\n                    *(iVar1 + piVar3) = uVar7;\n                    *(iVar1 + 1 + piVar3) = uVar6;\n                    piVar10 = piVar10 + 1;\n                    arg1 = *(*0x20 + -0x18);\n                    arg3 = *(*0x20 + -0x40);\n                    in_R10 = *(*0x20 + 0x40);\n                }\n                *(*0x20 + -0x90) = 0x485e28;\n                fcn.0045d480(in_R10);\ncode_r0x00485e28:\n                *(*0x20 + -0x90) = 0x485e33;\n                fcn.0045d480(in_R10);\ncode_r0x00485e33:\n                *(*0x20 + -0x90) = 0x485e3e;\n                fcn.0045d480(arg1);\ncode_r0x00485e3e:\n                arg1_00 = arg3;\n                *(*0x20 + -0x90) = 0x485e49;\n                fcn.0045d480(unaff_RSI);\ncode_r0x00485e49:\n                *(*0x20 + -0x90) = 0x485e56;\n                fcn.0045d480(in_R10);\n                arg3 = arg1_00;\n            }\n            else if (0x10 < in_R10) {\n                uVar6 = *(arg4 + 0x10);\n                piVar10 = arg1_00;\n                piVar3 = arg1_00 + 2U;\n                if (piVar9 < arg1_00 + 2U) {\n                    *(*0x20 + -0x41) = uVar6;\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x90) = 0x485ad7;\n                    iVar1 = fcn.00444ac0(arg1_00);\n                    arg1 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    uVar6 = *(*0x20 + -0x41);\n                    arg4 = *(*0x20 + 0x38);\n                    in_R10 = *(*0x20 + 0x40);\n                    piVar4 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                    piVar10 = *(*0x20 + -0x30);\n                    piVar9 = arg1_00;\n                    piVar3 = iVar2 + 2;\n                }\n                arg1_00 = piVar3;\n                *(iVar1 + piVar10) = 0x30;\n                *(iVar1 + 1 + piVar10) = uVar6;\n                arg3 = *(*0x20 + -0x40);\n                goto code_r0x00485b38;\n            }\n            arg1 = in_R10;\n            *(*0x20 + -0x90) = 0x485e65;\n            in_R10 = arg1;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + 0x38) = arg4;\n        *(puVar5 + 0x40) = in_R10;\n        *(puVar5 + -8) = 0x485e93;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        arg4 = *(puVar5 + 0x38);\n        in_R10 = *(puVar5 + 0x40);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 3574
    },
    "00485ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485ee0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00485600(arg1);\n    if ((*(in_RAX + 0xc) != '\\0') && (noname_1 = in_RAX,  cVar1 = fcn.004692e0(),  cVar1 != '\\0')) {\n        fcn.004484e0(1, noname_1, 0x4a617b, 1);\n        fcn.004849c0(0x4a617b);\n        return;\n    }\n    if (*(in_RAX + 0xb) == '\\0') {\n        fcn.00468500(0x44);\n        fcn.00484700(0);\n    }\n    else {\n        fcn.00468500(0x44);\n        fcn.00484700(0);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "004860e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004860e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0xb) == '\\0') {\n        fcn.00468980(0x44);\n        fcn.00484700(0);\n    }\n    else {\n        fcn.00468980(0x44);\n        fcn.00484700(0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "004861c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048622f)\n// WARNING: Removing unreachable block (ram,0x00486238)\n// WARNING: Removing unreachable block (ram,0x0048623d)\n// WARNING: Removing unreachable block (ram,0x00486248)\n// WARNING: Removing unreachable block (ram,0x0048624b)\n// WARNING: Removing unreachable block (ram,0x00486260)\n// WARNING: Removing unreachable block (ram,0x00486269)\n// WARNING: Removing unreachable block (ram,0x0048626e)\n// WARNING: Removing unreachable block (ram,0x00486274)\n// WARNING: Removing unreachable block (ram,0x00486280)\n// WARNING: Removing unreachable block (ram,0x0048628a)\n// WARNING: Removing unreachable block (ram,0x004862a0)\n// WARNING: Removing unreachable block (ram,0x0048633e)\n// WARNING: Removing unreachable block (ram,0x00486351)\n// WARNING: Removing unreachable block (ram,0x00486357)\n// WARNING: Removing unreachable block (ram,0x0048635d)\n// WARNING: Removing unreachable block (ram,0x00486366)\n// WARNING: Removing unreachable block (ram,0x004862aa)\n// WARNING: Removing unreachable block (ram,0x004862b4)\n// WARNING: Removing unreachable block (ram,0x004862ca)\n// WARNING: Removing unreachable block (ram,0x004862e0)\n// WARNING: Removing unreachable block (ram,0x004862e6)\n// WARNING: Removing unreachable block (ram,0x004862d0)\n// WARNING: Removing unreachable block (ram,0x004862d6)\n// WARNING: Removing unreachable block (ram,0x004862ec)\n// WARNING: Removing unreachable block (ram,0x004862fb)\n// WARNING: Removing unreachable block (ram,0x00486300)\n// WARNING: Removing unreachable block (ram,0x004862dc)\n// WARNING: Removing unreachable block (ram,0x00486302)\n// WARNING: Removing unreachable block (ram,0x00486305)\n// WARNING: Removing unreachable block (ram,0x004865f9)\n// WARNING: Removing unreachable block (ram,0x00486857)\n// WARNING: Removing unreachable block (ram,0x0048686a)\n// WARNING: Removing unreachable block (ram,0x00486870)\n// WARNING: Removing unreachable block (ram,0x00486876)\n// WARNING: Removing unreachable block (ram,0x00486879)\n// WARNING: Removing unreachable block (ram,0x00486885)\n// WARNING: Removing unreachable block (ram,0x004868cd)\n// WARNING: Removing unreachable block (ram,0x00486865)\n// WARNING: Removing unreachable block (ram,0x004868dd)\n// WARNING: Removing unreachable block (ram,0x004868e7)\n// WARNING: Removing unreachable block (ram,0x004868f0)\n// WARNING: Removing unreachable block (ram,0x004868d3)\n// WARNING: Removing unreachable block (ram,0x00486938)\n// WARNING: Removing unreachable block (ram,0x00486949)\n// WARNING: Removing unreachable block (ram,0x00486977)\n// WARNING: Removing unreachable block (ram,0x00486397)\n// WARNING: Removing unreachable block (ram,0x004863a0)\n// WARNING: Removing unreachable block (ram,0x004863a9)\n// WARNING: Removing unreachable block (ram,0x004865aa)\n// WARNING: Removing unreachable block (ram,0x004863b2)\n// WARNING: Removing unreachable block (ram,0x004863bc)\n// WARNING: Removing unreachable block (ram,0x004863c6)\n// WARNING: Removing unreachable block (ram,0x00486589)\n// WARNING: Removing unreachable block (ram,0x004863d0)\n// WARNING: Removing unreachable block (ram,0x004863dc)\n// WARNING: Removing unreachable block (ram,0x00486406)\n// WARNING: Removing unreachable block (ram,0x00486440)\n// WARNING: Removing unreachable block (ram,0x0048643a)\n// WARNING: Removing unreachable block (ram,0x00486445)\n// WARNING: Removing unreachable block (ram,0x00486461)\n// WARNING: Removing unreachable block (ram,0x004864d6)\n// WARNING: Removing unreachable block (ram,0x00486519)\n// WARNING: Removing unreachable block (ram,0x0048656c)\n// WARNING: Removing unreachable block (ram,0x0048655f)\n// WARNING: Removing unreachable block (ram,0x00486579)\n// WARNING: Removing unreachable block (ram,0x004865e2)\n// WARNING: Removing unreachable block (ram,0x004865ec)\n// WARNING: Removing unreachable block (ram,0x00486609)\n// WARNING: Removing unreachable block (ram,0x00486645)\n// WARNING: Removing unreachable block (ram,0x0048664f)\n// WARNING: Removing unreachable block (ram,0x0048674f)\n// WARNING: Removing unreachable block (ram,0x0048677c)\n// WARNING: Removing unreachable block (ram,0x004867a5)\n// WARNING: Removing unreachable block (ram,0x004867e8)\n// WARNING: Removing unreachable block (ram,0x0048662b)\n// WARNING: Removing unreachable block (ram,0x00486639)\n// WARNING: Removing unreachable block (ram,0x00486660)\n// WARNING: Removing unreachable block (ram,0x0048666a)\n// WARNING: Removing unreachable block (ram,0x00486674)\n// WARNING: Removing unreachable block (ram,0x0048669b)\n// WARNING: Removing unreachable block (ram,0x004866e0)\n// WARNING: Removing unreachable block (ram,0x00486640)\n// WARNING: Removing unreachable block (ram,0x00486755)\n// WARNING: Removing unreachable block (ram,0x0048676b)\n// WARNING: Removing unreachable block (ram,0x0048676f)\n// WARNING: Removing unreachable block (ram,0x00486631)\n// WARNING: Removing unreachable block (ram,0x004865f6)\n// WARNING: Removing unreachable block (ram,0x004869b8)\n// WARNING: Removing unreachable block (ram,0x004869c5)\n\nvoid fcn.004861c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong in_XMM0_Qa;\n    ulong extraout_XMM0_Qa;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x60 && *0x20 + -0x60 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xe0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 9) != '\\0') {\n                unaff_RDI = *(in_RAX + 0x20);\n            }\n            *(*0x20 + 0x20) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = unaff_RDI;\n            unaff_RDI = arg1;\n            *(*0x20 + -0xe8) = 0x486225;\n            fcn.00464540(0x44, in_RAX + 0x28, unaff_RBX);\n            unaff_RBX = 1;\n            *(*0x20 + -0xe8) = 0x4869dc;\n            uVar1 = unaff_RBX;\n            in_RAX = fcn.0045d480(1);\n            arg1._0_4_ = uVar1;\n            in_XMM0_Qa = extraout_XMM0_Qa;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = in_XMM0_Qa;\n        *(puVar2 + 0x18) = unaff_RBX;\n        *(puVar2 + 0x20) = arg1;\n        *(puVar2 + 0x28) = unaff_RDI;\n        *(puVar2 + -8) = 0x4869fb;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        in_XMM0_Qa = *(puVar2 + 0x10);\n        unaff_RBX = *(puVar2 + 0x18);\n        arg1._0_4_ = *(puVar2 + 0x20);\n        unaff_RDI = *(puVar2 + 0x28);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 2007
    },
    "00486a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486a20(ulong param_1, ulong param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg2;\n    int32_t unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (unaff_EBX < 0x80) {\n                iVar4 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar3 = iVar1;\n                if (in_RAX[2] < iVar4 + 1U) {\n                    *(*0x20 + -0x70) = 0x486a85;\n                    arg2 = iVar1;\n                    iVar3 = fcn.00444ac0(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = iVar4;\n                    if (*0x598440 == 0) {\n                        *in_RAX = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x486aa5;\n                        iVar3 = fcn.0045cfe0(iVar4, arg2, param_3, param_4);\n                    }\n                    unaff_EBX = *(*0x20 + 0x10);\n                    iVar4 = iVar1;\n                }\n                in_RAX[1] = iVar4 + 1;\n                *(iVar3 + iVar4) = unaff_EBX;\n                return;\n            }\n            uVar5 = in_RAX[1];\n            *(*0x20 + -0x28) = uVar5;\n            arg2_00 = in_RAX[2];\n            param_3 = uVar5;\n            param_4 = *in_RAX;\n            while( true ) {\n                uVar7 = uVar5 + 4;\n                if (uVar7 <= arg2_00) break;\n                uVar7 = param_3 + 1;\n                uVar8 = param_3;\n                iVar4 = param_4;\n                if (arg2_00 < uVar7) {\n                    *(*0x20 + -0x18) = param_3;\n                    *(*0x20 + -0x70) = 0x486aff;\n                    iVar4 = fcn.00444ac0(param_3);\n                    uVar7 = param_4 + 1;\n                    unaff_EBX = *(*0x20 + 0x10);\n                    uVar8 = *(*0x20 + -0x18);\n                    uVar5 = *(*0x20 + -0x28);\n                    arg2_00 = param_3;\n                }\n                *(iVar4 + uVar8) = 0;\n                param_3 = uVar7;\n                param_4 = iVar4;\n            }\n            if (uVar7 <= arg2_00) {\n                if (uVar5 <= uVar7) {\n                    *(*0x20 + -0x20) = arg2_00;\n                    *(*0x20 + -0x10) = param_4;\n                    iVar4 = arg2_00 - uVar5;\n                    arg2_00 = -iVar4 >> 0x3f & uVar5;\n                    unaff_EBX = 4;\n                    *(*0x20 + -0x70) = 0x486b58;\n                    iVar4 = fcn.004639a0(iVar4);\n                    uVar5 = *(*0x20 + -0x28) + iVar4;\n                    uVar8 = *(*0x20 + -0x20);\n                    if (uVar5 <= uVar8) {\n                        puVar2 = *(*0x20 + 8);\n                        puVar2[1] = uVar5;\n                        puVar2[2] = uVar8;\n                        if (*0x598440 == 0) {\n                            *puVar2 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x486b96;\n                            fcn.0045cfe0(uVar5, uVar8, param_3, param_4);\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x70) = 0x486ba6;\n                    fcn.0045d500(uVar5, uVar8);\n                }\n                *(*0x20 + -0x70) = 0x486bb1;\n                fcn.0045d540(uVar7);\n            }\n            *(*0x20 + -0x70) = 0x486bbc;\n            in_RAX = fcn.0045d500(uVar7, arg2_00);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x486bcb;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1323
    },
    "00486be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00486be0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x486c05;\n            iVar1 = fcn.0046ab20();\n            if (iVar1 == 0x4a3280) {\n                *(unaff_RBX + 0xb2) = 0;\n                *(unaff_RBX + 0xb4) = 0;\n                if (*0x598440 == 0) {\n                    *(unaff_RBX + 0x40) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x486c3a;\n                    fcn.0045d120(0x4a3280, param_2, param_3, param_4);\n                }\n                *(unaff_RBX + 0x48) = 0;\n                *(unaff_RBX + 0x49) = 0;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x4a3280;\n            *(*0x20 + -0x28) = 0x486c67;\n            fcn.004096c0(0x497ba0);\n        }\n        *(puVar2 + -8) = 0x486c6d;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 465
    },
    "00486c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486c80(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x10) < 0x10001) {\n        *(in_RAX + 8) = 0;\n        *(in_RAX + 0x18) = 0;\n        if (*0x598440 == 0) {\n            *(in_RAX + 0x20) = 0;\n        }\n        else {\n            in_RAX = fcn.0045d100(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0x38) = 0;\n        if (*0x598440 == 0) {\n            *(in_RAX + 0x28) = in_XMM15;\n        }\n        else {\n            fcn.0045d100(arg1, 0, arg3, in_R9);\n            in_RAX = fcn.0045d100(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0xb8) = 0;\n        if (*0x598440 == 0) {\n            *(in_RAX + 0xc0) = 0;\n        }\n        else {\n            in_RAX = fcn.0045d100(arg1, 0, arg3, in_R9);\n        }\n        fcn.0046aa40(in_RAX);\n        return;\n    }\n    return;\n}\n",
        "token_count": 404
    },
    "00486e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486e60(uint64_t arg1)\n\n{\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00474720(arg1);\n    if (((arg1 & 0x1f) == 0x14) && (*unaff_RBX != 0)) {\n        fcn.00474580(arg1);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00486f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00486f00(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (&iStack16 < *(unaff_R14 + 0x10) || &iStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RDI == 0) {\n        uVar5 = in_RAX[1];\n        uVar6 = in_RAX[2];\n        uVar4 = *in_RAX;\n        if (uVar6 < uVar5 + 5) {\n            uVar6 = uVar5;\n            uVar4 = fcn.00444ac0(uVar5);\n        }\n        *(uVar4 + uVar5) = 0x6c696e3c;\n        *(uVar4 + 4 + uVar5) = 0x3e;\n        in_RAX[1] = uVar5 + 5;\n        in_RAX[2] = uVar6;\n        if (*0x598440 == 0) {\n            *in_RAX = uVar4;\n        }\n        else {\n            fcn.0045d120(uVar5, arg2, arg3, arg4);\n        }\n        return;\n    }\n    uVar5 = in_RAX[1];\n    uVar6 = *in_RAX;\n    uVar4 = in_RAX[2];\n    uVar1 = uVar6;\n    if (uVar4 < uVar5 + 1) {\n        uVar3 = uVar5;\n        arg3_00 = uVar6;\n        iStack16 = arg1;\n        uVar1 = fcn.00444ac0(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x598440 == 0) {\n            *in_RAX = uVar1;\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n        else {\n            uVar1 = fcn.0045cfe0(uVar5, uVar3, arg3_00, uVar4);\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar1 + uVar5) = 0x3f;\n    iVar2 = fcn.004758a0(unaff_RDI);\n    (**(iVar2 + 0xf8))();\n    uVar6 = in_RAX[1];\n    uVar5 = uVar6 + arg1;\n    uVar4 = in_RAX[2];\n    uVar1 = *in_RAX;\n    if (uVar4 < uVar5) {\n        uVar4 = uVar6;\n        uVar1 = fcn.00444ac0(uVar6);\n    }\n    iVar2 = arg1;\n    fcn.0045ddc0(arg1);\n    in_RAX[1] = uVar5;\n    in_RAX[2] = uVar4;\n    arg1 = uVar6 + arg1;\n    if (*0x598440 == 0) {\n        *in_RAX = uVar1;\n    }\n    else {\n        fcn.0045d120(uVar5, uVar4, uVar6, iVar2);\n    }\n    uVar3 = uVar1;\n    if (uVar4 < arg1 + 1U) {\n        uVar3 = fcn.00444ac0(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x598440 == 0) {\n            *in_RAX = uVar3;\n            uVar5 = uVar1;\n        }\n        else {\n            uVar3 = fcn.0045cfe0(uVar5, uVar4, uVar6, iVar2);\n            uVar5 = uVar1;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar3 + uVar5) = 0x3f;\n    return;\n}\n",
        "token_count": 996
    },
    "004871c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004871c0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack32 < *(unaff_R14 + 0x10) || &uStack32 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 0xb3) = 1;\n    uVar9 = in_RAX[1];\n    uVar5 = in_RAX[2];\n    uVar2 = *in_RAX;\n    if (uVar5 < uVar9 + 2) {\n        uVar5 = uVar9;\n        uVar2 = fcn.00444ac0(uVar9);\n    }\n    *(uVar2 + uVar9) = 0x2125;\n    in_RAX[1] = uVar9 + 2;\n    in_RAX[2] = uVar5;\n    if (*0x598440 == 0) {\n        *in_RAX = uVar2;\n    }\n    else {\n        fcn.0045d100(uVar9, uVar2, arg3, in_R9);\n    }\n    fcn.00486a20();\n    uVar9 = in_RAX[1];\n    uVar5 = *in_RAX;\n    uVar2 = in_RAX[2];\n    uVar3 = uVar5;\n    if (uVar2 < uVar9 + 1) {\n        uVar3 = fcn.00444ac0(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x598440 == 0) {\n            *in_RAX = uVar3;\n            uVar9 = uVar5;\n        }\n        else {\n            uVar3 = fcn.0045cfe0(uVar9, uVar2, arg3, in_R9);\n            uVar9 = uVar5;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar3 + uVar9) = 0x28;\n    uVar9 = in_RAX[3];\n    uVar5 = in_RAX[4];\n    if (uVar9 == 0) {\n        if (in_RAX[7] == 0) {\n            uVar9 = in_RAX[1];\n            uVar2 = in_RAX[2];\n            uVar3 = *in_RAX;\n            if (uVar2 < uVar9 + 5) {\n                uVar2 = uVar9;\n                uVar3 = fcn.00444ac0(uVar9);\n            }\n            *(uVar3 + uVar9) = 0x6c696e3c;\n            *(uVar3 + 4 + uVar9) = 0x3e;\n            in_RAX[1] = uVar9 + 5;\n            in_RAX[2] = uVar2;\n            if (*0x598440 == 0) {\n                *in_RAX = uVar3;\n            }\n            else {\n                fcn.0045d120(uVar9, uVar2, uVar5, in_R9);\n            }\n        }\n        else {\n            uVar5 = in_RAX[6];\n            iVar4 = fcn.004758a0(in_RAX[7]);\n            (**(iVar4 + 0xf8))();\n            uVar2 = in_RAX[1];\n            uVar9 = uVar5 + uVar2;\n            uVar3 = in_RAX[2];\n            uVar8 = *in_RAX;\n            if (uVar3 < uVar9) {\n                uVar3 = uVar2;\n                uVar8 = fcn.00444ac0(uVar2);\n            }\n            in_R9 = uVar5;\n            uStack32 = uVar8;\n            fcn.0045ddc0(uVar5);\n            uVar1 = uStack32;\n            in_RAX[1] = uVar9;\n            in_RAX[2] = uVar3;\n            if (*0x598440 == 0) {\n                *in_RAX = uStack32;\n                puVar6 = in_RAX;\n                uVar10 = uVar2;\n            }\n            else {\n                puVar6 = fcn.0045d120(uVar9, uVar3, uVar8, in_R9);\n                uVar10 = uVar3;\n            }\n            uVar7 = uVar1;\n            if (uVar3 < uVar5 + uVar2 + 1) {\n                uVar7 = fcn.00444ac0(uVar9);\n                in_RAX[2] = uVar9;\n                if (*0x598440 == 0) {\n                    *in_RAX = uVar7;\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n                else {\n                    uVar7 = fcn.0045cfe0(uVar9, uVar10, uVar8, in_R9);\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n            }\n            puVar6[1] = uVar9 + 1;\n            *(uVar7 + uVar9) = 0x3d;\n            uVar5 = 0;\n            fcn.00489ee0(puVar6[6], uVar9 + 1, 0);\n        }\n    }\n    else {\n        if (uVar9 == 0) {\n            iVar4 = 0;\n            uVar2 = 0;\n        }\n        else {\n            iVar4 = 0x4c9f20;\n            uVar2 = uVar9;\n        }\n        uStack24 = uVar9;\n        uStack16 = uVar5;\n        (**(iVar4 + 0xf8))(uVar2);\n        uVar2 = in_RAX[1];\n        uVar9 = uVar3 + uVar2;\n        uVar8 = in_RAX[2];\n        uVar5 = *in_RAX;\n        if (uVar8 < uVar9) {\n            uVar8 = uVar2;\n            uVar5 = fcn.00444ac0(uVar2);\n        }\n        uStack32 = uVar5;\n        fcn.0045ddc0(uVar3);\n        uVar1 = uStack32;\n        in_RAX[1] = uVar9;\n        in_RAX[2] = uVar8;\n        if (*0x598440 == 0) {\n            *in_RAX = uStack32;\n            puVar6 = in_RAX;\n            uVar10 = uVar2;\n        }\n        else {\n            puVar6 = fcn.0045d120(uVar9, uVar8, uVar5, in_R9);\n            uVar10 = uVar8;\n        }\n        uVar7 = uVar1;\n        if (uVar8 < uVar3 + uVar2 + 1) {\n            uVar7 = fcn.00444ac0(uVar9);\n            in_RAX[2] = uVar9;\n            if (*0x598440 == 0) {\n                *in_RAX = uVar7;\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n            else {\n                uVar7 = fcn.0045cfe0(uVar9, uVar10, uVar5, in_R9);\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n        }\n        puVar6[1] = uVar9 + 1;\n        *(uVar7 + uVar9) = 0x3d;\n        fcn.00489700(puVar6[4]);\n    }\n    uVar9 = in_RAX[1];\n    uVar2 = *in_RAX;\n    uVar3 = in_RAX[2];\n    uVar8 = uVar2;\n    if (uVar3 < uVar9 + 1) {\n        uVar8 = fcn.00444ac0(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x598440 == 0) {\n            *in_RAX = uVar8;\n            uVar9 = uVar2;\n        }\n        else {\n            uVar8 = fcn.0045cfe0(uVar9, uVar3, uVar5, in_R9);\n            uVar9 = uVar2;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar8 + uVar9) = 0x29;\n    *(in_RAX + 0xb3) = 0;\n    return;\n}\n",
        "token_count": 2057
    },
    "004877c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004877c0(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg1 = arg1 & 0xff;\n    }\n    if (unaff_EDI < 100) {\n        if (unaff_EDI < 0x56) {\n            if (unaff_EDI == 0x4f) {\ncode_r0x0048789e:\n                fcn.00485060(8, arg2, 0x4a853c, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x55) {\n                fcn.00484d00();\n                return;\n            }\n        }\n        else {\n            if (unaff_EDI == 0x58) {\n                fcn.00485060(0x10, arg2, 0x4a852b, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x62) {\n                fcn.00485060(2, arg2, 0x4a853c, 0x11);\n                return;\n            }\n            if (unaff_EDI == 99) {\n                fcn.00486040();\n                return;\n            }\n        }\n    }\n    else if (unaff_EDI < 0x70) {\n        if (unaff_EDI == 100) {\n            fcn.00485060(10, arg2, 0x4a853c, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x6f) goto code_r0x0048789e;\n    }\n    else {\n        if (unaff_EDI == 0x71) {\n            fcn.004860e0();\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if ((*(in_RAX + 0x50) != '\\0') && (arg1 == '\\0')) {\n                fcn.00487720(1);\n                return;\n            }\n            fcn.00485060(10, arg2, 0x4a853c, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.00485060(0x10, arg2, 0x4a853c, 0x11);\n            return;\n        }\n    }\n    fcn.004871c0(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 618
    },
    "00487ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00487ac0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong in_R8;\n    int64_t arg3;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    \n    while (iVar3 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar3 < 99) {\n        uVar6 = iVar3 - 0x45;\n        if (((uVar6 < 3) || (iVar3 == 0x58)) || (iVar3 == 0x62)) {\ncode_r0x00487b0e:\n            uVar1 = *(in_RAX + 0x4b);\n            uVar5 = uVar1;\n            arg1_00 = in_RAX[1];\n            iVar2 = *in_RAX;\n            uVar4 = arg1;\n            arg4 = iVar2;\n            if (in_RAX[2] < arg1_00 + 1U) {\n                arg3 = arg1_00;\n                arg4_00 = iVar2;\n                arg4 = fcn.00444ac0(arg1_00);\n                in_RAX[2] = arg1_00;\n                if (*0x598440 == 0) {\n                    *in_RAX = arg4;\n                }\n                else {\n                    arg4 = fcn.0045cfe0(arg1_00, uVar5, arg3, arg4_00);\n                }\n                uVar4 = arg1 & 0xffffffff;\n                arg1_00 = iVar2;\n            }\n            in_RAX[1] = arg1_00 + 1;\n            *(arg4 + arg1_00) = 0x28;\n            fcn.004879c0(uVar4);\n            *(in_RAX + 0x4b) = 1;\n            fcn.004879c0(arg1 & 0xffffffff);\n            uVar4 = in_RAX[1];\n            uVar5 = in_RAX[2];\n            iVar2 = *in_RAX;\n            if (uVar5 < uVar4 + 2) {\n                uVar5 = uVar4;\n                iVar2 = fcn.00444ac0(uVar4);\n            }\n            *(iVar2 + uVar4) = 0x2969;\n            in_RAX[1] = uVar4 + 2;\n            in_RAX[2] = uVar5;\n            if (*0x598440 == 0) {\n                *in_RAX = iVar2;\n            }\n            else {\n                fcn.0045d120(uVar4, uVar5, arg1_00, arg4);\n            }\n            *(in_RAX + 0x4b) = uVar1;\n            return;\n        }\n    }\n    else {\n        uVar6 = iVar3 - 0x65;\n        if (((uVar6 < 3) || (iVar3 == 0x76)) || (iVar3 == 0x78)) goto code_r0x00487b0e;\n    }\n    fcn.004871c0(arg1, uVar6, in_R8);\n    return;\n}\n",
        "token_count": 805
    },
    "00487cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487cc0(ulong arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_EDI < 0x72) {\n        if (unaff_EDI == 0x58) {\n            fcn.00485940(arg1, arg2, 0, 0x4a852b);\n            return;\n        }\n        if (unaff_EDI == 0x71) {\n            fcn.00485ee0(arg1);\n            return;\n        }\n    }\n    else {\n        if (unaff_EDI == 0x73) {\n            fcn.00485840(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if (*(in_RAX + 0x50) != '\\0') {\n                fcn.00485ee0(arg1);\n                return;\n            }\n            fcn.00485840(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.00485940(arg1, arg2, 0, 0x4a853c);\n            return;\n        }\n    }\n    fcn.004871c0(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 349
    },
    "00487dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487dc0(int64_t arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    uchar auStack56 [24];\n    uint64_t uStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (uStack0000000000000030 = arg3,  auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg3 = uStack0000000000000030;\n    }\n    if (iStack0000000000000028 < 0x72) {\n        if (iStack0000000000000028 == 0x58) {\n            fcn.00485940(0, noname_1, unaff_RDI, 0x4a852b);\n            return;\n        }\n        if (iStack0000000000000028 == 100) {\ncode_r0x00487e89:\n            if (*(in_RAX + 10) == '\\0') {\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar5 = uVar1;\n                    uVar2 = fcn.00444ac0(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045cfe0(uVar1, uVar5, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        uVar4 = *in_RAX;\n                        uVar2 = uVar4;\n                        if (in_RAX[2] < uVar1 + 1) {\n                            arg2 = iVar7;\n                            uVar2 = fcn.00444ac0(uVar1);\n                            in_RAX[2] = uVar1;\n                            if (*0x598440 == 0) {\n                                *in_RAX = uVar2;\n                                uVar1 = uVar4;\n                            }\n                            else {\n                                uVar2 = fcn.0045cfe0(uVar1, arg2, arg3, arg4);\n                                uVar1 = uVar4;\n                            }\n                        }\n                        in_RAX[1] = uVar1 + 1;\n                        *(uVar2 + uVar1) = 0x20;\n                    }\n                    arg3 = 0x4a853c;\n                    arg4 = 0x11;\n                    fcn.00485060(10, in_RAX + 8, 0x4a853c, 0x11);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar2 = fcn.00444ac0(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045cfe0(uVar1, iVar7, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5d;\n                return;\n            }\n            uVar4 = in_RAX[1];\n            uVar1 = uVar4 + arg4;\n            uVar2 = in_RAX[2];\n            uStack32 = *in_RAX;\n            if (uVar2 < uVar1) {\n                uVar2 = uVar4;\n                uStack32 = fcn.00444ac0(uVar4);\n            }\n            uVar3 = uStack0000000000000030;\n            uVar8 = arg4;\n            fcn.0045ddc0(arg4);\n            uVar5 = uStack32;\n            in_RAX[1] = uVar1;\n            in_RAX[2] = uVar2;\n            uVar6 = uVar1;\n            if (*0x598440 == 0) {\n                *in_RAX = uStack32;\n            }\n            else {\n                fcn.0045d120(uVar1, uVar2, uVar3, uVar8);\n            }\n            if (unaff_RBX != 0) {\n                uVar1 = uVar5;\n                if (uVar2 < uVar4 + arg4 + 1) {\n                    iVar7 = unaff_RBX;\n                    uVar1 = fcn.00444ac0(uVar6);\n                    in_RAX[2] = uVar6;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar1;\n                        uVar6 = uVar5;\n                    }\n                    else {\n                        uVar1 = fcn.0045cfe0(uVar6, uVar2, iVar7, arg4);\n                        uVar6 = uVar5;\n                    }\n                }\n                in_RAX[1] = uVar6 + 1;\n                *(uVar1 + uVar6) = 0x7b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        arg4 = in_RAX[2];\n                        uVar4 = *in_RAX;\n                        if (arg4 < uVar1 + 2) {\n                            arg4 = uVar1;\n                            uVar4 = fcn.00444ac0(uVar1);\n                        }\n                        *(uVar4 + uVar1) = 0x202c;\n                        in_RAX[1] = uVar1 + 2;\n                        in_RAX[2] = arg4;\n                        if (*0x598440 == 0) {\n                            *in_RAX = uVar4;\n                        }\n                        else {\n                            fcn.0045d140(uVar1, arg1, unaff_RBX, arg4);\n                        }\n                    }\n                    fcn.00487720(1);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = in_RAX[2];\n                uVar5 = uVar4;\n                if (uVar2 < uVar1 + 1) {\n                    uVar5 = fcn.00444ac0(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar5;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar5 = fcn.0045cfe0(uVar1, uVar2, unaff_RBX, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar5 + uVar1) = 0x7d;\n                return;\n            }\n            uVar8 = uVar4 + arg4 + 5;\n            arg1_00 = uVar6;\n            if (uVar2 < uVar8) {\n                uVar5 = fcn.00444ac0(uVar6);\n                arg1_00 = uVar1;\n                uVar2 = uVar6;\n            }\n            *(uVar5 + arg1_00) = 0x6c696e28;\n            *(uVar5 + 4 + arg1_00) = 0x29;\n            in_RAX[1] = uVar8;\n            in_RAX[2] = uVar2;\n            if (*0x598440 == 0) {\n                *in_RAX = uVar5;\n            }\n            else {\n                fcn.0045d120(arg1_00, uVar2, arg4, uVar4);\n            }\n            return;\n        }\n        if (iStack0000000000000028 == 0x71) {\n            fcn.00448800(arg1);\n            fcn.00485ee0(unaff_RBX);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x73) {\n            fcn.004858c0(arg1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x76) goto code_r0x00487e89;\n        if (iStack0000000000000028 == 0x78) {\n            fcn.00485940(0, noname_1, unaff_RDI, 0x4a853c);\n            return;\n        }\n    }\n    uStack16 = fcn.00409ac0(unaff_RDI);\n    if (*0x5443d0 == '\\0') {\n        iStack24 = 0x494de0;\n        uVar3 = *0x5443e0;\n    }\n    else {\n        iStack24 = 0x494de0;\n        *0x5443d8 = 0x494de0;\n        uVar3 = uStack16;\n        if (*0x598440 != 0) {\n            uStack16 = fcn.0045cfe0(unaff_RDI, 0x494de0, arg3, arg4);\n            uVar3 = *0x5443e0;\n        }\n    }\n    *0x5443e0 = uVar3;\n    uVar3 = uStack16;\n    iVar7 = iStack24;\n    if (iStack24 == 0) {\n        uVar3 = 0;\n        iVar7 = 0;\n    }\n    fcn.00489ee0(uVar3, iVar7, 0);\n    return;\n}\n",
        "token_count": 2471
    },
    "004884a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004884a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t arg1_00;\n    uint64_t arg3;\n    int32_t unaff_ESI;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar8 = unaff_RDI & 0x1f;\n    uVar9 = uVar8 - 0x12;\n    if (((1 < uVar9) && (uVar9 = uVar8 - 0x15,  2 < uVar9)) && (uVar8 != 0x1a)) {\n        fcn.004871c0(arg1, unaff_RDI, uVar9);\n        return;\n    }\n    uVar8 = unaff_RDI;\n    uVar6 = unaff_RDI;\n    iStack16 = arg1;\n    arg4 = fcn.00475380(unaff_RDI);\n    if (iStack0000000000000028 < 0x65) {\n        if (((iStack0000000000000028 == 0x58) || (iStack0000000000000028 == 0x62)) || (iStack0000000000000028 == 100))\n        goto code_r0x00488895;\n    }\n    else if (iStack0000000000000028 < 0x71) {\n        if (iStack0000000000000028 == 0x6f) {\ncode_r0x00488895:\n            fcn.004877c0(0, uVar6);\n            return;\n        }\n        if (iStack0000000000000028 == 0x70) {\n            fcn.00487720(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x76) {\n            if (*(in_RAX + 10) != '\\0') {\n                iVar3 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar2 = iVar1;\n                if (in_RAX[2] < iVar3 + 1U) {\n                    piVar4 = in_RAX;\n                    iVar2 = fcn.00444ac0(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x598440 == 0) {\n                        *in_RAX = iVar2;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar2 = fcn.0045cfe0(iVar3, piVar4, uVar9, in_R9);\n                        iVar3 = iVar1;\n                    }\n                }\n                iVar1 = iStack16;\n                in_RAX[1] = iVar3 + 1;\n                *(iVar2 + iVar3) = 0x28;\n                iVar3 = fcn.004758a0(unaff_RDI);\n                (**(iVar3 + 0xf8))();\n                uVar8 = in_RAX[1];\n                uVar9 = uVar8 + iVar1;\n                uVar6 = in_RAX[2];\n                iVar3 = *in_RAX;\n                if (uVar6 < uVar9) {\n                    uVar6 = uVar8;\n                    iVar3 = fcn.00444ac0(uVar8);\n                }\n                fcn.0045ddc0(iVar1);\n                in_RAX[1] = uVar9;\n                in_RAX[2] = uVar6;\n                arg3 = uVar8 + iVar1 + 2;\n                uVar7 = uVar9;\n                iVar2 = iVar1;\n                if (*0x598440 == 0) {\n                    *in_RAX = iVar3;\n                    piVar4 = in_RAX;\n                }\n                else {\n                    piVar4 = fcn.0045d180(uVar9, iVar1, arg3);\n                }\n                arg1_00 = uVar7;\n                if (uVar6 < arg3) {\n                    iVar3 = fcn.00444ac0(uVar7);\n                    piVar4 = in_RAX;\n                    arg1_00 = uVar9;\n                    iVar2 = iVar1;\n                    uVar6 = uVar7;\n                }\n                *(iVar3 + arg1_00) = 0x2829;\n                piVar4[1] = arg3;\n                piVar4[2] = uVar6;\n                if (*0x598440 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    piVar4 = fcn.0045d120(arg1_00, iVar2, arg3, uVar6);\n                }\n                if (arg4 == 0) {\n                    uVar8 = uVar8 + iVar2 + 5;\n                    if (uVar6 < uVar8) {\n                        uVar7 = arg3;\n                        iVar3 = fcn.00444ac0(arg3);\n                        piVar4 = in_RAX;\n                        arg1_00 = uVar9;\n                        uVar6 = arg3;\n                        arg3 = uVar7;\n                    }\n                    *(arg1_00 + 2 + iVar3) = 0x696e;\n                    *(arg1_00 + 4 + iVar3) = 0x6c;\n                    piVar4[1] = uVar8;\n                    piVar4[2] = uVar6;\n                    if (*0x598440 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        piVar4 = fcn.0045d120(arg1_00, iVar2, arg3, arg4);\n                    }\n                }\n                else {\n                    fcn.00487720(1);\n                    piVar4 = in_RAX;\n                }\n                iVar3 = piVar4[1];\n                iVar1 = *piVar4;\n                iVar5 = iVar1;\n                if (piVar4[2] < iVar3 + 1U) {\n                    iVar5 = fcn.00444ac0(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x598440 == 0) {\n                        *in_RAX = iVar5;\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar5 = fcn.0045cfe0(iVar3, iVar2, arg3, arg4);\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                }\n                piVar4[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                return;\n            }\n            if (arg4 == 0) {\n                fcn.004849c0(5);\n                return;\n            }\n            fcn.00487720(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x78) goto code_r0x00488895;\n    }\n    fcn.004871c0(uVar8, uVar6, uVar9);\n    return;\n}\n",
        "token_count": 1735
    },
    "00488920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488920(ulong arg1, ulong noname_1, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t *unaff_RDI;\n    int64_t iVar14;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    bool bVar15;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x6c) = unaff_RDI;\n            *(*0x20 + -0xb8) = 0x48898a;\n            iVar3 = fcn.00432f20(arg1, *0x20 + 8);\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar10 = *(*0x20 + -0x20);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                bVar15 = false;\n                arg3 = NULL;\n            }\n            else {\n                if (*0x5443d0 == '\\0') {\n                    arg3 = *(*0x20 + 0x18);\n                }\n                else {\n                    *0x5443d8 = iVar10;\n                    if (*0x598440 == 0) {\n                        arg3 = *(*0x20 + 0x18);\n                        *0x5443e0 = arg3;\n                    }\n                    else {\n                        arg3 = *(*0x20 + 0x18);\n                        *(*0x20 + -0xb8) = 0x4889e8;\n                        iVar3 = fcn.0045d160(arg1, iVar10, arg3, in_R9);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar10;\n                *(*0x20 + -0x10) = arg3;\n                if (*(*0x20 + -0x18) == 0) {\n                    uVar9 = 0;\n                    bVar15 = false;\n                    arg3 = NULL;\n                }\n                else {\n                    uVar1 = *(*(*0x20 + -0x18) + 0x17);\n                    in_R9 = uVar1;\n                    uVar9 = uVar1 & 0x1f;\n                    bVar15 = (uVar1 & 0x20) == 0;\n                }\n            }\n            if (uVar9 == 0x16) {\n                if (bVar15) {\n                    arg3 = *arg3;\n                }\n                if (arg3 == NULL) {\n                    piVar4 = *(*0x20 + 8);\n                    uVar6 = piVar4[1];\n                    uVar7 = uVar6 + 5;\n                    iVar3 = *piVar4;\n                    uVar8 = uVar6;\n                    uVar11 = piVar4[2];\n                    if (piVar4[2] < uVar7) {\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x50) = uVar6;\n                        *(*0x20 + -0xb8) = 0x488a9e;\n                        iVar3 = fcn.00444ac0(uVar6);\n                        uVar7 = *(*0x20 + -0x48);\n                        piVar4 = *(*0x20 + 8);\n                        uVar8 = *(*0x20 + -0x50);\n                        uVar11 = uVar6;\n                    }\n                    *(iVar3 + uVar8) = 0x6c696e3c;\n                    *(iVar3 + 4 + uVar8) = 0x3e;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = uVar11;\n                    if (*0x598440 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x488add;\n                        fcn.0045d120(uVar8, uVar11, arg3, in_R9);\n                    }\n                    return;\n                }\n            }\n            unaff_RDI = *(*0x20 + 8);\n            if (*(unaff_RDI + 0xb2) == '\\0') {\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x30) = unaff_RBX;\n                uVar2 = *(unaff_RDI + 10);\n                *(*0x20 + -0x39) = unaff_RDI[9];\n                *(*0x20 + -0x31) = uVar2;\n                unaff_RDI[9] = 0;\n                *(unaff_RDI + 0x49) = 0;\n                uVar6 = unaff_RDI[1];\n                uVar7 = uVar6 + 2;\n                iVar3 = *unaff_RDI;\n                uVar8 = uVar6;\n                uVar11 = unaff_RDI[2];\n                if (unaff_RDI[2] < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0x50) = uVar6;\n                    *(*0x20 + -0xb8) = 0x488b68;\n                    iVar3 = fcn.00444ac0(uVar6);\n                    uVar7 = *(*0x20 + -0x48);\n                    unaff_RDI = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x50);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x2125;\n                unaff_RDI[1] = uVar7;\n                unaff_RDI[2] = uVar11;\n                if (*0x598440 == 0) {\n                    *unaff_RDI = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x488baf;\n                    fcn.0045d160(uVar8, uVar11, iVar3, in_R9);\n                }\n                *(*0x20 + -0xb8) = 0x488bbb;\n                fcn.00486a20();\n                piVar4 = *(*0x20 + 8);\n                uVar6 = piVar4[1];\n                *(*0x20 + -0x48) = uVar6;\n                uVar7 = uVar6 + 7;\n                iVar3 = *piVar4;\n                uVar8 = uVar6;\n                uVar11 = piVar4[2];\n                if (piVar4[2] < uVar7) {\n                    *(*0x20 + -0x50) = uVar7;\n                    *(*0x20 + -0xb8) = 0x488bf1;\n                    iVar3 = fcn.00444ac0(uVar6);\n                    uVar7 = *(*0x20 + -0x50);\n                    piVar4 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x48);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x4e415028;\n                *(iVar3 + 3 + uVar8) = 0x3d43494e;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                iVar14 = *(*0x20 + 0x30);\n                uVar6 = uVar8 + iVar14 + 7;\n                iVar10 = uVar8 + iVar14;\n                if (*0x598440 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x488c47;\n                    fcn.0045d120(uVar8, uVar11, iVar14, uVar6);\n                }\n                *(*0x20 + -0x50) = iVar10;\n                *(*0x20 + -0x58) = uVar6;\n                if (uVar11 < uVar6) {\n                    *(*0x20 + -0xb8) = 0x488c6c;\n                    iVar3 = fcn.00444ac0(uVar7);\n                    iVar14 = *(*0x20 + 0x30);\n                    uVar11 = uVar7;\n                }\n                *(*0x20 + -0x60) = uVar11;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0xb8) = 0x488ca5;\n                fcn.0045ddc0(iVar14);\n                uVar8 = *(*0x20 + -0x58);\n                piVar4 = *(*0x20 + 8);\n                piVar4[1] = uVar8;\n                uVar11 = *(*0x20 + -0x60);\n                piVar4[2] = uVar11;\n                uVar7 = *(*0x20 + -0x48) + *(*0x20 + 0x30) + 0x10;\n                if (*0x598440 == 0) {\n                    iVar3 = *(*0x20 + -0x28);\n                    *piVar4 = iVar3;\n                }\n                else {\n                    iVar3 = *(*0x20 + -0x28);\n                    *(*0x20 + -0xb8) = 0x488cfd;\n                    piVar4 = fcn.0045d120(uVar8, uVar11, iVar14, uVar6);\n                }\n                if (uVar11 < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0xb8) = 0x488d17;\n                    iVar3 = fcn.00444ac0(uVar8);\n                    uVar7 = *(*0x20 + -0x48);\n                    piVar4 = *(*0x20 + 8);\n                    uVar11 = uVar8;\n                }\n                iVar10 = *(*0x20 + -0x50);\n                *(iVar10 + 7 + iVar3) = 0x3a646f6874656d20;\n                *(iVar10 + 0xf + iVar3) = 0x20;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                if (*0x598440 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x488d65;\n                    piVar4 = fcn.0045d120(uVar8, 0x3a646f6874656d20, iVar10, uVar6);\n                }\n                *(piVar4 + 0xb2) = 1;\n                *(*0x20 + -0xb8) = 0x488d85;\n                fcn.00489700(*(*0x20 + -0x30));\n                piVar4 = *(*0x20 + 8);\n                *(piVar4 + 0xb2) = 0;\n                iVar3 = piVar4[1];\n                iVar14 = *piVar4;\n                piVar12 = piVar4;\n                iVar5 = iVar14;\n                if (piVar4[2] < iVar3 + 1U) {\n                    *(*0x20 + -0xb8) = 0x488db5;\n                    iVar5 = fcn.00444ac0(iVar3);\n                    piVar12 = *(*0x20 + 8);\n                    piVar12[2] = iVar3;\n                    if (*0x598440 == 0) {\n                        *piVar12 = iVar5;\n                        iVar3 = iVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x488dd4;\n                        iVar5 = fcn.0045cfe0(iVar3, piVar4, iVar10, uVar6);\n                        iVar3 = iVar14;\n                    }\n                }\n                piVar12[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                uVar2 = *(*0x20 + -0x31);\n                piVar12[9] = *(*0x20 + -0x39);\n                *(piVar12 + 10) = uVar2;\n                return;\n            }\n            *(*0x20 + -0xb8) = 0x488e0f;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + 0x20) = unaff_RDI;\n        *(puVar13 + 0x28) = unaff_RSI;\n        *(puVar13 + 0x30) = arg3;\n        *(puVar13 + -8) = 0x488e32;\n        fcn.0045ad80();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        unaff_RDI = *(puVar13 + 0x20);\n        unaff_RSI = *(puVar13 + 0x28);\n        arg3 = *(puVar13 + 0x30);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3291
    },
    "00488e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.00488e60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    uint64_t uVar5;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auVar6 [12];\n    uchar auStack552 [40];\n    uint uStack512;\n    ulong *puStack488;\n    uint uStack432;\n    ulong *puStack408;\n    uint uStack352;\n    ulong *puStack328;\n    int64_t iStack272;\n    int64_t iStack264;\n    ulong uStack256;\n    ulong uStack248;\n    ulong uStack240;\n    ulong uStack232;\n    uchar auStack224 [16];\n    uchar auStack208 [16];\n    uchar auStack192 [16];\n    ulong uStack176;\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    ulong uStack120;\n    uchar auStack112 [16];\n    uchar auStack96 [16];\n    uchar auStack80 [16];\n    ulong uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auVar6 = SUB1612(in_XMM15 >> 0x20, 0),  auStack552 < *(unaff_R14 + 0x10) || auStack552 == *(unaff_R14 + 0x10)\n          ) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0xb3) != '\\0') {\n        fcn.00431660();\n        return 0;\n    }\n    iVar4 = in_RAX;\n    if (unaff_EBX == 0x77) {\n        uVar1 = *(in_RAX + 0x18);\n        arg1 = *(in_RAX + 0x20);\n        iVar3 = fcn.00409cc0(arg1);\n        if (((iVar3 == 0) || (*(in_RAX + 0xb4) == '\\0')) || (*(in_RAX + 0xb8) != 0)) {\n            *(in_RAX + 0xb8) = 0;\n            if (*0x598440 == 0) {\n                *(in_RAX + 0xc0) = 0;\n            }\n            else {\n                arg1 = 0;\n                fcn.0045d0e0();\n            }\n            *(in_RAX + 0xb4) = 0;\n            fcn.004871c0(arg1, in_RAX, param_3);\n            fcn.00431660();\n            return 1;\n        }\n        *(in_RAX + 0xb8) = iVar3;\n        if (*0x598440 == 0) {\n            *(in_RAX + 0xc0) = uVar1;\n        }\n        else {\n            fcn.0045d120(arg1, in_RAX, param_3, param_4);\n        }\n        unaff_EBX = 0x76;\n    }\n    uStack248 = *(iVar4 + 0x18);\n    iVar4 = fcn.00409cc0(*(iVar4 + 0x20));\n    if (iVar4 != 0) {\n        auStack56 = *(in_RAX + 0x18);\n        uStack64 = 0x4896a0;\n        auStack40 = CONCAT124(auVar6, unaff_EBX);\n        auStack40 = CONCAT88(0x4a666a, auStack40._0_8_);\n        auStack24 = CONCAT88(in_RAX, 6);\n        uStack352 = 0;\n        puStack328 = &uStack64;\n        iVar2 = fcn.004309e0();\n        if (iVar2 != 0) {\n            fcn.00431660();\n            return 1;\n        }\n        (**(iVar4 + 0x18))(in_RAX);\n        fcn.00431660();\n        return 1;\n    }\n    if (*(in_RAX + 0x50) == '\\0') {\n        if (unaff_EBX < 0x72) {\n            if ((unaff_EBX != 0x58) && (unaff_EBX != 0x71)) goto code_r0x00489253;\n        }\n        else if (((unaff_EBX != 0x73) && (unaff_EBX != 0x76)) && (unaff_EBX != 0x78)) goto code_r0x00489253;\n        iStack272 = *(in_RAX + 0x18);\n        if (iStack272 != 0) {\n            uStack240 = *(in_RAX + 0x20);\n            iVar4 = fcn.00409cc0(*(in_RAX + 0x20));\n            if (iVar4 != 0) {\n                auStack168 = *(in_RAX + 0x18);\n                uStack176 = 0x4895e0;\n                uVar5 = unaff_EBX;\n                auStack152 = CONCAT124(auVar6, unaff_EBX);\n                auStack152 = CONCAT88(0x4a64f0, auStack152._0_8_);\n                auStack136 = CONCAT88(in_RAX, 5);\n                uStack512 = 0;\n                puStack488 = &uStack176;\n                iStack264 = iStack272;\n                iVar2 = fcn.004309e0();\n                if (iVar2 != 0) {\n                    fcn.00431660();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.00487cc0(&uStack176, uVar5);\n                fcn.00431660();\n                return 1;\n            }\n            iVar4 = fcn.00409cc0(uStack240);\n            if (iVar4 != 0) {\n                auStack224 = *(in_RAX + 0x18);\n                uStack232 = 0x489580;\n                uVar5 = unaff_EBX;\n                auStack208 = CONCAT124(auVar6, unaff_EBX);\n                auStack208 = CONCAT88(0x4a66c4, auStack208._0_8_);\n                auStack192 = CONCAT88(in_RAX, 6);\n                iVar2 = fcn.004309e0();\n                if (iVar2 != 0) {\n                    fcn.00431660();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.00487cc0(&uStack232, uVar5);\n                fcn.00431660();\n                return 1;\n            }\n        }\n    }\n    else {\n        uStack256 = *(in_RAX + 0x18);\n        iVar4 = fcn.00409cc0(*(in_RAX + 0x20));\n        if (iVar4 != 0) {\n            uVar1 = *(in_RAX + 0x20);\n            auStack112 = *(in_RAX + 0x18);\n            uStack120 = 0x489640;\n            auStack96 = CONCAT124(auVar6, unaff_EBX);\n            auStack96 = CONCAT88(0x4a6a0f, auStack96._0_8_);\n            auStack80 = CONCAT88(in_RAX, 8);\n            uStack432 = 0;\n            puStack408 = &uStack120;\n            iVar2 = fcn.004309e0();\n            if (iVar2 != 0) {\n                fcn.00431660();\n                return 1;\n            }\n            (**(iVar4 + 0x18))();\n            fcn.00485840(uVar1);\n            fcn.00431660();\n            return 1;\n        }\n    }\ncode_r0x00489253:\n    fcn.00431660();\n    return 0;\n}\n",
        "token_count": 1796
    },
    "00489700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00489700(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint32_t unaff_EDI;\n    int64_t in_R8;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 0x18) = unaff_RBX;\n    iVar4 = in_RAX + 0x20;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x20) = arg1;\n    }\n    else {\n        in_RAX = fcn.0045d0e0();\n    }\n    *(in_RAX + 0x38) = 0;\n    if (*0x598440 == 0) {\n        *(in_RAX + 0x28) = in_XMM15;\n    }\n    else {\n        fcn.0045d100(arg1, 0, iVar4, in_R9);\n        in_RAX = fcn.0045d100(arg1, 0, iVar4, in_R9);\n        in_R8 = iVar4;\n    }\n    if (unaff_RBX == 0) {\n        if ((unaff_EDI == 0x54) || (unaff_EDI == 0x76)) {\n            fcn.004849c0(5);\n        }\n        else {\n            fcn.004871c0(arg1, iVar4, in_R8);\n        }\n        return;\n    }\n    if (unaff_EDI == 0x54) {\n        if (unaff_RBX == 0) {\n            iVar5 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = 0x4c9f20;\n            iVar4 = unaff_RBX;\n        }\n        iStack16 = arg1;\n        (**(iVar5 + 0xf8))(iVar4);\n        fcn.00485840(unaff_RBX);\n        return;\n    }\n    if (unaff_EDI != 0x70) {\n        if (unaff_RBX != 0) {\n            uVar1 = *(unaff_RBX + 0x10);\n            if (uVar1 < 0xb0c23ed4) {\n                if (uVar1 < 0x500c1abd) {\n                    if (uVar1 < 0x2ea27ffc) {\n                        if (uVar1 == 0x13ff06c5) {\n                            if (unaff_RBX == 0x494f60) {\n                                fcn.004876c0(unaff_EDI);\n                                return;\n                            }\n                        }\n                        else if ((uVar1 == 0x2ea27ffb) && (unaff_RBX == 0x4950e0)) {\n                            fcn.004879c0(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if (uVar1 == 0x382e7edf) {\n                        if (unaff_RBX == 0x494de0) {\n                            fcn.00487dc0(*(arg1 + 8), *(arg1 + 8), 0x4a6718, 6);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x500c1abc) && (unaff_RBX == 0x4a5580)) {\n                        arg1_01 = *(arg1 + 0x10);\n                        arg1_00 = *(arg1 + 8);\n                        if ((arg1_01 != 0) && ((arg1_01 & 0x60) == 0)) {\n                            arg4 = arg1_01;\n                            uVar3 = fcn.00474a20(arg1_01);\n                            *(in_RAX + 0x18) = uVar3;\n                            if (*0x598440 == 0) {\n                                *(in_RAX + 0x20) = arg1_00;\n                                iVar4 = in_RAX;\n                            }\n                            else {\n                                fcn.0045d120(arg1_01, in_RAX, in_R8, arg4);\n                                iVar4 = in_RAX;\n                            }\n                            cVar2 = fcn.00488e60();\n                            if (cVar2 != '\\0') {\n                                return;\n                            }\n                        }\n                        fcn.00489ee0(arg1_00, iVar4, 0);\n                        return;\n                    }\n                }\n                else if (uVar1 < 0x7925028d) {\n                    if (uVar1 == 0x663e425f) {\n                        if (unaff_RBX == 0x495ce0) {\n                            fcn.004877c0(0, 0x495ce0);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x7925028c) && (unaff_RBX == 0x495060)) {\n                        fcn.00487ac0(unaff_EDI);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x86318d2e) {\n                    if (unaff_RBX == 0x495ca0) {\n                        fcn.004877c0(0, 0x495ca0);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x963f9bff) {\n                    if (unaff_RBX == 0x495560) {\n                        fcn.004877c0(1, 0x495560);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xb0c23ed3) && (unaff_RBX == 0x4950a0)) {\n                    fcn.004879c0(unaff_EDI);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xd04ae83e) {\n                if (uVar1 < 0xbbad4103) {\n                    if (uVar1 == 0xb31a546d) {\n                        if (unaff_RBX == 0x495020) {\n                            fcn.00487ac0(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0xbbad4102) && (unaff_RBX == 0x495520)) {\n                        fcn.004877c0(1, 0x495520);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xbd4ad792) {\n                    if (unaff_RBX == 0x495d20) {\n                        fcn.004877c0(0, 0x495d20);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xcc06c027) {\n                    if (unaff_RBX == 0x4955a0) {\n                        fcn.004877c0(1, 0x4955a0);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xd04ae83d) && (unaff_RBX == 0x495c60)) {\n                    fcn.004877c0(0, 0x495c60);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xe0ff5cb5) {\n                if (uVar1 == 0xd5b87712) {\n                    if (unaff_RBX == 0x495be0) {\n                        fcn.004877c0(0, 0x495be0);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xe0ff5cb4) && (unaff_RBX == 0x495b60)) {\n                    fcn.00487cc0(*(arg1 + 8), *(arg1 + 8));\n                    return;\n                }\n            }\n            else if (uVar1 == 0xecd580ce) {\n                if (unaff_RBX == 0x4954e0) {\n                    fcn.004877c0(1, 0x4954e0);\n                    return;\n                }\n            }\n            else if (uVar1 == 0xeff20ea0) {\n                if (unaff_RBX == 0x495c20) {\n                    fcn.004877c0(0, 0x495c20);\n                    return;\n                }\n            }\n            else if ((uVar1 == 0xf75371fa) && (unaff_RBX == 0x4954a0)) {\n                fcn.004877c0(1, 0x4954a0);\n                return;\n            }\n        }\n        iVar4 = arg1;\n        cVar2 = fcn.00488e60();\n        if (cVar2 == '\\0') {\n            iVar5 = *0x5443e0;\n            if ((*0x5443d0 != '\\0') && (*0x5443d8 = unaff_RBX,  iVar5 = arg1,  *0x598440 != 0)) {\n                fcn.0045d180(iVar4, unaff_RBX, in_R8);\n                iVar5 = *0x5443e0;\n            }\n            *0x5443e0 = iVar5;\n            if (unaff_RBX == 0) {\n                unaff_RBX = 0;\n                arg1 = 0;\n            }\n            fcn.00489ee0(arg1, unaff_RBX, 0);\n        }\n        return;\n    }\n    iVar4 = *0x5443e0;\n    if ((*0x5443d0 != '\\0') && (*0x5443d8 = unaff_RBX,  iVar4 = arg1,  *0x598440 != 0)) {\n        fcn.0045d0e0();\n        iVar4 = *0x5443e0;\n    }\n    *0x5443e0 = iVar4;\n    if (unaff_RBX == 0) {\n        arg1 = 0;\n    }\n    fcn.004884a0(arg1);\n    return;\n}\n",
        "token_count": 2328
    },
    "0048c140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c140(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444ac0(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x598440 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045d100(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.00486a20();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 10) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444ac0(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x45444e4944414228;\n    *(iVar2 + 8 + uVar1) = 0x2958;\n    in_RAX[1] = uVar1 + 10;\n    in_RAX[2] = uVar3;\n    if (*0x598440 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045d120(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "0048c280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c280(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444ac0(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x598440 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045d100(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.00486a20();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 9) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00444ac0(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x474e495353494d28;\n    *(iVar2 + 8 + uVar1) = 0x29;\n    in_RAX[1] = uVar1 + 9;\n    in_RAX[2] = uVar3;\n    if (*0x598440 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045d120(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 489
    },
    "0048c3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048c3c0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char cVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t unaff_RBX;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uchar *puVar18;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t iVar19;\n    uint64_t unaff_RDI;\n    int64_t iVar20;\n    int64_t unaff_R14;\n    bool bVar21;\n    bool bVar22;\n    \n    while (puVar18 = *0x20,  *0x20 + -0x70 < *(unaff_R14 + 0x10) || *0x20 + -0x70 == *(unaff_R14 + 0x10)) {\ncode_r0x0048d37c:\n        *(puVar18 + 8) = in_RAX;\n        *(puVar18 + 0x10) = unaff_RBX;\n        *(puVar18 + 0x18) = arg1;\n        *(puVar18 + 0x20) = unaff_RDI;\n        *(puVar18 + 0x28) = unaff_RSI;\n        *(puVar18 + 0x30) = arg3;\n        *(puVar18 + -8) = 0x48d39f;\n        fcn.0045ad80();\n        in_RAX = *(puVar18 + 8);\n        unaff_RBX = *(puVar18 + 0x10);\n        arg1 = *(puVar18 + 0x18);\n        unaff_RDI = *(puVar18 + 0x20);\n        unaff_RSI = *(puVar18 + 0x28);\n        arg3 = *(puVar18 + 0x30);\n        *0x20 = puVar18;\n    }\n    puVar18 = *0x20 + -0xf0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + -0x48) = unaff_RSI;\n    *(*0x20 + -0x50) = arg3;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(in_RAX + 0x16) = 0;\n    uVar13 = 0;\n    uVar17 = 0;\n    do {\n        if (arg1 <= uVar13) goto code_r0x0048cc3a;\n        *(in_RAX + 0xb1) = 1;\n        uVar14 = uVar13;\ncode_r0x0048d0e8:\n        if (uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x0048d373;\n            if (*(unaff_RBX + uVar13) == '%') goto code_r0x0048c465;\n            goto code_r0x0048d0e5;\n        }\ncode_r0x0048c465:\n        *(*0x20 + -0x98) = uVar17;\n        if (uVar14 < uVar13) {\n            bVar21 = uVar13 <= arg1;\n            uVar6 = arg1;\n            arg1 = uVar13;\n            if (bVar21) {\n                if (uVar14 <= uVar13) {\n                    *(*0x20 + -0xa8) = uVar13;\n                    iVar19 = uVar13 - uVar14;\n                    uVar13 = in_RAX[1];\n                    *(*0x20 + -0x58) = iVar19 + uVar13;\n                    uVar6 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    if (in_RAX[2] < iVar19 + uVar13) {\n                        *(*0x20 + -0x60) = iVar19;\n                        *(*0x20 + -0x40) = unaff_RBX + (uVar14 & -iVar19 >> 0x3f);\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48c4f7;\n                        uVar6 = fcn.00444ac0(uVar13);\n                        iVar19 = *(*0x20 + -0x60);\n                        uVar15 = uVar13;\n                    }\n                    *(*0x20 + -0x60) = uVar15;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0xf8) = 0x48c534;\n                    fcn.0045ddc0(iVar19);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0x58);\n                    in_RAX[2] = *(*0x20 + -0x60);\n                    if (*0x598440 == 0) {\n                        *in_RAX = *(*0x20 + -0x28);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa8);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48c58a;\n                        in_RAX = fcn.0045d100(iVar19, *(*0x20 + -0x28), uVar6, uVar17);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa8);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + -0x48);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    arg3 = *(*0x20 + -0x50);\n                    uVar17 = *(*0x20 + -0x98);\n                    goto code_r0x0048c5c5;\n                }\n                goto code_r0x0048d359;\n            }\ncode_r0x0048d365:\n            *(*0x20 + -0xf8) = 0x48d373;\n            fcn.0045d4c0(arg1, uVar6);\ncode_r0x0048d373:\n            *(*0x20 + -0xf8) = 0x48d37b;\n            in_RAX = fcn.0045d480(arg1);\n            goto code_r0x0048d37c;\n        }\n        bVar22 = SBORROW8(arg1, uVar13);\n        iVar19 = arg1 - uVar13;\n        bVar21 = arg1 == uVar13;\ncode_r0x0048c5c5:\n        if (bVar21 || bVar22 != iVar19 < 0) goto code_r0x0048cc3a;\n        in_RAX[9] = 0;\n        *(in_RAX + 0x49) = 0;\n        while (uVar13 = uVar13 + 1,  uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x0048d351;\n            uVar1 = *(unaff_RBX + uVar13);\n            if (uVar1 < 0x24) {\n                if (uVar1 == 0x20) {\n                    *(in_RAX + 0x4d) = 1;\n                }\n                else {\n                    if (uVar1 != 0x23) {\ncode_r0x0048c5e5:\n                        if ((uVar1 + 0x9f < 0x1a) && (uVar17 < unaff_RSI)) {\n                            if (uVar1 == 0x76) {\n                                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                                *(in_RAX + 0x4c) = 0;\n                                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                                *(in_RAX + 0x4b) = 0;\n                            }\n                            if (unaff_RSI <= uVar17) goto code_r0x0048d346;\n                            *(*0x20 + -0xa8) = uVar13;\n                            uVar9 = *(unaff_RDI + 8 + uVar17 * 0x10);\n                            *(*0x20 + -0xf8) = 0x48c648;\n                            fcn.00489700(uVar9);\n                            uVar14 = *(*0x20 + -0x98) + 1;\n                            uVar13 = *(*0x20 + -0xa8) + 1;\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x0048c424;\n                        }\n                        break;\n                    }\n                    *(in_RAX + 0x4c) = 1;\n                }\n            }\n            else if (uVar1 == 0x2b) {\n                *(in_RAX + 0x4b) = 1;\n            }\n            else if (uVar1 == 0x2d) {\n                *(in_RAX + 0x4a) = 1;\n                *(in_RAX + 0x4e) = 0;\n            }\n            else {\n                if (uVar1 != 0x30) goto code_r0x0048c5e5;\n                *(in_RAX + 0x4e) = *(in_RAX + 0x4a) ^ 1;\n            }\n        }\n        *(*0x20 + -0xf8) = 0x48c68f;\n        uVar15 = uVar13;\n        arg3 = unaff_RSI;\n        uVar6 = fcn.0048c020(unaff_RBX, uVar13, unaff_RSI);\n        cVar12 = unaff_RBX;\n        arg1 = *(*0x20 + 0x18);\n        if (uVar17 < arg1) {\n            unaff_RSI = uVar13;\n            if (uVar17 < arg1) {\n                uVar13 = *(*0x20 + 0x10);\n                if (*(uVar13 + uVar17) != '*') goto code_r0x0048c7f2;\n                *(*0x20 + -0x70) = uVar17;\n                uVar9 = *(*0x20 + -0x48);\n                uVar6 = *(*0x20 + -0x50);\n                *(*0x20 + -0xf8) = 0x48c6f6;\n                iVar19 = fcn.0048bd20(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xb] = iVar19;\n                *(piVar10 + 9) = uVar9;\n                if (uVar9 == '\\0') {\n                    uVar17 = piVar10[1];\n                    uVar13 = uVar17 + 0xc;\n                    iVar19 = *piVar10;\n                    uVar14 = uVar17;\n                    uVar7 = piVar10[2];\n                    if (piVar10[2] < uVar13) {\n                        *(*0x20 + -0x78) = uVar6;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0xf8) = 0x48c74c;\n                        iVar19 = fcn.00444ac0(uVar17);\n                        uVar13 = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar14 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x78);\n                        uVar7 = uVar17;\n                    }\n                    *(iVar19 + uVar14) = 0x4957444142282125;\n                    *(iVar19 + 8 + uVar14) = 0x29485444;\n                    piVar10[1] = uVar13;\n                    piVar10[2] = uVar7;\n                    if (*0x598440 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48c7a5;\n                        fcn.0045d120(uVar6, uVar15, arg3, uVar14);\n                    }\n                }\n                if (piVar10[0xb] < 0) {\n                    piVar10[0xb] = -piVar10[0xb];\n                    *(piVar10 + 0x4a) = 1;\n                    *(piVar10 + 0x4e) = 0;\n                }\n                uVar7 = *(*0x20 + -0x70) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x0048c830;\n            }\ncode_r0x0048d33b:\n            uVar13 = uVar15;\n            *(*0x20 + -0xf8) = 0x48d346;\n            fcn.0045d480(arg1);\n            unaff_RBX = uVar17;\n            unaff_RDI = arg1;\ncode_r0x0048d346:\n            *(*0x20 + -0xf8) = 0x48d351;\n            arg1 = unaff_RSI;\n            fcn.0045d480(unaff_RSI);\ncode_r0x0048d351:\n            *(*0x20 + -0xf8) = 0x48d359;\n            fcn.0045d480(arg1);\ncode_r0x0048d359:\n            *(*0x20 + -0xf8) = 0x48d365;\n            arg1 = uVar13;\n            fcn.0045d540(uVar13);\n            uVar6 = uVar13;\n            goto code_r0x0048d365;\n        }\n        uVar13 = *(*0x20 + 0x10);\ncode_r0x0048c7f2:\n        if (uVar17 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            for (; uVar7 = uVar17,  uVar17 < arg1; uVar17 = uVar17 + 1) {\n                if (arg1 <= uVar17) goto code_r0x0048d330;\n                uVar1 = *(uVar13 + uVar17);\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n                if (2000000 < unaff_RSI + 1000000) {\n                    uVar15 = 0;\n                    unaff_RSI = 0;\n                    uVar7 = arg1;\n                    break;\n                }\n                unaff_RSI = (uVar1 - 0x30 & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n            }\n        }\n        else {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n        }\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xb] = unaff_RSI;\n        *(in_RAX + 9) = uVar15;\n        if ((cVar12 != '\\0') && (uVar15 != '\\0')) {\n            *(in_RAX + 0xb1) = 0;\n        }\ncode_r0x0048c830:\n        unaff_RSI = uVar7 + 1;\n        unaff_RBX = uVar13;\n        if (arg1 <= unaff_RSI) goto code_r0x0048c9e5;\n        uVar17 = uVar7;\n        if (arg1 <= uVar7) {\ncode_r0x0048d325:\n            *(*0x20 + -0xf8) = 0x48d330;\n            fcn.0045d480(arg1);\ncode_r0x0048d330:\n            *(*0x20 + -0xf8) = 0x48d33b;\n            fcn.0045d480(arg1);\n            goto code_r0x0048d33b;\n        }\n        if (*(uVar13 + uVar7) != '.') goto code_r0x0048c9e5;\n        if (cVar12 != '\\0') {\n            *(in_RAX + 0xb1) = 0;\n        }\n        arg3 = *(*0x20 + -0x48);\n        *(*0x20 + -0xf8) = 0x48c87a;\n        uVar14 = fcn.0048c020(uVar13, uVar15, arg3);\n        arg1 = *(*0x20 + 0x18);\n        uVar17 = uVar6;\n        if (uVar6 < arg1) {\n            if (arg1 <= uVar6) {\ncode_r0x0048d318:\n                *(*0x20 + -0xf8) = 0x48d325;\n                fcn.0045d480(arg1);\n                goto code_r0x0048d325;\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            if (*(unaff_RBX + uVar6) == '*') {\n                *(*0x20 + -0x80) = uVar6;\n                uVar9 = *(*0x20 + -0x48);\n                uVar6 = *(*0x20 + -0x50);\n                *(*0x20 + -0xf8) = 0x48c8d3;\n                iVar19 = fcn.0048bd20(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xc] = iVar19;\n                *(piVar10 + 0x49) = uVar9;\n                if (piVar10[0xc] < 0) {\n                    piVar10[0xc] = 0;\n                    *(piVar10 + 0x49) = 0;\n                }\n                if (*(piVar10 + 0x49) == '\\0') {\n                    uVar13 = piVar10[1];\n                    unaff_RSI = uVar13 + 0xb;\n                    iVar19 = *piVar10;\n                    uVar17 = uVar13;\n                    uVar14 = piVar10[2];\n                    if (piVar10[2] < unaff_RSI) {\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0x58) = unaff_RSI;\n                        *(*0x20 + -0x60) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48c93b;\n                        iVar19 = fcn.00444ac0(uVar13);\n                        unaff_RSI = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar17 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x88);\n                        uVar14 = uVar13;\n                    }\n                    *(iVar19 + uVar17) = 0x5250444142282125;\n                    *(iVar19 + 3 + uVar17) = 0x2943455250444142;\n                    piVar10[1] = unaff_RSI;\n                    piVar10[2] = uVar14;\n                    if (*0x598440 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48c996;\n                        fcn.0045d120(uVar6, uVar15, arg3, uVar17);\n                    }\n                }\n                uVar7 = *(*0x20 + -0x80) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x0048c9e5;\n            }\n        }\n        else {\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (uVar6 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            goto code_r0x0048d2ae;\n        }\n        uVar15 = 0;\n        unaff_RSI = 0;\n        uVar6 = uVar14;\n        uVar7 = arg1;\ncode_r0x0048d2e3:\n        cVar12 = uVar13;\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xc] = unaff_RSI;\n        *(in_RAX + 0x49) = uVar15;\n        if (uVar15 == '\\0') {\n            in_RAX[0xc] = 0;\n            *(in_RAX + 0x49) = 1;\n        }\ncode_r0x0048c9e5:\n        uVar14 = uVar6;\n        uVar17 = uVar7;\n        if (cVar12 == '\\0') {\n            arg3 = *(*0x20 + -0x48);\n            *(*0x20 + -0xf8) = 0x48ca05;\n            uVar14 = fcn.0048c020(unaff_RBX, uVar15, arg3);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar17 = uVar6;\n            unaff_RSI = uVar7;\n        }\n        *(*0x20 + -0x58) = uVar14;\n        if (arg1 <= uVar17) break;\n        if (arg1 <= uVar17) {\ncode_r0x0048d28b:\n            *(*0x20 + -0xf8) = 0x48d296;\n            uVar13 = arg1;\n            uVar6 = fcn.0045d480(arg1);\n            do {\n                unaff_RSI = (in_RAX - 0x30U & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n                uVar14 = uVar6;\n                uVar17 = uVar17 + 1;\ncode_r0x0048d2ae:\n                uVar6 = uVar14;\n                uVar7 = uVar17;\n                if (arg1 <= uVar17) goto code_r0x0048d2e3;\n                if (arg1 <= uVar17) {\n                    *(*0x20 + -0xf8) = 0x48d318;\n                    fcn.0045d480(arg1);\n                    goto code_r0x0048d318;\n                }\n                uVar1 = *(unaff_RBX + uVar17);\n                in_RAX = uVar1;\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x0048d2e3;\n            } while (unaff_RSI + 1000000 < 0x1e8481);\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n            goto code_r0x0048d2e3;\n        }\n        uVar5 = *(unaff_RBX + uVar17);\n        if (*(unaff_RBX + uVar17) < 0x80) {\n            uVar6 = 1;\n        }\n        else {\n            *(*0x20 + -0xa8) = uVar17;\n            uVar6 = arg1 - uVar17;\n            *(*0x20 + -0xf8) = 0x48ca71;\n            uVar15 = uVar6;\n            uVar5 = fcn.004637e0();\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = *(*0x20 + -0xa8);\n        }\n        uVar13 = uVar6 + uVar17;\n        *(*0x20 + -0xa8) = uVar13;\n        if (uVar5 != 0x25) {\n            if (*(in_RAX + 0xb1) == '\\0') {\n                *(*0x20 + -0xf8) = 0x48cc10;\n                fcn.0048c140(uVar6, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa8);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x0048c424;\n            }\n            uVar13 = *(*0x20 + -0x48);\n            if (uVar13 <= uVar14) {\n                *(*0x20 + -0xf8) = 0x48cbd7;\n                fcn.0048c280(uVar13, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa8);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x0048c424;\n            }\n            if (uVar5 == 0x76) {\n                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                *(in_RAX + 0x4c) = 0;\n                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                *(in_RAX + 0x4b) = 0;\n            }\n            if (uVar14 < uVar13) {\n                uVar9 = *(*(*0x20 + 0x20) + 8 + uVar14 * 0x10);\n                *(*0x20 + -0xf8) = 0x48cb9e;\n                fcn.00489700(uVar9);\n                uVar14 = *(*0x20 + -0x58) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa8);\n                goto code_r0x0048c424;\n            }\n            *(*0x20 + -0xf8) = 0x48d28b;\n            fcn.0045d480(uVar13);\n            goto code_r0x0048d28b;\n        }\n        uVar17 = in_RAX[1];\n        uVar6 = *in_RAX;\n        uVar7 = uVar6;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x48cad4;\n            uVar7 = fcn.00444ac0(uVar17);\n            puVar2 = *(*0x20 + 8);\n            puVar2[2] = uVar17;\n            if (*0x598440 == 0) {\n                *puVar2 = uVar7;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48caf3;\n                uVar7 = fcn.0045cfe0(uVar17, uVar15, arg3, unaff_RBX);\n            }\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar13 = *(*0x20 + -0xa8);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = uVar6;\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar7 + uVar17) = 0x25;\ncode_r0x0048c424:\n        unaff_RSI = *(*0x20 + -0x48);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + -0x50);\n        uVar17 = uVar14;\n    } while( true );\n    uVar17 = in_RAX[1];\n    uVar13 = uVar17 + 10;\n    uVar14 = *in_RAX;\n    uVar6 = uVar17;\n    uVar15 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x60) = uVar13;\n        *(*0x20 + -0x68) = uVar17;\n        *(*0x20 + -0xf8) = 0x48d205;\n        uVar14 = fcn.00444ac0(uVar17);\n        uVar13 = *(*0x20 + -0x60);\n        in_RAX = *(*0x20 + 8);\n        uVar6 = *(*0x20 + -0x68);\n        uVar15 = uVar17;\n    }\n    *(uVar14 + uVar6) = 0x5245564f4e282125;\n    *(uVar14 + 8 + uVar6) = 0x2942;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar15;\n    if (*0x598440 == 0) {\n        *in_RAX = uVar14;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48d25e;\n        fcn.0045d120(uVar6, 0x5245564f4e282125, arg3, unaff_RBX);\n    }\n    unaff_RSI = *(*0x20 + -0x48);\n    unaff_RDI = *(*0x20 + 0x20);\n    arg3 = *(*0x20 + -0x50);\n    uVar17 = *(*0x20 + -0x58);\ncode_r0x0048cc3a:\n    if (*(in_RAX + 0x16) != '\\0') {\n        return;\n    }\n    if (unaff_RSI <= uVar17) {\n        return;\n    }\n    in_RAX[9] = 0;\n    *(in_RAX + 0x49) = 0;\n    uVar6 = in_RAX[1];\n    uVar13 = uVar6 + 9;\n    unaff_RBX = *in_RAX;\n    uVar15 = uVar6;\n    uVar14 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x58) = uVar13;\n        *(*0x20 + -0x60) = uVar6;\n        *(*0x20 + -0x98) = uVar17;\n        *(*0x20 + -0xf8) = 0x48cc9d;\n        unaff_RBX = fcn.00444ac0(uVar6);\n        uVar13 = *(*0x20 + -0x58);\n        unaff_RSI = *(*0x20 + -0x48);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + -0x50);\n        uVar17 = *(*0x20 + -0x98);\n        in_RAX = *(*0x20 + 8);\n        uVar15 = *(*0x20 + -0x60);\n        uVar14 = uVar6;\n    }\n    *(unaff_RBX + uVar15) = 0x4152545845282125;\n    *(unaff_RBX + 8 + uVar15) = 0x20;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar14;\n    if (*0x598440 == 0) {\n        *in_RAX = unaff_RBX;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48cd0f;\n        in_RAX = fcn.0045d120(unaff_RDI, uVar13, arg3, uVar17);\n    }\n    if (uVar17 <= unaff_RSI) {\n        iVar19 = unaff_RSI - uVar17;\n        uVar13 = uVar17 - arg3 >> 0x3f & uVar17 << 4;\n        piVar10 = unaff_RDI + uVar13;\n        if (0 < iVar19) {\n            *(*0x20 + -0x58) = iVar19;\n            arg3 = 0;\n            while( true ) {\n                *(*0x20 + -0xa0) = arg3;\n                *(*0x20 + -0x20) = piVar10;\n                iVar20 = *piVar10;\n                *(*0x20 + -0x90) = iVar20;\n                uVar13 = piVar10[1];\n                *(*0x20 + -0x30) = uVar13;\n                if (0 < arg3) {\n                    uVar14 = in_RAX[1];\n                    uVar17 = uVar14 + 2;\n                    uVar6 = *in_RAX;\n                    uVar7 = in_RAX[2];\n                    uVar15 = uVar14;\n                    if (in_RAX[2] < uVar17) {\n                        *(*0x20 + -0x60) = uVar14;\n                        *(*0x20 + -0x68) = uVar17;\n                        *(*0x20 + -0xf8) = 0x48ce13;\n                        uVar6 = fcn.00444ac0(uVar14);\n                        piVar10 = *(*0x20 + -0x20);\n                        iVar19 = *(*0x20 + -0x58);\n                        iVar20 = *(*0x20 + -0x90);\n                        uVar13 = *(*0x20 + -0x30);\n                        uVar15 = *(*0x20 + -0x60);\n                        uVar17 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa0);\n                        uVar7 = uVar14;\n                    }\n                    *(uVar6 + uVar15) = 0x202c;\n                    in_RAX[1] = uVar17;\n                    in_RAX[2] = uVar7;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48ce78;\n                        in_RAX = fcn.0045d120(arg3, piVar10, iVar20, uVar13);\n                    }\n                }\n                if (iVar20 == 0) {\n                    uVar17 = in_RAX[1];\n                    uVar13 = uVar17 + 5;\n                    uVar14 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    uVar6 = uVar17;\n                    if (in_RAX[2] < uVar13) {\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48cec5;\n                        uVar14 = fcn.00444ac0(uVar17);\n                        piVar10 = *(*0x20 + -0x20);\n                        iVar19 = *(*0x20 + -0x58);\n                        uVar6 = *(*0x20 + -0x60);\n                        uVar13 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa0);\n                        uVar15 = uVar17;\n                    }\n                    *(uVar14 + uVar6) = 0x6c696e3c;\n                    *(uVar14 + 4 + uVar6) = 0x3e;\n                    in_RAX[1] = uVar13;\n                    in_RAX[2] = uVar15;\n                    if (*0x598440 == 0) {\n                        *in_RAX = uVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48cf27;\n                        in_RAX = fcn.0045d120(arg3, piVar10, uVar6, uVar13);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar20;\n                    *(*0x20 + -0x10) = uVar13;\n                    iVar19 = *(*0x20 + -0x18);\n                    if (iVar19 == 0) {\n                        iVar20 = 0;\n                        iVar19 = 0;\n                    }\n                    else {\n                        iVar20 = 0x4c9f20;\n                    }\n                    pcVar3 = *(iVar20 + 0xf8);\n                    *(*0x20 + -0xf8) = 0x48cf62;\n                    uVar8 = (*pcVar3)();\n                    *(*0x20 + -0xb0) = iVar19;\n                    puVar4 = *(*0x20 + 8);\n                    uVar17 = puVar4[1];\n                    *(*0x20 + -0x60) = uVar17;\n                    *(*0x20 + -0x68) = uVar17 + iVar19;\n                    uVar9 = *puVar4;\n                    uVar14 = puVar4[2];\n                    if (puVar4[2] < uVar17 + iVar19) {\n                        *(*0x20 + -0x38) = uVar8;\n                        *(*0x20 + -0xf8) = 0x48cfad;\n                        uVar9 = fcn.00444ac0(uVar17);\n                        iVar19 = *(*0x20 + -0xb0);\n                        uVar14 = uVar17;\n                    }\n                    *(*0x20 + -0x70) = uVar14;\n                    *(*0x20 + -0x28) = uVar9;\n                    *(*0x20 + -0xf8) = 0x48cfea;\n                    fcn.0045ddc0(iVar19);\n                    iVar19 = *(*0x20 + -0x68);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[1] = iVar19;\n                    uVar17 = *(*0x20 + -0x70);\n                    piVar10[2] = uVar17;\n                    uVar14 = *(*0x20 + -0x60);\n                    iVar20 = *(*0x20 + -0xb0);\n                    if (*0x598440 == 0) {\n                        iVar16 = *(*0x20 + -0x28);\n                        *piVar10 = iVar16;\n                        uVar6 = uVar14;\n                    }\n                    else {\n                        iVar16 = *(*0x20 + -0x28);\n                        *(*0x20 + -0xf8) = 0x48d048;\n                        piVar10 = fcn.0045d120(iVar19, uVar17, uVar9, uVar13);\n                        uVar6 = uVar17;\n                    }\n                    iVar11 = iVar16;\n                    if (uVar17 < iVar20 + uVar14 + 1) {\n                        *(*0x20 + -0xf8) = 0x48d05d;\n                        iVar11 = fcn.00444ac0(iVar19);\n                        piVar10 = *(*0x20 + 8);\n                        piVar10[2] = iVar19;\n                        if (*0x598440 == 0) {\n                            *piVar10 = iVar11;\n                            iVar19 = iVar16;\n                        }\n                        else {\n                            *(*0x20 + -0xf8) = 0x48d07c;\n                            iVar11 = fcn.0045cfe0(iVar19, uVar6, uVar9, uVar13);\n                            iVar19 = iVar16;\n                        }\n                    }\n                    piVar10[1] = iVar19 + 1;\n                    *(iVar11 + iVar19) = 0x3d;\n                    *(*0x20 + -0xf8) = 0x48d0a8;\n                    fcn.00489700(*(*0x20 + -0x30));\n                    in_RAX = *(*0x20 + 8);\n                    arg3 = *(*0x20 + -0xa0);\n                    piVar10 = *(*0x20 + -0x20);\n                    iVar19 = *(*0x20 + -0x58);\n                }\n                arg3 = arg3 + 1;\n                if (iVar19 <= arg3) break;\n                piVar10 = piVar10 + 2;\n            }\n        }\n        uVar17 = in_RAX[1];\n        uVar14 = *in_RAX;\n        uVar6 = uVar14;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x48cd75;\n            uVar6 = fcn.00444ac0(uVar17);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar17;\n            if (*0x598440 == 0) {\n                *in_RAX = uVar6;\n                uVar17 = uVar14;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48cd94;\n                uVar6 = fcn.0045cfe0(uVar17, piVar10, arg3, uVar13);\n                uVar17 = uVar14;\n            }\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar6 + uVar17) = 0x29;\n        return;\n    }\n    *(*0x20 + -0xf8) = 0x48d0e5;\n    arg1 = unaff_RSI;\n    in_RAX = fcn.0045d540(unaff_RSI);\ncode_r0x0048d0e5:\n    uVar13 = uVar13 + 1;\n    goto code_r0x0048d0e8;\n}\n",
        "token_count": 9844
    },
    "004132a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004132a0(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x4132eb;\n            arg1 = fcn.0040c4a0(0x59a0e0);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x413325;\n                    fcn.004133a0(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x413353;\n                    fcn.00432f60();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x41335b;\n                fcn.0045d480(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x413365;\n            in_RAX = fcn.0045d4e0(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x413375;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 664
    },
    "00430aa0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00430aa0(void)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00430aa0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x1c) = 0;\n        *(*0x20 + -0x18) = in_XMM15;\n        for (iVar1 = 0; iVar1 < 5; iVar1 = iVar1 + 1) {\n            *(*0x20 + iVar1 * 4 + -0x1c) = 0xffffffff;\n        }\n        uVar2 = 0;\n        do {\n            if (uVar2 < 9) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = uVar2 + 7 >> 4;\n            }\n            if (4 < uVar3) {\n                return;\n            }\n            if (uVar2 < 9) {\n                uVar4 = 0x50;\n            }\n            else {\n                uVar4 = uVar2 + 0x48;\n            }\n            if (uVar4 < 0x8000) {\n                if (uVar4 < 0x3f9) {\n                    uVar4 = uVar4 + 7 >> 3;\n                    if (0x80 < uVar4) goto code_r0x00430cd2;\n                    uVar4 = *(uVar4 + 0x52f1a0);\n                    if (0x43 < uVar4) goto code_r0x00430cc5;\n                    uVar4 = *(uVar4 * 2 + 0x52f2e0);\n                }\n                else {\n                    uVar4 = uVar4 - 0x381 >> 7;\n                    if (0xf8 < uVar4) goto code_r0x00430cb7;\n                    if (0x43 < \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                               [uVar4]) goto code_r0x00430caa;\n                    uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [uVar4] * 2 + 0x52f2e0);\n                }\n            }\n            else if (uVar4 <= uVar4 + 0x2000) {\n                uVar4 = uVar4 + 0x1fff & 0xffffffffffffe000;\n            }\n            if (*(*0x20 + uVar3 * 4 + -0x1c) < 0) {\n                *(*0x20 + uVar3 * 4 + -0x1c) = uVar4;\n            }\n            else if (uVar4 != *(*0x20 + uVar3 * 4 + -0x1c)) goto code_r0x00430c23;\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00430ce0;\ncode_r0x00430c23:\n    *(*0x20 + -0x30) = uVar3;\n    *(*0x20 + -0x38) = uVar4;\n    *(*0x20 + -0x28) = uVar2;\n    *(*0x20 + -0x50) = 0x430c37;\n    fcn.004346e0();\n    *(*0x20 + -0x50) = 0x430c48;\n    fcn.00434fe0();\n    *(*0x20 + -0x50) = 0x430c52;\n    fcn.00434ce0();\n    *(*0x20 + -0x50) = 0x430c65;\n    fcn.00434fe0();\n    *(*0x20 + -0x50) = 0x430c6f;\n    fcn.00434ce0();\n    *(*0x20 + -0x50) = 0x430c85;\n    fcn.00434fe0();\n    *(*0x20 + -0x50) = 0x430c8f;\n    fcn.00434ce0();\n    *(*0x20 + -0x50) = 0x430c94;\n    fcn.00434940();\n    *(*0x20 + -0x50) = 0x430c99;\n    fcn.00434760();\n    *(*0x20 + -0x50) = 0x430caa;\n    fcn.00432f60();\ncode_r0x00430caa:\n    *(*0x20 + -0x50) = 0x430cb7;\n    fcn.0045d480(0x44);\ncode_r0x00430cb7:\n    *(*0x20 + -0x50) = 0x430cc5;\n    fcn.0045d4a0(0xf9);\ncode_r0x00430cc5:\n    *(*0x20 + -0x50) = 0x430cd2;\n    fcn.0045d480(0x44);\ncode_r0x00430cd2:\n    *(*0x20 + -0x50) = 0x430cdf;\n    fcn.0045d4a0(0x81);\ncode_r0x00430ce0:\n    *(puVar5 + -8) = 0x430ce5;\n    fcn.0045ad80();\n    *0x20 = puVar5;\n    goto code_r0x00430aa0;\n}\n",
        "token_count": 1452
    },
    "004349e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434acb)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004349e0(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00434fe0();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00434fe0();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x4c79d8) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x4c7998 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x4c7998)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x4c7978;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x4c7998)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x4c7990;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x4c7998;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x4c7998 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x4c7998;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x4c7998;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.004347c0(0xe);\n    return;\n}\n",
        "token_count": 1135
    },
    "00448ec0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00448ec0(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x00448f99;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x52f1a0);\n                    if (0x43 < uVar3) goto code_r0x00449017;\n                    in_RAX = *(uVar3 * 2 + 0x52f2e0);\ncode_r0x00448f99:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x448faa;\n                    uVar1 = fcn.0040b760(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x448fd0;\n                        fcn.0045db00(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x52f2e0);\n                        goto code_r0x00448f99;\n                    }\n                    *(*0x20 + -0x50) = 0x44900a;\n                    fcn.0045d480(0x44);\n                }\n                *(*0x20 + -0x50) = 0x449017;\n                fcn.0045d4a0(0xf9);\ncode_r0x00449017:\n                *(*0x20 + -0x50) = 0x449025;\n                fcn.0045d480(0x44);\n            }\n            *(*0x20 + -0x50) = 0x449032;\n            in_RAX = fcn.0045d4a0(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x44903d;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1088
    },
    "00449060": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00449060(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x00449159;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x52f1a0);\n                        if (0x43 < uVar1) goto code_r0x004491e5;\n                        uVar1 = *(uVar1 * 2 + 0x52f2e0);\ncode_r0x00449159:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x44916a;\n                        uVar2 = fcn.0040b760(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x449195;\n                            fcn.0045db00(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x52f2e0);\n                            goto code_r0x00449159;\n                        }\n                        *(*0x20 + -0x58) = 0x4491d3;\n                        fcn.0045d480(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x4491e5;\n                    fcn.0045d4a0(0xf9);\ncode_r0x004491e5:\n                    *(*0x20 + -0x58) = 0x4491f2;\n                    fcn.0045d480(0x44);\n                }\n                *(*0x20 + -0x58) = 0x4491ff;\n                fcn.0045d4a0(0x81);\n            }\n            *(*0x20 + -0x58) = 0x449210;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44921b;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1150
    },
    "0044bba0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044bba0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044bbf5;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044bbf5:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044bc48;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044bc48:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045d540(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045d480(unaff_RBX);\n                    }\n                    fcn.0045d480(unaff_RBX);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045d540(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045d480(unaff_RBX);\n    }\n    fcn.0045d480(unaff_RBX);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1017
    },
    "00468ac0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.00468ac0(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uint64_t in_R8;\n    uchar uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar10 = in_R9;\n        cVar1 = in_R8;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                uVar2 = unaff_RBX + 1;\n                iVar7 = in_RAX;\n                uVar5 = unaff_RBX;\n                if (arg1 < uVar2) {\n                    *(*0x20 + -0x80) = 0x468c2f;\n                    iVar7 = fcn.00444ac0(unaff_RBX);\n                    uVar2 = in_RAX + 1;\n                    uVar5 = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                uVar10 = unaff_EDI;\n                *(iVar7 + uVar5) = 0x5c;\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x80) = 0x468c6c;\n                    iVar7 = fcn.00444ac0(uVar2);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar10 = *(*0x20 + 0x20);\n                }\n                *(iVar7 + uVar2) = uVar10;\n                return iVar7;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x468b3d;\n                    cVar1 = fcn.004693e0();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x468b86;\n                        in_RAX = fcn.00444ac0(unaff_RBX);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(in_RAX + unaff_RBX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x00468d63;\n            }\n            *(*0x20 + 0x26) = uVar10;\n            *(*0x20 + -0x80) = 0x468bb9;\n            cVar1 = fcn.004693e0();\n            if (cVar1 != '\\0') goto code_r0x00468c8d;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x00468d4b;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x00468d4b;\n            unaff_RBX = 0;\n            uVar2 = *0x53d238;\n            while (uVar5 = uVar2,  unaff_RBX < uVar5) {\n                iVar7 = uVar5 - unaff_RBX >> 1;\n                in_R9 = iVar7 + unaff_RBX;\n                arg1 = *0x53d238;\n                in_R8 = uVar5;\n                if (*0x53d238 <= in_R9) goto code_r0x00469279;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x53d230 + in_R9 * 2) < unaff_EDI) {\n                    unaff_RBX = iVar7 + unaff_RBX + 1;\n                    uVar2 = uVar5;\n                    in_R8 = uVar5;\n                }\n            }\n            if (*0x53d238 <= unaff_RBX) goto code_r0x00468d4b;\n            if (unaff_RBX < *0x53d238) {\n                if (*(*0x53d230 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x00468c8d:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x468ca6;\n                    uVar2 = fcn.004639a0(4);\n                    if (uVar2 < 5) {\n                        uVar5 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x18) = uVar5 + uVar2;\n                        if (*(*0x20 + 0x18) < uVar5 + uVar2) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x468cf1;\n                            uVar3 = fcn.00444ac0(uVar5);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            uVar5 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x20) = uVar5;\n                        *(*0x20 + -0x80) = 0x468d25;\n                        fcn.0045ddc0(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x468d4b;\n                    fcn.0045d4c0(uVar2, 4);\n                }\ncode_r0x00468d4b:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x00468d63:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x468e28;\n                            in_RAX = fcn.00444ac0(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x468de8;\n                            in_RAX = fcn.00444ac0(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x468dac;\n                            in_RAX = fcn.00444ac0(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x18) = unaff_RBX + 2;\n                                *(*0x20 + -0x80) = 0x4690a8;\n                                in_RAX = fcn.00444ac0(unaff_RBX);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x4690e5;\n                            in_RAX = fcn.00444ac0(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x469068;\n                            in_RAX = fcn.00444ac0(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x469028;\n                            in_RAX = fcn.00444ac0(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if (unaff_EDI < 0x20) {\n                    uVar2 = unaff_RBX + 2;\n                    uVar5 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x468f3f;\n                        in_RAX = fcn.00444ac0(unaff_RBX);\n                        uVar5 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar5) = 0x785c;\n                    uVar8 = uVar5 + 3;\n                    uVar10 = *((unaff_EDI >> 4) + 0x4a8168);\n                    iVar7 = in_RAX;\n                    if (arg1 < uVar8) {\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x468f96;\n                        iVar7 = fcn.00444ac0(uVar2);\n                        uVar8 = in_RAX + 1;\n                        uVar5 = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar10 = *(*0x20 + -0x31);\n                        arg1 = uVar2;\n                    }\n                    *(uVar5 + 2 + iVar7) = uVar10;\n                    uVar10 = *((unaff_EDI & 0xf) + 0x4a8168);\n                    if (arg1 < uVar8 + 1) {\n                        *(*0x20 + -0x18) = uVar8;\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x468fed;\n                        iVar7 = fcn.00444ac0(uVar8);\n                        uVar8 = *(*0x20 + -0x18);\n                        uVar10 = *(*0x20 + -0x31);\n                    }\n                    *(iVar7 + uVar8) = uVar10;\n                }\n                else {\n                    if (unaff_EDI < 0x110000) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            uVar5 = unaff_RBX;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x18) = uVar2;\n                                *(*0x20 + -0x80) = 0x468ef5;\n                                in_RAX = fcn.00444ac0(unaff_RBX);\n                                uVar5 = *(*0x20 + 0x10);\n                                uVar2 = *(*0x20 + -0x18);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                arg1 = unaff_RBX;\n                            }\n                            *(in_RAX + uVar5) = 0x555c;\n                            for (iVar7 = 0x1c; -1 < iVar7; iVar7 = iVar7 + -4) {\n                                uVar10 = *((unaff_EDI >> (iVar7 & 0x1f) & 0xf) + 0x4a8168);\n                                iVar6 = in_RAX;\n                                uVar5 = uVar2;\n                                uVar8 = uVar2 + 1;\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x20) = uVar2;\n                                    *(*0x20 + -0x18) = iVar7;\n                                    *(*0x20 + -0x31) = uVar10;\n                                    *(*0x20 + -0x80) = 0x469165;\n                                    iVar6 = fcn.00444ac0(uVar2);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    uVar5 = *(*0x20 + -0x20);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar10 = *(*0x20 + -0x31);\n                                    arg1 = uVar2;\n                                    uVar8 = in_RAX + 1;\n                                }\n                                uVar2 = uVar8;\n                                *(iVar6 + uVar5) = uVar10;\n                                in_RAX = iVar6;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    uVar5 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x468eb1;\n                        in_RAX = fcn.00444ac0(unaff_RBX);\n                        uVar5 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar5) = 0x755c;\n                    iVar7 = in_RAX;\n                    for (iVar6 = 0xc; -1 < iVar6; iVar6 = iVar6 + -4) {\n                        uVar10 = *((unaff_EDI >> (iVar6 & 0x1f) & 0xf) + 0x4a8168);\n                        iVar4 = iVar7;\n                        uVar5 = uVar2;\n                        uVar8 = uVar2 + 1;\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x20) = uVar2;\n                            *(*0x20 + -0x18) = iVar6;\n                            *(*0x20 + -0x31) = uVar10;\n                            *(*0x20 + -0x80) = 0x4691f3;\n                            iVar4 = fcn.00444ac0(uVar2);\n                            iVar6 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x20);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar10 = *(*0x20 + -0x31);\n                            arg1 = uVar2;\n                            uVar8 = iVar7 + 1;\n                        }\n                        uVar2 = uVar8;\n                        *(iVar4 + uVar5) = uVar10;\n                        iVar7 = iVar4;\n                    }\n                }\n                return iVar7;\n            }\n            *(*0x20 + -0x80) = 0x469279;\n            arg1 = fcn.0045d480(*0x53d238);\ncode_r0x00469279:\n            uVar10 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x469285;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_EDI;\n        puVar9[0x24] = unaff_SIL;\n        puVar9[0x25] = cVar1;\n        puVar9[0x26] = uVar10;\n        *(puVar9 + -8) = 0x4692ad;\n        fcn.0045ad80();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_EDI = *(puVar9 + 0x20);\n        unaff_SIL = puVar9[0x24];\n        in_R8 = puVar9[0x25];\n        in_R9 = puVar9[0x26];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4538
    },
    "00406bc0": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00406bc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x544470 != NULL) {\n                if (*0x544478 < 1) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x544470;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x00406c2e:\n                    iVar2 = iVar2 + 1;\n                    if (*0x544478 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x406cb3;\n                        fcn.0045d480(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x00406c2e;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x406cc5;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x406cd5;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 761
    },
    "0041fb20": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fb20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x41fb58;\n                iVar2 = fcn.00421fe0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0041fc0b:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41fc5b;\n                fcn.0045d480(0x3f);\ncode_r0x0041fc5b:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x41fc6c;\n                fcn.00432f60();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x41fbd9;\n                            iVar2 = fcn.00421fe0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0041fc0b;\n                    }\n                    goto code_r0x0041fc5b;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x41fc79;\n            in_RAX = fcn.0045d480(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41fc8e;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1125
    },
    "0041fcc0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.0041fcc0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x41fd05;\n            uVar3 = fcn.0041fcc0(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x41fd65;\n                uVar3 = fcn.0041fcc0((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x41fdac;\n            in_RAX = fcn.0045d480(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41fdc5;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 699
    },
    "00429a40": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00429a40(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x598300,  iVar4 = *0x598308,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (; iVar4 != 0; iVar4 = *(iVar4 + 8)) {\n        piVar2 = fcn.00429500(uVar1);\n        uVar3 = uVar1 % 3;\n        *piVar2 = *piVar2 + piVar2[uVar3 * 4 + 4];\n        piVar2[1] = piVar2[1] + piVar2[uVar3 * 4 + 5];\n        piVar2[2] = piVar2[2] + piVar2[uVar3 * 4 + 6];\n        piVar2[3] = piVar2[3] + piVar2[uVar3 * 4 + 7];\n        piVar2[uVar3 * 4 + 4] = 0;\n        piVar2[uVar3 * 4 + 5] = 0;\n        piVar2[uVar3 * 4 + 6] = 0;\n        piVar2[uVar3 * 4 + 7] = 0;\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00429b20": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00429b20(void)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x429b6f;\n            fcn.0045d6f4();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RBX = *0x20 + -0x120;\n            *(*0x20 + -0x170) = 0x429b8a;\n            uVar2 = fcn.00453260(0x20);\n            *(*0x20 + -0x130) = uVar2;\n            *(*0x20 + -0x170) = 0x429b9d;\n            fcn.0040a080();\n            if (*(*0x20 + -0x130) < 0x21) {\n                *(*0x20 + -0x170) = 0x429bd1;\n                uVar2 = fcn.004295c0(*0x20 + -0x120);\n                *(*0x20 + -0x128) = uVar2;\n                *(*0x20 + -0x134) = *0x598300;\n                *(*0x20 + -0x170) = 0x429be5;\n                iVar3 = fcn.00429500();\n                iVar4 = (*(*0x20 + -0x134) + ((*(*0x20 + -0x134) + 2U) / 3) * -3 + 2) * 0x20;\n                piVar1 = iVar3 + 0x20 + iVar4;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar3 + 0x30 + iVar4;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x170) = 0x429c2b;\n                fcn.0040a2a0();\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x429ce0;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + -0x128);\n                *(*0x20 + -0x168) = *0x20 + -0x20;\n                *(*0x20 + -0x170) = 0x429c7d;\n                fcn.0045ac40();\n                return;\n            }\n            *(*0x20 + -0x170) = 0x429cab;\n            in_RAX = fcn.0045d4c0(*(*0x20 + -0x130), 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x429cbb;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1000
    },
    "00429d20": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00429d20(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar2 = *0x598300;\n    iVar3 = fcn.00429500();\n    iVar4 = (iVar2 + ((iVar2 + 1U) / 3) * -3 + 1) * 0x20;\n    piVar1 = iVar3 + 0x28 + iVar4;\n    *piVar1 = *piVar1 + 1;\n    piVar1 = iVar3 + 0x38 + iVar4;\n    *piVar1 = *piVar1 + unaff_RBX;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 248
    },
    "0042aac0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042aac0(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42ab25;\n                arg1_00 = fcn.0042a8a0();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042ab6e:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042abaa;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042abaa:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042acd4:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042aed1;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42adcd;\n                                        piVar1 = fcn.0040c4a0(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42ae0e;\n                                                    fcn.0045ddc0(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42ae91;\n                                                        fcn.0045ddc0(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042aeab;\n                                                }\ncode_r0x0042aef2:\n                                                *(*0x20 + -0x68) = 0x42aefa;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045d540(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42af05;\n                                            fcn.0045d500(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42af0d;\n                                        fcn.0045d500(arg1_00, arg2);\ncode_r0x0042af0d:\n                                        *(*0x20 + -0x68) = 0x42af18;\n                                        fcn.0045d540(arg1_01);\ncode_r0x0042af18:\n                                        *(*0x20 + -0x68) = 0x42af25;\n                                        fcn.0045d540(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042af18;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042af0d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42ad85;\n                                            fcn.0045ddc0(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042aeab:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42aef2;\n                                            fcn.0045d480(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042aef2;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042aed1;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42af2d;\n                                    fcn.0045d500(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42af35;\n                                fcn.0045d480(ppiVar2);\n                                goto code_r0x0042af35;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042af52;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042af4a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042af3f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42ac5e;\n                                    fcn.0045ddc0(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] - 1;\n                                if (arg2 < ppiVar2) goto code_r0x0042af3a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042aed1:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042acd4;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042aed1;\n                            }\ncode_r0x0042af35:\n                            *(*0x20 + -0x68) = 0x42af3a;\n                            fcn.0045d480(ppiVar2);\ncode_r0x0042af3a:\n                            *(*0x20 + -0x68) = 0x42af3f;\n                            fcn.0045d500(ppiVar2, arg2);\ncode_r0x0042af3f:\n                            *(*0x20 + -0x68) = 0x42af4a;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045d540(unaff_R13);\ncode_r0x0042af4a:\n                            *(*0x20 + -0x68) = 0x42af52;\n                            fcn.0045d540(ppiVar2);\ncode_r0x0042af52:\n                            *(*0x20 + -0x68) = 0x42af57;\n                            fcn.0045d480(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42af5f;\n                        fcn.0045d480(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42af65;\n                    fcn.0045d480(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042ab6e;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42af6d;\n                fcn.0045d480(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42af72;\n            fcn.004346e0();\n            *(*0x20 + -0x68) = 0x42af85;\n            fcn.00434fe0();\n            *(*0x20 + -0x68) = 0x42af8f;\n            fcn.00434e40();\n            *(*0x20 + -0x68) = 0x42afa5;\n            fcn.00434fe0();\n            *(*0x20 + -0x68) = 0x42afaf;\n            fcn.00434e40();\n            *(*0x20 + -0x68) = 0x42afc5;\n            fcn.00434fe0();\n            *(*0x20 + -0x68) = 0x42afca;\n            fcn.00434760();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42afdb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42aff0;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3762
    },
    "00440f60": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00440f60(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x26f8) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x26d8;\n            *(*0x20 + -0x28) = 0x440fa5;\n            fcn.0040a080();\n            if ((*(*0x20 + 8))[0x9be] != 0) goto code_r0x00441001;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x5444f8) {\n                    puVar1 = *0x5444f0 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x00441001:\n                    *(*0x20 + -0x28) = 0x44100b;\n                    fcn.0040a2a0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x441027;\n                fcn.0045d480(*0x5444f8);\n            }\n            *(*0x20 + -0x28) = 0x44102c;\n            in_RAX = fcn.00430920();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x441037;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 608
    },
    "00441060": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00441060(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x5f4) != *(in_RAX + 0x5f4));\n            if ((*(in_RAX + 0x5f4) == *(in_RAX + 0x5f0)) && (*(in_RAX + 0xdf8) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = 0x4410b3;\n                fcn.00440f60();\n                piVar2 = *(*0x20 + 8);\n                iVar3 = *piVar2;\n                iVar5 = ((iVar3 >> 0x1f) >> 0x1b) + iVar3 >> 5;\n                uVar6 = iVar3 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    if (iVar5 < *0x5444b8) {\n                        puVar1 = *0x5444b0 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar2 + 2) = *0x544d50;\n                        LOCK();\n                        iVar3 = *0x544d58;\n                        *0x544d50 = piVar2;\n                        *0x544d58 = *0x544d58 + 1;\n                        return iVar3;\n                    }\n                    *(*0x20 + -0x20) = 0x441145;\n                    fcn.0045d480(*0x5444b8);\n                }\n                *(*0x20 + -0x20) = 0x44114a;\n                fcn.00430920();\n            }\n            *(*0x20 + -0x20) = 0x44115b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x441166;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 682
    },
    "00441180": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00441180(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    piVar4 = *0x544d50;\n    if (*0x544d50 == NULL) {\n        return;\n    }\n    iVar2 = **0x544d50;\n    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n    uVar5 = iVar2 + iVar6 * -0x20;\n    if (-1 < uVar5) {\n        arg1 = *0x5444f8;\n        if (iVar6 < *0x5444f8) {\n            puVar1 = *0x5444f0 + iVar6 * 4;\n            LOCK();\n            *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n            iVar2 = *piVar4;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            arg1 = *0x5444b8;\n            if (-1 < uVar5) {\n                if (iVar6 < *0x5444b8) {\n                    puVar1 = *0x5444b0 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                    LOCK();\n                    *0x544d50 = *(piVar4 + 2);\n                    *0x544d58 = *0x544d58 + -1;\n                    return;\n                }\n                fcn.0045d480(*0x5444b8);\n            }\n            fcn.00430920();\n        }\n        fcn.0045d480(arg1);\n    }\n    fcn.00430920();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 504
    },
    "00402ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402ec0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x402f0c;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x402f2a;\n            fcn.00454320();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402f45;\n            fcn.00448440(0x1c);\n            *(*0x20 + -0x38) = 0x402f4a;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0x38) = 0x402f59;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x402f6e;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402fa0(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x402fef;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40300d;\n            fcn.00454320();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x403026;\n            fcn.00448440(0x1c);\n            *(*0x20 + -0x38) = 0x40302b;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0x38) = 0x40303a;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40304f;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 580
    },
    "004031e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.004031e0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00432f60();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.00458060();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x350) == 0) break;\n        fcn.0045ac40();\n    }\n    *(iVar2 + 0x350) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045cbc0();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x350);\n    *(iVar2 + 0x350) = 0;\n    fcn.004580a0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 365
    },
    "00404e40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e40(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00411ec0(arg1);\n    fcn.0045ddc0(*in_RAX);\n    return;\n}\n",
        "token_count": 108
    },
    "00404ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ec0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00411ec0(*(unaff_RBX + 0x18));\n    fcn.0045ddc0(*in_RAX);\n    return;\n}\n",
        "token_count": 125
    },
    "004098a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.004098a0(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040b760(1, *in_RAX);\n    fcn.00410c20(unaff_RBX);\n    return in_RAX;\n}\n",
        "token_count": 120
    },
    "00409b80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00409b80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040b760(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045ddc0(*in_RAX);\n    return in_RAX;\n}\n",
        "token_count": 153
    },
    "00410f80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00410f80(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x411085;\n                            fcn.00410f60();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x410fe5;\n                    fcn.00410f60();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x4110c7;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x4110d2;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 999
    },
    "00411600": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00411600(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.00411520(arg1);\n    return;\n}\n",
        "token_count": 97
    },
    "00413a20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00413a20(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = fcn.00423740(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.004133a0(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00419240": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00419240(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x419265;\n            fcn.00436380();\n            *(*0x20 + -0x38) = 0x419273;\n            fcn.0040a080();\n            *(*0x20 + -0x20) = *0x56a888;\n            *(*0x20 + -0x10) = *0x56a880;\n            *(*0x20 + -0x38) = 0x419299;\n            fcn.0040a2a0();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x598d00 = 0;\n                    *0x598d90 = *0x598ab0;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x4192db;\n                fcn.0045db00();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x419338;\n            fcn.0045d4a0(0x40);\n        }\n        *(puVar4 + -8) = 0x41933e;\n        fcn.0045f460();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 547
    },
    "00419ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00419ee0(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return;\n    }\n    fcn.0041bc60(arg1 + unaff_RSI * 0x1000);\n    return;\n}\n",
        "token_count": 142
    },
    "0041aa00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0041aa00(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar2 = *0x598da8;\n    iVar1 = *0x598da0;\n    if (*0x598204 == 0) {\n        fcn.0040a2a0();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x598da8 != 0) {\n        *(*0x598da8 + 0xa0) = unaff_R14;\n        iVar3 = *0x598da0;\n    }\n    *0x598da0 = iVar3;\n    if (*0x598ad0 < 1) {\n        *0x598da8 = unaff_R14;\n        fcn.00435860(0xb);\n        return 1;\n    }\n    *0x598da0 = iVar1;\n    *0x598da8 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040a2a0();\n    return 0;\n}\n",
        "token_count": 341
    },
    "0041e960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e960(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n    }\n    iVar2 = *(in_RAX + 0x100e8);\n    uVar1 = fcn.0042b020();\n    if (uVar1 + 0x800000000000 < iVar2 + 0x800000000000U) {\n        iVar2 = iVar2 - uVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        return uVar1;\n    }\n    fcn.0042b0a0();\n    return uVar1 & 0xffffffffffc00000;\n}\n",
        "token_count": 220
    },
    "00424900": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00424900(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x424997;\n            fcn.004346e0();\n            *(*0x20 + -0x38) = 0x4249a8;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x4249b2;\n            fcn.00434ce0();\n            *(*0x20 + -0x38) = 0x4249c5;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x4249cf;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x4249e5;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x4249ef;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424a05;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x424a0f;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424a25;\n            fcn.00434fe0();\n            *(*0x20 + -0x38) = 0x424a2f;\n            fcn.00434fa0();\n            *(*0x20 + -0x38) = 0x424a34;\n            fcn.00434940();\n            *(*0x20 + -0x38) = 0x424a39;\n            fcn.00434760();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x424a4a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x424a5a;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 944
    },
    "00429360": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429360(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004289c0(arg1);\n    fcn.00428b00(arg1);\n    return;\n}\n",
        "token_count": 97
    },
    "0042f340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0042f340(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.0040a080();\n    if (*(iVar1 + 0x330) != 0) {\n        fcn.0042f620();\n        *(iVar1 + 0x330) = 0;\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 109
    },
    "004331c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004331c0(void)\n\n{\n    fcn.0045ac40();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 35
    },
    "00434560": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00434560(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x43458c;\n            fcn.004346e0();\n            if (*0x598228 != 0) {\ncode_r0x004345a9:\n                *(*0x20 + -0x38) = 0x4345ae;\n                fcn.00434760();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x004345a9;\n                if (0x200 < *0x598360) goto code_r0x00434698;\n                iVar6 = *0x598360 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x598360) + 0x598e20) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x43466e;\n                    fcn.0045ddc0(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x598360 + arg1_01;\n                *0x598360 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x434698;\n            fcn.0045d540(arg1_00);\ncode_r0x00434698:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x4346a5;\n            in_RAX = fcn.0045d540(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4346ba;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "0044b2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044b2c0(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 8),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044b306;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044b306:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44b313;\n                uVar2 = fcn.00449320();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44b345;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44b355;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 582
    },
    "0044b420": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044b420(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044b45d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044b45d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44b46a;\n                uVar1 = fcn.00449320();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44b49c;\n            in_RAX = fcn.0045d480(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44b4b0;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "0044b4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044b4e0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4a616e;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x24);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4a616e;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44b539;\n                    uVar2 = fcn.00449320();\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44b594;\n                fcn.0045d480(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44b59e;\n            in_RAX = fcn.0045d480(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44b5b2;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 734
    },
    "0044dae0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044dae0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044c7e0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044e940();\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0044fea0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fea0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044eb60(0);\n    return;\n}\n",
        "token_count": 115
    },
    "004529a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004529a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00452aa0(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "00452a00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00452a00(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2d0) != 0) {\n        fcn.00452aa0(0);\n        return;\n    }\n    fcn.00452aa0(arg1);\n    return;\n}\n",
        "token_count": 139
    },
    "00459300": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00459300(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2e8) = 2;\n    *(iVar2 + 0x2f0) = auStackX8;\n    fcn.004031e0();\n    iStackX24 = *(iVar2 + 0x2f8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x308);\n    }\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 326
    },
    "00459460": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nvoid fcn.00459460(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000030;\n    ulong uStack0000000000000038;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000030 = 0;\n    uStack0000000000000038 = 0;\n    uStack0000000000000040 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    uStack0000000000000030 = *(iVar2 + 0x2f8);\n    uStack0000000000000038 = *(iVar2 + 0x300);\n    uStack0000000000000040 = *(iVar2 + 0x308);\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 389
    },
    "004595c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004595c0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000048;\n    ulong uStack0000000000000050;\n    ulong uStack0000000000000058;\n    \n    uStack0000000000000048 = 0;\n    uStack0000000000000050 = 0;\n    uStack0000000000000058 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    uStack0000000000000048 = *(iVar2 + 0x2f8);\n    uStack0000000000000050 = *(iVar2 + 0x300);\n    uStack0000000000000058 = *(iVar2 + 0x308);\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 390
    },
    "00459e00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459e00(ulong arg1, ulong arg2)\n\n{\n    fcn.0045efa0();\n    return;\n}\n",
        "token_count": 32
    },
    "0045e880": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045e880(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.0045ce20();\n    return;\n}\n",
        "token_count": 48
    },
    "0045ec60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ec60(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x543a40)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0045ed40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045ed40(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "0045efa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045efa0(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.00410cc0(uStackX24);\n    return;\n}\n",
        "token_count": 37
    },
    "00463dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00463dc0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    char cStack33;\n    ulong uStack32;\n    \n    uStack32 = 0;\n    uVar3 = 0;\n    while (unaff_RBX != 0) {\n        if (0x17 < uVar3) goto code_r0x00463ef5;\n        *(&uStack32 + uVar3) = unaff_RBX + (unaff_RBX / 10) * -10 + '0';\n        uVar3 = uVar3 + 1;\n        unaff_RBX = unaff_RBX / 10;\n    }\n    *(in_RAX + 800) = 0;\n    while (uVar4 = uVar3 - 1,  -1 < uVar4) {\n        if (0x17 < uVar4) goto code_r0x00463ee8;\n        if (799 < *(in_RAX + 800)) goto code_r0x00463edb;\n        *(in_RAX + *(in_RAX + 800)) = (&cStack33)[uVar3];\n        *(in_RAX + 800) = *(in_RAX + 800) + 1;\n        uVar3 = uVar4;\n    }\n    *(in_RAX + 0x328) = *(in_RAX + 800);\n    while (iVar1 = *(in_RAX + 800),  0 < iVar1) {\n        if (799 < iVar1 - 1U) {\n            fcn.0045d480(800);\ncode_r0x00463edb:\n            fcn.0045d480(800);\ncode_r0x00463ee8:\n            fcn.0045d480(0x18);\ncode_r0x00463ef5:\n            fcn.0045d480(0x18);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (*(iVar1 + -1 + in_RAX) != '0') break;\n        *(in_RAX + 800) = iVar1 - 1U;\n    }\n    if (iVar1 == 0) {\n        *(in_RAX + 0x328) = 0;\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "00471dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00471dc0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = *(in_RAX + 0x17) & 0x1f;\n            if (uVar2 < 0x13) {\n                if (uVar2 == 0x11) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4c9f20;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x12) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4c9f20;\n                    }\n                    return uVar1;\n                }\n            }\n            else {\n                if (uVar2 == 0x15) {\n                    if (*(in_RAX + 0x38) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4c9f20;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x16) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4c9f20;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x17) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4c9f20;\n                    }\n                    return uVar1;\n                }\n            }\n            *(*0x20 + -0x38) = 0x471ec5;\n            fcn.00471c20();\n            *(*0x20 + -0x38) = 0x471ede;\n            fcn.00448440(0x1e);\n            *(*0x20 + -0x38) = 0x471ee5;\n            fcn.00409a20();\n            *(*0x20 + -0x38) = 0x471ef4;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x471eff;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 719
    },
    "00472060": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00472060(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x17) & 0x1f) == 0x11) {\n                return *(in_RAX + 0x40);\n            }\n            *(*0x20 + -0x38) = 0x472099;\n            fcn.00471c20();\n            *(*0x20 + -0x38) = 0x4720b2;\n            fcn.00448440(0x1f);\n            *(*0x20 + -0x38) = 0x4720b7;\n            fcn.00409a20();\n            *(*0x20 + -0x38) = 0x4720c6;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4720d1;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 373
    },
    "00478980": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00478980(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x4789db;\n            iVar1 = fcn.004449e0(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x00478add;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x00478ad5;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x00478acd;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x00478ac5;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x478ac5;\n            fcn.0045d500(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x00478ac5:\n            *(*0x20 + -0x38) = 0x478acd;\n            fcn.0045d480(arg1);\ncode_r0x00478acd:\n            *(*0x20 + -0x38) = 0x478ad5;\n            fcn.0045d480(arg1);\ncode_r0x00478ad5:\n            *(*0x20 + -0x38) = 0x478add;\n            fcn.0045d480(arg1);\ncode_r0x00478add:\n            *(*0x20 + -0x38) = 0x478ae5;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x478afa;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1106
    },
    "00481280": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar fcn.00481280(void)\n\n{\n    uchar uVar1;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    uchar *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    puStack16 = NULL;\n    LOCK();\n    if (*0x598418 == 0) {\n        *0x598418 = 1;\n    }\n    else {\n        fcn.0046a460();\n    }\n    uVar1 = *0x598420;\n    auStack32 = CONCAT88(0x598418, 0x481360);\n    puStack16 = auStack32;\n    (*0x481360)();\n    return uVar1;\n}\n",
        "token_count": 205
    },
    "004858c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004858c0(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00485700(arg1);\n    fcn.00484700(unaff_RBX);\n    return;\n}\n",
        "token_count": 105
    },
    "00486040": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00486040(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            unaff_RBX = 4;\n            *(*0x20 + -0x38) = 0x486087;\n            arg1 = fcn.004639a0(0x44);\n            if (arg1 < 0x45) {\n                *(*0x20 + -0x38) = 0x4860a5;\n                fcn.00484700(arg1);\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4860bc;\n            in_RAX = fcn.0045d500(arg1, 0x44);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x4860cc;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 420
    },
    "004879c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004879c0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (iVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar1 < 0x59) {\n        if (iVar1 < 0x47) {\n            if (iVar1 == 0x45) {\ncode_r0x00487a25:\n                fcn.004861c0(arg1);\n                return;\n            }\n            if (iVar1 == 0x46) {\n                fcn.004861c0(0x66);\n                return;\n            }\n        }\n        else if ((iVar1 == 0x47) || (iVar1 == 0x58)) goto code_r0x00487a4a;\ncode_r0x00487a5e:\n        fcn.004871c0(arg1, in_RDX, in_R8);\n    }\n    else {\n        if (iVar1 < 0x67) {\n            if (iVar1 != 0x62) {\n                if (100 < iVar1) goto code_r0x00487a25;\n                goto code_r0x00487a5e;\n            }\n        }\n        else if (iVar1 != 0x67) {\n            if (iVar1 == 0x76) {\n                fcn.004861c0(0x67);\n                return;\n            }\n            if (iVar1 != 0x78) goto code_r0x00487a5e;\n        }\ncode_r0x00487a4a:\n        fcn.004861c0(arg1);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "0048d960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0048d960(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX != 0) {\n        (**(in_RAX + 0x18))();\n        if ((unaff_RBX == 0x25) && (cVar1 = fcn.00402180(0x25, arg2),  cVar1 != '\\0')) {\n            return;\n        }\n        (**(in_RAX + 0x18))();\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434940();\n        fcn.00434760();\n        fcn.004840c0();\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00401d20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00401d20(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    uVar1 = (uVar1 >> 0x10) + uVar1;\n    return (uVar1 >> 0x20) + uVar1 & 0x7f;\n}\n",
        "token_count": 206
    },
    "00404120": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00404120(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00403980(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00432f60();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00408a60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00408a60(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x598480 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 940
    },
    "00414d40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00414d40(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x52e240);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x52f2e0);\n                *(*0x20 + -0x48) = 0x414da5;\n                iVar2 = fcn.00423560();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x56a638) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x414e65;\n                    fcn.00412100(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x414e8e;\n                fcn.0045d4a0(0x40);\n            }\n            *(*0x20 + -0x48) = 0x414e98;\n            in_RAX = fcn.0045d480(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x414ea5;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "0041bc60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041bc60(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.00411320(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.0041f8a0(0);\n                        }\n                    }\n                    else {\n                        fcn.0041c440(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "0041d0a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041d0a0(void)\n\n{\n    uint64_t uVar1;\n    double dVar2;\n    int32_t *in_RAX;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    \n    iVar3 = *in_RAX;\n    uVar1 = *(in_RAX + 0xe);\n    iVar6 = *(in_RAX + 8);\n    if (iVar3 < 0) {\n        iVar3 = 100000;\n    }\n    if (uVar1 < 0) {\n        dVar2 = uVar1 >> 1 | uVar1 & 1;\n        dVar2 = dVar2 + dVar2;\n        uVar7 = SUB84(dVar2, 0);\n        uVar8 = dVar2 >> 0x20;\n    }\n    else {\n        uVar7 = SUB84(uVar1, 0);\n        uVar8 = uVar1 >> 0x20;\n    }\n    if ((iVar6 < *(in_RAX + 0xc)) ||\n       (uVar4 = (*0x4c79a8 * CONCAT44(uVar8, uVar7)) / (iVar3 + 100),  uVar4 < *(in_RAX + 0x12))) {\n        iVar6 = *0x4c7980 * iVar6;\n        uVar4 = uVar1;\n    }\n    iVar5 = uVar4 - *(in_RAX + 0x12);\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar6 = iVar6 - *(in_RAX + 0xc);\n    if (iVar6 < 1) {\n        iVar6 = 1;\n    }\n    *(in_RAX + 0x22) = iVar5 / iVar6;\n    *(in_RAX + 0x24) = iVar6 / iVar5;\n    return;\n}\n",
        "token_count": 445
    },
    "0041dd80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0041dd80(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    iVar1 = *in_RAX;\n    *in_RAX = unaff_EBX;\n    *(in_RAX + 2) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    fcn.0041d9e0(*(in_RAX + 4));\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "004413a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004413a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    uchar *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uchar *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b8 && *0x20 + -0x3b8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x438;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = 0;\n            *(*0x20 + -0x448) = *0x20 + -8;\n            *(*0x20 + -0x440) = 0x4413ef;\n            puVar5 = fcn.0045d5e0();\n            unaff_RBP = *(*0x20 + -0x448);\n            uVar7 = unaff_EDI - arg1 >> 1;\n            puVar10 = *0x20 + -0x408;\n            if (uVar7 == 0x80) {\n                uVar6 = 0;\n                while (uVar9 = uVar6,  uVar9 < 0x80) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(puVar5 + (uVar9 + arg1 & 0xff) * 8 + 0x5f8);\n                    uVar6 = uVar9 + 1;\n                }\n                LOCK();\n                if (arg1 != *(puVar5 + 0x5f0)) {\n                    return 0;\n                }\n                *(puVar5 + 0x5f0) = arg1 + 0x80;\n                *(*0x20 + uVar7 * 8 + -0x410) = unaff_RBX;\n                uVar6 = 0;\n                while( true ) {\n                    if (0x7f < uVar6) {\n                        *(*0x20 + -0x424) = 0x80;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + uVar7 * 8 + -0x410);\n                        *(*0x20 + -0x440) = 0x4414b9;\n                        fcn.0040a080();\n                        iVar1 = *(*0x20 + -0x418);\n                        uVar2 = *(*0x20 + -0x420);\n                        uVar3 = *0x544d60;\n                        iVar4 = *0x544d68;\n                        if ((iVar1 != 0) && (*(iVar1 + 0xa0) = 0,  uVar3 = uVar2,  iVar4 = iVar1,  *0x544d68 != 0)) {\n                            *(*0x544d68 + 0xa0) = uVar2;\n                            uVar3 = *0x544d60;\n                        }\n                        *0x544d68 = iVar4;\n                        *0x544d60 = uVar3;\n                        *0x544d70 = *0x544d70 + *(*0x20 + -0x424) + 1;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x440) = 0x441526;\n                        fcn.0040a2a0();\n                        return 1;\n                    }\n                    iVar1 = uVar6 * 8;\n                    uVar6 = uVar6 + 1;\n                    if (0x80 < uVar6) break;\n                    *(*(*0x20 + iVar1 + -0x410) + 0xa0) = *(*0x20 + uVar6 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x440) = 0x441545;\n                fcn.0045d480(0x81);\n                puVar10 = puVar5;\n            }\n            unaff_EDI = puVar10;\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x440) = 0x441556;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x1c) = unaff_EDI;\n        *(puVar8 + -8) = 0x44156e;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_4_ = *(puVar8 + 0x18);\n        unaff_EDI = *(puVar8 + 0x1c);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1263
    },
    "004662c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.004662c0(uint64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uchar uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t unaff_RBX;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar11;\n    int64_t in_R10;\n    int64_t *in_R11;\n    int64_t unaff_R14;\n    uint64_t uVar12;\n    uint8_t uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_SIL;\n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (arg4 == 0) {\n        in_R10 = 0;\n    }\n    for (uVar11 = arg4 << (-(*in_R11 + -0x3c) & 0x3f) & -(-(*in_R11 + -0x3c) < 0x40);\n        (uVar11 != 0 && ((uVar11 >> 0x3c & 1) == 0)); uVar11 = uVar11 << 1) {\n        in_R10 = in_R10 + -1;\n    }\n    if (unaff_RDI < 0xf) {\n        uVar7 = unaff_RDI * 4;\n        uVar9 = -(-(uVar7 - 0x3c) < 0x40);\n        uVar5 = -(uVar7 - 0x3c);\n        uVar12 = uVar11 >> (uVar5 & 0x3f) & uVar9;\n        if (0x800000000000000 < (uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) & 0xfffffffffffffff | uVar12 & 1)) {\n            uVar12 = uVar12 + 1;\n        }\n        uVar11 = uVar12 << (uVar5 & 0x3f) & uVar9;\n        if ((uVar11 >> 0x3d & 1) != 0) {\n            uVar11 = uVar11 >> 1;\n            in_R10 = in_R10 + 1;\n        }\n    }\n    if (uStack0000000000000028 == 0x58) {\n        iVar8 = 0x4a8158;\n    }\n    else {\n        iVar8 = 0x4a8168;\n    }\n    if (noname_2 != '\\0') {\n        uVar12 = unaff_RBX + 1;\n        iVar3 = in_RAX;\n        if (arg1 < uVar12) {\n            arg1 = unaff_RBX;\n            iVar3 = fcn.00444ac0(unaff_RBX);\n            uVar12 = in_RAX + 1;\n        }\n        *(iVar3 + unaff_RBX) = 0x2d;\n        in_RAX = iVar3;\n        unaff_RBX = uVar12;\n    }\n    uVar12 = unaff_RBX + 3;\n    iVar3 = in_RAX;\n    if (arg1 < uVar12) {\n        arg1 = unaff_RBX;\n        iVar3 = fcn.00444ac0(unaff_RBX);\n        uVar12 = in_RAX + 3;\n    }\n    *(iVar3 + unaff_RBX) = 0x30;\n    *(iVar3 + 1 + unaff_RBX) = uStack0000000000000028;\n    *(iVar3 + 2 + unaff_RBX) = (uVar11 >> 0x3c & 1) + 0x30;\n    uVar11 = uVar11 << 4;\n    if ((unaff_RDI < 0) && (uVar11 != 0)) {\n        uVar9 = uVar12 + 1;\n        iVar4 = iVar3;\n        if (arg1 < uVar9) {\n            arg1 = uVar12;\n            iVar4 = fcn.00444ac0(uVar12);\n            uVar9 = iVar3 + 1;\n        }\n        *(iVar4 + uVar12) = 0x2e;\n        iVar3 = iVar4;\n        uVar12 = uVar9;\n        uVar5 = uStack0000000000000028;\n        for (; uVar11 != 0; uVar11 = uVar11 << 4) {\n            uVar9 = uVar12 + 1;\n            uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00444ac0(uVar12);\n                uVar9 = iVar3 + 1;\n                uVar5 = uStack0000000000000028;\n            }\n            *(iVar4 + uVar12) = uVar6;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n        }\n    }\n    else {\n        uVar5 = uStack0000000000000028;\n        if (0 < unaff_RDI) {\n            uVar9 = uVar12 + 1;\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00444ac0(uVar12);\n                uVar9 = iVar3 + 1;\n            }\n            *(iVar4 + uVar12) = 0x2e;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n            uVar5 = uStack0000000000000028;\n            for (iVar10 = 0; iVar10 < unaff_RDI; iVar10 = iVar10 + 1) {\n                uVar9 = uVar12 + 1;\n                uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n                iVar4 = iVar3;\n                if (arg1 < uVar9) {\n                    arg1 = uVar12;\n                    iVar4 = fcn.00444ac0(uVar12);\n                    uVar9 = iVar3 + 1;\n                    uVar5 = uStack0000000000000028;\n                }\n                *(iVar4 + uVar12) = uVar6;\n                uVar11 = uVar11 << 4;\n                iVar3 = iVar4;\n                uVar12 = uVar9;\n            }\n        }\n    }\n    if (uVar5 == (uVar5 | 0x20)) {\n        uVar6 = 0x70;\n    }\n    else {\n        uVar6 = 0x50;\n    }\n    uVar11 = uVar12 + 1;\n    iVar8 = iVar3;\n    if (arg1 < uVar11) {\n        arg1 = uVar12;\n        iVar8 = fcn.00444ac0(uVar12);\n        uVar11 = iVar3 + 1;\n    }\n    *(iVar8 + uVar12) = uVar6;\n    if (in_R10 < 0) {\n        in_R10 = -in_R10;\n        uVar6 = 0x2d;\n    }\n    else {\n        uVar6 = 0x2b;\n    }\n    uVar12 = uVar11 + 1;\n    iVar3 = iVar8;\n    if (arg1 < uVar12) {\n        arg1 = uVar11;\n        iVar3 = fcn.00444ac0(uVar11);\n        uVar12 = iVar8 + 1;\n    }\n    *(iVar3 + uVar11) = uVar6;\n    cVar1 = in_R10;\n    cVar2 = in_R10 >> 0x3f;\n    if (in_R10 < 100) {\n        cVar2 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 3) - cVar2;\n        if (arg1 < uVar12 + 2) {\n            iVar3 = fcn.00444ac0(uVar12);\n        }\n        *(iVar3 + uVar12) = cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = cVar1 + cVar2 * -10 + '0';\n    }\n    else if (in_R10 < 1000) {\n        iVar8 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar4 = iVar8 >> 3;\n        if (arg1 < uVar12 + 3) {\n            iVar3 = fcn.00444ac0(uVar12);\n        }\n        *(iVar3 + uVar12) = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6) + '0';\n        *(iVar3 + 1 + uVar12) =\n             iVar4 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar4) >> 0x40, 0) + iVar4 >> 3) - (iVar8 >> 0x3f))\n                     * -10 + '0';\n        *(iVar3 + 2 + uVar12) = cVar1 + iVar4 * -10 + '0';\n    }\n    else {\n        iVar8 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6;\n        iVar4 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar10 = iVar4 >> 3;\n        if (arg1 < uVar12 + 4) {\n            iVar3 = fcn.00444ac0(uVar12);\n        }\n        *(iVar3 + uVar12) = in_R10 / 1000 + cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = iVar8 + ((iVar8 & 0xff) / 10) * -10 + '0';\n        *(iVar3 + 2 + uVar12) =\n             iVar10 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar10) >> 0x40, 0) + iVar10 >> 3) -\n                      (iVar4 >> 0x3f)) * -10 + '0';\n        *(iVar3 + 3 + uVar12) = cVar1 + iVar10 * -10 + '0';\n    }\n    return iVar3;\n}\n",
        "token_count": 2529
    },
    "00466fc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00466fc0(ulong arg1, ulong noname_1, ulong noname_2, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    uint32_t unaff_EDI;\n    int64_t iVar5;\n    \n    if (0x13 < unaff_RSI) goto code_r0x00467289;\n    uVar3 = *(unaff_RSI * 8 + 0x52f740);\n    iVar5 = 0;\n    while (uVar3 <= unaff_RBX) {\n        uVar4 = unaff_RBX % 10;\n        if (uVar4 < 6) {\n            if (uVar4 < 5) {\n                unaff_EDI = 0;\n            }\n            else if (arg1 == 0) {\n                unaff_EDI = unaff_RBX / 10 & 1;\n            }\n            else {\n                unaff_EDI = 1;\n            }\n        }\n        else {\n            unaff_EDI = 1;\n        }\n        iVar5 = iVar5 + 1;\n        arg1._0_1_ = arg1 | uVar4 != 0;\n        unaff_RBX = unaff_RBX / 10;\n        arg4 = uVar3;\n    }\n    if (unaff_EDI != '\\0') {\n        unaff_RBX = unaff_RBX + 1;\n    }\n    if (uVar3 <= unaff_RBX) {\n        unaff_RBX = unaff_RBX / 10;\n        iVar5 = iVar5 + 1;\n    }\n    in_RAX[3] = unaff_RSI;\n    while (99 < unaff_RBX) {\n        if (unaff_RBX >> 0x20 == 0) {\n            uVar3 = ((unaff_RBX & 0xffffffff) >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        else {\n            uVar3 = (unaff_RBX >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        if (199 < uVar4 * 2 + 1) goto code_r0x0046727f;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 1) goto code_r0x00467277;\n        *((unaff_RSI - 1) + *in_RAX) = *(uVar4 * 2 + 0x4af89b);\n        if (199 < uVar4 << 1) goto code_r0x0046726d;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 2) goto code_r0x00467265;\n        *((unaff_RSI - 2) + *in_RAX) = *(uVar4 * 2 + 0x4af89a);\n        unaff_RBX = uVar3;\n        unaff_RSI = unaff_RSI - 2;\n    }\n    if (unaff_RBX == 0) {\ncode_r0x004671c0:\n        if (unaff_RBX < 10) {\ncode_r0x00467200:\n            while( true ) {\n                unaff_RBX = *in_RAX;\n                uVar3 = in_RAX[3];\n                if (in_RAX[1] <= uVar3 - 1) break;\n                if (*((uVar3 - 1) + unaff_RBX) != '0') {\n                    in_RAX[4] = iVar5 + uVar3;\n                    return;\n                }\n                in_RAX[3] = uVar3 - 1;\n                iVar5 = iVar5 + 1;\n            }\n            fcn.0045d480(in_RAX[1]);\ncode_r0x00467238:\n            fcn.0045d4a0(uVar3);\n        }\n        else if (unaff_RBX << 1 < 200) {\n            uVar3 = in_RAX[1];\n            arg4 = 0x4af89a;\n            uVar1 = *(unaff_RBX * 2 + 0x4af89a);\n            unaff_RBX = uVar1;\n            if (unaff_RSI - 1 < uVar3) {\n                *((unaff_RSI - 1) + *in_RAX) = uVar1;\n                goto code_r0x00467200;\n            }\n            goto code_r0x00467238;\n        }\n        fcn.0045d4a0(200);\n        uVar3 = unaff_RBX;\ncode_r0x00467252:\n        fcn.0045d4a0(uVar3);\n    }\n    else if (unaff_RBX * 2 + 1 < 200) {\n        uVar1 = *(unaff_RBX * 2 + 0x4af89b);\n        arg4 = uVar1;\n        uVar3 = in_RAX[1];\n        if (unaff_RSI - 1 < in_RAX[1]) {\n            *((unaff_RSI - 1) + *in_RAX) = uVar1;\n            unaff_RSI = unaff_RSI - 1;\n            goto code_r0x004671c0;\n        }\n        goto code_r0x00467252;\n    }\n    fcn.0045d4a0(200);\ncode_r0x00467265:\n    fcn.0045d4a0(arg4);\ncode_r0x0046726d:\n    fcn.0045d4a0(200);\ncode_r0x00467277:\n    fcn.0045d4a0(arg4);\ncode_r0x0046727f:\n    fcn.0045d4a0(200);\ncode_r0x00467289:\n    fcn.0045d480(0x14);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1379
    },
    "00467ac0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00467ac0(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    char unaff_SIL;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint8_t uVar11;\n    int32_t iVar12;\n    \n    if (unaff_RDI == 0) {\n        in_RAX[4] = arg4 + 1;\n        return;\n    }\n    iVar3 = 0;\n    uVar9 = 0;\n    while( true ) {\n        if (unaff_RDI == 0) break;\n        uVar4 = unaff_RBX + 9;\n        unaff_RBX = uVar4 / 10;\n        uVar8 = arg1 & 0xffffffff;\n        uVar2 = arg1 + (uVar8 / 10) * -10;\n        uVar7 = unaff_RDI & 0xffffffff;\n        uVar4 = uVar4 / 10;\n        uVar10 = uVar7 / 10;\n        if (uVar10 < uVar4) break;\n        uVar5 = uVar8 / 10 + 1;\n        arg1 = uVar8 / 10;\n        if ((uVar4 == uVar5) && (uVar4 = uVar8 / 10,  uVar4 <= uVar10 && uVar7 / 10 != uVar4)) {\n            uVar2 = 0;\n            arg1 = uVar5;\n            arg3 = 0;\n        }\n        unaff_SIL = unaff_SIL != '\\0' && uVar9 == 0;\n        iVar3 = iVar3 + 1;\n        unaff_RDI = uVar7 / 10;\n        uVar9 = uVar2;\n    }\n    arg1 = arg1 & 0xffffffff;\n    if (iVar3 < 1) {\n        uVar11 = arg3;\n        goto code_r0x00467ba0;\n    }\n    if (uVar9 < 6) {\n        if (uVar9 == 5) {\n            if (unaff_SIL == '\\0') goto code_r0x00467b88;\n            if (unaff_SIL != '\\0') {\n                uVar11 = arg1 & 1;\n                goto code_r0x00467ba0;\n            }\n        }\n        uVar11 = 0;\n    }\n    else {\ncode_r0x00467b88:\n        uVar11 = 1;\n    }\ncode_r0x00467ba0:\n    if ((arg1 < unaff_RDI) && (uVar11 != 0)) {\n        arg1 = arg1 + 1;\n    }\n    uVar7 = arg4 - iVar3;\n    for (uVar8 = uVar7; in_RAX[3] < uVar8; uVar8 = uVar8 - 2) {\n        iVar12 = arg1;\n        arg1 = (arg1 >> 1) / 0x32;\n        iVar12 = iVar12 + arg1 * -100;\n        uVar6 = iVar12 * 2 + 1;\n        if (199 < uVar6) goto code_r0x00467cb0;\n        arg3 = in_RAX[1];\n        if (arg3 <= uVar8) goto code_r0x00467ca5;\n        *(*in_RAX + uVar8) = *(uVar6 + 0x4af89a);\n        uVar6 = iVar12 * 2;\n        if (199 < uVar6) goto code_r0x00467c95;\n        unaff_RDI = in_RAX[1];\n        arg3 = *in_RAX;\n        if (unaff_RDI <= uVar8 - 1) goto code_r0x00467c8a;\n        *((uVar8 - 1) + arg3) = *(uVar6 + 0x4af89a);\n    }\n    if (uVar8 == in_RAX[3]) {\n        if (in_RAX[1] <= uVar8) {\n            fcn.0045d480(in_RAX[1]);\ncode_r0x00467c8a:\n            fcn.0045d480(unaff_RDI);\ncode_r0x00467c95:\n            fcn.0045d480(200);\ncode_r0x00467ca5:\n            fcn.0045d480(arg3);\ncode_r0x00467cb0:\n            fcn.0045d480(200);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *(*in_RAX + uVar8) = arg1 + '0';\n    }\n    in_RAX[3] = uVar7 + 1;\n    in_RAX[4] = uVar7 + iVar3 + 1;\n    return;\n}\n",
        "token_count": 1163
    },
    "00467fc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00467fc0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uchar *in_RAX;\n    uchar *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uint64_t uVar6;\n    char cVar7;\n    uint64_t in_R8;\n    uchar uVar8;\n    uint64_t in_R9;\n    uchar uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar8 = in_R9;\n        cVar7 = in_R8;\n        puVar2 = *0x20 + -0x18;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar2 && puVar2 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = 0;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar7 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar3 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar4 = unaff_RDI / unaff_RSI;\n                            uVar6 = unaff_RDI - puVar4 * unaff_RSI;\n                            puVar10 = in_RAX;\n                            if (0x23 < uVar6) goto code_r0x00468250;\n                            uVar1 = *(uVar6 + 0x4ad14f);\n                            puVar2 = uVar1;\n                            if (0x40 < puVar3 + -1) goto code_r0x00468246;\n                            (*0x20 + -0x52)[puVar3] = uVar1;\n                            puVar3 = puVar3 + -1;\n                            unaff_RDI = puVar4;\n                        }\n                        puVar10 = puVar3 + -1;\n                        puVar11 = unaff_RDI[0x4ad14f];\n                        puVar4 = puVar3;\n                        if (0x40 < puVar10) goto code_r0x00468239;\n                        (*0x20 + -0x52)[puVar3] = unaff_RDI[0x4ad14f];\n                        bVar12 = cVar7 == '\\0';\n                        goto code_r0x004680f2;\n                    }\n                    uVar6 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                        }\n                    }\n                    puVar4 = uVar6 & 7;\n                    puVar10 = unaff_RSI + -1;\n                    puVar11 = 0x41;\n                    goto code_r0x00468274;\n                }\n                puVar3 = 0x41;\n                puVar10 = unaff_RDI;\ncode_r0x00468300:\n                uVar8 = in_R9;\n                cVar7 = in_R8;\n                if (puVar10 < 0x64) {\n                    unaff_RDI = puVar10;\n                    if (puVar10 * 2 + 1U < 200) {\n                        puVar2 = puVar3 + -1;\n                        puVar11 = 0x4af89a;\n                        if (puVar2 < 0x41) {\n                            (*0x20 + -0x52)[puVar3] = *(puVar10 * 2 + 0x4af89b);\n                            if (puVar10 < 0xa) {\ncode_r0x0046842b:\n                                bVar12 = cVar7 == '\\0';\n                                puVar10 = puVar2;\ncode_r0x004680f2:\n                                do {\n                                    puVar4 = puVar10;\n                                    if (bVar12) {\ncode_r0x00468115:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar4 < 0x42) {\n                                                *(*0x20 + -0xa0) = 0x4681f5;\n                                                fcn.00448800(-(puVar4 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0xa0) = 0x46821f;\n                                            fcn.0045d540(0x41);\n                                        }\n                                        else if (puVar4 < 0x42) {\n                                            uVar6 = (unaff_RBX - puVar4) + 0x41;\n                                            *(*0x20 + -0x60) = uVar6;\n                                            puVar2 = puVar4 + -0x41;\n                                            if (arg1 < uVar6) {\n                                                *(*0x20 + -0x68) = puVar2;\n                                                *(*0x20 + -0x70) = unaff_RBX;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar4 & puVar2 >> 0x3f) - 0x51);\n                                                *(*0x20 + -0xa0) = 0x468178;\n                                                in_RAX = fcn.00444ac0(unaff_RBX);\n                                                puVar2 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0xa0) = 0x4681a9;\n                                            fcn.0045ddc0(-puVar2);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0xa0) = 0x46822c;\n                                        fcn.0045d540(0x41);\n                                    }\n                                    else {\n                                        puVar4 = puVar10 + -1;\n                                        if (puVar4 < 0x41) {\n                                            (*0x20 + -0x52)[puVar10] = 0x2d;\n                                            goto code_r0x00468115;\n                                        }\n                                    }\n                                    *(*0x20 + -0xa0) = 0x468239;\n                                    fcn.0045d480(0x41);\ncode_r0x00468239:\n                                    puVar3 = puVar11;\n                                    *(*0x20 + -0xa0) = 0x468246;\n                                    fcn.0045d480(0x41);\n                                    in_RAX = puVar10;\ncode_r0x00468246:\n                                    *(*0x20 + -0xa0) = 0x468250;\n                                    fcn.0045d480(0x41);\n                                    puVar10 = in_RAX;\ncode_r0x00468250:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0xa0) = 0x46825d;\n                                    in_RAX = fcn.0045d4a0(0x24);\n                                    unaff_RDI = puVar2;\n                                    while( true ) {\n                                        puVar11 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar3] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar4 & 0x3f);\n                                        puVar2 = unaff_RDI;\n                                        unaff_R13 = puVar11;\ncode_r0x00468274:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar3 = puVar11;\n                                        if (0x23 < (unaff_RDI & puVar10)) goto code_r0x004682df;\n                                        unaff_R13 = puVar11 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar10) + 0x4ad14f);\n                                        if (0x40 < unaff_R13) goto code_r0x004682d2;\n                                    }\n                                    puVar4 = puVar11 + -1;\n                                    puVar10 = unaff_RDI[0x4ad14f];\n                                    if (0x40 < puVar4) goto code_r0x004682c5;\n                                    (*0x20 + -0x52)[puVar11] = unaff_RDI[0x4ad14f];\n                                    bVar12 = in_R8 == '\\0';\n                                    puVar10 = puVar4;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar10 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar2 = puVar3 + -2;\n                                if (puVar2 < 0x41) {\n                                    (*0x20 + -0x53)[puVar3] = *(puVar10 * 2 + 0x4af89a);\n                                    goto code_r0x0046842b;\n                                }\n                                *(*0x20 + -0xa0) = 0x468445;\n                                fcn.0045d480(0x41);\n                            }\n                            *(*0x20 + -0xa0) = 0x468452;\n                            fcn.0045d4a0(200);\n                        }\n                        *(*0x20 + -0xa0) = 0x46845f;\n                        fcn.0045d480(0x41);\n                    }\n                    *(*0x20 + -0xa0) = 0x46846c;\n                    fcn.0045d4a0(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar10 >> 1;\n                    puVar4 = unaff_RDI / 0x32;\n                    puVar10 = puVar10 + puVar4 * -100;\n                    if (199 < puVar10 * 2 + 1U) goto code_r0x0046848f;\n                    uVar1 = *(puVar10 * 2 + 0x4af89b);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar3 + -1) goto code_r0x00468485;\n                    (*0x20 + -0x52)[puVar3] = uVar1;\n                    if (199 < puVar10 * 2) goto code_r0x00468476;\n                    puVar2 = puVar3 + -2;\n                    uVar9 = *(puVar10 * 2 + 0x4af89a);\n                    if (puVar2 < 0x41) goto code_r0x004682ec;\n                }\n                *(*0x20 + -0xa0) = 0x468476;\n                fcn.0045d480(0x41);\ncode_r0x00468476:\n                *(*0x20 + -0xa0) = 0x468485;\n                fcn.0045d4a0(200);\ncode_r0x00468485:\n                *(*0x20 + -0xa0) = 0x46848f;\n                fcn.0045d480(0x41);\ncode_r0x0046848f:\n                arg1 = 200;\n                *(*0x20 + -0xa0) = 0x468499;\n                fcn.0045d4a0(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x4c7ff8;\n            *(*0x20 + -0xa0) = 0x4684ac;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = cVar7;\n        puVar5[0x31] = uVar8;\n        *(puVar5 + -8) = 0x4684d5;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8 = puVar5[0x30];\n        in_R9 = puVar5[0x31];\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x004682c5:\n    *(*0x20 + -0xa0) = 0x4682d2;\n    fcn.0045d480(0x41);\ncode_r0x004682d2:\n    *(*0x20 + -0xa0) = 0x4682df;\n    fcn.0045d480(0x41);\n    puVar3 = puVar11;\ncode_r0x004682df:\n    uVar9 = SUB81(puVar10, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0xa0) = 0x4682ec;\n    puVar2 = fcn.0045d4a0(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x004682ec:\n    (*0x20 + -0x53)[puVar3] = uVar9;\n    puVar3 = puVar2;\n    unaff_RSI = in_RAX;\n    puVar10 = puVar4;\n    goto code_r0x00468300;\n}\n",
        "token_count": 3286
    },
    "004721a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004721a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    ulong uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = 0;\n            *(*0x20 + -0x38) = *0x20 + -8;\n            *(*0x20 + -0x30) = 0x4721d9;\n            iVar2 = fcn.0045d72b();\n            unaff_RBP = *(*0x20 + -0x38);\n            if ((-1 < unaff_RBX) &&\n               (iVar4 = *(iVar2 + 0x38),  *(iVar2 + 0x40) != unaff_RBX && unaff_RBX <= *(iVar2 + 0x40))) {\n                *(*0x20 + 0x70) = iVar2;\n                *(*0x20 + 0x78) = unaff_RBX;\n                iVar2 = *(iVar4 + 8 + unaff_RBX * 0x18);\n                if (iVar2 == 0) {\n                    uVar7 = 0;\n                    iVar2 = 0;\n                }\n                else {\n                    uVar7 = 0x4c9f20;\n                }\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x18) = unaff_RBX * 3;\n                *(*0x20 + 0x28) = uVar7;\n                *(*0x20 + 0x30) = iVar2;\n                *(*0x20 + -0x30) = 0x47223f;\n                uVar7 = fcn.004714e0(iVar4, unaff_RBX * 3, param_3, param_4);\n                *(*0x20 + 8) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar2 = *(*0x20 + -0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(*0x20 + 0x68) = (*(iVar4 + 0x10 + iVar2 * 8) & 1) != 0;\n                uVar1 = **(iVar4 + iVar2 * 8);\n                uVar5 = uVar1;\n                if ((uVar1 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0x472285;\n                    uVar7 = fcn.004714e0(*(*0x20 + 0x70), iVar4, param_3, param_4);\n                    *(*0x20 + 0x18) = uVar7;\n                    *(*0x20 + 0x20) = uVar5;\n                    iVar2 = *(*0x20 + -0x18);\n                    iVar4 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x30) = 0x4722a5;\n                uVar7 = fcn.00471580(iVar2, iVar4, param_3, param_4);\n                if (uVar5 != 0) {\n                    *(*0x20 + 0x38) = uVar7;\n                    *(*0x20 + 0x40) = uVar5;\n                }\n                *(*0x20 + 0x48) = *(*(*0x20 + -0x10) + 0x10 + *(*0x20 + -0x18) * 8) >> 1;\n                *(*0x20 + -0x30) = 0x4722d7;\n                puVar3 = fcn.0040c140();\n                *puVar3 = *(*0x20 + 0x78);\n                *(*0x20 + 0x50) = puVar3;\n                *(*0x20 + 0x58) = 1;\n                *(*0x20 + 0x60) = 1;\n                return;\n            }\n            unaff_RBX = 0x4c7d28;\n            *(*0x20 + -0x30) = 0x47231c;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar6 + 0x70) = in_RAX;\n        *(puVar6 + 0x78) = unaff_RBX;\n        *(puVar6 + -8) = 0x47232c;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 0x70);\n        unaff_RBX = *(puVar6 + 0x78);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1189
    },
    "00474720": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00474720(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = arg1 & 0x1f;\n            if (uVar1 == 0x19) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4747d4;\n                fcn.004327c0(0x19, arg1);\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = 0x4747e5;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4a9104;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x47480f;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x474829;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "00411520": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.00411520(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x56a638);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.0045d4a0(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 359
    },
    "00412100": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00412100(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x41218e;\n                    uVar1 = fcn.00411600(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = unaff_EBX;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar3 = *(*0x20 + -0x10);\n                        for (uVar4 = 0; uVar4 < uVar2 >> 2; uVar4 = uVar4 + 1) {\n                            *puVar3 = 0xff;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x4121cf;\n                        fcn.0045db00();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    unaff_EBX = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x412205;\n            fcn.00432f60();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x412216;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x412233;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 924
    },
    "00453960": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00453960(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.004346e0();\n        fcn.00434940();\n        fcn.00434760();\n        fcn.00453720();\n        fcn.00452aa0(0);\n    }\n    fcn.00436440();\n    return;\n}\n",
        "token_count": 182
    },
    "00402420": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040244d)\n\nint64_t fcn.00402420(void)\n\n{\n    float *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045cea0(4);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 176
    },
    "00402520": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040254f)\n\nint64_t fcn.00402520(void)\n\n{\n    double *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045cea0(8);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 176
    },
    "0040c340": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c340(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    double dVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    double dVar7;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar6 = uVar6 << 0x11 ^ uVar6;\n    uVar6 = uVar1 >> 0x10 ^ uVar6 >> 7 ^ uVar1 ^ uVar6;\n    *(iVar2 + 0xf4) = uVar6;\n    dVar4 = (uVar6 + uVar1 & 0x3ffffff) + 1;\n    uVar5 = dVar4 >> 0x2f & 0x1f;\n    dVar7 = *(uVar5 * 8 + 0x530300);\n    if (uVar5 + 1 < 0x21) {\n        dVar7 = (((dVar4 >> 0x34 & 0x7ff) - 0x3ff) + dVar7 +\n                *0x4c7930 * (dVar4 >> 0x1b & 0xfffff) * (*(uVar5 * 8 + 0x530308) - dVar7)) - *0x4c79a0;\n        if (0.0 < dVar7) {\n            dVar7 = 0.0;\n        }\n        return dVar7 * in_RAX * *0x4c79e8 + 1;\n    }\n    fcn.0045d4a0(0x21);\n    pcVar3 = swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n}\n",
        "token_count": 512
    },
    "0040c980": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040c980(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    uVar3 = *(in_RAX + 9);\n    if (0xf < uVar3) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar4 = *(iVar2 + 0xf0);\n        uVar1 = *(iVar2 + 0xf4);\n        *(iVar2 + 0xf0) = uVar1;\n        uVar4 = uVar4 ^ uVar4 << 0x11;\n        uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n        *(iVar2 + 0xf4) = uVar4;\n        uVar3 = uVar3 - 0xf;\n        if (((1 << (uVar3 & 0x1f) & -(uVar3 < 0x20)) - 1 & uVar4 + uVar1) == 0) {\n            *(in_RAX + 10) = *(in_RAX + 10) + 1;\n        }\n        return;\n    }\n    *(in_RAX + 10) = *(in_RAX + 10) + 1;\n    return;\n}\n",
        "token_count": 317
    },
    "0040cc60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040cc60(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar3 = fcn.0040c140();\n    iVar2 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar4 = uVar4 << 0x11 ^ uVar4;\n    uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n    *(iVar2 + 0xf4) = uVar4;\n    *(iVar3 + 0xc) = uVar1 + uVar4;\n    return;\n}\n",
        "token_count": 253
    },
    "00429de0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00429de0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x598288 < 1) {\n        bVar3 = true;\n    }\n    else if (in_RAX < *0x598288) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar1 = *(iVar2 + 0xf4);\n        uVar5 = *(iVar2 + 0xf0) << 0x11 ^ *(iVar2 + 0xf0);\n        uVar5 = uVar1 >> 0x10 ^ uVar5 >> 7 ^ uVar1 ^ uVar5;\n        iVar4 = (uVar1 + uVar5) % *0x598288;\n        *(iVar2 + 0xf0) = uVar1;\n        *(iVar2 + 0xf4) = uVar5;\n        bVar3 = in_RAX < iVar4;\n    }\n    else {\n        bVar3 = false;\n    }\n    if (!bVar3) {\n        fcn.00429ee0(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "00449600": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00449600(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    \n    iVar2 = *(unaff_R14 + 0x30);\n    uVar3 = *(iVar2 + 0xf0);\n    uVar1 = *(iVar2 + 0xf4);\n    *(iVar2 + 0xf0) = uVar1;\n    uVar3 = uVar3 << 0x11 ^ uVar3;\n    uVar3 = uVar1 >> 0x10 ^ uVar3 >> 7 ^ uVar1 ^ uVar3;\n    *(iVar2 + 0xf4) = uVar3;\n    return uVar1 + uVar3;\n}\n",
        "token_count": 177
    },
    "00457ac0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00457ac0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint32_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (0 < *0x598320) {\n        iVar2 = *(unaff_R14 + 0x30);\n        uVar1 = *(iVar2 + 0xf4);\n        uVar4 = *(iVar2 + 0xf0) << 0x11 ^ *(iVar2 + 0xf0);\n        uVar4 = uVar1 >> 0x10 ^ uVar4 >> 7 ^ uVar1 ^ uVar4;\n        iVar3 = (uVar1 + uVar4) % *0x598320;\n        *(iVar2 + 0xf0) = uVar1;\n        *(iVar2 + 0xf4) = uVar4;\n        if (iVar3 == 0) {\n            fcn.00429ee0(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044ff00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ff00(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044eb60(0);\n    }\n    fcn.0044eb60(0);\n    return;\n}\n",
        "token_count": 135
    },
    "00454d60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00454d60(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00430920();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 292
    },
    "00454e20": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00454e20(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x00454f0f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00430920();\ncode_r0x00454f0f:\n    fcn.00430920();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 396
    },
    "00454f20": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00454f20(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00455054;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x00454fc2;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x00454fc2:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x454fec;\n                    fcn.00454500();\n                    *(*0x20 + -0x28) = 0x454ff1;\n                    uVar2 = fcn.00454d60(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x455054;\n            fcn.00430920();\ncode_r0x00455054:\n            *(*0x20 + -0x28) = 0x455059;\n            in_RAX = fcn.00430920();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x455065;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 959
    },
    "00463100": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00463100(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.00430920();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 186
    },
    "004714e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004714e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.00430920();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 187
    },
    "00471580": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00471580(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x0047166f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00430920();\ncode_r0x0047166f:\n    fcn.00430920();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 393
    },
    "00471680": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar * fcn.00471680(ulong arg1, uint64_t arg2)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uchar *puVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    bool bVar11;\n    \n    do {\n        iVar2 = in_RAX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX < 0x20000000) {\n                if (unaff_RDI < 0x20000000) {\n                    *(*0x20 + -0x22) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x2c) = 0;\n                    *(*0x20 + -0x2a) = 0;\n                    uVar7 = 0;\n                    uVar8 = unaff_RBX;\n                    while( true ) {\n                        uVar4 = uVar8 & 0x7f;\n                        uVar8 = uVar8 >> 7;\n                        if (uVar8 == 0) break;\n                        if (9 < uVar7) goto code_r0x00471a26;\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4 | 0x80;\n                        uVar7 = uVar7 + 1;\n                    }\n                    if (uVar7 < 10) {\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4;\n                        uVar8 = 0;\n                        iVar2 = unaff_RDI;\n                        while( true ) {\n                            uVar4 = iVar2 & 0x7f;\n                            iVar2 = iVar2 >> 7;\n                            if (iVar2 == 0) break;\n                            if (9 < uVar8) goto code_r0x00471a0c;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4 | 0x80;\n                            uVar8 = uVar8 + 1;\n                        }\n                        if (uVar8 < 10) {\n                            *(*0x20 + -0x38) = unaff_RBX;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + 0x18) = arg1;\n                            *(*0x20 + -0x58) = uVar8;\n                            *(*0x20 + -0x60) = uVar7;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4;\n                            iVar2 = uVar7 + unaff_RBX + 2;\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x48) = unaff_RBX + uVar7;\n                            if (0 < unaff_RDI) {\n                                iVar2 = unaff_RDI + uVar8 + unaff_RBX + uVar7 + 3;\n                                unaff_SIL = unaff_SIL | 2;\n                            }\n                            *(*0x20 + -0x50) = iVar2;\n                            *(*0x20 + -0x71) = unaff_SIL;\n                            *(*0x20 + -0xb8) = 0x47180c;\n                            puVar1 = fcn.004449e0(iVar2);\n                            uVar8 = *(*0x20 + -0x50);\n                            if (uVar8 != 0) {\n                                *(*0x20 + -0x10) = puVar1;\n                                *puVar1 = *(*0x20 + -0x71);\n                                iVar2 = uVar8 - 1;\n                                iVar3 = *(*0x20 + -0x60);\n                                arg1_01 = iVar2;\n                                if (iVar3 + 1 < iVar2) {\n                                    arg1_01 = iVar3 + 1;\n                                }\n                                if (*0x20 + -0x22 != puVar1 + (-iVar2 >> 0x3f & 1)) {\n                                    *(*0x20 + -0xb8) = 0x471867;\n                                    fcn.0045ddc0(arg1_01);\n                                    puVar1 = *(*0x20 + -0x10);\n                                    uVar8 = *(*0x20 + -0x50);\n                                    iVar3 = *(*0x20 + -0x60);\n                                }\n                                unaff_RBX = iVar3 + 2;\n                                if (unaff_RBX <= uVar8) {\n                                    iVar3 = (uVar8 - iVar3) + -2;\n                                    iVar2 = iVar3;\n                                    if (*(*0x20 + -0x38) < iVar3) {\n                                        iVar2 = *(*0x20 + -0x38);\n                                    }\n                                    if (*(*0x20 + 8) == puVar1 + (unaff_RBX & -iVar3 >> 0x3f)) {\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x4718ce;\n                                        fcn.0045ddc0(iVar2);\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                        puVar1 = *(*0x20 + -0x10);\n                                        uVar8 = *(*0x20 + -0x50);\n                                    }\n                                    if (unaff_RBX < 1) {\n                                        return puVar1;\n                                    }\n                                    if (*(*0x20 + -0x68) <= uVar8) {\n                                        uVar8 = uVar8 - *(*0x20 + -0x48);\n                                        uVar7 = uVar8 - 2;\n                                        iVar2 = *(*0x20 + -0x58);\n                                        uVar9 = iVar2 + 1;\n                                        arg1_00 = uVar7;\n                                        if (uVar9 < uVar7) {\n                                            arg1_00 = uVar9;\n                                        }\n                                        puVar6 = puVar1 + (*(*0x20 + -0x68) & -uVar7 >> 0x3f);\n                                        if (*0x20 + -0x2c == puVar6) {\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0x70) = uVar9;\n                                            *(*0x20 + -0x38) = uVar7;\n                                            *(*0x20 + -0x18) = puVar6;\n                                            *(*0x20 + -0x48) = uVar8;\n                                            *(*0x20 + -0xb8) = 0x471957;\n                                            fcn.0045ddc0(arg1_00);\n                                            uVar9 = *(*0x20 + -0x70);\n                                            uVar7 = *(*0x20 + -0x38);\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                            unaff_RBX = *(*0x20 + -0x40);\n                                            puVar6 = *(*0x20 + -0x18);\n                                            uVar8 = *(*0x20 + -0x48);\n                                            iVar2 = *(*0x20 + -0x58);\n                                            puVar1 = *(*0x20 + -0x10);\n                                        }\n                                        if (bVar10 || bVar11) {\n                                            uVar8 = (uVar8 - iVar2) - 3;\n                                            uVar7 = uVar8;\n                                            if (unaff_RBX < uVar8) {\n                                                uVar7 = unaff_RBX;\n                                            }\n                                            if (*(*0x20 + 0x18) != puVar6 + (-uVar8 >> 0x3f & uVar9)) {\n                                                *(*0x20 + -0xb8) = 0x4719bf;\n                                                fcn.0045ddc0(uVar7);\n                                                puVar1 = *(*0x20 + -0x10);\n                                            }\n                                            return puVar1;\n                                        }\n                                        *(*0x20 + -0xb8) = 0x4719e5;\n                                        fcn.0045d540(uVar7);\n                                    }\n                                    *(*0x20 + -0xb8) = 0x4719f0;\n                                    fcn.0045d540(uVar8);\n                                }\n                                *(*0x20 + -0xb8) = 0x4719f8;\n                                fcn.0045d540(uVar8);\n                            }\n                            *(*0x20 + -0xb8) = 0x4719ff;\n                            fcn.0045d480(uVar8);\n                        }\n                        *(*0x20 + -0xb8) = 0x471a0c;\n                        fcn.0045d480(10);\ncode_r0x00471a0c:\n                        *(*0x20 + -0xb8) = 0x471a19;\n                        fcn.0045d480(10);\n                    }\n                    *(*0x20 + -0xb8) = 0x471a26;\n                    fcn.0045d480(10);\ncode_r0x00471a26:\n                    *(*0x20 + -0xb8) = 0x471a33;\n                    fcn.0045d480(10);\n                    arg2 = unaff_RBX;\n                }\n                *(*0x20 + -0xb8) = 0x471a5b;\n                fcn.004484e0(0x20, arg2, 0x4a6253, 3);\n                *(*0x20 + -0xb8) = 0x471a65;\n                fcn.00409a20();\n                *(*0x20 + -0xb8) = 0x471a74;\n                in_RAX = fcn.004327c0();\n            }\n            arg1 = 0x21;\n            unaff_SIL = 0;\n            *(*0x20 + -0xb8) = 0x471a9c;\n            fcn.004484e0(0x21, arg2, 0x4a6253, 3);\n            *(*0x20 + -0xb8) = 0x471aa5;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0xb8) = 0x471ab4;\n            iVar2 = fcn.004327c0();\n            unaff_RDI = in_RAX;\n        }\n        *(puVar5 + 8) = iVar2;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x471ad3;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2744
    },
    "004071c0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004071c0(uint64_t param_1)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uchar *puVar8;\n    uchar *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar *arg1;\n    uchar *puVar10;\n    uint8_t unaff_DIL;\n    uchar *puVar11;\n    uint64_t arg1_00;\n    char cVar12;\n    uchar (*pauVar13) [16];\n    int64_t unaff_R14;\n    uchar *unaff_R15;\n    uchar in_XMM15 [16];\n    uint64_t uVar7;\n    \ncode_r0x004071c0:\n    cVar12 = param_1;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -200 && *0x20 + -200 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x148;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        uVar6 = unaff_DIL;\n        if (uVar6 < 9) {\n            iVar5 = uVar6 * 0x10;\n            iVar4 = *(iVar5 + 0x540ec0);\n            arg1_00 = *(iVar5 + 0x540ec8);\n            if ((cVar12 == '\\0') || (-1 < in_RAX)) {\ncode_r0x0040723a:\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x101) = cVar12;\n                *(*0x20 + -0xc0) = unaff_RBX;\n                *(*0x20 + -200) = in_RAX;\n                *(*0x20 + -0xf8) = arg1_00;\n                *(*0x20 + -0x8c) = 0;\n                *(*0x20 + -0x158) = unaff_RBP;\n                *(*0x20 + -0x150) = 0x40728f;\n                puVar1 = fcn.0045d72b();\n                unaff_RBP = *(*0x20 + -0x158);\n                *(*0x20 + -0x8c) = 0x20656d69746e7572;\n                *(*0x20 + -0x85) = 0x203a726f72726520;\n                uVar6 = 0;\n                arg1 = 0xf;\n                puVar11 = 0x64;\n                puVar3 = *0x20 + -0x8c;\n                do {\n                    if (arg1_00 <= uVar6) {\n                        *(*0x20 + -0x150) = 0x4074d2;\n                        fcn.00448800(arg1);\n                        return;\n                    }\n                    if (arg1_00 <= uVar6) goto code_r0x00407790;\n                    *(*0x20 + -0xf0) = arg1;\n                    cVar12 = *(iVar4 + uVar6);\n                    if (cVar12 == '%') {\n                        uVar7 = uVar6 + 1;\n                        if (arg1_00 <= uVar7) goto code_r0x00407785;\n                        *(*0x20 + -0xd0) = uVar7;\n                        cVar12 = *(uVar6 + 1 + iVar4);\n                        if (cVar12 == 'x') {\n                            if ((param_1 != '\\0') && (puVar1 < 0)) {\n                                puVar8 = arg1 + 1;\n                                puVar10 = arg1;\n                                puVar2 = puVar3;\n                                if (puVar11 < puVar8) {\n                                    *(*0x20 + -0x150) = 0x4073b0;\n                                    puVar2 = fcn.00444ac0(arg1);\n                                    puVar8 = puVar3 + 1;\n                                    unaff_RBX = *(*0x20 + -0xc0);\n                                    puVar10 = *(*0x20 + -0xf0);\n                                    arg1_00 = *(*0x20 + -0xf8);\n                                    puVar1 = *(*0x20 + -200);\n                                    puVar11 = arg1;\n                                }\n                                puVar2[puVar10] = 0x2d;\n                                puVar1 = -puVar1;\n                                arg1 = puVar8;\n                                puVar3 = puVar2;\n                            }\n                            *(*0x20 + -0xb4) = 0;\n                            *(*0x20 + -0xb0) = in_XMM15;\n                            uVar6 = 0x13;\n                            while (cVar12 = puVar1,  0x9 < puVar1) {\n                                puVar1 = puVar1 / 10;\n                                cVar12 = cVar12 + puVar1 * -10;\n                                if (0x13 < uVar6) goto code_r0x00407778;\ncode_r0x0040763f:\n                                *(*0x20 + (uVar6 - 0xb4)) = cVar12 + '0';\n                                uVar6 = uVar6 - 1;\n                                unaff_R15 = arg1;\n                            }\n                            if (0x13 < uVar6) goto code_r0x0040776b;\n                            *(*0x20 + (uVar6 - 0xb4)) = cVar12 + '0';\n                            *(*0x20 + -0xf0) = arg1 + (0x14 - uVar6);\n                            iVar4 = uVar6 - 0x14;\n                            unaff_R15 = *0x20 + ((uVar6 & iVar4 >> 0x3f) - 0xb4);\n                            if (puVar11 < arg1 + (0x14 - uVar6)) {\n                                *(*0x20 + -0xd8) = iVar4;\n                                *(*0x20 + -0x20) = unaff_R15;\n                                *(*0x20 + -0xe0) = arg1;\n                                *(*0x20 + -0x150) = 0x4076f3;\n                                puVar3 = fcn.00444ac0(arg1);\n                                unaff_R15 = *(*0x20 + -0x20);\n                                iVar4 = *(*0x20 + -0xd8);\n                                puVar11 = arg1;\n                            }\n                            *(*0x20 + -0x10) = puVar3;\n                            *(*0x20 + -0xe8) = puVar11;\n                            *(*0x20 + -0x150) = 0x40772d;\n                            fcn.0045ddc0(-iVar4);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            uVar7 = *(*0x20 + -0xd0);\n                            puVar11 = *(*0x20 + -0xe8);\n                            arg1 = *(*0x20 + -0xf0);\n                            puVar3 = *(*0x20 + -0x10);\n                        }\n                        else if (cVar12 == 'y') {\n                            if (unaff_RBX < 0) {\n                                puVar8 = arg1 + 1;\n                                puVar10 = arg1;\n                                puVar2 = puVar3;\n                                if (puVar11 < puVar8) {\n                                    *(*0x20 + -0x150) = 0x40744c;\n                                    puVar2 = fcn.00444ac0(arg1);\n                                    puVar8 = puVar3 + 1;\n                                    unaff_RBX = *(*0x20 + -0xc0);\n                                    puVar10 = *(*0x20 + -0xf0);\n                                    arg1_00 = *(*0x20 + -0xf8);\n                                    puVar1 = *(*0x20 + -200);\n                                    puVar11 = arg1;\n                                }\n                                puVar2[puVar10] = 0x2d;\n                                unaff_RBX = -unaff_RBX;\n                                arg1 = puVar8;\n                                puVar3 = puVar2;\n                            }\n                            cVar12 = puVar1;\n                            *(*0x20 + -0xa0) = 0;\n                            pauVar13 = *0x20 + -0x9c;\n                            *pauVar13 = in_XMM15;\n                            uVar6 = 0x13;\n                            while (0x9 < unaff_RBX) {\n                                puVar1 = unaff_RBX / 10;\n                                unaff_RBX = unaff_RBX % 10;\n                                if (0x13 < uVar6) goto code_r0x00407632;\n                                pauVar13 = unaff_RBX + 0x30;\n                                *(*0x20 + (uVar6 - 0xa0)) = pauVar13;\n                                uVar6 = uVar6 - 1;\n                                unaff_RBX = puVar1;\n                                unaff_R15 = arg1;\n                            }\n                            if (0x13 < uVar6) {\n                                *(*0x20 + -0x150) = 0x407632;\n                                fcn.0045d480(0x14);\n                                puVar1 = arg1;\n                                arg1 = unaff_R15;\n                                cVar12 = pauVar13;\ncode_r0x00407632:\n                                *(*0x20 + -0x150) = 0x40763f;\n                                fcn.0045d480(0x14);\n                                goto code_r0x0040763f;\n                            }\n                            *(*0x20 + (uVar6 - 0xa0)) = unaff_RBX + '0';\n                            *(*0x20 + -0xf0) = arg1 + (0x14 - uVar6);\n                            iVar4 = uVar6 - 0x14;\n                            unaff_R15 = *0x20 + ((uVar6 & iVar4 >> 0x3f) - 0xa0);\n                            if (puVar11 < arg1 + (0x14 - uVar6)) {\n                                *(*0x20 + -0xd8) = iVar4;\n                                *(*0x20 + -0xe0) = arg1;\n                                *(*0x20 + -0x28) = unaff_R15;\n                                *(*0x20 + -0x150) = 0x4075ac;\n                                puVar3 = fcn.00444ac0(arg1);\n                                iVar4 = *(*0x20 + -0xd8);\n                                unaff_R15 = *(*0x20 + -0x28);\n                                puVar11 = arg1;\n                            }\n                            *(*0x20 + -0x10) = puVar3;\n                            *(*0x20 + -0xe8) = puVar11;\n                            *(*0x20 + -0x150) = 0x4075e5;\n                            fcn.0045ddc0(-iVar4);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            uVar7 = *(*0x20 + -0xd0);\n                            puVar11 = *(*0x20 + -0xe8);\n                            arg1 = *(*0x20 + -0xf0);\n                            puVar3 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        uVar7 = uVar6;\n                        puVar10 = arg1;\n                        puVar8 = arg1 + 1;\n                        if (puVar11 < arg1 + 1) {\n                            *(*0x20 + -0x100) = uVar6;\n                            *(*0x20 + -0x102) = cVar12;\n                            *(*0x20 + -0x150) = 0x40731e;\n                            puVar2 = fcn.00444ac0(arg1);\n                            puVar8 = puVar3 + 1;\n                            uVar7 = *(*0x20 + -0x100);\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            puVar10 = *(*0x20 + -0xf0);\n                            arg1_00 = *(*0x20 + -0xf8);\n                            iVar4 = *(*0x20 + -0x18);\n                            cVar12 = *(*0x20 + -0x102);\n                            puVar1 = *(*0x20 + -200);\n                            param_1 = *(*0x20 + -0x101);\n                            puVar11 = arg1;\n                            puVar3 = puVar2;\n                        }\n                        arg1 = puVar8;\n                        puVar3[puVar10] = cVar12;\n                    }\n                    uVar6 = uVar7 + 1;\n                } while( true );\n            }\n            if (uVar6 < 8) {\n                iVar4 = *(iVar5 + 0x540e40);\n                arg1_00 = *(iVar5 + 0x540e48);\n                goto code_r0x0040723a;\n            }\n            goto code_r0x0040779b;\n        }\n        goto code_r0x004077a8;\n    }\n    goto code_r0x004077b6;\ncode_r0x0040776b:\n    *(*0x20 + -0x150) = 0x407778;\n    fcn.0045d480(0x14);\n    arg1 = unaff_R15;\ncode_r0x00407778:\n    *(*0x20 + -0x150) = 0x407785;\n    fcn.0045d480(0x14);\n    unaff_R15 = arg1;\ncode_r0x00407785:\n    *(*0x20 + -0x150) = 0x407790;\n    fcn.0045d480(arg1_00);\ncode_r0x00407790:\n    unaff_DIL = puVar11;\n    *(*0x20 + -0x150) = 0x40779b;\n    fcn.0045d480(arg1_00);\ncode_r0x0040779b:\n    *(*0x20 + -0x150) = 0x4077a8;\n    fcn.0045d480(8);\ncode_r0x004077a8:\n    cVar12 = '\\t';\n    *(*0x20 + -0x150) = 0x4077b5;\n    in_RAX = fcn.0045d480(9);\ncode_r0x004077b6:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    puVar9[0x18] = cVar12;\n    puVar9[0x19] = unaff_DIL;\n    *(puVar9 + -8) = 0x4077ce;\n    fcn.0045ad80();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    param_1 = puVar9[0x18];\n    unaff_DIL = puVar9[0x19];\n    *0x20 = puVar9;\n    goto code_r0x004071c0;\n}\n",
        "token_count": 3502
    },
    "004543c0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004543c0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "00463f20": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463f20(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    uVar4 = 0;\n    while( true ) {\n        uVar5 = -(unaff_RBX < 0x40);\n        uVar7 = uVar6;\n        if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) goto code_r0x00463f9e;\n        if (*(in_RAX + 800) == uVar4 || *(in_RAX + 800) < uVar4) break;\n        if (799 < uVar4) {\n            fcn.0045d480(800);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar6 = (*(uVar4 + in_RAX) + uVar6 * 10) - 0x30;\n        uVar4 = uVar4 + 1;\n    }\n    if (uVar6 == 0) {\n        *(in_RAX + 800) = 0;\n        return;\n    }\ncode_r0x004640ef:\n    uVar7 = uVar6;\n    if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) {\ncode_r0x00463f9e:\n        *(in_RAX + 0x328) = (*(in_RAX + 0x328) - uVar4) + 1;\n        uVar3 = unaff_RBX;\n        uVar6 = (1 << (uVar3 & 0x3f) & uVar5) - 1;\n        uVar9 = 0;\n        for (; *(in_RAX + 800) != uVar4 && uVar4 <= *(in_RAX + 800); uVar4 = uVar4 + 1) {\n            if (799 < uVar4) goto code_r0x004640d5;\n            uVar1 = *(uVar4 + in_RAX);\n            if (799 < uVar9) goto code_r0x004640c8;\n            *(in_RAX + uVar9) = (uVar7 >> (uVar3 & 0x3f) & uVar5) + 0x30;\n            uVar9 = uVar9 + 1;\n            uVar7 = (uVar1 + (uVar7 & uVar6) * 10) - 0x30;\n        }\n        while (uVar7 != 0) {\n            uVar8 = uVar7 >> (uVar3 & 0x3f) & uVar5;\n            uVar4 = uVar7 & uVar6;\n            if (uVar9 < 800) {\n                if (799 < uVar9) goto code_r0x004640bb;\n                *(in_RAX + uVar9) = uVar8 + '0';\n                uVar9 = uVar9 + 1;\n            }\n            else if (uVar8 != 0) {\n                *(in_RAX + 0x331) = 1;\n            }\n            uVar7 = uVar4 * 10;\n        }\n        *(in_RAX + 800) = uVar9;\n        do {\n            uVar4 = *(in_RAX + 800);\n            if (uVar4 < 1) {\ncode_r0x00464097:\n                if (uVar4 == 0) {\n                    *(in_RAX + 0x328) = 0;\n                }\n                return;\n            }\n            if (799 < uVar4 - 1) goto code_r0x004640ae;\n            uVar3 = *((uVar4 - 1) + in_RAX);\n            uVar5 = uVar3;\n            if (uVar3 != 0x30) goto code_r0x00464097;\n            *(in_RAX + 800) = uVar4 - 1;\n        } while( true );\n    }\n    goto code_r0x004640e5;\ncode_r0x004640ae:\n    fcn.0045d480(800);\ncode_r0x004640bb:\n    fcn.0045d480(800);\ncode_r0x004640c8:\n    fcn.0045d480(800);\ncode_r0x004640d5:\n    unaff_RBX = 800;\n    in_RAX = fcn.0045d480(800);\ncode_r0x004640e5:\n    uVar6 = uVar6 * 10;\n    uVar4 = uVar4 + 1;\n    goto code_r0x004640ef;\n}\n",
        "token_count": 1109
    },
    "00464120": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464120(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    \n    uVar7 = *0x53d2d8;\n    if (unaff_RBX < *0x53d2d8) {\n        iVar9 = *(*0x53d2d0 + unaff_RBX * 0x18);\n        uVar7 = *(in_RAX + 800);\n        if (uVar7 < 0x321) {\n            for (iVar6 = 0; iVar6 < *(*0x53d2d0 + 0x10 + unaff_RBX * 0x18); iVar6 = iVar6 + 1) {\n                if (uVar7 <= iVar6) {\ncode_r0x0046419b:\n                    iVar9 = iVar9 + -1;\n                    break;\n                }\n                uVar1 = *(*(*0x53d2d0 + 8 + unaff_RBX * 0x18) + iVar6);\n                if (uVar1 != *(iVar6 + in_RAX)) {\n                    if (*(iVar6 + in_RAX) < uVar1) goto code_r0x0046419b;\n                    break;\n                }\n            }\n            uVar4 = 0;\n            uVar5 = iVar9 + uVar7;\n            while (uVar7 = uVar7 - 1,  -1 < uVar7) {\n                uVar8 = uVar4 + (*(in_RAX + uVar7) - 0x30 << (unaff_RBX & 0x3f) & -(unaff_RBX < 0x40));\n                uVar4 = uVar8 / 10;\n                uVar8 = uVar8 % 10;\n                uVar3 = uVar5 - 1;\n                if (uVar3 < 800) {\n                    if (799 < uVar3) goto code_r0x0046431a;\n                    *((uVar5 - 1) + in_RAX) = uVar8 + '0';\n                    uVar5 = uVar3;\n                }\n                else {\n                    uVar5 = uVar3;\n                    if (uVar8 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            while (uVar4 != 0) {\n                uVar8 = uVar4 / 10;\n                uVar3 = uVar4 % 10;\n                uVar7 = uVar5 - 1;\n                uVar4 = uVar8;\n                if (uVar7 < 800) {\n                    if (799 < uVar7) goto code_r0x00464310;\n                    *((uVar5 - 1) + in_RAX) = uVar3 + '0';\n                    uVar5 = uVar7;\n                }\n                else {\n                    uVar5 = uVar7;\n                    if (uVar3 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            iVar6 = *(in_RAX + 800) + iVar9;\n            *(in_RAX + 800) = iVar6;\n            if (799 < iVar6) {\n                *(in_RAX + 800) = 800;\n            }\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + iVar9;\ncode_r0x004642c5:\n            iVar9 = *(in_RAX + 800);\n            if (0 < iVar9) {\n                if (799 < iVar9 - 1U) {\n                    fcn.0045d480(800);\ncode_r0x00464310:\n                    fcn.0045d480(800);\ncode_r0x0046431a:\n                    uVar7 = 800;\n                    fcn.0045d480(800);\n                    goto code_r0x00464325;\n                }\n                if (*(iVar9 + -1 + in_RAX) == '0') goto code_r0x004642be;\n            }\n            if (iVar9 == 0) {\n                *(in_RAX + 0x328) = 0;\n            }\n            return;\n        }\ncode_r0x00464325:\n        fcn.0045d4c0(uVar7, 800);\n    }\n    fcn.0045d4a0(uVar7);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\ncode_r0x004642be:\n    *(in_RAX + 800) = iVar9 - 1U;\n    goto code_r0x004642c5;\n}\n",
        "token_count": 1085
    },
    "00471ba0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00471ba0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "00449240": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00449240(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x004492f9;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x004492f9:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 392
    },
    "0041c180": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041c180(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041c180:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041c219:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41c27c;\n                    iVar3 = fcn.00422980();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x30) < arg3 || *(iVar3 + 0x30) == arg3) &&\n                           ((*((uVar4 >> 0x23) + *(iVar3 + 0x48)) & 1 << (uVar4 >> 0x20 & 7)) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41c316;\n                            fcn.0041c440(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41c24c;\n                    fcn.0041f8a0(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041c366;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041c219;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041c378;\ncode_r0x0041c366:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41c377;\n    in_RAX = fcn.00432f60();\ncode_r0x0041c378:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41c396;\n    fcn.0045ad80();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041c180;\n}\n",
        "token_count": 1522
    },
    "00455700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.00455700(uint64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t *noname_0;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (puVar14 = *0x20,  *0x20 + -0xa0 < *(unaff_R14 + 0x10) || *0x20 + -0xa0 == *(unaff_R14 + 0x10)) {\ncode_r0x0045637e:\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x456392;\n        fcn.0045ad80();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    }\n    puVar14 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x20) = arg1;\n    *(*0x20 + -0x18) = in_RAX;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *(*0x20 + -0x128) = 0x455768;\n    fcn.0040d100(*0x20 + -0x18);\n    if (arg1 != '\\0') {\n        return 1;\n    }\n    *(*0x20 + -0x18) = *(*0x20 + 8);\n    *(*0x20 + -0x10) = *(*0x20 + 0x10);\n    *(*0x20 + -0x128) = 0x4557ac;\n    fcn.0040d540(*0x20 + -0x18);\n    iVar12 = *(*0x20 + 0x10);\n    if (*(*0x20 + 8) == iVar12) {\n        return 1;\n    }\n    uVar3 = *(*(*0x20 + 8) + 0x17);\n    if ((*(iVar12 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n        return 0;\n    }\n    *(*0x20 + -0x105) = uVar3;\n    *(*0x20 + -0x106) = uVar3 & 0x1f;\n    *(*0x20 + -0x128) = 0x4557f6;\n    uVar8 = fcn.00454320();\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xb8) = uVar3;\n    *(*0x20 + -0x128) = 0x455810;\n    unaff_RBX = fcn.00454320();\n    if (uVar3 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45582a;\n    cVar7 = fcn.00402180(*(*0x20 + -0xb8), iVar12);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45584e;\n    uVar8 = fcn.004543c0();\n    *(*0x20 + -0x80) = uVar8;\n    *(*0x20 + -0x128) = 0x455865;\n    iVar9 = fcn.004543c0();\n    noname_0 = *(*0x20 + -0x80);\n    if (noname_0 == NULL) {\n        if (iVar9 != 0) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            return 0;\n        }\n        *(*0x20 + -0x88) = iVar9;\n        uVar6 = *noname_0;\n        *(*0x20 + -0x128) = 0x4558b3;\n        fcn.00454500();\n        *(*0x20 + -0x128) = 0x4558b8;\n        uVar8 = fcn.00454d60(noname_0, iVar12, in_R8, in_R9);\n        *(*0x20 + -0x68) = uVar8;\n        *(*0x20 + -0xf0) = uVar6;\n        uVar6 = **(*0x20 + -0x88);\n        uVar15 = uVar6;\n        *(*0x20 + -0x128) = 0x4558de;\n        fcn.00454500();\n        *(*0x20 + -0x128) = 0x4558e5;\n        unaff_RBX = fcn.00454d60(uVar15, iVar12, in_R8, in_R9);\n        if (uVar6 != *(*0x20 + -0xf0)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x455905;\n        cVar7 = fcn.00402180(*(*0x20 + -0xf0), iVar12);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n    }\n    uVar3 = *(*0x20 + -0x106);\n    if (uVar3 - 1 < 0x10) {\n        return 1;\n    }\n    if (uVar3 < 0x16) {\n        if (0x12 < uVar3) {\n            if (uVar3 == 0x13) {\n                iVar12 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar12 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar12 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar12 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar12 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    iVar9 = in_R8 + iVar9;\n                    *(*0x20 + -0xa0) = iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar15 = 0;\n                    while (uVar16 = uVar5,  uVar15 < arg1) {\n                        if (uVar16 <= uVar15) goto code_r0x0045636c;\n                        *(*0x20 + -0xd0) = uVar15;\n                        iVar11 = *(iVar9 + uVar15 * 8);\n                        *(*0x20 + -0x128) = 0x4561fe;\n                        cVar7 = fcn.00455700(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x0045619d:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar9 = *(*0x20 + -0xa0);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar12 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        unaff_RBX = iVar11;\n                        uVar15 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar12 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar12 + 0x30);\n                    uVar15 = (*(iVar12 + 0x32) & 0x7fff) + *(iVar12 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar15) {\n                        iVar11 = uVar15 - uVar16;\n                        iVar12 = iVar12 + iVar9 + (uVar16 << 3 & uVar16 - 0x100000 >> 0x3f);\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar15 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x100) = iVar11;\n                            *(*0x20 + -0xa8) = iVar12;\n                            uVar15 = uVar15 - uVar16;\n                            *(*0x20 + -0xf8) = uVar15;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar10 = 0;\n                            while( true ) {\n                                if (iVar11 <= uVar10) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar12 + uVar10 * 8);\n                                if (uVar15 <= uVar10) break;\n                                *(*0x20 + -0xe0) = uVar10;\n                                unaff_RBX = *(uVar16 + uVar10 * 8);\n                                *(*0x20 + -0x128) = 0x456325;\n                                cVar7 = fcn.00455700(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar10 = *(*0x20 + -0xe0) + 1;\n                                iVar11 = *(*0x20 + -0x100);\n                                uVar15 = *(*0x20 + -0xf8);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar12 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x456358;\n                            fcn.0045d480(uVar15);\n                        }\n                        *(*0x20 + -0x128) = 0x456365;\n                        fcn.0045d540(uVar15);\n                    }\n                    *(*0x20 + -0x128) = 0x45636c;\n                    fcn.0045d540(uVar15);\ncode_r0x0045636c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x456373;\n                    fcn.0045d480(arg1);\n                }\n                *(*0x20 + -0x128) = 0x45637d;\n                in_RAX = fcn.0045d4c0(arg1, 0x100000);\n                goto code_r0x0045637e;\n            }\n            if (uVar3 != 0x14) {\n                *(*0x20 + -0x128) = 0x455abb;\n                cVar7 = fcn.00455700(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar15 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x455ae8;\n                    uVar15 = fcn.00455700(*(*0x20 + -0x20));\n                }\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x455a06;\n            uVar8 = fcn.00454d60(*(*0x20 + 8), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x455a27;\n            iVar11 = fcn.00454d60(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (unaff_RBX == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x455a45;\n                cVar7 = fcn.00402180(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar12 = *(*0x20 + 8);\n                    iVar9 = *(iVar12 + 0x40);\n                    iVar13 = *(*0x20 + 0x10);\n                    if (*(iVar13 + 0x40) != iVar9) {\n                        return 0;\n                    }\n                    *(*0x20 + -0xb8) = iVar9;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (iVar9 <= uVar15) {\n                            return 1;\n                        }\n                        iVar9 = *(iVar12 + 0x38);\n                        uVar16 = *(iVar12 + 0x40);\n                        if (uVar16 <= uVar15) break;\n                        iVar12 = iVar9 + uVar15 * 8;\n                        uVar16 = *(iVar13 + 0x40);\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x128) = 0x456198;\n                            fcn.0045d480(uVar16);\n                            break;\n                        }\n                        *(*0x20 + -0x40) = *(iVar13 + 0x38);\n                        *(*0x20 + -0x48) = iVar9;\n                        *(*0x20 + -0xd8) = uVar15;\n                        *(*0x20 + -0x78) = iVar12;\n                        *(*0x20 + -0x128) = 0x456007;\n                        uVar8 = fcn.00454500();\n                        *(*0x20 + -0x50) = uVar8;\n                        iVar11 = *(*0x20 + -0xd8);\n                        iVar13 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x90) = iVar13 + iVar11 * 8;\n                        uVar16 = *(iVar13 + iVar11 * 8);\n                        *(*0x20 + -0x128) = 0x456033;\n                        uVar8 = fcn.00454500();\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x128) = 0x456048;\n                        uVar8 = fcn.00454d60(iVar11, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0xc0) = uVar16;\n                        *(*0x20 + -0x128) = 0x456065;\n                        iVar11 = fcn.00454d60(iVar11, iVar13, iVar9, iVar12);\n                        uVar15 = *(*0x20 + -0xc0);\n                        if (uVar16 != uVar15) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x456085;\n                        cVar7 = fcn.00402180(uVar15, iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x45609a;\n                        uVar8 = fcn.00454f20(uVar15, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0xc0) = iVar11;\n                        *(*0x20 + -0x128) = 0x4560b4;\n                        fcn.00454f20(uVar15, iVar13, iVar9, iVar12);\n                        if (iVar11 != *(*0x20 + -0xc0)) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x4560d9;\n                        cVar7 = fcn.00402180(*(*0x20 + -0xc0), iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x4560fb;\n                        uVar8 = fcn.004547a0();\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0x128) = 0x456125;\n                        iVar11 = fcn.004547a0();\n                        *(*0x20 + -0x128) = 0x45613d;\n                        cVar7 = fcn.00455700(*(*0x20 + -0x20));\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00455f90:\n                        uVar15 = *(*0x20 + -0xd8) + 1;\n                        iVar9 = *(*0x20 + -0xb8);\n                        iVar13 = *(*0x20 + 0x10);\n                        iVar12 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x128) = 0x45619d;\n                    fcn.0045d480(uVar16);\n                    goto code_r0x0045619d;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x11) {\n            *(*0x20 + -0x128) = 0x455b74;\n            cVar7 = fcn.00455700(*(*0x20 + -0x20));\n            if (cVar7 == '\\0') {\n                uVar15 = 0;\n            }\n            else {\n                uVar15 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                         *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n            }\n            return uVar15 & 0xffffffff;\n        }\n        if (uVar3 == 0x12) {\n            if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                *(*0x20 + -0x128) = 0x455b3f;\n                uVar15 = fcn.00455700(*(*0x20 + -0x20));\n            }\n            else {\n                uVar15 = 0;\n            }\n            return uVar15;\n        }\n    }\n    else {\n        if (uVar3 < 0x18) {\n            if (uVar3 == 0x16) {\n                *(*0x20 + -0x128) = 0x455bda;\n                uVar15 = fcn.00455700(*(*0x20 + -0x20));\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x455c0f;\n            uVar15 = fcn.00455700(*(*0x20 + -0x20));\n            return uVar15;\n        }\n        if (uVar3 == 0x18) {\n            return 1;\n        }\n        if (uVar3 == 0x19) {\n            iVar12 = *(*(*0x20 + 0x10) + 0x40);\n            iVar9 = *(*0x20 + 8);\n            if (*(iVar9 + 0x40) != iVar12) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x455c57;\n            uVar8 = fcn.00454d60(*(*0x20 + 0x10), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = iVar9;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x455c78;\n            fcn.00454d60(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (iVar9 == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x455c95;\n                cVar7 = fcn.00402180(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar9 = *(*0x20 + 8);\n                    iVar11 = *(iVar9 + 0x40);\n                    *(*0x20 + -0xb8) = iVar11;\n                    iVar12 = *(*0x20 + 0x10);\n                    uVar15 = 0;\n                    goto code_r0x00455dc3;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x1a) {\n            return 1;\n        }\n    }\n    *(*0x20 + -0x128) = 0x455d65;\n    fcn.004346e0();\n    *(*0x20 + -0x128) = 0x455d76;\n    fcn.00434fe0();\n    *(*0x20 + -0x128) = 0x455d85;\n    fcn.00434ce0();\n    *(*0x20 + -0x128) = 0x455d8a;\n    fcn.00434940();\n    *(*0x20 + -0x128) = 0x455d8f;\n    fcn.00434760();\n    *(*0x20 + -0x128) = 0x455da5;\n    fcn.00432f60();\n    while( true ) {\n        uVar15 = *(*0x20 + -0xe8) + 1;\n        iVar11 = *(*0x20 + -0xb8);\n        iVar12 = *(*0x20 + 0x10);\n        iVar9 = *(*0x20 + 8);\ncode_r0x00455dc3:\n        if (iVar11 <= uVar15) {\n            return 1;\n        }\n        uVar8 = *(iVar9 + 0x38);\n        uVar16 = *(iVar9 + 0x40);\n        if (uVar16 <= uVar15) break;\n        iVar13 = uVar15 * 3;\n        arg4 = *(iVar12 + 0x38);\n        uVar16 = *(iVar12 + 0x40);\n        if (uVar16 <= uVar15) {\n            *(*0x20 + -0x128) = 0x455f8b;\n            fcn.0045d480(uVar16);\n            break;\n        }\n        *(*0x20 + -0xc0) = iVar13;\n        *(*0x20 + -0x30) = uVar8;\n        *(*0x20 + -0x38) = arg4;\n        *(*0x20 + -0xe8) = uVar15;\n        *(*0x20 + -0x128) = 0x455e15;\n        uVar8 = fcn.00454d60(uVar16, iVar9, iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar11;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x455e3b;\n        fcn.00454d60(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar11 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x455e59;\n        cVar7 = fcn.00402180(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        iVar12 = *(*(*0x20 + -0x38) + 8 + *(*0x20 + -0xc0) * 8);\n        *(*0x20 + -0x128) = 0x455e94;\n        cVar7 = fcn.00455700(*(*0x20 + -0x20));\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x455eb2;\n        uVar8 = fcn.00454e20(*(*0x20 + -0xc0), *(*0x20 + -0x30), iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar12;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x455ed8;\n        fcn.00454e20(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar12 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x455ef5;\n        cVar7 = fcn.00402180(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        if (*(*(*0x20 + -0x38) + 0x10 + *(*0x20 + -0xc0) * 8) != *(*(*0x20 + -0x30) + 0x10 + *(*0x20 + -0xc0) * 8)) {\n            return 0;\n        }\n    }\n    *(*0x20 + -0x128) = 0x455f90;\n    fcn.0045d480(uVar16);\n    goto code_r0x00455f90;\n}\n",
        "token_count": 6369
    },
    "00440e20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00440e20(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x544d60;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544d70 == 0) {\n                return 0;\n            }\n            if (*0x598210 != 0) {\n                if (*0x598210 == -1) {\n                    iVar1 = -*0x544d70;\n                }\n                else {\n                    iVar1 = *0x544d70 / *0x598210;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x544d70 < iVar1 + 1) {\n                    iVar3 = *0x544d70;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x544d70 = *0x544d70 - iVar3;\n                if ((*0x544d60 != 0) && (*0x544d60 = *(*0x544d60 + 0xa0),  *0x544d60 == 0)) {\n                    *0x544d68 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x544d60 != 0) && (*0x544d60 = *(*0x544d60 + 0xa0),  *0x544d60 == 0)) {\n                        *0x544d68 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x440ee7;\n                    fcn.004412a0(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x440f3b;\n            in_RAX = fcn.00430980();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x440f4a;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 759
    },
    "0044b5e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044b5e0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044ada0(*(in_RAX + 0x18));\n        iVar2 = fcn.0044ada0(*(in_RAX + 0x1c));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044b4e0(uVar1);\n            return uVar3;\n        }\n        return 0x4a616e;\n    }\n    return 0x4a616e;\n}\n",
        "token_count": 269
    },
    "004547a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.004547a0(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x531960; iVar2 != 0; iVar2 = *(iVar2 + 0x210)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x004547fc;\n            }\n            iVar2 = 0;\ncode_r0x004547fc:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45487c;\n                fcn.0040a080();\n                *(*0x20 + -0x58) = 0x454893;\n                puVar1 = fcn.0040eb20(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x4548aa;\n                fcn.0040a2a0();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x4548b9;\n                fcn.004346e0();\n                *(*0x20 + -0x58) = 0x4548ca;\n                fcn.00434fe0();\n                *(*0x20 + -0x58) = 0x4548d6;\n                fcn.00434e40();\n                *(*0x20 + -0x58) = 0x4548e7;\n                fcn.00434fe0();\n                *(*0x20 + -0x58) = 0x4548f1;\n                fcn.00434e40();\n                *(*0x20 + -0x58) = 0x454905;\n                fcn.00434fe0();\n                *(*0x20 + -0x58) = 0x45490a;\n                fcn.00434760();\n                iVar2 = 0x531960;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x45493f;\n                    fcn.004346e0();\n                    *(*0x20 + -0x58) = 0x454950;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x58) = 0x45495a;\n                    fcn.00434e40();\n                    *(*0x20 + -0x58) = 0x45496b;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x58) = 0x454975;\n                    fcn.00434e40();\n                    *(*0x20 + -0x58) = 0x45497a;\n                    fcn.00434940();\n                    *(*0x20 + -0x58) = 0x45497f;\n                    fcn.00434760();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x210);\n                }\n                *(*0x20 + -0x58) = 0x4549a5;\n                fcn.00432f60();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x454825;\n                puVar1 = fcn.0040eb20(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x4549b4;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x4549c5;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x4549d1;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x4549e5;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x4549ef;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x454a05;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x454a0f;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x454a14;\n            fcn.00434940();\n            *(*0x20 + -0x58) = 0x454a19;\n            fcn.00434760();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x454a2a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x454a39;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1668
    },
    "0047b340": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0047b340(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = *0x543f78;\n            *(*0x20 + -0x60) = 0x47b37c;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x18) = *(*0x20 + 0x10);\n                *(*0x20 + -0x20) = *(*0x20 + 0x18);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x47b3c8;\n                uVar2 = fcn.0045f660(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x47b408;\n                    fcn.004099a0();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x47b438;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47b44d;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 650
    },
    "00404200": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00404200(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404120(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00404200(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00404365:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.00432f60();\n            arg1 = in_R8;\n            goto code_r0x00404365;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (0 < iVar1) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00404200(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 874
    },
    "00454440": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00454440(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = fcn.004543c0();\n    if (iVar1 != 0) {\n        fcn.00454500();\n        uVar2 = fcn.00454d60(param_1, param_2, param_3, param_4);\n        return uVar2;\n    }\n    uVar3 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar3 == '\\x14') {\n        uVar2 = fcn.00454d60(in_RAX, uVar3, param_3, param_4);\n        return uVar2;\n    }\n    if (uVar3 == '\\x19') {\n        uVar2 = fcn.00454d60(in_RAX, uVar3, param_3, param_4);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "00471cc0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t fcn.00471cc0(void)\n\n{\n    int64_t in_RAX;\n    \n    return *(in_RAX + 0x17) & 0x1f;\n}\n",
        "token_count": 43
    },
    "00471d60": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00471d60(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n        return *(in_RAX + 0x40);\n    }\n    fcn.00471ce0();\n    return unaff_RBX;\n}\n",
        "token_count": 142
    },
    "00471f20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00471f20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = 0;\n            *(*0x20 + -0xf8) = *0x20 + -8;\n            *(*0x20 + -0xf0) = 0x471f6f;\n            iVar1 = fcn.0045d72b();\n            unaff_RBP = *(*0x20 + -0xf8);\n            if ((*(iVar1 + 0x17) & 0x1f) == 0x19) {\n                *(*0x20 + -0xf0) = 0x471f8b;\n                fcn.004721a0();\n                *(*0x20 + -0x70) = *(*0x20 + -0xe8);\n                *(*0x20 + -0xf8) = unaff_RBP;\n                *(*0x20 + -0xf0) = 0x471fb0;\n                fcn.0045da8c();\n                *(*0x20 + 8) = *(*0x20 + -0x70);\n                *(*0x20 + -0xf8) = *(*0x20 + -0xf8);\n                *(*0x20 + -0xf0) = 0x471fef;\n                fcn.0045da8c();\n                return;\n            }\n            *(*0x20 + -0xf0) = 0x472008;\n            fcn.00471c20();\n            *(*0x20 + -0xf0) = 0x472025;\n            fcn.00448440(0x22);\n            *(*0x20 + -0xf0) = 0x47202a;\n            unaff_RBX = fcn.00409a20();\n            *(*0x20 + -0xf0) = 0x472039;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 0x70) = in_RAX;\n        *(puVar2 + 0x78) = unaff_RBX;\n        *(puVar2 + -8) = 0x472049;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 0x70);\n        unaff_RBX = *(puVar2 + 0x78);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 654
    },
    "00474580": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00474580(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar2 = arg1 & 0x1f;\n            if (uVar2 == 0x14) {\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x20) = unaff_RBX;\n                *(*0x20 + -0x40) = 0x474609;\n                iVar1 = fcn.00471d60();\n                if (iVar1 == 0) {\n                    iVar1 = **(*0x20 + -0x20);\n                    iVar3 = (*(*0x20 + -0x20))[1];\n                }\n                else {\n                    iVar1 = **(*0x20 + -0x20);\n                    iVar3 = (*(*0x20 + -0x20))[1];\n                    if (iVar1 != 0) {\n                        iVar1 = *(iVar1 + 8);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x10) = iVar3;\n                iVar1 = *(*0x20 + -0x18);\n                if (iVar1 == 0) {\n                    iVar1 = 0;\n                }\n                return iVar1;\n            }\n            if (uVar2 == 0x16) {\n                if ((arg1 >> 7 & 1) != 0) {\n                    unaff_RBX = *unaff_RBX;\n                }\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                return *(in_RAX + 0x30);\n            }\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x40) = 0x4746b0;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x12;\n            *unaff_RBX = 0x4a8b6d;\n            arg1 = *(*0x20 + -0x28);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x40) = 0x4746da;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4746ef;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 816
    },
    "00474860": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00474860(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            if (arg1 == 0x11) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return *(in_RAX + 0x30);\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                        return *(in_RAX + 0x30);\n                    }\n                }\n                else {\n                    if (arg1 == 0x18) {\n                        if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                            return *0x543a10;\n                        }\n                        *(*0x20 + -0x28) = 0x474985;\n                        fcn.004327c0();\n                    }\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x28) = 0x474996;\n                    puVar1 = fcn.0040c140();\n                    puVar1[1] = 0x13;\n                    *puVar1 = 0x4a912a;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar1[2] = arg1;\n                    *(*0x20 + -0x28) = 0x4749c5;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x28) = 0x4749d8;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c7dc8;\n            *(*0x20 + -0x28) = 0x4749eb;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x474a05;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 802
    },
    "00474a20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00474a20(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((unaff_DIL == '\\0') || ((arg1 & 0x60) == 0)) {\n                    if ((arg1 >> 9 & 1) != 0) {\n                        unaff_RBX = 0x9;\n                        *(*0x20 + -0x40) = 0x474a7d;\n                        fcn.00471120(in_RAX);\n                        arg1 = in_RAX;\n                    }\n                    if ((arg1 & 0x1f) == 0x14) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x40) = 0x474a97;\n                        iVar1 = fcn.004751e0(arg1);\n                        if (iVar1 != 0) {\n                            iVar1 = **(*0x20 + -0x10);\n                            if (iVar1 != 0) {\n                                iVar1 = *(iVar1 + 8);\n                            }\n                            return iVar1;\n                        }\n                        return **(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x40) = 0x474adc;\n                    iVar1 = fcn.00472ee0(arg1);\n                    return iVar1;\n                }\n                *(*0x20 + -0x40) = 0x474af9;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x40) = 0x474b05;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4aa4fc;\n            *unaff_RBX = 0x4aa4fc;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x40) = 0x474b2e;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        puVar2[0x20] = unaff_DIL;\n        *(puVar2 + -8) = 0x474b48;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_DIL = puVar2[0x20];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 792
    },
    "00474d20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00474d20(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong arg1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x18) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x474d56;\n                iVar1 = fcn.00457960();\n                if (iVar1 != 0) {\n                    iVar1 = *(**(*0x20 + 8) + 0x30);\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x18) = (*(*0x20 + 8))[2];\n                    *(*0x20 + -0x19) = *(iVar1 + 0x17);\n                    *(*0x20 + -0x40) = 0x474d86;\n                    arg1 = fcn.00457960();\n                    *(*0x20 + -0x40) = 0x474db8;\n                    fcn.00475120(arg1);\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x474dd5;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x40) = 0x474de8;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x474df3;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 498
    },
    "00474e00": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00474e00(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong arg1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x18) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x474e36;\n                iVar1 = fcn.00457960();\n                if (iVar1 != 0) {\n                    iVar1 = *(**(*0x20 + 8) + 0x38);\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x18) = (*(*0x20 + 8))[2];\n                    *(*0x20 + -0x19) = *(iVar1 + 0x17);\n                    *(*0x20 + -0x40) = 0x474e66;\n                    arg1 = fcn.00457980();\n                    *(*0x20 + -0x40) = 0x474e98;\n                    fcn.00475120(arg1);\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x474eb5;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x40) = 0x474ec8;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x474ed3;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 498
    },
    "004757c0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.004757c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    code *noname_1;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((arg1 & 0x1f) != 0) {\n        if ((arg1 & 0x1f) == 0x18) {\n            return *unaff_RBX;\n        }\n        iVar1 = fcn.004758a0(arg1);\n        noname_1 = *(iVar1 + 0xf8);\n        (*noname_1)();\n        uVar2 = fcn.004484e0(1, noname_1, 0x4a678d, 7);\n        return uVar2;\n    }\n    return 0x4a7e74;\n}\n",
        "token_count": 235
    },
    "004758a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.004758a0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((arg1 >> 9 & 1) == 0) {\n                    return 0x4c9f20;\n                }\n                uVar1 = arg1 >> 10;\n                if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n                    if (uVar1 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar1) {\n                        *(*0x20 + -0x30) = 0x4758fd;\n                        fcn.004585a0();\n                        return 0x4c9f20;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x30) = 0x475925;\n                    fcn.00471ce0();\n                    if (*(*0x20 + -0x18) < unaff_RBX) {\n                        *(*0x20 + -0x30) = 0x475945;\n                        fcn.004585a0();\n                        return 0x4c9f20;\n                    }\n                    *(*0x20 + -0x30) = 0x475985;\n                    fcn.004327c0();\n                }\n                *(*0x20 + -0x30) = 0x475998;\n                fcn.004327c0();\n            }\n            *(*0x20 + -0x30) = 0x4759a5;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x12;\n            arg1 = 0x4a8b7f;\n            *unaff_RBX = 0x4a8b7f;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x30) = 0x4759ce;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4759e5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 782
    },
    "00405e20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00405e20(void)\n\n{\n    uint64_t *unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uchar auStackX8 [32];\n    ulong auStack48 [2];\n    uchar auStack32 [16];\n    ulong *puStack16;\n    \n    if (*(unaff_R14[6] + 0x90) != unaff_R14) {\n        return 0x4ababd;\n    }\n    if ((*unaff_R14 < auStackX8) && (auStackX8 <= unaff_R14[1])) {\n        auStack48[0] = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n        auStack32 = CONCAT88(auStackX8, 0x405f00);\n        puStack16 = auStack48;\n        fcn.0045ac40();\n        return auStack48[0];\n    }\n    return 0x4ababd;\n}\n",
        "token_count": 215
    },
    "00408500": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00408500(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x408536;\n            fcn.0044abe0();\n            *(*0x20 + -0x130) = 0x40853b;\n            uVar1 = fcn.0044b2c0();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x40855b;\n            fcn.004022e0(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1_00 = iVar4 + 2;\n                    uVar6 = param_2 < arg1_00;\n                    if (arg1_00 < param_2) goto code_r0x004085bb;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x4085b6;\n                        fcn.00448440(0x31);\n                        *(*0x20 + -0x130) = 0x4085bb;\n                        uVar2 = fcn.00432f60();\ncode_r0x004085bb:\n                        if (uVar6) goto code_r0x00408845;\n                        if (arg1_00 < uVar2) goto code_r0x00408839;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1_00) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x40863e;\n                    fcn.004022e0(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x0040869a;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            arg1 = 0x2e;\n                            *(*0x20 + -0x130) = 0x408695;\n                            fcn.00448440(0x2e);\n                            *(*0x20 + -0x130) = 0x40869a;\n                            uVar2 = fcn.00432f60();\ncode_r0x0040869a:\n                            if (!uVar6 && !uVar7) goto code_r0x0040880c;\n                            if (arg1 < uVar2) goto code_r0x00408807;\n                            iVar4 = *(*0x20 + -0xa0);\n                            arg1_00 = *(iVar4 + uVar2);\n                        } while (*(iVar4 + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x4086ef;\n                        iVar3 = fcn.0045d719();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4a7acc;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4a6166;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = iVar3;\n                        *(*0x20 + -0x58) = 0x4a6166;\n                        *(*0x20 + -0x50) = 1;\n                        arg1_00 = (*(*0x20 + -0xf0) - iVar3) - 4;\n                        *(*0x20 + -0x48) = (-arg1_00 >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x38) = 0x4a8c57;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = iVar3;\n                        param_2 = 0x4a698f;\n                        *(*0x20 + -0x18) = 0x4a698f;\n                        *(*0x20 + -0x10) = 8;\n                        arg1 = 9;\n                        *(*0x20 + -0x130) = 0x4087f3;\n                        fcn.004481a0(9);\n                        *(*0x20 + -0x130) = 0x4087f8;\n                        fcn.00409a20();\n                        *(*0x20 + -0x130) = 0x408807;\n                        fcn.004327c0();\ncode_r0x00408807:\n                        *(*0x20 + -0x130) = 0x40880c;\n                        fcn.0045d540(arg1);\ncode_r0x0040880c:\n                        *(*0x20 + -0x130) = 0x408811;\n                        fcn.0045d4c0(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x408834;\n                    fcn.00448440(0x13);\n                    *(*0x20 + -0x130) = 0x408839;\n                    fcn.00432f60();\ncode_r0x00408839:\n                    *(*0x20 + -0x130) = 0x408845;\n                    fcn.0045d540(arg1_00);\ncode_r0x00408845:\n                    *(*0x20 + -0x130) = 0x40884d;\n                    uVar2 = fcn.0045d4c0(arg1_00, param_2);\n                }\n                *(*0x20 + -0x130) = 0x408855;\n                fcn.0045d4c0(uVar2, param_2);\n            }\n            unaff_RBX = 0x4a90de;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x408878;\n            fcn.00448440(0x13);\n            *(*0x20 + -0x130) = 0x40887d;\n            fcn.00432f60();\n        }\n        *(puVar5 + -8) = 0x408885;\n        fcn.0045ad80();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2131
    },
    "0041e060": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0041e060(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    fcn.0045ed60();\n    fcn.0044d000(*(*0x544618 + 0x10), *(*0x544618 + 0x10), *(*0x544618 + 0x28), *(*0x544618 + 0x30));\n    *0x544610 = 1;\n    fcn.00435860(0x13);\n    fcn.0045ed60();\n    return 0;\n}\n",
        "token_count": 177
    },
    "0041f560": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f560(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x0041f7e8;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x41f611;\n                        iVar2 = fcn.0041f260(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x41f7e8;\n                    fcn.0045d480(8);\ncode_r0x0041f7e8:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x41f7f5;\n                    fcn.0045d480(8);\n                }\n                *(*0x20 + -0x50) = 0x41f7fa;\n                fcn.004346e0();\n                *(*0x20 + -0x50) = 0x41f80b;\n                fcn.00434fe0();\n                *(*0x20 + -0x50) = 0x41f815;\n                fcn.00434ce0();\n                *(*0x20 + -0x50) = 0x41f81a;\n                fcn.00434940();\n                *(*0x20 + -0x50) = 0x41f81f;\n                fcn.00434760();\n                *(*0x20 + -0x50) = 0x41f830;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x50) = 0x41f835;\n            fcn.004346e0();\n            *(*0x20 + -0x50) = 0x41f846;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x41f850;\n            fcn.00434ce0();\n            *(*0x20 + -0x50) = 0x41f855;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x41f85a;\n            fcn.00434760();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x41f86b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x41f885;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x41f65e;\n    uVar4 = fcn.0041f260(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x41f72f;\n            uVar3 = fcn.0041f260();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x598350) && (*0x598358 < *0x598350)) &&\n        (uVar6 = -(*0x598350 >> 0xd),  ((uVar8 + (*0x598350 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2102
    },
    "00423560": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.00423560(uchar param_1)\n\n{\n    char unaff_DIL;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t iStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iStack56 = 0;\n    uStack48 = 0x4236a0;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&iStack56, auStack24._0_8_);\n    fcn.0045ac40();\n    if (iStack56 != 0) {\n        if ((unaff_DIL != '\\0') && (*(iStack56 + 100) != '\\0')) {\n            fcn.0045db00(*(iStack56 + 0x18));\n        }\n        *(iStack56 + 100) = 0;\n        return iStack56;\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00425b00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00425b00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x425b54;\n            fcn.00427da0(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x425bc5;\n            fcn.0042a5e0();\n            *(*0x20 + -0x70) = 0x425be5;\n            fcn.0042aac0(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar5 = *(*0x20 + -0x28);\n            uVar3 = *(*0x20 + -0x20);\ncode_r0x00425c6b:\n            if (uVar5 <= uVar3) {\n                *(*0x20 + -0x70) = 0x425cfe;\n                fcn.00425d60(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar5 = uVar3 >> 0xd;\n            if (0x1fff < uVar5) goto code_r0x00425d19;\n            *(*0x20 + -0x30) = uVar3;\n            if (*(iVar2 + 0x78 + uVar5 * 8) != 0) {\ncode_r0x00425c27:\n                *(*0x20 + -0x70) = 0x425c50;\n                fcn.004289c0(0x200);\n                uVar3 = *(*0x20 + -0x30) + 1;\n                uVar5 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x00425c6b;\n            }\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x10) = iVar2 + uVar5 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x425cc5;\n            iVar2 = fcn.00415260();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00425c27;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x425d19;\n            fcn.00432f60();\ncode_r0x00425d19:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x425d26;\n            in_RAX = fcn.0045d4a0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x425d3b;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1335
    },
    "00426340": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00426340(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX + arg1 * 0x2000;\n            uVar8 = unaff_RBX + 0x800000000000;\n            uVar9 = uVar8 >> 0x16;\n            uVar5 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar6 = uVar5 >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar7 = (iVar3 - 1U & 0x3fffff) >> 0xd;\n            if (uVar6 == uVar9) {\n                if (0x1fff < uVar8 >> 0x23) {\n                    *(*0x20 + -0x88) = 0x426545;\n                    uVar5 = fcn.0045d4a0(0x2000);\n                    goto code_r0x00426545;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar8 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar9 & 0x1fff) << 7;\n                iVar3 = (uVar7 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x88) = 0x4264cf;\n                uVar2 = fcn.00428c40(iVar3);\n                *(*0x20 + -0x50) = uVar2;\n                *(*0x20 + -0x88) = 0x4264f3;\n                fcn.00429360(*(*0x20 + -0x48));\n                iVar3 = *(*0x20 + -0x50);\ncode_r0x004264f8:\n                *(*0x20 + -0x60) = iVar3;\n                *(*0x20 + -0x88) = 0x426525;\n                fcn.00425d60(*(*0x20 + 0x18));\n                return *(*0x20 + -0x60) << 0xd;\n            }\n            if (uVar8 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar9;\n                *(*0x20 + -0x28) = uVar5;\n                *(*0x20 + -0x30) = uVar7;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar8 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar9 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x88) = 0x42643c;\n                uVar2 = fcn.00428c40(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar2;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x426465;\n                fcn.00429360(*(*0x20 + -0x48));\n                iVar1 = *(*0x20 + -0x20);\n                uVar6 = *(*0x20 + 8);\n                uVar5 = *(*0x20 + -0x38);\n                iVar3 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar1 + 1;\n                    *(*0x20 + -0x60) = iVar3;\n                    if (uVar5 <= in_RDX) break;\n                    uVar5 = in_RDX >> 0xd;\n                    if (0x1fff < uVar5) goto code_r0x00426667;\ncode_r0x00426545:\n                    *(*0x20 + -0x58) = in_RDX;\n                    *(*0x20 + -0x10) = *(uVar6 + 0x78 + uVar5 * 8);\n                    *(*0x20 + -0x40) = (in_RDX & 0x1fff) << 7;\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x88) = 0x42657a;\n                    uVar2 = fcn.00428c40(0x200);\n                    *(*0x20 + -0x48) = uVar2;\n                    *(*0x20 + -0x88) = 0x426594;\n                    fcn.004293e0();\n                    iVar1 = *(*0x20 + -0x58);\n                    iVar3 = *(*0x20 + -0x60) + *(*0x20 + -0x48);\n                    uVar6 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                if (*(*0x20 + -0x28) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = *(uVar6 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                    *(*0x20 + -0x40) = (uVar5 & 0x1fff) << 7;\n                    *(*0x20 + -0x48) = *(*0x20 + -0x30) + 1;\n                    *(*0x20 + -0x88) = 0x426629;\n                    uVar2 = fcn.00428c40(*(*0x20 + -0x30) + 1);\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x88) = 0x42664a;\n                    fcn.00429360(*(*0x20 + -0x48));\n                    iVar3 = *(*0x20 + -0x60) + *(*0x20 + -0x50);\n                    goto code_r0x004264f8;\n                }\n                *(*0x20 + -0x88) = 0x426667;\n                fcn.0045d4a0(0x2000);\ncode_r0x00426667:\n                *(*0x20 + -0x88) = 0x426671;\n                fcn.0045d4a0(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x88) = 0x42667e;\n            in_RAX = fcn.0045d4a0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426693;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1950
    },
    "004286e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004286e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x10078);\n            uVar2 = uVar3 + 0x800000000000;\n            uVar6 = uVar2 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar1 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar1 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x42875a;\n                    uVar2 = fcn.004267a0();\n                    if (uVar2 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x52c2a0;\n                        return 0;\n                    }\n                    uVar3 = uVar2 + 0x800000000000 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        iVar1 = *(*(*0x20 + 8) + 0x78 + uVar3 * 8);\n                        iVar7 = (uVar2 + 0x800000000000 >> 0x16 & 0x1fff) * 0x80;\n                        arg1 = iVar1 + iVar7;\n                        uVar3 = (uVar2 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar6 = *(arg1 + uVar3 * 8);\n                            uVar2 = uVar2 & 0xfffffffffff80000;\n                            uVar4 = *(iVar1 + iVar7 + 0x40 + uVar3 * 8);\ncode_r0x004288d3:\n                            *(*0x20 + -0x40) = uVar4;\n                            *(*0x20 + -0x38) = ~uVar6;\n                            *(*0x20 + -0x30) = uVar2;\n                            *(*0x20 + -0x68) = 0x4288f2;\n                            fcn.00426340(0x40);\n                            *(*0x20 + -0x68) = 0x42890d;\n                            fcn.00425d60(0x40);\n                            iVar1 = *(*0x20 + -0x30);\n                            *(*(*0x20 + 8) + 0x10078) = iVar1 + 0x7e000;\n                            return iVar1;\n                        }\n                        goto code_r0x00428972;\n                    }\n                }\n                else {\n                    uVar2 = uVar2 >> 0x23;\n                    if (uVar2 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar1 = *(in_RAX + 0x78 + uVar2 * 8);\n                        *(*0x20 + -0x10) = iVar1;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        arg1 = iVar1 + iVar7;\n                        *(*0x20 + -0x18) = arg1;\n                        *(*0x20 + -0x68) = 0x428865;\n                        uVar2 = fcn.00429060((uVar3 & 0x3fffff) >> 0xd);\n                        if (uVar2 != 0xffffffffffffffff) {\n                            uVar3 = uVar2 >> 6;\n                            if (uVar3 < 8) {\n                                uVar2 = (*(*0x20 + -0x20) * 0x400000 + (uVar2 & 0xffffffffffffffc0) * 0x2000) -\n                                        0x800000000000;\n                                uVar6 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                uVar4 = *(*(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40 + uVar3 * 8);\n                                goto code_r0x004288d3;\n                            }\n                            *(*0x20 + -0x68) = 0x428954;\n                            fcn.0045d4a0(8);\n                        }\n                        *(*0x20 + -0x68) = 0x428965;\n                        fcn.00432f60();\n                    }\n                    *(*0x20 + -0x68) = 0x428972;\n                    fcn.0045d4a0(0x2000);\ncode_r0x00428972:\n                    *(*0x20 + -0x68) = 0x42897c;\n                    fcn.0045d4a0(8);\n                }\n                *(*0x20 + -0x68) = 0x428989;\n                fcn.0045d4a0(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x428994;\n            in_RAX = fcn.0045d4a0(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42899f;\n        fcn.0045f460();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1452
    },
    "00429220": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00429220(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "004293e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004293e0(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00428ae0();\n    fcn.00428c20(in_RAX);\n    return;\n}\n",
        "token_count": 100
    },
    "0042d3a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042d3a0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = fcn.0042ca80(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042c9c0(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x498800;\n            uStack16 = 0x4b0360;\n            fcn.00458b20(1);\n            fcn.0042f720();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0042e7e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042e7e0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42e845;\n                fcn.0042f820();\n                return;\n            }\n            *(*0x20 + -0x50) = 0x42e874;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42e88e;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 557
    },
    "0042fb40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042fb40(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f8a0();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 130
    },
    "004332c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004332c0(void)\n\n{\n    fcn.0045ac40();\n    fcn.0045ac40();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "00434fe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00434fe0(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004347c0(unaff_RBX);\n    return;\n}\n",
        "token_count": 93
    },
    "00448440": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448440(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004481a0(2);\n    return;\n}\n",
        "token_count": 86
    },
    "004484e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004484e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004481a0(3);\n    return;\n}\n",
        "token_count": 125
    },
    "004485c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004485c0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004481a0(4);\n    return;\n}\n",
        "token_count": 125
    },
    "00448a80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448a80(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x50) = 0x448ae5;\n                    fcn.004563c0(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x00448b42:\n                *(*0x20 + -0x50) = 0x448b4a;\n                iVar2 = fcn.00449060();\n                uVar4 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x00448b5a:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = uVar7;\n                *(*0x20 + -0x28) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = uVar7;\n                        *(*0x20 + -0x50) = 0x448ba5;\n                        uVar1 = fcn.004563c0(uVar3);\n                        uVar5 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x30);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x50) = 0x448bec;\n                fcn.0045d480(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x00448b42;\n                *(*0x20 + -0x58) = unaff_RBP;\n                *(*0x20 + -0x50) = 0x448b2f;\n                iVar2 = fcn.0045d722();\n                unaff_RBP = *(*0x20 + -0x58);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x00448b5a;\n                }\n            }\n            *(*0x20 + -0x50) = 0x448bf9;\n            in_RAX = fcn.0045d4c0(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x448c0e;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1287
    },
    "00448e20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00448e20(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = fcn.0040b760(0);\n    return uVar1;\n}\n",
        "token_count": 97
    },
    "0044f580": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0044f580(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    ulong *puVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x44f5cb;\n            uVar4 = fcn.0045cea0(arg1 << 3);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0x50) = 0x44f5ec;\n            uVar5 = fcn.0044f760(*(*0x20 + 0x18));\n            if (uVar5 != 0) {\n                return uVar5;\n            }\n            *(*0x20 + -0x50) = 0x44f605;\n            fcn.0040a080();\n            unaff_RDI = *(*0x20 + 0x20);\n            *(*0x20 + -0x50) = 0x44f625;\n            iVar3 = fcn.0044f760(*(*0x20 + 0x18));\n            if (iVar3 != 0) {\n                *(*0x20 + -0x1c) = iVar3;\n                *(*0x20 + -0x50) = 0x44f686;\n                fcn.0040a2a0();\n                return *(*0x20 + -0x1c);\n            }\n            *(*(*0x20 + 8) + 8) = *(*(*0x20 + 8) + 8) + 1;\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x50) = 0x44f63b;\n            puVar6 = fcn.0044f800();\n            uVar5 = *(*0x20 + -0x18);\n            puVar6[1] = uVar5;\n            iVar1 = *(*0x20 + 8);\n            *(puVar6 + 2) = *(iVar1 + 8);\n            arg1 = *(*0x20 + 0x18);\n            puVar6[3] = arg1;\n            if (arg1 < 0x81) {\n                iVar2 = *(*0x20 + 0x10);\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    puVar6[iVar7 + 4] = *(iVar2 + iVar7 * 8);\n                }\n                *(*0x20 + -0x10) = puVar6;\n                uVar5 = uVar5 & 0x1fff;\n                *puVar6 = *(iVar1 + 0x20 + uVar5 * 8);\n                *(*0x20 + -0x50) = 0x44f6e5;\n                fcn.004031a0(iVar1 + uVar5 * 8 + 0x20);\n                *(*0x20 + -0x50) = 0x44f6f1;\n                fcn.0040a2a0();\n                return *(*(*0x20 + -0x10) + 0x10);\n            }\n            *(*0x20 + -0x50) = 0x44f710;\n            in_RAX = fcn.0045d4c0(arg1, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x44f72a;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1170
    },
    "0044ff80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044ff80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044eb60(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044eb60(auStack24);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004500a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004500a0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x54a3e0)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    auStack24 = CONCAT88(in_RAX >> 6, *(iVar1 + 0xd8));\n    fcn.0044eb60(&uStack32);\n    return;\n}\n",
        "token_count": 261
    },
    "00452300": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00452300(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 0xc);\n            arg2 = uVar1;\n            uVar6 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar6;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar6;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x28) = uVar6;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x452365;\n            fcn.0044b2c0();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x50) = 0x45239a;\n                cVar3 = fcn.00402180(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x004523ee;\n                *(*0x20 + -0x50) = 0x452385;\n                cVar3 = fcn.00402180(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x004523ee:\n                return *(*0x20 + -0x28);\n            }\n            arg1 = *(*0x20 + 0x28);\n            if (arg1 == NULL) {\n                arg1 = **(*(*0x20 + 8) + 0x28);\n                cVar3 = *(*(*(*0x20 + 8) + 0x28) + 4);\n            }\n            else {\n                cVar3 = '\\0';\n            }\n            unaff_RSI = *(*0x20 + -0x18);\n            if (*unaff_RSI == *arg1) {\n                if (cVar3 == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x50) = 0x452419;\n            uVar4 = fcn.0044b2c0();\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x30) = uVar2;\n            *(*0x20 + -0x50) = 0x452428;\n            fcn.004346e0();\n            *(*0x20 + -0x50) = 0x452439;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x452448;\n            fcn.00434fe0();\n            *(*0x20 + -0x50) = 0x45244d;\n            fcn.00434940();\n            *(*0x20 + -0x50) = 0x452452;\n            fcn.00434760();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x50) = 0x452465;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        puVar5[0x20] = unaff_DIL;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + -8) = 0x452485;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_DIL = puVar5[0x20];\n        unaff_RSI = *(puVar5 + 0x28);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1175
    },
    "004591a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004591a0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2e8) = 1;\n    *(iVar2 + 0x2f0) = auStackX8;\n    fcn.004031e0();\n    iStackX16 = *(iVar2 + 0x2f8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x308);\n    }\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 328
    },
    "0045d5e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d5e0(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4587
    },
    "0045d62e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d62e(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "0045d678": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d678(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "0045d698": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d698(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "0045d6bd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d6bd(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2053
    },
    "0045d6d4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d6d4(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1724
    },
    "0045d6eb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d6eb(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1403
    },
    "0045d6f8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d6f8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1247
    },
    "0045d719": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d719(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 775
    },
    "0045d730": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045d730(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 459
    },
    "0045f4a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045f4a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    uchar auStack56 [8];\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack56;\n    }\n    fcn.0045af20();\n    return;\n}\n",
        "token_count": 129
    },
    "0045f660": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0045f660(ulong arg1)\n\n{\n    ulong uStack32;\n    \n    fcn.00459460();\n    return uStack32;\n}\n",
        "token_count": 37
    },
    "0046f700": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046f700(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4a6168;\n                }\n                *(*0x20 + -0x3c) = 0;\n                *(*0x20 + -0x38) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x0046f825;\n            *(*0x20 + -0x50) = 0;\n            *(*0x20 + -0x4c) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x0046f8d2;\n                *(*0x20 + (uVar4 - 0x50)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x0046f88e;\n            *(*0x20 + -0x80) = 0x46f8d2;\n            fcn.0045d480(0x14);\ncode_r0x0046f8d2:\n            *(*0x20 + -0x80) = 0x46f8df;\n            in_RAX = fcn.0045d480(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46f8ea;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x0046f7a0:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x0046f7cf;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x0046f815;\n    *(*0x20 + (uVar2 - 0x3c)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x0046f7a0;\ncode_r0x0046f88e:\n    *(*0x20 + (uVar4 - 0x50)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x46f8b9;\n    fcn.00448800(-(uVar4 - 0x14));\n    goto code_r0x0046f825;\ncode_r0x0046f7cf:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x3c)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x46f7fd;\n        uVar3 = fcn.00448800(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x46f815;\n    fcn.0045d480(0x14);\ncode_r0x0046f815:\n    *(*0x20 + -0x80) = 0x46f825;\n    fcn.0045d480(0x14);\ncode_r0x0046f825:\n    *(*0x20 + -0x80) = 0x46f83e;\n    uVar3 = fcn.00448440(1);\n    return uVar3;\n}\n",
        "token_count": 1040
    },
    "00472ee0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00472ee0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = in_XMM15;\n            uVar2 = arg1;\n            if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                if ((uVar2 >> 7 & 1) == 0) {\n                    *(*0x20 + -0x10) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                }\n                goto code_r0x00472f6b;\n            }\n            if ((uVar2 >> 7 & 1) != 0) {\n                if ((uVar2 >> 8 & 1) != 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x472f2c;\n                    uVar1 = fcn.00457840();\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x50) = 0x472f45;\n                    fcn.004579c0(*(*0x20 + -0x20));\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\ncode_r0x00472f6b:\n                *(*0x20 + -0x18) = in_RAX;\n                return;\n            }\n            unaff_RBX = 0x4c7c98;\n            *(*0x20 + -0x50) = 0x472f92;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x472fa7;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 743
    },
    "00476600": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00476600(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = 0x14;\n    iVar4 = 0;\n    while (iVar5 = iVar1,  iVar5 <= arg1) {\n        fcn.00476480(iVar4);\n        iVar4 = iVar5;\n        iVar1 = iVar5 + 0x14;\n    }\n    fcn.00476480(iVar4);\n    iVar1 = 0x14;\n    while (iVar1 < arg1) {\n        iVar2 = iVar1 << 1;\n        iVar4 = iVar2;\n        iVar5 = 0;\n        while (iVar3 = iVar4,  iVar3 <= arg1) {\n            fcn.00476760(iVar5);\n            iVar5 = iVar3;\n            iVar4 = iVar3 + iVar1 * 2;\n        }\n        iVar4 = iVar1 + iVar5;\n        iVar1 = iVar2;\n        if (iVar4 < arg1) {\n            fcn.00476760(iVar5);\n        }\n    }\n    return in_RAX;\n}\n",
        "token_count": 331
    },
    "0047a760": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047a809)\n// WARNING: Removing unreachable block (ram,0x0047a835)\n\nulong fcn.0047a760(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x541fe0);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = 0;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x47a7cf;\n            uVar2 = fcn.0045d678();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x47a7f8;\n            uVar3 = fcn.0047ac00(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x0047a905;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x47a8db;\n                fcn.00478b20(300);\n                *(*0x20 + -0x2a0) = 0x47a8eb;\n                uVar2 = fcn.00448c40(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x47a905;\n            fcn.0045d500(uVar4, 300);\ncode_r0x0047a905:\n            *(*0x20 + -0x2a0) = 0x47a911;\n            in_RAX = fcn.0045d480(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x47a91c;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 767
    },
    "0047a940": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047a940(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x543ba0;\n            *(*0x20 + -0x50) = 0x47a977;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x47a9b1;\n                iVar2 = fcn.0045f660(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53d130;\n                    if ((iVar1 != 0) && (uVar3 = *0x53d140,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x47a9ec;\n                        fcn.004099a0();\n                        uVar3 = 0x4c8280;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x47aa17;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47aa27;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 590
    },
    "0047ae40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047ae40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x543d38;\n            *(*0x20 + -0x50) = 0x47ae77;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x47aeb1;\n                iVar2 = fcn.0045f660(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53d130;\n                    if ((iVar1 != 0) && (uVar3 = *0x53d140,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x47aeec;\n                        fcn.004099a0();\n                        uVar3 = 0x4c8280;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x47af17;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47af27;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "0047af40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047af40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x543d88;\n            *(*0x20 + -0x50) = 0x47af72;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x47af9c;\n                uVar2 = fcn.0045f660(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x47afe6;\n                    fcn.004099a0();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x47b016;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47b025;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 481
    },
    "0047b040": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0047b040(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x543de0;\n            *(*0x20 + -0x50) = 0x47b072;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x47b09c;\n                iVar2 = fcn.0045f660(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x47b0e6;\n                    fcn.004099a0();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x47b116;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47b125;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "0047b140": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047b140(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = *0x543de8;\n            *(*0x20 + -0x50) = 0x47b176;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + 8);\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x50) = 0x47b1a8;\n                uVar2 = fcn.0045f660(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x47b1e8;\n                    fcn.004099a0();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x47b218;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x47b227;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 552
    },
    "00487720": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00487720(uchar param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(in_RAX + 0x4c);\n    *(in_RAX + 0x4c) = param_1;\n    fcn.00485060(0x10, uVar1, 0x4a853c, 0x11);\n    *(in_RAX + 0x4c) = uVar1;\n    return;\n}\n",
        "token_count": 171
    },
    "004237a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004237a0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00423879:\n        fcn.0045d4a0(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10198 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045d4a0(0x40);\n                goto code_r0x00423879;\n            }\n            iVar3 = *(*(in_RAX + 0x10198 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 455
    },
    "004238a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.004238a0(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000 >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10198 + uVar8 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x4239ac;\n                        fcn.00432f60();\n                        goto code_r0x004239ac;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x004239ac:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x4239b9;\n            in_RAX = fcn.0045d4a0(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4239ce;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 902
    },
    "00425d60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00425d60(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar9;\n            uVar10 = uVar9 >> 0x16;\n            *(*0x20 + -0x28) = uVar10;\n            uVar8 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar8;\n            uVar8 = uVar8 >> 0x16;\n            if (uVar8 == uVar10) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                if (uVar5 <= uVar10) goto code_r0x00426185;\n                noname_1 = *(noname_1 + uVar10 * 8);\n                if (0x1fff < uVar9 >> 0x23) goto code_r0x00426178;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x425f6f;\n                iVar1 = fcn.00428e80(iVar1 + (uVar10 & 0x1fff) * 0x80, noname_1, uVar8);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar10 = *(iVar6 + 0x68);\n                uVar8 = *(iVar6 + 0x60);\n                if (uVar10 <= *(*0x20 + -0x28)) goto code_r0x00426170;\n                *(uVar8 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00425fb2;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar9 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x425e5f;\n                    uVar2 = fcn.00428e80(iVar1 + (uVar10 & 0x1fff) * 0x80, uVar5, uVar8);\n                    uVar8 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar8) {\n                        *(*(*0x20 + -0x18) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar10 = *(unaff_RDI + 0x70);\n                        uVar8 = *(*0x20 + -0x38);\n                        if (uVar8 <= uVar10) {\n                            if (uVar5 + 1 <= uVar8) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar10 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                unaff_RBX = (uVar8 - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (unaff_RBX == 0) goto code_r0x0042618d;\n                                    unaff_RBX = unaff_RBX * 8;\n                                    *(*0x20 + -0xc0) = 0x425efd;\n                                    fcn.0045db00();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    uVar8 = *(*0x20 + -0x38);\n                                    goto code_r0x0042618d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x00426216;\n                            }\n                            *(*0x20 + -0xc0) = 0x42622d;\n                            fcn.0045d560(uVar8);\n                        }\n                        uVar5 = uVar10;\n                        *(*0x20 + -0xc0) = 0x426238;\n                        fcn.0045d520(uVar8, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x426245;\n                    fcn.0045d4a0(uVar8);\n                }\n                uVar10 = 0x2000;\n                *(*0x20 + -0xc0) = 0x426252;\n                uVar2 = fcn.0045d4a0(0x2000);\n                goto code_r0x00426252;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x10) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar8 < uVar10) goto code_r0x004261e3;\n                if (0x1fff < uVar10 >> 0xd) goto code_r0x004262e5;\n                *(*0x20 + -0x50) = uVar10;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0xd) * 8);\n                iVar6 = (uVar10 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x4262c5;\n                uVar2 = fcn.00428e80(iVar1 + iVar6, iVar6, uVar8);\n                uVar10 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar10) break;\ncode_r0x00426252:\n                *(*(*0x20 + -0x10) + uVar10 * 8) = uVar2;\n                uVar10 = uVar10 + 1;\n                uVar8 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x4262e5;\n            fcn.0045d4a0(uVar5);\ncode_r0x004262e5:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x4262f2;\n            in_RAX = fcn.0045d4a0(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_RDI;\n        puVar7[0x21] = unaff_SIL;\n        *(puVar7 + -8) = 0x426311;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = puVar7[0x20];\n        unaff_SIL = puVar7[0x21];\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x004261e3:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00425fb2:\n    uVar9 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00425fd7:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar10 = *(iVar1 * 8 + 0x52d7a0);\n    uVar8 = -(uVar10 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x52d728);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x52d768);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar10;\n    uVar10 = uVar9 >> (uVar4 & 0x3f) & uVar8;\n    iVar11 = (unaff_RBX >> (uVar4 & 0x3f) & uVar8) + 1;\n    *(*0x20 + -0x58) = iVar11;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar11 <= uVar10) goto code_r0x00425fce;\n        *(*0x20 + -0x60) = uVar10;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar8 = uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar10 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar10) break;\n        if (uVar10 < uVar8) {\ncode_r0x00426157:\n            *(*0x20 + -0xc0) = 0x426165;\n            fcn.0045d540(uVar10);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar8;\n        unaff_RBX = uVar10 - uVar8;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x42610d;\n        uVar10 = unaff_RBX;\n        iVar11 = fcn.00427ae0(iVar1, uVar9, uVar8 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar9 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar8 = *(*0x20 + -0x60);\n        if (uVar9 <= uVar8) {\n            *(*0x20 + -0xc0) = 0x426157;\n            fcn.0045d480(uVar9);\n            goto code_r0x00426157;\n        }\n        if (*(iVar1 + uVar8 * 8) == iVar11) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar8 * 8) = iVar11;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar11 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar10 = *(*0x20 + -0x40);\n        uVar9 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x426170;\n    fcn.0045d500(uVar10, noname_1);\ncode_r0x00426170:\n    *(*0x20 + -0xc0) = 0x426178;\n    fcn.0045d4a0(uVar10);\ncode_r0x00426178:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x426185;\n    fcn.0045d4a0(0x2000);\ncode_r0x00426185:\n    *(*0x20 + -0xc0) = 0x42618d;\n    fcn.0045d4a0(uVar5);\ncode_r0x0042618d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x4261c5;\n            uVar2 = fcn.00428e80(uVar2, noname_1, uVar8);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x004261d7;\n            *(*0x20 + -0xc0) = 0x4261f8;\n            fcn.0045d4a0(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x426205;\n        iVar1 = fcn.0045d4a0(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x00426216:\n        } while (noname_1 < unaff_RBX);\n    } while( true );\ncode_r0x00425fce:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00425fd7;\ncode_r0x004261d7:\n    *(*(*0x20 + -0x18) + noname_1 * 8) = uVar2;\n    goto code_r0x004261e3;\n}\n",
        "token_count": 3681
    },
    "004267a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint64_t fcn.004267a0(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x00427366:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x427375;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x30) = *0x52c2b8;\n    *(*0x20 + -0x28) = *0x52c298;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x4273a0;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x00426860:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x4269b4;\n            iVar3 = fcn.00429060(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x80) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x426a11;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x426a26;\n                fcn.004266c0();\n                return *(*0x20 + -0x80) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x100) = uVar11;\n                *(*0x20 + -0xd0) = uVar9;\n                if (-1 < uVar7) goto code_r0x00426bcd;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0xd8) = uVar7;\n                    *(*0x20 + -0x120) = 0x426adc;\n                    fcn.004346e0();\n                    *(*0x20 + -0x120) = 0x426aed;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426af7;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x426b08;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426b15;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x426b26;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426b30;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426b45;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426b4f;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426b65;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426b6f;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426b85;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426b8a;\n                    fcn.00434760();\n                    *(*0x20 + -0x120) = 0x426b8f;\n                    fcn.004346e0();\n                    *(*0x20 + -0x120) = 0x426ba5;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426bb2;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426bb7;\n                    fcn.00434940();\n                    *(*0x20 + -0x120) = 0x426bbc;\n                    fcn.00434760();\n                    *(*0x20 + -0x120) = 0x426bcd;\n                    fcn.00432f60();\ncode_r0x00426bcd:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x426bfa;\n            fcn.0045d480(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x426c07;\n        fcn.0045d4a0(0x2000);\n        goto code_r0x00426c07;\n    }\n    param_3 = 0x52d720;\n    uVar11 = *(puVar2 * 8 + 0x52d720);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x52d760;\n    unaff_R15 = *(puVar2 * 8 + 0x52d760);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x52d7a0;\n            uVar9 = *(puVar2 * 8 + 0x52d7a0);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00426e90:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x427170;\n                        fcn.004266c0();\n                        return (*(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f) & -(*(*0x20 + -0x58) < 0x40)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0xe8) = unaff_R15;\n                    *(*0x20 + -0xf0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xe0) = arg2;\n                    *(*0x20 + -0x120) = 0x426f2a;\n                    fcn.004346e0();\n                    *(*0x20 + -0x120) = 0x426f3b;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426f4f;\n                    fcn.00434de0(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x426f65;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426f6f;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x426f85;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426f8f;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426fa5;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426faf;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426fc5;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426fcf;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x426fd4;\n                    fcn.00434940();\n                    *(*0x20 + -0x120) = 0x426fd9;\n                    fcn.00434760();\n                    *(*0x20 + -0x120) = 0x426fde;\n                    fcn.004346e0();\n                    *(*0x20 + -0x120) = 0x426fef;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x426ffc;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x42700d;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x42701a;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x42702b;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x427038;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x42703d;\n                    fcn.00434940();\n                    *(*0x20 + -0x120) = 0x427045;\n                    fcn.00434760();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x427065;\n                    fcn.004346e0();\n                    *(*0x20 + -0x120) = 0x427076;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x427085;\n                    fcn.00434e40();\n                    *(*0x20 + -0x120) = 0x427096;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x4270a5;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x4270aa;\n                    fcn.00434940();\n                    *(*0x20 + -0x120) = 0x4270af;\n                    fcn.00434760();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x52d7a0);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x52d720);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x4270e5;\n                    fcn.004346e0();\n                    *(*0x20 + -0x120) = 0x4270f6;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x427105;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x427116;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x120) = 0x427125;\n                    fcn.00434ce0();\n                    *(*0x20 + -0x120) = 0x42712a;\n                    fcn.00434940();\n                    *(*0x20 + -0x120) = 0x42712f;\n                    fcn.00434760();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -200) = param_4;\n                        *(*0x20 + -0xf8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xc0) = uVar7;\n                        *(*0x20 + -0x120) = 0x4271cb;\n                        fcn.004346e0();\n                        *(*0x20 + -0x120) = 0x4271dc;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x120) = 0x4271e9;\n                        fcn.00434de0();\n                        *(*0x20 + -0x120) = 0x4271fa;\n                        fcn.00434fe0();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x427216;\n                        fcn.00434de0();\n                        *(*0x20 + -0x120) = 0x427227;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x120) = 0x427231;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x120) = 0x427245;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x120) = 0x42724f;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x120) = 0x427265;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x120) = 0x42726f;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x120) = 0x427285;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x120) = 0x42728a;\n                        fcn.00434760();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x427345;\n                    fcn.00432f60();\ncode_r0x00427345:\n                    *(*0x20 + -0x120) = 0x427350;\n                    fcn.0045d480(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x00427345;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00426c07;\n                }\n                *(*0x20 + -0x90) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x426cb7;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x90) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x52d7a0;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00426e90;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00426839;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x52d7a0;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x90);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00426c07;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x90);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x52d7a0;\ncode_r0x00426c07:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x427358;\n        fcn.0045d540(arg1);\n    }\n    *(*0x20 + -0x120) = 0x427365;\n    in_RAX = fcn.0045d500(arg1, arg2);\n    goto code_r0x00427366;\ncode_r0x00426839:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x00426860;\n}\n",
        "token_count": 5938
    },
    "0043af60": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043af60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x5f4) != *(iVar1 + 0x5f4));\n                    bVar4 = *(iVar1 + 0x5f4) != *(iVar1 + 0x5f0) || *(iVar1 + 0xdf8) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x43b015;\n                    fcn.0040a080();\n                    *(*0x20 + -0x28) = 0x43b01a;\n                    uVar2 = fcn.00441180();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43b02d;\n                    fcn.0040a2a0();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43b04b;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045d480(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x43b06f;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 882
    },
    "0043b0a0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043b0a0(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1668);\n            iVar6 = *(iVar3 + 0x1670);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045d480(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 402
    },
    "0040ad40": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ad40(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t uVar12;\n    uint64_t in_R11;\n    ulong uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \ncode_r0x0040ad40:\n    puVar8 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar7 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar7;\n        *(*0x20 + -0xa0) = 0x40ad9f;\n        uVar2 = fcn.0040c880(0x400000);\n        if (uVar2 != 0) {\n            uVar6 = *(*0x20 + -0x78);\n            goto code_r0x0040adbc;\n        }\n        uVar9 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + -0x78);\n        do {\n            puVar10 = *(uVar9 + 0x103b8);\n            if (puVar10 == NULL) {\n                uVar6 = 0;\ncode_r0x0040b1ab:\n                if (uVar6 == 0) {\n                    *(*0x20 + -0xa0) = 0x40b1c5;\n                    iVar3 = fcn.0040b3e0(0x400000);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16bb0;\n                    *(*0x20 + -0xa0) = 0x40b1f4;\n                    puVar4 = fcn.004168a0();\n                    *puVar4 = *(*0x20 + -0x10);\n                    *(puVar4 + 1) = 1;\n                    puVar4[2] = *0x56a858;\n                    *(*0x20 + -0xa0) = 0x40b21f;\n                    *0x56a858 = puVar4;\n                    piVar5 = fcn.004168a0();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    *piVar5 = uVar6 + uVar2;\n                    piVar5[2] = *0x56a858;\n                    *0x56a858 = piVar5;\n                }\n                uVar9 = uVar6 + uVar2;\n                if (uVar9 < uVar2) {\n                    iVar3 = 0x1c;\n                    uVar13 = 0x4ab911;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar14 = 0x3ffffff < uVar9 + 0x7fffffffffff >> 0x16;\n                    iVar3 = 0;\n                    if (bVar14) {\n                        iVar3 = 0x20;\n                    }\n                    uVar13 = 0;\n                    if (bVar14) {\n                        uVar13 = 0x4ac5b3;\n                    }\n                }\n                else {\n                    iVar3 = 0x21;\n                    uVar13 = 0x4ac938;\n                }\n                if (iVar3 != 0) goto code_r0x0040b31e;\n                uVar7 = uVar6;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040b30d;\ncode_r0x0040adbc:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar6;\n                uVar9 = uVar2 + 0x800000000000 >> 0x16;\n                puVar11 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar6 + 0x7fffffffffff >> 0x16 < uVar9) {\n                        return uVar2;\n                    }\n                    puVar10 = uVar9 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040b05a;\n                    *(*0x20 + -0x40) = uVar9;\n                    uVar2 = puVar11[puVar10 + 0x2033];\n                    puVar10 = puVar11 + puVar10 + 0x2033;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa0) = 0x40ae75;\n                        uVar2 = fcn.0040c4a0(0);\n                        if (uVar2 == 0) goto code_r0x0040b049;\n                        **(*0x20 + -0x18) = uVar2;\n                        uVar9 = *(*0x20 + -0x40);\n                    }\n                    in_R11 = *(uVar2 + (uVar9 & 0xfffff) * 8);\n                    uVar9 = uVar2 + (uVar9 & 0xfffff) * 8;\n                    if (in_R11 != 0) goto code_r0x0040b038;\n                    *(*0x20 + -0x20) = uVar9;\n                    uVar7 = 0x210d0;\n                    *(*0x20 + -0xa0) = 0x40aeed;\n                    iVar3 = fcn.0040c880(8);\n                    if (iVar3 == 0) {\n                        uVar7 = 8;\n                        *(*0x20 + -0xa0) = 0x40af08;\n                        iVar3 = fcn.0040c4a0(0x59a0f8);\n                        if (iVar3 == 0) goto code_r0x0040b027;\n                    }\n                    puVar10 = *(*0x20 + 8);\n                    uVar2 = puVar10[0x207e];\n                    if (puVar10[0x207d] == uVar2) {\n                        *(*0x20 + -0x68) = iVar3;\n                        iVar3 = uVar2 << 4;\n                        if (iVar3 == 0) {\n                            iVar3 = *0x598358;\n                        }\n                        *(*0x20 + -0x70) = iVar3;\n                        *(*0x20 + -0xa0) = 0x40af5b;\n                        uVar2 = fcn.0040c4a0(0x59a0f8);\n                        if (uVar2 == 0) goto code_r0x0040b016;\n                        puVar10 = *(*0x20 + 8);\n                        uVar7 = puVar10[0x207c];\n                        puVar10[0x207c] = uVar2;\n                        puVar10[0x207e] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar10[0x207d];\n                        if (puVar10[0x207d] < puVar10[0x207d]) {\n                            uVar2 = puVar10[0x207d];\n                        }\n                        if (puVar10[0x207c] != uVar7) {\n                            *(*0x20 + -0xa0) = 0x40afb9;\n                            fcn.0045ddc0(uVar2 << 3);\n                            puVar10 = *(*0x20 + 8);\n                        }\n                        iVar3 = *(*0x20 + -0x68);\n                    }\n                    uVar6 = puVar10[0x207d];\n                    uVar9 = puVar10[0x207e];\n                    uVar2 = uVar6 + 1;\n                    if (uVar9 < uVar2) goto code_r0x0040b011;\n                    puVar10[0x207d] = uVar2;\n                    uVar9 = puVar10[0x207c];\n                    if (uVar2 <= uVar6) break;\n                    iVar1 = *(*0x20 + -0x40);\n                    *(uVar9 + uVar6 * 8) = iVar1;\n                    **(*0x20 + -0x20) = iVar3;\n                    uVar9 = iVar1 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    puVar11 = puVar10;\n                }\n                *(*0x20 + -0xa0) = 0x40b011;\n                fcn.0045d480(uVar2);\ncode_r0x0040b011:\n                *(*0x20 + -0xa0) = 0x40b016;\n                fcn.0045d500(uVar2, uVar9);\ncode_r0x0040b016:\n                *(*0x20 + -0xa0) = 0x40b027;\n                fcn.00432f60();\ncode_r0x0040b027:\n                *(*0x20 + -0xa0) = 0x40b038;\n                fcn.00432f60();\ncode_r0x0040b038:\n                *(*0x20 + -0xa0) = 0x40b049;\n                fcn.00432f60();\ncode_r0x0040b049:\n                uVar7 = 0x27;\n                *(*0x20 + -0xa0) = 0x40b05a;\n                fcn.00432f60();\n                uVar2 = in_R11;\ncode_r0x0040b05a:\n                *(*0x20 + -0xa0) = 0x40b067;\n                fcn.0045d4a0(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar6 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar6 = *puVar10 - uVar7;\n                }\n                uVar12 = uVar7 + uVar6;\n                if (uVar12 < uVar6) {\n                    uVar2 = 0;\n                }\n                else if (uVar12 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = uVar12;\n                    *(*0x20 + -0xa0) = 0x40b10e;\n                    uVar2 = fcn.00415860();\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar6) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar12 = uVar6;\n                    }\n                    *puVar10 = uVar12;\n                    uVar6 = uVar7;\n                    goto code_r0x0040b1ab;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xa0) = 0x40b15b;\n                    fcn.00415720(0);\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            *(uVar9 + 0x103b8) = puVar10[2];\n            *(uVar9 + 0x16be0) = *(uVar9 + 0x16be0) - *(uVar9 + 0x16bb0);\n            *puVar10 = *(uVar9 + 0x16bc8);\n            *(uVar9 + 0x16bc8) = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040b3b0;\ncode_r0x0040b30d:\n    *(*0x20 + -0xa0) = 0x40b31e;\n    fcn.00432f60();\ncode_r0x0040b31e:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar9;\n    *(*0x20 + -0x30) = uVar13;\n    *(*0x20 + -0x50) = iVar3;\n    *(*0x20 + -0xa0) = 0x40b337;\n    fcn.004346e0();\n    *(*0x20 + -0xa0) = 0x40b348;\n    fcn.00434fe0();\n    *(*0x20 + -0xa0) = 0x40b352;\n    fcn.00434e40();\n    *(*0x20 + -0xa0) = 0x40b365;\n    fcn.00434fe0();\n    *(*0x20 + -0xa0) = 0x40b36f;\n    fcn.00434e40();\n    *(*0x20 + -0xa0) = 0x40b385;\n    fcn.00434fe0();\n    *(*0x20 + -0xa0) = 0x40b394;\n    fcn.00434fe0();\n    *(*0x20 + -0xa0) = 0x40b399;\n    fcn.00434940();\n    *(*0x20 + -0xa0) = 0x40b39e;\n    fcn.00434760();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa0) = 0x40b3af;\n    in_RAX = fcn.00432f60();\ncode_r0x0040b3b0:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x40b3bf;\n    fcn.0045ad80();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    in_R11 = uVar2;\n    goto code_r0x0040ad40;\n}\n",
        "token_count": 3598
    },
    "00434ce0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00434ce0(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = 0;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x434d2f;\n            uVar1 = fcn.0045d72b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x434d9f;\n                fcn.004347c0(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x434dbc;\n            in_RAX = fcn.0045d540(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x434dc7;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 480
    },
    "004376e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.004376e0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                LOCK();\n                bVar2 = *(in_RAX + 0x90) == 9;\n                if (bVar2) {\n                    *(in_RAX + 0x90) = 4;\n                }\n                return in_RAX & 0xffffff00 | bVar2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437733;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x437746;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 422
    },
    "0048d640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.0048d640(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int32_t iVar6;\n    uint8_t uVar7;\n    \n    uVar5 = 0;\n    for (uVar4 = 1; uVar4 < unaff_RSI; uVar4 = uVar4 + 2) {\n        if (unaff_RSI <= uVar4 - 1) goto code_r0x0048d830;\n        uVar7 = *(unaff_RDI + -1 + uVar4);\n        iVar6 = uVar7 - 0x30;\n        if (iVar6 < 10) {\n            bVar3 = true;\n        }\n        else if (uVar7 + 0x9f < 6) {\n            iVar6 = uVar7 - 0x57;\n            bVar3 = true;\n        }\n        else if (uVar7 + 0xbf < 6) {\n            iVar6 = uVar7 - 0x37;\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n            iVar6 = 0;\n        }\n        if (!bVar3) {\n            return uVar5;\n        }\n        if (unaff_RSI <= uVar4) goto code_r0x0048d825;\n        cVar1 = *(unaff_RDI + uVar4);\n        uVar7 = cVar1 - 0x30;\n        if (uVar7 < 10) {\n            bVar3 = true;\n        }\n        else if (cVar1 + 0x9fU < 6) {\n            uVar7 = cVar1 + 0xa9;\n            bVar3 = true;\n        }\n        else if (cVar1 + 0xbfU < 6) {\n            uVar7 = cVar1 - 0x37;\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n            uVar7 = 0;\n        }\n        if (!bVar3) {\n            return uVar5;\n        }\n        if (unaff_RBX <= uVar5) goto code_r0x0048d81a;\n        *(in_RAX + uVar5) = iVar6 << 4 | uVar7;\n        uVar5 = uVar5 + 1;\n    }\n    if ((unaff_RSI & 1) == 0) {\n        return uVar5;\n    }\n    if (uVar4 - 1 < unaff_RSI) {\n        cVar1 = *(unaff_RDI + -1 + uVar4);\n        if (((9 < cVar1 - 0x30U) && (5 < cVar1 + 0x9fU)) && (5 < cVar1 + 0xbfU)) {\n            return uVar5;\n        }\n        return uVar5;\n    }\n    fcn.0045d480(unaff_RSI);\ncode_r0x0048d81a:\n    fcn.0045d480(unaff_RBX);\ncode_r0x0048d825:\n    fcn.0045d480(unaff_RSI);\ncode_r0x0048d830:\n    fcn.0045d480(unaff_RSI);\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 799
    },
    "00453da0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00453da0(ulong param_1, ulong param_2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.0044abe0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x28);\n    if ((cVar1 == '\\x12') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x11') {\n        fcn.0044b2c0();\n        if (unaff_RBX < 8) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00402180(8, param_2);\n        }\n        return uVar3;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x5981c7 ^ 1;\n}\n",
        "token_count": 305
    },
    "00467ec0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00467ec0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((99 < in_RAX) || (unaff_RBX != 10)) {\n                *(*0x20 + -0x40) = 0x467f65;\n                fcn.00467fc0(0);\n                return in_RAX;\n            }\n            if (in_RAX < 10) {\n                arg1 = in_RAX + 1;\n                if (in_RAX <= arg1) {\n                    return in_RAX + 0x4ad14f;\n                }\n            }\n            else {\n                arg1 = in_RAX * 2 + 2;\n                if (arg1 < 0xc9) {\n                    if (in_RAX << 1 <= arg1) {\n                        return in_RAX * 2 + 0x4af89a;\n                    }\n                    *(*0x20 + -0x40) = 0x467f7a;\n                    fcn.0045d540(arg1);\n                }\n                *(*0x20 + -0x40) = 0x467f85;\n                fcn.0045d4c0(arg1, 200);\n            }\n            *(*0x20 + -0x40) = 0x467f8a;\n            in_RAX = fcn.0045d540(arg1);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x467f9a;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 538
    },
    "004214a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004214a0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x4214c5;\n            fcn.004346e0();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x4214e5;\n            fcn.004346e0();\n            *(*0x20 + -0x80) = 0x4214f6;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x421505;\n            fcn.00434fa0();\n            *(*0x20 + -0x80) = 0x421516;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x421525;\n            fcn.00434ce0();\n            *(*0x20 + -0x80) = 0x421536;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x421545;\n            fcn.00434ce0();\n            *(*0x20 + -0x80) = 0x421556;\n            fcn.00434fe0();\n            *(*0x20 + -0x80) = 0x42155b;\n            fcn.00434760();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x4215d0;\n                fcn.004346e0();\n                *(*0x20 + -0x80) = 0x4215da;\n                fcn.00434e40();\n                *(*0x20 + -0x80) = 0x4215df;\n                fcn.00434760();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x421635;\n                    fcn.004346e0();\n                    *(*0x20 + -0x80) = 0x421646;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x80) = 0x42164b;\n                    fcn.00434760();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x421618;\n                    fcn.004346e0();\n                    *(*0x20 + -0x80) = 0x421629;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x80) = 0x42162e;\n                    fcn.00434760();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x421685;\n                    fcn.004346e0();\n                    *(*0x20 + -0x80) = 0x421696;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x80) = 0x42169b;\n                    fcn.00434760();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x421665;\n                    fcn.004346e0();\n                    *(*0x20 + -0x80) = 0x421676;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x80) = 0x42167b;\n                    fcn.00434760();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x4216c9;\n                    fcn.004346e0();\n                    *(*0x20 + -0x80) = 0x4216da;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x80) = 0x4216df;\n                    fcn.00434760();\n                }\n                *(*0x20 + -0x80) = 0x4216e5;\n                fcn.004346e0();\n                *(*0x20 + -0x80) = 0x4216ea;\n                fcn.00434940();\n                *(*0x20 + -0x80) = 0x4216ef;\n                fcn.00434760();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x421725;\n                    fcn.00435140(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x421785;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421790;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1979
    },
    "00428380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00428380(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x004283db:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x004283e8:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x5981d8 == '\\0') {\n                    fcn.00401d20();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x004283db;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x004283e8;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "00428e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.00428e80(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar9 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar7 = *(in_RAX + iVar2 * 8);\n        if (uVar7 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar7 != 0) {\n                for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar5 = iVar1 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar9 < uVar5) {\n                uVar9 = uVar5;\n            }\n            iVar1 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar7 == 0) {\n                iVar10 = -1;\n            }\n            uVar5 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar9 < uVar5) {\n        uVar9 = uVar5;\n    }\n    if (0x3d < uVar9) {\n        if (uVar9 == 0x200000) {\n            uVar4 = 0x8000000000000000;\n        }\n        else {\n            uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar4;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar9 == 0x200000) {\n                uVar4 = 0x8000000000000000;\n            }\n            else {\n                uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar4;\n        }\n        uVar7 = *(in_RAX + iVar2 * 8);\n        iVar1 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar8 = iVar1;\n        if (uVar7 == 0) {\n            uVar8 = 0;\n        }\n        uVar7 = uVar7 >> (uVar8 & 0x3f);\n        if ((uVar7 + 1 & uVar7) != 0) {\n            uVar3 = 1;\n            uVar6 = uVar9;\ncode_r0x00429038:\n            do {\n                if (uVar6 != 0) {\n                    if (uVar3 < uVar6) {\n                        uVar7 = uVar7 >> (uVar3 & 0x3f) | uVar7;\n                        if ((uVar7 & uVar7 + 1) == 0) break;\n                        uVar6 = uVar6 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x00429038;\n                    }\n                    uVar7 = uVar7 | uVar7 >> (uVar6 & 0x3f);\n                    if ((uVar7 & uVar7 + 1) == 0) break;\n                }\n                uVar6 = ~uVar7;\n                iVar1 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar8 = iVar1;\n                if (uVar6 == 0) {\n                    uVar8 = 0;\n                }\n                uVar7 = uVar7 >> (uVar8 & 0x3f);\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    for (; (uVar7 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar7 == 0) {\n                    uVar6 = 0x40;\n                }\n                uVar7 = uVar7 >> (uVar6 & 0x3f);\n                uVar9 = uVar9 + uVar6;\n            } while ((uVar7 & uVar7 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1301
    },
    "00429120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00429120(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x004291ab;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x004291ab:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 732
    },
    "0042b3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b3c0(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = fcn.0042b880(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042b512:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.0040a080();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040c4a0(0x59a0f8);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045ddc0(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042b7e0();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.0040a2a0(iVar1);\n            goto code_r0x0042b512;\n        }\n        fcn.0040a2a0();\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00427da0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00427da0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00427da0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x428240;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x4281c0;\n            *(*0x20 + -0x18) = 0x4b0158;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x427e6a;\n            uVar2 = fcn.0042a8a0(0x4b0158, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar5 = 0;\n            do {\n                if (4 < iVar5) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                uVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x427ea5;\n                arg1 = fcn.0042a5e0();\n                *(*0x20 + -0xa8) = 0x427eca;\n                iVar3 = (**0x4b0158)(uVar4, 0x4b0158);\n                iVar5 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar5 * 0x18);\n                if (*(iVar7 + 8 + iVar5 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x0042810f;\n                    *(iVar7 + 8 + iVar5 * 0x18) = arg1;\n                }\n                arg1_00 = *(iVar7 + 8 + iVar5 * 0x18);\n                iVar1 = *(iVar7 + iVar5 * 0x18);\n                arg2 = -*0x598358;\n                uVar2 = (*0x598358 + arg1 * 8) - 1 & arg2;\n                if (arg1_00 == 0) goto code_r0x00428105;\n                arg2 = (iVar3 << 3 & arg2) + iVar1;\n                arg1_00 = uVar2 + iVar1;\n                uVar2 = *(*0x20 + -0x58);\n                if (0 < uVar2) {\n                    iVar5 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar2 - 1) goto code_r0x004280f5;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = arg1_00;\n                    uVar4 = *((uVar2 - 1) * 0x10 + 8 + iVar5);\n                    *(*0x20 + -0xa8) = 0x427f87;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x427f9c;\n                    arg2 = fcn.0042a660(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar2 = *(*0x20 + -0x58);\n                    arg1_00 = arg1;\n                }\n                iVar3 = *(iVar7 + 0x10090);\n                arg1_01 = *(iVar7 + 0x10098);\n                if (uVar2 < arg1_01) {\n                    if (arg1_01 <= uVar2) goto code_r0x004280ed;\n                    *(*0x20 + -0x70) = arg1_00;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar4 = *(uVar2 * 0x10 + 8 + iVar3);\n                    *(*0x20 + -0xa8) = 0x427ffc;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x428011;\n                    arg2 = fcn.0042a660(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    uVar2 = *(*0x20 + -0x58);\n                }\n                if (arg2 + 0x800000000000 < arg1_00 + 0x800000000000) {\n                    iVar7 = arg1_00 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = arg1_00 + 0x800000000000;\n                    *(*0x20 + -0x48) = arg1_00;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x42808e;\n                    fcn.0042b960();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar5 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0xa8) = 0x4280bc;\n                    fcn.004154c0(iVar5);\n                    uVar2 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + -0x60);\n                }\n                iVar5 = iVar5 + 1;\n            } while( true );\n        }\n        goto code_r0x0042811a;\n    }\n    goto code_r0x0042817c;\ncode_r0x004280ed:\n    *(*0x20 + -0xa8) = 0x4280f5;\n    fcn.0045d480(arg1_01);\ncode_r0x004280f5:\n    *(*0x20 + -0xa8) = 0x428105;\n    fcn.0045d480(arg1_01);\ncode_r0x00428105:\n    *(*0x20 + -0xa8) = 0x42810f;\n    fcn.0045d480(arg1_00);\ncode_r0x0042810f:\n    *(*0x20 + -0xa8) = 0x42811a;\n    fcn.0045d500(arg1, arg2);\ncode_r0x0042811a:\n    *(*0x20 + -0xa8) = 0x42811f;\n    fcn.004346e0();\n    *(*0x20 + -0xa8) = 0x428130;\n    fcn.00434fe0();\n    *(*0x20 + -0xa8) = 0x42813d;\n    fcn.00434e40();\n    *(*0x20 + -0xa8) = 0x42814e;\n    fcn.00434fe0();\n    *(*0x20 + -0xa8) = 0x42815b;\n    fcn.00434e40();\n    *(*0x20 + -0xa8) = 0x428165;\n    fcn.00434940();\n    *(*0x20 + -0xa8) = 0x42816a;\n    fcn.00434760();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x42817b;\n    in_RAX = fcn.00432f60();\ncode_r0x0042817c:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x428190;\n    fcn.0045ad80();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x00427da0;\n}\n",
        "token_count": 2329
    },
    "00436ce0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00436ce0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *0x5981fc = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x544e04 = 0x7fffffff;\n        *0x544e00 = 1;\n        cVar1 = fcn.004402e0();\n        if (cVar1 == '\\0') break;\n        fcn.0042f9a0();\n    }\n    fcn.0042f9a0();\n    fcn.004402e0();\n    fcn.0042f9a0();\n    return;\n}\n",
        "token_count": 216
    },
    "00467da0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00467da0(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_RAX << 8;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                iVar5 = (arg1 + 0x15cU) * 0x10;\n                uVar1 = *(iVar5 + 0x539c84);\n                uVar2 = *(iVar5 + 0x539c88);\n                uVar3 = *(iVar5 + 0x539c8c);\n                *(*0x20 + -0x18) = *(iVar5 + 0x539c80);\n                *(*0x20 + -0x14) = uVar1;\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0xc) = uVar3;\n                if (arg1 < 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) + 1;\n                }\n                uVar6 = SUB168(ZEXT816(*(*0x20 + -0x18)) * ZEXT816(in_RAX) >> 0x40, 0);\n                uVar4 = SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX), 0);\n                return (SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX) >> 0x40, 0) + CARRY8(uVar4, uVar6)) * 0x200 |\n                       uVar4 + uVar6 >> 0x37;\n            }\n            unaff_RBX = 0x4c7fe8;\n            *(*0x20 + -0x30) = 0x467e94;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x467ea9;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 733
    },
    "004486e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.004486e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045d730();\n    fcn.004481a0(5);\n    return;\n}\n",
        "token_count": 134
    },
    "00409e20": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.00409e20(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x409ea8;\n            fcn.004346e0();\n            *(*0x20 + -0x40) = 0x409eb9;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x409ec5;\n            fcn.00434f60();\n            *(*0x20 + -0x40) = 0x409ed6;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x409ee5;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x409ef6;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x409f05;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x409f16;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x409f25;\n            fcn.00434f60();\n            *(*0x20 + -0x40) = 0x409f2a;\n            fcn.00434940();\n            *(*0x20 + -0x40) = 0x409f2f;\n            fcn.00434760();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x409f45;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x409f55;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 884
    },
    "00409f80": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00409f80(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x409fc6;\n            fcn.004346e0();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x409fd5;\n            fcn.004346e0();\n            *(*0x20 + -0x30) = 0x409fe6;\n            fcn.00434fe0();\n            *(*0x20 + -0x30) = 0x409ff0;\n            fcn.00434e40();\n            *(*0x20 + -0x30) = 0x409ff5;\n            fcn.00434940();\n            *(*0x20 + -0x30) = 0x409ffa;\n            fcn.00434760();\n            *(*0x20 + -0x30) = 0x40a00b;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x40a016;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "004240e0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nulong fcn.004240e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t arg1;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar4 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar4 + *(in_RAX + 0x10428);\n    uVar5 = (*0x598358 + uVar1) - 1 & -*0x598358;\n    if ((*(in_RAX + 0x10430) < uVar5) || (uVar1 < *(in_RAX + 0x10428))) {\n        iVar2 = fcn.0040ad40();\n        if (iVar2 == 0) {\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434ce0();\n            fcn.00434fe0();\n            fcn.00434760();\n            return 0;\n        }\n        if (iVar2 == *(in_RAX + 0x10430)) {\n            *(in_RAX + 0x10430) = iVar2 + iVar4;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10430) - *(in_RAX + 0x10428);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00415960(0x59a090);\n                LOCK();\n                *0x59a0a0 = *0x59a0a0 + arg1;\n                iVar3 = fcn.0042ba20();\n                LOCK();\n                *(iVar3 + 8) = *(iVar3 + 8) + arg1;\n                fcn.0042bb20();\n                fcn.00425b00(arg1);\n            }\n            *(in_RAX + 0x10428) = iVar2;\n            *(in_RAX + 0x10430) = iVar2 + iVar4;\n        }\n        uVar5 = -*0x598358 & (*0x598358 + *(in_RAX + 0x10428) + iVar4) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar4 = *(in_RAX + 0x10428);\n    *(in_RAX + 0x10428) = uVar5;\n    iVar4 = uVar5 - iVar4;\n    fcn.00415960(0x59a090);\n    LOCK();\n    *0x59a0a0 = *0x59a0a0 + iVar4;\n    iVar2 = fcn.0042ba20();\n    LOCK();\n    *(iVar2 + 8) = *(iVar2 + 8) + iVar4;\n    fcn.0042bb20();\n    fcn.00425b00(iVar4);\n    if (*(in_RAX + 0x10180) < (*0x59a090 - *0x59a0a0) + iVar4 + arg1) {\n        fcn.0041e560(0);\n    }\n    return 1;\n}\n",
        "token_count": 810
    },
    "0042e560": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042e560(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42e599;\n            fcn.0040a080();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42e60d;\n                        uVar1 = fcn.004563c0(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042e785;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42e659;\n                        fcn.0042e7e0(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042e773;\n                        *(arg1_01 * 2 + 0x599880) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042e766;\n                        *(arg1_01 * 2 + 0x599880) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042e759;\n                        *(arg1_01 * 2 + 0x599882) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42e72f;\n                    fcn.0042e7e0(uVar3);\n                    *(*0x20 + -0x78) = 0x42e73d;\n                    fcn.0040a2a0();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42e759;\n                fcn.0045d500(uVar3, 1000);\ncode_r0x0042e759:\n                *(*0x20 + -0x78) = 0x42e766;\n                fcn.0045d480(1000);\ncode_r0x0042e766:\n                *(*0x20 + -0x78) = 0x42e773;\n                fcn.0045d480(1000);\ncode_r0x0042e773:\n                *(*0x20 + -0x78) = 0x42e785;\n                fcn.0045d480(1000);\ncode_r0x0042e785:\n                *(*0x20 + -0x78) = 0x42e792;\n                fcn.0045d500(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42e79f;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045d4c0(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42e7b3;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1533
    },
    "00444660": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00444660(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = 0;\n            while( true ) {\n                if (0x35 < arg1) {\n                    return;\n                }\n                uVar1 = *(arg1 + 0x4af05e);\n                if (uVar1 < 0x80) {\n                    uVar2 = arg1;\n                    arg1 = arg1 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x30) = 0x4446c5;\n                    uVar1 = fcn.004563c0(arg1);\n                    arg1 = 0x36;\n                    uVar2 = *(*0x20 + -0x10);\n                }\n                if (99 < uVar2) break;\n                *(uVar2 + 0x598680) = uVar1;\n                *0x5981e8 = *0x5981e8 + 1;\n            }\n            *(*0x20 + -0x30) = 0x4446f2;\n            fcn.0045d480(100);\n        }\n        *(puVar3 + -8) = 0x4446f8;\n        fcn.0045ad80();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 437
    },
    "0044f760": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.0044f760(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    ulong *puVar4;\n    \n    puVar4 = *(in_RAX + 0x20 + (unaff_RSI & 0x1fff) * 8);\n    do {\n        if (puVar4 == NULL) {\n            return 0;\n        }\n        if ((puVar4[1] == unaff_RSI) && (uVar3 = puVar4[3],  arg1 == uVar3)) {\n            if (0x80 < uVar3) {\n                fcn.0045d4c0(uVar3, 0x80);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            iVar2 = 0;\n            while( true ) {\n                if (uVar3 <= iVar2) {\n                    return *(puVar4 + 2);\n                }\n                if (*(unaff_RBX + iVar2 * 8) != puVar4[iVar2 + 4]) break;\n                iVar2 = iVar2 + 1;\n            }\n        }\n        puVar4 = *puVar4;\n    } while( true );\n}\n",
        "token_count": 313
    },
    "0045af20": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045af20(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45b165;\n        fcn.0045ae60();\n        uStack32 = 0x45b170;\n        (**ppcStackX16)();\n        uStack32 = 0x45b17a;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45b19d;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45b225;\n        fcn.0045ae60();\n        uStack48 = 0x45b230;\n        (**ppcStackX16)();\n        uStack48 = 0x45b23a;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45b25d;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45b2e5;\n        fcn.0045ae60();\n        uStack80 = 0x45b2f0;\n        (**ppcStackX16)();\n        uStack80 = 0x45b2fa;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45b31d;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45b3c4;\n        fcn.0045ae60();\n        uStack144 = 0x45b3d2;\n        (**ppcStackX16)();\n        uStack144 = 0x45b3df;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45b40e;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45b4c7;\n        fcn.0045ae60();\n        uStack272 = 0x45b4d5;\n        (**ppcStackX16)();\n        uStack272 = 0x45b4e2;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45b511;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45b5c7;\n        fcn.0045ae60();\n        uStack528 = 0x45b5d5;\n        (**ppcStackX16)();\n        uStack528 = 0x45b5e2;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45b611;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45b6c7;\n        fcn.0045ae60();\n        uStack1040 = 0x45b6d5;\n        (**ppcStackX16)();\n        uStack1040 = 0x45b6e2;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45b711;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45b7c7;\n        fcn.0045ae60();\n        uStack2064 = 0x45b7d5;\n        (**ppcStackX16)();\n        uStack2064 = 0x45b7e2;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45b811;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45b8cf;\n        fcn.0045ae60();\n        uStack4112 = 0x45b8dd;\n        (**ppcStackX16)();\n        uStack4112 = 0x45b8ea;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45b919;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45b9cf;\n        fcn.0045ae60();\n        uStack8208 = 0x45b9dd;\n        (**ppcStackX16)();\n        uStack8208 = 0x45b9ea;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45ba19;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45bacf;\n        fcn.0045ae60();\n        uStack16400 = 0x45badd;\n        (**ppcStackX16)();\n        uStack16400 = 0x45baea;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45bb19;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45bbcf;\n        fcn.0045ae60();\n        uStack32784 = 0x45bbdd;\n        (**ppcStackX16)();\n        uStack32784 = 0x45bbea;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45bc19;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45bccf;\n        fcn.0045ae60();\n        uStack65552 = 0x45bcdd;\n        (**ppcStackX16)();\n        uStack65552 = 0x45bcea;\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45bd19;\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.0045ad80();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045ae60();\n        (**ppcStackX16)();\n        fcn.0045ada0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459e00(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436167;\n            fcn.004327c0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43616d;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 9491
    },
    "00467cc0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint64_t fcn.00467cc0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_EAX << 6;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                uVar1 = *((arg1 + 0x15cU) * 0x10 + 0x539c88);\n                if (arg1 < 0) {\n                    uVar1 = uVar1 + 1;\n                }\n                return SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1) >> 0x40, 0) << 7 |\n                       SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1), 0) >> 0x39;\n            }\n            unaff_RBX = 0x4c7fd8;\n            *(*0x20 + -0x20) = 0x467d71;\n            in_EAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_EAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x467d85;\n        fcn.0045ad80();\n        in_EAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 506
    },
    "0046adc0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint64_t fcn.0046adc0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = fcn.004582e0();\n    if (uVar1 < in_RAX[1]) {\n        return uVar1 * 0x80 + *in_RAX;\n    }\n    iVar2 = fcn.0046ae40();\n    return iVar2;\n}\n",
        "token_count": 158
    },
    "00429960": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid fcn.00429960(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *0x598300 = *0x598300 + ((*0x598300 + 1U) / 0x6000000) * -0x6000000 + 1;\n    *0x598304 = 0;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 144
    },
    "004693e0": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.004693e0(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint16_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar11 = *0x53d270;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar5 = *0x53d298;\n        uVar10 = *0x53d258;\n        uVar13 = *0x53d250;\n        iVar11 = *0x53d290;\n        uVar14 = *0x53d298;\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = *0x53d2b8;\n        while (uVar5 = uVar7,  uVar10 = *0x53d278,  uVar13 = *0x53d2b0,  uVar14 = *0x53d2b8,  uVar6 < uVar5) {\n            iVar8 = uVar5 - uVar6 >> 1;\n            uVar7 = iVar8 + uVar6;\n            uVar15 = uVar6;\n            if (*0x53d2b8 <= uVar7) goto code_r0x004695bb;\n            if (*(*0x53d2b0 + uVar7 * 4) < uVar4) {\n                uVar6 = uVar6 + iVar8 + 1;\n                uVar7 = uVar5;\n            }\n        }\n        if (*0x53d2b8 <= uVar6) {\n            return 0;\n        }\n        uVar15 = uVar6 & 0xfffffffffffffffe;\n        if (uVar15 < *0x53d2b8) {\n            uVar2 = *(*0x53d2b0 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar6 = uVar6 | 1;\n            if (uVar6 < *0x53d2b8) {\n                if (*(*0x53d2b0 + uVar6 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar13 = uVar4 - 0x10000;\n                uVar7 = 0;\n                uVar5 = *0x53d278;\n                while (uVar9 = uVar5,  uVar12 = uVar4 - 0x10000,  uVar7 < uVar9) {\n                    uVar10 = uVar9 - uVar7 >> 1;\n                    uVar15 = uVar10 + uVar7;\n                    uVar5 = *0x53d278;\n                    uVar14 = uVar9;\n                    if (*0x53d278 <= uVar15) goto code_r0x00469596;\n                    uVar1 = *(*0x53d270 + uVar15 * 2);\n                    uVar6 = uVar1;\n                    uVar5 = uVar15;\n                    uVar14 = uVar15;\n                    if (uVar1 < uVar12) {\n                        uVar7 = uVar7 + uVar10 + 1;\n                        uVar5 = uVar9;\n                        uVar14 = uVar9;\n                    }\n                }\n                if (*0x53d278 <= uVar7) {\n                    return 1;\n                }\n                if (uVar7 < *0x53d278) {\n                    uVar1 = *(*0x53d270 + uVar7 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar12;\n                }\n                uVar10 = *0x53d278;\n                uVar5 = fcn.0045d480(*0x53d278);\ncode_r0x00469596:\n                fcn.0045d480(uVar5);\n            }\n            fcn.0045d480(uVar14);\n        }\n        fcn.0045d480(uVar14);\n        uVar5 = uVar6;\ncode_r0x004695bb:\n        in_RAX = fcn.0045d480(uVar14);\n    }\n    while (uVar6 = uVar5,  uVar12 = in_RAX,  uVar15 < uVar6) {\n        iVar8 = uVar6 - uVar15 >> 1;\n        uVar5 = iVar8 + uVar15;\n        if (uVar14 <= uVar5) goto code_r0x004696d1;\n        if (*(iVar11 + uVar5 * 2) < uVar12) {\n            uVar15 = uVar15 + iVar8 + 1;\n            uVar5 = uVar6;\n        }\n    }\n    if (uVar14 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar14) {\n        if (uVar12 < *(iVar11 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar14) {\n            if (*(iVar11 + (uVar15 | 1) * 2) < uVar12) {\n                return 0;\n            }\n            uVar6 = 0;\n            uVar5 = uVar10;\n            uVar7 = uVar14;\n            while (uVar14 = uVar5,  uVar6 < uVar14) {\n                iVar11 = uVar14 - uVar6 >> 1;\n                uVar7 = iVar11 + uVar6;\n                if (uVar10 <= uVar7) goto code_r0x004696b3;\n                uVar5 = uVar7;\n                if (*(uVar13 + uVar7 * 2) < uVar12) {\n                    uVar6 = uVar6 + iVar11 + 1;\n                    uVar5 = uVar14;\n                    uVar7 = uVar14;\n                }\n            }\n            if (uVar10 <= uVar6) {\n                return 1;\n            }\n            if (uVar6 < uVar10) {\n                uVar1 = *(uVar13 + uVar6 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar12;\n            }\n            fcn.0045d480(uVar10);\n            uVar14 = uVar7;\ncode_r0x004696b3:\n            fcn.0045d480(uVar10);\n        }\n        fcn.0045d480(uVar14);\n    }\n    fcn.0045d480(uVar14);\ncode_r0x004696d1:\n    fcn.0045d480(uVar14);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1728
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00401720();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 89
    },
    "00401be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401be0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((unaff_RBX[1] == *(in_RAX + 8)) && (cVar1 = fcn.00402180(*(in_RAX + 8), *unaff_RBX),  cVar1 != '\\0')) {\n        uVar2 = fcn.00402180(0xb, unaff_RBX);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00402620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402620(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00402420();\n    fcn.00402420(in_RAX + 4);\n    return;\n}\n",
        "token_count": 102
    },
    "00402680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402680(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00402520();\n    fcn.00402520(in_RAX + 8);\n    return;\n}\n",
        "token_count": 102
    },
    "00403140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403140(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x16c0);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x16c0) + 0x10;\n    *(iVar1 + 0x16c0) = iVar3;\n    if (*(iVar1 + 0x16c8) == iVar3) {\n        fcn.0042bc60();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00403300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403300(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    int64_t unaff_R14;\n    int64_t iVar17;\n    \n    iVar17 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x90) != unaff_R14) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434760();\n        fcn.0042e320();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x138) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar17 + 0x30);\n    uVar9 = *(iVar2 + 0x2e0);\n    uVar10 = *(iVar2 + 0x2e4);\n    uVar11 = *(iVar2 + 0x2e8);\n    uVar12 = *(iVar2 + 0x2ec);\n    uVar13 = *(iVar2 + 0x2f0);\n    uVar14 = *(iVar2 + 0x2f4);\n    uVar15 = *(iVar2 + 0x2f8);\n    uVar16 = *(iVar2 + 0x2fc);\n    uVar5 = *(iVar2 + 0x300);\n    uVar6 = *(iVar2 + 0x304);\n    uVar7 = *(iVar2 + 0x308);\n    uVar8 = *(iVar2 + 0x30c);\n    fcn.004580a0();\n    *(*(iVar17 + 0x30) + 0xe8) = 0;\n    *(*(iVar17 + 0x30) + 0x350) = 0;\n    fcn.004034e0(arg1);\n    *(*(iVar17 + 0x30) + 0xe8) = 1;\n    iVar3 = *(iVar17 + 0x30);\n    if (iVar3 == iVar2) {\n        while( true ) {\n            LOCK();\n            piVar1 = iVar3 + 0x350;\n            if (*piVar1 == 0) break;\n            fcn.0045ac40();\n        }\n        *piVar1 = 1;\n        fcn.0043c960();\n        iVar17 = *(iVar17 + 0x30);\n        *(iVar17 + 0x2e0) = uVar9;\n        *(iVar17 + 0x2e4) = uVar10;\n        *(iVar17 + 0x2e8) = uVar11;\n        *(iVar17 + 0x2ec) = uVar12;\n        *(iVar17 + 0x2f0) = uVar13;\n        *(iVar17 + 0x2f4) = uVar14;\n        *(iVar17 + 0x2f8) = uVar15;\n        *(iVar17 + 0x2fc) = uVar16;\n        *(iVar17 + 0x300) = uVar5;\n        *(iVar17 + 0x304) = uVar6;\n        *(iVar17 + 0x308) = uVar7;\n        *(iVar17 + 0x30c) = uVar8;\n        return;\n    }\n    fcn.00432f60();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 898
    },
    "00403980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403980(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x004228e0();\n    if (cVar2 == '\\0') {\n        if (*0x543ae8 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x543ae8;\n            iVar4 = (*0x543ae8)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "00404620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404620(void)\n\n{\n    fcn.00404660(1);\n    return;\n}\n",
        "token_count": 25
    },
    "00405360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405360(void)\n\n{\n    fcn.004053a0(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00405d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00405d60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar1 = *0x598210;\n    fcn.0040a2a0();\n    if ((0 < in_RAX) && (in_RAX != iVar1)) {\n        fcn.00437980();\n        *0x598224 = in_RAX;\n        fcn.00437a00();\n        return iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "00406540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00406540(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x406620);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 219
    },
    "00406680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00406680(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434940();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 932
    },
    "00407800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407800(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0xb31a546e) {\n            if (uVar4 < 0x7925028d) {\n                if (uVar4 < 0x2ea27ffc) {\n                    if (uVar4 == 0x13ff06c5) {\n                        if (in_RAX == 0x494f60) {\n                            fcn.004346e0();\n                            fcn.00434980();\n                            fcn.00434760();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x2ea27ffb) && (uVar5 = 0x4950e0,  in_RAX == 0x4950e0)) {\n                        fcn.004346e0();\n                        fcn.004349e0(uVar5, param_2);\n                        fcn.00434760();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x663e425f) {\n                    if (in_RAX == 0x495ce0) {\n                        fcn.004346e0();\n                        fcn.00434ce0();\n                        fcn.00434760();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x7925028c) && (in_RAX == 0x495060)) {\n                    fVar1 = *(unaff_RBX + 4);\n                    fVar2 = *unaff_RBX;\n                    fcn.004346e0();\n                    fcn.00434c40(fVar2, fVar1);\n                    fcn.00434760();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x963f9c00) {\n                if (uVar4 == 0x86318d2e) {\n                    if (in_RAX == 0x495ca0) {\n                        fcn.004346e0();\n                        fcn.00434ce0();\n                        fcn.00434760();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x963f9bff) && (in_RAX == 0x495560)) {\n                    fcn.004346e0();\n                    fcn.00434de0();\n                    fcn.00434760();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xb0c23ed3) {\n                uVar5 = 0x4950a0;\n                if (in_RAX == 0x4950a0) {\n                    fcn.004346e0();\n                    fcn.004349e0(uVar5, param_2);\n                    fcn.00434760();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xb31a546d) && (in_RAX == 0x495020)) {\n                uVar5 = unaff_RBX[1];\n                uVar3 = *unaff_RBX;\n                fcn.004346e0();\n                fcn.00434c40(uVar3, uVar5);\n                fcn.00434760();\n                return;\n            }\n        }\n        else if (uVar4 < 0xd04ae83e) {\n            if (uVar4 < 0xbd4ad793) {\n                if (uVar4 == 0xbbad4102) {\n                    if (in_RAX == 0x495520) {\n                        fcn.004346e0();\n                        fcn.00434de0();\n                        fcn.00434760();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0xbd4ad792) && (in_RAX == 0x495d20)) {\n                    fcn.004346e0();\n                    fcn.00434ce0();\n                    fcn.00434760();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xcc06c027) {\n                if (in_RAX == 0x4955a0) {\n                    fcn.004346e0();\n                    fcn.00434de0();\n                    fcn.00434760();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xd04ae83d) && (in_RAX == 0x495c60)) {\n                fcn.004346e0();\n                fcn.00434ce0();\n                fcn.00434760();\n                return;\n            }\n        }\n        else if (uVar4 < 0xe0ff5cb5) {\n            if (uVar4 == 0xd5b87712) {\n                if (in_RAX == 0x495be0) {\n                    fcn.004346e0();\n                    fcn.00434ce0();\n                    fcn.00434760();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xe0ff5cb4) && (in_RAX == 0x495b60)) {\n                fcn.004346e0();\n                fcn.00434fe0();\n                fcn.00434760();\n                return;\n            }\n        }\n        else if (uVar4 == 0xecd580ce) {\n            if (in_RAX == 0x4954e0) {\n                fcn.004346e0();\n                fcn.00434de0();\n                fcn.00434760();\n                return;\n            }\n        }\n        else if (uVar4 == 0xeff20ea0) {\n            if (in_RAX == 0x495c20) {\n                fcn.004346e0();\n                fcn.00434ce0();\n                fcn.00434760();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xf75371fa) && (in_RAX == 0x4954a0)) {\n            fcn.004346e0();\n            fcn.00434de0();\n            fcn.00434760();\n            return;\n        }\n        fcn.00407d60();\n        return;\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 1499
    },
    "00409020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409020(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 206
    },
    "004091c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004091c0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "004095e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004095e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if (*0x543ae8 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x543ae8;\n        iVar3 = (*0x543ae8)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x160);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00409080();\n        }\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 268
    },
    "00409920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00409920(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_EAX < 0x100) {\n        puVar1 = in_EAX * 8 + 0x5378a0;\n    }\n    else {\n        puVar1 = fcn.0040b760(0);\n        *puVar1 = in_EAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 160
    },
    "004099a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.004099a0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x5378a0;\n    }\n    else {\n        puVar1 = fcn.0040b760(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 161
    },
    "00409cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00409cc0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00408d20(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "00409d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409d60(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x53c818,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0040a040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a040(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a9a0();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a260(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a9e0();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a7e0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40a817;\n                fcn.0042ec60();\n                *(*0x20 + -0x40) = 0x40a82a;\n                fcn.0040a540(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40a845;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40a855;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 411
    },
    "0040a880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040a880(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40a8b7;\n                fcn.0042ec60();\n                *(*0x20 + -0x48) = 0x40a8bc;\n                fcn.0043cde0();\n                *(*0x20 + -0x48) = 0x40a8cf;\n                uVar1 = fcn.0040a540(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40a8d8;\n                fcn.004580a0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40a8f8;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40a908;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "0040a9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a9a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    return;\n}\n",
        "token_count": 84
    },
    "0040a9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a9e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 86
    },
    "0040b3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b3e0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x48) = 0x40b433;\n                uVar1 = fcn.00415860();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x48) = 0x40b465;\n                fcn.00415720(0);\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x48) = 0x40b48d;\n                uVar1 = fcn.00415860();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                arg1 = 0;\n                *(*0x20 + -0x48) = 0x40b4a9;\n                fcn.00415720(0);\n                if (*(*0x20 + -0x28) == 99) break;\n                iVar2 = *(*0x20 + -0x28) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40b4fd;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40b512;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 787
    },
    "0040b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040b540(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40b58d;\n                uVar1 = fcn.00410f80(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40b5c5;\n                        fcn.00413d40();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40b5de;\n                        uVar1 = fcn.00410f80(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040b5f2;\n                    }\n                }\n                else {\ncode_r0x0040b5f2:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40b645;\n                        fcn.004346e0();\n                        *(*0x20 + -0x48) = 0x40b656;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x48) = 0x40b665;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x48) = 0x40b676;\n                        fcn.00434fe0();\n                        *(*0x20 + -0x48) = 0x40b685;\n                        fcn.00434ce0();\n                        *(*0x20 + -0x48) = 0x40b68a;\n                        fcn.00434940();\n                        *(*0x20 + -0x48) = 0x40b68f;\n                        fcn.00434760();\n                        *(*0x20 + -0x48) = 0x40b6a5;\n                        fcn.00432f60();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40b6b6;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40b6c5;\n                fcn.004346e0();\n                *(*0x20 + -0x48) = 0x40b6d6;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x40b6e5;\n                fcn.00434ce0();\n                *(*0x20 + -0x48) = 0x40b6f6;\n                fcn.00434fe0();\n                *(*0x20 + -0x48) = 0x40b705;\n                fcn.00434ce0();\n                *(*0x20 + -0x48) = 0x40b70a;\n                fcn.00434940();\n                *(*0x20 + -0x48) = 0x40b70f;\n                fcn.00434760();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40b725;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x48) = 0x40b732;\n            in_RAX = fcn.0045d480(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40b745;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1452
    },
    "0040c140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c140(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040b760(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "0040c4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040c4a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40c560;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.0045ac40();\n    return uStack56;\n}\n",
        "token_count": 145
    },
    "00410f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410f20(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.004116a0(unaff_RBX);\n    fcn.0045db00();\n    return;\n}\n",
        "token_count": 46
    },
    "00410f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410f60(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 63
    },
    "00411480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00411480(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.0045d4a0(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x56a638);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00413c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413c20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 82
    },
    "00414460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414460(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x56a5c8) {\n                return;\n            }\n            if (iVar1 == *0x56a5c8 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x414499;\n                fcn.00414280();\n                *(*0x20 + -0x28) = 0x4144a5;\n                fcn.004457a0();\n                *(*(*0x20 + 8) + 0x488) = *0x56a5c8;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x56a5c8;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x4144d8;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x4144e9;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x4144f2;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x414505;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x41450e;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x414513;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x414518;\n            fcn.00434760();\n            *(*0x20 + -0x28) = 0x414529;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x414534;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "00414ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414ec0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x56a880;\n            *(*0x20 + -0x18) = *0x56a888;\n            iVar2 = 0;\n            iVar3 = *0x56a880;\n            iVar5 = *0x56a888;\n            while( true ) {\n                if (iVar5 <= iVar2) {\n                    *0x5981d4 = 1;\n                    return;\n                }\n                uVar1 = *(iVar3 + iVar2 * 8);\n                uVar6 = uVar1 >> 0x14;\n                if (0x3f < uVar6) break;\n                *(*0x20 + -0x20) = iVar2;\n                iVar2 = *(*(uVar6 * 8 + 0x56a638) + (uVar1 & 0xfffff) * 8);\n                iVar5 = *(iVar2 + 0x210c0);\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x28) = iVar2;\n                    iVar3 = 0x59a0f8;\n                    *(*0x20 + -0x48) = 0x414f71;\n                    iVar2 = fcn.0040c4a0(0x59a0f8);\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x48) = 0x414fa9;\n                        fcn.00432f60();\n                        goto code_r0x00414fa9;\n                    }\n                    *(*(*0x20 + -0x28) + 0x210c0) = iVar2;\n                }\n                else {\n                    for (iVar3 = 0; iVar3 < 0x10000; iVar3 = iVar3 + 1) {\ncode_r0x00414fa9:\n                        *(iVar5 + iVar3) = 0;\n                    }\n                }\n                iVar2 = *(*0x20 + -0x20) + 1;\n                iVar5 = *(*0x20 + -0x18);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x48) = 0x414fcc;\n            fcn.0045d4a0(0x40);\n        }\n        *(puVar4 + -8) = 0x414fd2;\n        fcn.0045ad80();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "00414fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414fe0(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598c80 == 0) {\n                if (*0x598d08 < *0x598d0c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x5981d4 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x415049;\n            fcn.00432f60();\n        }\n        *(puVar2 + -8) = 0x41504f;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00415060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415060(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x56a638) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x41511c;\n                in_RAX = fcn.0045d4a0(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x415130;\n            fcn.004346e0();\n            *(*0x20 + -0x40) = 0x415135;\n            fcn.004346e0();\n            *(*0x20 + -0x40) = 0x415146;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x415150;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x415155;\n            fcn.00434940();\n            *(*0x20 + -0x40) = 0x41515a;\n            fcn.00434760();\n            *(*0x20 + -0x40) = 0x41515f;\n            fcn.004346e0();\n            *(*0x20 + -0x40) = 0x415170;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x41517a;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x41518b;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x415195;\n            fcn.00434e40();\n            *(*0x20 + -0x40) = 0x4151a6;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x4151ab;\n            fcn.00434760();\n            *(*0x20 + -0x40) = 0x4151c6;\n            fcn.0041c760(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x4151e5;\n            fcn.0041c760(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x415205;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x415229;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1246
    },
    "00415260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415260(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0042b960();\n    fcn.0042f7a0();\n    return uStack24;\n}\n",
        "token_count": 45
    },
    "00415820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415820(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004152e0();\n    return;\n}\n",
        "token_count": 81
    },
    "00415860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415860(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f7a0();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.0042f7a0();\n    return 0;\n}\n",
        "token_count": 125
    },
    "00415960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415960(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042b960();\n    return;\n}\n",
        "token_count": 84
    },
    "004169e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004169e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *0x56a5cc = 1;\n    fcn.0041de00();\n    fcn.0041cda0();\n    *0x598d5c = 0x100000001;\n    return;\n}\n",
        "token_count": 120
    },
    "00418500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418500(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (; *0x598200 < *0x598210; *0x598200 = *0x598200 + 1) {\n        fcn.0043d860();\n        fcn.0040a880();\n        *0x598d68 = 0;\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00419880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419880(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x598d0c <= *0x598d08) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x419960;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x4198d7;\n                fcn.00436440();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x598d08;\n            *(*0x20 + -0x28) = *0x598d0c;\n            *(*0x20 + -0x40) = 0x4198ee;\n            fcn.004346e0();\n            *(*0x20 + -0x40) = 0x4198f7;\n            fcn.00434ce0();\n            *(*0x20 + -0x40) = 0x419908;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x419911;\n            fcn.00434ce0();\n            *(*0x20 + -0x40) = 0x419925;\n            fcn.00434fe0();\n            *(*0x20 + -0x40) = 0x41992a;\n            fcn.00434760();\n            *(*0x20 + -0x40) = 0x41993b;\n            fcn.00432f60();\n        }\n        *(puVar1 + -8) = 0x419945;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "0041a980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a980(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *0x598da0 = in_XMM15;\n    fcn.0043b3a0();\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 126
    },
    "0041c3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c3c0(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg3 = 0;\n    iVar1 = fcn.00411320(0);\n    if (iVar1 != 0) {\n        fcn.0041c440(0, *(*(unaff_R14 + 0x30) + 0xa0), arg3);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0041ccc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ccc0(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x544458,  iVar1 = *0x544450,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.00411320(0);\n            fcn.0041c440(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0041cda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041cda0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 8) = 0x400000;\n    *(in_RAX + 0x10) = *0x4c7968;\n    *(in_RAX + 0x40) = 0x222222;\n    fcn.0041dd80();\n    return;\n}\n",
        "token_count": 145
    },
    "0041e560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e560(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n    }\n    arg1_00 = 0;\n    iVar1 = 0;\n    for (uVar2 = 0; uVar2 < unaff_RBX; uVar2 = uVar2 + iVar3) {\n        if (iVar1 + 0x800000000000U < arg1_00 + 0x800000000000) {\n            iVar3 = arg1_00 - iVar1;\n        }\n        else {\n            iVar3 = 0;\n        }\n        if (iVar3 == 0) {\n            iVar1 = fcn.0041e960();\n            if (iVar1 + 0x800000000000U < unaff_RBX + 0x800000000000) {\n                iVar3 = unaff_RBX - iVar1;\n            }\n            else {\n                iVar3 = 0;\n            }\n            arg1_00 = unaff_RBX;\n            if (iVar3 == 0) break;\n        }\n        iVar3 = fcn.0041eb20(arg1_00);\n    }\n    fcn.0041ea40(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 355
    },
    "0041ea40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041ea40(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar1 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if ((iVar1 == 0) || (*(in_RAX + 0x100e0) != unaff_EDI)) {\n                return;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + -0x28) = 0x41eab7;\n                fcn.0042aac0(arg1);\n                return;\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x28) = 0x41ead2;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_EDI;\n        *(puVar2 + -8) = 0x41eaeb;\n        fcn.0045f460();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 530
    },
    "0041f420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041f420(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX - 1 & unaff_RBX) == 0) && (unaff_RBX != 0)) {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + 8) = in_RAX;\n                    iVar3 = 7;\n                    while( true ) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x10) = iVar3;\n                        uVar1 = *(in_RAX + 0x40 + iVar3 * 8);\n                        uVar2 = *(in_RAX + iVar3 * 8);\n                        *(*0x20 + -0x28) = 0x41f495;\n                        iVar3 = fcn.0041f260(iVar3, uVar1 | uVar2);\n                        if (iVar3 != -1) break;\n                        iVar3 = *(*0x20 + -0x10) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    return 1;\n                }\n                *(*0x20 + -0x28) = 0x41f4bb;\n                fcn.004346e0();\n                *(*0x20 + -0x28) = 0x41f4cc;\n                fcn.00434fe0();\n                *(*0x20 + -0x28) = 0x41f4d6;\n                fcn.00434ce0();\n                *(*0x20 + -0x28) = 0x41f4db;\n                fcn.00434940();\n                *(*0x20 + -0x28) = 0x41f4e5;\n                fcn.00434760();\n                *(*0x20 + -0x28) = 0x41f4f6;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x28) = 0x41f4fb;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x41f50c;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x41f516;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x41f51b;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x41f525;\n            fcn.00434760();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x28) = 0x41f536;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41f546;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 887
    },
    "0041f8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f8a0(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x41f94d;\n                    iVar1 = fcn.00421fe0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x41f927;\n                        iVar1 = fcn.00421fe0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x41f98b;\n                fcn.0045d480(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x41f99c;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41f9b0;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 886
    },
    "00421900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421900(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = fcn.00421fe0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00422320();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00421fe0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 161
    },
    "00422260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422260(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00421f80();\n    fcn.00409e20();\n    return;\n}\n",
        "token_count": 90
    },
    "004222c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004222c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00421f20();\n    fcn.00409e20();\n    return;\n}\n",
        "token_count": 91
    },
    "00422320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00422320(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598c80 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x598c80 >> 0x13) << 3;\n        *0x598c80 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00421f20();\n    return piVar1;\n}\n",
        "token_count": 176
    },
    "004223c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004223c0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x4223e5;\n            iVar2 = fcn.00421fe0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x422433;\n                fcn.0045ddc0(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x42243d;\n                fcn.004222c0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x422459;\n            in_RAX = fcn.0045d480(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422465;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00422980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00422980(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x56a638);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00423740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423740(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x42375f;\n                fcn.00423b00();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x42377a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42378e;\n        fcn.0045f460();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 365
    },
    "004243e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004243e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 82
    },
    "004244e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004244e0(uint8_t param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045f460();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.0040a080();\n    fcn.00424560(param_1);\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 132
    },
    "00425200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425200(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    puVar1 = fcn.00424de0();\n    if (puVar1 != NULL) {\n        fcn.0040a080();\n        *0x570fa0 = *0x570fa0 - *0x570f70;\n        *puVar1 = *0x570f88;\n        *0x570f88 = puVar1;\n        fcn.0040a2a0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "004252a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004252a0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4252cf;\n            fcn.0040a080();\n            *(*0x20 + -0x30) = 0x4252db;\n            uVar3 = fcn.004168a0();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x4252ee;\n            fcn.0040a2a0();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x42530a;\n            cVar2 = fcn.00424ba0();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x425329;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x425339;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "004254a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004254a0(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x5984d0;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x5984d0 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x5984d0 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00425534:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x425555;\n                fcn.0040a080();\n                piVar2 = *0x5984d0;\n                if (*0x5984d0 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x5984d0 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004255d4:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42574c;\n                        fcn.0040a2a0();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x4255e5;\n                    piVar4 = fcn.004258c0();\n                    piVar2 = *0x5984d0;\n                    if (*0x5984d0 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x5984d0 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00425660:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x30) = iVar6;\n                            piVar4[1] = *0x5984c8;\n                            *(*0x20 + -0x48) = 0x42572a;\n                            *0x5984c8 = piVar4;\n                            fcn.0040a2a0();\n                            return *(*0x20 + -0x30);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x004256c5:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x28) = iVar5;\n                                piVar4[1] = *0x5984d0;\n                                *(*0x20 + -0x48) = 0x4256f6;\n                                *0x5984d0 = piVar4;\n                                fcn.0040a2a0();\n                                return *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = 0x425779;\n                            fcn.00432f60();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x004256c5;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x004256c5;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x425786;\n                        fcn.0045d4a0(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x5984d0;\n                        **0x5984d0 = **0x5984d0 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00425660;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x00425660;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x425793;\n                    fcn.0045d4a0(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x5984d0;\n                    **0x5984d0 = **0x5984d0 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004255d4;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004255d4;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x42579d;\n                fcn.0045d4a0(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x5984d0;\n                **0x5984d0 = **0x5984d0 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00425534;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00425534;\n                }\n            }\n            *(*0x20 + -0x48) = 0x4257a7;\n            in_RAX = fcn.0045d4a0(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x4257b2;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1835
    },
    "004257c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004257c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004254a0();\n    return;\n}\n",
        "token_count": 82
    },
    "00425800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425800(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    if (*0x5984e0 != 0) {\n        iVar1 = *0x5984e0;\n        if (*0x5984c8 == 0) {\n            *0x5984c8 = *0x5984e0;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x5984c8;\n            *0x5984c8 = *0x5984e0;\n        }\n    }\n    uVar2 = *0x5984d0;\n    *0x5984e0 = *0x5984d8;\n    *0x5984d8 = *0x5984d0;\n    *0x5984d0 = 0;\n    fcn.0040a2a0(uVar2);\n    return;\n}\n",
        "token_count": 305
    },
    "004258c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004258c0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5984c8 != 0) {\n                *(*0x20 + -0x18) = *0x5984c8;\n                *0x5984c8 = *(*0x5984c8 + 8);\n                *(*0x20 + -0x30) = 0x4258ff;\n                fcn.0045db00();\n                puVar2 = *(*0x20 + -0x18);\n                goto code_r0x00425942;\n            }\n            *(*0x20 + -0x30) = 0x425914;\n            fcn.0040a2a0();\n            *(*0x20 + -0x30) = 0x425925;\n            iVar1 = fcn.00415260();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42593d;\n                fcn.0040a080();\n                puVar2 = *(*0x20 + -0x10);\ncode_r0x00425942:\n                puVar2[1] = 0;\n                *puVar2 = 0;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x42596c;\n            fcn.00432f60();\n        }\n        *(puVar3 + -8) = 0x425972;\n        fcn.0045ad80();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 484
    },
    "00427ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00427ae0(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045d480(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 702
    },
    "0042a0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a0e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434f60();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    else {\n        fcn.00454320();\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434f60();\n        fcn.00434fe0();\n        fcn.00434e40();\n        fcn.00434fe0();\n        fcn.00434fe0();\n        fcn.00434fe0();\n        fcn.00434760();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00453720();\n        fcn.0045ac40();\n    }\n    else {\n        fcn.00453720();\n        fcn.00452aa0(0);\n    }\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 429
    },
    "0042a380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a380(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434f60();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434760();\n    fcn.00453720();\n    fcn.0045ac40();\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 243
    },
    "0042a520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a520(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434760();\n    fcn.00453960();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434760();\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 224
    },
    "0042a5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042a5e0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x42a630;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42a645;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 341
    },
    "0042a660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042a660(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42a70a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42a725;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 577
    },
    "0042a740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042a740(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX + 0x800000000000U < arg1 + 0x800000000000U) {\n        if (unaff_RBX + 0x800000000000U <= arg1 + 0x800000000000U) {\n            return in_RAX;\n        }\n        iVar1 = fcn.0042a5e0();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0042a8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a8a0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x0042a990;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.0045d480(arg1);\ncode_r0x0042a990:\n    fcn.0045d480(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 516
    },
    "0042a9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042a9a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t *arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42a9c7;\n            piVar3 = fcn.0042a8a0();\n            if (piVar3 == NULL) {\n                arg1 = (*(*0x20 + 8))[1];\n                if (arg1 != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (piVar3 - 1U < arg1) {\n                    iVar5 = (piVar3 - 1U) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= piVar3) {\n                        return 0;\n                    }\n                    if (piVar3 < arg1) {\n                        return *(piVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42aa88;\n                    fcn.0045d480(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42aa90;\n                fcn.0045d480(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42aa97;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42aaa7;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 706
    },
    "0042b020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b020(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    \n    iVar1 = *in_RAX;\n    if (in_RAX[1] == 0) {\n        return 0;\n    }\n    iVar4 = in_RAX[1] + -1;\n    iVar5 = iVar4 * 0x10;\n    iVar2 = *(iVar1 + 8 + iVar5);\n    iVar3 = *(iVar1 + iVar5);\n    if (iVar3 + 0x800000000000U < iVar2 + 0x800000000000U) {\n        uVar6 = iVar2 - iVar3;\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (unaff_RBX < uVar6) {\n        *(iVar1 + 8 + iVar5) = iVar2 - unaff_RBX;\n        in_RAX[3] = in_RAX[3] - unaff_RBX;\n        return iVar2 - unaff_RBX;\n    }\n    in_RAX[1] = iVar4;\n    in_RAX[3] = in_RAX[3] - uVar6;\n    return iVar3;\n}\n",
        "token_count": 312
    },
    "0042b0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b0a0(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg2;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = 0x42b0c7;\n            uVar2 = fcn.0042a8a0();\n            if (uVar2 == 0) {\n                iVar12 = *(*0x20 + 8);\n                *(iVar12 + 0x18) = 0;\n                *(iVar12 + 8) = 0;\n                return;\n            }\n            puVar9 = *(*0x20 + 8);\n            uVar10 = *puVar9;\n            uVar5 = puVar9[1];\n            if (uVar2 <= uVar5) break;\n            *(*0x20 + -0x58) = 0x42b2aa;\n            in_RAX = fcn.0045d540(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x42b2ba;\n        fcn.0045ad80();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    uVar5 = uVar5 - uVar2;\n    piVar11 = (uVar2 << 4 & uVar2 - puVar9[2] >> 0x3f) + uVar10;\n    if (uVar5 < 1) {\n        iVar12 = 0;\n        goto code_r0x0042b134;\n    }\n    iVar3 = 0;\n    iVar6 = 0;\n    do {\n        if (*piVar11 + 0x800000000000U < piVar11[1] + 0x800000000000U) {\n            iVar12 = piVar11[1] - *piVar11;\n        }\n        else {\n            iVar12 = 0;\n        }\n        iVar3 = iVar3 + 1;\n        iVar12 = iVar12 + iVar6;\n        iVar6 = iVar12;\n        if (uVar5 <= iVar3) {\ncode_r0x0042b134:\n            uVar5 = uVar2;\n            iVar6 = uVar5 - 1;\n            piVar11 = iVar6 * 0x10;\n            iVar3 = *(uVar10 + piVar11);\n            iVar1 = *(uVar10 + 8 + piVar11);\n            uVar10 = 0x800000000000;\n            uVar2 = *(*0x20 + 0x10) + 0x800000000000;\n            if ((uVar2 < iVar3 + 0x800000000000U) || (iVar1 + 0x800000000000U <= uVar2)) {\ncode_r0x0042b22d:\n                arg2 = puVar9[2];\n                if (uVar5 <= arg2) {\n                    puVar9[1] = uVar5;\n                    puVar9[3] = puVar9[3] - iVar12;\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x42b250;\n                uVar2 = uVar5;\n                fcn.0045d500(uVar5, arg2);\n            }\n            else {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = iVar6;\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x30) = piVar11;\n                *(*0x20 + -0x38) = iVar12;\n                *(*0x20 + -0x58) = 0x42b19d;\n                iVar4 = fcn.0042a740(*(*0x20 + 0x10));\n                iVar12 = (*(*0x20 + -0x20) - *(*0x20 + -0x28)) + *(*0x20 + -0x38);\n                uVar10 = iVar4 + 0x800000000000;\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 == 0) {\n                    puVar9 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x18);\n                    goto code_r0x0042b22d;\n                }\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                iVar12 = iVar12 - iVar7;\n                puVar9 = *(*0x20 + 8);\n                uVar10 = *puVar9;\n                uVar5 = puVar9[1];\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < uVar5) {\n                    iVar7 = *(*0x20 + -0x30);\n                    *(uVar10 + iVar7) = iVar4;\n                    *(uVar10 + 8 + iVar7) = iVar1;\n                    uVar5 = *(*0x20 + -0x10);\n                    goto code_r0x0042b22d;\n                }\n            }\n            *(*0x20 + -0x58) = 0x42b258;\n            fcn.0045d480(uVar5);\n        }\n        piVar11 = piVar11 + 2;\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "0042b2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b2e0(void)\n\n{\n    uint64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX[2] < in_RAX[1]) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX[1] = 0;\n                unaff_RBX[2] = in_RAX[2];\n                iVar1 = unaff_RBX[4];\n                *(*0x20 + -0x28) = 0x42b335;\n                iVar1 = fcn.0040c4a0(iVar1);\n                unaff_RBX = *(*0x20 + 0x10);\n                *unaff_RBX = iVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            arg2 = unaff_RBX[2];\n            arg1 = in_RAX[1];\n            if (arg1 <= arg2) {\n                unaff_RBX[1] = arg1;\n                unaff_RBX[3] = in_RAX[3];\n                if (in_RAX[1] < arg1) {\n                    arg1 = in_RAX[1];\n                }\n                if (*unaff_RBX != *in_RAX) {\n                    *(*0x20 + -0x28) = 0x42b385;\n                    fcn.0045ddc0(arg1 << 4);\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x42b394;\n            in_RAX = fcn.0045d500(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42b3a5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 619
    },
    "0042b560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b560(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    while( true ) {\n        uVar12 = *(in_RAX + 0x20);\n        uVar10 = uVar12 >> 0x20;\n        if (uVar12 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar12 >> 0x29) break;\n        while (uVar11 = uVar12 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar12 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar12 & 0xffffffff));\n            if (uVar12 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar13 = *piVar2;\n                while (iVar13 == 0) {\n                    iVar13 = *piVar2;\n                }\n                iVar9 = *piVar2;\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.00409e20(uVar6, iVar8, iVar9);\n                }\n                return iVar13;\n            }\n            uVar12 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 623
    },
    "0042b6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b6a0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042b716;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042b716;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42b710;\n                        fcn.00409e20(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042b716:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42b73d;\n                    fcn.00432f60();\n                }\n                *(*0x20 + -0x30) = 0x42b74e;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42b75d;\n            fcn.004346e0();\n            *(*0x20 + -0x30) = 0x42b76e;\n            fcn.00434fe0();\n            *(*0x20 + -0x30) = 0x42b778;\n            fcn.00434ce0();\n            *(*0x20 + -0x30) = 0x42b789;\n            fcn.00434fe0();\n            *(*0x20 + -0x30) = 0x42b795;\n            fcn.00434ce0();\n            *(*0x20 + -0x30) = 0x42b79a;\n            fcn.00434940();\n            *(*0x20 + -0x30) = 0x42b79f;\n            fcn.00434760();\n            *(*0x20 + -0x30) = 0x42b7b0;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42b7bb;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 939
    },
    "0042b7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042b7e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040c4a0(0x59a0f8);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 267
    },
    "0042b880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b880(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42b8be;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x42b8cf;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x42b8dd;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x42b8ee;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x42b8fa;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x42b8ff;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x42b905;\n            fcn.00434760();\n            *(*0x20 + -0x28) = 0x42b916;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42b925;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 512
    },
    "0042b960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b960(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (in_RAX == NULL) {\n        return;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434ce0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.00432f60();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 238
    },
    "0042bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bb20(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x28) = 0x42bb6d;\n                fcn.0040a2a0();\n                return;\n            }\n            LOCK();\n            piVar1 = iVar3 + 0x26d4;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + 1;\n            if ((iVar2 + 1U & 1) == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = iVar2 + 1U;\n            *(*0x20 + -0x28) = 0x42bb85;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x42bb96;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x42bb9f;\n            fcn.00434ce0();\n            *(*0x20 + -0x28) = 0x42bba5;\n            fcn.00434940();\n            *(*0x20 + -0x28) = 0x42bbaa;\n            fcn.00434760();\n            *(*0x20 + -0x28) = 0x42bbbb;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x42bbc6;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "0042c060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c060(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 139
    },
    "0042c2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c2a0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42c2e5;\n            fcn.0042f7a0();\n            *0x52c288 = *(*0x20 + -0x18);\n            if (*0x52c288 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42c319;\n            fcn.0045e900();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42c33a;\n            fcn.004346e0();\n            *(*0x20 + -0x48) = 0x42c34b;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x42c355;\n            fcn.00434ce0();\n            *(*0x20 + -0x48) = 0x42c366;\n            fcn.00434fe0();\n            *(*0x20 + -0x48) = 0x42c36b;\n            fcn.00434760();\n            *(*0x20 + -0x48) = 0x42c37c;\n            fcn.00432f60();\n        }\n        *(puVar1 + -8) = 0x42c385;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 672
    },
    "0042c900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c900(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42c93b;\n                fcn.0042c0e0(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42c94e;\n            fcn.004346e0();\n            *(*0x20 + -0x30) = 0x42c95f;\n            fcn.00434fe0();\n            *(*0x20 + -0x30) = 0x42c96b;\n            fcn.00434de0();\n            *(*0x20 + -0x30) = 0x42c970;\n            fcn.00434940();\n            *(*0x20 + -0x30) = 0x42c975;\n            fcn.00434760();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42c986;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42c99e;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 651
    },
    "0042c9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042c9c0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42ca09;\n                    fcn.0042f6a0();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42ca3d;\n                fcn.00432f60();\n            }\n            *(*0x20 + -0x30) = 0x42ca45;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42ca5f;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "0042d720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d720(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f7a0();\n    if (iStack16 != 0) {\n        *0x5981ca = 1;\n        fcn.0042f620();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0042dbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042dbc0(void)\n\n{\n    fcn.0042f620();\n    return -*0x598380 * *0x598378;\n}\n",
        "token_count": 38
    },
    "0042dc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042dc40(void)\n\n{\n    fcn.0042f620();\n    fcn.0042f620();\n    return 0x195726909;\n}\n",
        "token_count": 40
    },
    "0042e020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e020(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.0042f6a0();\n        fcn.00442a20(arg1);\n        return;\n    }\n    fcn.0045d480(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 102
    },
    "0042e320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e320(void)\n\n{\n    fcn.0040a080();\n    *0x5981ec = 1;\n    fcn.0042f620();\n    return;\n}\n",
        "token_count": 45
    },
    "0042edc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042edc0(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.0042f8a0();\n    if (iStack32 != 0) {\n        fcn.0042f620();\n        return;\n    }\n    if (*0x5981ec != 0) goto code_r0x0042ef0e;\n    do {\n        fcn.0045e900();\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434de0();\n        fcn.00434fe0();\n        fcn.00434ce0();\n        fcn.00434fe0();\n        fcn.00434760();\n        fcn.00432f60();\ncode_r0x0042ef0e:\n        fcn.0040a080();\n        fcn.0040a080();\n    } while( true );\n}\n",
        "token_count": 199
    },
    "0042f3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f3e0(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x348) != 0) {\n        fcn.0042f620();\n        *(in_RAX + 0x348) = 0;\n    }\n    if (*(in_RAX + 0x338) != 0) {\n        fcn.0042f620();\n        *(in_RAX + 0x338) = 0;\n    }\n    if (*(in_RAX + 0x340) != 0) {\n        fcn.0042f620();\n        *(in_RAX + 0x340) = 0;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0042f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f5c0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x2a0) = 0;\n    *(iVar1 + 0x2a8) = auStackX8;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 104
    },
    "0042f620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f620(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 1;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 125
    },
    "0042f6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f6a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 2;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 127
    },
    "0042f720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f720(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 3;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 133
    },
    "0042f7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f7a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 4;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 135
    },
    "0042f820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f820(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 5;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 133
    },
    "0042f8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f8a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 6;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 135
    },
    "0042f920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f920(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x2a0) = 7;\n    *(iVar1 + 0x2a8) = auStackX16;\n    fcn.0042f4e0();\n    return;\n}\n",
        "token_count": 133
    },
    "0042f9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f9a0(void)\n\n{\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 27
    },
    "00431a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431a40(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 86
    },
    "004346e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004346e0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.0040a080();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 204
    },
    "00434900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434900(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00434fe0();\n    return;\n}\n",
        "token_count": 81
    },
    "00434940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434940(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00434fe0();\n    return;\n}\n",
        "token_count": 81
    },
    "00434980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434980(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_AL == '\\0') {\n        fcn.00434fe0();\n    }\n    else {\n        fcn.00434fe0();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00434c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434c40(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.004349e0(param_1, param_2);\n    fcn.004349e0(param_1, param_2);\n    fcn.00434fe0();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 149
    },
    "00434de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434de0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX < 0) {\n        fcn.00434fe0();\n    }\n    fcn.00434ce0();\n    return;\n}\n",
        "token_count": 112
    },
    "00434e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434e40(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = 0;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x434e8f;\n            uVar2 = fcn.0045d72b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4a8168),  0xf < uVar2 ||\n                 (iVar1 = *0x598318 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x598318, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x434f18;\n                    fcn.004347c0(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x434f32;\n                fcn.0045d480(100);\n            }\n            *(*0x20 + -0x90) = 0x434f3c;\n            in_RAX = fcn.0045d480(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x434f47;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 619
    },
    "00434f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434f60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00434e40();\n    return;\n}\n",
        "token_count": 82
    },
    "00434fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434fa0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00434e40();\n    return;\n}\n",
        "token_count": 82
    },
    "00435060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435060(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434de0();\n    fcn.00434fe0();\n    fcn.00434760();\n    fcn.00434e40();\n    return;\n}\n",
        "token_count": 146
    },
    "00435140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435140(code **arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    *0x598318 = 0x10;\n    for (uVar2 = 0; uVar2 + in_RAX < unaff_RBX; uVar2 = uVar2 + 8) {\n        if ((uVar2 & 0xf) == 0) {\n            if (uVar2 != 0) {\n                fcn.004346e0();\n                fcn.00434940();\n                fcn.00434760();\n            }\n            fcn.004346e0();\n            fcn.00434e40();\n            fcn.00434fe0();\n            fcn.00434760();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.004347c0(1);\n        fcn.004346e0();\n        fcn.00434e40();\n        fcn.00434760();\n        fcn.004346e0();\n        fcn.00434900();\n        fcn.00434760();\n        puVar3 = fcn.0044abe0();\n        if (puVar3 != NULL) {\n            fcn.0044b2c0();\n            uVar1 = *puVar3;\n            fcn.004346e0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434fe0();\n            fcn.00434e40(uVar1);\n            fcn.00434fe0();\n            fcn.00434760();\n        }\n    }\n    *0x598318 = 0;\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 505
    },
    "004359a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004359a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 82
    },
    "00436380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436380(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar1 = *0x544438;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 156
    },
    "00436440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436440(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x598268,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004364e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004364e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00401080();\n    *0x5981c3 = *0x598985;\n    *0x5981c4 = *0x598840;\n    *0x5981d7 = *0x598a27;\n    *0x5981d8 = *0x598a2a;\n    *0x5981d9 = *0x598a2e;\n    return;\n}\n",
        "token_count": 161
    },
    "004367e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004367e0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544d30 - *0x544d40 <= *0x544d38) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x544d38;\n            *(*0x20 + -0x28) = 0x436825;\n            fcn.004346e0();\n            *(*0x20 + -0x28) = 0x436836;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x436845;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x436856;\n            fcn.00434fe0();\n            *(*0x20 + -0x28) = 0x43685b;\n            fcn.00434760();\n            *(*0x20 + -0x28) = 0x43686c;\n            fcn.00432f60();\n        }\n        *(puVar1 + -8) = 0x436872;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 384
    },
    "00436880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00436880(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544d30 <= *0x544d30 + 1) {\n                *(*0x20 + -0x10) = *0x544d30;\n                *(*0x20 + -0x28) = 0x4368b6;\n                *0x544d30 = *0x544d30 + 1;\n                fcn.004367e0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x4368d6;\n            fcn.00432f60();\n        }\n        *(puVar1 + -8) = 0x4368dc;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 303
    },
    "00437980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437980(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00442e60(0);\n    fcn.00437760();\n    return;\n}\n",
        "token_count": 91
    },
    "00437a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437a00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004378a0();\n    fcn.004431a0(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00437f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437f40(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x437f89;\n                fcn.0045ab60();\n                *(*0x20 + -0x28) = 0x437fa5;\n                fcn.0042ef80();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x544900) {\n                    *(*0x20 + -0x28) = 0x437fbc;\n                    fcn.00438040();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x437fdd;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x544900) {\n                    *(*0x20 + -0x28) = 0x437ffe;\n                    fcn.0043f4c0();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x438017;\n                fcn.0043b6c0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x438032;\n            fcn.00432f60();\n        }\n        *(puVar4 + -8) = 0x438038;\n        fcn.0045ad80();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 648
    },
    "00438080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438080(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    do {\n        fcn.0040a400();\n        *(*(unaff_R14 + 0x30) + 0x120) = 0;\n        cVar1 = fcn.00439220();\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 89
    },
    "00438b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00438b40(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5981f4,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *0x5981f4 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00438e00();\n        uVar3 = *0x5982b8;\n        *0x5982b8 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00438bc0();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00438bc0();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 252
    },
    "00439300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439300(void)\n\n{\n    fcn.00439220();\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 32
    },
    "00439b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439b57)\n\nvoid fcn.00439b20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x544d58 != 0) {\n        if (*0x544d5c != 0) {\n            return;\n        }\n        LOCK();\n        *0x544d5c = 1;\n        fcn.00439580();\n        return;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0043b2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b2c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x544d08 == 0) {\n        if ((*0x544d10 == 0) || (in_RAX < *0x544d10)) {\n            fcn.0042c460();\n        }\n    }\n    else {\n        fcn.00439b20();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0043cde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043cde0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x274) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043c8e0();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045ac40();\n    }\n    fcn.00437220(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045ac40();\n    }\n    fcn.0045ac40();\n    fcn.0043c8e0();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 430
    },
    "0043d4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043d4e0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar2 = fcn.00441180();\n    iVar1 = *0x544e10;\n    if ((iVar2 != 0) && (*0x544e10 != 0)) {\n        *0x544e10 = 0;\n        fcn.0040a380(iVar1);\n    }\n    fcn.0040a2a0();\n    if (iVar2 != 0) {\n        fcn.0043f4c0();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 207
    },
    "0043d700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d700(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = fcn.0040c140();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.0045ac40();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0043d860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d860(void)\n\n{\n    fcn.0045ac40();\n    return;\n}\n",
        "token_count": 25
    },
    "0043f7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f7a0(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    *0x544d2c = *0x544d2c + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043f800();\n    }\n    fcn.0040a2a0();\n    return;\n}\n",
        "token_count": 145
    },
    "00440dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440dc0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 0x130) = *0x544d20;\n    *0x544d28 = *0x544d28 + 1;\n    *0x544d20 = in_RAX;\n    fcn.0043f800();\n    return;\n}\n",
        "token_count": 139
    },
    "004412a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004412a0(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0xdf8);\n            LOCK();\n            puVar1 = in_RAX + 0xdf8;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x5f4);\n        if (uVar2 - *(in_RAX + 0x5f0) < 0x100) {\n            *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x5f4) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.004413a0(*(in_RAX + 0x5f0));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 417
    },
    "00441760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00441760(void)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t in_RAX;\n    uint32_t uVar7;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    uStack24 = CONCAT44(in_XMM15_Db, in_XMM15_Da);\n    uStack16 = CONCAT44(in_XMM15_Dd, in_XMM15_Dc);\n    uVar3 = *(in_RAX + 0xdf8);\n    if (uVar3 == 0) {\n        bVar8 = false;\n    }\n    else {\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        bVar8 = uVar3 == *puVar1;\n        *puVar1 = *puVar1 ^ bVar8 * *puVar1;\n    }\n    uVar4 = uStack24;\n    uVar5 = uStack16;\n    if ((bVar8) && (*(uVar3 + 0xa0) = 0,  uVar4 = uVar3,  uVar5 = uVar3,  uStack16 != 0)) {\n        *(uStack16 + 0xa0) = uVar3;\n        uVar4 = uStack24;\n    }\n    do {\n        do {\n            uStack16 = uVar5;\n            uStack24 = uVar4;\n            iVar2 = *(in_RAX + 0x5f0);\n            uVar7 = *(in_RAX + 0x5f4) - iVar2;\n            if (uVar7 == 0) {\n                return uStack24;\n            }\n            uVar4 = uStack24;\n            uVar5 = uStack16;\n        } while (0x100 < uVar7);\n        LOCK();\n    } while (iVar2 != *(in_RAX + 0x5f0));\n    *(in_RAX + 0x5f0) = uVar7 + iVar2;\n    for (uVar6 = 0; uVar6 < uVar7; uVar6 = uVar6 + 1) {\n        uVar3 = *(in_RAX + 0x5f8 + (uVar6 + iVar2) * 8);\n        *(uVar3 + 0xa0) = 0;\n        uVar4 = uVar3;\n        if (uStack16 != 0) {\n            *(uStack16 + 0xa0) = uVar3;\n            uVar4 = uStack24;\n        }\n        uStack24 = uVar4;\n        uStack16 = uVar3;\n    }\n    return uStack24;\n}\n",
        "token_count": 662
    },
    "00442700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442700(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x598620 = 1;\n            *0x598640 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x44273d;\n            uVar3 = fcn.00406bc0();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x59865c = (*0x598660 | *0x598664 | *0x598668) != 0;\n                    *(*0x20 + -0x88) = 0x4428ff;\n                    fcn.00406bc0();\n                    *(*0x20 + -0x88) = 0x442905;\n                    fcn.00458440();\n                    *0x598238 = *0x52c188;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x44276f;\n                fcn.004022e0(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x004429fa;\n                    if (param_2 < param_1 + 1) goto code_r0x004429f2;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x4427f5;\n                fcn.004022e0(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x0044273f:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x442885;\n                        uVar4 = param_2;\n                        uVar3 = fcn.00449240();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x598258 = uVar3;\n                        }\n                    }\n                    else if (0 < *0x53d198) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x53d198;\n                        iVar8 = 0;\n                        iVar5 = *0x53d198;\n                        iVar7 = *0x53d190;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x44294d;\n                                cVar2 = fcn.00402180(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x442991;\n                                    iVar5 = fcn.00449240();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x0044273f;\n                }\n                *(*0x20 + -0x88) = 0x4429ed;\n                fcn.0045d540(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x4429f2;\n            fcn.0045d4c0(param_1, param_2);\ncode_r0x004429f2:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x4429fa;\n            param_2 = param_1;\n            fcn.0045d540(param_1);\ncode_r0x004429fa:\n            *(*0x20 + -0x88) = 0x4429ff;\n            fcn.0045d4c0(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x442a05;\n        fcn.0045ad80();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1936
    },
    "00442a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442a20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x442a65;\n                fcn.0045ed60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x442ab0;\n                uVar3 = fcn.0045cea0(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x442b05;\n                        fcn.0045d480(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x00442b05;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x00442b05:\n            *(*0x20 + -0x30) = 0x442b10;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045d480(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x442b2a;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "00442ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442ba0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.0045ac40();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00443d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443d20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0042f620();\n    fcn.0042f620();\n    return;\n}\n",
        "token_count": 91
    },
    "004449e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004449e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040b760(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00444a58;\n        do {\n            unaff_RBX = 0x4c7e68;\n            uVar3 = fcn.004327c0();\ncode_r0x00444a58:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x4c7e78;\n        fcn.004327c0();\n    } while( true );\n}\n",
        "token_count": 393
    },
    "00446400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446400(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    fcn.004502e0(unaff_RBX);\n    return;\n}\n",
        "token_count": 762
    },
    "00446540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446540(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.0040a080();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045ddc0(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040a2a0();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 495
    },
    "00448900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00448900(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x44893c;\n                iVar1 = fcn.00448e20();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x448965;\n                fcn.0045d480(0);\n            }\n            *(*0x20 + -0x20) = 0x448972;\n            in_RAX = fcn.0045d4c0(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x448985;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 426
    },
    "004489a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004489a0(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.00448ec0();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045ddc0(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00448c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448c40(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x448c95;\n                iVar1 = fcn.004565a0(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x448cce;\n            uVar2 = fcn.00448900();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar5 = *(*0x20 + 0x18);\n            iVar7 = *(*0x20 + -0x48);\n            iVar4 = 0;\n            arg1_00 = 0;\n            while ((iVar4 < iVar5 && (arg1_00 < iVar7))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00448dc8;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x448d36;\n                iVar3 = fcn.004565a0(iVar1 - arg1_00);\n                iVar4 = *(*0x20 + -0x28) + 1;\n                iVar5 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x448dc8;\n            fcn.0045d4c0(arg1_00, unaff_RBX);\ncode_r0x00448dc8:\n            *(*0x20 + -0x80) = 0x448dd3;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045d540(unaff_RDI);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x448ded;\n        fcn.0045ad80();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1133
    },
    "00449320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00449320(void)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.004022e0(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "004493e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004493e0(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x004493e0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x44946e;\n                uVar2 = fcn.00448e20();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x00449513;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x449426;\n            iVar3 = fcn.004565a0(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x0044958a;\n    }\n    goto code_r0x00449596;\ncode_r0x00449513:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x0044957f;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449569;\n            fcn.0045d4c0(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x449574;\n        fcn.0045d480(arg1_00);\ncode_r0x00449574:\n        *(*0x20 + -0x80) = 0x44957f;\n        fcn.0045d540(arg1_00);\n        goto code_r0x0044957f;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x00449574;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x4494cb;\n    iVar3 = fcn.004565a0(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x00449513;\ncode_r0x0044957f:\n    *(*0x20 + -0x80) = 0x44958a;\n    fcn.0045d480(arg1_02);\ncode_r0x0044958a:\n    *(*0x20 + -0x80) = 0x449595;\n    in_RAX = fcn.0045d480(arg1);\ncode_r0x00449596:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x4495a5;\n    fcn.0045ad80();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x004493e0;\n}\n",
        "token_count": 1316
    },
    "0044ab40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ab40(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_RAX == NULL) {\n        return 0;\n    }\n    uVar1 = *in_RAX;\n    if (uVar1 == 0) {\n        return in_RAX[2];\n    }\n    for (iVar2 = 0x531960; iVar2 != 0; iVar2 = *(iVar2 + 0x210)) {\n        if ((*(iVar2 + 0xa0) < uVar1 || *(iVar2 + 0xa0) == uVar1) &&\n           (uVar1 <= *(iVar2 + 0xa8) && *(iVar2 + 0xa8) != uVar1)) goto code_r0x0044abb6;\n    }\n    iVar2 = 0;\ncode_r0x0044abb6:\n    uVar1 = fcn.0044b2c0(uVar1, iVar2);\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "0044abe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nint64_t fcn.0044abe0(void)\n\n{\n    uint64_t arg1;\n    uint64_t uVar1;\n    code *pcVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    \n    for (uVar5 = 0x531960; uVar5 != 0; uVar5 = *(uVar5 + 0x210)) {\n        if ((*(uVar5 + 0xa0) < in_RAX || *(uVar5 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(uVar5 + 0xa8) && *(uVar5 + 0xa8) != in_RAX)) goto code_r0x0044ac20;\n    }\n    uVar5 = 0;\ncode_r0x0044ac20:\n    if (uVar5 == 0) {\n        return 0;\n    }\n    uVar3 = in_RAX - *(uVar5 + 0xa0);\n    piVar7 = (uVar3 >> 0xc) * 0x14 + *(uVar5 + 0x98);\n    uVar3 = (uVar3 & 0xfff) >> 8;\n    if (uVar3 < 0x10) {\n        uVar6 = *(piVar7 + uVar3 + 4) + *piVar7;\n        uVar3 = uVar6;\n        arg1 = *(uVar5 + 0x88);\n        iVar4 = *(uVar5 + 0x80);\n        if (arg1 <= uVar6) {\n            uVar3 = arg1 - 1;\n        }\n        if ((uVar3 & 0xffffffff) < arg1) {\n            uVar1 = uVar3;\n            if (in_RAX < *(iVar4 + (uVar3 & 0xffffffff) * 0x10)) goto code_r0x0044ad30;\n            do {\n                uVar3 = uVar1;\n                uVar6 = uVar3 + 1;\n                if (arg1 <= uVar6) goto code_r0x0044ad26;\n                uVar1 = uVar6;\n            } while (*(uVar6 * 0x10 + iVar4) <= in_RAX);\n            do {\n                if ((uVar3 & 0xffffffff) < arg1) {\n                    uVar1 = *(iVar4 + 8 + (uVar3 & 0xffffffff) * 0x10);\n                    if (uVar1 == 0xffffffffffffffff) {\n                        return 0;\n                    }\n                    uVar3 = *(uVar5 + 0x70);\n                    in_RAX = *(uVar5 + 0x68);\n                    if (uVar1 < uVar3) {\n                        return uVar1 + in_RAX;\n                    }\n                    fcn.0045d4a0(uVar3);\n                }\n                fcn.0045d480(arg1);\ncode_r0x0044ad26:\n                uVar5 = arg1;\n                fcn.0045d480(arg1);\n                while( true ) {\n                    uVar3 = uVar3 - 1;\ncode_r0x0044ad30:\n                    if (arg1 <= (uVar3 & 0xffffffff)) goto code_r0x0044ad65;\n                    if (*(iVar4 + (uVar3 & 0xffffffff) * 0x10) <= in_RAX) break;\n                    if (uVar3 == 0) goto code_r0x0044ad4f;\n                }\n            } while (uVar3 != 0);\ncode_r0x0044ad4f:\n            fcn.00432f60();\ncode_r0x0044ad65:\n            fcn.0045d480(arg1);\n        }\n        fcn.0045d480(arg1);\n    }\n    fcn.0045d4a0(0x10);\n    pcVar2 = swi(3);\n    iVar4 = (*pcVar2)();\n    return iVar4;\n}\n",
        "token_count": 915
    },
    "0044b380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b380(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044b380:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44b3a5;\n        iVar1 = fcn.0044b2c0();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044b3d6;\n            if (unaff_RBX <= arg1) goto code_r0x0044b3ed;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044b3d6;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044b3f9;\ncode_r0x0044b3d6:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44b3ed;\n    fcn.0045d4c0(arg1, unaff_RBX);\ncode_r0x0044b3ed:\n    *(*0x20 + -0x20) = 0x44b3f8;\n    in_RAX = fcn.0045d480(unaff_RBX);\ncode_r0x0044b3f9:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44b408;\n    fcn.0045ad80();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044b380;\n}\n",
        "token_count": 611
    },
    "0044b700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b700(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0044b5e0(arg1);\n    return;\n}\n",
        "token_count": 89
    },
    "0044b760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0044b760(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uVar1 = fcn.0044ada0(*(in_RAX + 0x14));\n    if ((uVar1 & 7) != 0) {\n        fcn.0044b2c0();\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434fe0();\n        fcn.00434900();\n        fcn.00434e40();\n        fcn.00434900();\n        fcn.00434e40();\n        fcn.00434900();\n        fcn.00434e40();\n        fcn.00434900();\n        fcn.00434de0(uVar1 & 0xffffffff);\n        fcn.00434940();\n        fcn.00434760();\n        uVar1 = uVar1 & 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "0044b8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044b8c0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t arg1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = *(unaff_RBX + 0x58);\n            iVar4 = *(unaff_RBX + 0x60);\n            uVar1 = *(in_RAX + 0x14);\n            if (uVar1 <= arg1) {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = *in_RAX;\n                *(*0x20 + -0x20) = 0xffffffff;\n                iVar4 = iVar4 - uVar1;\n                iVar2 = 0;\n                while( true ) {\n                    *(*0x20 + -0x1c) = iVar2;\n                    *(*0x20 + -0x58) = 0x44b974;\n                    fcn.0044bba0(iVar4);\n                    if (*0x20 == '\\x18') break;\n                    iVar2 = *(*0x20 + -0x1c);\n                    if (*(*0x20 + -0x1c) < *(*0x20 + -0x20)) {\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                return *(*0x20 + -0x1c);\n            }\n            *(*0x20 + -0x58) = 0x44b98f;\n            in_RAX = fcn.0045d540(arg1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44b99f;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 613
    },
    "0044b9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b9c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044ada0(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "0044ba60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044ba60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044ada0(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0044bb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044bb00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*(in_RAX + 0x20) < arg1 || *(in_RAX + 0x20) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044ada0(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0044e4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044e4c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040a080();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x544458; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x544450 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1668);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1670);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.0040a2a0();\n    return iVar4;\n}\n",
        "token_count": 278
    },
    "0044e980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044e980(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045ed60();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0044e9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e9c0(ulong param_1)\n\n{\n    fcn.0042e3a0(param_1);\n    return;\n}\n",
        "token_count": 36
    },
    "0044f200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044f200(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.0040a080();\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "0044f800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f800(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0044f860();\n    return;\n}\n",
        "token_count": 82
    },
    "0044f980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f980(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044eb60(&uStack16);\n    return;\n}\n",
        "token_count": 115
    },
    "0044fc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fc60(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    piVar2 = fcn.0040c140();\n    *piVar2 = unaff_RBX + 1;\n    uVar1 = fcn.0044f580(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044eb60(auStack24);\n    return;\n}\n",
        "token_count": 239
    },
    "00450240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450240(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598aa0 == -1) {\n        iStack16 = 0;\n        fcn.0044eb60(&iStack16);\n    }\n    else {\n        iStack16 = *0x598aa0;\n        fcn.0044eb60(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004524c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004524c0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004524c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x45252f;\n        fcn.0045d6f4();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x452548;\n        fcn.00454240(0x20);\n        *(*0x20 + -0x40) = 0;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x452594;\n        fcn.0045da00();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x4526e5;\n                    fcn.004541c0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x004526fd;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x543ab8;\n                if (*0x543ab8 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x452666;\n                    fcn.004346e0();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x452677;\n                    fcn.00434fe0();\n                    *(*0x20 + -0x290) = 0x452685;\n                    fcn.00434e40();\n                    *(*0x20 + -0x290) = 0x45268a;\n                    fcn.00434940();\n                    *(*0x20 + -0x290) = 0x45268f;\n                    fcn.00434760();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x452645;\n                    iVar2 = fcn.00453fc0(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x0045270b;\ncode_r0x004526fd:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x45270a;\n    in_RAX = fcn.0045d480(0x100000);\ncode_r0x0045270b:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x452728;\n    fcn.0045ad80();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x004524c0;\n}\n",
        "token_count": 1552
    },
    "00452800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452800(uint64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0044b2c0();\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434940();\n    fcn.00434760();\n    uVar1 = arg1;\n    if (*in_RAX < arg1) {\n        uVar1 = arg1 - 1;\n    }\n    fcn.0044b5e0(uVar1);\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434fe0();\n    fcn.00434de0(uVar1 & 0xffffffff);\n    fcn.00434760();\n    uVar1 = *in_RAX;\n    if (uVar1 < arg1) {\n        fcn.004346e0();\n        fcn.00434fe0();\n        fcn.00434e40(uVar1);\n        fcn.00434760();\n    }\n    fcn.004346e0();\n    fcn.00434940();\n    fcn.00434760();\n    return;\n}\n",
        "token_count": 339
    },
    "00453260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00453260(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ac40();\n    return 0;\n}\n",
        "token_count": 86
    },
    "004533e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004533e0(int64_t arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x453429;\n                fcn.00450500(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x45343d;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x45345c;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "00453b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453b80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004346e0();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434e40();\n    fcn.00434fe0();\n    fcn.00434760();\n    auStack32 = CONCAT88(arg1, 0x453d60);\n    fcn.00435140(auStack32);\n    return;\n}\n",
        "token_count": 211
    },
    "00454500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00454500(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x531960; iVar3 != 0; iVar3 = *(iVar3 + 0x210)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x004546d6;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x45458b;\n            fcn.0040a080();\n            uVar1 = *0x544570;\n            *(*0x20 + -0x58) = 0x4545a5;\n            puVar2 = fcn.0040ecc0(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x4545c5;\n            fcn.0040a2a0();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x4545d3;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x4545e5;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x4545f1;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x454605;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x45460f;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x454625;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x45462a;\n            fcn.00434760();\n            iVar3 = 0x531960;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x454667;\n                fcn.004346e0();\n                *(*0x20 + -0x58) = 0x454678;\n                fcn.00434fe0();\n                *(*0x20 + -0x58) = 0x454685;\n                fcn.00434e40();\n                *(*0x20 + -0x58) = 0x454696;\n                fcn.00434fe0();\n                *(*0x20 + -0x58) = 0x4546a5;\n                fcn.00434e40();\n                *(*0x20 + -0x58) = 0x4546aa;\n                fcn.00434940();\n                *(*0x20 + -0x58) = 0x4546af;\n                fcn.00434760();\n                iVar3 = *(*(*0x20 + -0x10) + 0x210);\n            }\n            *(*0x20 + -0x58) = 0x4546d6;\n            fcn.00432f60();\ncode_r0x004546d6:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x4546e5;\n            fcn.004346e0();\n            *(*0x20 + -0x58) = 0x4546f6;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x454705;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x454716;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x454725;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x454736;\n            fcn.00434fe0();\n            *(*0x20 + -0x58) = 0x454745;\n            fcn.00434e40();\n            *(*0x20 + -0x58) = 0x45474a;\n            fcn.00434940();\n            *(*0x20 + -0x58) = 0x45474f;\n            fcn.00434760();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x454765;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x454774;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1507
    },
    "00456700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456700(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x45672e;\n                fcn.0044e9c0(unaff_RBX);\n                return;\n            }\n            *(*0x20 + -0x28) = 0x456745;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x45675a;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "004572c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004572c0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4572de;\n            iVar1 = fcn.00432f20();\n            if (iVar1 == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x457305;\n            fcn.00432f60();\n        }\n        *(puVar2 + -8) = 0x45730b;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 255
    },
    "00457840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457840(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040b760(1, *in_RAX);\n    return;\n}\n",
        "token_count": 95
    },
    "004578a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004578a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1 = fcn.0040c140();\n    fcn.0040da60(arg1, param_2, param_3, param_4);\n    return arg1;\n}\n",
        "token_count": 134
    },
    "00457920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457920(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0040dce0();\n    return;\n}\n",
        "token_count": 82
    },
    "004579c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004579c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00410c20(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "00457a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457a20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00410ec0();\n    return;\n}\n",
        "token_count": 82
    },
    "00458060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458060(void)\n\n{\n    fcn.0043c960();\n    return;\n}\n",
        "token_count": 24
    },
    "004583e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004583e0(void)\n\n{\n    fcn.0045cb60();\n    return;\n}\n",
        "token_count": 25
    },
    "00458420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458420(void)\n\n{\n    fcn.0042e320();\n    return;\n}\n",
        "token_count": 24
    },
    "00458560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458560(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00454500();\n    return;\n}\n",
        "token_count": 80
    },
    "004585a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004585a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004547a0();\n    return;\n}\n",
        "token_count": 82
    },
    "004585e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004585e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00454a60();\n    return;\n}\n",
        "token_count": 82
    },
    "00458620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458620(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00454500();\n    return;\n}\n",
        "token_count": 80
    },
    "004587a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004587a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00442e60(1);\n    return;\n}\n",
        "token_count": 84
    },
    "00458800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458800(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004431a0(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00458860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458860(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00442e60(3);\n    return;\n}\n",
        "token_count": 86
    },
    "004588c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004588c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004431a0(0);\n    return;\n}\n",
        "token_count": 84
    },
    "00458900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458900(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x458932;\n            fcn.004346e0();\n            *(*0x20 + -0x20) = 0x458945;\n            fcn.00434fe0();\n            *(*0x20 + -0x20) = 0x45894f;\n            fcn.00434ce0();\n            *(*0x20 + -0x20) = 0x458965;\n            fcn.00434fe0();\n            *(*0x20 + -0x20) = 0x45896f;\n            fcn.00434ce0();\n            *(*0x20 + -0x20) = 0x458974;\n            fcn.00434940();\n            *(*0x20 + -0x20) = 0x458979;\n            fcn.00434760();\n            *(*0x20 + -0x20) = 0x45898a;\n            in_RAX = fcn.00432f60();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x458995;\n        fcn.0045ad80();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 461
    },
    "004589a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004589a0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ed60();\n    return uStack16;\n}\n",
        "token_count": 91
    },
    "00458a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00458a20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x48) = 0x458a3e;\n            iVar1 = fcn.00449320();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x48) = 0x458a4f;\n            uVar2 = fcn.00448e20();\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x48) = 0x458a70;\n                fcn.0045ddc0(*(*0x20 + -0x20));\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x48) = 0x458a9c;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x458aa7;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 482
    },
    "00458ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458ac0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.0045ddc0(arg1);\n    return;\n}\n",
        "token_count": 88
    },
    "00459740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459740(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000060;\n    ulong uStack0000000000000068;\n    ulong uStack0000000000000070;\n    \n    uStack0000000000000060 = 0;\n    uStack0000000000000068 = 0;\n    uStack0000000000000070 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 330
    },
    "00459880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459880(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000078;\n    ulong uStack0000000000000080;\n    ulong uStack0000000000000088;\n    \n    uStack0000000000000078 = 0;\n    uStack0000000000000080 = 0;\n    uStack0000000000000088 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 330
    },
    "004599c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004599c0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack0000000000000090;\n    ulong uStack0000000000000098;\n    ulong uStack00000000000000a0;\n    \n    uStack0000000000000090 = 0;\n    uStack0000000000000098 = 0;\n    uStack00000000000000a0 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 333
    },
    "00459b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459b00(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    ulong uStackX16;\n    uchar auStackX24 [16];\n    ulong uStack00000000000000a8;\n    ulong uStack00000000000000b0;\n    ulong uStack00000000000000b8;\n    \n    uStack00000000000000a8 = 0;\n    uStack00000000000000b0 = 0;\n    uStack00000000000000b8 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x244;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x138) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2e0) = uStackX8;\n    *(iVar2 + 0x2e8) = uStackX16;\n    *(iVar2 + 0x2f0) = auStackX24;\n    fcn.004031e0();\n    fcn.0043e580();\n    return;\n}\n",
        "token_count": 337
    },
    "0045cfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cfe0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x16c0);\n    *(iVar1 + 0x16c0) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x16c8);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045f000();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 212
    },
    "0045d93c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d93c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    return;\n}\n",
        "token_count": 3269
    },
    "0045d9f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d9f2(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    return;\n}\n",
        "token_count": 1851
    },
    "0045da00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045da00(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1742
    },
    "0045da38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045da38(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    return;\n}\n",
        "token_count": 1302
    },
    "0045da46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045da46(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    return;\n}\n",
        "token_count": 1187
    },
    "0045da8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045da8c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    return;\n}\n",
        "token_count": 637
    },
    "0045da9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045da9a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045e980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045e980(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t in_stack_00000000;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = arg4;\n    fcn.0045cca0(5, (in_stack_00000000 - 0x460880U & 0xffffffff) % 5);\n    return 0;\n}\n",
        "token_count": 103
    },
    "0045eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045eca0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x348);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x543a40)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 187
    },
    "0045ef00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ef00(void)\n\n{\n    fcn.00405e20();\n    return;\n}\n",
        "token_count": 25
    },
    "0045f000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f000(void)\n\n{\n    fcn.0042bc60();\n    return;\n}\n",
        "token_count": 25
    },
    "0045f1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f1a0(void)\n\n{\n    fcn.0042e3a0(*0x53d028);\n    return;\n}\n",
        "token_count": 35
    },
    "0045f1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f1c0(void)\n\n{\n    fcn.0042e3a0(*0x53d038);\n    return;\n}\n",
        "token_count": 35
    },
    "0045f280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f280(void)\n\n{\n    fcn.0043d860();\n    return;\n}\n",
        "token_count": 25
    },
    "0045f2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f2c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.004420a0(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 61
    },
    "0045f560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045f560(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00459020();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045f5c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.004591a0();\n    return uStack24;\n}\n",
        "token_count": 37
    },
    "0045f600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045f600(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00459300();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045f6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045f6c0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.004595c0();\n    return uStack32;\n}\n",
        "token_count": 54
    },
    "0045f740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045f740(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00459740();\n    return uStack32;\n}\n",
        "token_count": 51
    },
    "0045f7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045f7e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00459880();\n    return uStack32;\n}\n",
        "token_count": 53
    },
    "0045f8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045f8a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.004599c0();\n    return uStack32;\n}\n",
        "token_count": 54
    },
    "0045f9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0045f9a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uStack32;\n    \n    fcn.00459b00();\n    return uStack32;\n}\n",
        "token_count": 54
    },
    "0045fce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045fce0(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*unaff_RBX == *in_RAX) && (unaff_RBX[1] == in_RAX[1])) {\n        if ((unaff_RBX[3] == in_RAX[3]) &&\n           (((unaff_RBX[5] == in_RAX[5] && (cVar1 = fcn.00402180(in_RAX[3], unaff_RBX[2]),  cVar1 != '\\0')) &&\n            (cVar1 = fcn.00402180(in_RAX[5], unaff_RBX),  cVar1 != '\\0')))) {\n            uVar2 = fcn.00402180(0x20, unaff_RBX);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "00462fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462fa0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                do {\n                    while (arg1 = *in_RAX,  arg1 == 0) {\n                        *(*0x20 + -0x28) = 0x462fed;\n                        fcn.00458320();\n                        *(*0x20 + -0x28) = 0x463005;\n                        cVar1 = fcn.004577c0(0xffffffffffffffff);\n                        if (cVar1 != '\\0') {\n                            *(*0x20 + -0x28) = 0x463047;\n                            fcn.00457760(*(*0x20 + 8));\n                            *(*0x20 + -0x28) = 0x463056;\n                            fcn.00457760();\n                            *(*0x20 + -0x28) = 0x46305b;\n                            fcn.00458340();\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x46300e;\n                        fcn.00458340();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                } while (arg1 == -1);\n                if (*(*0x20 + 0x10) == arg1) {\n                    *(*0x20 + -0x28) = 0x46302a;\n                    fcn.00457760();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x463078;\n                fcn.004327c0();\n            }\n            unaff_RBX = 0x4c8008;\n            *(*0x20 + -0x28) = 0x46308b;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4630a5;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 714
    },
    "00464c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464c60(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t unaff_SIL;\n    int64_t unaff_RDI;\n    ulong in_R10;\n    ulong *in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uVar3;\n    uint8_t uStack0000000000000028;\n    ulong uStack0000000000000038;\n    ulong *puStack0000000000000040;\n    ulong uStack880;\n    uchar auStack872 [792];\n    int64_t iStack80;\n    int64_t iStack72;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    uStack0000000000000038 = in_R10;\n    puStack0000000000000040 = in_R11;\n    uStack0000000000000028 = unaff_SIL;\n    while (uVar3 = SUB168(in_XMM15 >> 0x40, 0),  auStack872 < *(unaff_R14 + 0x10) || auStack872 == *(unaff_R14 + 0x10))\n    {\n        fcn.0045ad80();\n    }\n    uStack880 = 0;\n    fcn.0045d629();\n    fcn.00463dc0();\n    fcn.00464340(puStack0000000000000040, *puStack0000000000000040);\n    if (unaff_RDI < 0) {\n        fcn.00465320(uStack0000000000000038);\n        auStack24 = CONCAT88(uVar3, iStack72);\n        iVar2 = unaff_RDI;\n        if (uStack0000000000000028 < 0x48) {\n            if (uStack0000000000000028 == 0x45) {\ncode_r0x00464f92:\n                iStack72 = unaff_RDI;\n                iVar2 = iStack80 + -1;\n                goto code_r0x00464fec;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x47) goto code_r0x00464fec;\n        }\n        else {\n            if (uStack0000000000000028 == 0x65) goto code_r0x00464f92;\n            if (uStack0000000000000028 == 0x66) {\n                iVar1 = iStack80 - iStack72;\n                iStack72 = unaff_RDI;\n                iVar2 = 0;\n                if (0 < iVar1) {\n                    iVar2 = iVar1;\n                }\n                goto code_r0x00464fec;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x67) goto code_r0x00464fec;\n        }\n        iStack72 = iStack80;\n        iVar2 = iStack80;\n        goto code_r0x00464fec;\n    }\n    if (uStack0000000000000028 < 0x48) {\n        if (uStack0000000000000028 == 0x45) {\ncode_r0x00464d8b:\n            fcn.00464400(unaff_RDI + 1);\n        }\n        else if (uStack0000000000000028 == 0x47) {\ncode_r0x00464ddf:\n            if (unaff_RDI == 0) {\n                unaff_RDI = 1;\n            }\n            fcn.00464400();\n        }\n    }\n    else {\n        if (uStack0000000000000028 == 0x65) goto code_r0x00464d8b;\n        if (uStack0000000000000028 == 0x66) {\n            fcn.00464400(iStack72 + unaff_RDI);\n        }\n        else if (uStack0000000000000028 == 0x67) goto code_r0x00464ddf;\n    }\n    auStack24 = CONCAT88(uVar3, iStack72);\n    iVar2 = unaff_RDI;\ncode_r0x00464fec:\n    auStack40 = CONCAT88(iStack80, 800);\n    auStack56 = CONCAT88(800, &uStack880);\n    fcn.004650c0(arg1, iStack72, iVar2);\n    return;\n}\n",
        "token_count": 1000
    },
    "004650c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004650c0(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    char unaff_DIL;\n    uint8_t in_R9B;\n    int64_t unaff_R14;\n    uint uStackX32;\n    uint uStackX36;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    int64_t iStack0000000000000038;\n    \n    iStack0000000000000038 = in_RAX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (in_R9B < 0x48) {\n        if (in_R9B == 0x45) {\ncode_r0x004650fd:\n            fcn.00465840(arg1);\n            return;\n        }\n        if (in_R9B == 0x47) {\ncode_r0x00465154:\n            iVar1 = CONCAT44(uStackX36, uStackX32);\n            if ((iVar1 < arg3) &&\n               (CONCAT44(in_stack_0000002c, in_stack_00000028) == iVar1 ||\n                CONCAT44(in_stack_0000002c, in_stack_00000028) < iVar1)) {\n                arg3 = iVar1;\n            }\n            if (unaff_DIL != '\\0') {\n                arg3 = 6;\n            }\n            iVar1 = CONCAT44(in_stack_0000002c, in_stack_00000028) + -1;\n            if ((-5 < iVar1) && (iVar1 < arg3)) {\n                fcn.00465da0(arg1);\n                return;\n            }\n            fcn.00465840(arg1);\n            return;\n        }\n    }\n    else {\n        if (in_R9B == 0x65) goto code_r0x004650fd;\n        if (in_R9B == 0x66) {\n            fcn.00465da0(arg1);\n            return;\n        }\n        if (in_R9B == 0x67) goto code_r0x00465154;\n    }\n    if (arg1 < unaff_RBX + 2U) {\n        iStack0000000000000038 = fcn.00444ac0(unaff_RBX);\n    }\n    *(iStack0000000000000038 + unaff_RBX) = 0x25;\n    *(iStack0000000000000038 + 1 + unaff_RBX) = in_R9B;\n    return;\n}\n",
        "token_count": 607
    },
    "00465da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465da0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char cVar10;\n    uint64_t unaff_RDI;\n    uchar uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \ncode_r0x00465da0:\n    cVar10 = unaff_RDI;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x38) = in_RAX;\n        *(*0x20 + 0x58) = unaff_RSI;\n        uVar6 = unaff_RBX;\n        if (cVar10 != '\\0') {\n            uVar6 = unaff_RBX + 1;\n            uVar2 = in_RAX;\n            uVar5 = arg1;\n            uVar12 = unaff_RBX;\n            if (arg1 < uVar6) {\n                *(*0x20 + 0x40) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x465e05;\n                uVar2 = fcn.00444ac0(unaff_RBX);\n                uVar6 = in_RAX + 1;\n                uVar12 = *(*0x20 + 0x40);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar5 = unaff_RBX;\n                unaff_RDI = arg1;\n            }\n            *(uVar2 + uVar12) = 0x2d;\n            in_RAX = uVar2;\n            arg1 = uVar5;\n            unaff_RBX = uVar12;\n        }\n        cVar10 = unaff_RDI;\n        *(*0x20 + -0x18) = uVar6;\n        uVar12 = *(*0x20 + 0x28);\n        if (uVar12 < 1) {\n            uVar12 = uVar6 + 1;\n            uVar3 = in_RAX;\n            uVar5 = arg1;\n            uVar2 = uVar6;\n            if (arg1 < uVar12) {\n                *(*0x20 + -0xa0) = 0x465e5d;\n                uVar3 = fcn.00444ac0(uVar6);\n                uVar12 = in_RAX + 1;\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar2 = *(*0x20 + -0x18);\n                uVar5 = uVar6;\n                unaff_RBX = in_RAX;\n                unaff_RDI = arg1;\n            }\n            *(uVar3 + uVar2) = 0x30;\ncode_r0x00465f99:\n            if (unaff_RSI < 1) {\n                return;\n            }\n            uVar6 = uVar12 + 1;\n            uVar4 = uVar3;\n            uVar8 = uVar5;\n            uVar2 = uVar12;\n            if (uVar5 < uVar6) {\n                *(*0x20 + -0x30) = uVar12;\n                *(*0x20 + -0xa0) = 0x465fc5;\n                uVar4 = fcn.00444ac0(uVar12);\n                uVar6 = uVar3 + 1;\n                uVar2 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar8 = uVar12;\n                unaff_RBX = uVar3;\n                unaff_RDI = uVar5;\n            }\n            *(uVar4 + uVar2) = 0x2e;\n            uVar2 = 0;\n            do {\n                cVar10 = unaff_RDI;\n                if (unaff_RSI <= uVar2) {\n                    return;\n                }\n                uVar12 = *(*0x20 + 0x28) + uVar2;\n                if ((uVar12 < 0) || (*(*0x20 + 0x20) == uVar12 || *(*0x20 + 0x20) < uVar12)) {\n                    uVar11 = 0x30;\n                }\n                else {\n                    if (*(*0x20 + 0x10) <= uVar12) goto code_r0x004660a5;\n                    uVar11 = *(*(*0x20 + 8) + uVar12);\n                }\n                uVar5 = uVar4;\n                uVar3 = uVar8;\n                uVar12 = uVar6;\n                uVar1 = uVar6 + 1;\n                if (uVar8 < uVar6 + 1) {\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x51) = uVar11;\n                    *(*0x20 + -0xa0) = 0x46607c;\n                    uVar5 = fcn.00444ac0(uVar6);\n                    uVar2 = *(*0x20 + -0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar11 = *(*0x20 + -0x51);\n                    uVar3 = uVar6;\n                    unaff_RBX = uVar4;\n                    unaff_RDI = uVar8;\n                    uVar1 = uVar4 + 1;\n                }\n                uVar6 = uVar1;\n                *(uVar5 + uVar12) = uVar11;\n                uVar2 = uVar2 + 1;\n                uVar4 = uVar5;\n                uVar8 = uVar3;\n            } while( true );\n        }\n        if (*(*0x20 + 0x20) < uVar12) {\n            uVar12 = *(*0x20 + 0x20);\n        }\n        uVar2 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 8);\n        if (uVar12 <= uVar2) {\n            *(*0x20 + -0x50) = uVar12;\n            *(*0x20 + -0x20) = uVar12 + uVar6;\n            if (arg1 < uVar12 + uVar6) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x465edc;\n                in_RAX = fcn.00444ac0(uVar6);\n                unaff_RBX = *(*0x20 + -0x10);\n                uVar12 = *(*0x20 + -0x50);\n                arg1 = uVar6;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0xa0) = 0x465f10;\n            fcn.0045ddc0(uVar12);\n            uVar12 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x10);\n            for (iVar7 = *(*0x20 + -0x50); *(*0x20 + 0x28) != iVar7 && iVar7 <= *(*0x20 + 0x28); iVar7 = iVar7 + 1) {\n                uVar2 = uVar3;\n                uVar6 = uVar12;\n                uVar4 = uVar12 + 1;\n                if (uVar5 < uVar12 + 1) {\n                    *(*0x20 + -0x48) = iVar7;\n                    *(*0x20 + -0x28) = uVar12;\n                    *(*0x20 + -0xa0) = 0x465f72;\n                    uVar2 = fcn.00444ac0(uVar12);\n                    uVar6 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x48);\n                    unaff_RBX = uVar3;\n                    uVar5 = uVar12;\n                    uVar4 = uVar3 + 1;\n                }\n                uVar12 = uVar4;\n                *(uVar2 + uVar6) = 0x30;\n                uVar3 = uVar2;\n            }\n            unaff_RSI = *(*0x20 + 0x58);\n            unaff_RDI = uVar5;\n            goto code_r0x00465f99;\n        }\n        goto code_r0x004660b0;\n    }\n    goto code_r0x004660b9;\ncode_r0x004660a5:\n    *(*0x20 + -0xa0) = 0x4660b0;\n    fcn.0045d480(*(*0x20 + 0x10));\ncode_r0x004660b0:\n    arg1 = uVar12;\n    *(*0x20 + -0xa0) = 0x4660b8;\n    in_RAX = fcn.0045d500(arg1, uVar2);\ncode_r0x004660b9:\n    *(puVar9 + 0x38) = in_RAX;\n    *(puVar9 + 0x40) = unaff_RBX;\n    *(puVar9 + 0x48) = arg1;\n    puVar9[0x50] = cVar10;\n    *(puVar9 + 0x58) = unaff_RSI;\n    *(puVar9 + -8) = 0x4660d7;\n    fcn.0045ad80();\n    in_RAX = *(puVar9 + 0x38);\n    unaff_RBX = *(puVar9 + 0x40);\n    arg1 = *(puVar9 + 0x48);\n    unaff_RDI = puVar9[0x50];\n    unaff_RSI = *(puVar9 + 0x58);\n    *0x20 = puVar9;\n    goto code_r0x00465da0;\n}\n",
        "token_count": 2430
    },
    "00466100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466100(uint64_t arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000030;\n    int64_t *piStack0000000000000038;\n    \n    iStack0000000000000030 = arg3;\n    piStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_DIL != '\\0') {\n        uVar3 = unaff_RBX + 1;\n        iVar1 = in_RAX;\n        if (arg1 < uVar3) {\n            arg1 = unaff_RBX;\n            iVar1 = fcn.00444ac0(unaff_RBX);\n            uVar3 = in_RAX + 1;\n        }\n        *(iVar1 + unaff_RBX) = 0x2d;\n        unaff_RBX = uVar3;\n    }\n    iVar2 = fcn.00467fc0(arg1);\n    uVar3 = unaff_RBX + 1;\n    iVar1 = iVar2;\n    if (arg1 < uVar3) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00444ac0(unaff_RBX);\n        uVar3 = iVar2 + 1;\n    }\n    *(iVar1 + unaff_RBX) = 0x70;\n    if (-1 < iStack0000000000000030 - *piStack0000000000000038) {\n        if (arg1 < uVar3 + 1) {\n            arg1 = uVar3;\n            iVar1 = fcn.00444ac0(uVar3);\n        }\n        *(iVar1 + uVar3) = 0x2b;\n    }\n    fcn.00467fc0(arg1);\n    return;\n}\n",
        "token_count": 498
    },
    "00468980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468980(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar unaff_SIL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1_00 = unaff_RBX + 1;\n    iVar1 = in_RAX;\n    if (arg1 < arg1_00) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00444ac0(unaff_RBX);\n        arg1_00 = in_RAX + 1;\n    }\n    *(iVar1 + unaff_RBX) = unaff_SIL;\n    iVar1 = fcn.00468ac0(arg1);\n    if (arg1 < arg1_00 + 1) {\n        iVar1 = fcn.00444ac0(arg1_00);\n    }\n    *(iVar1 + arg1_00) = unaff_SIL;\n    return;\n}\n",
        "token_count": 269
    },
    "004697c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004697c0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int32_t *in_RAX;\n    int64_t **ppiVar4;\n    char cVar5;\n    int64_t *piVar6;\n    char cVar7;\n    ulong uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [8];\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack40 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != -1)) {\n        auStack40 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack40._0_8_ == 0x49c5e0) {\n        cVar7 = *auStack40._8_8_;\n        cVar5 = *(auStack40._8_8_ + 1);\n    }\n    else {\n        cVar5 = '\\0';\n        cVar7 = '\\0';\n    }\n    uStack16 = arg1;\n    ppiVar4 = fcn.0040d100(auStack24);\n    piVar6 = *ppiVar4;\n    if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0046a460();\n        }\n        iVar2 = *(in_RAX + 2);\n        auStack56 = in_XMM15;\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n        }\n        if (auStack56._0_8_ == 0x49c5e0) {\n            cVar7 = *auStack56._8_8_;\n            cVar5 = *(auStack56._8_8_ + 1);\n        }\n        else {\n            cVar5 = '\\0';\n            cVar7 = '\\0';\n        }\n        uStack16 = arg1;\n        ppiVar4 = fcn.0040d100(auStack24);\n        piVar6 = *ppiVar4;\n        if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n            uVar8 = *(in_RAX + 6);\n            uStack16 = arg1;\n            ppiVar4 = fcn.0040d100(auStack24);\n            cVar7 = uVar8;\n            piVar6 = *ppiVar4;\n            fcn.0046a120();\n        }\n        LOCK();\n        iVar1 = *in_RAX;\n        *in_RAX = *in_RAX + -1;\n        if (iVar1 != 1) {\n            fcn.0046a760();\n        }\n    }\n    if (cVar7 != '\\0') {\n        puVar3 = *piVar6;\n        if ((puVar3 == NULL) || (*0x543b28 == puVar3)) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = *puVar3;\n        }\n        return uVar8;\n    }\n    return 0;\n}\n",
        "token_count": 812
    },
    "0046a3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0046a3e0(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 != 0) {\n            return in_RAX & 0xffffffffffffff00 | *0x543b28 == iVar2;\n        }\n        cVar1 = fcn.004577c0(*0x543b28);\n        if (cVar1 != '\\0') break;\n        iVar2 = *in_RAX;\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "0046a700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046a700(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.0046a760();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0046a760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046a760(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00458000();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00458800(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00458800(1);\n    return;\n}\n",
        "token_count": 244
    },
    "0046b800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046b800(ulong param_1)\n\n{\n    int64_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = fcn.0046b3e0();\n        if (param_1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x28);\n    }\n    return uVar1;\n}\n",
        "token_count": 176
    },
    "0046b880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046b880(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t noname_0;\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    noname_1 = *(in_RAX + 8);\n    if (*(in_RAX + 8) == 0) {\n        return 0;\n    }\n    while( true ) {\n        noname_0 = *(noname_1 + 0x20);\n        iVar3 = noname_0;\n        uVar2 = fcn.0046b500(noname_0, noname_1, param_3, param_4);\n        if (iVar3 != '\\0') {\n            return uVar2;\n        }\n        if (noname_0 == 0) break;\n        cVar1 = fcn.004577c0(noname_0);\n        noname_1 = noname_0;\n        if (cVar1 != '\\0') {\n            fcn.00457760(noname_0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 323
    },
    "00471ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00471ce0(ulong param_1)\n\n{\n    uint16_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x471cf9;\n            iVar2 = fcn.00471ba0();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar1 = *(iVar2 + 6);\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 < 0x10001) {\n                return *(iVar2 + 8) + iVar2;\n            }\n            *(*0x20 + -0x20) = 0x471d4b;\n            in_RAX = fcn.0045d580(param_1, uVar1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x471d56;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 376
    },
    "00473100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00473100(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.004088a0();\n    iVar1 = fcn.0044a900();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044ab40();\n        return uVar2;\n    }\n    return 0x4a7e1e;\n}\n",
        "token_count": 146
    },
    "00475120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00475120(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if ((*(in_RAX + 0x17) & 0x20) == 0) {\n        fcn.00457840();\n        fcn.004579c0(arg1);\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 139
    },
    "004751e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004751e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX != 0) {\n                if ((arg1 >> 9 & 1) != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = 0x47521c;\n                uVar1 = fcn.00471d60();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x475232;\n            unaff_RBX = fcn.0040c140();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4aa513;\n            *unaff_RBX = 0x4aa513;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x20) = 0x47525b;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x475270;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "00475b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00475b40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00471420(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "00475b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00475b80(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    ulong uStackX24;\n    uchar auStack40 [32];\n    \n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack40;\n    }\n    fcn.00473640(uStackX24);\n    return;\n}\n",
        "token_count": 127
    },
    "00476380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00476380(ulong noname_0, ulong arg2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00402180(0x1a, arg2);\n    return;\n}\n",
        "token_count": 97
    },
    "00476480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00476480(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (iVar2 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    while (iVar2 = iVar2 + 1,  iVar3 = iVar2,  iVar2 < unaff_RDI) {\n        while( true ) {\n            if (arg1 < iVar3) {\n                cVar1 = (**(in_RAX + 0x20))(iVar3 + -1);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') break;\n            (**(in_RAX + 0x28))();\n            iVar3 = iVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "004765a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004765a0(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1 = (**(in_RAX + 0x18))();\n    fcn.00476600(arg1);\n    return;\n}\n",
        "token_count": 112
    },
    "00476b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00476b00(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RSI;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    arg1 = unaff_RDI - arg1;\n    iVar2 = unaff_RSI - unaff_RDI;\n    while (iVar2 != arg1) {\n        if (iVar2 < arg1) {\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + unaff_RDI, unaff_RDI - arg1);\n            }\n            arg1 = arg1 - iVar2;\n        }\n        else {\n            for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + ((unaff_RDI + iVar2) - arg1), unaff_RDI - arg1);\n            }\n            iVar2 = iVar2 - arg1;\n        }\n    }\n    for (iVar2 = 0; iVar2 < arg1; iVar2 = iVar2 + 1) {\n        (**(in_RAX + 0x28))(iVar2 + unaff_RDI, unaff_RDI - arg1, iVar2 + (unaff_RDI - arg1));\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00478b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00478b20(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x478b51;\n            iVar5 = fcn.004449e0(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x00478c51;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x00478c46;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x00478c3b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x00478b62;\n                            }\n                            goto code_r0x00478c30;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x00478c25;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x00478b62:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x478c25;\n            fcn.0045d500(unaff_RBX, arg1);\ncode_r0x00478c25:\n            *(*0x20 + -0x28) = 0x478c30;\n            fcn.0045d480(arg1);\ncode_r0x00478c30:\n            *(*0x20 + -0x28) = 0x478c3b;\n            fcn.0045d480(arg1);\ncode_r0x00478c3b:\n            *(*0x20 + -0x28) = 0x478c46;\n            fcn.0045d480(arg1);\ncode_r0x00478c46:\n            *(*0x20 + -0x28) = 0x478c51;\n            fcn.0045d480(arg1);\ncode_r0x00478c51:\n            *(*0x20 + -0x28) = 0x478c5c;\n            in_RAX = fcn.0045d480(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x478c71;\n        fcn.0045ad80();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1075
    },
    "0047a600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047a600(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar2) {\n            fcn.00448440(unaff_RBX);\n            fcn.00448a80(in_RAX);\n            uVar1 = fcn.00478980(in_RAX);\n            return uVar1;\n        }\n        if (*(in_RAX + iVar2) == '\\0') break;\n        iVar2 = iVar2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 212
    },
    "0047a6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047a6e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.00478b20(arg1);\n    fcn.00448c40(arg1_00);\n    return;\n}\n",
        "token_count": 202
    },
    "0047aa40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047aa40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x543bf8;\n            *(*0x20 + -0x48) = 0x47aa72;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x47aa98;\n                iVar2 = fcn.0045f660(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53d130;\n                    if ((iVar1 != 0) && (uVar3 = *0x53d140,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47aad6;\n                        fcn.004099a0();\n                        uVar3 = 0x4c8280;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47ab05;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x47ab10;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "0047ab20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047ab20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x543cc8;\n            *(*0x20 + -0x48) = 0x47ab52;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x47ab78;\n                iVar2 = fcn.0045f660(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53d130;\n                    if ((iVar1 != 0) && (uVar3 = *0x53d140,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47abb6;\n                        fcn.004099a0();\n                        uVar3 = 0x4c8280;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47abe5;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x47abf0;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "0047ac00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047ac00(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + 0x38) = in_R10;\n            *(*0x20 + -0x30) = unaff_RBX;\n            if (arg3 < 1) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = *0x543cf0;\n            *(*0x20 + -0x98) = 0x47ac76;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + -0x20);\n                *(*0x20 + -0x18) = *(*0x20 + 0x38);\n                *(*0x20 + -0x90) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x98) = 0x47ace6;\n                uVar2 = fcn.0045f740(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x98) = 0x47ad26;\n                    fcn.004099a0();\n                    uVar2 = *(*0x20 + -0x38);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x98) = 0x47ad5c;\n            in_EAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x47ad87;\n        fcn.0045ad80();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1011
    },
    "0047adc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047adc0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x543d28;\n            *(*0x20 + -0x40) = 0x47ade6;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x47ae08;\n                fcn.0045f660(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x47ae1d;\n            fcn.004327c0();\n        }\n        *(puVar2 + -8) = 0x47ae25;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 308
    },
    "0047b240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047b240(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x543f10;\n            *(*0x20 + -0x48) = 0x47b276;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x47b2a7;\n                iVar2 = fcn.0045f660(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x53d130;\n                    if ((iVar1 != 0) && (uVar3 = *0x53d140,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47b2e5;\n                        fcn.004099a0();\n                        uVar3 = 0x4c8280;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47b310;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x47b31f;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 562
    },
    "0047b480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047b480(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = *0x543f80;\n            *(*0x20 + -0xa0) = 0x47b4fb;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x18);\n                *(*0x20 + -0x18) = *(*0x20 + 0x28);\n                *(*0x20 + -0x20) = *(*0x20 + 0x38);\n                *(*0x20 + -0x28) = *(*0x20 + 0x40);\n                *(*0x20 + -0x98) = *(*0x20 + 0x40);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x47b59f;\n                iVar2 = fcn.0045f740(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x53d130;\n                    if ((iVar1 != 0) && (uVar3 = *0x53d140,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x47b5e5;\n                        fcn.004099a0();\n                        uVar3 = 0x4c8280;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x47b616;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x47b647;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1116
    },
    "0047b680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047b680(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x543fa8;\n            *(*0x20 + -0x48) = 0x47b6b6;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                *(*0x20 + -0x48) = 0x47b6e5;\n                iVar1 = fcn.0045f660(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x47b6f5;\n                    fcn.004099a0();\n                    uVar2 = 0x4c8280;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x47b717;\n            in_EAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x47b726;\n        fcn.0045ad80();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 527
    },
    "00481460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481460(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x18) = *0x5438f8;\n            *(*0x20 + -0x58) = 0x48149b;\n            iVar1 = fcn.0047a3e0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x10) = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x4814d5;\n                uVar2 = fcn.0045f660(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x481514;\n                    fcn.004099a0();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x481545;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x481559;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 609
    },
    "00482680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00482680(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x4826fe;\n                        fcn.004588c0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x482730;\n                        fcn.004588c0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x48277b;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x482786;\n        fcn.0045ad80();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 609
    },
    "00482840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00482840(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (*0x598408 == 0) {\n        fcn.0046a840();\n    }\n    uVar1 = fcn.00457be0();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x53cf90;\n    if (unaff_RBX != 0x3e5) {\n        fcn.004099a0();\n        uVar1 = 0x4c8280;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00482920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00482920(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x48295d;\n            iVar2 = fcn.0047a3e0();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 0;\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x4829a5;\n            iVar1 = fcn.0047b340(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x5981c0 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x482a25;\n            fcn.0045d480(0x20);\n        }\n        *(puVar4 + -8) = 0x482a2b;\n        fcn.0045ad80();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 596
    },
    "00483c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00483c40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00483c80();\n    return;\n}\n",
        "token_count": 82
    },
    "00483c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00483c80(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x483cbc;\n                iVar3 = fcn.004449e0(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x483cd7;\n                uVar2 = fcn.00481460(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x483cf0;\n                    uVar4 = fcn.0047a6e0(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x483d19;\n            in_RAX = fcn.0045d480(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x483d25;\n        fcn.0045ad80();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 539
    },
    "004840c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004840c0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) goto code_r0x004840f3;\n            *(*0x20 + 8) = 0;\n            *(*0x20 + -0x20) = 0x4840e5;\n            cVar1 = fcn.00481280();\n            if (cVar1 == '\\0') {\n                *(*0x20 + -0x20) = 0x4840ee;\n                fcn.00458040();\ncode_r0x004840f3:\n                *(*0x20 + -0x20) = 0x4840f8;\n                fcn.00458420();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x484115;\n            in_RAX = fcn.004327c0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x484125;\n        fcn.0045ad80();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 391
    },
    "00484c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00484c80(void)\n\n{\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    if (unaff_BL == '\\0') {\n        fcn.004849c0(5);\n    }\n    else {\n        fcn.004849c0(4);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00485840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00485840(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    fcn.00485600(arg1);\n    fcn.004849c0(unaff_RBX);\n    return;\n}\n",
        "token_count": 105
    },
    "00486d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00486d80(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong arg1_00;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n    }\n    iVar1 = fcn.00486be0();\n    fcn.0048c3c0(unaff_RBX, in_RDX, uStack0000000000000028);\n    arg1_00 = *(iVar1 + 8);\n    uVar2 = fcn.00448800(arg1_00);\n    fcn.00486c80(arg1_00, in_RDX, uStack0000000000000028);\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "004876c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004876c0(uint64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045ad80();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if ((arg1 == 0x74) || (arg1 == 0x76)) {\n        fcn.00484c80();\n    }\n    else {\n        fcn.004871c0(arg1, in_RDX, in_R8);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0048c020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0048c020(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI <= unaff_RSI) {\n                return unaff_RBX;\n            }\n            if (unaff_RSI < unaff_RDI) {\n                if (*(arg1 + unaff_RSI) != '[') {\n                    return unaff_RBX;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x30) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x28) = unaff_RSI;\n                *(in_RAX + 0xb0) = 1;\n                cVar2 = arg1 + (-(unaff_RDI - unaff_RSI) >> 0x3f & unaff_RSI);\n                *(*0x20 + -0x28) = 0x48c09c;\n                iVar1 = fcn.0048bf40();\n                if (((cVar2 != '\\0') && (-1 < iVar1)) && (iVar1 < *(*0x20 + 0x30))) {\n                    return iVar1;\n                }\n                *(*(*0x20 + 8) + 0xb1) = 0;\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x48c0f8;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045d480(unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x48c11c;\n        fcn.0045ad80();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 763
    },
    "00401ba0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401ba0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00428ae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00428ae0(void)\n\n{\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 8; iVar1 = iVar1 + 1) {\n        *(CONCAT71(in_RAX, in_AL) + iVar1 * 8) = 0xffffffffffffffff;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00428c20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00428c20(void)\n\n{\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar1;\n    \n    for (iVar1 = 0; iVar1 < 8; iVar1 = iVar1 + 1) {\n        *(CONCAT71(in_RAX, in_AL) + iVar1 * 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00429920": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00429920(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI != unaff_RBX) {\n        return 0;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar1) {\n            return 1;\n        }\n        if (*(unaff_RDI + iVar1 * 8) != *(in_RAX + iVar1 * 8)) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0042ef40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042ef40(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42ef65;\n            fcn.00432f60();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42ef6b;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00430920": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00430920(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x43094a;\n            fcn.00430100(0x15);\n            *(*0x20 + -0x28) = 0x430969;\n            fcn.004327c0();\n        }\n        *(puVar1 + -8) = 0x43096f;\n        fcn.0045ad80();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 232
    },
    "00430980": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00430980(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4309a5;\n            fcn.004301c0();\n            iVar1 = *0x53d070;\n            if (*0x53d070 != 0) {\n                iVar1 = *(*0x53d070 + 8);\n            }\n            *(*0x20 + -0x20) = 0x4309c5;\n            fcn.004327c0(iVar1);\n        }\n        *(puVar2 + -8) = 0x4309cb;\n        fcn.0045ad80();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 282
    },
    "004315e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004315e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431605;\n            fcn.00432f60();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43160b;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "00431620": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431620(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431645;\n            fcn.00432f60();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43164b;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "004360c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004360c0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4360e5;\n            fcn.00432f60();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4360eb;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00436100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436100(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436125;\n            fcn.00432f60();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43612b;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00436200": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436200(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00432f60();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x43625b;\n                fcn.0040a080();\n                uVar2 = *0x544430;\n                arg1_00 = *0x544438;\n                uVar4 = *0x544430;\n                if (*0x544440 < *0x544438 + 1) {\n                    *(puVar5 + -0x58) = 0x436285;\n                    arg1 = *0x544438;\n                    uVar4 = fcn.00444ac0(*0x544438);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar4;\n                    *0x544440 = arg1;\n                    if (*0x598440 != 0) {\n                        *(puVar5 + -0x58) = 0x4362aa;\n                        uVar4 = fcn.0045cfe0(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x544430;\n                    }\n                }\n                *0x544430 = uVar2;\n                *0x544438 = arg1_00 + 1;\n                if (*0x598440 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(uVar4 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x4362dd;\n                    fcn.0045d100(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x544438 != 0) {\n                    uVar2 = *0x543a90;\n                    if ((*0x543a90 != *0x544430) && (uVar2 = *0x544430,  *0x598440 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x544430;\n                        *(puVar5 + -0x58) = 0x436314;\n                        fcn.00403140();\n                        uVar2 = *(puVar5 + -0x10);\n                    }\n                    *0x543a90 = uVar2;\n                    uVar1 = *0x598268;\n                    *0x598268 = *0x544438;\n                    *(puVar5 + -0x58) = 0x436345;\n                    fcn.0040a2a0(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x436356;\n                fcn.0045d480(0);\n            }\n            *(puVar5 + -0x58) = 0x436367;\n            iVar3 = fcn.00432f60();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x436372;\n        fcn.0045ad80();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 950
    },
    "004416e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.004416e0(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    do {\n        uVar3 = *(in_RAX + 0xdf8);\n        if (uVar3 == 0) {\n            do {\n                uVar2 = *(in_RAX + 0x5f0);\n                if (uVar2 == *(in_RAX + 0x5f4)) {\n                    return 0;\n                }\n                uVar3 = *(in_RAX + 0x5f8 + (uVar2 & 0xff) * 8);\n                LOCK();\n            } while (uVar2 != *(in_RAX + 0x5f0));\n            *(in_RAX + 0x5f0) = uVar2 + 1;\n            return uVar3;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0xdf8;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    return uVar3;\n}\n",
        "token_count": 286
    },
    "0044e940": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044e940(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44e965;\n            fcn.00432f60();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44e96b;\n        fcn.0045ad80();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "0045cb60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb60(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0045d480": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d480(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x430274;\n            fcn.00430100(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x4302b0;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x4302b5;\n            in_RAX = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x4302c5;\n        fcn.0045ad80();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 463
    },
    "0045d4a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d4a0(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x430314;\n            fcn.00430100(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x430350;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x430355;\n            in_RAX = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x430365;\n        fcn.0045ad80();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 459
    },
    "0045d4c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d4c0(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x4303b4;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x4303f0;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x4303f5;\n            arg1 = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x430405;\n        fcn.0045ad80();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 459
    },
    "0045d500": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d500(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x4304f4;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x430530;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x430535;\n            arg1 = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x430545;\n        fcn.0045ad80();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 453
    },
    "0045d520": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d520(ulong arg1, uchar *arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x430594;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            arg2 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x4305d0;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x4305d5;\n            arg1 = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x4305e5;\n        fcn.0045ad80();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 457
    },
    "0045d540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d540(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x430634;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x430670;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x430675;\n            in_RAX = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x430685;\n        fcn.0045ad80();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 457
    },
    "0045d560": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d560(uchar *arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4306d4;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            arg1 = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x430710;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x430715;\n            in_RAX = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x430725;\n        fcn.0045ad80();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 459
    },
    "0045d580": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d580(ulong noname_0, ulong arg2)\n\n{\n    uchar *unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x430774;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            unaff_RBX = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x4307b0;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x4307b5;\n            arg2 = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x4307c5;\n        fcn.0045ad80();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 474
    },
    "0045d5a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d5a0(ulong noname_0, ulong arg2)\n\n{\n    uchar *unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x430814;\n            fcn.00430100(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            unaff_RBX = *0x20 + -0x20;\n            *(*0x20 + -0x40) = 0x430850;\n            fcn.00409b80();\n            *(*0x20 + -0x40) = 0x430855;\n            arg2 = fcn.004327c0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x430865;\n        fcn.0045ad80();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 470
    },
    "0045f460": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0045f460(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_RDI;\n    int64_t in_GS_OFFSET;\n    uchar auStack24 [16];\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar7 = &stack0xfffffffffffffff8;\n    uVar3 = fcn.00432f60();\n    puVar5 = auStack24;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x40;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            *(puVar5 + -0x10) = uVar3;\n            *(puVar5 + -0x48) = 0x458a3e;\n            iVar4 = fcn.00449320();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(puVar5 + -0x20) = iVar4;\n            *(puVar5 + -0x48) = 0x458a4f;\n            uVar3 = fcn.00448e20();\n            if (unaff_RDI != 0) {\n                *(puVar5 + -0x28) = 0x32;\n                *(puVar5 + -0x18) = uVar3;\n                *(puVar5 + -0x48) = 0x458a70;\n                fcn.0045ddc0(*(puVar5 + -0x20));\n                return *(puVar5 + -0x18);\n            }\n            *(puVar5 + -0x48) = 0x458a9c;\n            uVar3 = fcn.0045d480(0);\n        }\n        *(puVar6 + 8) = uVar3;\n        *(puVar6 + -8) = 0x458aa7;\n        fcn.0045ad80();\n        uVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 540
    }
}