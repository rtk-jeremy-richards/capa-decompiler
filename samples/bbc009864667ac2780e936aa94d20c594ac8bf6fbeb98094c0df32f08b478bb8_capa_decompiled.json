{
    "00408a50": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00408a50(void)\n\n{\n    *0x4bf5e8 = 0x6d;\n    *0x4bf5e9 = 0x73;\n    *0x4bf5ea = 0x69;\n    *0x4bf5eb = 0x6d;\n    *0x4bf5ec = 0x67;\n    *0x4bf5ed = 0x33;\n    *0x4bf5ee = 0x32;\n    *0x4bf5ef = 0x2e;\n    *0x4bf5f0 = 100;\n    *0x4bf5f1 = 0x6c;\n    *0x4bf5f2 = 0x6c;\n    *0x4bf5f3 = 0;\n    return;\n}\n",
        "token_count": 191
    },
    "00409898": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00409898(void)\n\n{\n    uint var_4h;\n    \n    *0x4bf5e9 = 0x65;\n    *0x4bf5ea = 0x72;\n    *0x4bf5f0 = 0x2e;\n    *0x4bf5f1 = 100;\n    *0x4bf5f2 = 0x6c;\n    *0x4bf5f4 = 0;\n    *0x4bf5ee = 0x33;\n    *0x4bf5ef = 0x32;\n    *0x4bf5eb = 0x6e;\n    *0x4bf5e8 = 0x6b;\n    *0x4bf5f3 = 0x6c;\n    *0x4bf5ec = 0x65;\n    *0x4bf5ed = 0x6c;\n    *0x4e37cc = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4bf5e8);\n    *0x4bf5f1 = 0x6f;\n    *0x4bf5f5 = 0x74;\n    *0x4bf5f6 = 0;\n    *0x4bf5ef = 0x50;\n    *0x4bf5ed = 0x61;\n    *0x4bf5f3 = 0x65;\n    *0x4bf5ec = 0x75;\n    *0x4bf5ee = 0x6c;\n    *0x4bf5e9 = 0x69;\n    *0x4bf5f4 = 99;\n    *0x4bf5eb = 0x74;\n    *0x4bf5f2 = 0x74;\n    *0x4bf5ea = 0x72;\n    *0x4bf5e8 = 0x56;\n    *0x4bf5f0 = 0x72;\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x4c9ca0, *0x4e4134, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 500
    },
    "0040999e": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint fcn.0040999e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_c48h;\n    uint lpReturnedString;\n    uint lpStartupInfo;\n    uint var_4h;\n    \n    iVar2 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        if (*0x4e4134 == 0x16) {\n            (*_sym.imp.KERNEL32.dll_EndUpdateResourceW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_DebugBreak)();\n            (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)(0, 0, 0, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*0x4e4134 == 0x9e) {\n            (*_sym.imp.KERNEL32.dll_CopyFileA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetSystemWow64DirectoryA)(&lpReturnedString, 0);\n            (*_sym.imp.KERNEL32.dll_GetStartupInfoW)(&lpStartupInfo);\n        }\n    } while ((iVar2 < 0x3775ef) && (iVar2 = iVar2 + 1,  iVar2 < 0x332beaf6));\n    fcn.004096a4(*0x4c9ca0, *0x4e4134, 0x42c010);\n    iVar2 = 0;\n    do {\n        if (*0x4e4134 == 0x10) {\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(&var_4h);\n            (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(0, 0);\n            (*_sym.imp.KERNEL32.dll_SetWaitableTimer)(0, 0, 0, 0, 0, 0);\n        }\n        if (iVar2 == 0x1e673) {\n            fcn.0040987d();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x3e79e);\n    iVar2 = 0xdd9a7;\n    do {\n        if (*0x4e4134 == 0xc01) {\n            (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n            (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateW)(0, 0, 0, 0, 0, 0, 0);\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.00408a50();\n    *0x4bf5e8 = 0x6d;\n    *0x4bf5e9 = 0x73;\n    *0x4bf5f2 = 0x6c;\n    *0x4bf5ee = 0x32;\n    *0x4bf5ea = 0x69;\n    *0x4bf5ed = 0x33;\n    *0x4bf5f3 = 0;\n    *0x4bf5ec = 0x67;\n    *0x4bf5f0 = 100;\n    *0x4bf5eb = 0x6d;\n    *0x4bf5f1 = 0x6c;\n    *0x4bf5ef = 0x2e;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4bf5e8);\n    if (*0x4e4134 == 0x1144) {\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x40140c);\n        (*_sym.imp.KERNEL32.dll_SetDllDirectoryW)(0);\n        (*_sym.imp.KERNEL32.dll_FormatMessageW)(0, 0, 0, 0, &var_c48h, 0, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_VerifyVersionInfoA;\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_FindFirstChangeNotificationA)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetProfileSectionA)(0x401440, &lpReturnedString, 0);\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, 0);\n        (*pcVar1)(0, 0, 0, 0);\n    }\n    return 0;\n}\n",
        "token_count": 1038
    },
    "00409516": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409516(int32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    *arg_8h = (arg_10h >> 5) + arg_ch;\n    return;\n}\n",
        "token_count": 58
    },
    "0040952b": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040952b(uint32_t *arg_8h, int32_t *lpCollectDataTimeout)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint lpszVolumeName;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t lpMaxCollectionCount;\n    int32_t lpCurInstances;\n    uint32_t var_ch;\n    int32_t lpState;\n    int32_t var_4h;\n    \n    uVar2 = *arg_8h;\n    var_ch = arg_8h[1];\n    var_1ch = *lpCollectDataTimeout;\n    var_28h = lpCollectDataTimeout[1];\n    var_20h = lpCollectDataTimeout[2];\n    var_18h = lpCollectDataTimeout[3];\n    var_4h = -0x3910c8e0;\n    var_24h = -0x61c88647;\n    if (*0x4e4134 == 0x60b) {\n        (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)\n                  (0, &lpState, &lpCurInstances, &lpMaxCollectionCount, &lpCollectDataTimeout, &lpszVolumeName, 0);\n    }\n    lpCurInstances = 0x20;\n    do {\n        lpCollectDataTimeout = uVar2 << 4;\n        if (*0x4e4134 == 5) {\n            (*_sym.imp.KERNEL32.dll_HeapWalk)(0, 0);\n        }\n        fcn.004094ea(&lpCollectDataTimeout, var_20h);\n        uVar1 = (uVar2 >> 5) + var_18h;\n        lpMaxCollectionCount = var_4h + uVar2;\n        *0x4c9ca4 = 0xffcf03fc;\n        if (*0x4e4134 == 0x1b) {\n            (*_sym.imp.KERNEL32.dll_FindNextVolumeA)(0, &lpszVolumeName, 0);\n            (*_sym.imp.KERNEL32.dll_SetLocaleInfoW)(0, 0, 0x401370);\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetSystemTimeAdjustment)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_OpenMutexW)(0, 0, 0);\n        }\n        *0x4c9ca4 = uVar1 ^ lpMaxCollectionCount ^ lpCollectDataTimeout;\n        uVar1 = var_ch - *0x4c9ca4;\n        *0x4c9cac = 0xffffffff;\n        lpCollectDataTimeout = uVar1 * 0x10 + var_1ch ^ var_4h + uVar1;\n        *0x4c9ca8 = 0xc5e121b4;\n        var_ch = uVar1;\n        fcn.004094c9(&lpCollectDataTimeout, (uVar1 >> 5) + var_28h);\n        uVar2 = uVar2 - lpCollectDataTimeout;\n        lpState = var_24h;\n        var_4h = var_4h - var_24h;\n        lpCurInstances = lpCurInstances + -1;\n    } while (lpCurInstances != 0);\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 827
    },
    "004096a4": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004096a4(int32_t arg_8h, uint32_t dwWriteCoord, uint arg_10h)\n\n{\n    uint lpFindFileData;\n    uint lpVersionInformation;\n    uint lpDCB;\n    uint lpNumberOfCharsWritten;\n    \n    if (*0x4e4134 == 0x516) {\n        (*_sym.imp.KERNEL32.dll_SetDefaultCommConfigW)(0, 0, 0);\n    }\n    for (dwWriteCoord = dwWriteCoord >> 3; dwWriteCoord != 0; dwWriteCoord = dwWriteCoord - 1) {\n        if (*0x4e4134 == 0x29) {\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBW)(0x4013a4, &lpDCB);\n            (*_sym.imp.KERNEL32.dll_CopyFileExA)(0, 0, 0, 0, 0, 0);\n        }\n        if (*0x4e4134 == 0xe1b) {\n            (*_sym.imp.KERNEL32.dll_FindNextFileA)(0, &lpFindFileData);\n            (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)(0, 0x4013c0, 0, 0);\n        }\n        if (*0x4e4134 == 0x1c) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(0);\n            (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(0, 0);\n            (*_sym.imp.KERNEL32.dll_VirtualFree)(0, 0, 0);\n        }\n        fcn.0040952b(arg_8h, arg_10h);\n        if (*0x4e4134 == 0x4fa) {\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterW)(0, 0, 0, 0, &lpNumberOfCharsWritten);\n        }\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "00409b75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpCharType\n// WARNING: Variable defined which should be unmapped: lpFileSizeHigh\n// WARNING: Variable defined which should be unmapped: JobObjectInformationClass\n// WARNING: Variable defined which should be unmapped: lpNumberOfEventsWritten\n// WARNING: Variable defined which should be unmapped: dwWriteCoord\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00409b75(void)\n\n{\n    code *pcVar1;\n    int32_t unaff_EBX;\n    uint32_t arg_8h;\n    uint unaff_EDI;\n    int32_t iVar2;\n    uint var_1910h;\n    uint lpFileInformation;\n    uint lpBuffer;\n    uint lpszVolumePathName;\n    uint lpszVolumeMountPoint;\n    uint uStackY328;\n    uint uStackY324;\n    uint uStackY320;\n    uint *puStackY316;\n    uint uStackY312;\n    uint uStackY308;\n    uint uStackY304;\n    uint uStackY300;\n    uint uStackY296;\n    uint uStackY292;\n    uint uStackY288;\n    uint uStackY284;\n    uint uStackY280;\n    uint lpTimeZoneInformation;\n    uint uStackY272;\n    uint uStackY268;\n    uint uStackY264;\n    uint uStackY260;\n    uint uStackY256;\n    uint uStackY252;\n    uint uStackY248;\n    uint uStackY244;\n    uint uStackY240;\n    uint *puStackY236;\n    uint uStackY232;\n    uint uStackY228;\n    uint *puStackY224;\n    uint uStackY220;\n    uint uStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint uStackY188;\n    uint uStackY184;\n    uint *puStackY180;\n    uint uStackY176;\n    uint *puStackY172;\n    uint uStackY168;\n    uint *puStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uint *puStackY148;\n    uint *puStackY144;\n    uint uStackY140;\n    uint *puStackY136;\n    uint uStackY132;\n    uint uStackY128;\n    uint uStackY124;\n    uint *puStackY120;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint uStackY108;\n    uint pActCtx;\n    uint *lpDCB;\n    uint *puStackY96;\n    uint *puStackY92;\n    uint lpLocalTime;\n    uchar uStackY84;\n    uchar uStackY83;\n    ushort uStackY82;\n    ushort uStackY80;\n    ushort uStackY78;\n    uchar uStackY76;\n    uchar uStackY75;\n    ushort uStackY74;\n    uint lpNumberOfCharsWritten;\n    uint *lpNumberOfCharsRead;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uint *var_30h;\n    uint *puStackY48;\n    uint *lpCommTimeouts;\n    uint lpUniversalTime;\n    ushort uStackY36;\n    ushort uStackY34;\n    uchar uStackY32;\n    uchar uStackY31;\n    ushort uStackY30;\n    uint *lpFileSizeHigh;\n    uint JobObjectInformationClass;\n    uint32_t lpCharType;\n    int32_t dwWriteCoord;\n    int32_t lpNumberOfEventsWritten;\n    \n    lpNumberOfEventsWritten = 0x409b82;\n    fcn.0040a7d0();\n    dwWriteCoord = unaff_EDI;\n    lpNumberOfEventsWritten = unaff_EBX;\n    if (*0x4e4134 == 3) {\n        lpCharType = 0x40144c;\n        JobObjectInformationClass = 0x409b99;\n        fcn.0040a710(0x40144c);\n        JobObjectInformationClass = 0;\n        lpFileSizeHigh = NULL;\n        fcn.0040a490(0, 0);\n        uStackY32 = 0xa8;\n        uStackY31 = 0x9b;\n        uStackY30 = 0x40;\n        fcn.0040a460(0);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_EnumDateFormatsA;\n    lpCharType = 0;\n    while( true ) {\n        if (*0x4e4134 == 0x47) {\n            JobObjectInformationClass = 0;\n            lpFileSizeHigh = &fcn.00409b75::var_1910h;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesW)();\n            lpCommTimeouts = NULL;\n            uStackY32 = SUB41(&fcn.00409b75::lpDCB, 0);\n            uStackY31 = &fcn.00409b75::lpDCB >> 8;\n            uStackY30 = &fcn.00409b75::lpDCB >> 0x10;\n            uStackY36 = 0;\n            uStackY34 = 0;\n            lpUniversalTime._0_1_ = 0xeb;\n            lpUniversalTime._1_1_ = 0x9b;\n            lpUniversalTime._2_2_ = 0x40;\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW)();\n            lpUniversalTime._0_1_ = 0;\n            lpUniversalTime._1_1_ = 0;\n            lpUniversalTime._2_2_ = 0;\n            lpCommTimeouts = NULL;\n            puStackY48 = NULL;\n            var_30h = NULL;\n            uStackY56 = 0;\n            uStackY60 = 0;\n            uStackY64 = 0x409bf7;\n            (*_sym.imp.KERNEL32.dll_GetDateFormatW)();\n            uStackY64 = 0;\n            lpNumberOfCharsRead = NULL;\n            lpNumberOfCharsWritten = 0;\n            uStackY76 = JobObjectInformationClass;\n            uStackY75 = JobObjectInformationClass >> 8;\n            uStackY74 = JobObjectInformationClass >> 0x10;\n            uStackY80 = 0;\n            uStackY78 = 0;\n            uStackY84 = 4;\n            uStackY83 = 0x9c;\n            uStackY82 = 0x40;\n            (*_sym.imp.KERNEL32.dll_QueryInformationJobObject)();\n            uStackY84 = 0;\n            uStackY83 = 0;\n            uStackY82 = 0;\n            lpLocalTime._0_2_ = 0;\n            lpLocalTime._2_2_ = 0;\n            puStackY92 = NULL;\n            puStackY96 = 0x409c09;\n            (*pcVar1)();\n            dwWriteCoord = 0;\n            puStackY96 = &fcn.00409b75::lpNumberOfCharsWritten;\n            lpDCB = NULL;\n            pActCtx = 0;\n            uStackY108 = 0;\n            iStackY112 = 0;\n            uStackY116 = 0x409c24;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleOutputCharacterW)();\n            uStackY116 = 0;\n            puStackY120 = NULL;\n            uStackY124 = 0;\n            uStackY128 = 0x409c2d;\n            (*_sym.imp.KERNEL32.dll_MapUserPhysicalPagesScatter)();\n            uStackY128 = 0;\n            uStackY132 = 0x409c34;\n            (*_sym.imp.KERNEL32.dll_AddAtomA)();\n            uStackY132 = 0;\n            puStackY136 = &fcn.00409b75::lpNumberOfCharsRead;\n            uStackY140 = 0;\n            puStackY144 = &fcn.00409b75::lpszVolumePathName;\n            puStackY148 = NULL;\n            uStackY152 = 0x409c48;\n            (*_sym.imp.KERNEL32.dll_ReadConsoleW)();\n            uStackY152 = 0;\n            uStackY156 = 0;\n            uStackY160 = 0x409c50;\n            (*_sym.imp.KERNEL32.dll_SetThreadPriority)();\n            uStackY160 = 0;\n            puStackY164 = &fcn.00409b75::lpszVolumeMountPoint;\n            uStackY168 = 0;\n            puStackY172 = 0x409c5f;\n            (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointW)();\n            puStackY172 = &fcn.00409b75::lpFileSizeHigh;\n            uStackY176 = 0x401450;\n            puStackY180 = 0x409c6e;\n            (*_sym.imp.KERNEL32.dll_GetCompressedFileSizeA)();\n            JobObjectInformationClass = 0;\n            puStackY180 = &fcn.00409b75::lpNumberOfEventsWritten;\n            uStackY184 = 0;\n            uStackY188 = 0;\n            uStackY192 = 0;\n            uStackY196 = 0;\n            puStackY200 = 0x409c89;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)();\n            puStackY200 = NULL;\n            uStackY204 = 0x409c90;\n            (*_sym.imp.KERNEL32.dll_GlobalUnWire)();\n            uStackY204 = 0;\n            uStackY208 = 0x409c97;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA)();\n            uStackY208 = 0;\n            uStackY212 = 0;\n            uStackY216 = 0;\n            uStackY220 = 0x409ca0;\n            (*_sym.imp.KERNEL32.dll_OpenWaitableTimerA)();\n        }\n        if (lpCharType == 0x6a1) break;\n        if (*0x4e4134 == 0xf) {\n            JobObjectInformationClass = 0;\n            lpFileSizeHigh = &fcn.00409b75::lpszVolumeMountPoint;\n            uStackY32 = 0xc1;\n            uStackY31 = 0x9c;\n            uStackY30 = 0x40;\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)();\n        }\n        lpCharType = lpCharType + 1;\n        if (0x53f9405 < lpCharType) {\ncode_r0x00409cdd:\n            iVar2 = 0;\n            do {\n                if (iVar2 < 0x9b65) {\n                    JobObjectInformationClass = 0x409ced;\n                    (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                *0x4e37c0 = 0;\n                if ((((0x3f575 < iVar2) && (lpNumberOfEventsWritten != 0xdfe626)) && (var_30h != 0xdf5954)) &&\n                   (*0x4e4134 == 0x28)) {\n                    JobObjectInformationClass = 0;\n                    lpFileSizeHigh = NULL;\n                    uStackY32 = 0x1f;\n                    uStackY31 = 0x9d;\n                    uStackY30 = 0x40;\n                    (*_sym.imp.KERNEL32.dll_OpenMutexW)();\n                }\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0x180bc645);\n            dwWriteCoord = 0;\n            do {\n                if (dwWriteCoord == 0x40d) {\n                    JobObjectInformationClass = 0x4e4134;\n                    lpFileSizeHigh = 0x409d3e;\n                    fcn.00409888(0x4e4134);\n                }\n                if (*0x4e4134 == 0x78) {\n                    JobObjectInformationClass = 0;\n                    lpFileSizeHigh = 0x409d52;\n                    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n                    lpFileSizeHigh = NULL;\n                    uStackY32 = 0;\n                    uStackY31 = 0;\n                    uStackY30 = 0;\n                    uStackY36 = 0;\n                    uStackY34 = 0;\n                    lpUniversalTime._0_1_ = 0x5c;\n                    lpUniversalTime._1_1_ = 0x9d;\n                    lpUniversalTime._2_2_ = 0x40;\n                    (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)();\n                    lpUniversalTime._0_1_ = 0;\n                    lpUniversalTime._1_1_ = 0;\n                    lpUniversalTime._2_2_ = 0;\n                    lpCommTimeouts = NULL;\n                    puStackY48 = 0x409d64;\n                    (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)();\n                    puStackY48 = &fcn.00409b75::lpCharType;\n                    var_30h = NULL;\n                    uStackY56 = 0x401458;\n                    uStackY60 = 0;\n                    uStackY64 = 0;\n                    lpNumberOfCharsRead = 0x409d76;\n                    (*_sym.imp.KERNEL32.dll_GetStringTypeExA)();\n                    lpNumberOfCharsRead = NULL;\n                    lpNumberOfCharsWritten = 0x409d7d;\n                    (*_sym.imp.KERNEL32.dll_DebugActiveProcessStop)();\n                    lpNumberOfCharsWritten = 0;\n                    uStackY76 = 0;\n                    uStackY75 = 0;\n                    uStackY74 = 0;\n                    uStackY80 = 0;\n                    uStackY78 = 0;\n                    uStackY84 = 0x68;\n                    uStackY83 = 0x14;\n                    uStackY82 = 0x40;\n                    lpLocalTime._0_2_ = 0x14a0;\n                    lpLocalTime._2_2_ = 0x40;\n                    puStackY92 = 0x409d90;\n                    (*_sym.imp.KERNEL32.dll_MoveFileWithProgressW)();\n                    lpUniversalTime._0_1_ = 0;\n                    lpUniversalTime._1_1_ = 0;\n                    lpUniversalTime._2_2_ = 0;\n                    uStackY36 = 0;\n                    uStackY34 = 0;\n                    uStackY32 = 0;\n                    uStackY31 = 0;\n                    uStackY30 = 0;\n                    lpLocalTime._0_2_ = 0;\n                    lpLocalTime._2_2_ = 0;\n                    uStackY84 = 0;\n                    uStackY83 = 0;\n                    uStackY82 = 0;\n                    uStackY80 = 0;\n                    uStackY78 = 0;\n                    uStackY76 = 0;\n                    uStackY75 = 0;\n                    uStackY74 = 0;\n                    puStackY92 = &fcn.00409b75::lpLocalTime;\n                    puStackY96 = &fcn.00409b75::lpUniversalTime;\n                    lpDCB = &fcn.00409b75::lpTimeZoneInformation;\n                    pActCtx = 0x409dc1;\n                    (*_sym.imp.KERNEL32.dll_SystemTimeToTzSpecificLocalTime)();\n                    pActCtx = 0;\n                    uStackY108 = 0;\n                    iStackY112 = lpNumberOfEventsWritten;\n                    uStackY116 = 0;\n                    puStackY120 = 0x409dcd;\n                    (*_sym.imp.KERNEL32.dll_CreateMailslotA)();\n                    puStackY120 = &fcn.00409b75::lpNumberOfEventsWritten;\n                    uStackY124 = 0;\n                    uStackY128 = 0;\n                    uStackY132 = 0;\n                    puStackY136 = 0x409dda;\n                    (*_sym.imp.KERNEL32.dll_WriteConsoleInputW)();\n                    puStackY136 = 0x409de0;\n                    (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthW)();\n                    puStackY136 = NULL;\n                    uStackY140 = 0x409de7;\n                    (*_sym.imp.KERNEL32.dll_SetComputerNameA)();\n                    uStackY140 = 0;\n                    puStackY144 = NULL;\n                    puStackY148 = NULL;\n                    uStackY152 = 0x409df0;\n                    (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)();\n                    uStackY152 = 0;\n                    uStackY156 = 0x409df7;\n                    (*_sym.imp.KERNEL32.dll_AttachConsole)();\n                    uStackY156 = 0;\n                    uStackY160 = 0;\n                    puStackY164 = NULL;\n                    uStackY168 = 0;\n                    puStackY172 = NULL;\n                    uStackY176 = 0x409e02;\n                    (*_sym.imp.KERNEL32.dll_GetQueuedCompletionStatus)();\n                    uStackY176 = 0x4014b0;\n                    puStackY180 = 0x409e0d;\n                    (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n                    puStackY180 = 0x409e13;\n                    (*_sym.imp.KERNEL32.dll_WTSGetActiveConsoleSessionId)();\n                    puStackY180 = NULL;\n                    uStackY184 = 0;\n                    uStackY188 = 0;\n                    uStackY192 = 0x409e18;\n                    (*pcVar1)();\n                    uStackY192 = 0;\n                    uStackY196 = 0;\n                    puStackY200 = 0x409e20;\n                    (*_sym.imp.KERNEL32.dll_EndUpdateResourceW)();\n                    puStackY200 = NULL;\n                    uStackY204 = 0;\n                    uStackY208 = 0;\n                    uStackY212 = 0;\n                    uStackY216 = 0;\n                    uStackY220 = 0x409e2b;\n                    (*_sym.imp.KERNEL32.dll_LockFile)();\n                    uStackY220 = 0;\n                    puStackY224 = &fcn.00409b75::lpszVolumeMountPoint;\n                    uStackY228 = 0;\n                    uStackY232 = 0x409e39;\n                    sub.KERNEL32.dll_VerLanguageNameW();\n                    uStackY232 = 0;\n                    puStackY236 = NULL;\n                    uStackY240 = 0x409e41;\n                    (*_sym.imp.KERNEL32.dll_SetFileShortNameW)();\n                    uStackY240 = 0;\n                    uStackY244 = 0;\n                    uStackY248 = 0x409e49;\n                    (*_sym.imp.KERNEL32.dll_SetCommMask)();\n                }\n                dwWriteCoord = dwWriteCoord + 1;\n            } while (dwWriteCoord < 0x40bd22);\n            JobObjectInformationClass = 0x409e5e;\n            fcn.0040998a();\n            iVar2 = 0;\n            do {\n                if (iVar2 == 0x1550) {\n                    *0x4e4138 = *0x42c008;\n                }\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0x56a453);\n            arg_8h = 0x7015e7;\n            do {\n                if (*0x4e4134 == 0x23) {\n                    JobObjectInformationClass = 0;\n                    lpFileSizeHigh = &fcn.00409b75::lpszVolumePathName;\n                    uStackY32 = 0x98;\n                    uStackY31 = 0x9e;\n                    uStackY30 = 0x40;\n                    (*_sym.imp.KERNEL32.dll_GetVolumePathNameA)();\n                    uStackY32 = 0;\n                    uStackY31 = 0;\n                    uStackY30 = 0;\n                    uStackY36 = 0;\n                    uStackY34 = 0;\n                    lpUniversalTime._0_1_ = 0xa0;\n                    lpUniversalTime._1_1_ = 0x9e;\n                    lpUniversalTime._2_2_ = 0x40;\n                    (*_sym.imp.KERNEL32.dll_MoveFileA)();\n                    lpUniversalTime._0_1_ = 200;\n                    lpUniversalTime._1_1_ = 0x14;\n                    lpUniversalTime._2_2_ = 0x40;\n                    lpCommTimeouts = NULL;\n                    puStackY48 = NULL;\n                    var_30h = 0x409ead;\n                    (*_sym.imp.KERNEL32.dll_OpenWaitableTimerW)();\n                    var_30h = &fcn.00409b75::lpFileInformation;\n                    uStackY56 = 0;\n                    uStackY60 = 0x40151c;\n                    uStackY64 = 0x409ec0;\n                    (*_sym.imp.KERNEL32.dll_GetFileAttributesExW)();\n                    uStackY64 = 0x401558;\n                    lpNumberOfCharsRead = 0x409ecb;\n                    (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n                }\n                arg_8h = arg_8h - 1;\n            } while (arg_8h != 0);\n            if (*0x4e4134 != 0) {\n                do {\n                    if (*0x4e4134 == 0x932) {\n                        JobObjectInformationClass = 0;\n                        lpFileSizeHigh = NULL;\n                        uStackY32 = 0;\n                        uStackY31 = 0;\n                        uStackY30 = 0;\n                        uStackY36 = 0;\n                        uStackY34 = 0;\n                        lpUniversalTime._0_1_ = 0;\n                        lpUniversalTime._1_1_ = 0;\n                        lpUniversalTime._2_2_ = 0;\n                        lpCommTimeouts = 0x409ef4;\n                        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)();\n                        lpCommTimeouts = &fcn.00409b75::lpCharType;\n                        puStackY48 = NULL;\n                        var_30h = NULL;\n                        uStackY56 = 0;\n                        uStackY60 = 0;\n                        uStackY64 = 0x409f02;\n                        (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n                        uStackY64 = 0;\n                        lpNumberOfCharsRead = 0x409f09;\n                        (*_sym.imp.KERNEL32.dll_ReleaseActCtx)();\n                        lpNumberOfCharsRead = &fcn.00409b75::var_30h;\n                        lpNumberOfCharsWritten = 0;\n                        uStackY76 = 0x14;\n                        uStackY75 = 0x9f;\n                        uStackY74 = 0x40;\n                        (*_sym.imp.KERNEL32.dll_BuildCommDCBW)();\n                    }\n                    JobObjectInformationClass = 0x409f1a;\n                    lpCharType = arg_8h;\n                    fcn.0040979e(arg_8h);\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *0x4e4134);\n            }\n            iVar2 = 0;\n            do {\n                if (*0x4e4134 == 0x15a) {\n                    JobObjectInformationClass = 0;\n                    lpFileSizeHigh = NULL;\n                    (*_sym.imp.KERNEL32.dll_GetThreadContext)();\n                    uStackY32 = lpNumberOfEventsWritten;\n                    uStackY31 = lpNumberOfEventsWritten >> 8;\n                    uStackY30 = lpNumberOfEventsWritten >> 0x10;\n                    uStackY36 = lpNumberOfEventsWritten;\n                    lpUniversalTime._0_1_ = 0;\n                    lpUniversalTime._1_1_ = 0;\n                    lpUniversalTime._2_2_ = 0;\n                    lpCommTimeouts = NULL;\n                    puStackY48 = 0x409f48;\n                    uStackY34 = uStackY30;\n                    (*_sym.imp.KERNEL32.dll_ReadConsoleOutputW)();\n                }\n                if (iVar2 == 0x75ec5) {\n                    JobObjectInformationClass = 0x4015d8;\n                    lpFileSizeHigh = 0x409f5b;\n                    *0x4e37cc = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n                }\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0x1756bb);\n            JobObjectInformationClass = 0x4015e8;\n            lpFileSizeHigh = 0x4bf5e8;\n            *0x4bf5e8 = 0;\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n            *0x4bf5e8 = 0x56;\n            *0x4bf5ea = 0x72;\n            iVar2 = 0;\n            do {\n                if (iVar2 == 0x1c) {\n                    uStackY32 = 0x40;\n                    uStackY31 = 0;\n                    uStackY30 = 0;\n                    uStackY36 = *0x4e4134;\n                    uStackY34 = *0x4e4134 >> 0x10;\n                    lpUniversalTime._0_1_ = *0x4c9ca0;\n                    lpUniversalTime._1_1_ = *0x4c9ca0 >> 8;\n                    lpUniversalTime._2_2_ = *0x4c9ca0 >> 0x10;\n                    lpCommTimeouts = 0x409fac;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n                }\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0x3d9da7);\n            fcn.0040999e();\n            if (*0x4e4134 == 0x1d) {\n                lpFileSizeHigh = NULL;\n                uStackY32 = 0;\n                uStackY31 = 0;\n                uStackY30 = 0;\n                uStackY36 = 0;\n                uStackY34 = 0;\n                lpUniversalTime._0_1_ = 0;\n                lpUniversalTime._1_1_ = 0;\n                lpUniversalTime._2_2_ = 0;\n                lpCommTimeouts = 0x409fd6;\n                (*_sym.imp.KERNEL32.dll_WriteConsoleA)();\n                lpCommTimeouts = NULL;\n                puStackY48 = 0x409fdd;\n                (*_sym.imp.KERNEL32.dll_DebugActiveProcessStop)();\n                puStackY48 = NULL;\n                var_30h = 0x409fe4;\n                (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n                var_30h = NULL;\n                uStackY56 = 0x409feb;\n                (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                uStackY56 = 0;\n                uStackY60 = 0;\n                uStackY64 = 0;\n                lpNumberOfCharsRead = 0x409ff4;\n                (*_sym.imp.KERNEL32.dll_EnumResourceTypesW)();\n                lpNumberOfCharsRead = NULL;\n                lpNumberOfCharsWritten = 0x409ffb;\n                (*_sym.imp.KERNEL32.dll_SetConsoleActiveScreenBuffer)();\n                lpNumberOfCharsWritten = 0;\n                uStackY76 = SUB41(&fcn.00409b75::lpszVolumeMountPoint, 0);\n                uStackY75 = &fcn.00409b75::lpszVolumeMountPoint >> 8;\n                uStackY74 = &fcn.00409b75::lpszVolumeMountPoint >> 0x10;\n                uStackY80 = 0;\n                uStackY78 = 0;\n                uStackY84 = 10;\n                uStackY83 = 0xa0;\n                uStackY82 = 0x40;\n                (*_sym.imp.KERNEL32.dll_GetAtomNameW)();\n                uStackY84 = 0;\n                uStackY83 = 0;\n                uStackY82 = 0;\n                lpLocalTime._0_2_ = 0;\n                lpLocalTime._2_2_ = 0;\n                puStackY92 = NULL;\n                puStackY96 = NULL;\n                lpDCB = NULL;\n                pActCtx = 0;\n                uStackY108 = 0;\n                iStackY112 = 0;\n                uStackY116 = 0x40a018;\n                (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)();\n                uStackY116 = 0;\n                puStackY120 = 0x40a01f;\n                (*_sym.imp.KERNEL32.dll_OutputDebugStringA)();\n                puStackY120 = NULL;\n                uStackY124 = 0;\n                uStackY128 = 0;\n                uStackY132 = 0x40a028;\n                (*_sym.imp.KERNEL32.dll__lwrite)();\n                uStackY132 = 0;\n                puStackY136 = NULL;\n                uStackY140 = 0;\n                puStackY144 = NULL;\n                puStackY148 = 0x40a032;\n                (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)();\n                puStackY148 = &fcn.00409b75::pActCtx;\n                uStackY152 = 0x40a03c;\n                (*_sym.imp.KERNEL32.dll_CreateActCtxW)();\n                uStackY152 = 0;\n                uStackY156 = 0;\n                uStackY160 = 0;\n                puStackY164 = NULL;\n                uStackY168 = 0;\n                puStackY172 = 0x40a047;\n                (*_sym.imp.KERNEL32.dll_GetMailslotInfo)();\n                puStackY172 = NULL;\n                uStackY176 = 0;\n                puStackY180 = NULL;\n                uStackY184 = 0;\n                uStackY188 = 0;\n                uStackY192 = 0;\n                uStackY196 = 0x40a053;\n                (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)();\n                uStackY196 = 0x40154c;\n                puStackY200 = &fcn.00409b75::lpFileInformation;\n                uStackY204 = 0x40a065;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)();\n                uStackY204 = 0x4015f8;\n                uStackY208 = 0x40a070;\n                (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)();\n                uStackY208 = 0x40a076;\n                (*_sym.imp.KERNEL32.dll_GetACP)();\n                uStackY208 = 0;\n                uStackY212 = 0;\n                uStackY216 = 0;\n                uStackY220 = 0x40a07f;\n                (*_sym.imp.KERNEL32.dll_CopyFileA)();\n                uStackY220 = 0;\n                puStackY224 = &fcn.00409b75::lpBuffer;\n                uStackY228 = 0x40a08d;\n                (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryW)();\n                uStackY228 = 0;\n                uStackY232 = 0x40a094;\n                (*_sym.imp.KERNEL32.dll_GlobalFix)();\n                uStackY232 = 0;\n                puStackY236 = &fcn.00409b75::lpFileSizeHigh;\n                uStackY240 = 0x40a09f;\n                (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)();\n                uStackY240 = 0;\n                uStackY244 = 0;\n                uStackY248 = 0;\n                uStackY252 = 0;\n                uStackY256 = 0;\n                uStackY260 = 0x40a0aa;\n                (*_sym.imp.KERNEL32.dll_VirtualAllocEx)();\n                uStackY260 = 0;\n                uStackY264 = 0;\n                uStackY268 = 0;\n                uStackY272 = 0x40a0b3;\n                (*_sym.imp.KERNEL32.dll_ContinueDebugEvent)();\n                uStackY272 = 0;\n                lpTimeZoneInformation = 0;\n                uStackY280 = 0;\n                uStackY284 = 0x40a0bc;\n                (*_sym.imp.KERNEL32.dll_SetDefaultCommConfigW)();\n                uStackY284 = 0;\n                uStackY288 = 0x40a0c3;\n                (*_sym.imp.KERNEL32.dll_FlushConsoleInputBuffer)();\n                uStackY288 = 0;\n                uStackY292 = 0;\n                uStackY296 = 0x40a0cb;\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n                uStackY296 = 0;\n                uStackY300 = 0;\n                uStackY304 = 0x40a0d3;\n                (*_sym.imp.KERNEL32.dll_lstrcmpA)();\n                uStackY304 = 0x40a0d9;\n                (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n                uStackY304 = 0x401620;\n                uStackY308 = 0;\n                uStackY312 = 0;\n                puStackY316 = 0x40a0e6;\n                (*_sym.imp.KERNEL32.dll_OpenFileMappingW)();\n                lpUniversalTime._0_1_ = 0;\n                lpUniversalTime._1_1_ = 0;\n                lpUniversalTime._2_2_ = 0;\n                uStackY36 = 0;\n                uStackY34 = 0;\n                uStackY32 = 0;\n                uStackY31 = 0;\n                uStackY30 = 0;\n                puStackY316 = &fcn.00409b75::lpUniversalTime;\n                uStackY320 = 0x40a0fe;\n                (*_sym.imp.KERNEL32.dll_SetSystemTime)();\n                uStackY320 = 0;\n                uStackY324 = 0;\n                uStackY328 = 0x40a106;\n                (*_sym.imp.KERNEL32.dll_FatalAppExitW)();\n            }\n            lpFileSizeHigh = 0x40a10b;\n            fcn.00409877();\n            return 0;\n        }\n    }\n    *0x4e4134 = *0x42d100;\n    goto code_r0x00409cdd;\n}\n",
        "token_count": 7616
    },
    "0040adb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040adb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040ae10(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_4h);\n    if ((iVar1 == 0) && (var_4h != 0)) {\n        iVar2 = fcn.0040e450();\n        if (iVar2 != 0) {\n            piVar3 = fcn.0040e450();\n            *piVar3 = var_4h;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 207
    },
    "00413118": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413118(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004131e0();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004170f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004170f0(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4be484) {\n        return;\n    }\n    *0x4e4968 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4e496c = &arg_8h;\n    *0x4e48a8 = 0x10001;\n    *0x4e4850 = 0xc0000409;\n    *0x4e4854 = 1;\n    var_328h = *0x4be484;\n    var_324h = *0x4be488;\n    *0x4e485c = unaff_retaddr;\n    *0x4e4934 = in_GS;\n    *0x4e4938 = in_FS;\n    *0x4e493c = in_ES;\n    *0x4e4940 = in_DS;\n    *0x4e4944 = unaff_EDI;\n    *0x4e4948 = unaff_ESI;\n    *0x4e494c = unaff_EBX;\n    *0x4e4950 = in_EDX;\n    *0x4e4954 = in_ECX;\n    *0x4e4958 = in_EAX;\n    *0x4e495c = unaff_EBP;\n    *0x4e4960 = unaff_retaddr;\n    *0x4e4964 = in_CS;\n    *0x4e4970 = in_SS;\n    *0x4e48a0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00414e30(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4070f0);\n    if (*0x4e48a0 == 0) {\n        fcn.00414e30(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 852
    },
    "00417e7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417e7f(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4bed70);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004187b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004187b7(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    if (*(unaff_EBP + 8) == 2) {\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0x4bed70);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00418a8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418a8c(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_28h;\n    \n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0040d820(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00418bb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418bb0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hModule;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.0040f980();\n    var_18h = 0;\n    bVar1 = false;\n    var_14h = 0;\n    if (*0x4e4800 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x405b30);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405b24);\n        if (var_1ch == 0) {\n            return 0;\n        }\n        *0x4e4800 = fcn.0040f8b0(var_1ch);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405b14);\n        *0x4e4804 = fcn.0040f8b0(uVar3);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405b00);\n        *0x4e4808 = fcn.0040f8b0(uVar3);\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405ae4);\n        *0x4e4810 = fcn.0040f8b0(var_1ch);\n        if (*0x4e4810 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405acc);\n            *0x4e480c = fcn.0040f8b0(uVar3);\n        }\n    }\n    if ((*0x4e480c != var_4h) && (*0x4e4810 != var_4h)) {\n        pcVar4 = fcn.0040f9a0(*0x4e480c);\n        pcVar5 = fcn.0040f9a0(*0x4e4810);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((var_14h = (*pcVar4)(),  var_14h == 0 ||\n             (iVar2 = (*pcVar5)(var_14h, 1, &var_10h, 0xc, &var_20h),  iVar2 == 0)) || ((var_8h & 1) == 0)))) {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        arg_10h = arg_10h | 0x200000;\n    }\n    else {\n        if ((*0x4e4804 != var_4h) && (pcVar4 = fcn.0040f9a0(*0x4e4804),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)();\n        }\n        if (((var_18h != 0) && (*0x4e4808 != var_4h)) && (pcVar4 = fcn.0040f9a0(*0x4e4808),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)(var_18h);\n        }\n    }\n    pcVar4 = fcn.0040f9a0(*0x4e4800);\n    if (pcVar4 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (*pcVar4)(var_18h, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 979
    },
    "00418e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00418e00(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h == 0) {\n            iVar3 = fcn.0040d840(2, 0x405ba0, 0x37, 0, 0x405c04, var_ch);\n            if (iVar3 == 1) {\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n        }\n        if (arg_8h != 0) {\n            if ((arg_10h == 0) || (arg_ch < arg_14h)) {\n                fcn.00414740(arg_8h, 0, arg_ch);\n                if (arg_10h == 0) {\n                    iVar3 = fcn.0040d840(2, 0x405ba0, 0x3d, 0, 0x405b74, var_ch);\n                    if (iVar3 == 1) {\n                        pcVar1 = swi(3);\n                        uVar2 = (*pcVar1)();\n                        return uVar2;\n                    }\n                }\n                if (arg_10h != 0) {\n                    if (arg_14h > arg_ch) {\n                        iVar3 = fcn.0040d840(2, 0x405ba0, 0x3e, 0, 0x405b48, 0);\n                        if (iVar3 == 1) {\n                            pcVar1 = swi(3);\n                            uVar2 = (*pcVar1)();\n                            return uVar2;\n                        }\n                    }\n                    if (arg_14h <= arg_ch) {\n                        uVar2 = 0x16;\n                    }\n                    else {\n                        puVar4 = fcn.0040e450();\n                        *puVar4 = 0x22;\n                        fcn.0040e1e0(0x405b48, 0x405b8c, 0x405ba0, 0x3e, 0);\n                        uVar2 = 0x22;\n                    }\n                }\n                else {\n                    puVar4 = fcn.0040e450();\n                    *puVar4 = 0x16;\n                    fcn.0040e1e0(0x405b74, 0x405b8c, 0x405ba0, 0x3d, 0);\n                    uVar2 = 0x16;\n                }\n            }\n            else {\n                fcn.00417100(arg_8h, arg_10h, arg_14h);\n                uVar2 = 0;\n            }\n        }\n        else {\n            puVar4 = fcn.0040e450();\n            *puVar4 = 0x16;\n            fcn.0040e1e0(0x405c04, 0x405b8c, 0x405ba0, 0x37, 0);\n            uVar2 = 0x16;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 780
    },
    "0041a060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041a060(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x41a11e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0041a150;\n        uStack36 = *0x4be484 ^ &fcn.0041a060::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0041a060::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040ff30();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0041a060::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "0041bb90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0041bb90(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_24h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *0x4be484 ^ &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040a5f0(arg_10h);\n    arg_24h = fcn.0040a700();\n    var_8h = fcn.00410170(&var_1ch, &var_ch, arg_ch, 0, 0, 0, 0, arg_24h);\n    var_4h = fcn.004194a0(&var_1ch, arg_8h);\n    if ((var_8h & 3) == 0) {\n        if (var_4h == 1) {\n            fcn.0040a6d0();\n            goto code_r0x0041bc83;\n        }\n        if (var_4h == 2) {\n            fcn.0040a6d0();\n            goto code_r0x0041bc83;\n        }\n    }\n    else {\n        if ((var_8h & 1) != 0) {\n            fcn.0040a6d0();\n            goto code_r0x0041bc83;\n        }\n        if ((var_8h & 2) != 0) {\n            fcn.0040a6d0();\n            goto code_r0x0041bc83;\n        }\n    }\n    fcn.0040a6d0(arg_10h, 0);\ncode_r0x0041bc83:\n    fcn.004170f0(arg_10h);\n    return;\n}\n",
        "token_count": 484
    },
    "0041bca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0041bca0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_24h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *0x4be484 ^ &stack0xfffffffc;\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040a5f0(arg_10h);\n    arg_24h = fcn.0040a700();\n    var_8h = fcn.00410170(&var_1ch, &var_ch, arg_ch, 0, 0, 0, 0, arg_24h);\n    var_4h = fcn.00419af0(&var_1ch, arg_8h);\n    if ((var_8h & 3) == 0) {\n        if (var_4h == 1) {\n            fcn.0040a6d0();\n            goto code_r0x0041bd93;\n        }\n        if (var_4h == 2) {\n            fcn.0040a6d0();\n            goto code_r0x0041bd93;\n        }\n    }\n    else {\n        if ((var_8h & 1) != 0) {\n            fcn.0040a6d0();\n            goto code_r0x0041bd93;\n        }\n        if ((var_8h & 2) != 0) {\n            fcn.0040a6d0();\n            goto code_r0x0041bd93;\n        }\n    }\n    fcn.0040a6d0(arg_10h, 0);\ncode_r0x0041bd93:\n    fcn.004170f0(arg_10h);\n    return;\n}\n",
        "token_count": 485
    },
    "0041cb10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cb10(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hModule;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    var_4h = fcn.0040f980();\n    var_18h = 0;\n    bVar1 = false;\n    var_14h = 0;\n    if (*0x4e4838 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x406ba0);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x406b94);\n        if (var_1ch == 0) {\n            return 0;\n        }\n        *0x4e4838 = fcn.0040f8b0(var_1ch);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405b14);\n        *0x4e483c = fcn.0040f8b0(uVar3);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405b00);\n        *0x4e4840 = fcn.0040f8b0(uVar3);\n        var_1ch = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x406b78);\n        *0x4e4848 = fcn.0040f8b0(var_1ch);\n        if (*0x4e4848 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x405acc);\n            *0x4e4844 = fcn.0040f8b0(uVar3);\n        }\n    }\n    if ((*0x4e4844 != var_4h) && (*0x4e4848 != var_4h)) {\n        pcVar4 = fcn.0040f9a0(*0x4e4844);\n        pcVar5 = fcn.0040f9a0(*0x4e4848);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((var_14h = (*pcVar4)(),  var_14h == 0 ||\n             (iVar2 = (*pcVar5)(var_14h, 1, &var_10h, 0xc, &var_20h),  iVar2 == 0)) || ((var_8h & 1) == 0)))) {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        arg_10h = arg_10h | 0x200000;\n    }\n    else {\n        if ((*0x4e483c != var_4h) && (pcVar4 = fcn.0040f9a0(*0x4e483c),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)();\n        }\n        if (((var_18h != 0) && (*0x4e4840 != var_4h)) && (pcVar4 = fcn.0040f9a0(*0x4e4840),  pcVar4 != NULL)) {\n            var_18h = (*pcVar4)(var_18h);\n        }\n    }\n    pcVar4 = fcn.0040f9a0(*0x4e4838);\n    if (pcVar4 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (*pcVar4)(var_18h, arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 979
    },
    "00420dad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420dad(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    \n    iVar1 = fcn.0040ff30();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040ff30();\n        *(unaff_EBP + -0x2c) = iVar1 + 0x90;\n        **(unaff_EBP + -0x2c) = **(unaff_EBP + -0x2c) + -1;\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00421098": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421098(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x20);\n    fcn.0041a2e0(*(unaff_EBP + -0x1c));\n    iVar1 = fcn.0040ff30();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.0040ff30();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if ((((**(unaff_EBP + 8) == -0x1f928c9d) && (*(*(unaff_EBP + 8) + 0x10) == 3)) &&\n        ((*(*(unaff_EBP + 8) + 0x14) == 0x19930520 ||\n         ((*(*(unaff_EBP + 8) + 0x14) == 0x19930521 || (*(*(unaff_EBP + 8) + 0x14) == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x30) != 0)))) {\n        iVar1 = fcn.0041a2b0(*(*(unaff_EBP + 8) + 0x18));\n        if (iVar1 != 0) {\n            fcn.00421540(*(unaff_EBP + 8), *(unaff_EBP + -0x4c));\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00428250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428250(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t arg_1ch;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *in_FS_OFFSET;\n    bool bVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    pcStack16 = fcn.0040dcb0;\n    var_10h = *in_FS_OFFSET;\n    var_8h = *0x4be484 ^ 0x42a440;\n    arg_1ch = *0x4be484 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_10h;\n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.0040e450();\n        *puVar2 = 9;\n        var_1ch = -1;\n        goto code_r0x00428455;\n    }\n    if ((arg_8h < 0) || (*0x4e5c94 <= arg_8h)) {\n        bVar6 = false;\n    }\n    else {\n        bVar6 = true;\n    }\n    if ((!bVar6) && (iVar3 = fcn.0040d840(2, 0x4086a8, 0x2c, 0, 0x408708, arg_1ch),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (!bVar6) {\n        puVar2 = fcn.0040e450();\n        *puVar2 = 9;\n        fcn.0040e1e0(0x408708, 0x408698, 0x4086a8, 0x2c, 0);\n        var_1ch = -1;\n        goto code_r0x00428455;\n    }\n    bVar6 = (*(*((arg_8h >> 5) * 4 + 0x4e5ca0) + 4 + (arg_8h & 0x1f) * 0x40) & 1) == 0;\n    if ((bVar6) && (iVar3 = fcn.0040d840(2, 0x4086a8, 0x2d, 0, 0x408660, arg_1ch),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    if (bVar6) {\n        puVar2 = fcn.0040e450();\n        *puVar2 = 9;\n        fcn.0040e1e0(0x408660, 0x408698, 0x4086a8, 0x2d, 0);\n        var_1ch = -1;\n        goto code_r0x00428455;\n    }\n    fcn.00427590(arg_8h);\n    var_4h = 0;\n    if ((*(*((arg_8h >> 5) * 4 + 0x4e5ca0) + 4 + (arg_8h & 0x1f) * 0x40) & 1) == 0) {\ncode_r0x00428403:\n        puVar2 = fcn.0040e450();\n        *puVar2 = 9;\n        var_1ch = -1;\n        iVar3 = fcn.0040d840(2, 0x4086a8, 0x45, 0, 0x4078e8, arg_1ch);\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    else {\n        uVar4 = fcn.00427420(arg_8h);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar4);\n        if (iVar3 == 0) {\n            var_1ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            var_1ch = 0;\n        }\n        if (var_1ch != 0) {\n            piVar5 = fcn.0040e480();\n            *piVar5 = var_1ch;\n            goto code_r0x00428403;\n        }\n    }\n    var_4h = 0xfffffffe;\n    fcn.00428445(arg_1ch);\ncode_r0x00428455:\n    *in_FS_OFFSET = var_10h;\n    return var_1ch;\n}\n",
        "token_count": 1124
    },
    "0040a310": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a310(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.0040a2e0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a370(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 82
    },
    "00420970": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420970(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00420950();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040a370(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "00412b70": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00412b70(void)\n\n{\n    uint32_t uVar1;\n    uint32_t lpPerformanceCount;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint32_t lpSystemTimeAsFileTime;\n    uint32_t var_4h;\n    \n    lpSystemTimeAsFileTime = 0;\n    var_4h = 0;\n    if ((*0x4be484 == 0xbb40e64e) || ((*0x4be484 & 0xffff0000) == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n        var_ch = lpSystemTimeAsFileTime ^ var_4h;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        var_ch = uVar1 ^ var_ch;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_ch = uVar1 ^ var_ch;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_ch = uVar1 ^ var_ch;\n        (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount);\n        var_ch = var_ch ^ lpPerformanceCount ^ var_14h;\n        if (var_ch == 0xbb40e64e) {\n            var_ch = 0xbb40e64f;\n        }\n        else if ((var_ch & 0xffff0000) == 0) {\n            var_ch = var_ch << 0x10 | var_ch;\n        }\n        *0x4be484 = var_ch;\n        *0x4be488 = ~var_ch;\n    }\n    else {\n        *0x4be488 = ~*0x4be484;\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00408aa5": {
        "rules": [
            "contain obfuscated stackstrings",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408aa5(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = *arg_8h - arg_ch;\n    return;\n}\n",
        "token_count": 495
    },
    "004094ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004094ac(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_10h ^ arg_ch;\n    return;\n}\n",
        "token_count": 61
    },
    "004094c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004094c9(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = *arg_8h ^ arg_ch;\n    return;\n}\n",
        "token_count": 55
    },
    "004094ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004094ea(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    *arg_8h = *arg_8h + arg_ch;\n    return;\n}\n",
        "token_count": 46
    },
    "004094f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004094f9(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_ch << 4;\n    return;\n}\n",
        "token_count": 52
    },
    "0040979e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040979e(int32_t arg_8h)\n\n{\n    uint lpBuffer;\n    uint lpDCB;\n    uint var_38h;\n    uint lpCommTimeouts;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint lpFilePart;\n    uint lpNumberOfEventsWritten;\n    uint lpNumberOfEventsRead;\n    uint var_4h;\n    \n    if (*0x4e4134 == 0x37) {\n        lpCommTimeouts = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack24 = 0;\n        (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW)(0x4013d0, &lpDCB, &lpCommTimeouts);\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(0);\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0, 0, 0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetThreadPriority)(0);\n        (*_sym.imp.KERNEL32.dll_SearchPathW)(0, 0, 0, 0, &lpBuffer, &lpFilePart);\n        (*_sym.imp.KERNEL32.dll_AddAtomA)(0);\n        (*_sym.imp.KERNEL32.dll_LoadResource)(0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteConsoleInputA)(0, 0, 0, &lpNumberOfEventsWritten);\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)(0, &var_38h, 0, &lpNumberOfEventsRead);\n        (*_sym.imp.KERNEL32.dll_ChangeTimerQueueTimer)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_LocalCompact)(0);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStructA)(0, 0, 0, 0, 0);\n    }\n    *(*0x4c9ca0 + arg_8h) = *(*0x4e4138 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 492
    },
    "0040987d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040987d(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00409888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409888(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h + 0x38d6;\n    return;\n}\n",
        "token_count": 44
    },
    "0040a2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a2e0(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0x401690;\n    fcn.0040d370(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "0040a43a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a43a(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0040a710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a710(uint arg_8h)\n\n{\n    fcn.0040a4c0(arg_8h, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0040b210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b210(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040b3d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b3d2(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 29
    },
    "0040ba61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ba61(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040c126": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c126(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040c5c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c5c5(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 29
    },
    "0040c726": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c726(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 27
    },
    "0040c9fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c9fb(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0040cd2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cd2a(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 28
    },
    "0040d45b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d45b(void)\n\n{\n    fcn.0040d820(0xe);\n    return;\n}\n",
        "token_count": 29
    },
    "0040d7b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d7b6(void)\n\n{\n    fcn.0040d820(10);\n    return;\n}\n",
        "token_count": 29
    },
    "0040e3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e3a0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = fcn.0040e480();\n    *puVar1 = arg_8h;\n    uVar2 = fcn.0040e3d0(arg_8h);\n    puVar1 = fcn.0040e450();\n    *puVar1 = uVar2;\n    return;\n}\n",
        "token_count": 104
    },
    "0040e581": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e581(void)\n\n{\n    fcn.0040d820(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "0040e7fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e7fe(void)\n\n{\n    fcn.0040d820(0xd);\n    return;\n}\n",
        "token_count": 29
    },
    "0040f748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f748(void)\n\n{\n    fcn.0040d820(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "0040f884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f884(void)\n\n{\n    fcn.0040d820(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "0040fdf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fdf0(void)\n\n{\n    fcn.0040d820(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "0040fe46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fe46(void)\n\n{\n    fcn.0040d820(0xc);\n    return;\n}\n",
        "token_count": 28
    },
    "004100c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004100c8(void)\n\n{\n    fcn.0040d820(0xd);\n    return;\n}\n",
        "token_count": 28
    },
    "00410135": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410135(void)\n\n{\n    fcn.0040d820(0xc);\n    return;\n}\n",
        "token_count": 27
    },
    "004131c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004131c0(void)\n\n{\n    fcn.0040d7e0(8);\n    return;\n}\n",
        "token_count": 29
    },
    "00414300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414311)\n// WARNING: Removing unreachable block (ram,0x00414317)\n// WARNING: Removing unreachable block (ram,0x00414319)\n\nvoid fcn.00414300(void)\n\n{\n    return;\n}\n",
        "token_count": 60
    },
    "00414832": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414832(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00414f6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414f6e(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 28
    },
    "004152f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004152f8(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 27
    },
    "00415555": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415555(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00415661": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415661(void)\n\n{\n    fcn.0040d820(4);\n    return;\n}\n",
        "token_count": 26
    },
    "00417d15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417d15(void)\n\n{\n    fcn.0040d820(0xf);\n    return;\n}\n",
        "token_count": 28
    },
    "0041852a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041852a(void)\n\n{\n    fcn.0040d820(0xf);\n    return;\n}\n",
        "token_count": 28
    },
    "00418b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418b90(void)\n\n{\n    fcn.0040f9a0(*0x4e47f4);\n    return;\n}\n",
        "token_count": 35
    },
    "004194a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004194a0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004194c0(arg_8h, arg_ch, 0x4bed8c);\n    return;\n}\n",
        "token_count": 50
    },
    "00419af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419af0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004194c0(arg_8h, arg_ch, 0x4beda4);\n    return;\n}\n",
        "token_count": 50
    },
    "004227c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004227c4(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00427690(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "00422adf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422adf(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00427690(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 47
    },
    "00427641": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427641(void)\n\n{\n    fcn.0040d820(10);\n    return;\n}\n",
        "token_count": 26
    },
    "00427988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427988(void)\n\n{\n    fcn.0040d820(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00427ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427ad0(void)\n\n{\n    fcn.00427af0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00427c37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427c37(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    \n    fcn.00423a80(*(unaff_EBP + -0x20), *(*0x4e4c50 + *(unaff_EBP + -0x20) * 4));\n    return;\n}\n",
        "token_count": 76
    },
    "00427c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427c64(void)\n\n{\n    fcn.0040d820(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00428121": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428121(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00423a20(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "00428445": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428445(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00427690(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 47
    },
    "0042865c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042865c(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    \n    fcn.00427690(*(unaff_EBP + 8));\n    return;\n}\n",
        "token_count": 48
    },
    "00419f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419f60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00420320(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    }
}