{
    "100001f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.100001f20(char **arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    pcVar2 = *arg1;\n    iVar3 = 0;\n    while( true ) {\n        iVar1 = fcn.100007d6c(arg2);\n        if (iVar1 == 0) {\n            *arg1 = pcVar2;\n            iVar1 = fcn.100007d6c(arg2);\n            for (pcVar4 = pcVar2; (iVar1 == 0 && (*pcVar4 != '\\0')); pcVar4 = pcVar4 + 1) {\n                iVar3 = iVar3 + 1;\n                iVar1 = fcn.100007d6c(arg2);\n            }\n            pcVar2 = pcVar2 + iVar3;\n            if (*pcVar2 != '\\0') {\n                *pcVar2 = '\\0';\n                pcVar2 = pcVar2 + 1;\n            }\n            return pcVar2;\n        }\n        if (*pcVar2 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 270
    },
    "100001fb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100001fbc(char *arg1, char **arg2, uint *arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uchar *arg3_00;\n    int64_t iVar10;\n    int64_t iVar11;\n    ulong var_50h;\n    ulong var_160h;\n    ulong var_560h;\n    uchar auStackY1704 [32];\n    ulong in_stack_fffffffffffff978;\n    uint uVar12;\n    uint64_t in_stack_fffffffffffff980;\n    ulong in_stack_fffffffffffff998;\n    ulong in_stack_fffffffffffff9a0;\n    ulong in_stack_fffffffffffff9a8;\n    ulong in_stack_fffffffffffff9b0;\n    ulong in_stack_fffffffffffff9b8;\n    ulong in_stack_fffffffffffff9c0;\n    ulong in_stack_fffffffffffff9c8;\n    ulong in_stack_fffffffffffff9d0;\n    ulong in_stack_fffffffffffff9d8;\n    ulong in_stack_fffffffffffff9e0;\n    ulong in_stack_fffffffffffff9e8;\n    ulong in_stack_fffffffffffff9f0;\n    ulong in_stack_fffffffffffff9f8;\n    ulong in_stack_fffffffffffffa00;\n    ulong in_stack_fffffffffffffa08;\n    ulong in_stack_fffffffffffffa10;\n    ulong in_stack_fffffffffffffa18;\n    ulong in_stack_fffffffffffffa20;\n    ulong in_stack_fffffffffffffa28;\n    ulong in_stack_fffffffffffffa30;\n    ulong in_stack_fffffffffffffa38;\n    ulong in_stack_fffffffffffffa40;\n    ulong in_stack_fffffffffffffa48;\n    ulong in_stack_fffffffffffffa50;\n    ulong in_stack_fffffffffffffa58;\n    ulong in_stack_fffffffffffffa60;\n    ulong in_stack_fffffffffffffa68;\n    ulong in_stack_fffffffffffffa70;\n    ulong in_stack_fffffffffffffa78;\n    ulong in_stack_fffffffffffffa80;\n    ulong in_stack_fffffffffffffa88;\n    ulong in_stack_fffffffffffffa90;\n    ulong in_stack_fffffffffffffa98;\n    ulong in_stack_fffffffffffffaa0;\n    char in_stack_fffffffffffffaa8;\n    unkbyte7 in_stack_fffffffffffffaa9;\n    ulong in_stack_fffffffffffffab0;\n    ulong in_stack_fffffffffffffab8;\n    ulong in_stack_fffffffffffffac0;\n    ulong in_stack_fffffffffffffac8;\n    ulong in_stack_fffffffffffffad0;\n    ulong in_stack_fffffffffffffad8;\n    ulong in_stack_fffffffffffffae0;\n    ulong in_stack_fffffffffffffae8;\n    ulong in_stack_fffffffffffffaf0;\n    ulong in_stack_fffffffffffffaf8;\n    ulong in_stack_fffffffffffffb00;\n    ulong in_stack_fffffffffffffb08;\n    ulong in_stack_fffffffffffffb10;\n    ulong in_stack_fffffffffffffb18;\n    ulong in_stack_fffffffffffffb20;\n    ulong in_stack_fffffffffffffb28;\n    ulong in_stack_fffffffffffffb30;\n    char acStack1096 [1024];\n    uint64_t uStack72;\n    \n    uVar12 = in_stack_fffffffffffff978 >> 0x20;\n    uStack72 = *0x10000f100 ^ auStackY1704;\n    iVar11 = 0x104;\n    iVar10 = 0x104;\n    pcVar5 = &stack0xfffffffffffffaa8;\n    do {\n        if ((iVar10 == -0x7ffffefa) || (pcVar5[arg1 - &stack0xfffffffffffffaa8] == '\\0')) break;\n        *pcVar5 = pcVar5[arg1 - &stack0xfffffffffffffaa8];\n        pcVar5 = pcVar5 + 1;\n        iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    if (iVar10 == 0) {\n        pcVar5 = pcVar5 + -1;\n    }\n    *pcVar5 = '\\0';\n    if (in_stack_fffffffffffffaa8 == '\\\"') {\n        pcVar5 = &stack0xfffffffffffffaa9;\n        uVar8 = 0x100001638;\n    }\n    else {\n        pcVar5 = &stack0xfffffffffffffaa8;\n        uVar8 = 0x10000163c;\n    }\n    pcVar4 = fcn.100001f20(&stack0xfffffffffffff988, uVar8);\n    pcVar7 = pcVar5;\n    if (((pcVar5 == NULL) || (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(),  iVar1 < 3)) ||\n       (((pcVar5[1] != ':' || (pcVar5[2] != '\\\\')) && ((*pcVar5 != '\\\\' || (pcVar5[1] != '\\\\')))))) {\n        iVar10 = 0x104;\n        pcVar6 = &stack0xfffffffffffff998;\n        do {\n            if ((iVar10 == -0x7ffffefa) || (pcVar6[0x100010670 - &stack0xfffffffffffff998] == '\\0')) break;\n            *pcVar6 = pcVar6[0x100010670 - &stack0xfffffffffffff998];\n            pcVar6 = pcVar6 + 1;\n            iVar10 = iVar10 + -1;\n        } while (iVar10 != 0);\n        if (iVar10 == 0) {\n            pcVar6 = pcVar6 + -1;\n        }\n        *pcVar6 = '\\0';\n        fcn.100007ddc(&stack0xfffffffffffff998, 0x104, pcVar5);\n    }\n    else {\n        iVar10 = 0x104;\n        pcVar6 = &stack0xfffffffffffff998;\n        do {\n            if ((iVar10 == -0x7ffffefa) || (pcVar6[pcVar5 - &stack0xfffffffffffff998] == '\\0')) break;\n            *pcVar6 = pcVar6[pcVar5 - &stack0xfffffffffffff998];\n            pcVar6 = pcVar6 + 1;\n            iVar10 = iVar10 + -1;\n        } while (iVar10 != 0);\n        if (iVar10 == 0) {\n            pcVar6 = pcVar6 + -1;\n        }\n        *pcVar6 = '\\0';\n    }\n    iVar10 = fcn.100007ef8(pcVar5);\n    if (iVar10 == 0) {\ncode_r0x00010000238f:\n        iVar10 = fcn.100007ef8(pcVar5);\n        if (iVar10 == 0) {\ncode_r0x000100002432:\n            iVar10 = 0x400;\n            pcVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n            if (pcVar5 != NULL) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&stack0xfffffffffffff998);\n                if ((uVar2 == 0xffffffff) || ((uVar2 & 0x10) != 0)) {\n                    pcVar4 = acStack1096;\n                    do {\n                        if ((iVar10 == -0x7ffffbfe) || (pcVar4[arg1 - acStack1096] == '\\0')) break;\n                        *pcVar4 = pcVar4[arg1 - acStack1096];\n                        pcVar4 = pcVar4 + 1;\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                    if (iVar10 == 0) {\n                        pcVar4 = pcVar4 + -1;\n                    }\n                    *pcVar4 = '\\0';\n                }\n                else {\n                    iVar10 = 0x400;\n                    pcVar7 = acStack1096;\n                    do {\n                        if ((iVar10 == -0x7ffffbfe) || (pcVar7[-0x220] == '\\0')) break;\n                        *pcVar7 = pcVar7[-0x220];\n                        pcVar7 = pcVar7 + 1;\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                    if (iVar10 == 0) {\n                        pcVar7 = pcVar7 + -1;\n                    }\n                    *pcVar7 = '\\0';\n                    if ((pcVar4 != NULL) && (*pcVar4 != '\\0')) {\n                        fcn.100001a58(acStack1096, 0x400, 0x10000163c);\n                        fcn.100001a58(acStack1096, 0x400, pcVar4);\n                    }\n                }\n                *pcVar5 = '\\0';\n                fcn.100003238(acStack1096, pcVar5, pcVar5);\n                goto code_r0x000100002524;\n            }\n        }\n        else {\n            in_stack_fffffffffffff980 = CONCAT44(in_stack_fffffffffffff980 >> 0x20, 0xffffffff);\n            uVar12 = 1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f);\n            if (iVar1 != 2) goto code_r0x000100002432;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(\"Command.com /c %s\");\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            iVar10 = iVar1 + 8 + iVar3;\n            pcVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar10);\n            if (pcVar5 != NULL) {\n                fcn.100001b10(pcVar5, iVar10, \"Command.com /c %s\", &stack0xfffffffffffff998);\n                goto code_r0x000100002524;\n            }\n        }\n        uVar8 = 0x4b5;\n        arg3_00 = NULL;\n    }\n    else {\n        in_stack_fffffffffffff980 = CONCAT44(in_stack_fffffffffffff980 >> 0x20, 0xffffffff);\n        uVar12 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1);\n        if (iVar1 != 2) goto code_r0x00010000238f;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n        if ((uVar2 != 0xffffffff) && ((~(uVar2 >> 4) & 1) != 0)) {\n            pcVar5 = fcn.100001f20(&stack0xfffffffffffff988, 0x100001648);\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(\"DefaultInstall\");\n            pcVar7 = pcVar4;\n            if (pcVar5 != NULL) {\n                if (*pcVar5 != '\\0') {\n                    pcVar4 = pcVar5;\n                }\n                fcn.100001f20(&stack0xfffffffffffff988, 0x10000164c);\n                pcVar7 = pcVar4;\n                if (*pcVar4 != '\\0') {\n                    (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4);\n                }\n            }\n            iVar10 = 0x200;\n            pcVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x200);\n            if (pcVar5 == NULL) {\n                uVar8 = 0x4b5;\n                arg3_00 = NULL;\n                goto code_r0x000100002379;\n            }\n            pcVar7 = \"DefaultInstall\";\n            if (*pcVar4 != '\\0') {\n                pcVar7 = pcVar4;\n            }\n            *0x10001048c = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)\n                                     (pcVar7, 0x100001650, 0, &stack0xfffffffffffff998);\n            *arg3 = 1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(0x100001668, 0x100001658, 0x100001609, pcVar5);\n            if (iVar1 == 0) {\n                *0x100010ec4 = *0x100010ec4 & 0xfffffffb;\n                if (*0x100010490 == 0) {\n                    uVar8 = 0x100001670;\n                    (*_sym.imp.KERNEL32.dll_GetShortPathNameA)\n                              (&stack0xfffffffffffff998, &stack0xfffffffffffff998, 0x104);\n                }\n                else {\n                    uVar8 = 0x100001680;\n                }\n                fcn.100001b10(pcVar5, 0x200, \"rundll32.exe %s,InstallHinfSection %s 128 %s\", uVar8);\n            }\n            else {\n                *0x100010ec4 = *0x100010ec4 | 4;\n                pcVar7 = \"DefaultInstall\";\n                if (*pcVar4 != '\\0') {\n                    pcVar7 = pcVar4;\n                }\n                iVar9 = pcVar7 - arg1;\n                do {\n                    if ((iVar11 == -0x7ffffefa) || (arg1[iVar9] == '\\0')) break;\n                    *arg1 = arg1[iVar9];\n                    arg1 = arg1 + 1;\n                    iVar11 = iVar11 + -1;\n                } while (iVar11 != 0);\n                if (iVar11 == 0) {\n                    arg1 = arg1 + -1;\n                }\n                *arg1 = '\\0';\n                pcVar4 = pcVar5;\n                do {\n                    if ((iVar10 == -0x7ffffdfe) || (pcVar4[&stack0xfffffffffffff998 + -pcVar5] == '\\0')) break;\n                    *pcVar4 = pcVar4[&stack0xfffffffffffff998 + -pcVar5];\n                    pcVar4 = pcVar4 + 1;\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n                if (iVar10 == 0) {\n                    pcVar4 = pcVar4 + -1;\n                }\n                *pcVar4 = '\\0';\n            }\ncode_r0x000100002524:\n            *arg2 = pcVar5;\n            goto code_r0x000100002531;\n        }\n        arg3_00 = &stack0xfffffffffffff998;\n        uVar8 = 0x525;\n    }\ncode_r0x000100002379:\n    fcn.100005420(0, uVar8, arg3_00, 0, CONCAT44(uVar12, 0x10), in_stack_fffffffffffff980 & 0xffffffff00000000, pcVar7, \n                  arg2, in_stack_fffffffffffff998, in_stack_fffffffffffff9a0, in_stack_fffffffffffff9a8, \n                  in_stack_fffffffffffff9b0, in_stack_fffffffffffff9b8, in_stack_fffffffffffff9c0, \n                  in_stack_fffffffffffff9c8, in_stack_fffffffffffff9d0, in_stack_fffffffffffff9d8, \n                  in_stack_fffffffffffff9e0, in_stack_fffffffffffff9e8, in_stack_fffffffffffff9f0, \n                  in_stack_fffffffffffff9f8, in_stack_fffffffffffffa00, in_stack_fffffffffffffa08, \n                  in_stack_fffffffffffffa10, in_stack_fffffffffffffa18, in_stack_fffffffffffffa20, \n                  in_stack_fffffffffffffa28, in_stack_fffffffffffffa30, in_stack_fffffffffffffa38, \n                  in_stack_fffffffffffffa40, in_stack_fffffffffffffa48, in_stack_fffffffffffffa50, \n                  in_stack_fffffffffffffa58, in_stack_fffffffffffffa60, in_stack_fffffffffffffa68, \n                  in_stack_fffffffffffffa70, in_stack_fffffffffffffa78, in_stack_fffffffffffffa80, \n                  in_stack_fffffffffffffa88, in_stack_fffffffffffffa90, in_stack_fffffffffffffa98, \n                  in_stack_fffffffffffffaa0, CONCAT71(in_stack_fffffffffffffaa9, in_stack_fffffffffffffaa8), \n                  in_stack_fffffffffffffab0, in_stack_fffffffffffffab8, in_stack_fffffffffffffac0, \n                  in_stack_fffffffffffffac8, in_stack_fffffffffffffad0, in_stack_fffffffffffffad8, \n                  in_stack_fffffffffffffae0, in_stack_fffffffffffffae8, in_stack_fffffffffffffaf0, \n                  in_stack_fffffffffffffaf8, in_stack_fffffffffffffb00, in_stack_fffffffffffffb08, \n                  in_stack_fffffffffffffb10, in_stack_fffffffffffffb18, in_stack_fffffffffffffb20, \n                  in_stack_fffffffffffffb28, in_stack_fffffffffffffb30);\ncode_r0x000100002531:\n    fcn.10000c380(uStack72 ^ auStackY1704);\n    return;\n}\n",
        "token_count": 3821
    },
    "10000291": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100002918(char *arg1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack648 [32];\n    uint8_t auStack616 [44];\n    uchar auStack572 [276];\n    char acStack296 [272];\n    uint64_t uStack24;\n    \n    if (arg1 != NULL) {\n        uStack24 = *0x10000f100 ^ auStack648;\n        if (*arg1 != '\\0') {\n            iVar3 = 0x104;\n            pcVar2 = acStack296;\n            do {\n                if ((iVar3 == -0x7ffffefa) || (pcVar2[arg1 - acStack296] == '\\0')) break;\n                *pcVar2 = pcVar2[arg1 - acStack296];\n                pcVar2 = pcVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            if (iVar3 == 0) {\n                pcVar2 = pcVar2 + -1;\n            }\n            *pcVar2 = '\\0';\n            fcn.100001a58(acStack296, 0x104, 0x1000016d0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(acStack296, auStack616);\n            if (iVar3 != -1) {\n                do {\n                    iVar4 = 0x104;\n                    pcVar2 = acStack296;\n                    do {\n                        if ((iVar4 == -0x7ffffefa) || (pcVar2[arg1 - acStack296] == '\\0')) break;\n                        *pcVar2 = pcVar2[arg1 - acStack296];\n                        pcVar2 = pcVar2 + 1;\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                    if (iVar4 == 0) {\n                        pcVar2 = pcVar2 + -1;\n                    }\n                    *pcVar2 = '\\0';\n                    if ((auStack616[0] & 0x10) == 0) {\n                        fcn.100001a58(acStack296, 0x104, auStack572);\n                        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(acStack296, 0x80);\n                        (*_sym.imp.KERNEL32.dll_DeleteFileA)(acStack296);\n                    }\n                    else {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(auStack572, 0x1000016d4);\n                        if (iVar1 != 0) {\n                            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(auStack572, 0x1000016d8);\n                            if (iVar1 != 0) {\n                                fcn.100001a58(acStack296, 0x104, auStack572);\n                                fcn.100007ddc(acStack296, 0x104, 0x100001609);\n                                fcn.100002918(acStack296);\n                            }\n                        }\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar3, auStack616);\n                } while (iVar1 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg1);\n            }\n        }\n        fcn.10000c380(uStack24 ^ auStack648);\n    }\n    return;\n}\n",
        "token_count": 768
    },
    "10000359": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100003594(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t noname_40;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong unaff_R12;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    uchar auStack360 [32];\n    ulong in_stack_fffffffffffffeb8;\n    uint uVar5;\n    ulong noname_4;\n    uint32_t in_stack_fffffffffffffec4;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    ulong in_stack_ffffffffffffff48;\n    ulong in_stack_ffffffffffffff50;\n    ulong in_stack_ffffffffffffff58;\n    ulong in_stack_ffffffffffffff60;\n    ulong in_stack_ffffffffffffff68;\n    ulong in_stack_ffffffffffffff70;\n    ulong in_stack_ffffffffffffff78;\n    ulong in_stack_ffffffffffffff80;\n    ulong in_stack_ffffffffffffff88;\n    ulong in_stack_ffffffffffffff90;\n    ulong in_stack_ffffffffffffff98;\n    ulong in_stack_ffffffffffffffa0;\n    ulong in_stack_ffffffffffffffa8;\n    ulong in_stack_ffffffffffffffb0;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    ulong in_stack_ffffffffffffffe0;\n    \n    uVar5 = in_stack_fffffffffffffeb8 >> 0x20;\n    noname_40 = *0x10000f100 ^ auStack360;\n    uVar4 = 0;\n    *0x100010ee0 = arg1;\n    sub.msvcrt.dll_memset(0x1000105c0, 0, 0x910);\n    sub.msvcrt.dll_memset(0x100011400, 0, 0x32c);\n    sub.msvcrt.dll_memset(0x1000104a0, 0);\n    *0x100010878 = 1;\n    uVar1 = fcn.100005680(0x10000175c, 0x1000105d8, 0x7f);\n    if ((uVar1 == 0) || (0x80 < uVar1)) {\n        uVar4 = 0x4b1;\n    }\n    else {\n        *0x100010450 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1);\n        (*_sym.imp.KERNEL32.dll_SetEvent)(*0x100010450);\n        iVar2 = fcn.100005680(0x100001768, 0x100010ec4, 4);\n        if (iVar2 == 0) {\ncode_r0x00010000367e:\n            fcn.100005420(0, 0x4b1, 0, 0, CONCAT44(uVar5, 0x10), in_stack_fffffffffffffec4 << 0x20, \n                          in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, in_stack_fffffffffffffed8, \n                          in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, \n                          in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, \n                          in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, \n                          in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, \n                          in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, in_stack_ffffffffffffff50, \n                          in_stack_ffffffffffffff58, in_stack_ffffffffffffff60, in_stack_ffffffffffffff68, \n                          in_stack_ffffffffffffff70, in_stack_ffffffffffffff78, in_stack_ffffffffffffff80, \n                          in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, \n                          in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, \n                          in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                          in_stack_ffffffffffffffd0, noname_40, in_stack_ffffffffffffffe0, unaff_R12, unaff_RDI, \n                          unaff_RSI, in_stack_00000000, in_stack_00000008, in_stack_00000010, unaff_RBX, \n                          in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040\n                          , in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                          in_stack_00000068, in_stack_00000070);\n            *0x100010488 = 0x80070714;\n            goto code_r0x00010000387c;\n        }\n        if (((*0x100010ec4 & 0x40) != 0) || (*0x100010ec4 < '\\0')) {\n            iVar2 = fcn.100005680(0x100001778, &stack0xfffffffffffffec8, 0x104);\n            if (iVar2 == 0) goto code_r0x00010000367e;\n            *0x100010458 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 1);\n            if ((*0x100010458 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0xb7)) {\n                if ((*0x100010ec4 & 0x80) == 0) {\n                    noname_4 = CONCAT44(uVar5, 0x20);\n                    iVar2 = fcn.100005420(0, 0x524, 0x1000105d8, 0, noname_4, CONCAT44(in_stack_fffffffffffffec4, 4), \n                                          in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, \n                                          in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, \n                                          in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, \n                                          in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, \n                                          in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, \n                                          in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, \n                                          in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, \n                                          in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, \n                                          in_stack_ffffffffffffff48, in_stack_ffffffffffffff50, \n                                          in_stack_ffffffffffffff58, in_stack_ffffffffffffff60, \n                                          in_stack_ffffffffffffff68, in_stack_ffffffffffffff70, \n                                          in_stack_ffffffffffffff78, in_stack_ffffffffffffff80, \n                                          in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, \n                                          in_stack_ffffffffffffff98, in_stack_ffffffffffffffa0, \n                                          in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, \n                                          in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, \n                                          in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, noname_40, \n                                          in_stack_ffffffffffffffe0, unaff_R12, unaff_RDI, unaff_RSI, in_stack_00000000\n                                          , in_stack_00000008, in_stack_00000010, unaff_RBX, in_stack_00000020, \n                                          in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                                          in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                                          in_stack_00000068, in_stack_00000070);\n                    uVar5 = noname_4 >> 0x20;\n                    if (iVar2 == 6) goto code_r0x000100003769;\n                }\n                else {\n                    fcn.100005420(0, 0x54b, 0x1000105d8, 0, CONCAT44(uVar5, 0x10), in_stack_fffffffffffffec4 << 0x20, \n                                  in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, in_stack_fffffffffffffed8, \n                                  in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, \n                                  in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, \n                                  in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, \n                                  in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, \n                                  in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, in_stack_ffffffffffffff50, \n                                  in_stack_ffffffffffffff58, in_stack_ffffffffffffff60, in_stack_ffffffffffffff68, \n                                  in_stack_ffffffffffffff70, in_stack_ffffffffffffff78, in_stack_ffffffffffffff80, \n                                  in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, \n                                  in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, \n                                  in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, \n                                  in_stack_ffffffffffffffd0, noname_40, in_stack_ffffffffffffffe0, unaff_R12, unaff_RDI\n                                  , unaff_RSI, in_stack_00000000, in_stack_00000008, in_stack_00000010, unaff_RBX, \n                                  in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                                  in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                                  in_stack_00000060, in_stack_00000068, in_stack_00000070);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x100010458);\n                *0x100010488 = 0x800700b7;\n                goto code_r0x00010000387c;\n            }\n        }\ncode_r0x000100003769:\n        *0x10001048c = 0;\n        iVar2 = fcn.1000072e8(arg2);\n        if (iVar2 != 0) {\n            if (*0x10001141a == '\\0') {\n                iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(arg1, 0x100001788, 10);\n                if (iVar3 != 0) {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg1);\n                }\n                if (*0x10000f46c != 0) {\n                    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                }\n                if (((((*0x100011404 == 0) && (iVar2 = fcn.1000043b8(uVar4),  iVar2 != 0)) &&\n                     ((*0x100010490 == 1 || ((*0x100010490 == 2 || (*0x100010490 == 3)))))) &&\n                    ((*0x100010ec4 & 0x100) != 0)) &&\n                   (((*0x100011418 & 1) == 0 && (iVar2 = fcn.100001c80(),  iVar2 == 0)))) {\n                    fcn.100007c80(0x7d6, 0, 0x100001e54, 0x547);\n                }\n            }\n            else {\n                fcn.100002918(0x10001141a);\n            }\n            goto code_r0x00010000387c;\n        }\n        uVar4 = 0x520;\n    }\n    fcn.100005420(0, uVar4, 0, 0, CONCAT44(uVar5, 0x10), in_stack_fffffffffffffec4 << 0x20, in_stack_fffffffffffffec8, \n                  in_stack_fffffffffffffed0, in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, \n                  in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, \n                  in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, \n                  in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, \n                  in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, \n                  in_stack_ffffffffffffff48, in_stack_ffffffffffffff50, in_stack_ffffffffffffff58, \n                  in_stack_ffffffffffffff60, in_stack_ffffffffffffff68, in_stack_ffffffffffffff70, \n                  in_stack_ffffffffffffff78, in_stack_ffffffffffffff80, in_stack_ffffffffffffff88, \n                  in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, in_stack_ffffffffffffffa0, \n                  in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, in_stack_ffffffffffffffb8, \n                  in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, noname_40, \n                  in_stack_ffffffffffffffe0, unaff_R12, unaff_RDI, unaff_RSI, in_stack_00000000, in_stack_00000008, \n                  in_stack_00000010, unaff_RBX, in_stack_00000020, in_stack_00000028, in_stack_00000030, \n                  in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, \n                  in_stack_00000060, in_stack_00000068, in_stack_00000070);\ncode_r0x00010000387c:\n    fcn.10000c380(noname_40 ^ auStack360);\n    return;\n}\n",
        "token_count": 3435
    },
    "100003b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100003b1c(void)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    uchar auStack360 [32];\n    ulong *puStack328;\n    ulong auStack312 [2];\n    char acStack296 [272];\n    uint64_t uStack24;\n    \n    uStack24 = *0x10000f100 ^ auStack360;\n    puVar5 = *0x100010668;\n    while (puVar5 != NULL) {\n        if ((*0x100011404 == 0) && (*0x100010ec0 == 0)) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(*puVar5, 0x80);\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(*puVar5);\n        }\n        puVar1 = puVar5[1];\n        (*_sym.imp.KERNEL32.dll_LocalFree)(*puVar5);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(puVar5);\n        puVar5 = puVar1;\n    }\n    if (((*0x100011400 != 0) && (*0x100011404 == 0)) && (*0x100010ec0 == 0)) {\n        iVar4 = 0x104;\n        pcVar3 = acStack296;\n        do {\n            if ((iVar4 == -0x7ffffefa) || (pcVar3[0x100010670 - acStack296] == '\\0')) break;\n            *pcVar3 = pcVar3[0x100010670 - acStack296];\n            pcVar3 = pcVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        if (iVar4 == 0) {\n            pcVar3 = pcVar3 + -1;\n        }\n        *pcVar3 = '\\0';\n        if ((*0x100010ec4 & 0x20) != 0) {\n            fcn.100007e68(acStack296);\n        }\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x1000016d8);\n        fcn.100002918(acStack296);\n    }\n    if (((*0x100010490 != 1) && (*0x100011400 != 0)) && (*0x1000103f0 != '\\0')) {\n        puStack328 = auStack312;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0xffffffff80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x20006);\n        if (iVar2 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(auStack312[0], 0x1000103f0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(auStack312[0]);\n        }\n    }\n    *0x100011400 = 0;\n    fcn.10000c380(uStack24 ^ auStack360);\n    return;\n}\n",
        "token_count": 686
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "100004e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100004e24(ulong lpCommandLine, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    ulong var_170h;\n    uchar auStackY664 [32];\n    uint uVar5;\n    uint32_t in_stack_fffffffffffffd94;\n    ulong noname_6;\n    ulong noname_7;\n    uchar *noname_9;\n    uint32_t in_stack_fffffffffffffdb8;\n    uint in_stack_fffffffffffffdbc;\n    ulong noname_11;\n    ulong noname_12;\n    ulong noname_13;\n    ulong in_stack_fffffffffffffdd8;\n    ulong in_stack_fffffffffffffde0;\n    ulong in_stack_fffffffffffffde8;\n    ulong in_stack_fffffffffffffdf0;\n    ulong in_stack_fffffffffffffdf8;\n    ulong in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe10;\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    ulong in_stack_fffffffffffffe28;\n    ulong in_stack_fffffffffffffe30;\n    ulong in_stack_fffffffffffffe38;\n    ulong in_stack_fffffffffffffe40;\n    ulong in_stack_fffffffffffffe48;\n    ulong in_stack_fffffffffffffe50;\n    ulong in_stack_fffffffffffffe58;\n    ulong in_stack_fffffffffffffe60;\n    ulong in_stack_fffffffffffffe68;\n    ulong in_stack_fffffffffffffe70;\n    ulong in_stack_fffffffffffffe78;\n    ulong in_stack_fffffffffffffe80;\n    ulong in_stack_fffffffffffffe88;\n    ulong in_stack_fffffffffffffe90;\n    ulong in_stack_fffffffffffffe98;\n    ulong in_stack_fffffffffffffea0;\n    ulong in_stack_fffffffffffffea8;\n    ulong in_stack_fffffffffffffeb0;\n    ulong in_stack_fffffffffffffeb8;\n    ulong in_stack_fffffffffffffec0;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    \n    uVar4 = *0x10000f100 ^ auStackY664;\n    noname_11 = 0;\n    noname_12 = 0;\n    noname_13 = 0;\n    noname_9 = &stack0xfffffffffffffdc0;\n    noname_7 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0);\n    if (iVar1 == 0) {\n        *0x100010488 = fcn.100007924();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        noname_6 = 0;\n        uVar5 = &stack0xfffffffffffffdd8 >> 0x20;\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar3, 0);\n        fcn.100005420(0, 0x4c4, lpCommandLine, &stack0xfffffffffffffdd8, CONCAT44(uVar5, 0x10), \n                      in_stack_fffffffffffffd94 << 0x20, noname_6, noname_7, arg2, noname_9, \n                      CONCAT44(in_stack_fffffffffffffdbc, in_stack_fffffffffffffdb8), noname_11, noname_12, noname_13, \n                      in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, \n                      in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, \n                      in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, \n                      in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, in_stack_fffffffffffffe30, \n                      in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, \n                      in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, in_stack_fffffffffffffe60, \n                      in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, in_stack_fffffffffffffe78, \n                      in_stack_fffffffffffffe80, in_stack_fffffffffffffe88, in_stack_fffffffffffffe90, \n                      in_stack_fffffffffffffe98, in_stack_fffffffffffffea0, in_stack_fffffffffffffea8, \n                      in_stack_fffffffffffffeb0, in_stack_fffffffffffffeb8, in_stack_fffffffffffffec0, \n                      in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, in_stack_fffffffffffffed8, \n                      in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, \n                      in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, \n                      in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, \n                      in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, \n                      in_stack_ffffffffffffff40);\n        goto code_r0x000100004fde;\n    }\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(noname_11, 0xffffffff);\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(noname_11, &stack0xfffffffffffffdb8);\n    iVar1 = *0x1000105a4;\n    if ((((*0x100011408 == 0) && ((*0x100010ebc & 1) != 0)) && ((*0x100010ebc & 2) == 0)) &&\n       ((in_stack_fffffffffffffdb8 & 0xff000000) == 0xaa000000)) {\n        *0x100010ebc = in_stack_fffffffffffffdb8;\n    }\n    if ((*0x100010ec4 & 0x800) == 0) {\n        if (((*0x10001048c == 0) && (iVar2 = fcn.100002b98(*0x100010490),  iVar1 == iVar2)) &&\n           (((in_stack_fffffffffffffdb8 & 0xff000000) != 0xaa000000 || ((in_stack_fffffffffffffdb8 & 1) == 0)))) {\n            if ((*0x100010ec4 & 0x200) != 0) goto code_r0x000100004f02;\n        }\n        else {\n            *0x100010488 = 0xbc2;\n        }\n    }\n    else {\ncode_r0x000100004f02:\n        *0x100010488 = in_stack_fffffffffffffdb8;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(noname_12);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(noname_11);\ncode_r0x000100004fde:\n    fcn.10000c380(uVar4 ^ auStackY664);\n    return;\n}\n",
        "token_count": 1711
    },
    "1000058f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.1000058fc(char *arg1, ulong arg2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    int32_t iVar8;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int32_t iVar9;\n    ulong unaff_R12;\n    ulong unaff_R13;\n    ulong uVar10;\n    ulong in_stack_00000000;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    uint in_stack_ffffffffffffffcc;\n    uint32_t in_stack_ffffffffffffffd4;\n    ulong in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    \n    piVar4 = 0x100010f00;\n    iVar9 = 0;\n    do {\n        if (*piVar4 == 1) break;\n        piVar4 = piVar4 + 8;\n        iVar9 = iVar9 + 1;\n    } while (piVar4 < 0x100011400);\n    if (iVar9 == 0x28) {\n        fcn.100005420(*0x100010448, 0x4bb, 0, 0, CONCAT44(in_stack_ffffffffffffffcc, 0x10), \n                      in_stack_ffffffffffffffd4 << 0x20, in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, unaff_R13\n                      , unaff_R12, unaff_RDI, in_stack_00000000, unaff_RBX, unaff_RBP, unaff_RSI, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180);\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg1, 0x10000f428);\n        if (iVar3 != 0) {\n            if ((arg2 & 8) == 0) {\n                if (((arg2 & 2) != 0) || (uVar10 = 0x80000000,  (arg2 & 1) != 0)) {\n                    uVar10 = 0x40000000;\n                }\n                if ((arg2 >> 8 & 1) == 0) {\n                    iVar3 = (-((arg2 & 0x200) != 0) & 2) + 3;\n                }\n                else if ((arg2 >> 10 & 1) == 0) {\n                    iVar3 = (-((arg2 & 0x200) != 0) & 0xfffffffe) + 4;\n                }\n                else {\n                    iVar3 = 1;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg1, uVar10, 0, 0, iVar3, 0x80, 0);\n                if ((iVar7 == -1) && (iVar3 != 3)) {\n                    if (*arg1 != '\\0') {\n                        pcVar5 = arg1 + 1;\n                        iVar8 = 0;\n                        if ((*pcVar5 == ':') && (arg1[2] == '\\\\')) {\n                            pcVar5 = arg1 + 3;\n                            iVar8 = 0;\n                        }\n                        else if ((*arg1 == '\\\\') && (*pcVar5 == '\\\\')) {\n                            pcVar5 = arg1 + 2;\n                            iVar8 = 2;\n                        }\n                        cVar1 = *pcVar5;\n                        while (cVar1 != '\\0') {\n                            if ((*pcVar5 == '\\\\') && (pcVar5[-1] != ':')) {\n                                if (iVar8 == 0) {\n                                    *pcVar5 = '\\0';\n                                    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(arg1, 0);\n                                    *pcVar5 = '\\\\';\n                                }\n                                else {\n                                    iVar8 = iVar8 + -1;\n                                }\n                            }\n                            pcVar5 = (*_sym.imp.USER32.dll_CharNextA)(pcVar5);\n                            cVar1 = *pcVar5;\n                        }\n                    }\n                    iVar7 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg1, uVar10, 0, 0, iVar3, 0x80, 0);\n                }\n            }\n            else {\n                iVar7 = -1;\n            }\n            iVar6 = iVar9 * 0x20;\n            *(iVar6 + 0x100010f18) = iVar7;\n            if (iVar7 != -1) {\n                *(iVar6 + 0x100010f00) = 0;\n                *(iVar6 + 0x100010f04) = 0;\n                return iVar9;\n            }\n            return -1;\n        }\n        if (((((arg2 >> 8 & 1) == 0) && ((arg2 & 8) == 0)) && ((arg2 & 1) == 0)) && ((arg2 & 2) == 0)) {\n            iVar7 = iVar9 * 0x20;\n            *(iVar7 + 0x100010f00) = 0;\n            uVar10 = *0x1000105c0;\n            *(iVar7 + 0x100010f10) = 0;\n            *(iVar7 + 0x100010f08) = uVar10;\n            uVar2 = *0x1000105c8;\n            *(iVar7 + 0x100010f04) = 1;\n            *(iVar7 + 0x100010f14) = uVar2;\n            return iVar9;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 1997
    },
    "10000722": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.100007224(char *arg1, int32_t *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    \n    iVar6 = 0;\n    pcVar4 = arg1;\n    while( true ) {\n        cVar1 = *pcVar4;\n        if ((cVar1 == '\\0') ||\n           ((((cVar1 != ' ' && (cVar1 != '\\t')) && (cVar1 != '\\r')) &&\n            (((cVar1 != '\\n' && (cVar1 != '\\v')) && (cVar1 != '\\f')))))) break;\n        iVar6 = iVar6 + 1;\n        pcVar4 = pcVar4 + 1;\n    }\n    pcVar4 = arg1 + iVar6;\n    if (*pcVar4 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4);\n        iVar2 = iVar2 + -1;\n        iVar5 = iVar2;\n        if (-1 < iVar2) {\n            do {\n                cVar1 = pcVar4[iVar5];\n                if (((cVar1 != ' ') && (cVar1 != '\\t')) &&\n                   ((cVar1 != '\\r' && (((cVar1 != '\\n' && (cVar1 != '\\v')) && (cVar1 != '\\f')))))) break;\n                iVar2 = iVar2 + -1;\n                iVar5 = iVar5 + -1;\n            } while (-1 < iVar5);\n        }\n        *arg2 = iVar6;\n        uVar3 = 1;\n        arg1[iVar2 + iVar6 + 1] = '\\0';\n    }\n    return uVar3;\n}\n",
        "token_count": 410
    },
    "100007d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.100007d6c(int16_t *arg1)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t in_DX;\n    uint8_t uVar6;\n    bool bVar7;\n    \n    cVar1 = *arg1;\n    piVar5 = arg1;\n    while( true ) {\n        if (cVar1 == '\\0') {\n            return NULL;\n        }\n        iVar2 = *piVar5;\n        uVar6 = iVar2;\n        if (uVar6 == in_DX) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(arg1 & 0xffffffffffffff00 | uVar6);\n            if (iVar3 == 0) {\n                return piVar5;\n            }\n            bVar7 = iVar2 != in_DX;\n        }\n        else {\n            bVar7 = true;\n        }\n        if (!bVar7) break;\n        piVar4 = (*_sym.imp.USER32.dll_CharNextA)();\n        cVar1 = *piVar4;\n        arg1 = piVar5;\n        piVar5 = piVar4;\n    }\n    return piVar5;\n}\n",
        "token_count": 284
    },
    "100007ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.100007ef8(int16_t *arg1)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int16_t in_DX;\n    int16_t *piVar6;\n    uint8_t uVar7;\n    bool bVar8;\n    \n    piVar6 = NULL;\n    cVar1 = *arg1;\n    piVar3 = arg1;\n    do {\n        piVar5 = arg1;\n        if (cVar1 == '\\0') {\n            return piVar6;\n        }\n        iVar2 = *piVar5;\n        uVar7 = iVar2;\n        if (uVar7 == in_DX) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(piVar3 & 0xffffffffffffff00 | uVar7);\n            if (iVar4 != 0) {\n                bVar8 = iVar2 != in_DX;\n                goto code_r0x000100007f3d;\n            }\ncode_r0x000100007f41:\n            piVar6 = piVar5;\n        }\n        else {\n            bVar8 = true;\ncode_r0x000100007f3d:\n            if (!bVar8) goto code_r0x000100007f41;\n        }\n        arg1 = (*_sym.imp.USER32.dll_CharNextA)();\n        cVar1 = *arg1;\n        piVar3 = piVar5;\n    } while( true );\n}\n",
        "token_count": 341
    },
    "100007fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.100007fa8(void)\n\n{\n    ulong uVar1;\n    ushort auStack24 [2];\n    int32_t iStack20;\n    ulong uStack16;\n    \n    uVar1 = *0x100010ee0;\n    if (*0x10000f410 == -2) {\n        iStack20 = 0;\n        *0x10000f410 = 0;\n        auStack24[0] = 1;\n        uStack16 = 0x10;\n        (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(*0x100010ee0, 0x10, 1, 0x100007f74, auStack24);\n        if (iStack20 == 0) {\n            iStack20 = 0;\n            auStack24[0] = 0xd;\n            uStack16 = 0x10;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(uVar1, 0x10, 1, 0x100007f74, auStack24);\n            if (iStack20 == 0) {\n                return *0x10000f410;\n            }\n        }\n        *0x10000f410 = 1;\n    }\n    return *0x10000f410;\n}\n",
        "token_count": 283
    },
    "100008f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.100008f90(ulong *arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    arg1[0x104] = arg1 + 0x40f;\n    arg1[0x105] = arg1 + 0xa2;\n    arg1[0x106] = arg1 + 0x611;\n    arg1[0x107] = arg1[0xd];\n    *(arg1 + 0x84e) = *(arg1 + 0x17);\n    *(arg1 + 0x10a) = *(arg1 + 0xba);\n    iVar3 = (*arg1[9])(0);\n    if (iVar3 == -1) {\ncode_r0x000100008fee:\n        puVar1 = *arg1;\n        *puVar1 = 0xb;\n        puVar1[1] = 0;\n        puVar1[2] = 1;\n        uVar4 = 0;\n    }\n    else {\n        if (arg1[10] != 0) {\n            *(arg1 + 0x10b) = 0;\n            arg1[0x10c] = arg1[0xd];\n            arg1[0x10d] = arg1[0x12];\n            *(arg1 + 0x10e) = *(arg1 + 0x1f);\n            *(arg1 + 0x872) = *(arg1 + 0x17);\n            *(arg1 + 0x874) = *(arg1 + 0xba);\n            iVar2 = (*arg1[10])(arg1 + 0x10b);\n            if (iVar2 == -1) goto code_r0x000100008fee;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 416
    },
    "10000907": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.10000907c(ulong *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t uVar3;\n    \n    if (*(arg1 + 0xf4) != 0) {\n        return 1;\n    }\n    if ((arg2 & 0xfffe) == 0xfffe) {\n        arg2._0_4_ = *(arg1 + 0xb2) - 1;\n    }\n    if (*(arg1 + 0x1d) == arg2) {\n        return 1;\n    }\n    uVar3 = *(arg1 + 0x10a) & 0xf;\n    if ((*(arg1 + 0x10a) & 0xf) == 0) goto code_r0x000100009104;\n    if (uVar3 == 1) {\n        iVar1 = fcn.100007d54(arg1[0xc]);\ncode_r0x000100009146:\n        if (iVar1 == 0) {\ncode_r0x000100009104:\n            iVar1 = fcn.100009160(arg1, arg2);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.100008cbc(arg1);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(arg1 + 0x5c) = 0;\n            return 1;\n        }\n    }\n    else {\n        if (uVar3 == 2) {\n            iVar1 = fcn.100007d54(arg1[0xc]);\n            goto code_r0x000100009146;\n        }\n        if (uVar3 != 3) {\n            if (uVar3 == 0xf) goto code_r0x000100009104;\n            puVar2 = *arg1;\n            *puVar2 = 6;\n            goto code_r0x0001000090e0;\n        }\n        if (*arg1[0xc] == 0x4349444c) {\n            fcn.100009f28(*(arg1[0xc] + 0x12));\n            goto code_r0x000100009104;\n        }\n    }\n    puVar2 = *arg1;\n    *puVar2 = 7;\ncode_r0x0001000090e0:\n    puVar2[1] = 0;\n    puVar2[2] = 1;\n    return 0;\n}\n",
        "token_count": 548
    },
    "10000916": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.100009160(ulong *arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    *(arg1 + 0x1d) = arg2;\n    iVar3 = (*arg1[7])(arg1[0x1a], arg2 * *(arg1 + 0xfc) + *(arg1 + 0xb), 0);\n    if (((iVar3 == -1) || (iVar3 = (*arg1[4])(arg1[0x1a], arg1[0x10], *(arg1 + 0xfc)),  *(arg1 + 0xfc) != iVar3)) ||\n       (iVar3 = (*arg1[7])(arg1[0x1a], *arg1[0x10], 0),  iVar3 == -1)) {\n        puVar4 = *arg1;\n        *puVar4 = 4;\n    }\n    else {\n        iVar1 = arg1[0x10];\n        if ((*(iVar1 + 6) & 0xf) == 0xf) {\n            puVar4 = *arg1;\n            *puVar4 = 6;\n        }\n        else {\n            *(arg1 + 0x21) = *(iVar1 + 4);\n            iVar3 = fcn.100009688(*(iVar1 + 6), arg1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            if (arg1[10] == 0) {\n                return 1;\n            }\n            *(arg1 + 0x10b) = 1;\n            arg1[0x10c] = arg1[0xd];\n            iVar2 = *(arg1 + 0xfc) + -8;\n            *(arg1 + 0x10e) = iVar2;\n            if (iVar2 == 0) {\n                arg1[0x10d] = 0;\n            }\n            else {\n                arg1[0x10d] = arg1[0x10] + 8;\n            }\n            *(arg1 + 0x872) = arg2;\n            iVar3 = (*arg1[10])(arg1 + 0x10b);\n            if (iVar3 != -1) {\n                return 1;\n            }\n            puVar4 = *arg1;\n            *puVar4 = 0xb;\n        }\n    }\n    puVar4[1] = 0;\n    puVar4[2] = 1;\n    return 0;\n}\n",
        "token_count": 566
    },
    "10000a24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.10000a248(int64_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uint32_t uVar10;\n    int64_t *piVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    bool bVar18;\n    \n    uVar17 = 0;\n    if (0 < arg2) {\n        do {\n            if (*(arg1 + 0x2eec) == 1) {\n                if (*(arg1 + 0x5d9) != 0) {\n                    iVar6 = *(arg1 + 0x5d8);\n                    *(arg1 + 0x5d9) = 0;\n                    fcn.10000a05c(arg1, 1);\n                    if (iVar6 < 0) {\n                        uVar4 = *(arg1 + 0x2ec2);\n                        fcn.10000a05c(arg1, 0x10);\n                        uVar5 = *(arg1 + 0x2ec2);\n                        fcn.10000a05c(arg1, 0x10);\n                        *(arg1 + 0x2ed4) = CONCAT22(uVar4, uVar5);\n                    }\n                    else {\n                        *(arg1 + 0x2ed4) = 0;\n                    }\n                }\n                if (*(arg1 + 0x5dd) == 3) {\n                    if (((*(arg1 + 0x5dc) & 1) != 0) &&\n                       (arg1[0x561] = arg1[0x561] + 1,  arg1[0x562] <= arg1[0x561] + 4U)) break;\n                    *(arg1 + 0x5dd) = 0;\n                    fcn.10000a000(arg1);\n                }\n                uVar15 = *(arg1 + 0x5d8);\n                fcn.10000a05c(arg1, 3);\n                uVar1 = *(arg1 + 0x2ec3);\n                *(arg1 + 0x5dd) = uVar15 >> 0x1d;\n                fcn.10000a05c(arg1, 8);\n                uVar2 = *(arg1 + 0x2ec3);\n                fcn.10000a05c(arg1, 8);\n                uVar3 = *(arg1 + 0x2ec3);\n                fcn.10000a05c(arg1, 8);\n                iVar6 = (uVar2 + uVar1 * 0x100) * 0x100 + uVar3;\n                *(arg1 + 0x5dc) = iVar6;\n                *(arg1 + 0x2ee4) = iVar6;\n                if (*(arg1 + 0x5dd) == 2) {\n                    fcn.10000aba4(arg1);\n                }\n                iVar6 = *(arg1 + 0x5dd);\n                if ((iVar6 == 1) || (iVar6 == 2)) {\n                    uVar16 = *(arg1 + 0x2ec5) * 8 + 0x100;\n                    uVar15 = 0x2a0;\n                    if (uVar16 < 0x2a0) {\n                        uVar15 = uVar16;\n                    }\n                    sub.msvcrt.dll_memcpy(arg1 + 0x2b24, arg1 + 0xa1c, uVar15);\n                    sub.msvcrt.dll_memcpy(arg1 + 0x2dc4, arg1 + 0xcbc, 0xf9);\n                    iVar6 = fcn.10000a7f4(arg1, 0x100, arg1 + 0x2b24, arg1 + 0xa1c);\n                    if (iVar6 != 0) {\n                        iVar13 = arg1 + 0x2c24;\n                        iVar6 = fcn.10000a7f4(arg1, *(arg1 + 0x2ec5) << 3, iVar13, arg1 + 0xb1c);\n                        if (iVar6 != 0) {\n                            uVar15 = *(arg1 + 0x2ec5) * 8 + 0x100;\n                            uVar8 = 0x2a0;\n                            if (uVar15 < 0x2a0) {\n                                uVar8 = uVar15;\n                            }\n                            iVar6 = fcn.10000bd74(uVar8, arg1 + 0xa1c, CONCAT71(iVar13 >> 8, 10), arg1 + 0x1c);\n                            if (iVar6 != 0) {\n                                iVar13 = arg1 + 0x2dc4;\n                                iVar6 = fcn.10000a7f4(arg1, 0xf9, iVar13, arg1 + 0xcbc);\n                                if (iVar6 != 0) {\n                                    fcn.10000bd74(0xf9, arg1 + 0xcbc, CONCAT71(iVar13 >> 8, 8), arg1 + 0x81c);\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if ((iVar6 != 3) || (arg1[0x561] = arg1[0x561] + -2,  arg1[0x562] <= arg1[0x561] + 4U)) {\n                        return 0xffffffff;\n                    }\n                    piVar11 = arg1 + 2;\n                    iVar13 = 3;\n                    do {\n                        *piVar11 = *arg1[0x561];\n                        arg1[0x561] = arg1[0x561] + 4;\n                        piVar11 = piVar11 + 4;\n                        iVar13 = iVar13 + -1;\n                    } while (iVar13 != 0);\n                }\n                *(arg1 + 0x2eec) = 2;\n            }\n            for (; (0 < *(arg1 + 0x2ee4) && (0 < arg2)); arg2._0_4_ = arg2 - iVar6) {\n                iVar6 = arg2;\n                if (*(arg1 + 0x2ee4) < arg2) {\n                    iVar6 = *(arg1 + 0x2ee4);\n                }\n                if (iVar6 == 0) {\n                    return 0xffffffff;\n                }\n                uVar15 = *(arg1 + 0x5da);\n                uVar8 = uVar15;\n                iVar14 = *(arg1 + 0x5dd);\n                uVar16 = uVar15 + iVar6;\n                if ((uVar16 < uVar15) || (*(arg1 + 1) < uVar16)) {\ncode_r0x00010000a5d7:\n                    iVar14 = -1;\ncode_r0x00010000a5da:\n                    bVar18 = iVar14 == 0;\n                }\n                else {\n                    if (iVar14 != 2) {\n                        if (iVar14 == 1) {\n                            if (uVar15 < 0x101) {\n                                uVar16 = fcn.10000b664(arg1, uVar15);\n                                if (uVar16 < uVar15) goto code_r0x00010000a5d7;\n                                *(arg1 + 0x5da) = uVar16;\n                                uVar8 = uVar16;\n                                iVar14 = (uVar15 - uVar16) + iVar6;\n                                bVar18 = iVar14 == 0;\n                                if (iVar14 < 1) goto code_r0x00010000a5dd;\n                            }\n                            iVar14 = fcn.10000b9ec(arg1, uVar8 & 0xffffffff);\n                        }\n                        else {\n                            if (iVar14 != 3) goto code_r0x00010000a5d7;\n                            puVar9 = arg1[0x561];\n                            for (uVar12 = uVar8; uVar12 < uVar16; uVar12 = uVar12 + 1) {\n                                if ((arg1[0x562] <= puVar9) || (*(arg1 + 1) + 0x105 <= uVar15))\n                                goto code_r0x00010000a5d7;\n                                uVar15 = uVar15 + 1;\n                                *(uVar12 + *arg1) = *puVar9;\n                                puVar9 = puVar9 + 1;\n                            }\n                            arg1[0x561] = puVar9;\n                            uVar7 = uVar16;\n                            if (0x101 < uVar16) {\n                                uVar7 = 0x101;\n                            }\n                            while (uVar10 = uVar8,  uVar10 < uVar7) {\n                                *(uVar10 + *(arg1 + 1) + *arg1) = *((uVar8 & 0xffffffff) + *arg1);\n                                uVar8 = uVar10 + 1;\n                            }\n                            iVar14 = uVar15 - uVar16;\n                            *(arg1 + 0x5da) = *(arg1 + 0xc) & uVar15;\n                        }\n                        goto code_r0x00010000a5da;\n                    }\n                    if (0x100 < uVar15) {\ncode_r0x00010000a671:\n                        iVar14 = fcn.10000b210(arg1, uVar8 & 0xffffffff);\n                        goto code_r0x00010000a5da;\n                    }\n                    uVar16 = fcn.10000adb0(arg1, uVar15);\n                    if (uVar16 == 0xffffffff) {\n                        *(arg1 + 0x2ecc) = 1;\n                        goto code_r0x00010000a5d7;\n                    }\n                    *(arg1 + 0x5da) = uVar16;\n                    uVar8 = uVar16;\n                    iVar14 = (uVar15 - uVar16) + iVar6;\n                    bVar18 = iVar14 == 0;\n                    if (0 < iVar14) goto code_r0x00010000a671;\n                }\ncode_r0x00010000a5dd:\n                if (!bVar18) {\n                    return 0xffffffff;\n                }\n                *(arg1 + 0x2ee4) = *(arg1 + 0x2ee4) - iVar6;\n                uVar17 = uVar17 + iVar6;\n            }\n            if (*(arg1 + 0x2ee4) == 0) {\n                *(arg1 + 0x2eec) = 1;\n            }\n            if (arg1[0x562] <= arg1[0x561] + 4U) break;\n            if (arg2 == 0) {\n                fcn.10000a000(arg1);\n            }\n        } while (0 < arg2);\n    }\n    if (*(arg1 + 0x5da) == 0) {\n        uVar8 = *(arg1 + 1) - uVar17;\n    }\n    else {\n        uVar8 = *(arg1 + 0x5da) - uVar17;\n    }\n    uVar15 = 0x9800;\n    if (uVar17 < 0x9800) {\n        uVar15 = uVar17;\n    }\n    if (((arg1[0x563] != 0) && (sub.msvcrt.dll_memcpy(arg1[0x563], uVar8 + *arg1),  *(arg1 + 0x2ed4) != 0)) &&\n       (*(arg1 + 0x2edc) < 0x8000)) {\n        fcn.10000a11c(arg1, arg1[0x563], uVar15);\n    }\n    return uVar17;\n}\n",
        "token_count": 2680
    },
    "10000adb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.10000adb0(int64_t *arg1, ulong arg2)\n\n{\n    uchar uVar1;\n    uint16_t *puVar2;\n    int64_t iVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint16_t *puVar7;\n    char cVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    int32_t in_R8D;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    \n    cVar8 = *(arg1 + 0x2ec4);\n    uVar9 = *(arg1 + 0x5d8);\n    puVar7 = arg1[0x561];\n    puVar2 = arg1[0x562];\n    iVar3 = *arg1;\n    uVar16 = arg2;\n    uVar17 = uVar16;\njoined_r0x00010000adfe:\n    do {\n        if (arg2 + in_R8D <= uVar17) {\n            *(arg1 + 0x2ec4) = cVar8;\n            *(arg1 + 0x5d8) = uVar9;\n            arg1[0x561] = puVar7;\n            return uVar16 & 0xffffffff;\n        }\n        if (uVar9 >> 0x16 < 0x400) {\n            iVar11 = *(arg1 + (uVar9 >> 0x16) * 2 + 0x1c);\n        }\n        else {\n            *(arg1 + 0x2ecc) = 1;\n            iVar11 = 0;\n        }\n        if (iVar11 < 0) {\n            uVar5 = 0x200000;\n            do {\n                if ((uVar9 & uVar5) == 0) {\n                    if (0xa7f < iVar11 * -2) goto code_r0x00010000ae77;\n                    iVar11 = *(arg1 + -iVar11 * 4 + 0xe40);\n                }\n                else if (iVar11 * -2 + 1U < 0xa80) {\n                    iVar11 = *(arg1 + -iVar11 * 4 + 0xe42);\n                }\n                else {\ncode_r0x00010000ae77:\n                    *(arg1 + 0x2ecc) = 1;\n                    iVar11 = 0;\n                }\n                uVar5 = uVar5 >> 1;\n            } while (iVar11 < 0);\n        }\n        if ((*(arg1 + 0x2ecc) != 0) || (puVar2 <= puVar7)) {\n            return 0xffffffff;\n        }\n        uVar10 = *(iVar11 + 0xa1c + arg1);\n        cVar8 = cVar8 - uVar10;\n        uVar9 = uVar9 << (uVar10 & 0x1f);\n        if (cVar8 < '\\x01') {\n            uVar4 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar9 = uVar9 | uVar4 << (-cVar8 & 0x1fU);\n            cVar8 = cVar8 + '\\x10';\n        }\n        uVar5 = iVar11 - 0x100;\n        if (-1 < uVar5) {\n            uVar13 = uVar5 & 7;\n            if (uVar13 == 7) {\n                if (uVar9 >> 0x18 < 0x100) {\n                    iVar11 = *(arg1 + (uVar9 >> 0x18) * 2 + 0x81c);\n                }\n                else {\n                    *(arg1 + 0x2ecc) = 1;\n                    iVar11 = 0;\n                }\n                if (iVar11 < 0) {\n                    uVar13 = 0x800000;\n                    do {\n                        if ((uVar9 & uVar13) == 0) {\n                            if (0x3e3 < iVar11 * -2) goto code_r0x00010000af7b;\n                            iVar11 = *(arg1 + -iVar11 * 4 + 0x2340);\n                        }\n                        else if (iVar11 * -2 + 1U < 0x3e4) {\n                            iVar11 = *(arg1 + -iVar11 * 4 + 0x2342);\n                        }\n                        else {\ncode_r0x00010000af7b:\n                            *(arg1 + 0x2ecc) = 1;\n                            iVar11 = 0;\n                        }\n                        uVar13 = uVar13 >> 1;\n                    } while (iVar11 < 0);\n                }\n                if (*(arg1 + 0x2ecc) == 0) {\n                    if (puVar2 <= puVar7) {\n                        return 0xffffffff;\n                    }\n                    uVar10 = *(iVar11 + 0xcbc + arg1);\n                    cVar8 = cVar8 - uVar10;\n                    uVar9 = uVar9 << (uVar10 & 0x1f);\n                    if (cVar8 < '\\x01') {\n                        uVar4 = *puVar7;\n                        puVar7 = puVar7 + 1;\n                        uVar9 = uVar9 | uVar4 << (-cVar8 & 0x1fU);\n                        cVar8 = cVar8 + '\\x10';\n                    }\n                }\n                uVar13 = iVar11 + 7;\n                if (*(arg1 + 0x2ecc) != 0) {\n                    return 0xffffffff;\n                }\n            }\n            uVar10 = uVar5 >> 3;\n            if (uVar10 < '\\x03') {\n                iVar11 = *(arg1 + uVar10 * 4 + 0x10);\n                if (uVar10 != 0) {\n                    *(arg1 + uVar10 * 4 + 0x10) = *(arg1 + 2);\n                    goto code_r0x00010000b182;\n                }\n            }\n            else {\n                if (0x32 < uVar10) {\n                    return 0xffffffff;\n                }\n                iVar6 = uVar10;\n                uVar10 = *(iVar6 + 0x1000018e0);\n                if (uVar10 < 3) {\n                    if (uVar10 == 0) {\n                        iVar11 = 1;\n                    }\n                    else {\n                        uVar5 = uVar9 >> (0x20 - uVar10 & 0x1f);\n                        if (puVar2 <= puVar7) {\n                            return 0xffffffff;\n                        }\n                        cVar8 = cVar8 - uVar10;\n                        uVar9 = uVar9 << (uVar10 & 0x1f);\n                        if (cVar8 < '\\x01') {\n                            uVar4 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uVar9 = uVar9 | uVar4 << (-cVar8 & 0x1fU);\n                            cVar8 = cVar8 + '\\x10';\n                        }\n                        iVar11 = uVar5 + *(iVar6 * 4 + 0x100001920);\n                    }\n                }\n                else {\n                    if (uVar10 - 3 == 0) {\n                        uVar5 = 0;\n                    }\n                    else {\n                        uVar5 = uVar9 >> (0x23 - uVar10 & 0x1f);\n                        if (puVar2 <= puVar7) {\n                            return 0xffffffff;\n                        }\n                        uVar9 = uVar9 << (uVar10 - 3 & 0x1f);\n                        cVar8 = cVar8 + ('\\x03' - uVar10);\n                        if (cVar8 < '\\x01') {\n                            uVar4 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uVar9 = uVar9 | uVar4 << (-cVar8 & 0x1fU);\n                            cVar8 = cVar8 + '\\x10';\n                        }\n                    }\n                    iVar11 = *(iVar6 * 4 + 0x100001920);\n                    if (uVar9 >> 0x19 < 0x80) {\n                        uVar12 = *((uVar9 >> 0x19) + 0xdb8 + arg1);\n                        if (puVar2 <= puVar7) {\n                            return 0xffffffff;\n                        }\n                        uVar10 = *(uVar12 + 0xe38 + arg1);\n                        cVar8 = cVar8 - uVar10;\n                        uVar9 = uVar9 << (uVar10 & 0x1f);\n                        if (cVar8 < '\\x01') {\n                            uVar4 = *puVar7;\n                            puVar7 = puVar7 + 1;\n                            uVar9 = uVar9 | uVar4 << (-cVar8 & 0x1fU);\n                            cVar8 = cVar8 + '\\x10';\n                        }\n                    }\n                    else {\n                        uVar12 = 0;\n                        *(arg1 + 0x2ecc) = 1;\n                    }\n                    iVar11 = iVar11 + uVar5 * 8 + uVar12;\n                }\n                *(arg1 + 3) = *(arg1 + 0x14);\n                *(arg1 + 0x14) = *(arg1 + 2);\ncode_r0x00010000b182:\n                *(arg1 + 2) = iVar11;\n            }\n            iVar14 = uVar13 + 2;\n            do {\n                iVar15 = uVar16;\n                uVar1 = *((iVar15 - iVar11 & *(arg1 + 0xc)) + iVar3);\n                *(uVar17 + iVar3) = uVar1;\n                if (uVar17 < 0x101) {\n                    *(*(arg1 + 1) + iVar15 + iVar3) = uVar1;\n                }\n                iVar14 = iVar14 + -1;\n                uVar16 = iVar15 + 1;\n                uVar17 = uVar17 + 1;\n            } while (0 < iVar14);\n            goto joined_r0x00010000adfe;\n        }\n        *(uVar17 + iVar3) = uVar5;\n        iVar11 = uVar16;\n        uVar16 = iVar11 + 1;\n        uVar17 = uVar17 + 1;\n        *(*(arg1 + 1) + iVar11 + iVar3) = uVar5;\n    } while( true );\n}\n",
        "token_count": 2363
    },
    "10000b21": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.10000b210(int64_t *arg1, ulong arg2)\n\n{\n    uint16_t *puVar1;\n    int64_t iVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int64_t iVar6;\n    char cVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    int32_t in_R8D;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint16_t *puVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    \n    cVar7 = *(arg1 + 0x2ec4);\n    uVar9 = *(arg1 + 0x5d8);\n    puVar15 = arg1[0x561];\n    puVar1 = arg1[0x562];\n    uVar8 = arg2;\n    iVar2 = *arg1;\n    iVar17 = arg2 + in_R8D;\n    uVar16 = uVar8;\n    if (uVar8 < iVar17) {\n        do {\n            if (uVar9 >> 0x16 < 0x400) {\n                iVar11 = *(arg1 + (uVar9 >> 0x16) * 2 + 0x1c);\n            }\n            else {\n                *(arg1 + 0x2ecc) = 1;\n                iVar11 = 0;\n            }\n            if (iVar11 < 0) {\n                uVar4 = 0x200000;\n                do {\n                    if ((uVar9 & uVar4) == 0) {\n                        if (0xa7f < iVar11 * -2) goto code_r0x00010000b2d2;\n                        iVar11 = *(arg1 + -iVar11 * 4 + 0xe40);\n                    }\n                    else if (iVar11 * -2 + 1U < 0xa80) {\n                        iVar11 = *(arg1 + -iVar11 * 4 + 0xe42);\n                    }\n                    else {\ncode_r0x00010000b2d2:\n                        *(arg1 + 0x2ecc) = 1;\n                        iVar11 = 0;\n                    }\n                    uVar4 = uVar4 >> 1;\n                } while (iVar11 < 0);\n            }\n            if (*(arg1 + 0x2ecc) == 0) {\n                if (puVar1 <= puVar15) {\n                    return -1;\n                }\n                uVar10 = *(iVar11 + 0xa1c + arg1);\n                cVar7 = cVar7 - uVar10;\n                uVar9 = uVar9 << (uVar10 & 0x1f);\n                if (cVar7 < '\\x01') {\n                    uVar3 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    uVar9 = uVar9 | uVar3 << (-cVar7 & 0x1fU);\n                    cVar7 = cVar7 + '\\x10';\n                }\n            }\n            uVar4 = iVar11 - 0x100;\n            if (uVar4 < 0) {\n                *(uVar16 + iVar2) = uVar4;\n                uVar8 = uVar8 + 1;\n                uVar16 = uVar16 + 1;\n            }\n            else {\n                uVar13 = uVar4 & 7;\n                if (uVar13 == 7) {\n                    if (uVar9 >> 0x18 < 0x100) {\n                        iVar11 = *(arg1 + (uVar9 >> 0x18) * 2 + 0x81c);\n                    }\n                    else {\n                        *(arg1 + 0x2ecc) = 1;\n                        iVar11 = 0;\n                    }\n                    if (iVar11 < 0) {\n                        uVar13 = 0x800000;\n                        do {\n                            if ((uVar9 & uVar13) == 0) {\n                                if (0x3e3 < iVar11 * -2) goto code_r0x00010000b3c7;\n                                iVar11 = *(arg1 + -iVar11 * 4 + 0x2340);\n                            }\n                            else if (iVar11 * -2 + 1U < 0x3e4) {\n                                iVar11 = *(arg1 + -iVar11 * 4 + 0x2342);\n                            }\n                            else {\ncode_r0x00010000b3c7:\n                                *(arg1 + 0x2ecc) = 1;\n                                iVar11 = 0;\n                            }\n                            uVar13 = uVar13 >> 1;\n                        } while (iVar11 < 0);\n                    }\n                    if (*(arg1 + 0x2ecc) == 0) {\n                        if (puVar1 <= puVar15) {\n                            return -1;\n                        }\n                        uVar10 = *(iVar11 + 0xcbc + arg1);\n                        cVar7 = cVar7 - uVar10;\n                        uVar9 = uVar9 << (uVar10 & 0x1f);\n                        if (cVar7 < '\\x01') {\n                            uVar3 = *puVar15;\n                            puVar15 = puVar15 + 1;\n                            uVar9 = uVar9 | uVar3 << (-cVar7 & 0x1fU);\n                            cVar7 = cVar7 + '\\x10';\n                        }\n                    }\n                    uVar13 = iVar11 + 7;\n                    if (*(arg1 + 0x2ecc) != 0) {\n                        return -1;\n                    }\n                }\n                uVar10 = uVar4 >> 3;\n                if (uVar10 < '\\x03') {\n                    iVar11 = *(arg1 + uVar10 * 4 + 0x10);\n                    if (uVar10 != 0) {\n                        *(arg1 + uVar10 * 4 + 0x10) = *(arg1 + 2);\n                        goto code_r0x00010000b5d6;\n                    }\n                }\n                else {\n                    if (0x32 < uVar10) {\n                        return -1;\n                    }\n                    iVar6 = uVar10;\n                    uVar10 = *(iVar6 + 0x1000018e0);\n                    if (uVar10 < 3) {\n                        if (uVar10 == 0) {\n                            iVar11 = *(iVar6 * 4 + 0x100001920);\n                        }\n                        else {\n                            uVar4 = uVar9 >> (0x20 - uVar10 & 0x1f);\n                            if (puVar1 <= puVar15) {\n                                return -1;\n                            }\n                            cVar7 = cVar7 - uVar10;\n                            uVar9 = uVar9 << (uVar10 & 0x1f);\n                            if (cVar7 < '\\x01') {\n                                uVar3 = *puVar15;\n                                puVar15 = puVar15 + 1;\n                                uVar9 = uVar9 | uVar3 << (-cVar7 & 0x1fU);\n                                cVar7 = cVar7 + '\\x10';\n                            }\n                            iVar11 = uVar4 + *(iVar6 * 4 + 0x100001920);\n                        }\n                    }\n                    else {\n                        if (uVar10 - 3 == 0) {\n                            uVar4 = 0;\n                        }\n                        else {\n                            uVar4 = uVar9 >> (0x23 - uVar10 & 0x1f);\n                            if (puVar1 <= puVar15) {\n                                return -1;\n                            }\n                            uVar9 = uVar9 << (uVar10 - 3 & 0x1f);\n                            cVar7 = cVar7 + ('\\x03' - uVar10);\n                            if (cVar7 < '\\x01') {\n                                uVar3 = *puVar15;\n                                puVar15 = puVar15 + 1;\n                                uVar9 = uVar9 | uVar3 << (-cVar7 & 0x1fU);\n                                cVar7 = cVar7 + '\\x10';\n                            }\n                        }\n                        iVar11 = *(iVar6 * 4 + 0x100001920);\n                        if (uVar9 >> 0x19 < 0x80) {\n                            uVar12 = *((uVar9 >> 0x19) + 0xdb8 + arg1);\n                            if (puVar1 <= puVar15) {\n                                return -1;\n                            }\n                            uVar10 = *(uVar12 + 0xe38 + arg1);\n                            cVar7 = cVar7 - uVar10;\n                            uVar9 = uVar9 << (uVar10 & 0x1f);\n                            if (cVar7 < '\\x01') {\n                                uVar3 = *puVar15;\n                                puVar15 = puVar15 + 1;\n                                uVar9 = uVar9 | uVar3 << (-cVar7 & 0x1fU);\n                                cVar7 = cVar7 + '\\x10';\n                            }\n                        }\n                        else {\n                            uVar12 = 0;\n                            *(arg1 + 0x2ecc) = 1;\n                        }\n                        iVar11 = iVar11 + uVar4 * 8 + uVar12;\n                    }\n                    *(arg1 + 3) = *(arg1 + 0x14);\n                    *(arg1 + 0x14) = *(arg1 + 2);\ncode_r0x00010000b5d6:\n                    *(arg1 + 2) = iVar11;\n                }\n                iVar14 = uVar13 + 2;\n                puVar5 = (uVar8 - iVar11 & *(arg1 + 0xc)) + iVar2;\n                do {\n                    iVar14 = iVar14 + -1;\n                    uVar8 = uVar8 + 1;\n                    *(uVar16 + iVar2) = *puVar5;\n                    uVar16 = uVar16 + 1;\n                    puVar5 = puVar5 + 1;\n                } while (0 < iVar14);\n            }\n            arg2._0_4_ = uVar8;\n        } while (uVar16 < iVar17);\n    }\n    *(arg1 + 0x2ec4) = cVar7;\n    *(arg1 + 0x5d8) = uVar9;\n    arg1[0x561] = puVar15;\n    *(arg1 + 0x5da) = *(arg1 + 0xc) & arg2;\n    return arg2 - iVar17;\n}\n",
        "token_count": 2355
    },
    "10000b66": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.10000b664(int64_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    char cVar10;\n    char cVar11;\n    uint8_t uVar12;\n    int32_t in_R8D;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    \n    cVar10 = *(arg1 + 0x2ec4);\n    uVar5 = *(arg1 + 0x5d8);\n    puVar8 = arg1[0x561];\n    puVar2 = arg1[0x562];\n    uVar7 = arg2;\n    uVar16 = uVar7;\njoined_r0x00010000b6ae:\n    do {\n        if (arg2 + in_R8D <= uVar16) {\n            *(arg1 + 0x2ec4) = cVar10;\n            *(arg1 + 0x5d8) = uVar5;\n            arg1[0x561] = puVar8;\n            return uVar7 & 0xffffffff;\n        }\n        if (uVar5 >> 0x16 < 0x400) {\n            iVar13 = *(arg1 + (uVar5 >> 0x16) * 2 + 0x1c);\n        }\n        else {\n            *(arg1 + 0x2ecc) = 1;\n            iVar13 = 0;\n        }\n        if (iVar13 < 0) {\n            uVar4 = 0x200000;\n            do {\n                if ((uVar5 & uVar4) == 0) {\n                    if (0xa7f < iVar13 * -2) goto code_r0x00010000b729;\n                    iVar13 = *(arg1 + -iVar13 * 4 + 0xe40);\n                }\n                else if (iVar13 * -2 + 1U < 0xa80) {\n                    iVar13 = *(arg1 + -iVar13 * 4 + 0xe42);\n                }\n                else {\ncode_r0x00010000b729:\n                    *(arg1 + 0x2ecc) = 1;\n                    iVar13 = 0;\n                }\n                uVar4 = uVar4 >> 1;\n            } while (iVar13 < 0);\n        }\n        if (*(arg1 + 0x2ecc) == 0) {\n            if (puVar2 <= puVar8) {\n                return 0xffffffff;\n            }\n            uVar12 = *(iVar13 + 0xa1c + arg1);\n            cVar10 = cVar10 - uVar12;\n            uVar5 = uVar5 << (uVar12 & 0x1f);\n            if (cVar10 < '\\x01') {\n                uVar3 = *puVar8;\n                puVar8 = puVar8 + 1;\n                uVar5 = uVar5 | uVar3 << (-cVar10 & 0x1fU);\n                cVar10 = cVar10 + '\\x10';\n            }\n        }\n        uVar4 = iVar13 - 0x100;\n        if (-1 < uVar4) {\n            uVar14 = uVar4 & 7;\n            if (uVar14 == 7) {\n                if (uVar5 >> 0x18 < 0x100) {\n                    iVar13 = *(arg1 + (uVar5 >> 0x18) * 2 + 0x81c);\n                }\n                else {\n                    *(arg1 + 0x2ecc) = 1;\n                    iVar13 = 0;\n                }\n                if (iVar13 < 0) {\n                    uVar14 = 0x800000;\n                    do {\n                        if ((uVar5 & uVar14) == 0) {\n                            if (0x3e3 < iVar13 * -2) goto code_r0x00010000b824;\n                            iVar13 = *(arg1 + -iVar13 * 4 + 0x2340);\n                        }\n                        else if (iVar13 * -2 + 1U < 0x3e4) {\n                            iVar13 = *(arg1 + -iVar13 * 4 + 0x2342);\n                        }\n                        else {\ncode_r0x00010000b824:\n                            *(arg1 + 0x2ecc) = 1;\n                            iVar13 = 0;\n                        }\n                        uVar14 = uVar14 >> 1;\n                    } while (iVar13 < 0);\n                }\n                if (*(arg1 + 0x2ecc) == 0) {\n                    if (puVar2 <= puVar8) {\n                        return 0xffffffff;\n                    }\n                    uVar12 = *(iVar13 + 0xcbc + arg1);\n                    cVar10 = cVar10 - uVar12;\n                    uVar5 = uVar5 << (uVar12 & 0x1f);\n                    if (cVar10 < '\\x01') {\n                        uVar3 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                        uVar5 = uVar5 | uVar3 << (-cVar10 & 0x1fU);\n                        cVar10 = cVar10 + '\\x10';\n                    }\n                }\n                uVar14 = iVar13 + 7;\n                if (*(arg1 + 0x2ecc) != 0) {\n                    return 0xffffffff;\n                }\n            }\n            uVar12 = uVar4 >> 3;\n            if (uVar12 < '\\x03') {\n                iVar13 = *(arg1 + uVar12 * 4 + 0x10);\n                if (uVar12 != 0) {\n                    *(arg1 + uVar12 * 4 + 0x10) = *(arg1 + 2);\n                    goto code_r0x00010000b957;\n                }\n            }\n            else {\n                if (uVar12 < '\\x04') {\n                    iVar13 = 1;\n                }\n                else {\n                    if (0x32 < uVar12) {\n                        return 0xffffffff;\n                    }\n                    uVar1 = *(uVar12 + 0x1000018e0);\n                    cVar11 = cVar10 - uVar1;\n                    uVar4 = uVar5 >> (0x20 - uVar1 & 0x1f);\n                    uVar5 = uVar5 << (uVar1 & 0x1f);\n                    puVar9 = puVar8;\n                    cVar10 = cVar11;\n                    if (cVar11 < '\\x01') {\n                        cVar10 = cVar11 + '\\x10';\n                        puVar9 = puVar8 + 1;\n                        uVar5 = uVar5 | *puVar8 << (-cVar11 & 0x1fU);\n                        if (cVar10 < '\\x01') {\n                            uVar3 = *puVar9;\n                            puVar9 = puVar8 + 2;\n                            uVar5 = uVar5 | uVar3 << (-cVar10 & 0x1fU);\n                            cVar10 = cVar11 + ' ';\n                        }\n                    }\n                    iVar13 = uVar4 + *(uVar12 * 4 + 0x100001920);\n                    puVar8 = puVar9;\n                }\n                *(arg1 + 3) = *(arg1 + 0x14);\n                *(arg1 + 0x14) = *(arg1 + 2);\ncode_r0x00010000b957:\n                *(arg1 + 2) = iVar13;\n            }\n            iVar15 = uVar14 + 2;\n            do {\n                iVar6 = uVar7;\n                *(*arg1 + uVar16) = *((iVar6 - iVar13 & *(arg1 + 0xc)) + *arg1);\n                if (uVar16 < 0x101) {\n                    *(*(arg1 + 1) + iVar6 + *arg1) = *(*arg1 + uVar16);\n                }\n                iVar15 = iVar15 + -1;\n                uVar7 = iVar6 + 1;\n                uVar16 = uVar16 + 1;\n            } while (0 < iVar15);\n            goto joined_r0x00010000b6ae;\n        }\n        *(uVar16 + *arg1) = uVar4;\n        iVar13 = uVar7;\n        uVar7 = iVar13 + 1;\n        uVar16 = uVar16 + 1;\n        *(*(arg1 + 1) + iVar13 + *arg1) = uVar4;\n    } while( true );\n}\n",
        "token_count": 1958
    },
    "10000b9e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.10000b9ec(int64_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    char cVar8;\n    char cVar9;\n    uint64_t uVar10;\n    uint8_t uVar11;\n    int32_t in_R8D;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    \n    cVar8 = *(arg1 + 0x2ec4);\n    uVar5 = *(arg1 + 0x5d8);\n    puVar6 = arg1[0x561];\n    puVar2 = arg1[0x562];\n    uVar10 = arg2;\n    iVar17 = arg2 + in_R8D;\n    uVar16 = uVar10;\n    do {\n        if (iVar17 <= uVar16) {\n            *(arg1 + 0x2ec4) = cVar8;\n            *(arg1 + 0x5d8) = uVar5;\n            arg1[0x561] = puVar6;\n            *(arg1 + 0x5da) = *(arg1 + 0xc) & arg2;\n            return arg2 - iVar17;\n        }\n        if (uVar5 >> 0x16 < 0x400) {\n            iVar12 = *(arg1 + (uVar5 >> 0x16) * 2 + 0x1c);\n        }\n        else {\n            *(arg1 + 0x2ecc) = 1;\n            iVar12 = 0;\n        }\n        if (iVar12 < 0) {\n            uVar4 = 0x200000;\n            do {\n                if ((uVar5 & uVar4) == 0) {\n                    if (0xa7f < iVar12 * -2) goto code_r0x00010000baae;\n                    iVar12 = *(arg1 + -iVar12 * 4 + 0xe40);\n                }\n                else if (iVar12 * -2 + 1U < 0xa80) {\n                    iVar12 = *(arg1 + -iVar12 * 4 + 0xe42);\n                }\n                else {\ncode_r0x00010000baae:\n                    *(arg1 + 0x2ecc) = 1;\n                    iVar12 = 0;\n                }\n                uVar4 = uVar4 >> 1;\n            } while (iVar12 < 0);\n        }\n        if ((*(arg1 + 0x2ecc) != 0) || (puVar2 <= puVar6)) {\n            return -1;\n        }\n        uVar11 = *(iVar12 + 0xa1c + arg1);\n        cVar8 = cVar8 - uVar11;\n        uVar5 = uVar5 << (uVar11 & 0x1f);\n        if (cVar8 < '\\x01') {\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            uVar5 = uVar5 | uVar3 << (-cVar8 & 0x1fU);\n            cVar8 = cVar8 + '\\x10';\n        }\n        uVar4 = iVar12 - 0x100;\n        if (uVar4 < 0) {\n            uVar10 = uVar10 + 1;\n            *(uVar16 + *arg1) = uVar4;\n            uVar16 = uVar16 + 1;\n        }\n        else {\n            uVar14 = uVar4 & 7;\n            if (uVar14 == 7) {\n                if (uVar5 >> 0x18 < 0x100) {\n                    iVar12 = *(arg1 + (uVar5 >> 0x18) * 2 + 0x81c);\n                }\n                else {\n                    *(arg1 + 0x2ecc) = 1;\n                    iVar12 = 0;\n                }\n                if (iVar12 < 0) {\n                    uVar14 = 0x800000;\n                    do {\n                        if ((uVar5 & uVar14) == 0) {\n                            if (0x3e3 < iVar12 * -2) goto code_r0x00010000bba8;\n                            iVar12 = *(arg1 + -iVar12 * 4 + 0x2340);\n                        }\n                        else if (iVar12 * -2 + 1U < 0x3e4) {\n                            iVar12 = *(arg1 + -iVar12 * 4 + 0x2342);\n                        }\n                        else {\ncode_r0x00010000bba8:\n                            *(arg1 + 0x2ecc) = 1;\n                            iVar12 = 0;\n                        }\n                        uVar14 = uVar14 >> 1;\n                    } while (iVar12 < 0);\n                }\n                if (*(arg1 + 0x2ecc) == 0) {\n                    if (puVar2 <= puVar6) {\n                        return -1;\n                    }\n                    uVar11 = *(iVar12 + 0xcbc + arg1);\n                    cVar8 = cVar8 - uVar11;\n                    uVar5 = uVar5 << (uVar11 & 0x1f);\n                    if (cVar8 < '\\x01') {\n                        uVar3 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        uVar5 = uVar5 | uVar3 << (-cVar8 & 0x1fU);\n                        cVar8 = cVar8 + '\\x10';\n                    }\n                }\n                uVar14 = iVar12 + 7;\n                if (*(arg1 + 0x2ecc) != 0) {\n                    return -1;\n                }\n            }\n            uVar11 = uVar4 >> 3;\n            if (uVar11 < '\\x03') {\n                iVar12 = *(arg1 + uVar11 * 4 + 0x10);\n                if (uVar11 != 0) {\n                    *(arg1 + uVar11 * 4 + 0x10) = *(arg1 + 2);\n                    goto code_r0x00010000bce5;\n                }\n            }\n            else {\n                if (uVar11 < '\\x04') {\n                    iVar12 = 1;\n                }\n                else {\n                    if (0x32 < uVar11) {\n                        return -1;\n                    }\n                    uVar1 = *(uVar11 + 0x1000018e0);\n                    cVar9 = cVar8 - uVar1;\n                    uVar4 = uVar5 >> (0x20 - uVar1 & 0x1f);\n                    uVar5 = uVar5 << (uVar1 & 0x1f);\n                    puVar7 = puVar6;\n                    cVar8 = cVar9;\n                    if (cVar9 < '\\x01') {\n                        cVar8 = cVar9 + '\\x10';\n                        puVar7 = puVar6 + 1;\n                        uVar5 = uVar5 | *puVar6 << (-cVar9 & 0x1fU);\n                        if (cVar8 < '\\x01') {\n                            uVar3 = *puVar7;\n                            puVar7 = puVar6 + 2;\n                            uVar5 = uVar5 | uVar3 << (-cVar8 & 0x1fU);\n                            cVar8 = cVar9 + ' ';\n                        }\n                    }\n                    iVar12 = uVar4 + *(uVar11 * 4 + 0x100001920);\n                    puVar6 = puVar7;\n                }\n                *(arg1 + 3) = *(arg1 + 0x14);\n                *(arg1 + 0x14) = *(arg1 + 2);\ncode_r0x00010000bce5:\n                *(arg1 + 2) = iVar12;\n            }\n            iVar15 = uVar14 + 2;\n            uVar4 = uVar10 - iVar12 & *(arg1 + 0xc);\n            do {\n                uVar13 = uVar4;\n                iVar15 = iVar15 + -1;\n                uVar10 = uVar10 + 1;\n                uVar4 = uVar4 + 1;\n                *(*arg1 + uVar16) = *(uVar13 + *arg1);\n                uVar16 = uVar16 + 1;\n            } while (0 < iVar15);\n        }\n        arg2._0_4_ = uVar10;\n    } while( true );\n}\n",
        "token_count": 1941
    },
    "10000c38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.10000c380(int64_t arg1)\n\n{\n    ulong uVar1;\n    ulong in_stack_00000000;\n    int64_t aiStackX8 [4];\n    uchar auStack72 [8];\n    uchar auStack64 [8];\n    int64_t iStack56;\n    ulong uStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    \n    if ((arg1 == *0x10000f100) && (arg1 >> 0x30 == 0)) {\n        return;\n    }\n    aiStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RtlCaptureContext)(0x10000f800);\n    uStack48 = *0x10000f8f8;\n    iStack56 = sub.KERNEL32.dll_RtlLookupFunctionEntry(*0x10000f8f8, &uStack40, 0);\n    if (iStack56 == 0) {\n        *0x10000f898 = aiStackX8;\n        *0x10000f8f8 = in_stack_00000000;\n    }\n    else {\n        sub.KERNEL32.dll_RtlVirtualUnwind(0, uStack40, uStack48, iStack56, 0x10000f800, auStack72, auStack64, 0);\n    }\n    *0x10000f770 = *0x10000f8f8;\n    *0x10000f880 = aiStackX8[0];\n    *0x10000f760 = 0xc0000409;\n    *0x10000f764 = 1;\n    iStack32 = *0x10000f100;\n    uStack24 = *0x10000f108;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x100001598);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1, 0xc0000409);\n    return;\n}\n",
        "token_count": 473
    },
    "100002b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.100002b98(uint16_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong var_10h;\n    ulong hKey;\n    \n    if (param_1 == 0) {\n        uVar2 = fcn.100002ae4();\n        return uVar2;\n    }\n    if (param_1 == 1) {\n        var_10h._0_4_ = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0xffffffff80000002, \n                           \"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\FileRenameOperations\", 0, 0x20019, \n                           &hKey);\n        if (iVar1 != 0) {\n            return var_10h;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyA)(hKey, 0, 0, 0, 0, 0, 0, &var_10h, 0, 0, 0, 0);\n    }\n    else {\n        if (1 < param_1 - 2) {\n            return 0;\n        }\n        var_10h._0_4_ = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0xffffffff80000002, \"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\", 0, 0x20019, &hKey)\n        ;\n        if (iVar1 != 0) {\n            return var_10h;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, \"PendingFileRenameOperations\", 0, 0, 0, &var_10h);\n    }\n    if (iVar1 != 0) {\n        var_10h._0_4_ = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return var_10h;\n}\n",
        "token_count": 455
    },
    "100002d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100002d10(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t noname_8;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    uchar auStack88 [32];\n    uint in_stack_ffffffffffffffcc;\n    uint32_t in_stack_ffffffffffffffd4;\n    ulong in_stack_ffffffffffffffd8;\n    ulong in_stack_ffffffffffffffe0;\n    ulong in_stack_fffffffffffffff0;\n    \n    noname_8 = *0x10000f100 ^ auStack88;\n    *0x100010488 = 0x70;\n    if (arg1 == 1) {\n        fcn.100001b10(&stack0xffffffffffffffd8, 10, 0x1000016ec, arg3 + noname_1);\n        fcn.100005420(0, 0x4fa, &stack0xffffffffffffffd8, 0, CONCAT44(in_stack_ffffffffffffffcc, 0x10), \n                      in_stack_ffffffffffffffd4 << 0x20, in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, noname_8\n                      , in_stack_fffffffffffffff0, unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, \n                      in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                      in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                      in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                      in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                      in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                      in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                      in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                      in_stack_00000180);\n    }\n    else if (arg1 == 4) {\n        fcn.100001b10(&stack0xffffffffffffffd8, 10, 0x1000016ec, arg3 + noname_1);\n        fcn.100005420(0, 0x4bd, &stack0xffffffffffffffd8, 0, CONCAT44(in_stack_ffffffffffffffcc, 0x20), \n                      CONCAT44(in_stack_ffffffffffffffd4, 5), in_stack_ffffffffffffffd8, in_stack_ffffffffffffffe0, \n                      noname_8, in_stack_fffffffffffffff0, unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, \n                      in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                      in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                      in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                      in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                      in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                      in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                      in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                      in_stack_00000180);\n    }\n    else if (arg1 == 2) {\n        fcn.100001b10(&stack0xffffffffffffffd8, 10, 0x1000016ec, arg3);\n        iVar1 = fcn.100005420(0, 0x4cc, &stack0xffffffffffffffd8, arg4, CONCAT44(in_stack_ffffffffffffffcc, 0x40), \n                              CONCAT44(in_stack_ffffffffffffffd4, 0x104), in_stack_ffffffffffffffd8, \n                              in_stack_ffffffffffffffe0, noname_8, in_stack_fffffffffffffff0, unaff_RDI, \n                              in_stack_00000000, unaff_RBX, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                              in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                              in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                              in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, \n                              in_stack_00000088, in_stack_00000090, in_stack_00000098, in_stack_000000a0, \n                              in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                              in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, \n                              in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                              in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, \n                              in_stack_00000128, in_stack_00000130, in_stack_00000138, in_stack_00000140, \n                              in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                              in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180);\n        if (iVar1 == 6) {\n            *0x100010488 = 0;\n        }\n    }\n    fcn.10000c380(noname_8 ^ auStack88);\n    return;\n}\n",
        "token_count": 2176
    },
    "100005ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.100005ca8(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    arg1 = arg1 * 0x20;\n    if (*(arg1 + 0x100010f04) == 1) {\n        uVar2 = 0;\n        *(arg1 + 0x100010f00) = 1;\n        *(arg1 + 0x100010f08) = 0;\n        *(arg1 + 0x100010f10) = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(arg1 + 0x100010f18));\n        uVar2 = 0;\n        if (iVar1 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            *(arg1 + 0x100010f00) = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "100005dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.100005dcc(ulong arg1, int64_t lpString)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    int64_t iVar6;\n    ulong var_50h;\n    uchar auStack376 [32];\n    ulong uStack344;\n    uchar auStack328 [8];\n    uchar auStack320 [8];\n    uchar auStack312 [272];\n    uint64_t uStack40;\n    \n    uStack40 = *0x10000f100 ^ auStack376;\n    if (*0x10001065c == 0) {\n        if (arg1 == 0) {\n            fcn.100006088(lpString);\n        }\n        else if (arg1 != 1) {\n            if (arg1 == 2) {\n                if (*0x100010448 != 0) {\n                    (*_sym.imp.USER32.dll_SetDlgItemTextA)(*0x100010448, 0x837, *(lpString + 8));\n                }\n                uVar1 = *(lpString + 8);\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                if ((iVar2 + 1 + iVar3 < 0x104) && (iVar2 = fcn.100005730(auStack312, 0x100010670, uVar1),  iVar2 != 0))\n                {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(auStack312);\n                    if ((uVar4 != 0xffffffff) && ((~(uVar4 >> 4) & 1) != 0)) {\n                        if ((*0x100010660 == 0) && ((*0x100011418 & 1) == 0)) {\n                            *0x100010890 = auStack312;\n                            uStack344 = 6;\n                            iVar6 = fcn.100007c80(0x7d3, *0x100010448, 0x10000409c, 0);\n                            if (iVar6 != 6) {\n                                if (iVar6 == 7) goto code_r0x00010000605e;\n                                if (iVar6 == 0x839) {\n                                    *0x100010660 = 1;\n                                }\n                            }\n                        }\n                        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(auStack312, 0x80);\n                    }\n                    iVar6 = fcn.1000058fc(auStack312, 0x8302);\n                    if ((iVar6 != -1) && (iVar2 = fcn.1000057e8(auStack312),  iVar2 != 0)) {\n                        *0x100010880 = *0x100010880 + 1;\n                    }\n                }\n            }\n            else if (arg1 == 3) {\n                uVar1 = *(lpString + 8);\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                if ((((iVar2 + 1 + iVar3 < 0x104) &&\n                     (iVar2 = fcn.100005730(auStack312, 0x100010670, uVar1),  iVar2 != 0)) &&\n                    (iVar6 = *(lpString + 0x28) * 0x20,  *(iVar6 + 0x100010f04) != 1)) &&\n                   (((iVar2 = (*_sym.imp.KERNEL32.dll_DosDateTimeToFileTime)\n                                        (*(lpString + 0x30), *(lpString + 0x32), auStack320),  iVar2 != 0 &&\n                     (iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(auStack320, auStack328),  iVar2 != 0)) &&\n                    (iVar2 = (*_sym.imp.KERNEL32.dll_SetFileTime)\n                                       (*(iVar6 + 0x100010f18), auStack328, auStack328, auStack328),  iVar2 != 0)))) {\n                    fcn.100005ca8(*(lpString + 0x28));\n                    if (*(lpString + 0x34) == 0) {\n                        uVar5 = 0x80;\n                    }\n                    else {\n                        uVar5 = *(lpString + 0x34) & 0x27;\n                    }\n                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(auStack312, uVar5);\n                }\n            }\n        }\n    }\n    else if (arg1 == 3) {\n        fcn.100005ca8(*(lpString + 0x28));\n    }\ncode_r0x00010000605e:\n    fcn.10000c380(uStack40 ^ auStack376);\n    return;\n}\n",
        "token_count": 1084
    },
    "100002e3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.100002e34(ulong *arg1, char *arg2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    ulong var_50h;\n    uchar auStack392 [32];\n    ulong *puStack360;\n    uint *puStack352;\n    int32_t iStack344;\n    uint uStack340;\n    ulong uStack336;\n    char acStack328 [272];\n    uint64_t uStack56;\n    \n    uStack56 = *0x10000f100 ^ auStack392;\n    bVar1 = false;\n    *arg1 = '\\0';\n    if (*arg2 == '#') {\n        cVar2 = (*_sym.imp.USER32.dll_CharUpperA)(arg2[1]);\n        uVar4 = (*_sym.imp.USER32.dll_CharNextA)(arg2 + 1);\n        arg2 = (*_sym.imp.USER32.dll_CharNextA)(uVar4);\n        if (cVar2 == 'S') goto code_r0x000100002feb;\n        if (cVar2 != 'W') {\n            uStack340 = 0x104;\n            iVar7 = 0x104;\n            pcVar5 = acStack328;\n            do {\n                if ((iVar7 == -0x7ffffefa) || (pcVar5[0x1000016f0 - acStack328] == '\\0')) break;\n                *pcVar5 = pcVar5[0x1000016f0 - acStack328];\n                pcVar5 = pcVar5 + 1;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            if (iVar7 == 0) {\n                pcVar5 = pcVar5 + -1;\n            }\n            *pcVar5 = '\\0';\n            fcn.100007ddc(acStack328, 0x104, arg2);\n            puStack360 = &uStack336;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0xffffffff80000002, acStack328, 0, 0x20019);\n            if (iVar3 != 0) goto code_r0x000100002ffa;\n            puStack352 = &uStack340;\n            puStack360 = arg1;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack336, 0x100001609, 0, &iStack344);\n            if (iVar3 == 0) {\n                if ((iStack344 == 2) &&\n                   (iVar3 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(arg1, acStack328, 0x104),  iVar3 != 0)) {\n                    iVar7 = 0x104;\n                    puVar6 = arg1;\n                    do {\n                        if ((iVar7 == -0x7ffffefa) || ((acStack328 + -arg1)[puVar6] == '\\0')) break;\n                        *puVar6 = (acStack328 + -arg1)[puVar6];\n                        puVar6 = puVar6 + 1;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                    if (iVar7 == 0) {\n                        puVar6 = puVar6 + -1;\n                    }\n                    *puVar6 = '\\0';\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                    if (iStack344 == 1) {\n                        bVar1 = true;\n                    }\n                }\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack336);\n            goto code_r0x000100002ff6;\n        }\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg1, 0x104);\n    }\n    else {\ncode_r0x000100002feb:\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg1, 0x104);\ncode_r0x000100002ff6:\n        if (bVar1) goto code_r0x00010000300a;\n    }\ncode_r0x000100002ffa:\n    fcn.100007ddc(arg1, 0x104, arg2);\ncode_r0x00010000300a:\n    fcn.10000c380(uStack56 ^ auStack392);\n    return;\n}\n",
        "token_count": 983
    },
    "1000043b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1000043b8(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int16_t iVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    ulong arg3;\n    int64_t iVar10;\n    int64_t iVar11;\n    bool bVar12;\n    uchar auStackY552 [32];\n    uint uVar13;\n    uint in_stack_fffffffffffffdfc;\n    uint32_t in_stack_fffffffffffffe04;\n    uint32_t in_stack_fffffffffffffe08;\n    uint in_stack_fffffffffffffe0c;\n    ulong in_stack_fffffffffffffe10;\n    uint uVar14;\n    uint32_t in_stack_fffffffffffffe1c;\n    uint32_t in_stack_fffffffffffffe20;\n    uint16_t in_stack_fffffffffffffe24;\n    ushort in_stack_fffffffffffffe26;\n    int32_t in_stack_fffffffffffffe28;\n    uint in_stack_fffffffffffffe2c;\n    ulong in_stack_fffffffffffffe30;\n    ulong in_stack_fffffffffffffe38;\n    ulong in_stack_fffffffffffffe40;\n    ulong in_stack_fffffffffffffe48;\n    ulong in_stack_fffffffffffffe50;\n    ulong in_stack_fffffffffffffe58;\n    ulong in_stack_fffffffffffffe60;\n    ulong in_stack_fffffffffffffe68;\n    ulong in_stack_fffffffffffffe70;\n    ulong in_stack_fffffffffffffe78;\n    ulong in_stack_fffffffffffffe80;\n    ulong in_stack_fffffffffffffe88;\n    ulong in_stack_fffffffffffffe90;\n    ulong in_stack_fffffffffffffe98;\n    ulong in_stack_fffffffffffffea0;\n    ulong in_stack_fffffffffffffea8;\n    ulong in_stack_fffffffffffffeb0;\n    ulong in_stack_fffffffffffffeb8;\n    ulong in_stack_fffffffffffffec0;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    ulong in_stack_ffffffffffffff48;\n    ulong in_stack_ffffffffffffff50;\n    ulong in_stack_ffffffffffffff58;\n    ulong in_stack_ffffffffffffff60;\n    ulong in_stack_ffffffffffffff68;\n    ulong in_stack_ffffffffffffff70;\n    ulong in_stack_ffffffffffffff78;\n    ulong in_stack_ffffffffffffff80;\n    ulong in_stack_ffffffffffffff88;\n    ulong in_stack_ffffffffffffff90;\n    ulong in_stack_ffffffffffffff98;\n    ulong in_stack_ffffffffffffffa0;\n    ulong in_stack_ffffffffffffffa8;\n    ulong in_stack_ffffffffffffffb0;\n    \n    uVar4 = *0x10000f100 ^ auStackY552;\n    pcVar8 = NULL;\n    uVar14 = 0x94;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if (iVar2 == 0) {\n        uVar7 = 0x4b4;\ncode_r0x000100004433:\n        pcVar6 = NULL;\n        uVar13 = 0x10;\n        arg3 = 0;\ncode_r0x000100004696:\n        fcn.100005420(0, uVar7, arg3, pcVar6, CONCAT44(in_stack_fffffffffffffdfc, uVar13), \n                      in_stack_fffffffffffffe04 << 0x20, CONCAT44(in_stack_fffffffffffffe0c, in_stack_fffffffffffffe08)\n                      , in_stack_fffffffffffffe10, CONCAT44(in_stack_fffffffffffffe1c, uVar14), \n                      CONCAT26(in_stack_fffffffffffffe26, CONCAT24(in_stack_fffffffffffffe24, in_stack_fffffffffffffe20)\n                              ), CONCAT44(in_stack_fffffffffffffe2c, in_stack_fffffffffffffe28), \n                      in_stack_fffffffffffffe30, in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, \n                      in_stack_fffffffffffffe48, in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, \n                      in_stack_fffffffffffffe60, in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, \n                      in_stack_fffffffffffffe78, in_stack_fffffffffffffe80, in_stack_fffffffffffffe88, \n                      in_stack_fffffffffffffe90, in_stack_fffffffffffffe98, in_stack_fffffffffffffea0, \n                      in_stack_fffffffffffffea8, in_stack_fffffffffffffeb0, in_stack_fffffffffffffeb8, \n                      in_stack_fffffffffffffec0, in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, \n                      in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, \n                      in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, \n                      in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, \n                      in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, \n                      in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, \n                      in_stack_ffffffffffffff50, in_stack_ffffffffffffff58, in_stack_ffffffffffffff60, \n                      in_stack_ffffffffffffff68, in_stack_ffffffffffffff70, in_stack_ffffffffffffff78, \n                      in_stack_ffffffffffffff80, in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, \n                      in_stack_ffffffffffffff98, in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, \n                      in_stack_ffffffffffffffb0);\n        goto code_r0x00010000469f;\n    }\n    if (in_stack_fffffffffffffe28 == 1) {\n        iVar5 = 0;\n        *0x100010490 = 0;\n        *0x10000f46c = 1;\n        *0x10000f48c = 1;\n    }\n    else {\n        if (in_stack_fffffffffffffe28 != 2) {\n            uVar7 = 0x4ca;\n            goto code_r0x000100004433;\n        }\n        iVar5 = 2;\n        *0x100010490 = 2;\n        *0x10000f46c = 1;\n        *0x10000f48c = 1;\n        if (in_stack_fffffffffffffe1c < 4) {\n            *0x100010490 = 1;\n            if ((in_stack_fffffffffffffe1c < 3) ||\n               ((iVar5 = 1,  in_stack_fffffffffffffe1c == 3 && (iVar5 = 1,  in_stack_fffffffffffffe20 < 0x33)))) {\n                *0x10000f46c = 0;\n                *0x10000f48c = 0;\n                iVar5 = 1;\n            }\n        }\n        else if (4 < in_stack_fffffffffffffe1c) {\n            iVar5 = 3;\n            *0x100010490 = 3;\n        }\n    }\n    if ((*0x100011414 != 0) || (arg1 == 0)) goto code_r0x00010000469f;\n    iVar11 = arg1 + 0x40;\n    if (iVar5 != 0) {\n        iVar11 = arg1 + 4;\n    }\n    in_stack_fffffffffffffe08 = 0;\n    pcVar6 = pcVar8;\n    do {\n        uVar9 = pcVar6;\n        iVar10 = uVar9;\n        puVar1 = iVar11 + iVar10 * 0x18;\n        bVar12 = in_stack_fffffffffffffe1c < *puVar1;\n        if (bVar12) {\ncode_r0x000100004503:\n            uVar7 = 0xffffffff;\n        }\n        else if (bVar12 || in_stack_fffffffffffffe1c == *puVar1) {\n            puVar1 = iVar11 + 4 + iVar10 * 0x18;\n            bVar12 = in_stack_fffffffffffffe20 < *puVar1;\n            if (bVar12) goto code_r0x000100004503;\n            uVar7 = !bVar12 && in_stack_fffffffffffffe20 != *puVar1;\n        }\n        else {\n            uVar7 = 1;\n        }\n        puVar1 = iVar11 + 0xc + iVar10 * 0x18;\n        bVar12 = in_stack_fffffffffffffe1c < *puVar1;\n        if (bVar12) {\ncode_r0x000100004522:\n            uVar3 = 0xffffffff;\n        }\n        else if (bVar12 || in_stack_fffffffffffffe1c == *puVar1) {\n            puVar1 = iVar11 + 0x10 + iVar10 * 0x18;\n            bVar12 = in_stack_fffffffffffffe20 < *puVar1;\n            if (bVar12) goto code_r0x000100004522;\n            uVar3 = !bVar12 && in_stack_fffffffffffffe20 != *puVar1;\n        }\n        else {\n            uVar3 = 1;\n        }\n        if ((uVar7 < 0) || (0 < uVar3)) {\n            if (uVar9 == 1) goto code_r0x00010000457b;\n        }\n        else {\n            if (uVar7 == 0) {\n                if (uVar3 == 0) {\n                    if (*(iVar11 + 8 + iVar10 * 0x18) <= in_stack_fffffffffffffe24) goto code_r0x000100004570;\n                }\n                else if (*(iVar11 + 8 + iVar10 * 0x18) <= in_stack_fffffffffffffe24) break;\n            }\n            else {\n                if (uVar3 != 0) break;\ncode_r0x000100004570:\n                puVar1 = iVar11 + 0x14 + iVar10 * 0x18;\n                if (in_stack_fffffffffffffe24 < *puVar1 || in_stack_fffffffffffffe24 == *puVar1) break;\n            }\n            if (uVar9 != 0) {\ncode_r0x00010000457b:\n                uVar7 = 0x54c;\n                goto code_r0x000100004580;\n            }\n        }\n        in_stack_fffffffffffffe08 = uVar9 + 1;\n        pcVar6 = in_stack_fffffffffffffe08;\n    } while (in_stack_fffffffffffffe08 < 2);\n    uVar9 = in_stack_fffffffffffffe08;\n    if ((*(arg1 + 0x7c) == 0) ||\n       (iVar2 = fcn.100003038(arg1, &stack0xfffffffffffffeb8, &stack0xfffffffffffffe08),  iVar2 != 0))\n    goto code_r0x00010000469f;\n    uVar7 = 0x54d;\n    in_stack_fffffffffffffe08 = uVar9;\ncode_r0x000100004580:\n    pcVar6 = pcVar8;\n    if (uVar7 == 0x54d) {\n        pcVar6 = &stack0xfffffffffffffeb8;\n        iVar11 = *(arg1 + 0x80) + 0x84 + uVar9 * 0x3c + arg1;\n    }\n    uVar9 = 0;\n    if (iVar11 != 0) {\n        pcVar8 = *(iVar11 + 0x34) + 0x84 + arg1;\n        if ((*(iVar11 + 0x30) & 1) == 0) {\n            uVar9 = -((*(iVar11 + 0x30) & 2) != 0) & 0x101;\n        }\n        else {\n            uVar9 = 0x104;\n        }\n    }\n    if (((*0x100011418 & 1) != 0) || (*pcVar8 == '\\0')) {\n        arg3 = 0x1000105d8;\n        uVar13 = 0x30;\n        goto code_r0x000100004696;\n    }\n    (*_sym.imp.USER32.dll_MessageBeep)(0);\n    iVar2 = fcn.10000806c();\n    if (iVar2 == 0) {\ncode_r0x00010000464e:\n        uVar7 = 0;\n    }\n    else {\n        iVar2 = fcn.100007fa8();\n        uVar7 = 0x180000;\n        if (iVar2 == 0) goto code_r0x00010000464e;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxA)(0, pcVar8, 0x1000105d8, uVar7 | uVar9 | 0x30);\ncode_r0x00010000469f:\n    fcn.10000c380(uVar4 ^ auStackY552);\n    return;\n}\n",
        "token_count": 3022
    },
    "10000480": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.10000480c(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    ulong lpName;\n    char *pcVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar auStackY1416 [32];\n    ulong in_stack_fffffffffffffa98;\n    uint uVar10;\n    uint64_t in_stack_fffffffffffffaa0;\n    int64_t in_stack_fffffffffffffaa8;\n    int32_t in_stack_fffffffffffffab0;\n    int32_t in_stack_fffffffffffffab4;\n    ulong in_stack_fffffffffffffab8;\n    ulong in_stack_fffffffffffffac0;\n    int64_t in_stack_fffffffffffffac8;\n    ulong in_stack_fffffffffffffad0;\n    uchar *in_stack_fffffffffffffad8;\n    int16_t in_stack_fffffffffffffae0;\n    ushort in_stack_fffffffffffffae2;\n    uint32_t in_stack_fffffffffffffae4;\n    uint in_stack_fffffffffffffae8;\n    uint in_stack_fffffffffffffaec;\n    ulong in_stack_fffffffffffffaf0;\n    uint in_stack_fffffffffffffaf8;\n    uint in_stack_fffffffffffffafc;\n    ulong in_stack_fffffffffffffb00;\n    ulong in_stack_fffffffffffffb08;\n    ulong in_stack_fffffffffffffb10;\n    ulong in_stack_fffffffffffffb18;\n    ulong in_stack_fffffffffffffb20;\n    ulong in_stack_fffffffffffffb28;\n    uint in_stack_fffffffffffffb30;\n    uint in_stack_fffffffffffffb34;\n    ushort in_stack_fffffffffffffb38;\n    unkbyte6 in_stack_fffffffffffffb3a;\n    ulong in_stack_fffffffffffffb40;\n    ulong in_stack_fffffffffffffb48;\n    ulong in_stack_fffffffffffffb50;\n    ulong in_stack_fffffffffffffb58;\n    ulong in_stack_fffffffffffffb60;\n    ulong in_stack_fffffffffffffb68;\n    ulong in_stack_fffffffffffffb70;\n    ulong in_stack_fffffffffffffb78;\n    ulong in_stack_fffffffffffffb80;\n    ulong in_stack_fffffffffffffb88;\n    ulong in_stack_fffffffffffffb90;\n    ulong in_stack_fffffffffffffb98;\n    ulong in_stack_fffffffffffffba0;\n    ulong in_stack_fffffffffffffba8;\n    ulong in_stack_fffffffffffffbb0;\n    ulong in_stack_fffffffffffffbb8;\n    ulong in_stack_fffffffffffffbc0;\n    ulong in_stack_fffffffffffffbc8;\n    ulong in_stack_fffffffffffffbd0;\n    ulong in_stack_fffffffffffffbd8;\n    ulong in_stack_fffffffffffffbe0;\n    ulong in_stack_fffffffffffffbe8;\n    ulong in_stack_fffffffffffffbf0;\n    ulong in_stack_fffffffffffffbf8;\n    ulong in_stack_fffffffffffffc00;\n    ulong in_stack_fffffffffffffc08;\n    ulong in_stack_fffffffffffffc10;\n    ulong in_stack_fffffffffffffc18;\n    ulong in_stack_fffffffffffffc20;\n    ulong in_stack_fffffffffffffc28;\n    ulong in_stack_fffffffffffffc30;\n    ulong in_stack_fffffffffffffc38;\n    ulong in_stack_fffffffffffffc40;\n    ulong in_stack_fffffffffffffc48;\n    ulong in_stack_fffffffffffffc50;\n    uchar uStack904;\n    uchar auStack903 [271];\n    uchar auStack632 [576];\n    uint64_t uStack56;\n    \n    uStack56 = *0x10000f100 ^ auStackY1416;\n    uVar7 = 0;\n    *0x100010488 = 0;\n    uVar8 = uVar7;\n    uVar9 = uVar7;\n    if (*0x100011408 == 0) {\n        uVar1 = fcn.100005680(0x1000017b8, 0x100010ebc, 4);\n        uVar10 = in_stack_fffffffffffffa98 >> 0x20;\n        if ((uVar1 == 0) || (4 < uVar1)) {\ncode_r0x000100004881:\n            fcn.100005420(0, 0x4b1, 0, 0, CONCAT44(uVar10, 0x10), in_stack_fffffffffffffaa0 & 0xffffffff00000000, \n                          in_stack_fffffffffffffaa8, CONCAT44(in_stack_fffffffffffffab4, in_stack_fffffffffffffab0), \n                          in_stack_fffffffffffffab8, in_stack_fffffffffffffac0, in_stack_fffffffffffffac8, \n                          in_stack_fffffffffffffad0, in_stack_fffffffffffffad8, \n                          CONCAT44(in_stack_fffffffffffffae4, \n                                   CONCAT22(in_stack_fffffffffffffae2, in_stack_fffffffffffffae0)), \n                          CONCAT44(in_stack_fffffffffffffaec, in_stack_fffffffffffffae8), in_stack_fffffffffffffaf0, \n                          CONCAT44(in_stack_fffffffffffffafc, in_stack_fffffffffffffaf8), in_stack_fffffffffffffb00, \n                          in_stack_fffffffffffffb08, in_stack_fffffffffffffb10, in_stack_fffffffffffffb18, \n                          in_stack_fffffffffffffb20, in_stack_fffffffffffffb28, \n                          CONCAT44(in_stack_fffffffffffffb34, in_stack_fffffffffffffb30), \n                          CONCAT62(in_stack_fffffffffffffb3a, in_stack_fffffffffffffb38), in_stack_fffffffffffffb40, \n                          in_stack_fffffffffffffb48, in_stack_fffffffffffffb50, in_stack_fffffffffffffb58, \n                          in_stack_fffffffffffffb60, in_stack_fffffffffffffb68, in_stack_fffffffffffffb70, \n                          in_stack_fffffffffffffb78, in_stack_fffffffffffffb80, in_stack_fffffffffffffb88, \n                          in_stack_fffffffffffffb90, in_stack_fffffffffffffb98, in_stack_fffffffffffffba0, \n                          in_stack_fffffffffffffba8, in_stack_fffffffffffffbb0, in_stack_fffffffffffffbb8, \n                          in_stack_fffffffffffffbc0, in_stack_fffffffffffffbc8, in_stack_fffffffffffffbd0, \n                          in_stack_fffffffffffffbd8, in_stack_fffffffffffffbe0, in_stack_fffffffffffffbe8, \n                          in_stack_fffffffffffffbf0, in_stack_fffffffffffffbf8, in_stack_fffffffffffffc00, \n                          in_stack_fffffffffffffc08, in_stack_fffffffffffffc10, in_stack_fffffffffffffc18, \n                          in_stack_fffffffffffffc20, in_stack_fffffffffffffc28, in_stack_fffffffffffffc30, \n                          in_stack_fffffffffffffc38, in_stack_fffffffffffffc40, in_stack_fffffffffffffc48, \n                          in_stack_fffffffffffffc50);\n            *0x100010488 = -0x7ff8f8ec;\n            goto code_r0x000100004d55;\n        }\n    }\n    do {\n        in_stack_fffffffffffffab0 = 0;\n        sub.msvcrt.dll_memset(&stack0xfffffffffffffaf8, 0);\n        in_stack_fffffffffffffaf8 = 0x68;\n        if (*0x100011622 == '\\0') {\n            uVar1 = fcn.100005680(0x1000017c0, &stack0xfffffffffffffab4, 4);\n            uVar10 = in_stack_fffffffffffffa98 >> 0x20;\n            if ((uVar1 == 0) || (4 < uVar1)) goto code_r0x000100004881;\n            if (in_stack_fffffffffffffab4 == 1) {\n                in_stack_fffffffffffffb38 = 0;\ncode_r0x000100004928:\n                in_stack_fffffffffffffb34 = 1;\n            }\n            else {\n                if (in_stack_fffffffffffffab4 == 2) {\n                    in_stack_fffffffffffffb38 = 6;\n                    goto code_r0x000100004928;\n                }\n                if (in_stack_fffffffffffffab4 == 3) {\n                    in_stack_fffffffffffffb38 = 3;\n                    goto code_r0x000100004928;\n                }\n            }\n            if (uVar7 != 0) goto code_r0x000100004a0e;\n            if (*0x100011418 != 0) {\n                if ((*0x100011418 & 1) == 0) {\n                    if ((*0x100011418 & 2) == 0) goto code_r0x000100004d55;\n                    lpName = 0x1000017d8;\n                }\n                else {\n                    lpName = 0x1000017d0;\n                }\n                iVar2 = fcn.100005680(lpName, &stack0xfffffffffffffb68, 0x104);\n                if (iVar2 == 0) goto code_r0x000100004881;\n                in_stack_fffffffffffffaa0 = CONCAT44(in_stack_fffffffffffffaa0 >> 0x20, 0xffffffff);\n                in_stack_fffffffffffffa98 = 0x1000017b0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1, &stack0xfffffffffffffb68);\n                if (iVar2 != 0) {\n                    uVar9 = 1;\n                }\n            }\n            if (uVar9 == 0) {\n                iVar2 = fcn.100005680(0x1000017e0, &stack0xfffffffffffffb68, 0x104);\n                uVar10 = in_stack_fffffffffffffa98 >> 0x20;\n                if (iVar2 != 0) goto code_r0x000100004a0e;\n                goto code_r0x000100004881;\n            }\n        }\n        else {\n            iVar6 = 0x104;\n            pcVar5 = &stack0xfffffffffffffb68;\n            do {\n                if ((iVar6 == -0x7ffffefa) || (pcVar5[0x100011622 - &stack0xfffffffffffffb68] == '\\0')) break;\n                *pcVar5 = pcVar5[0x100011622 - &stack0xfffffffffffffb68];\n                pcVar5 = pcVar5 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if (iVar6 == 0) {\n                pcVar5 = pcVar5 + -1;\n            }\n            *pcVar5 = '\\0';\ncode_r0x000100004a0e:\n            uVar10 = in_stack_fffffffffffffa98 >> 0x20;\n            if (uVar7 == 1) {\n                iVar2 = fcn.100005680(0x1000017f0, &stack0xfffffffffffffb68, 0x104);\n                if (iVar2 == 0) goto code_r0x000100004881;\n                if (*0x100011622 != '\\0') break;\n                in_stack_fffffffffffffaa0 = CONCAT44(in_stack_fffffffffffffaa0 >> 0x20, 0xffffffff);\n                in_stack_fffffffffffffa98 = 0x1000017b0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1, &stack0xfffffffffffffb68);\n                if (iVar2 == 2) break;\n            }\n        }\n        iVar2 = fcn.100001fbc(&stack0xfffffffffffffb68, &stack0xfffffffffffffaa8, &stack0xfffffffffffffab0);\n        if (iVar2 == 0) goto code_r0x000100004d55;\n        iVar2 = in_stack_fffffffffffffab0;\n        if (((uVar8 == 0) && (*0x100010490 != 1)) && (*0x100011400 != 0)) {\n            iVar6 = in_stack_fffffffffffffaa8;\n            if (in_stack_fffffffffffffab0 == 0) {\n                fcn.100002658();\n                uVar8 = 1;\n                goto code_r0x000100004ab0;\n            }\ncode_r0x000100004ab8:\n            if (*0x10000f48c == 0) {\n                fcn.100005420(0, 0x4c7, 0, 0, CONCAT44(in_stack_fffffffffffffa98 >> 0x20, 0x10), \n                              in_stack_fffffffffffffaa0 & 0xffffffff00000000, iVar6, \n                              CONCAT44(in_stack_fffffffffffffab4, iVar2), in_stack_fffffffffffffab8, \n                              in_stack_fffffffffffffac0, in_stack_fffffffffffffac8, in_stack_fffffffffffffad0, \n                              in_stack_fffffffffffffad8, \n                              CONCAT44(in_stack_fffffffffffffae4, \n                                       CONCAT22(in_stack_fffffffffffffae2, in_stack_fffffffffffffae0)), \n                              CONCAT44(in_stack_fffffffffffffaec, in_stack_fffffffffffffae8), in_stack_fffffffffffffaf0\n                              , CONCAT44(in_stack_fffffffffffffafc, in_stack_fffffffffffffaf8), \n                              in_stack_fffffffffffffb00, in_stack_fffffffffffffb08, in_stack_fffffffffffffb10, \n                              in_stack_fffffffffffffb18, in_stack_fffffffffffffb20, in_stack_fffffffffffffb28, \n                              CONCAT44(in_stack_fffffffffffffb34, in_stack_fffffffffffffb30), \n                              CONCAT62(in_stack_fffffffffffffb3a, in_stack_fffffffffffffb38), in_stack_fffffffffffffb40\n                              , in_stack_fffffffffffffb48, in_stack_fffffffffffffb50, in_stack_fffffffffffffb58, \n                              in_stack_fffffffffffffb60, in_stack_fffffffffffffb68, in_stack_fffffffffffffb70, \n                              in_stack_fffffffffffffb78, in_stack_fffffffffffffb80, in_stack_fffffffffffffb88, \n                              in_stack_fffffffffffffb90, in_stack_fffffffffffffb98, in_stack_fffffffffffffba0, \n                              in_stack_fffffffffffffba8, in_stack_fffffffffffffbb0, in_stack_fffffffffffffbb8, \n                              in_stack_fffffffffffffbc0, in_stack_fffffffffffffbc8, in_stack_fffffffffffffbd0, \n                              in_stack_fffffffffffffbd8, in_stack_fffffffffffffbe0, in_stack_fffffffffffffbe8, \n                              in_stack_fffffffffffffbf0, in_stack_fffffffffffffbf8, in_stack_fffffffffffffc00, \n                              in_stack_fffffffffffffc08, in_stack_fffffffffffffc10, in_stack_fffffffffffffc18, \n                              in_stack_fffffffffffffc20, in_stack_fffffffffffffc28, in_stack_fffffffffffffc30, \n                              in_stack_fffffffffffffc38, in_stack_fffffffffffffc40, in_stack_fffffffffffffc48, \n                              in_stack_fffffffffffffc50);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(iVar6);\n                *0x100010488 = -0x7ff8fbd5;\n            }\n            else {\n                if ((in_stack_fffffffffffffab0 == 0) || ((*0x100010ec4 & 4) == 0)) goto code_r0x000100004bcc;\n                iVar3 = fcn.100007bbc();\n                if (iVar3 == 0) {\n                    fcn.100005420(0, 0x4c8, 0x1000016b0, 0, CONCAT44(in_stack_fffffffffffffa98 >> 0x20, 0x10), \n                                  in_stack_fffffffffffffaa0 & 0xffffffff00000000, iVar6, \n                                  CONCAT44(in_stack_fffffffffffffab4, iVar2), in_stack_fffffffffffffab8, \n                                  in_stack_fffffffffffffac0, in_stack_fffffffffffffac8, in_stack_fffffffffffffad0, \n                                  in_stack_fffffffffffffad8, \n                                  CONCAT44(in_stack_fffffffffffffae4, \n                                           CONCAT22(in_stack_fffffffffffffae2, in_stack_fffffffffffffae0)), \n                                  CONCAT44(in_stack_fffffffffffffaec, in_stack_fffffffffffffae8), \n                                  in_stack_fffffffffffffaf0, \n                                  CONCAT44(in_stack_fffffffffffffafc, in_stack_fffffffffffffaf8), \n                                  in_stack_fffffffffffffb00, in_stack_fffffffffffffb08, in_stack_fffffffffffffb10, \n                                  in_stack_fffffffffffffb18, in_stack_fffffffffffffb20, in_stack_fffffffffffffb28, \n                                  CONCAT44(in_stack_fffffffffffffb34, in_stack_fffffffffffffb30), \n                                  CONCAT62(in_stack_fffffffffffffb3a, in_stack_fffffffffffffb38), \n                                  in_stack_fffffffffffffb40, in_stack_fffffffffffffb48, in_stack_fffffffffffffb50, \n                                  in_stack_fffffffffffffb58, in_stack_fffffffffffffb60, in_stack_fffffffffffffb68, \n                                  in_stack_fffffffffffffb70, in_stack_fffffffffffffb78, in_stack_fffffffffffffb80, \n                                  in_stack_fffffffffffffb88, in_stack_fffffffffffffb90, in_stack_fffffffffffffb98, \n                                  in_stack_fffffffffffffba0, in_stack_fffffffffffffba8, in_stack_fffffffffffffbb0, \n                                  in_stack_fffffffffffffbb8, in_stack_fffffffffffffbc0, in_stack_fffffffffffffbc8, \n                                  in_stack_fffffffffffffbd0, in_stack_fffffffffffffbd8, in_stack_fffffffffffffbe0, \n                                  in_stack_fffffffffffffbe8, in_stack_fffffffffffffbf0, in_stack_fffffffffffffbf8, \n                                  in_stack_fffffffffffffc00, in_stack_fffffffffffffc08, in_stack_fffffffffffffc10, \n                                  in_stack_fffffffffffffc18, in_stack_fffffffffffffc20, in_stack_fffffffffffffc28, \n                                  in_stack_fffffffffffffc30, in_stack_fffffffffffffc38, in_stack_fffffffffffffc40, \n                                  in_stack_fffffffffffffc48, in_stack_fffffffffffffc50);\n                }\n                else {\n                    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                    if (pcVar4 != NULL) {\n                        in_stack_fffffffffffffae4 = *0x100011418;\n                        in_stack_fffffffffffffac0 = 0x1000105d8;\n                        in_stack_fffffffffffffab8 = 0;\n                        in_stack_fffffffffffffad0 = 0x100010670;\n                        in_stack_fffffffffffffad8 = &stack0xfffffffffffffb68;\n                        if (*0x100011410 != 0) {\n                            in_stack_fffffffffffffae4 = in_stack_fffffffffffffae4 | 0x10000;\n                        }\n                        if ((*0x100010ec4 & 8) != 0) {\n                            in_stack_fffffffffffffae4 = in_stack_fffffffffffffae4 | 0x20000;\n                        }\n                        if ((*0x100010ec4 & 0x10) != 0) {\n                            in_stack_fffffffffffffae4 = in_stack_fffffffffffffae4 | 0x40000;\n                        }\n                        if ((*0x100011728 & 0x40) != 0) {\n                            in_stack_fffffffffffffae4 = in_stack_fffffffffffffae4 | 0x80000;\n                        }\n                        if (*0x100011728 < '\\0') {\n                            in_stack_fffffffffffffae4 = in_stack_fffffffffffffae4 | 0x100000;\n                        }\n                        in_stack_fffffffffffffaa8 = iVar6;\n                        in_stack_fffffffffffffac8 = iVar6;\n                        in_stack_fffffffffffffae0 = *0x100010490;\n                        in_stack_fffffffffffffae8 = *0x100010ec8;\n                        *0x100010488 = (*pcVar4)(&stack0xfffffffffffffab8);\n                        if (*0x100010488 < 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                            goto code_r0x000100004d4a;\n                        }\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                        goto code_r0x000100004bee;\n                    }\n                    fcn.100005420(0, 0x4c9, 0x10000f4e0, 0, CONCAT44(in_stack_fffffffffffffa98 >> 0x20, 0x10), \n                                  in_stack_fffffffffffffaa0 & 0xffffffff00000000, iVar6, \n                                  CONCAT44(in_stack_fffffffffffffab4, iVar2), in_stack_fffffffffffffab8, \n                                  in_stack_fffffffffffffac0, in_stack_fffffffffffffac8, in_stack_fffffffffffffad0, \n                                  in_stack_fffffffffffffad8, \n                                  CONCAT44(in_stack_fffffffffffffae4, \n                                           CONCAT22(in_stack_fffffffffffffae2, in_stack_fffffffffffffae0)), \n                                  CONCAT44(in_stack_fffffffffffffaec, in_stack_fffffffffffffae8), \n                                  in_stack_fffffffffffffaf0, \n                                  CONCAT44(in_stack_fffffffffffffafc, in_stack_fffffffffffffaf8), \n                                  in_stack_fffffffffffffb00, in_stack_fffffffffffffb08, in_stack_fffffffffffffb10, \n                                  in_stack_fffffffffffffb18, in_stack_fffffffffffffb20, in_stack_fffffffffffffb28, \n                                  CONCAT44(in_stack_fffffffffffffb34, in_stack_fffffffffffffb30), \n                                  CONCAT62(in_stack_fffffffffffffb3a, in_stack_fffffffffffffb38), \n                                  in_stack_fffffffffffffb40, in_stack_fffffffffffffb48, in_stack_fffffffffffffb50, \n                                  in_stack_fffffffffffffb58, in_stack_fffffffffffffb60, in_stack_fffffffffffffb68, \n                                  in_stack_fffffffffffffb70, in_stack_fffffffffffffb78, in_stack_fffffffffffffb80, \n                                  in_stack_fffffffffffffb88, in_stack_fffffffffffffb90, in_stack_fffffffffffffb98, \n                                  in_stack_fffffffffffffba0, in_stack_fffffffffffffba8, in_stack_fffffffffffffbb0, \n                                  in_stack_fffffffffffffbb8, in_stack_fffffffffffffbc0, in_stack_fffffffffffffbc8, \n                                  in_stack_fffffffffffffbd0, in_stack_fffffffffffffbd8, in_stack_fffffffffffffbe0, \n                                  in_stack_fffffffffffffbe8, in_stack_fffffffffffffbf0, in_stack_fffffffffffffbf8, \n                                  in_stack_fffffffffffffc00, in_stack_fffffffffffffc08, in_stack_fffffffffffffc10, \n                                  in_stack_fffffffffffffc18, in_stack_fffffffffffffc20, in_stack_fffffffffffffc28, \n                                  in_stack_fffffffffffffc30, in_stack_fffffffffffffc38, in_stack_fffffffffffffc40, \n                                  in_stack_fffffffffffffc48, in_stack_fffffffffffffc50);\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                }\n                (*_sym.imp.KERNEL32.dll_LocalFree)(iVar6);\n                *0x100010488 = fcn.100007924();\n            }\n            goto code_r0x000100004d55;\n        }\ncode_r0x000100004ab0:\n        iVar6 = in_stack_fffffffffffffaa8;\n        if (in_stack_fffffffffffffab0 != 0) goto code_r0x000100004ab8;\ncode_r0x000100004bcc:\n        if ((iVar6 == 0) ||\n           (in_stack_fffffffffffffaa8 = iVar6,  iVar2 = fcn.100004e24(iVar6, &stack0xfffffffffffffaf8),  iVar2 == 0)) {\ncode_r0x000100004d4a:\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar6);\n            goto code_r0x000100004d55;\n        }\ncode_r0x000100004bee:\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar6);\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 2);\n    if (((*0x100010440 != 0) && (*0x1000103f0 != '\\0')) &&\n       (iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0xffffffff80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x2001f), \n       iVar2 == 0)) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(in_stack_fffffffffffffaa8, 0x1000103f0, 0, 0);\n        if (iVar2 == 0) {\n            uStack904 = 0;\n            sub.msvcrt.dll_memset(auStack903, 0, 0x103);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&uStack904, 0x104);\n            if (iVar2 != 0) {\n                fcn.100007ddc(&uStack904, 0x104, 0x100001609);\n            }\n            fcn.100001b10(auStack632, 0x238, \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\", &uStack904);\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(auStack632);\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(in_stack_fffffffffffffaa8, 0x1000103f0, 0, 1);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_stack_fffffffffffffaa8);\n    }\ncode_r0x000100004d55:\n    fcn.10000c380(uStack56 ^ auStackY1416);\n    return;\n}\n",
        "token_count": 5849
    },
    "1000068c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1000068cc(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    ulong arg3;\n    uchar auStackY648 [32];\n    ulong in_stack_fffffffffffffd98;\n    uint uVar7;\n    uint32_t in_stack_fffffffffffffda4;\n    uint in_stack_fffffffffffffda8;\n    uint in_stack_fffffffffffffdac;\n    uint in_stack_fffffffffffffdb0;\n    uint in_stack_fffffffffffffdb4;\n    char in_stack_fffffffffffffdb8;\n    ushort in_stack_fffffffffffffdb9;\n    uchar in_stack_fffffffffffffdbb;\n    uint in_stack_fffffffffffffdbc;\n    ulong in_stack_fffffffffffffdc0;\n    ulong in_stack_fffffffffffffdc8;\n    ulong in_stack_fffffffffffffdd0;\n    ulong in_stack_fffffffffffffdd8;\n    ulong in_stack_fffffffffffffde0;\n    ulong in_stack_fffffffffffffde8;\n    ulong in_stack_fffffffffffffdf0;\n    ulong in_stack_fffffffffffffdf8;\n    ulong in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe10;\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    ulong in_stack_fffffffffffffe28;\n    ulong in_stack_fffffffffffffe30;\n    ulong in_stack_fffffffffffffe38;\n    ulong in_stack_fffffffffffffe40;\n    ulong in_stack_fffffffffffffe48;\n    ulong in_stack_fffffffffffffe50;\n    ulong in_stack_fffffffffffffe58;\n    ulong in_stack_fffffffffffffe60;\n    ulong in_stack_fffffffffffffe68;\n    ulong in_stack_fffffffffffffe70;\n    ulong in_stack_fffffffffffffe78;\n    ulong in_stack_fffffffffffffe80;\n    ulong in_stack_fffffffffffffe88;\n    ulong in_stack_fffffffffffffe90;\n    ulong in_stack_fffffffffffffe98;\n    ulong in_stack_fffffffffffffea0;\n    ulong in_stack_fffffffffffffea8;\n    ulong in_stack_fffffffffffffeb0;\n    ulong in_stack_fffffffffffffeb8;\n    ulong in_stack_fffffffffffffec0;\n    char in_stack_fffffffffffffec8;\n    unkbyte7 in_stack_fffffffffffffec9;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    ulong in_stack_ffffffffffffff48;\n    ulong in_stack_ffffffffffffff50;\n    uint64_t uStack40;\n    \n    uVar7 = in_stack_fffffffffffffd98 >> 0x20;\n    uStack40 = *0x10000f100 ^ auStackY648;\n    uVar1 = fcn.100005680(0x1000017e0, 0, 0);\n    iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uVar1 + 1);\n    arg3 = 0;\n    if (iVar5 == 0) {\n        fcn.100005420(0, 0x4b5, 0, 0, CONCAT44(uVar7, 0x10), in_stack_fffffffffffffda4 << 0x20, \n                      CONCAT44(in_stack_fffffffffffffdac, in_stack_fffffffffffffda8), \n                      CONCAT44(in_stack_fffffffffffffdb4, in_stack_fffffffffffffdb0), \n                      CONCAT44(in_stack_fffffffffffffdbc, \n                               CONCAT13(in_stack_fffffffffffffdbb, \n                                        CONCAT21(in_stack_fffffffffffffdb9, in_stack_fffffffffffffdb8))), \n                      in_stack_fffffffffffffdc0, in_stack_fffffffffffffdc8, in_stack_fffffffffffffdd0, \n                      in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, \n                      in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, \n                      in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, \n                      in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, in_stack_fffffffffffffe30, \n                      in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, \n                      in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, in_stack_fffffffffffffe60, \n                      in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, in_stack_fffffffffffffe78, \n                      in_stack_fffffffffffffe80, in_stack_fffffffffffffe88, in_stack_fffffffffffffe90, \n                      in_stack_fffffffffffffe98, in_stack_fffffffffffffea0, in_stack_fffffffffffffea8, \n                      in_stack_fffffffffffffeb0, in_stack_fffffffffffffeb8, in_stack_fffffffffffffec0, \n                      CONCAT71(in_stack_fffffffffffffec9, in_stack_fffffffffffffec8), in_stack_fffffffffffffed0, \n                      in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, \n                      in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, \n                      in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, \n                      in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, \n                      in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, \n                      in_stack_ffffffffffffff50);\n        *0x100010488 = fcn.100007924();\n    }\n    else {\n        iVar2 = fcn.100005680(0x1000017e0, iVar5, uVar1);\n        if (iVar2 == 0) {\n            fcn.100005420(0, 0x4b1, 0, 0, CONCAT44(uVar7, 0x10), in_stack_fffffffffffffda4 << 0x20, \n                          CONCAT44(in_stack_fffffffffffffdac, in_stack_fffffffffffffda8), \n                          CONCAT44(in_stack_fffffffffffffdb4, in_stack_fffffffffffffdb0), \n                          CONCAT44(in_stack_fffffffffffffdbc, \n                                   CONCAT13(in_stack_fffffffffffffdbb, \n                                            CONCAT21(in_stack_fffffffffffffdb9, in_stack_fffffffffffffdb8))), \n                          in_stack_fffffffffffffdc0, in_stack_fffffffffffffdc8, in_stack_fffffffffffffdd0, \n                          in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, \n                          in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, \n                          in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, \n                          in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, in_stack_fffffffffffffe30, \n                          in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, \n                          in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, in_stack_fffffffffffffe60, \n                          in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, in_stack_fffffffffffffe78, \n                          in_stack_fffffffffffffe80, in_stack_fffffffffffffe88, in_stack_fffffffffffffe90, \n                          in_stack_fffffffffffffe98, in_stack_fffffffffffffea0, in_stack_fffffffffffffea8, \n                          in_stack_fffffffffffffeb0, in_stack_fffffffffffffeb8, in_stack_fffffffffffffec0, \n                          CONCAT71(in_stack_fffffffffffffec9, in_stack_fffffffffffffec8), in_stack_fffffffffffffed0, \n                          in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, \n                          in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, \n                          in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, \n                          in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, \n                          in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, \n                          in_stack_ffffffffffffff50);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar5);\n            *0x100010488 = 0x80070714;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)();\n            if (iVar2 == 0) {\n                *0x100010ec0 = 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar5);\n            if (*0x10001151e == '\\0') {\n                if ((*0x100011404 == 0) && (*0x100010ec0 == 0)) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104);\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.100006704(0x100010670, 1, 3);\n                        if (iVar2 != 0) goto code_r0x000100006d6e;\n                        iVar2 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&stack0xfffffffffffffec8);\n                        if (iVar2 == 0) {\n                            uVar1 = fcn.100002cbc(0x100010670, &stack0xfffffffffffffec8);\n                        }\n                        else {\n                            uVar1 = *0x100010670 == in_stack_fffffffffffffec8;\n                        }\n                        if ((uVar1 == 0) && (iVar2 = fcn.100006704(0x100010670, 1, 1),  iVar2 != 0))\n                        goto code_r0x000100006d6e;\n                    }\n                    do {\n                        iVar5 = 0x104;\n                        pcVar6 = &stack0xfffffffffffffdb8;\n                        do {\n                            if ((iVar5 == -0x7ffffefa) || (pcVar6[0x1000018a4 - &stack0xfffffffffffffdb8] == '\\0'))\n                            break;\n                            *pcVar6 = pcVar6[0x1000018a4 - &stack0xfffffffffffffdb8];\n                            pcVar6 = pcVar6 + 1;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                        if (iVar5 == 0) {\n                            pcVar6 = pcVar6 + -1;\n                        }\n                        *pcVar6 = '\\0';\n                        while (in_stack_fffffffffffffdb8 < '[') {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(&stack0xfffffffffffffdb8);\n                            if (((iVar2 == 6) || (iVar2 == 3)) &&\n                               (iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&stack0xfffffffffffffdb8), \n                               iVar3 != -1)) {\ncode_r0x000100006bc2:\n                                iVar2 = fcn.100006eec(&stack0xfffffffffffffdb8, 3, 0);\n                                if (iVar2 == 0) {\n                                    iVar2 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&stack0xfffffffffffffec8);\n                                    if (iVar2 == 0) {\n                                        uVar1 = fcn.100002cbc(&stack0xfffffffffffffdb8, &stack0xfffffffffffffec8);\n                                    }\n                                    else {\n                                        uVar1 = in_stack_fffffffffffffdb8 == in_stack_fffffffffffffec8;\n                                    }\n                                    if ((uVar1 != 0) ||\n                                       (iVar2 = fcn.100006eec(&stack0xfffffffffffffdb8, 1, 0),  iVar2 == 0))\n                                    goto code_r0x000100006bb6;\n                                }\n                                iVar2 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&stack0xfffffffffffffec8);\n                                if (iVar2 == 0) {\n                                    uVar1 = fcn.100002cbc(&stack0xfffffffffffffdb8, &stack0xfffffffffffffec8);\n                                }\n                                else {\n                                    uVar1 = in_stack_fffffffffffffdb8 == in_stack_fffffffffffffec8;\n                                }\n                                if (uVar1 != 0) {\n                                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&stack0xfffffffffffffdb8);\n                                }\n                                fcn.100007ddc(&stack0xfffffffffffffdb8, 0x104, 0x1000018a8);\n                                uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&stack0xfffffffffffffdb8);\n                                if (uVar1 == 0xffffffff) {\n                                    uVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(&stack0xfffffffffffffdb8);\n                                }\n                                else {\n                                    uVar1 = uVar1 & 0x10;\n                                }\n                                if (uVar1 == 0) {\n                                    in_stack_fffffffffffffdb8 = in_stack_fffffffffffffdb8 + '\\x01';\n                                }\n                                else {\n                                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&stack0xfffffffffffffdb8, 2);\n                                    iVar5 = 0x104;\n                                    pcVar6 = 0x100010670;\n                                    do {\n                                        if ((iVar5 == -0x7ffffefa) || (pcVar6[&stack0xfffffffefffef748] == '\\0')) break;\n                                        *pcVar6 = pcVar6[&stack0xfffffffefffef748];\n                                        pcVar6 = pcVar6 + 1;\n                                        iVar5 = iVar5 + -1;\n                                    } while (iVar5 != 0);\n                                    if (iVar5 == 0) {\n                                        pcVar6 = pcVar6 + -1;\n                                    }\n                                    *pcVar6 = '\\0';\n                                    iVar2 = fcn.100006704(0x100010670, 1, 0);\n                                    if (iVar2 != 0) goto code_r0x000100006d6e;\n                                }\n                            }\n                            else {\n                                if (((iVar2 == 2) && (in_stack_fffffffffffffdb8 != 'A')) &&\n                                   (in_stack_fffffffffffffdb8 != 'B')) {\n                                    iVar2 = 0;\n                                    iVar3 = 0;\n                                    if (((in_stack_fffffffffffffdb8 != '\\0') &&\n                                        (iVar4 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                                                           (&stack0xfffffffffffffdb8, &stack0xfffffffffffffdac, \n                                                            &stack0xfffffffffffffdb0, &stack0xfffffffffffffdb4), \n                                        iVar4 != 0)) &&\n                                       ((uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar3 * iVar2),  uVar1 != 0 &&\n                                        (0x18fff < uVar1)))) goto code_r0x000100006bc2;\n                                }\ncode_r0x000100006bb6:\n                                in_stack_fffffffffffffdb8 = in_stack_fffffffffffffdb8 + '\\x01';\n                            }\n                        }\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&stack0xfffffffffffffdb8, 0x104);\n                        iVar2 = fcn.100006eec(&stack0xfffffffffffffdb8, 3, 4);\n                    } while (iVar2 != 0);\n                }\n                else {\n                    fcn.100007c80(0x7d2, 0, 0x100003e00, 0);\n                }\n            }\n            else {\n                if ((*0x10001151e != '\\\\') || (*0x10001151f != '\\\\')) {\n                    arg3 = 1;\n                }\n                iVar2 = fcn.100006704(0x10001151e, 0, arg3);\n                if (iVar2 == 0) {\n                    fcn.100005420(0, 0x4be, 0, 0, CONCAT44(uVar7, 0x10), in_stack_fffffffffffffda4 << 0x20, \n                                  CONCAT44(in_stack_fffffffffffffdac, in_stack_fffffffffffffda8), \n                                  CONCAT44(in_stack_fffffffffffffdb4, in_stack_fffffffffffffdb0), \n                                  CONCAT44(in_stack_fffffffffffffdbc, \n                                           CONCAT13(in_stack_fffffffffffffdbb, \n                                                    CONCAT21(in_stack_fffffffffffffdb9, in_stack_fffffffffffffdb8))), \n                                  in_stack_fffffffffffffdc0, in_stack_fffffffffffffdc8, in_stack_fffffffffffffdd0, \n                                  in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, \n                                  in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, \n                                  in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, \n                                  in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, in_stack_fffffffffffffe30, \n                                  in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, \n                                  in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, in_stack_fffffffffffffe60, \n                                  in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, in_stack_fffffffffffffe78, \n                                  in_stack_fffffffffffffe80, in_stack_fffffffffffffe88, in_stack_fffffffffffffe90, \n                                  in_stack_fffffffffffffe98, in_stack_fffffffffffffea0, in_stack_fffffffffffffea8, \n                                  in_stack_fffffffffffffeb0, in_stack_fffffffffffffeb8, in_stack_fffffffffffffec0, \n                                  CONCAT71(in_stack_fffffffffffffec9, in_stack_fffffffffffffec8), \n                                  in_stack_fffffffffffffed0, in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, \n                                  in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, \n                                  in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, \n                                  in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, \n                                  in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, \n                                  in_stack_ffffffffffffff48, in_stack_ffffffffffffff50);\n                }\n            }\n        }\n    }\ncode_r0x000100006d6e:\n    fcn.10000c380(uStack40 ^ auStackY648);\n    return;\n}\n",
        "token_count": 4318
    },
    "1000072e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_50h\n\nvoid fcn.1000072e8(char *arg1)\n\n{\n    uchar *arg1_00;\n    code *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint64_t noname_42;\n    int64_t iVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    char *arg1_01;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong unaff_R12;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    ulong unaff_R15;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong var_50h;\n    ulong in_stack_00000050;\n    uchar auStack392 [32];\n    uchar *in_stack_fffffffffffffe98;\n    uint32_t in_stack_fffffffffffffea4;\n    int32_t in_stack_fffffffffffffea8;\n    uint in_stack_fffffffffffffeac;\n    ulong in_stack_fffffffffffffeb0;\n    char in_stack_fffffffffffffeb8;\n    char in_stack_fffffffffffffeb9;\n    char in_stack_fffffffffffffeba;\n    char in_stack_fffffffffffffebb;\n    uint in_stack_fffffffffffffebc;\n    ulong in_stack_fffffffffffffec0;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    ulong in_stack_ffffffffffffff48;\n    ulong in_stack_ffffffffffffff50;\n    ulong in_stack_ffffffffffffff58;\n    ulong in_stack_ffffffffffffff60;\n    ulong in_stack_ffffffffffffff68;\n    ulong in_stack_ffffffffffffff70;\n    ulong in_stack_ffffffffffffff78;\n    ulong in_stack_ffffffffffffff80;\n    ulong in_stack_ffffffffffffff88;\n    ulong in_stack_ffffffffffffff90;\n    ulong in_stack_ffffffffffffff98;\n    ulong in_stack_ffffffffffffffa0;\n    ulong in_stack_ffffffffffffffa8;\n    ulong in_stack_ffffffffffffffb0;\n    ulong in_stack_ffffffffffffffb8;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffd0;\n    \n    noname_42 = *0x10000f100 ^ auStack392;\n    iVar7 = 0;\n    bVar2 = true;\n    if ((arg1 != NULL) && (*arg1 != '\\0')) {\n        do {\n            bVar3 = false;\n            if (!bVar2) break;\n            while ((((cVar5 = *arg1,  cVar5 == ' ' || (cVar5 == '\\t')) || (cVar5 == '\\r')) ||\n                   (((cVar5 == '\\n' || (cVar5 == '\\v')) || (cVar5 == '\\f'))))) {\n                arg1 = (*_sym.imp.USER32.dll_CharNextA)();\n            }\n            iVar12 = iVar7;\n            iVar11 = iVar7;\n            iVar13 = iVar7;\n            uVar8 = 1;\n            if (*arg1 == '\\0') break;\n            do {\n                iVar6 = iVar13;\n                if (iVar11 == 0) {\n                    cVar5 = *arg1;\n                    if (((cVar5 == ' ') || (cVar5 == '\\t')) ||\n                       ((cVar5 == '\\r' || (((cVar5 == '\\n' || (cVar5 == '\\v')) || (cVar5 == '\\f')))))) break;\n                }\n                else if (iVar6 != 0) break;\n                if (*arg1 == '\\\"') {\n                    pcVar9 = arg1 + 1;\n                    if (*pcVar9 == '\\\"') {\n                        if (0x103 < uVar8) goto code_r0x0001000078ee;\n                        (&stack0xfffffffffffffeb8)[iVar12] = 0x22;\n                        uVar8 = uVar8 + 1;\n                        iVar12 = iVar12 + 1;\n                        pcVar9 = arg1 + 2;\n                    }\n                    else if (iVar11 == 0) {\n                        iVar11 = 1;\n                    }\n                    else {\n                        iVar13 = 1;\n                    }\n                }\n                else {\n                    if (0x103 < uVar8) goto code_r0x0001000078ee;\n                    (&stack0xfffffffffffffeb8)[iVar12] = *arg1;\n                    uVar8 = uVar8 + 1;\n                    iVar12 = iVar12 + 1;\n                    pcVar9 = arg1 + 1;\n                }\n                iVar6 = iVar13;\n                arg1 = pcVar9;\n            } while (*pcVar9 != '\\0');\n            (&stack0xfffffffffffffeb8)[iVar12] = 0;\n            if (iVar6 != 0) break;\n            if ((in_stack_fffffffffffffeb8 != '/') && (in_stack_fffffffffffffeb8 != '-')) goto code_r0x0001000078ee;\n            cVar5 = (*_sym.imp.USER32.dll_CharUpperA)();\n            if (cVar5 == '?') {\n                fcn.100005420(0, 0x521, 0x100001609, 0, CONCAT44(in_stack_fffffffffffffe98 >> 0x20, 0x40), \n                              in_stack_fffffffffffffea4 << 0x20, \n                              CONCAT44(in_stack_fffffffffffffeac, in_stack_fffffffffffffea8), in_stack_fffffffffffffeb0\n                              , CONCAT44(in_stack_fffffffffffffebc, \n                                         CONCAT13(in_stack_fffffffffffffebb, \n                                                  CONCAT12(in_stack_fffffffffffffeba, \n                                                           CONCAT11(in_stack_fffffffffffffeb9, in_stack_fffffffffffffeb8\n                                                                   )))), in_stack_fffffffffffffec0, \n                              in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, in_stack_fffffffffffffed8, \n                              in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, \n                              in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, \n                              in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, \n                              in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, \n                              in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, in_stack_ffffffffffffff50, \n                              in_stack_ffffffffffffff58, in_stack_ffffffffffffff60, in_stack_ffffffffffffff68, \n                              in_stack_ffffffffffffff70, in_stack_ffffffffffffff78, in_stack_ffffffffffffff80, \n                              in_stack_ffffffffffffff88, in_stack_ffffffffffffff90, in_stack_ffffffffffffff98, \n                              in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, in_stack_ffffffffffffffb0, \n                              in_stack_ffffffffffffffb8, in_stack_ffffffffffffffc0, noname_42, in_stack_ffffffffffffffd0\n                              , unaff_R15, unaff_R14, unaff_R13, unaff_R12, unaff_RBP, in_stack_00000000, \n                              in_stack_00000008, unaff_RBX, unaff_RSI, unaff_RDI, in_stack_00000028, in_stack_00000030, \n                              in_stack_00000038, in_stack_00000040, var_50h, in_stack_00000050);\n                if (*0x100010458 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                }\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (cVar5 == 'C') {\n                if (in_stack_fffffffffffffeba != '\\0') {\n                    if (in_stack_fffffffffffffeba == ':') {\n                        iVar10 = 4 - (in_stack_fffffffffffffebb != '\\\"');\n                        arg1_00 = &stack0xfffffffffffffeb8 + iVar10;\n                        iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                        if ((((iVar6 != 0) &&\n                             ((iVar12 = fcn.100007d6c(arg1_00),  iVar12 == 0 ||\n                              (iVar12 = fcn.100007d6c(arg1_00),  iVar12 != 0)))) &&\n                            ((iVar12 = fcn.100007d6c(arg1_00),  iVar12 == 0 ||\n                             (iVar12 = fcn.100007d6c(arg1_00),  iVar12 != 0)))) &&\n                           (in_stack_fffffffffffffea8 = iVar10, \n                           iVar6 = fcn.100007224(arg1_00, &stack0xfffffffffffffea8),  iVar6 != 0)) {\n                            iVar12 = 0x104;\n                            pcVar9 = 0x100011622;\n                            do {\n                                if ((iVar12 == -0x7ffffefa) ||\n                                   (pcVar9[&stack0xfffffffefffee896 + (in_stack_fffffffffffffea8 + iVar10)] == '\\0'))\n                                break;\n                                *pcVar9 = pcVar9[&stack0xfffffffefffee896 + (in_stack_fffffffffffffea8 + iVar10)];\n                                pcVar9 = pcVar9 + 1;\n                                iVar12 = iVar12 + -1;\n                            } while (iVar12 != 0);\n                            if (iVar12 == 0) {\n                                pcVar9 = pcVar9 + -1;\n                            }\n                            *pcVar9 = '\\0';\n                            goto code_r0x0001000074de;\n                        }\n                    }\n                    goto code_r0x0001000074db;\n                }\n                *0x100011404 = 1;\n            }\n            else if (cVar5 == 'D') {\ncode_r0x00010000769c:\n                if (in_stack_fffffffffffffeba == ':') {\n                    iVar10 = 4 - (in_stack_fffffffffffffebb != '\\\"');\n                    iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    if ((iVar6 != 0) &&\n                       (in_stack_fffffffffffffea8 = iVar10, \n                       iVar6 = fcn.100007224(&stack0xfffffffffffffeb8 + iVar10, &stack0xfffffffffffffea8),  iVar6 != 0))\n                    {\n                        cVar5 = (*_sym.imp.USER32.dll_CharUpperA)(in_stack_fffffffffffffeb9);\n                        iVar12 = 0x104;\n                        if (cVar5 == 'T') {\n                            arg1_01 = 0x10001151e;\n                            pcVar9 = 0x10001151e;\n                            do {\n                                if ((iVar12 == -0x7ffffefa) ||\n                                   (pcVar9[&stack0xfffffffefffee99a + (in_stack_fffffffffffffea8 + iVar10)] == '\\0'))\n                                break;\n                                *pcVar9 = pcVar9[&stack0xfffffffefffee99a + (in_stack_fffffffffffffea8 + iVar10)];\n                                pcVar9 = pcVar9 + 1;\n                                iVar12 = iVar12 + -1;\n                            } while (iVar12 != 0);\n                        }\n                        else {\n                            arg1_01 = 0x10001141a;\n                            pcVar9 = 0x10001141a;\n                            do {\n                                if ((iVar12 == -0x7ffffefa) ||\n                                   (pcVar9[&stack0xfffffffefffeea9e + (in_stack_fffffffffffffea8 + iVar10)] == '\\0'))\n                                break;\n                                *pcVar9 = pcVar9[&stack0xfffffffefffeea9e + (in_stack_fffffffffffffea8 + iVar10)];\n                                pcVar9 = pcVar9 + 1;\n                                iVar12 = iVar12 + -1;\n                            } while (iVar12 != 0);\n                        }\n                        if (iVar12 == 0) {\n                            pcVar9 = pcVar9 + -1;\n                        }\n                        *pcVar9 = '\\0';\n                        fcn.100007ddc(arg1_01, 0x104, 0x100001609);\n                        iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                        if ((2 < iVar6) && ((arg1_01[1] == ':' || ((*arg1_01 == '\\\\' && (arg1_01[1] == '\\\\'))))))\n                        goto code_r0x0001000074de;\n                        goto code_r0x0001000078ee;\n                    }\n                }\ncode_r0x0001000074db:\n                bVar2 = bVar3;\n            }\n            else if (cVar5 == 'N') {\n                if (in_stack_fffffffffffffeba == '\\0') {\n                    *0x10001140c = 1;\n                }\n                else {\n                    if (in_stack_fffffffffffffeba != ':') goto code_r0x0001000074db;\n                    if (in_stack_fffffffffffffebb != '\\0') {\n                        pcVar9 = &stack0xfffffffffffffebb;\n                        do {\n                            cVar5 = (*_sym.imp.USER32.dll_CharUpperA)();\n                            pcVar9 = pcVar9 + 1;\n                            bVar4 = bVar2;\n                            if (cVar5 == 'E') {\n                                *0x10001140c = 1;\n                            }\n                            else if (cVar5 == 'G') {\n                                *0x100011410 = 1;\n                            }\n                            else {\n                                bVar4 = bVar3;\n                                if (cVar5 == 'V') {\n                                    *0x100011414 = 1;\n                                    bVar4 = bVar2;\n                                }\n                            }\n                            bVar2 = bVar4;\n                        } while (*pcVar9 != '\\0');\n                    }\n                }\n            }\n            else if (cVar5 == 'Q') {\n                if (in_stack_fffffffffffffeba != '\\0') {\n                    if (in_stack_fffffffffffffeba != ':') goto code_r0x0001000074db;\n                    cVar5 = (*_sym.imp.USER32.dll_CharUpperA)();\n                    if (cVar5 != '1') {\n                        if (cVar5 == 'A') {\n                            *0x100011418 = 1;\n                            goto code_r0x0001000074de;\n                        }\n                        if (cVar5 != 'U') goto code_r0x0001000074db;\n                    }\n                }\n                *0x100011418 = 2;\n            }\n            else {\n                if (cVar5 != 'R') {\n                    if (cVar5 == 'T') goto code_r0x00010000769c;\n                    goto code_r0x0001000074db;\n                }\n                if (in_stack_fffffffffffffeba == '\\0') {\n                    *0x100010ebc = 3;\n                    *0x100011408 = 1;\n                }\n                else if (in_stack_fffffffffffffeba == ':') {\n                    *0x100010ebc = 1;\n                    if (in_stack_fffffffffffffebb != '\\0') {\n                        pcVar9 = &stack0xfffffffffffffebb;\n                        do {\n                            cVar5 = (*_sym.imp.USER32.dll_CharUpperA)();\n                            pcVar9 = pcVar9 + 1;\n                            bVar4 = bVar2;\n                            if (cVar5 == 'A') {\n                                *0x100010ebc = *0x100010ebc | 2;\n                                goto code_r0x000100007596;\n                            }\n                            if (cVar5 == 'D') {\n                                *0x100011728 = *0x100011728 | 0x40;\n                                goto code_r0x00010000759d;\n                            }\n                            if (cVar5 == 'I') {\n                                *0x100010ebc = *0x100010ebc & 0xfffffffd;\ncode_r0x000100007596:\n                                *0x100011408 = 1;\n                                bVar4 = bVar2;\n                            }\n                            else {\n                                if (cVar5 == 'N') {\n                                    *0x100010ebc = *0x100010ebc & 0xfffffffe;\n                                    goto code_r0x000100007596;\n                                }\n                                if (cVar5 == 'P') {\n                                    *0x100011728 = *0x100011728 | 0x80;\n                                }\n                                else {\n                                    bVar4 = bVar3;\n                                    if (cVar5 == 'S') {\n                                        *0x100010ebc = *0x100010ebc | 4;\n                                        goto code_r0x000100007596;\n                                    }\n                                }\n                            }\ncode_r0x00010000759d:\n                            bVar2 = bVar4;\n                        } while (*pcVar9 != '\\0');\n                    }\n                }\n                else {\n                    in_stack_fffffffffffffe98 = &stack0xfffffffffffffeb9;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1);\n                    if (iVar6 != 2) goto code_r0x0001000074db;\n                }\n            }\ncode_r0x0001000074de:\n        } while (*arg1 != '\\0');\n        if (((*0x10001140c != 0) && (*0x10001151e == '\\0')) &&\n           (iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100010ee0, 0x10001151e, 0x104),  iVar6 != 0)) {\n            iVar7 = fcn.100007ef8(0x10001151e);\n            *(iVar7 + 1) = 0;\n        }\n    }\ncode_r0x0001000078ee:\n    fcn.10000c380(noname_42 ^ auStack392);\n    return;\n}\n",
        "token_count": 4161
    },
    "10000a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.10000a000(int64_t arg1)\n\n{\n    ushort *puVar1;\n    uchar uVar2;\n    uchar uVar3;\n    ushort *puVar4;\n    ushort uVar5;\n    \n    if (*(arg1 + 0x2ee8) != 3) {\n        puVar4 = *(arg1 + 0x2b08);\n        puVar1 = puVar4 + 2;\n        if (puVar1 < *(arg1 + 0x2b10) || puVar1 == *(arg1 + 0x2b10)) {\n            uVar5 = *puVar4;\n            uVar2 = *(puVar4 + 3);\n            uVar3 = *(puVar4 + 1);\n            *(arg1 + 0x2ec4) = 0x10;\n            *(arg1 + 0x2b08) = puVar1;\n            *(arg1 + 0x2ec0) = CONCAT31(CONCAT21(uVar5, uVar2), uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "10000c79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.10000c798(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((iVar1 != 0) && (iVar1 = fcn.10000c73c(iVar1),  iVar1 != 0)) {\n        if (*(iVar1 + 0x5c) == 2) {\n            return 2;\n        }\n        if (*(iVar1 + 0x5c) == 3) {\n            return 1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 132
    },
    "100002ae": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.100002ae4(void)\n\n{\n    int32_t iVar1;\n    uchar auStack328 [32];\n    uchar auStack296 [272];\n    uint64_t uStack24;\n    \n    uStack24 = *0x10000f100 ^ auStack328;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(auStack296);\n    if (iVar1 != 0) {\n        fcn.100007ddc(auStack296, 0x104, 0x1000016e0);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, auStack296);\n        iVar1 = (*_sym.imp.KERNEL32.dll__lopen)(auStack296, 0x40);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll__llseek)(iVar1, 0, 2);\n            (*_sym.imp.KERNEL32.dll__lclose)(iVar1);\n        }\n    }\n    fcn.10000c380(uStack24 ^ auStack328);\n    return;\n}\n",
        "token_count": 242
    },
    "100006ee": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.100006eec(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    bool bVar11;\n    bool bVar12;\n    ulong s;\n    ulong var_270h;\n    uchar auStackY936 [32];\n    ulong in_stack_fffffffffffffc78;\n    uint uVar13;\n    uint64_t in_stack_fffffffffffffc80;\n    uchar *puVar14;\n    uint64_t uVar15;\n    ulong in_stack_fffffffffffffc88;\n    ulong uVar16;\n    ulong noname_6;\n    uint in_stack_fffffffffffffc90;\n    uint in_stack_fffffffffffffc94;\n    uint in_stack_fffffffffffffc98;\n    int32_t iVar17;\n    uint in_stack_fffffffffffffc9c;\n    int32_t iVar18;\n    uint in_stack_fffffffffffffca0;\n    uint uVar19;\n    uint32_t in_stack_fffffffffffffca4;\n    uint in_stack_fffffffffffffca8;\n    uint uVar20;\n    uint in_stack_fffffffffffffcac;\n    ulong in_stack_fffffffffffffcb0;\n    ulong in_stack_fffffffffffffcb8;\n    ulong in_stack_fffffffffffffcc0;\n    ulong in_stack_fffffffffffffcc8;\n    ulong in_stack_fffffffffffffcd0;\n    ulong in_stack_fffffffffffffcd8;\n    ulong in_stack_fffffffffffffce0;\n    ulong in_stack_fffffffffffffce8;\n    ulong in_stack_fffffffffffffcf0;\n    ulong in_stack_fffffffffffffcf8;\n    ulong in_stack_fffffffffffffd00;\n    ulong in_stack_fffffffffffffd08;\n    ulong in_stack_fffffffffffffd10;\n    ulong in_stack_fffffffffffffd18;\n    ulong in_stack_fffffffffffffd20;\n    ulong in_stack_fffffffffffffd28;\n    ulong in_stack_fffffffffffffd30;\n    ulong in_stack_fffffffffffffd38;\n    ulong in_stack_fffffffffffffd40;\n    ulong in_stack_fffffffffffffd48;\n    ulong in_stack_fffffffffffffd50;\n    ulong in_stack_fffffffffffffd58;\n    ulong in_stack_fffffffffffffd60;\n    ulong in_stack_fffffffffffffd68;\n    ulong in_stack_fffffffffffffd70;\n    ulong in_stack_fffffffffffffd78;\n    ulong in_stack_fffffffffffffd80;\n    ulong in_stack_fffffffffffffd88;\n    ulong in_stack_fffffffffffffd90;\n    ulong in_stack_fffffffffffffd98;\n    ulong in_stack_fffffffffffffda0;\n    ulong in_stack_fffffffffffffda8;\n    ulong in_stack_fffffffffffffdb0;\n    ulong in_stack_fffffffffffffdb8;\n    ulong in_stack_fffffffffffffdc0;\n    uchar in_stack_fffffffffffffdc8;\n    uchar uVar21;\n    unkbyte7 in_stack_fffffffffffffdc9;\n    ulong in_stack_fffffffffffffdd0;\n    ulong in_stack_fffffffffffffdd8;\n    ulong in_stack_fffffffffffffde0;\n    ulong in_stack_fffffffffffffde8;\n    ulong in_stack_fffffffffffffdf0;\n    ulong in_stack_fffffffffffffdf8;\n    ulong in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe10;\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    ulong in_stack_fffffffffffffe28;\n    ulong in_stack_fffffffffffffe30;\n    uint64_t uStack56;\n    \n    uVar19 = in_stack_fffffffffffffc78 >> 0x20;\n    uStack56 = *0x10000f100 ^ auStackY936;\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0x104, &stack0xfffffffffffffcb8);\n    iVar3 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)();\n    uVar6 = in_stack_fffffffffffffc80 >> 0x20;\n    if (iVar3 == 0) {\n        fcn.100005420(0, 0x4bc, 0, 0, CONCAT44(uVar19, 0x10), in_stack_fffffffffffffc80 & 0xffffffff00000000, \n                      in_stack_fffffffffffffc88, CONCAT44(in_stack_fffffffffffffc94, in_stack_fffffffffffffc90), \n                      CONCAT44(in_stack_fffffffffffffc9c, in_stack_fffffffffffffc98), \n                      CONCAT44(in_stack_fffffffffffffca4, in_stack_fffffffffffffca0), \n                      CONCAT44(in_stack_fffffffffffffcac, in_stack_fffffffffffffca8), in_stack_fffffffffffffcb0, \n                      in_stack_fffffffffffffcb8, in_stack_fffffffffffffcc0, in_stack_fffffffffffffcc8, \n                      in_stack_fffffffffffffcd0, in_stack_fffffffffffffcd8, in_stack_fffffffffffffce0, \n                      in_stack_fffffffffffffce8, in_stack_fffffffffffffcf0, in_stack_fffffffffffffcf8, \n                      in_stack_fffffffffffffd00, in_stack_fffffffffffffd08, in_stack_fffffffffffffd10, \n                      in_stack_fffffffffffffd18, in_stack_fffffffffffffd20, in_stack_fffffffffffffd28, \n                      in_stack_fffffffffffffd30, in_stack_fffffffffffffd38, in_stack_fffffffffffffd40, \n                      in_stack_fffffffffffffd48, in_stack_fffffffffffffd50, in_stack_fffffffffffffd58, \n                      in_stack_fffffffffffffd60, in_stack_fffffffffffffd68, in_stack_fffffffffffffd70, \n                      in_stack_fffffffffffffd78, in_stack_fffffffffffffd80, in_stack_fffffffffffffd88, \n                      in_stack_fffffffffffffd90, in_stack_fffffffffffffd98, in_stack_fffffffffffffda0, \n                      in_stack_fffffffffffffda8, in_stack_fffffffffffffdb0, in_stack_fffffffffffffdb8, \n                      in_stack_fffffffffffffdc0, CONCAT71(in_stack_fffffffffffffdc9, in_stack_fffffffffffffdc8), \n                      in_stack_fffffffffffffdd0, in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, \n                      in_stack_fffffffffffffde8, in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, \n                      in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, \n                      in_stack_fffffffffffffe18, in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, \n                      in_stack_fffffffffffffe30);\n        *0x100010488 = fcn.100007924();\n        goto code_r0x0001000071f2;\n    }\n    iVar17 = 0;\n    iVar18 = 0;\n    uVar19 = 0;\n    uVar20 = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)(0, &stack0xfffffffffffffc98, &stack0xfffffffffffffc9c);\n    if (iVar3 == 0) {\ncode_r0x000100007175:\n        uVar21 = 0;\n        sub.msvcrt.dll_memset(&stack0xfffffffffffffdc9, 0, 0x1ff);\n        *0x100010488 = fcn.100007924();\n        uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar13 = &stack0xfffffffffffffdc8 >> 0x20;\n        noname_6 = 0;\n        uVar15 = CONCAT44(uVar6, 0x200);\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar7, 0);\n        uVar16 = 0x4b0;\n    }\n    else {\n        iVar3 = iVar18 * iVar17;\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar3);\n        if (uVar4 == 0) goto code_r0x000100007175;\n        in_stack_fffffffffffffc90 = 0;\n        puVar14 = &stack0xfffffffffffffca4;\n        uVar16 = 0;\n        uVar6 = &stack0xfffffffffffffcac >> 0x20;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(0);\n        uVar7 = puVar14 >> 0x20;\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(&stack0xfffffffffffffcb8);\n            iVar10 = 6;\n            pcVar8 = &stack0xfffffffffffffcb0;\n            do {\n                if ((iVar10 == 4) || (pcVar8[arg1 - &stack0xfffffffffffffcb0] == '\\0')) break;\n                *pcVar8 = pcVar8[arg1 - &stack0xfffffffffffffcb0];\n                pcVar8 = pcVar8 + 1;\n                iVar10 = iVar10 + -1;\n            } while (iVar10 != 0);\n            if (iVar10 == 0) {\n                pcVar8 = pcVar8 + -1;\n            }\n            *pcVar8 = '\\0';\n            uVar2 = 0;\n            iVar5 = 0x200;\n            do {\n                if (iVar3 == iVar5) break;\n                uVar2 = uVar2 + 1;\n                iVar5 = iVar5 * 2;\n            } while (uVar2 < 8);\n            if (uVar2 == 8) {\n                fcn.100005420(0, 0x4c5, 0, 0, CONCAT44(uVar6, 0x10), puVar14 & 0xffffffff00000000, uVar16, \n                              CONCAT44(in_stack_fffffffffffffc94, in_stack_fffffffffffffc90), CONCAT44(iVar18, iVar17), \n                              CONCAT44(in_stack_fffffffffffffca4, uVar19), CONCAT44(in_stack_fffffffffffffcac, uVar20), \n                              in_stack_fffffffffffffcb0, in_stack_fffffffffffffcb8, in_stack_fffffffffffffcc0, \n                              in_stack_fffffffffffffcc8, in_stack_fffffffffffffcd0, in_stack_fffffffffffffcd8, \n                              in_stack_fffffffffffffce0, in_stack_fffffffffffffce8, in_stack_fffffffffffffcf0, \n                              in_stack_fffffffffffffcf8, in_stack_fffffffffffffd00, in_stack_fffffffffffffd08, \n                              in_stack_fffffffffffffd10, in_stack_fffffffffffffd18, in_stack_fffffffffffffd20, \n                              in_stack_fffffffffffffd28, in_stack_fffffffffffffd30, in_stack_fffffffffffffd38, \n                              in_stack_fffffffffffffd40, in_stack_fffffffffffffd48, in_stack_fffffffffffffd50, \n                              in_stack_fffffffffffffd58, in_stack_fffffffffffffd60, in_stack_fffffffffffffd68, \n                              in_stack_fffffffffffffd70, in_stack_fffffffffffffd78, in_stack_fffffffffffffd80, \n                              in_stack_fffffffffffffd88, in_stack_fffffffffffffd90, in_stack_fffffffffffffd98, \n                              in_stack_fffffffffffffda0, in_stack_fffffffffffffda8, in_stack_fffffffffffffdb0, \n                              in_stack_fffffffffffffdb8, in_stack_fffffffffffffdc0, \n                              CONCAT71(in_stack_fffffffffffffdc9, in_stack_fffffffffffffdc8), in_stack_fffffffffffffdd0\n                              , in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, \n                              in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, \n                              in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, \n                              in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, in_stack_fffffffffffffe30);\n            }\n            else {\n                if (((*0x100010ec4 & 8) == 0) || ((in_stack_fffffffffffffca4 & 0x8000) == 0)) {\n                    uVar1 = *(uVar2 * 4 + 0x100011740);\n                    uVar9 = *0x100010ec8;\n                }\n                else {\n                    uVar1 = *(uVar2 * 4 + 0x100011740) * 2;\n                    uVar9 = (*0x100010ec8 >> 2) + *0x100010ec8;\n                }\n                if (((arg2 & 1) == 0) || ((arg2 & 2) == 0)) {\n                    if ((arg2 & 1) == 0) {\n                        bVar11 = uVar9 < uVar4;\n                        bVar12 = uVar9 == uVar4;\n                    }\n                    else {\n                        bVar11 = uVar1 < uVar4;\n                        bVar12 = uVar1 == uVar4;\n                    }\n                }\n                else {\n                    bVar11 = uVar9 + uVar1 < uVar4;\n                    bVar12 = uVar9 + uVar1 == uVar4;\n                }\n                if (bVar11 || bVar12) {\n                    *0x100010488 = 0;\n                }\n                else {\n                    fcn.100002d10(arg3 & 0xffffffff, uVar1, uVar9, &stack0xfffffffffffffcb0);\n                }\n            }\n            goto code_r0x0001000071f2;\n        }\n        uVar21 = 0;\n        sub.msvcrt.dll_memset(&stack0xfffffffffffffdc9, 0, 0x1ff);\n        *0x100010488 = fcn.100007924();\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar13 = &stack0xfffffffffffffdc8 >> 0x20;\n        noname_6 = 0;\n        uVar15 = CONCAT44(uVar7, 0x200);\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar6, 0);\n        uVar16 = 0x4f9;\n    }\n    fcn.100005420(0, uVar16, arg1, &stack0xfffffffffffffdc8, CONCAT44(uVar13, 0x10), uVar15 & 0xffffffff00000000, \n                  noname_6, CONCAT44(in_stack_fffffffffffffc94, in_stack_fffffffffffffc90), CONCAT44(iVar18, iVar17), \n                  CONCAT44(in_stack_fffffffffffffca4, uVar19), CONCAT44(in_stack_fffffffffffffcac, uVar20), \n                  in_stack_fffffffffffffcb0, in_stack_fffffffffffffcb8, in_stack_fffffffffffffcc0, \n                  in_stack_fffffffffffffcc8, in_stack_fffffffffffffcd0, in_stack_fffffffffffffcd8, \n                  in_stack_fffffffffffffce0, in_stack_fffffffffffffce8, in_stack_fffffffffffffcf0, \n                  in_stack_fffffffffffffcf8, in_stack_fffffffffffffd00, in_stack_fffffffffffffd08, \n                  in_stack_fffffffffffffd10, in_stack_fffffffffffffd18, in_stack_fffffffffffffd20, \n                  in_stack_fffffffffffffd28, in_stack_fffffffffffffd30, in_stack_fffffffffffffd38, \n                  in_stack_fffffffffffffd40, in_stack_fffffffffffffd48, in_stack_fffffffffffffd50, \n                  in_stack_fffffffffffffd58, in_stack_fffffffffffffd60, in_stack_fffffffffffffd68, \n                  in_stack_fffffffffffffd70, in_stack_fffffffffffffd78, in_stack_fffffffffffffd80, \n                  in_stack_fffffffffffffd88, in_stack_fffffffffffffd90, in_stack_fffffffffffffd98, \n                  in_stack_fffffffffffffda0, in_stack_fffffffffffffda8, in_stack_fffffffffffffdb0, \n                  in_stack_fffffffffffffdb8, in_stack_fffffffffffffdc0, CONCAT71(in_stack_fffffffffffffdc9, uVar21), \n                  in_stack_fffffffffffffdd0, in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, \n                  in_stack_fffffffffffffde8, in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, \n                  in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, \n                  in_stack_fffffffffffffe18, in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, \n                  in_stack_fffffffffffffe30);\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(&stack0xfffffffffffffcb8);\ncode_r0x0001000071f2:\n    fcn.10000c380(uStack56 ^ auStackY936);\n    return;\n}\n",
        "token_count": 3855
    },
    "10000794": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.10000794c(code *arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    uint64_t arg4;\n    uint32_t uVar7;\n    uchar auStack104 [32];\n    uchar auStack72 [24];\n    uint64_t uStack48;\n    \n    uStack48 = *0x10000f100 ^ auStack104;\n    uVar7 = 0;\n    arg4 = 0;\n    do {\n        fcn.100001b10(auStack72, 0x14, 0x1000019f0, arg4);\n        iVar6 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, auStack72, 10);\n        if (iVar6 == 0) {\ncode_r0x000100007a19:\n            fcn.10000c380(uStack48 ^ auStack104);\n            return;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar6);\n        puVar5 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n        if (puVar5 == NULL) {\n            *0x100010488 = 0x80070714;\n            goto code_r0x000100007a19;\n        }\n        uVar1 = *puVar5;\n        uVar2 = puVar5[1];\n        (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5 + 2);\n        iVar3 = (*arg1)(uVar1, uVar2, puVar5 + 2);\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(puVar5);\n            goto code_r0x000100007a19;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)();\n        uVar7 = uVar7 + 1;\n        arg4 = uVar7;\n    } while( true );\n}\n",
        "token_count": 449
    },
    "10000806": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.10000806c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    uchar auStack280 [32];\n    ulong *puStack248;\n    uint *puStack240;\n    uint auStack232 [2];\n    ulong uStack224;\n    uchar auStack216 [16];\n    uint uStack200;\n    int32_t iStack196;\n    uint32_t uStack192;\n    int32_t iStack184;\n    ulong auStack40 [2];\n    uint64_t uStack24;\n    \n    uStack24 = *0x10000f100 ^ auStack280;\n    auStack232[0] = 0xc;\n    if (*0x10000f414 == -2) {\n        uVar4 = 0;\n        uStack200 = 0x94;\n        *0x10000f414 = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack200);\n        if ((((iVar2 != 0) && (iStack184 == 1)) && (iStack196 == 4)) &&\n           ((uStack192 < 10 && (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4a),  iVar2 != 0)))) {\n            puStack248 = &uStack224;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0xffffffff80000001, 0x100001a00, 0, 0x20019);\n            if (iVar2 == 0) {\n                puStack240 = auStack232;\n                puStack248 = auStack40;\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack224, 0x100001609, 0, auStack216);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack224);\n                if (iVar2 == 0) {\n                    puVar3 = auStack40;\n                    do {\n                        cVar1 = *puVar3;\n                        if ((cVar1 < '0') || ('9' < cVar1)) {\n                            if ('`' < cVar1) {\n                                cVar1 = cVar1 + -0x20;\n                            }\n                            if (5 < cVar1 - 0x41U) goto code_r0x0001000081b7;\n                            uVar4 = uVar4 * 0x10 + cVar1 + -0x37;\n                        }\n                        else {\n                            uVar4 = (uVar4 - 3) * 0x10 + cVar1;\n                        }\n                        puVar3 = (*_sym.imp.USER32.dll_CharNextA)();\n                    } while( true );\n                }\n            }\n        }\n    }\ncode_r0x0001000081df:\n    fcn.10000c380(uStack24 ^ auStack280);\n    return;\ncode_r0x0001000081b7:\n    if ((puVar3 != auStack40) && (((uVar4 & 0x3ff) == 1 || ((uVar4 & 0x3ff) == 0xd)))) {\n        *0x10000f414 = 1;\n    }\n    goto code_r0x0001000081df;\n}\n",
        "token_count": 726
    },
    "100009aa": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.100009aac(ulong *arg1, uint16_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    ulong uVar3;\n    int64_t arg1_00;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    uint16_t uVar7;\n    uint64_t uVar8;\n    uint32_t auStackX8 [2];\n    \n    uVar7 = *(arg1 + 0x10a) & 0xf;\n    if ((*(arg1 + 0x10a) & 0xf) == 0) {\n        uVar7 = *(arg1[0x11] + 4);\n        if (uVar7 < *(arg1 + 0xec) || uVar7 == *(arg1 + 0xec)) {\n            *arg2 = uVar7;\n            sub.msvcrt.dll_memcpy(arg1[0xf], arg1[0xe], uVar7);\n            return 1;\n        }\n    }\n    else {\n        if (uVar7 == 1) {\n            auStackX8[0] = *(arg1 + 0xec);\n            uVar7 = auStackX8[0];\n            iVar4 = fcn.100007d54(arg1[0xc], arg1[0xe], *(arg1[0x11] + 4), arg1[0xf], auStackX8);\n        }\n        else {\n            if (uVar7 != 2) {\n                if (uVar7 != 3) {\n                    puVar5 = *arg1;\n                    *puVar5 = 6;\n                    goto code_r0x000100009c3c;\n                }\n                uVar7 = *arg2;\n                uVar8 = uVar7;\n                piVar2 = arg1[0xc];\n                uVar3 = arg1[0xf];\n                iVar6 = arg1[0xe];\n                auStackX8[0] = uVar7;\n                if (((*piVar2 == 0x4349444c) && (uVar1 = piVar2[0x10],  auStackX8[0] < uVar1 || uVar7 == uVar1)) &&\n                   (*(arg1[0x11] + 4) <= uVar1 + 0x1800)) {\n                    arg1_00 = *(piVar2 + 0x12);\n                    *(arg1_00 + 0x2b10) = *(arg1[0x11] + 4) + 4 + iVar6;\n                    *(arg1_00 + 0x2b08) = iVar6;\n                    *(arg1_00 + 0x2b18) = uVar3;\n                    iVar6 = arg1_00;\n                    fcn.10000a000(arg1_00);\n                    iVar4 = fcn.10000a248(iVar6, uVar8 & 0xffffffff);\n                    if (*(arg1_00 + 0x2edc) < 0x8000) {\n                        *(arg1_00 + 0x2edc) = *(arg1_00 + 0x2edc) + 1;\n                    }\n                    if (-1 < iVar4) {\n                        *(arg1_00 + 0x2b20) = *(arg1_00 + 0x2b20) + iVar4;\n                        *arg2 = iVar4;\n                        return 1;\n                    }\n                }\n                goto code_r0x000100009c33;\n            }\n            uVar7 = *arg2;\n            auStackX8[0] = uVar7;\n            iVar4 = fcn.100007d54(arg1[0xc], arg1[0xe], *(arg1[0x11] + 4), arg1[0xf], auStackX8);\n        }\n        if (iVar4 == 0) {\n            *arg2 = uVar7;\n            return 1;\n        }\n    }\ncode_r0x000100009c33:\n    puVar5 = *arg1;\n    *puVar5 = 7;\ncode_r0x000100009c3c:\n    puVar5[1] = 0;\n    puVar5[2] = 1;\n    return 0;\n}\n",
        "token_count": 948
    },
    "10000a7f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.10000a7f4(int64_t arg1, ulong arg2, int64_t arg3, int64_t arg4)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    ulong var_20h;\n    ulong var_220h;\n    uchar auStack872 [32];\n    uint16_t *puStack840;\n    int64_t iStack824;\n    int64_t iStack816;\n    uint8_t auStack808 [32];\n    uint16_t auStack776 [96];\n    uint16_t auStack584 [256];\n    uint64_t uStack72;\n    \n    uStack72 = *0x10000f100 ^ auStack872;\n    iVar9 = 0;\n    iStack824 = arg4;\n    iStack816 = arg3;\n    do {\n        uVar1 = *(arg1 + 0x2ec0);\n        fcn.10000a05c(arg1, 4);\n        auStack808[iVar9] = uVar1 >> 0x1c;\n        iVar9 = iVar9 + 1;\n    } while (iVar9 < 0x14);\n    if (*(arg1 + 0x2ecc) == 0) {\n        puStack840 = auStack776;\n        fcn.10000bd74(0x14, auStack808, CONCAT71(arg3 >> 8, 8), auStack584);\n        iVar8 = 0;\n        if (0 < arg2) {\n            do {\n                uVar2 = *(arg1 + 0x2ec0);\n                if (uVar2 >> 0x18 < 0x100) {\n                    uVar5 = auStack584[uVar2 >> 0x18];\n                }\n                else {\n                    *(arg1 + 0x2ecc) = 1;\n                    uVar5 = 0;\n                }\n                if (uVar5 < 0) {\n                    uVar3 = 0x800000;\n                    do {\n                        iVar6 = -uVar5;\n                        if ((uVar3 & uVar2) == 0) {\n                            if (0x5d < iVar6 * 2) goto code_r0x00010000a906;\n                            uVar5 = auStack776[iVar6 * 2];\n                        }\n                        else if (iVar6 * 2 + 1U < 0x5e) {\n                            uVar5 = auStack776[iVar6 * 2 + 1];\n                        }\n                        else {\ncode_r0x00010000a906:\n                            *(arg1 + 0x2ecc) = 1;\n                            uVar5 = 0;\n                        }\n                        uVar3 = uVar3 >> 1;\n                    } while (uVar5 < 0);\n                }\n                if ((uVar5 < 0x18) && (-1 < uVar5)) {\n                    if (*(arg1 + 0x2ecc) != 0) break;\n                    fcn.10000a05c(arg1, auStack808[uVar5]);\n                }\n                else {\n                    *(arg1 + 0x2ecc) = 1;\n                }\n                if (*(arg1 + 0x2ecc) != 0) break;\n                iVar9 = iVar8;\n                if (uVar5 == 0x11) {\n                    uVar2 = *(arg1 + 0x2ec0);\n                    fcn.10000a05c(arg1, 4);\n                    iVar7 = (uVar2 >> 0x1c) + 4;\ncode_r0x00010000a9ad:\n                    if (arg2 <= iVar7 + iVar8) {\n                        iVar7 = arg2 - iVar8;\n                    }\n                    if (0 < iVar7) {\n                        sub.msvcrt.dll_memset(iVar9 + arg4, 0, iVar7);\n                        iVar8 = iVar8 + iVar7;\n                    }\n                    iVar8 = iVar8 + -1;\n                }\n                else {\n                    if (uVar5 == 0x12) {\n                        uVar2 = *(arg1 + 0x2ec0);\n                        fcn.10000a05c(arg1, 5);\n                        iVar7 = (uVar2 >> 0x1b) + 0x14;\n                        goto code_r0x00010000a9ad;\n                    }\n                    if (uVar5 == 0x13) {\n                        iVar7 = *(arg1 + 0x2ec0);\n                        fcn.10000a05c(arg1, 1);\n                        iVar7 = 4 - (iVar7 >> 0x1f);\n                        if (arg2 <= iVar7 + iVar8) {\n                            iVar7 = arg2 - iVar8;\n                        }\n                        uVar2 = *(arg1 + 0x2ec0);\n                        if (uVar2 >> 0x18 < 0x100) {\n                            uVar5 = auStack584[uVar2 >> 0x18];\n                        }\n                        else {\n                            *(arg1 + 0x2ecc) = 1;\n                            uVar5 = 0;\n                        }\n                        if (uVar5 < 0) {\n                            uVar3 = 0x800000;\n                            do {\n                                iVar6 = -uVar5;\n                                if ((uVar3 & uVar2) == 0) {\n                                    if (0x5d < iVar6 * 2) goto code_r0x00010000aa80;\n                                    uVar5 = auStack776[iVar6 * 2];\n                                }\n                                else if (iVar6 * 2 + 1U < 0x5e) {\n                                    uVar5 = auStack776[iVar6 * 2 + 1];\n                                }\n                                else {\ncode_r0x00010000aa80:\n                                    *(arg1 + 0x2ecc) = 1;\n                                    uVar5 = 0;\n                                }\n                                uVar3 = uVar3 >> 1;\n                            } while (uVar5 < 0);\n                        }\n                        if ((uVar5 < 0x18) && (-1 < uVar5)) {\n                            if (*(arg1 + 0x2ecc) != 0) break;\n                            fcn.10000a05c(arg1, auStack808[uVar5]);\n                        }\n                        else {\n                            *(arg1 + 0x2ecc) = 1;\n                        }\n                        if (*(arg1 + 0x2ecc) != 0) break;\n                        iVar4 = (*(iVar9 + iStack816) - uVar5) + 0x11;\n                        for (; (0 < iVar7 && (iVar7 = iVar7 + -1,  iVar9 < arg2)); iVar9 = iVar9 + 1) {\n                            *(iVar9 + iStack824) = iVar4 + (iVar4 / 0x11) * -0x11;\n                            iVar8 = iVar8 + 1;\n                        }\n                        iVar8 = iVar8 + -1;\n                        arg4 = iStack824;\n                    }\n                    else {\n                        iVar7 = (*(iVar9 + iStack816) - uVar5) + 0x11;\n                        *(iVar9 + arg4) = iVar7 + (iVar7 / 0x11) * -0x11;\n                    }\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < arg2);\n        }\n    }\n    fcn.10000c380(uStack72 ^ auStack872);\n    return;\n}\n",
        "token_count": 1670
    },
    "10000bd7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.10000bd74(ulong arg1, uint8_t *arg2, ulong noname_2, int64_t arg4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    char cVar9;\n    int16_t *piVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    int32_t *piVar13;\n    uint32_t uVar14;\n    int16_t iVar15;\n    int64_t in_stack_00000028;\n    uchar auStack296 [32];\n    uint8_t *puStack264;\n    uint32_t auStack248 [17];\n    int32_t iStack180;\n    int32_t aiStack168 [16];\n    ulong var_5dh;\n    uchar auStack88 [3];\n    ulong s;\n    ulong var_1h;\n    \n    _auStack88 = *0x10000f100 ^ auStack296;\n    puStack264 = arg2;\n    sub.msvcrt.dll_memset();\n    uVar12 = 0;\n    uVar5 = uVar12;\n    if (arg1 != 0) {\n        do {\n            if (0x10 < *arg2) goto code_r0x00010000bfc4;\n            uVar8 = *arg2;\n            uVar6 = uVar5 + 1;\n            arg2 = arg2 + 1;\n            aiStack168[uVar8] = aiStack168[uVar8] + 1;\n            uVar5 = uVar6;\n        } while (uVar6 < arg1);\n    }\n    auStack248[1] = 0;\n    uVar6 = 1;\n    uVar5 = uVar12;\n    do {\n        cVar9 = uVar6;\n        uVar6 = uVar6 + 1;\n        *(auStack248 + uVar5 + 8) = (*(aiStack168 + uVar5 + 4) << (0x10U - cVar9 & 0x1f)) + *(auStack248 + uVar5 + 4);\n        uVar5 = uVar5 + 4;\n    } while (uVar6 < 0x11);\n    if (iStack180 == 0x10000) {\n        uVar6 = 1;\n        uVar8 = 0x10 - noname_2;\n        if (noname_2 != 0) {\n            do {\n                puVar1 = auStack248 + uVar12 + 4;\n                *puVar1 = *puVar1 >> (uVar8 & 0x1f);\n                cVar9 = uVar6;\n                uVar6 = uVar6 + 1;\n                *(aiStack168 + uVar12 + 4) = 1 << (noname_2 - cVar9 & 0x1f);\n                uVar12 = uVar12 + 4;\n            } while (uVar6 <= noname_2);\n        }\n        if (uVar6 < 0x11) {\n            piVar13 = aiStack168 + uVar6;\n            do {\n                cVar9 = uVar6;\n                uVar6 = uVar6 + 1;\n                *piVar13 = 1 << (0x10U - cVar9 & 0x1f);\n                piVar13 = piVar13 + 1;\n            } while (uVar6 < 0x11);\n        }\n        uVar6 = auStack248[noname_2 + 1] >> (uVar8 & 0x1f);\n        if (uVar6 != 0x10000) {\n            sub.msvcrt.dll_memset(arg4 + uVar6 * 2);\n        }\n        iVar7 = 0;\n        uVar6 = arg1;\n        if (0 < arg1) {\n            do {\n                uVar2 = puStack264[iVar7];\n                if (uVar2 != 0) {\n                    uVar3 = auStack248[uVar2];\n                    uVar14 = uVar3 + aiStack168[uVar2];\n                    if (noname_2 < uVar2) {\n                        auStack248[uVar2] = uVar14;\n                        cVar9 = uVar2 - noname_2;\n                        iVar11 = uVar3 << (noname_2 & 0x1f);\n                        piVar10 = arg4 + (uVar3 >> (uVar8 & 0x3f)) * 2;\n                        do {\n                            if (*piVar10 == 0) {\n                                *(in_stack_00000028 + uVar6 * 4) = 0;\n                                iVar15 = uVar6;\n                                uVar6 = uVar6 + 1;\n                                *piVar10 = -iVar15;\n                            }\n                            if (iVar11 < 0) {\n                                iVar4 = *piVar10 * -2 + 1;\n                            }\n                            else {\n                                iVar4 = *piVar10 * -2;\n                            }\n                            iVar11 = iVar11 * 2;\n                            cVar9 = cVar9 + -1;\n                            piVar10 = in_stack_00000028 + iVar4 * 2;\n                        } while (cVar9 != '\\0');\n                        *piVar10 = iVar7;\n                    }\n                    else {\n                        if (1 << (noname_2 & 0x1f) < uVar14) break;\n                        if (uVar3 < uVar14) {\n                            piVar10 = arg4 + uVar3 * 2;\n                            for (uVar5 = uVar14 - uVar3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                                *piVar10 = iVar7;\n                                piVar10 = piVar10 + 1;\n                            }\n                        }\n                        auStack248[uVar2] = uVar14;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < arg1);\n        }\n    }\n    else if (iStack180 == 0) {\n        sub.msvcrt.dll_memset(arg4, 0, (1 << (noname_2 & 0x3f)) * 2);\n    }\ncode_r0x00010000bfc4:\n    fcn.10000c380(_auStack88 ^ auStack296);\n    return;\n}\n",
        "token_count": 1450
    },
    "10000c3a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.10000c3a8(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar auStack1352 [32];\n    uchar *puStack1320;\n    uchar *puStack1312;\n    uchar *puStack1304;\n    ulong uStack1296;\n    ulong uStack1288;\n    uchar auStack1280 [8];\n    uchar auStack1272 [16];\n    uchar auStack1256 [152];\n    ulong uStack1008;\n    \n    uVar1 = *0x10000f100 ^ auStack1352;\n    (*_sym.imp.KERNEL32.dll_RtlCaptureContext)(auStack1256);\n    iVar2 = (*_sym.imp.KERNEL32.dll_RtlLookupFunctionEntry)(uStack1008, &uStack1288, 0);\n    if (iVar2 != 0) {\n        uStack1296 = 0;\n        puStack1304 = auStack1280;\n        puStack1312 = auStack1272;\n        puStack1320 = auStack1256;\n        (*_sym.imp.KERNEL32.dll_RtlVirtualUnwind)(0, uStack1288, uStack1008, iVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(0x100001560);\n    fcn.10000c380(uVar1 ^ auStack1352);\n    return;\n}\n",
        "token_count": 305
    },
    "10000618": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.100006184(void)\n\n{\n    int32_t iVar1;\n    int64_t arg3;\n    int64_t noname_0;\n    uchar auStack88 [32];\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x10000f100 ^ auStack88;\n    uStack56 = 0;\n    uStack48 = 0;\n    uStack40 = 0;\n    arg3 = fcn.10000820c(auStack32);\n    if ((((arg3 != 0) && (noname_0 = fcn.1000058fc(0x10000f428, 0x8000),  noname_0 != -1)) &&\n        (iVar1 = fcn.10000837c(noname_0, &uStack56, arg3),  iVar1 != 0)) &&\n       (((uStack56 == *0x1000105c8 && (uStack40 == 0)) &&\n        ((uStack40._4_4_ == 0 && (iVar1 = fcn.100005ca8(noname_0),  iVar1 != -1)))))) {\n        fcn.1000082f8(arg3);\n    }\n    fcn.10000c380(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 321
    },
    "1000065c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.1000065cc(int64_t arg1, char *arg2)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar auStack344 [32];\n    uchar auStack312 [272];\n    uint64_t uStack40;\n    \n    uStack40 = *0x10000f100 ^ auStack344;\n    uVar4 = 0;\n    do {\n        fcn.100001b10(auStack312, 0x104, 0x100001878, uVar4);\n        uVar4 = uVar4 + 1;\n        iVar3 = 0x104;\n        pcVar2 = arg2;\n        do {\n            if ((iVar3 == -0x7ffffefa) || (pcVar2[arg1 - arg2] == '\\0')) break;\n            *pcVar2 = pcVar2[arg1 - arg2];\n            pcVar2 = pcVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        if (iVar3 == 0) {\n            pcVar2 = pcVar2 + -1;\n        }\n        *pcVar2 = '\\0';\n        fcn.100007ddc(arg2, 0x104, auStack312);\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg2);\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg2);\n        if (iVar1 == -1) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(arg2, 0);\n            if (iVar1 != 0) {\n                *0x100011400 = 1;\n                goto code_r0x0001000066b1;\n            }\n            goto code_r0x00010000667e;\n        }\n        if (399 < uVar4) {\ncode_r0x00010000667e:\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(arg1, 0x100001884, 0, arg2);\n            if (iVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg2);\n                (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(arg2, 0);\n            }\ncode_r0x0001000066b1:\n            fcn.10000c380(uStack40 ^ auStack344);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 551
    },
    "100006da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.100006da4(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char *arg1_00;\n    char *pcVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t iVar5;\n    ulong in_stack_00000000;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    uint in_stack_ffffffffffffffdc;\n    uint32_t in_stack_ffffffffffffffe4;\n    ulong in_stack_ffffffffffffffe8;\n    ulong in_stack_fffffffffffffff0;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    uVar4 = iVar1 + 0x14;\n    uVar3 = uVar4;\n    arg1_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    if (arg1_00 == NULL) {\n        fcn.100005420(0, 0x4b5, 0, 0, CONCAT44(in_stack_ffffffffffffffdc, 0x10), in_stack_ffffffffffffffe4 << 0x20, \n                      in_stack_ffffffffffffffe8, in_stack_fffffffffffffff0, unaff_RDI, in_stack_00000000, unaff_RBX, \n                      unaff_RBP, unaff_RSI, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                      in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                      in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                      in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                      in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                      in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                      in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                      in_stack_00000180, in_stack_00000188, in_stack_00000190);\n    }\n    else {\n        if ((uVar4 != 0) && (uVar3 < 0x80000000)) {\n            iVar5 = 0x7ffffffe - uVar3;\n            pcVar2 = arg1_00;\n            do {\n                if ((iVar5 + uVar3 == 0) || (pcVar2[arg1 - arg1_00] == '\\0')) break;\n                *pcVar2 = pcVar2[arg1 - arg1_00];\n                pcVar2 = pcVar2 + 1;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (uVar3 == 0) {\n                pcVar2 = pcVar2 + -1;\n            }\n            *pcVar2 = '\\0';\n        }\n        fcn.100007ddc(arg1_00, uVar4, 0x1000018b8);\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg1_00, 0x40000000, 0, 0, 1, 0x4000080, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(arg1_00);\n        if (iVar5 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg1);\n            if ((uVar4 != 0xffffffff) && ((uVar4 & 0x10) != 0)) {\n                *0x100010488 = 0;\n                return 1;\n            }\n        }\n    }\n    *0x100010488 = fcn.100007924();\n    return 0;\n}\n",
        "token_count": 1478
    },
    "100007bb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.100007bbc(void)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    uchar auStack328 [32];\n    char acStack296 [272];\n    uint64_t uStack24;\n    \n    uStack24 = *0x10000f100 ^ auStack328;\n    iVar3 = 0x104;\n    pcVar2 = acStack296;\n    do {\n        if ((iVar3 == -0x7ffffefa) || (pcVar2[0x100010670 - acStack296] == '\\0')) break;\n        *pcVar2 = pcVar2[0x100010670 - acStack296];\n        pcVar2 = pcVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (iVar3 == 0) {\n        pcVar2 = pcVar2 + -1;\n    }\n    *pcVar2 = '\\0';\n    fcn.100007ddc(acStack296, 0x104, 0x1000016b0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(acStack296);\n    if ((uVar1 == 0xffffffff) || ((uVar1 & 0x10) != 0)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x1000016b0);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(acStack296, 0, 8);\n    }\n    fcn.10000c380(uStack24 ^ auStack328);\n    return;\n}\n",
        "token_count": 363
    },
    "10000874": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_bp_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.100008744(ulong *arg1, ulong arg2)\n\n{\n    char *arg1_00;\n    uint *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int16_t in_R8W;\n    int16_t in_R9W;\n    int64_t iVar4;\n    uchar auStack136 [32];\n    uint16_t uStack104;\n    ushort uStack102;\n    int32_t aiStack96 [6];\n    ulong var_40h;\n    ulong s2;\n    uint64_t uStack56;\n    ulong var_20h;\n    ulong var_bp_18h;\n    ulong var_bp_10h;\n    \n    uStack56 = *0x10000f100 ^ auStack136;\n    arg1_00 = arg1 + 0x712;\n    iVar4 = 0x101;\n    pcVar3 = arg1_00;\n    do {\n        if ((iVar4 == -0x7ffffefd) || (pcVar3[arg1 + (0x611 - arg1_00)] == '\\0')) break;\n        *pcVar3 = pcVar3[arg1 + (0x611 - arg1_00)];\n        pcVar3 = pcVar3 + 1;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    if (iVar4 == 0) {\n        pcVar3 = pcVar3 + -1;\n    }\n    *pcVar3 = '\\0';\n    fcn.100001a58(arg1_00, 0x101, arg2);\n    iVar4 = (*arg1[3])(arg1_00, 0x8000, 0x180);\n    arg1[0x1b] = iVar4;\n    if (iVar4 == -1) {\ncode_r0x000100008add:\n        arg1 = *arg1;\n        *arg1 = 1;\n    }\n    else {\n        iVar4 = (*arg1[3])(arg1_00, 0x8000, 0x180);\n        arg1[0x1a] = iVar4;\n        if (iVar4 == -1) goto code_r0x000100008add;\n        iVar2 = (*arg1[4])(arg1[0x1b], aiStack96, 0x24);\n        if ((iVar2 == 0x24) && (aiStack96[0] == 0x4643534d)) {\n            if (var_40h != 0x103) {\n                puVar1 = *arg1;\n                *puVar1 = 3;\n                puVar1[1] = var_40h;\n                puVar1[2] = 1;\n                goto code_r0x000100008ae9;\n            }\n            if ((in_R9W != -1) && ((in_R8W != s2 || (in_R9W != s2._2_2_)))) {\n                arg1 = *arg1;\n                *arg1 = 10;\n                goto code_r0x000100008ae3;\n            }\n            sub.msvcrt.dll_memcpy();\n            uStack104 = 0;\n            uStack102 = 0;\n            if (((*(arg1 + 0xb6) & 4) != 0) && ((iVar2 = (*arg1[4])(),  iVar2 != 4 || (60000 < uStack104))))\n            goto code_r0x00010000882e;\n            if (*(arg1 + 0x1f) != uStack104) {\n                if (arg1[0x12] != 0) {\n                    (*arg1[1])();\n                    arg1[0x12] = 0;\n                }\n                *(arg1 + 0x1f) = uStack104;\n                if (uStack104 == 0) goto code_r0x000100008950;\n                iVar4 = (*arg1[2])();\n                arg1[0x12] = iVar4;\n                if (iVar4 != 0) goto code_r0x000100008950;\ncode_r0x000100008941:\n                arg1 = *arg1;\n                *arg1 = 5;\n                goto code_r0x000100008ae3;\n            }\ncode_r0x000100008950:\n            if ((*(arg1 + 0x1f) != 0) && (iVar2 = (*arg1[4])(arg1[0x1b]),  *(arg1 + 0x1f) != iVar2))\n            goto code_r0x00010000882e;\n            iVar2 = uStack102 + 8;\n            if (arg1[0x10] == 0) {\n                *(arg1 + 0xfc) = iVar2;\n                iVar4 = (*arg1[2])(iVar2);\n                arg1[0x10] = iVar4;\n                if (iVar4 == 0) goto code_r0x000100008941;\ncode_r0x0001000089a0:\n                iVar2 = uStack102._1_1_ + 8;\n                if (arg1[0x11] == 0) {\n                    *(arg1 + 0x20) = iVar2;\n                    iVar4 = (*arg1[2])(iVar2);\n                    arg1[0x11] = iVar4;\n                    if (iVar4 == 0) goto code_r0x000100008941;\n                    sub.msvcrt.dll_memset(iVar4, 0, *(arg1 + 0x20));\n                }\n                else if (iVar2 != *(arg1 + 0x20)) goto code_r0x0001000089e6;\n                if ((*(arg1 + 0xb6) & 1) == 0) {\n                    *(arg1 + 0x20d) = 0;\n                    *(arg1 + 0x30e) = 0;\n                }\n                else {\n                    iVar2 = fcn.1000094e8(arg1 + 0x20d, arg1);\n                    if ((iVar2 == 0) || (iVar2 = fcn.1000094e8(arg1 + 0x30e, arg1),  iVar2 == 0))\n                    goto code_r0x000100008ae9;\n                }\n                if ((*(arg1 + 0xb6) & 2) == 0) {\n                    *(arg1 + 0x40f) = 0;\n                    *(arg1 + 0xa2) = 0;\n                }\n                else {\n                    iVar2 = fcn.1000094e8(arg1 + 0x40f, arg1);\n                    if ((iVar2 == 0) || (iVar2 = fcn.1000094e8(arg1 + 0xa2, arg1),  iVar2 == 0))\n                    goto code_r0x000100008ae9;\n                }\n                iVar2 = (*arg1[7])(arg1[0x1b], 0, 1);\n                *(arg1 + 0xb) = iVar2;\n                if ((iVar2 != -1) && (iVar2 = (*arg1[7])(arg1[0x1b], *(arg1 + 0x15), 0),  iVar2 != -1)) {\n                    *(arg1 + 0x104) = *(arg1 + 0xb4);\n                    fcn.100008f90(arg1);\n                    goto code_r0x000100008ae9;\n                }\n                arg1 = *arg1;\n                *arg1 = 4;\n            }\n            else {\n                if (iVar2 == *(arg1 + 0xfc)) goto code_r0x0001000089a0;\ncode_r0x0001000089e6:\n                arg1 = *arg1;\n                *arg1 = 9;\n            }\n        }\n        else {\ncode_r0x00010000882e:\n            arg1 = *arg1;\n            *arg1 = 2;\n        }\n    }\ncode_r0x000100008ae3:\n    *(arg1 + 1) = 1;\ncode_r0x000100008ae9:\n    fcn.10000c380(uStack56 ^ auStack136);\n    return;\n}\n",
        "token_count": 1861
    },
    "10000932": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.100009324(ulong *arg1, ulong arg2)\n\n{\n    ushort uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    \n    iVar3 = (*arg1[4])(arg1[0x1a], arg1[0x11]);\n    if ((*(arg1 + 0x20) == iVar3) &&\n       (uVar5 = *(arg1[0x11] + 4) + arg2,  uVar5 < *(arg1 + 0x1e) || uVar5 == *(arg1 + 0x1e))) {\n        uVar5 = (*arg1[4])(arg1[0x1a]);\n        piVar2 = arg1[0x11];\n        if (*(piVar2 + 1) == uVar5) {\n            iVar3 = *piVar2;\n            if (iVar3 != 0) {\n                uVar5 = fcn.100009dc8(arg2 + arg1[0xe], *(piVar2 + 1), 0);\n                iVar4 = fcn.100009dc8(piVar2 + 1, *(arg1 + 0x20) - 4, uVar5);\n                if (iVar4 != iVar3) goto code_r0x0001000094ae;\n            }\n            *(piVar2 + 1) = *(piVar2 + 1) + arg2;\n            if ((arg2 != 0) || (uVar6 = 0,  *(arg1[0x11] + 6) == 0)) {\n                uVar6 = 1;\n            }\n            if (arg1[10] == 0) {\n                return 1;\n            }\n            *(arg1 + 0x10b) = 2;\n            arg1[0x10c] = arg1[0xd];\n            *(arg1 + 0x10e) = *(arg1 + 0x20) + -8;\n            if (*(arg1 + 0x20) + -8 == 0) {\n                arg1[0x10d] = 0;\n            }\n            else {\n                arg1[0x10d] = arg1[0x11] + 8;\n            }\n            arg1[0x10f] = arg2 + arg1[0xe];\n            uVar1 = *(arg1[0x11] + 4);\n            *(arg1 + 0x884) = uVar6;\n            *(arg1 + 0x110) = uVar1;\n            *(arg1 + 0x111) = arg2;\n            iVar3 = (*arg1[10])(arg1 + 0x10b);\n            if (iVar3 != -1) {\n                return 1;\n            }\n            arg1 = *arg1;\n            *arg1 = 0xb;\n            goto code_r0x0001000094b8;\n        }\n    }\ncode_r0x0001000094ae:\n    arg1 = *arg1;\n    *arg1 = 4;\ncode_r0x0001000094b8:\n    *(arg1 + 1) = 1;\n    return 0;\n}\n",
        "token_count": 722
    },
    "1000094e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.1000094e8(char *arg1, ulong *arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    iVar4 = (*arg2[7])(arg2[0x1b], 0, 1);\n    iVar5 = (*arg2[4])(arg2[0x1b], arg1, 0x100);\n    if (0 < iVar5) {\n        cVar2 = arg1[0xff];\n        iVar6 = -1;\n        arg1[0xff] = '\\0';\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar1 = *arg1;\n            arg1 = arg1 + 1;\n        } while (cVar1 != '\\0');\n        if (((~iVar6 < 0x100) || (cVar2 == '\\0')) && (iVar4 = (*arg2[7])(arg2[0x1b], ~iVar6 + iVar4, 0),  iVar4 != -1))\n        {\n            return 1;\n        }\n    }\n    puVar3 = *arg2;\n    *puVar3 = 4;\n    puVar3[1] = 0;\n    puVar3[2] = 1;\n    return 0;\n}\n",
        "token_count": 318
    },
    "10000959": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.100009594(ulong *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = (*arg1[7])(arg1[0x1b], 0, 1);\n    if (iVar1 == -1) {\n        arg1 = *arg1;\n        *arg1 = 4;\n    }\n    else {\n        *(arg1 + 0x103) = iVar1;\n        *(arg1 + 0x852) = *(arg1 + 0x104);\n        *(arg1 + 0x84e) = *(arg1 + 0x17);\n        arg1[0x107] = arg1[0xd];\n        iVar2 = (*arg1[9])(5, arg1 + 0x103);\n        if ((iVar2 != -1) &&\n           (((*(arg1 + 0x104) = *(arg1 + 0x852),  *(arg1 + 0x852) == 0 || (*(arg1 + 0x103) == iVar1)) ||\n            (iVar1 = (*arg1[7])(arg1[0x1b], *(arg1 + 0x103), 0),  iVar1 != -1)))) {\n            return 1;\n        }\n        arg1 = *arg1;\n        *arg1 = 0xb;\n    }\n    *(arg1 + 1) = 1;\n    return 0;\n}\n",
        "token_count": 317
    },
    "100002cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool fcn.100002cbc(char *arg1, char *arg2)\n\n{\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint in_stack_ffffffffffffffec;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    fcn.100005420(0, 0x4f0, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), in_stack_fffffffffffffff4 << 0x20, \n                  unaff_RDI, in_stack_00000000, unaff_RBX, unaff_RSI, in_stack_00000018, in_stack_00000020, \n                  in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                  in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                  in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                  in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                  in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                  in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                  in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                  in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                  in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                  in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n    return *arg1 == *arg2;\n}\n",
        "token_count": 1000
    },
    "10000345": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.100003458(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint in_stack_ffffffffffffffec;\n    uint in_stack_fffffffffffffff4;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    if ((-1 < iVar2) && (5 < iVar2)) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x100001728);\n        if (iVar4 != 0) {\n            pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, 0x100001748);\n            if (pcVar5 != NULL) {\n                (*pcVar5)(0, 1, 0);\n            }\n        }\n    }\n    *0x100010488 = 0;\n    iVar2 = fcn.100003594(arg1, arg3);\n    if (iVar2 != 0) {\n        iVar3 = fcn.1000038a8();\n        fcn.100003b1c();\n        uVar1 = *0x100010ebc;\n        iVar2 = *0x1000105a4;\n        if (((iVar3 != 0) && (*0x10001141a == '\\0')) && ((*0x100010ebc & 1) != 0)) {\n            if (((*0x100010ebc & 2) == 0) && (*0x10001048c == 0)) {\n                iVar3 = fcn.100002b98();\n                if (iVar2 == iVar3) goto code_r0x000100003563;\n            }\n            if ((uVar1 & 4) == 0) {\n                iVar2 = fcn.100005420(0, 0x522, 0x100001609, 0, CONCAT44(in_stack_ffffffffffffffec, 0x40), \n                                      CONCAT44(in_stack_fffffffffffffff4, 4), unaff_RDI, in_stack_00000000, unaff_RBX, \n                                      unaff_RSI, in_stack_00000018, in_stack_00000020, in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                                      in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, \n                                      in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, \n                                      in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, \n                                      in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, \n                                      in_stack_00000150, in_stack_00000158, in_stack_00000160, in_stack_00000168, \n                                      in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n                if (iVar2 != 6) goto code_r0x000100003563;\n            }\n            if (*0x100010490 == 0) {\n                (*_sym.imp.USER32.dll_ExitWindowsEx)(2);\n            }\n            else {\n                fcn.100002564();\n            }\n        }\n    }\ncode_r0x000100003563:\n    if (*0x100010458 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return *0x100010488;\n}\n",
        "token_count": 1477
    },
    "1000046d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1000046dc(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    ulong in_stack_ffffffffffffffe8;\n    uint uVar4;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    uVar4 = in_stack_ffffffffffffffe8 >> 0x20;\n    uVar1 = fcn.100005680(0x1000017a8, 0, 0);\n    *0x100010ed0 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uVar1 + 1);\n    if (*0x100010ed0 == 0) {\n        fcn.100005420(0, 0x4b5, 0, 0, CONCAT44(uVar4, 0x10), in_stack_fffffffffffffff4 << 0x20, unaff_RBX, \n                      in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n        *0x100010488 = fcn.100007924();\n    }\n    else {\n        iVar2 = fcn.100005680(0x1000017a8, *0x100010ed0, uVar1);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*0x100010ed0);\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_LocalFree)(*0x100010ed0);\n            }\n            else {\n                iVar3 = fcn.100007c80(0x7d1, 0, 0x100003cf4, 0);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(*0x100010ed0);\n                if (iVar3 == 0) {\n                    *0x100010488 = 0x800704c7;\n                    return 0;\n                }\n            }\n            *0x100010488 = 0;\n            return 1;\n        }\n        fcn.100005420(0, 0x4b1, 0, 0, CONCAT44(uVar4, 0x10), in_stack_fffffffffffffff4 << 0x20, unaff_RBX, \n                      in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(*0x100010ed0);\n        *0x100010488 = 0x80070714;\n    }\n    return 0;\n}\n",
        "token_count": 1826
    },
    "10000500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.100005008(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg2;\n    ulong arg2_00;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    int64_t arg3;\n    ulong in_stack_00000000;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint uVar3;\n    uint in_stack_ffffffffffffffec;\n    uint32_t in_stack_fffffffffffffff0;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    uVar1 = fcn.100005680(0x100001800, 0, 0);\n    arg2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uVar1 + 1 << 3);\n    if (arg2 == 0) {\n        fcn.100005420(0, 0x4b5, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), \n                      CONCAT44(in_stack_fffffffffffffff4, in_stack_fffffffffffffff0 & arg2), unaff_RDI, \n                      in_stack_00000000, unaff_RBX, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n        return;\n    }\n    iVar2 = fcn.100005680(0x100001800, arg2, uVar1);\n    if (iVar2 == 0) {\n        arg2_00 = 0x4b1;\n        uVar3 = 0x10;\n        arg3 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg2, 0x1000017b0);\n        if (iVar2 == 0) goto code_r0x0001000050be;\n        arg2_00 = 0x3e9;\n        uVar3 = 0x40;\n        arg3 = arg2;\n    }\n    fcn.100005420(0, arg2_00, arg3, 0, CONCAT44(in_stack_ffffffffffffffec, uVar3), in_stack_fffffffffffffff4 << 0x20, \n                  unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                  in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                  in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                  in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                  in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                  in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                  in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                  in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                  in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                  in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                  in_stack_00000190, in_stack_00000198, in_stack_000001a0);\ncode_r0x0001000050be:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg2);\n    return;\n}\n",
        "token_count": 1748
    },
    "1000057e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1000057e8(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    int64_t iVar5;\n    ulong in_stack_00000000;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint in_stack_ffffffffffffffec;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    ppcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40);\n    if (ppcVar2 == NULL) {\n        fcn.100005420(*0x100010448, 0x4b5, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), \n                      in_stack_fffffffffffffff4 << 0x20, unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, \n                      in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                      in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                      in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                      in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                      in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                      in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                      in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                      in_stack_00000180, in_stack_00000188, in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg1);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 1);\n        *ppcVar2 = pcVar3;\n        if (pcVar3 != NULL) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg1);\n            pcVar3 = *ppcVar2;\n            uVar4 = iVar1 + 1;\n            if ((iVar1 + 1 != 0) && (uVar4 < 0x80000000)) {\n                iVar5 = 0x7ffffffe - uVar4;\n                arg1 = arg1 - pcVar3;\n                do {\n                    if ((iVar5 + uVar4 == 0) || (pcVar3[arg1] == '\\0')) break;\n                    *pcVar3 = pcVar3[arg1];\n                    pcVar3 = pcVar3 + 1;\n                    uVar4 = uVar4 - 1;\n                } while (uVar4 != 0);\n                if (uVar4 == 0) {\n                    pcVar3 = pcVar3 + -1;\n                }\n                *pcVar3 = '\\0';\n            }\n            ppcVar2[1] = *0x100010668;\n            *0x100010668 = ppcVar2;\n            return 1;\n        }\n        fcn.100005420(*0x100010448, 0x4b5, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), \n                      in_stack_fffffffffffffff4 << 0x20, unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, \n                      in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                      in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                      in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                      in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                      in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                      in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                      in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                      in_stack_00000180, in_stack_00000188, in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(ppcVar2);\n    }\n    return 0;\n}\n",
        "token_count": 1864
    },
    "10000625": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.100006254(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t arg2_00;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint in_stack_ffffffffffffffec;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    *0x1000105c8 = fcn.100005680(0x100001848, 0, 0);\n    (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0x100001848);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0);\n    *0x1000105c0 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar3);\n    if (*0x1000105c0 == 0) {\n        return 0;\n    }\n    if (*0x100010448 != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x100010448, 0x842);\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar3, 0);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x100010448, 0x841);\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar3);\n    }\n    iVar1 = fcn.100006184();\n    if (iVar1 == 0) {\n        arg2_00 = 0x4ba;\n    }\n    else {\n        arg2 = fcn.10000820c(0x1000105cc);\n        if ((arg2 != 0) &&\n           ((iVar1 = fcn.100008458(0x1000105c0, arg2),  iVar1 == 0 || (iVar2 = fcn.1000082f8(arg2),  iVar2 != 0))))\n        goto code_r0x000100006362;\n        arg2_00 = *0x1000105cc + 0x514;\n    }\n    fcn.100005420(*0x100010448, arg2_00, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), \n                  in_stack_fffffffffffffff4 << 0x20, unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, \n                  in_stack_00000018, in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                  in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                  in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                  in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                  in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                  in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                  in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                  in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                  in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                  in_stack_00000180, in_stack_00000188, in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n    iVar1 = 0;\ncode_r0x000100006362:\n    if (*0x1000105c0 != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)();\n        *0x1000105c0 = 0;\n    }\n    if ((iVar1 == 0) && (*0x10001065c == 0)) {\n        fcn.100005420(0, 0x4f8, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), in_stack_fffffffffffffff4 << 0x20, \n                      unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n    }\n    if (((*0x100011418 & 1) == 0) && ((*0x100010ec4 & 1) == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x100010448, 0xfa1, iVar1, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 2004
    },
    "1000064a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1000064a4(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg2;\n    ulong unaff_RBX;\n    ulong unaff_RDI;\n    ulong in_stack_00000000;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint in_stack_ffffffffffffffec;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    uVar1 = fcn.100005680(0x100001870, 0, 0);\n    arg2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uVar1 + 1);\n    if (arg2 == 0) {\n        fcn.100005420(0, 0x4b5, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), in_stack_fffffffffffffff4 << 0x20, \n                      unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n        *0x100010488 = fcn.100007924();\n    }\n    else {\n        iVar2 = fcn.100005680(0x100001870, arg2, uVar1);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg2, 0x1000017b0);\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg2);\n            }\n            else {\n                iVar2 = fcn.100005420(0, 0x3e9, arg2, 0, CONCAT44(in_stack_ffffffffffffffec, 0x20), \n                                      CONCAT44(in_stack_fffffffffffffff4, 4), unaff_RDI, in_stack_00000000, unaff_RBX, \n                                      in_stack_00000010, in_stack_00000018, in_stack_00000020, in_stack_00000028, \n                                      in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                                      in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                                      in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, \n                                      in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, \n                                      in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, \n                                      in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                                      in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, \n                                      in_stack_00000150, in_stack_00000158, in_stack_00000160, in_stack_00000168, \n                                      in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg2);\n                if (iVar2 != 6) {\n                    *0x100010488 = 0x800704c7;\n                    return 0;\n                }\n                *0x100010488 = 0;\n            }\n            return 1;\n        }\n        fcn.100005420(0, 0x4b1, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), in_stack_fffffffffffffff4 << 0x20, \n                      unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                      in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, \n                      in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, \n                      in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, \n                      in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                      in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, \n                      in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, \n                      in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, \n                      in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                      in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, in_stack_00000188, \n                      in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(arg2);\n        *0x100010488 = 0x80070714;\n    }\n    return 0;\n}\n",
        "token_count": 2212
    },
    "100007c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.100007c80(ulong lpName, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong unaff_R12;\n    ulong in_stack_00000000;\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    ulong in_stack_ffffffffffffffe8;\n    uint uVar3;\n    uint32_t in_stack_fffffffffffffff4;\n    \n    uVar1 = *0x100010ee0;\n    uVar3 = in_stack_ffffffffffffffe8 >> 0x20;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(*0x100010ee0, lpName);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 != 0)) {\n        if (arg4 == 0) {\n            arg4 = 0;\n        }\n        uVar3 = arg4 >> 0x20;\n        iVar2 = (*_sym.imp.USER32.dll_DialogBoxIndirectParamA)(uVar1, iVar2);\n        (*_sym.imp.KERNEL32.dll_FreeResource)();\n        if (iVar2 != -1) {\n            return iVar2;\n        }\n    }\n    fcn.100005420(0, 0x4fb, 0, 0, CONCAT44(uVar3, 0x10), in_stack_fffffffffffffff4 << 0x20, unaff_R12, in_stack_00000000\n                  , unaff_RBX, unaff_RBP, unaff_RSI, unaff_RDI, in_stack_00000028, in_stack_00000030, in_stack_00000038\n                  , in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                  in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, \n                  in_stack_00000090, in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, \n                  in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, \n                  in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                  in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, \n                  in_stack_00000130, in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, \n                  in_stack_00000158, in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, \n                  in_stack_00000180, in_stack_00000188, in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n    return in_stack_00000028;\n}\n",
        "token_count": 1205
    },
    "10000a11": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.10000a11c(int64_t arg1, char *arg2, ulong arg3)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    \n    if (arg3 < 7) {\n        *(arg1 + 0x2ed8) = *(arg1 + 0x2ed8) + arg3;\n    }\n    else {\n        uVar7 = *(arg1 + 0x2ed8) + arg3;\n        if (uVar7 < 10) {\n            *(arg1 + 0x2ed8) = uVar7;\n        }\n        else {\n            uVar2 = *(arg2 + arg3 + -6);\n            uVar1 = *(arg2 + arg3 + -2);\n            *(arg2 + (arg3 + -6)) = 0xe8e8e8e8;\n            *(arg2 + arg3 + -6 + 4) = 0xe8e8;\n            uVar7 = *(arg1 + 0x2ed8) + -10 + arg3;\n            pcVar8 = arg2;\n            while( true ) {\n                if (*pcVar8 != -0x18) {\n                    iVar6 = *(arg1 + 0x2ed8);\n                    do {\n                        iVar6 = iVar6 + 1;\n                        pcVar8 = pcVar8 + 1;\n                        *(arg1 + 0x2ed8) = iVar6;\n                    } while (*pcVar8 != -0x18);\n                }\n                uVar3 = *(arg1 + 0x2ed8);\n                if (uVar7 <= uVar3) break;\n                uVar4 = *(arg1 + 0x2ed4);\n                uVar5 = *(pcVar8 + 1);\n                if (uVar5 < uVar4) {\n                    uVar4 = -uVar3;\ncode_r0x00010000a1f1:\n                    iVar6 = uVar5 + uVar4;\n                    pcVar8[1] = iVar6;\n                    pcVar8[2] = iVar6 >> 8;\n                    pcVar8[4] = iVar6 >> 0x18;\n                    pcVar8[3] = iVar6 >> 0x10;\n                }\n                else if (-uVar5 <= uVar3) goto code_r0x00010000a1f1;\n                pcVar8 = pcVar8 + 5;\n                *(arg1 + 0x2ed8) = *(arg1 + 0x2ed8) + 5;\n            }\n            *(arg1 + 0x2ed8) = uVar7 + 10;\n            *(arg2 + arg3 + -6) = uVar2;\n            *(arg2 + arg3 + -2) = uVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 668
    },
    "10000323": {
        "rules": [
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d",
            "search for credit card data/546f8dc683b8415fa126b38355d21de5"
        ],
        "decompiled_code": "\nvoid fcn.100003238(uint8_t *arg1, uint8_t *arg2, uint8_t *arg3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    uchar auStack344 [32];\n    uint8_t auStack312 [272];\n    uint64_t uStack40;\n    \n    uStack40 = *0x10000f100 ^ auStack344;\n    puVar8 = NULL;\n    if (*arg1 != 0) {\n        puVar6 = *0x100010ee0;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100010ee0, auStack312, 0x104);\n        uVar1 = *arg1;\n        while (puVar4 = arg1,  uVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(puVar6 & 0xffffffffffffff00 | uVar1);\n            *arg3 = *puVar4;\n            if (iVar3 != 0) {\n                arg3[1] = puVar4[1];\n            }\n            if (*puVar4 == 0x23) {\n                puVar4 = (*_sym.imp.USER32.dll_CharNextA)(puVar4);\n                cVar2 = (*_sym.imp.USER32.dll_CharUpperA)(*puVar4);\n                puVar6 = puVar8;\n                puVar7 = arg3;\n                if (cVar2 == 'D') {\n                    fcn.100007e68(auStack312);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(auStack312);\n                    pcVar5 = (*_sym.imp.USER32.dll_CharPrevA)(auStack312, auStack312 + iVar3);\n                    if (pcVar5 != NULL) {\n                        cVar2 = *pcVar5;\n                        if (*pcVar5 == '\\\\') {\n                            cVar2 = '\\0';\n                        }\n                        *pcVar5 = cVar2;\n                    }\n                    if ((arg2 <= arg3) && (arg3 - arg2 < 0x401)) {\n                        puVar6 = arg2 + (0x400 - arg3);\n                    }\n                    if ((puVar6 != NULL) && (puVar6 < 0x80000000)) {\n                        iVar9 = 0x7ffffffe - puVar6;\n                        do {\n                            if ((puVar6 + iVar9 == NULL) || (puVar7[auStack312 + -arg3] == 0)) break;\n                            *puVar7 = puVar7[auStack312 + -arg3];\n                            puVar7 = puVar7 + 1;\n                            puVar6 = puVar6 + -1;\n                        } while (puVar6 != NULL);\ncode_r0x0001000033e1:\n                        if (puVar6 == NULL) {\n                            puVar7 = puVar7 + -1;\n                        }\n                        *puVar7 = 0;\n                    }\n                }\n                else {\n                    cVar2 = (*_sym.imp.USER32.dll_CharUpperA)(*puVar4);\n                    if (cVar2 != 'E') {\n                        if (*puVar4 == 0x23) goto code_r0x000100003402;\n                        goto code_r0x00010000340e;\n                    }\n                    if ((arg2 <= arg3) && (arg3 - arg2 < 0x401)) {\n                        puVar6 = arg2 + (0x400 - arg3);\n                    }\n                    if ((puVar6 != NULL) && (puVar6 < 0x80000000)) {\n                        iVar9 = 0x7ffffffe - puVar6;\n                        do {\n                            if ((puVar6 + iVar9 == NULL) || (puVar7[auStack312 + -arg3] == 0)) break;\n                            *puVar7 = puVar7[auStack312 + -arg3];\n                            puVar7 = puVar7 + 1;\n                            puVar6 = puVar6 + -1;\n                        } while (puVar6 != NULL);\n                        goto code_r0x0001000033e1;\n                    }\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg3);\n                arg3 = arg3 + iVar3;\n            }\n            else {\ncode_r0x000100003402:\n                arg3 = (*_sym.imp.USER32.dll_CharNextA)(arg3);\n            }\ncode_r0x00010000340e:\n            arg1 = (*_sym.imp.USER32.dll_CharNextA)();\n            uVar1 = *arg1;\n            puVar6 = puVar4;\n        }\n        *arg3 = 0;\n    }\n    fcn.10000c380(uStack40 ^ auStack344);\n    return;\n}\n",
        "token_count": 1098
    },
    "1000038a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.1000038a8(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint *puVar5;\n    ulong arg2;\n    bool bVar6;\n    uchar auStackY616 [32];\n    ulong in_stack_fffffffffffffdb8;\n    uint uVar7;\n    uint32_t in_stack_fffffffffffffdc4;\n    ulong in_stack_fffffffffffffdc8;\n    ulong in_stack_fffffffffffffdd0;\n    ulong in_stack_fffffffffffffdd8;\n    ulong in_stack_fffffffffffffde0;\n    ulong in_stack_fffffffffffffde8;\n    ulong in_stack_fffffffffffffdf0;\n    ulong in_stack_fffffffffffffdf8;\n    ulong in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe10;\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    ulong in_stack_fffffffffffffe28;\n    ulong in_stack_fffffffffffffe30;\n    ulong in_stack_fffffffffffffe38;\n    ulong in_stack_fffffffffffffe40;\n    ulong in_stack_fffffffffffffe48;\n    ulong in_stack_fffffffffffffe50;\n    ulong in_stack_fffffffffffffe58;\n    ulong in_stack_fffffffffffffe60;\n    ulong in_stack_fffffffffffffe68;\n    ulong in_stack_fffffffffffffe70;\n    ulong in_stack_fffffffffffffe78;\n    ulong in_stack_fffffffffffffe80;\n    ulong in_stack_fffffffffffffe88;\n    ulong in_stack_fffffffffffffe90;\n    ulong in_stack_fffffffffffffe98;\n    ulong in_stack_fffffffffffffea0;\n    ulong in_stack_fffffffffffffea8;\n    ulong in_stack_fffffffffffffeb0;\n    ulong in_stack_fffffffffffffeb8;\n    ulong in_stack_fffffffffffffec0;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    ulong in_stack_fffffffffffffed8;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    ulong in_stack_ffffffffffffff48;\n    ulong in_stack_ffffffffffffff50;\n    ulong in_stack_ffffffffffffff58;\n    ulong in_stack_ffffffffffffff60;\n    ulong in_stack_ffffffffffffff68;\n    ulong in_stack_ffffffffffffff70;\n    \n    uVar7 = in_stack_fffffffffffffdb8 >> 0x20;\n    uVar2 = *0x10000f100 ^ auStackY616;\n    if (*0x100011418 == 0) {\n        if (*0x100011404 == 0) {\n            iVar1 = fcn.1000064a4();\n            if (iVar1 == 0) goto code_r0x000100003af5;\n            if (*0x100011418 != 0) goto code_r0x0001000038fc;\n        }\n        iVar1 = fcn.1000046dc();\n        if (iVar1 == 0) goto code_r0x000100003af5;\n    }\ncode_r0x0001000038fc:\n    iVar1 = fcn.1000063e4();\n    if ((iVar1 == 0) || (iVar1 = fcn.1000068cc(),  iVar1 == 0)) goto code_r0x000100003af5;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&stack0xfffffffffffffdc8);\n    fcn.100007ddc(&stack0xfffffffffffffdc8, 0x105, 0x100001610);\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&stack0xfffffffffffffdc8);\n    if ((iVar3 != 0) && (pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3),  pcVar4 != NULL)) {\n        (*pcVar4)(0x100010670);\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n    if ((*0x100011404 == 0) && (*0x100010ec0 == 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&stack0xfffffffffffffed8, 0x104);\n        if (iVar1 != 0) {\n            iVar1 = fcn.100006eec(&stack0xfffffffffffffed8, 2, 2);\n            if (iVar1 == 0) goto code_r0x000100003af5;\n            goto code_r0x0001000039e1;\n        }\n        arg2 = 0x4f0;\n    }\n    else {\ncode_r0x0001000039e1:\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)();\n        if (iVar1 != 0) {\n            if (*0x10001140c == 0) {\n                puVar5 = 0x100010f00;\n                iVar3 = 0x28;\n                do {\n                    *puVar5 = 1;\n                    puVar5 = puVar5 + 8;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n                if (((*0x100011418 & 1) == 0) && ((*0x100010ec4 & 1) == 0)) {\n                    iVar3 = fcn.100007c80(0x7d5 - (*0x10000f46c != 0), 0, 0x10000413c, 0);\n                    bVar6 = iVar3 == 0;\n                }\n                else {\n                    iVar1 = fcn.100006254();\n                    bVar6 = iVar1 == 0;\n                }\n                if (bVar6) {\n                    *0x100010488 = 0x8007042b;\n                    goto code_r0x000100003af5;\n                }\n                iVar1 = fcn.10000794c(0x100007a90);\n                if (iVar1 == 0) goto code_r0x000100003af5;\n                *0x100010488 = 0;\n            }\n            if (((*0x100011728 & 0x40) == 0) && (-1 < *0x100011728)) {\n                *0x1000105a4 = fcn.100002b98(*0x100010490);\n            }\n            else {\n                *0x1000105a4 = 0;\n            }\n            if ((((*0x100011404 != 0) || (*0x100010ec0 != 0)) || (iVar1 = fcn.10000480c(),  iVar1 != 0)) &&\n               ((*0x100011418 == 0 && (*0x100011404 == 0)))) {\n                fcn.100005008();\n            }\n            goto code_r0x000100003af5;\n        }\n        arg2 = 0x4bc;\n    }\n    fcn.100005420(0, arg2, 0, 0, CONCAT44(uVar7, 0x10), in_stack_fffffffffffffdc4 << 0x20, in_stack_fffffffffffffdc8, \n                  in_stack_fffffffffffffdd0, in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, \n                  in_stack_fffffffffffffde8, in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, \n                  in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, \n                  in_stack_fffffffffffffe18, in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, \n                  in_stack_fffffffffffffe30, in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, \n                  in_stack_fffffffffffffe48, in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, \n                  in_stack_fffffffffffffe60, in_stack_fffffffffffffe68, in_stack_fffffffffffffe70, \n                  in_stack_fffffffffffffe78, in_stack_fffffffffffffe80, in_stack_fffffffffffffe88, \n                  in_stack_fffffffffffffe90, in_stack_fffffffffffffe98, in_stack_fffffffffffffea0, \n                  in_stack_fffffffffffffea8, in_stack_fffffffffffffeb0, in_stack_fffffffffffffeb8, \n                  in_stack_fffffffffffffec0, in_stack_fffffffffffffec8, in_stack_fffffffffffffed0, \n                  in_stack_fffffffffffffed8, in_stack_fffffffffffffee0, in_stack_fffffffffffffee8, \n                  in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, in_stack_ffffffffffffff00, \n                  in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, in_stack_ffffffffffffff18, \n                  in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, in_stack_ffffffffffffff30, \n                  in_stack_ffffffffffffff38, in_stack_ffffffffffffff40, in_stack_ffffffffffffff48, \n                  in_stack_ffffffffffffff50, in_stack_ffffffffffffff58, in_stack_ffffffffffffff60, \n                  in_stack_ffffffffffffff68, in_stack_ffffffffffffff70);\n    *0x100010488 = fcn.100007924();\ncode_r0x000100003af5:\n    fcn.10000c380(uVar2 ^ auStackY616);\n    return;\n}\n",
        "token_count": 2175
    },
    "10000542": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.100005420(ulong arg1, ulong arg2, int64_t arg3, int64_t arg4, ulong noname_4, ulong noname_5, ulong noname_6, \n                  ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n                  ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, ulong noname_18, \n                  ulong noname_19, ulong noname_20, ulong noname_21, ulong noname_22, ulong noname_23, ulong noname_24, \n                  ulong noname_25, ulong noname_26, ulong noname_27, ulong noname_28, ulong noname_29, ulong noname_30, \n                  ulong noname_31, ulong noname_32, ulong noname_33, ulong noname_34, ulong noname_35, ulong noname_36, \n                  ulong noname_37, ulong noname_38, ulong noname_39, ulong noname_40, ulong noname_41, ulong noname_42, \n                  ulong noname_43, ulong noname_44, ulong noname_45, ulong noname_46, ulong noname_47, ulong noname_48, \n                  ulong noname_49, ulong noname_50, ulong noname_51, ulong noname_52, ulong noname_53, ulong noname_54, \n                  ulong noname_55, ulong noname_56, ulong noname_57, ulong uType, ulong arg_1e8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *arg1_00;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong var_170h;\n    uchar auStack696 [32];\n    int64_t iStack664;\n    uchar auStack648 [64];\n    char acStack584 [512];\n    uint64_t uStack72;\n    \n    uStack72 = *0x10000f100 ^ auStack696;\n    sub.msvcrt.dll_memcpy(auStack648, 0x100001810, 0x35);\n    if ((*0x100011418 & 1) == 0) {\n        uVar7 = 0;\n        acStack584[0] = '\\0';\n        (*_sym.imp.USER32.dll_LoadStringA)(*0x100010ee0, arg2, acStack584, 0x200);\n        if (acStack584[0] == '\\0') {\n            iVar1 = fcn.10000806c();\n            if ((iVar1 != 0) && (iVar1 = fcn.100007fa8(),  iVar1 != 0)) {\n                uVar7 = 0x180000;\n            }\n            (*_sym.imp.USER32.dll_MessageBoxA)(arg1, auStack648, 0x1000105d8, uVar7 | 0x10010);\n        }\n        else {\n            if (arg4 == 0) {\n                if (arg3 == 0) {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(acStack584);\n                    uVar6 = iVar1 + 1U;\n                    arg1_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 1U);\n                    if (arg1_00 == NULL) goto code_r0x000100005656;\n                    if ((uVar6 != 0) && (uVar6 < 0x80000000)) {\n                        iVar5 = 0x7ffffffe - uVar6;\n                        pcVar4 = arg1_00;\n                        do {\n                            if ((iVar5 + uVar6 == 0) || (pcVar4[acStack584 + -arg1_00] == '\\0')) break;\n                            *pcVar4 = pcVar4[acStack584 + -arg1_00];\n                            pcVar4 = pcVar4 + 1;\n                            uVar6 = uVar6 - 1;\n                        } while (uVar6 != 0);\n                        if (uVar6 == 0) {\n                            pcVar4 = pcVar4 + -1;\n                        }\n                        *pcVar4 = '\\0';\n                    }\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg3);\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    arg1_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40);\n                    if (arg1_00 == NULL) goto code_r0x000100005656;\n                    fcn.100001b10(arg1_00, iVar1 + 100 + iVar2, acStack584, arg3);\n                }\n            }\n            else {\n                iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg4);\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg3);\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                arg1_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40);\n                if (arg1_00 == NULL) goto code_r0x000100005656;\n                iStack664 = arg4;\n                fcn.100001b10(arg1_00, iVar3 + 100 + iVar1 + iVar2, acStack584, arg3);\n            }\n            (*_sym.imp.USER32.dll_MessageBeep)(noname_4);\n            iVar1 = fcn.10000806c();\n            if ((iVar1 != 0) && (iVar1 = fcn.100007fa8(),  iVar1 != 0)) {\n                uVar7 = 0x180000;\n            }\n            (*_sym.imp.USER32.dll_MessageBoxA)(arg1, arg1_00, 0x1000105d8, uVar7 | noname_4 | noname_5 | 0x10000);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(arg1_00);\n        }\n    }\ncode_r0x000100005656:\n    fcn.10000c380(uStack72 ^ auStack696);\n    return;\n}\n",
        "token_count": 1414
    },
    "10000837": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.10000837c(ulong noname_0, uint *arg2, ulong *arg3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar auStack88 [32];\n    int32_t aiStack56 [2];\n    uint uStack48;\n    uint16_t uStack32;\n    ushort uStack30;\n    ushort uStack28;\n    uint16_t uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    uint64_t uStack16;\n    \n    uStack16 = *0x10000f100 ^ auStack88;\n    iVar2 = (*arg3[4])(noname_0, aiStack56, 0x24);\n    if ((iVar2 == 0x24) && (aiStack56[0] == 0x4643534d)) {\n        if (uStack32 == 0x103) {\n            if (arg2 != NULL) {\n                *arg2 = uStack48;\n                *(arg2 + 1) = uStack30;\n                *(arg2 + 6) = uStack28;\n                arg2[3] = uStack26 >> 2 & 1;\n                *(arg2 + 2) = uStack24;\n                *(arg2 + 10) = uStack22;\n                arg2[4] = uStack26 & 1;\n                arg2[5] = uStack26 & 2;\n            }\n        }\n        else {\n            puVar1 = *arg3;\n            *puVar1 = 3;\n            puVar1[1] = uStack32;\n            puVar1[2] = 1;\n        }\n    }\n    fcn.10000c380(uStack16 ^ auStack88);\n    return;\n}\n",
        "token_count": 384
    },
    "100009dc": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t fcn.100009dc8(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0;\n    uVar1 = 0;\n    for (uVar3 = arg2 >> 2; 0 < uVar3; uVar3 = uVar3 - 1) {\n        arg3._0_4_ = arg3 ^ *arg1;\n        arg1 = arg1 + 1;\n    }\n    arg2._0_4_ = arg2 & 3;\n    if (arg2 != 1) {\n        if (arg2 != 2) {\n            if (arg2 != 3) goto code_r0x000100009e36;\n            uVar1 = *arg1 << 0x10;\n            arg1 = arg1 + 1;\n        }\n        uVar2 = uVar1 | *arg1 << 8;\n        arg1 = arg1 + 1;\n    }\n    uVar2 = uVar2 | *arg1;\ncode_r0x000100009e36:\n    return uVar2 ^ arg3;\n}\n",
        "token_count": 270
    },
    "1000097c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.1000097cc(ulong *arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint uVar6;\n    uint32_t uStackX8;\n    uint uStackX12;\n    int32_t aiStackX16 [2];\n    \n    uVar5 = *(arg1 + 0x10a);\n    puVar2 = arg1 + 0xec;\n    uVar4 = uVar5 & 0xf;\n    *puVar2 = 0x8000;\n    if ((uVar5 & 0xf) == 0) {\n        *(arg1 + 0x1e) = 0x8000;\ncode_r0x00010000992f:\n        iVar3 = (*arg1[2])();\n        arg1[0xe] = iVar3;\n        if (iVar3 != 0) {\n            iVar3 = (*arg1[2])();\n            arg1[0xf] = iVar3;\n            if (iVar3 == 0) {\n                (*arg1[1])(arg1[0xe]);\n                puVar2 = *arg1;\n                *puVar2 = 5;\n            }\n            else {\n                uVar5 = *(arg1 + 0x10a) & 0xf;\n                if (uVar5 == 1) {\n                    iVar1 = fcn.100007d60(puVar2, arg1[2], arg1[1], arg1 + 0x1e, arg1 + 0xc);\n                }\n                else if (uVar5 == 2) {\n                    iVar1 = fcn.100007d60(puVar2, &uStackX8, arg1[2], arg1[1], arg1 + 0x1e, arg1 + 0xc, arg1[3], arg1[4]\n                                          , arg1[5], arg1[6], arg1[7]);\n                }\n                else {\n                    if (uVar5 != 3) {\n                        return 1;\n                    }\n                    if (puVar2 == NULL) {\n                        iVar1 = 2;\n                    }\n                    else {\n                        iVar1 = fcn.100009c60(puVar2, aiStackX16, arg1[2], arg1[1]);\n                    }\n                }\n                if (iVar1 == 0) {\n                    return 1;\n                }\n                uVar6 = 7;\n                if (iVar1 == 1) {\n                    uVar6 = 5;\n                }\n                (*arg1[1])(arg1[0xe]);\n                (*arg1[1])(arg1[0xf]);\n                puVar2 = *arg1;\n                *puVar2 = uVar6;\n            }\n            puVar2[1] = 0;\n            puVar2[2] = 1;\n            goto code_r0x000100009916;\n        }\n        puVar2 = *arg1;\n        *puVar2 = 5;\n    }\n    else {\n        if (uVar4 == 1) {\n            iVar1 = fcn.100007d60(puVar2, 0, 0, arg1 + 0x1e, 0);\ncode_r0x000100009901:\n            if (iVar1 == 0) goto code_r0x00010000992f;\ncode_r0x000100009905:\n            uVar6 = 7;\n        }\n        else {\n            if (uVar4 == 2) {\n                uStackX12 = *(arg1 + 8);\n                uStackX8 = uVar5 >> 8 & 0x1f;\n                iVar1 = fcn.100007d60(puVar2, &uStackX8, 0, 0, arg1 + 0x1e, 0, 0, 0, 0, 0, 0);\n                goto code_r0x000100009901;\n            }\n            if (uVar4 == 3) {\n                aiStackX16[0] = 1 << (uVar5 >> 8 & 0x1f);\n                if (((puVar2 != NULL) && (*0x20 != 0xfffffffffffffff0)) && (arg1 + 0x1e != NULL)) {\n                    *(arg1 + 0x1e) = 0x9804;\n                    goto code_r0x00010000992f;\n                }\n                goto code_r0x000100009905;\n            }\n            if (uVar4 == 0xf) {\n                return 1;\n            }\n            uVar6 = 6;\n        }\n        puVar2 = *arg1;\n        *puVar2 = uVar6;\n    }\n    puVar2[1] = 0;\n    puVar2[2] = 1;\ncode_r0x000100009916:\n    *(arg1 + 0x10a) = 0xf;\n    return 0;\n}\n",
        "token_count": 1102
    },
    "10000a05": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.10000a05c(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    char cVar4;\n    uint16_t *puVar5;\n    \n    *(arg1 + 0x2ec4) = *(arg1 + 0x2ec4) - arg2;\n    cVar1 = *(arg1 + 0x2ec4);\n    *(arg1 + 0x2ec0) = *(arg1 + 0x2ec0) << (arg2 & 0x1f);\n    if (cVar1 < '\\x01') {\n        puVar2 = *(arg1 + 0x2b08);\n        if (*(arg1 + 0x2b10) <= puVar2) {\ncode_r0x00010000a092:\n            *(arg1 + 0x2ecc) = 1;\n            return;\n        }\n        uVar3 = *puVar2;\n        cVar4 = cVar1 + '\\x10';\n        puVar5 = puVar2 + 1;\n        *(arg1 + 0x2ec4) = cVar4;\n        *(arg1 + 0x2b08) = puVar5;\n        *(arg1 + 0x2ec0) = uVar3 << (-cVar1 & 0x1fU) | *(arg1 + 0x2ec0);\n        if (cVar4 < '\\x01') {\n            if (*(arg1 + 0x2b10) <= puVar5) goto code_r0x00010000a092;\n            uVar3 = *puVar5;\n            *(arg1 + 0x2b08) = puVar2 + 2;\n            *(arg1 + 0x2ec0) = *(arg1 + 0x2ec0) | uVar3 << (-cVar4 & 0x1fU);\n            *(arg1 + 0x2ec4) = cVar1 + ' ';\n        }\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "100001b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.100001b10(int64_t arg1, uint64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uStackX32;\n    \n    iVar2 = 0;\n    if ((arg2 == 0) || (0x7fffffff < arg2)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    if (-1 < iVar2) {\n        arg2 = arg2 - 1;\n        iVar2 = 0;\n        uStackX32 = arg4;\n        iVar1 = (*_sym.imp.msvcrt.dll__vsnprintf)(arg1, arg2, arg3, &uStackX32);\n        if ((iVar1 < 0) || (arg2 < iVar1)) {\n            *(arg2 + arg1) = 0;\n            iVar2 = -0x7ff8ff86;\n        }\n        else if (iVar1 == arg2) {\n            *(arg2 + arg1) = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "100001c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100001c80(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    ulong *puVar6;\n    uchar auStack168 [32];\n    uint *puStack136;\n    uint uStack128;\n    uint uStack120;\n    uint uStack112;\n    uint uStack104;\n    uint uStack96;\n    ulong *puStack88;\n    int32_t iStack72;\n    uint uStack68;\n    ulong uStack64;\n    ulong uStack56;\n    uint uStack48;\n    ushort uStack44;\n    uint64_t uStack40;\n    \n    uStack40 = *0x10000f100 ^ auStack168;\n    uStack44 = 0x500;\n    uStack48 = 0;\n    iStack72 = 0;\n    if (*0x10000f4a4 == 2) {\n        iVar1 = fcn.100001b7c(&iStack72);\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n            iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2, 8, &uStack64);\n            if (iVar1 != 0) {\n                puStack136 = &uStack68;\n                iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(uStack64, 2, 0, 0);\n                if (((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x7a)) &&\n                   (puVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uStack68),  puVar3 != NULL)) {\n                    puStack136 = &uStack68;\n                    uVar4 = 0;\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(uStack64, 2, puVar3, uStack68);\n                    if (iVar1 != 0) {\n                        puStack88 = &uStack56;\n                        uStack96 = 0;\n                        uStack104 = 0;\n                        uStack112 = 0;\n                        uStack120 = 0;\n                        uStack128 = 0;\n                        puStack136 = puStack136 & 0xffffffff00000000;\n                        iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                                          (&uStack48, uVar4 & 0xffffffffffffff00 | 2, 0x20, 0x220);\n                        if (iVar1 != 0) {\n                            uVar5 = 0;\n                            if (*puVar3 != 0) {\n                                puVar6 = puVar3 + 2;\n                                do {\n                                    iVar1 = (*_sym.imp.ADVAPI32.dll_EqualSid)(*puVar6, uStack56);\n                                    if (iVar1 != 0) {\n                                        *0x10000f4a4 = 1;\n                                        iStack72 = 1;\n                                        break;\n                                    }\n                                    uVar5 = uVar5 + 1;\n                                    puVar6 = puVar6 + 2;\n                                } while (uVar5 < *puVar3);\n                            }\n                            (*_sym.imp.ADVAPI32.dll_FreeSid)(uStack56);\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(puVar3);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack64);\n            }\n        }\n        else if (iStack72 != 0) {\n            *0x10000f4a4 = 1;\n        }\n    }\n    fcn.10000c380(uStack40 ^ auStack168);\n    return;\n}\n",
        "token_count": 834
    },
    "10000256": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100002564(void)\n\n{\n    int32_t iVar1;\n    uint64_t noname_9;\n    ulong uVar2;\n    ulong unaff_RBX;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    uchar auStack88 [32];\n    ulong in_stack_ffffffffffffffc8;\n    uint uVar3;\n    ulong in_stack_ffffffffffffffd0;\n    uint32_t uVar5;\n    uint64_t uVar4;\n    ulong in_stack_ffffffffffffffd8;\n    uint in_stack_ffffffffffffffe0;\n    uint in_stack_ffffffffffffffe4;\n    uint in_stack_ffffffffffffffe8;\n    uint in_stack_ffffffffffffffec;\n    \n    uVar3 = in_stack_ffffffffffffffc8 >> 0x20;\n    uVar5 = in_stack_ffffffffffffffd0 >> 0x20;\n    noname_9 = *0x10000f100 ^ auStack88;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2, 0x28);\n    if (iVar1 == 0) {\n        uVar4 = uVar5;\n        uVar2 = 0x4f5;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, 0x100001698, &stack0xffffffffffffffe4);\n        uVar4 = 0;\n        uVar3 = 0;\n        in_stack_ffffffffffffffe0 = 1;\n        in_stack_ffffffffffffffec = 2;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(in_stack_ffffffffffffffd8);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        if (iVar1 == 0) {\n            uVar2 = 0x4f6;\n        }\n        else {\n            iVar1 = (*_sym.imp.USER32.dll_ExitWindowsEx)();\n            if (iVar1 != 0) goto code_r0x00010000263e;\n            uVar2 = 0x4f7;\n        }\n        uVar4 = uVar4 >> 0x20;\n    }\n    fcn.100005420(0, uVar2, 0, 0, CONCAT44(uVar3, 0x10), uVar4 << 0x20, in_stack_ffffffffffffffd8, \n                  CONCAT44(in_stack_ffffffffffffffe4, in_stack_ffffffffffffffe0), \n                  CONCAT44(in_stack_ffffffffffffffec, in_stack_ffffffffffffffe8), noname_9, unaff_RBX, in_stack_00000000\n                  , in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, in_stack_00000028, \n                  in_stack_00000030, in_stack_00000038, in_stack_00000040, in_stack_00000048, in_stack_00000050, \n                  in_stack_00000058, in_stack_00000060, in_stack_00000068, in_stack_00000070, in_stack_00000078, \n                  in_stack_00000080, in_stack_00000088, in_stack_00000090, in_stack_00000098, in_stack_000000a0, \n                  in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, in_stack_000000c8, \n                  in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, in_stack_000000e8, in_stack_000000f0, \n                  in_stack_000000f8, in_stack_00000100, in_stack_00000108, in_stack_00000110, in_stack_00000118, \n                  in_stack_00000120, in_stack_00000128, in_stack_00000130, in_stack_00000138, in_stack_00000140, \n                  in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, in_stack_00000168, \n                  in_stack_00000170, in_stack_00000178, in_stack_00000180);\ncode_r0x00010000263e:\n    fcn.10000c380(noname_9 ^ auStack88);\n    return;\n}\n",
        "token_count": 1434
    },
    "10000303": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lplpBuffer\n// WARNING: Variable defined which should be unmapped: var_bp_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nuint64_t fcn.100003038(int64_t arg1, ulong arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint64_t uVar12;\n    bool bVar13;\n    uint auStackX8 [2];\n    ulong uStackX16;\n    uint32_t *puStackX24;\n    int32_t iStackX32;\n    ulong lpdwHandle;\n    ulong puLen;\n    uint32_t auStack104 [4];\n    int64_t iStack88;\n    int64_t iStack80;\n    ulong var_28h;\n    ulong var_bp_18h;\n    ulong lplpBuffer;\n    uint64_t uVar11;\n    \n    uVar9 = 0;\n    uVar10 = 0;\n    uVar12 = 0;\n    uVar5 = uVar9;\n    uStackX16 = arg2;\n    puStackX24 = arg3;\n    if (0 < *(arg1 + 0x7c)) {\n        iStack88 = 0;\n        uVar11 = uVar9;\n        do {\n            uVar10 = uVar11;\n            iVar8 = *(arg1 + 0x80) + iStack88;\n            iVar3 = fcn.100002e34(arg2, *(iVar8 + 0xbc + arg1) + 0x84 + arg1);\n            uVar11 = uVar9;\n            if (iVar3 == 0) goto code_r0x000100003206;\n            iVar3 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(arg2, auStackX8);\n            uVar11 = uVar12;\n            if (iVar3 == 0) {\n                if ((*(iVar8 + 0x84 + arg1) != 0) || (arg2 = uStackX16,  *(iVar8 + 0x88 + arg1) != 0))\n                goto code_r0x000100003206;\n            }\n            else {\n                uVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar3);\n                if ((uVar5 == 0) || (iVar6 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar5),  arg2 = uStackX16,  iVar6 == 0)\n                   ) goto code_r0x000100003206;\n                iVar3 = (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(uStackX16, auStackX8[0], iVar3, iVar6);\n                if (iVar3 != 0) {\n                    iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueA)(iVar6, 0x100001724);\n                    iVar6 = 0;\n                    if ((iVar3 != 0) && (iStackX32 != 0)) {\n                        puVar7 = iVar8 + 0x94 + arg1;\n                        uVar1 = *(iStack80 + 0xc);\n                        uVar2 = *(iStack80 + 8);\n                        do {\n                            bVar13 = uVar2 < puVar7[-4];\n                            if (bVar13) {\ncode_r0x00010000314f:\n                                uVar4 = 0xffffffff;\n                            }\n                            else if (bVar13 || uVar2 == puVar7[-4]) {\n                                bVar13 = uVar1 < puVar7[-3];\n                                if (bVar13) goto code_r0x00010000314f;\n                                uVar4 = !bVar13 && uVar1 != puVar7[-3];\n                            }\n                            else {\n                                uVar4 = 1;\n                            }\n                            *(auStack104 + iVar6) = uVar4;\n                            bVar13 = uVar2 < puVar7[-1];\n                            if (bVar13) {\ncode_r0x000100003173:\n                                uVar4 = 0xffffffff;\n                            }\n                            else if (bVar13 || uVar2 == puVar7[-1]) {\n                                if (uVar1 < *puVar7) goto code_r0x000100003173;\n                                uVar4 = uVar1 >= *puVar7 && uVar1 != *puVar7;\n                            }\n                            else {\n                                uVar4 = 1;\n                            }\n                            *(auStack104 + iVar6 + 8) = uVar4;\n                            iVar6 = iVar6 + 4;\n                            puVar7 = puVar7 + 6;\n                        } while (iVar6 < 8);\n                        if (((auStack104[0] < 0) || (0 < auStack104[2])) && ((auStack104[1] < 0 || (0 < auStack104[3])))\n                           ) {\n                            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n                            goto code_r0x000100003206;\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n            }\n            uVar10 = uVar10 + 1;\n            uVar11 = uVar10;\n            iStack88 = iStack88 + 0x3c;\n        } while (uVar10 < *(arg1 + 0x7c));\n    }\n    uVar11 = 1;\ncode_r0x000100003206:\n    *puStackX24 = uVar10;\n    if (uVar5 != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar5);\n    }\n    return uVar11;\n}\n",
        "token_count": 1311
    },
    "10000432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100004320(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    ulong auStackX8 [4];\n    uchar auStack56 [8];\n    int32_t iStack48;\n    \n    bVar1 = false;\n    auStackX8[0] = arg1;\n    do {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_MsgWaitForMultipleObjects)(1, auStackX8, 0, 0xffffffff, 0xff);\n            if (iVar2 == 0) {\n                return;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(auStack56, 0, 0, 0, 1);\n        } while (iVar2 == 0);\n        do {\n            if (iStack48 == 0x12) {\n                bVar1 = true;\n            }\n            else {\n                (*_sym.imp.USER32.dll_DispatchMessageA)(auStack56);\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(auStack56, 0, 0, 0, 1);\n        } while (iVar2 != 0);\n    } while (!bVar1);\n    return;\n}\n",
        "token_count": 289
    },
    "10000510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.100005100(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong arg2;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    int64_t iVar9;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong unaff_R12;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    ulong unaff_R15;\n    ulong in_stack_00000000;\n    ulong in_stack_00000010;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    uint in_stack_ffffffffffffff8c;\n    uint32_t in_stack_ffffffffffffff94;\n    ulong in_stack_ffffffffffffff98;\n    ulong in_stack_ffffffffffffffa0;\n    ulong in_stack_ffffffffffffffa8;\n    ulong in_stack_ffffffffffffffb0;\n    uint in_stack_ffffffffffffffb8;\n    uint in_stack_ffffffffffffffbc;\n    ulong in_stack_ffffffffffffffc0;\n    ulong in_stack_ffffffffffffffc8;\n    ulong in_stack_ffffffffffffffd0;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x10000f460);\n    if (iVar2 == 0) {\n        arg2 = 0x4c2;\n    }\n    else {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x10000f490);\n        if (((pcVar3 != NULL) && (pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0xc3),  pcVar4 != NULL)) &&\n           (pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x10000f4a8),  pcVar5 != NULL)) {\n            iVar9 = 0x104;\n            if (*0x1000104a0 == '\\0') {\n                (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104, 0x1000104a0);\n                iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x1000104a0);\n                pcVar6 = (*_sym.imp.USER32.dll_CharPrevA)(0x1000104a0, iVar1 + 0x1000104a0);\n                if ((*pcVar6 == '\\\\') &&\n                   (pcVar7 = (*_sym.imp.USER32.dll_CharPrevA)(0x1000104a0, pcVar6),  *pcVar7 != ':')) {\n                    *pcVar6 = '\\0';\n                }\n            }\n            *0x10000fcd0 = '\\0';\n            iVar8 = (*pcVar3)(&stack0xffffffffffffff98);\n            if (iVar8 != 0) {\n                (*pcVar5)(iVar8, 0x1000104a0);\n                if (*0x1000104a0 != '\\0') {\n                    pcVar6 = 0x10000fcd0;\n                    do {\n                        if ((iVar9 == -0x7ffffefa) || (pcVar6[2000] == '\\0')) break;\n                        *pcVar6 = pcVar6[2000];\n                        pcVar6 = pcVar6 + 1;\n                        iVar9 = iVar9 + -1;\n                    } while (iVar9 != 0);\n                    if (iVar9 == 0) {\n                        pcVar6 = pcVar6 + -1;\n                    }\n                    *pcVar6 = '\\0';\n                }\n                (*pcVar4)(iVar8);\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n            return *0x10000fcd0 != '\\0';\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        arg2 = 0x4c1;\n    }\n    fcn.100005420(arg1, arg2, 0, 0, CONCAT44(in_stack_ffffffffffffff8c, 0x10), in_stack_ffffffffffffff94 << 0x20, \n                  in_stack_ffffffffffffff98, in_stack_ffffffffffffffa0, in_stack_ffffffffffffffa8, \n                  in_stack_ffffffffffffffb0, CONCAT44(in_stack_ffffffffffffffbc, in_stack_ffffffffffffffb8), \n                  in_stack_ffffffffffffffc0, in_stack_ffffffffffffffc8, in_stack_ffffffffffffffd0, unaff_R15, unaff_R14\n                  , unaff_R13, unaff_R12, unaff_RDI, in_stack_00000000, unaff_RBX, in_stack_00000010, unaff_RBP, \n                  unaff_RSI, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                  in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                  in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, \n                  in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, \n                  in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, \n                  in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, \n                  in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, \n                  in_stack_00000138, in_stack_00000140);\n    return false;\n}\n",
        "token_count": 1662
    },
    "1000052e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: lpRect\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: hWnd\n\nvoid fcn.1000052e8(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uchar auStack168 [32];\n    uint uStack136;\n    uint uStack128;\n    uint uStack120;\n    ulong uStack104;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint64_t uStack64;\n    ulong hWnd;\n    ulong var_28h;\n    ulong var_20h;\n    ulong lpRect;\n    ulong var_10h;\n    ulong var_8h;\n    \n    uStack64 = *0x10000f100 ^ auStack168;\n    uStack104 = arg1;\n    (*_sym.imp.USER32.dll_GetWindowRect)(arg1, &iStack80);\n    iStack72 = iStack72 - iStack80;\n    iStack68 = iStack68 - iStack76;\n    (*_sym.imp.USER32.dll_GetWindowRect)(arg2, &iStack96);\n    iStack88 = iStack88 - iStack96;\n    iStack84 = iStack84 - iStack92;\n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(arg1);\n    iVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 8);\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 10);\n    uVar3 = uStack104;\n    (*_sym.imp.USER32.dll_ReleaseDC)();\n    iStack96 = (iStack88 - iStack72) / 2 + iStack96;\n    if (iStack96 < 0) {\n        iStack96 = 0;\n    }\n    else if (iVar1 < iStack96 + iStack72) {\n        iStack96 = iVar1 - iStack72;\n    }\n    iStack92 = (iStack84 - iStack68) / 2 + iStack92;\n    if (iStack92 < 0) {\n        iStack92 = 0;\n    }\n    else if (iVar2 < iStack92 + iStack68) {\n        iStack92 = iVar2 - iStack68;\n    }\n    uStack120 = 5;\n    uStack128 = 0;\n    uStack136 = 0;\n    (*_sym.imp.USER32.dll_SetWindowPos)(uVar3, 0, iStack96, iStack92);\n    fcn.10000c380(uStack64 ^ auStack168);\n    return;\n}\n",
        "token_count": 691
    },
    "10000568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.100005680(ulong lpName, int64_t arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t arg4;\n    int64_t arg3_00;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, lpName, 10);\n    uVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar2);\n    arg4 = uVar1;\n    if ((uVar1 <= (arg3 & 0xffffffff)) && (arg2 != 0)) {\n        if (uVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, lpName, 10);\n            uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar2);\n            arg3_00 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar2);\n            if (arg3_00 != 0) {\n                fcn.10000c530(arg2, arg3 & 0xffffffff, arg3_00, arg4);\n                (*_sym.imp.KERNEL32.dll_FreeResource)(arg3_00);\n                return arg4;\n            }\n        }\n        arg4 = 0;\n    }\n    return arg4;\n}\n",
        "token_count": 298
    },
    "10000573": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.100005730(char *arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    \n    iVar2 = 0x104;\n    pcVar3 = arg1;\n    do {\n        if ((iVar2 == -0x7ffffefa) || (pcVar3[arg2 - arg1] == '\\0')) break;\n        *pcVar3 = pcVar3[arg2 - arg1];\n        pcVar3 = pcVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (iVar2 == 0) {\n        pcVar3 = pcVar3 + -1;\n    }\n    *pcVar3 = '\\0';\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg1);\n    if (((arg1[iVar1 + -1] != '\\\\') && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg1),  arg1[iVar1 + -1] != '/')) &&\n       (iVar1 = fcn.100001a58(arg1, 0x104, 0x100001724),  iVar1 < 0)) {\n        return 0;\n    }\n    fcn.100001a58(arg1, 0x104, arg3);\n    return 1;\n}\n",
        "token_count": 309
    },
    "10000608": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nulong fcn.100006088(int64_t arg1)\n\n{\n    int64_t iVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    \n    pcVar2 = 0x100010bac;\n    sub.msvcrt.dll_memcpy(0x10001089c, 0x100010bac, 0x310);\n    pcVar4 = *(arg1 + 0x18);\n    iVar3 = 0x104;\n    iVar1 = 0x104;\n    do {\n        if ((iVar1 == -0x7ffffefa) || (*pcVar4 == '\\0')) break;\n        *pcVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n        pcVar2 = pcVar2 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    if (iVar1 == 0) {\n        pcVar2 = pcVar2 + -1;\n    }\n    *pcVar2 = '\\0';\n    pcVar4 = *(arg1 + 8);\n    iVar1 = 0x104;\n    pcVar2 = 0x100010cb0;\n    do {\n        if ((iVar1 == -0x7ffffefa) || (*pcVar4 == '\\0')) break;\n        *pcVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n        pcVar2 = pcVar2 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    if (iVar1 == 0) {\n        pcVar2 = pcVar2 + -1;\n    }\n    *pcVar2 = '\\0';\n    pcVar4 = *(arg1 + 0x10);\n    pcVar2 = 0x100010db4;\n    do {\n        if ((iVar3 == -0x7ffffefa) || (*pcVar4 == '\\0')) break;\n        *pcVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n        pcVar2 = pcVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (iVar3 == 0) {\n        pcVar2 = pcVar2 + -1;\n    }\n    *pcVar2 = '\\0';\n    *0x100010eb8 = *(arg1 + 0x36);\n    *0x100010eba = *(arg1 + 0x38);\n    return 0;\n}\n",
        "token_count": 562
    },
    "1000063e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1000063e4(void)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    ulong in_stack_00000010;\n    ulong in_stack_00000018;\n    ulong in_stack_00000020;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong in_stack_00000068;\n    ulong in_stack_00000070;\n    ulong in_stack_00000078;\n    ulong in_stack_00000080;\n    ulong in_stack_00000088;\n    ulong in_stack_00000090;\n    ulong in_stack_00000098;\n    ulong in_stack_000000a0;\n    ulong in_stack_000000a8;\n    ulong in_stack_000000b0;\n    ulong in_stack_000000b8;\n    ulong in_stack_000000c0;\n    ulong in_stack_000000c8;\n    ulong in_stack_000000d0;\n    ulong in_stack_000000d8;\n    ulong in_stack_000000e0;\n    ulong in_stack_000000e8;\n    ulong in_stack_000000f0;\n    ulong in_stack_000000f8;\n    ulong in_stack_00000100;\n    ulong in_stack_00000108;\n    ulong in_stack_00000110;\n    ulong in_stack_00000118;\n    ulong in_stack_00000120;\n    ulong in_stack_00000128;\n    ulong in_stack_00000130;\n    ulong in_stack_00000138;\n    ulong in_stack_00000140;\n    ulong in_stack_00000148;\n    ulong in_stack_00000150;\n    ulong in_stack_00000158;\n    ulong in_stack_00000160;\n    ulong in_stack_00000168;\n    ulong in_stack_00000170;\n    ulong in_stack_00000178;\n    ulong in_stack_00000180;\n    ulong in_stack_00000188;\n    ulong in_stack_00000190;\n    ulong in_stack_00000198;\n    ulong in_stack_000001a0;\n    uint in_stack_ffffffffffffffec;\n    uint32_t in_stack_fffffffffffffff4;\n    ulong in_stack_fffffffffffffff8;\n    \n    iVar1 = fcn.100005680(0x100001850, 0x100011740, 0x24);\n    if (iVar1 == 0x24) {\n        *0x100010884 = *0x100011760;\n        if (*0x100011760 != 0) {\n            fcn.100005680(0x100001860, 0x100010ec8, 4);\n            iVar1 = fcn.10000794c(0x100007a48);\n            if (iVar1 == 0) {\n                fcn.100005420(0, 0x4c6, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), \n                              in_stack_fffffffffffffff4 << 0x20, in_stack_fffffffffffffff8, in_stack_00000000, \n                              in_stack_00000008, in_stack_00000010, in_stack_00000018, in_stack_00000020, \n                              in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                              in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, \n                              in_stack_00000068, in_stack_00000070, in_stack_00000078, in_stack_00000080, \n                              in_stack_00000088, in_stack_00000090, in_stack_00000098, in_stack_000000a0, \n                              in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, in_stack_000000c0, \n                              in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, \n                              in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, \n                              in_stack_00000108, in_stack_00000110, in_stack_00000118, in_stack_00000120, \n                              in_stack_00000128, in_stack_00000130, in_stack_00000138, in_stack_00000140, \n                              in_stack_00000148, in_stack_00000150, in_stack_00000158, in_stack_00000160, \n                              in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, \n                              in_stack_00000188, in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n                return 0;\n            }\n            return 1;\n        }\n        arg2 = 0x4c6;\n    }\n    else {\n        arg2 = 0x4b1;\n    }\n    fcn.100005420(0, arg2, 0, 0, CONCAT44(in_stack_ffffffffffffffec, 0x10), in_stack_fffffffffffffff4 << 0x20, \n                  in_stack_fffffffffffffff8, in_stack_00000000, in_stack_00000008, in_stack_00000010, in_stack_00000018\n                  , in_stack_00000020, in_stack_00000028, in_stack_00000030, in_stack_00000038, in_stack_00000040, \n                  in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060, in_stack_00000068, \n                  in_stack_00000070, in_stack_00000078, in_stack_00000080, in_stack_00000088, in_stack_00000090, \n                  in_stack_00000098, in_stack_000000a0, in_stack_000000a8, in_stack_000000b0, in_stack_000000b8, \n                  in_stack_000000c0, in_stack_000000c8, in_stack_000000d0, in_stack_000000d8, in_stack_000000e0, \n                  in_stack_000000e8, in_stack_000000f0, in_stack_000000f8, in_stack_00000100, in_stack_00000108, \n                  in_stack_00000110, in_stack_00000118, in_stack_00000120, in_stack_00000128, in_stack_00000130, \n                  in_stack_00000138, in_stack_00000140, in_stack_00000148, in_stack_00000150, in_stack_00000158, \n                  in_stack_00000160, in_stack_00000168, in_stack_00000170, in_stack_00000178, in_stack_00000180, \n                  in_stack_00000188, in_stack_00000190, in_stack_00000198, in_stack_000001a0);\n    *0x100010488 = 0x80070714;\n    return 0;\n}\n",
        "token_count": 1658
    },
    "10000792": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.100007924(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    uVar2 = uVar1 & 0xffff | 0x80070000;\n    if (uVar1 < 1) {\n        uVar2 = uVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "100007dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.100007ddc(uchar *arg1, uint64_t arg2, char *arg3)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char *pcVar3;\n    uchar *puVar4;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    if (uVar1 + 1 < (arg2 & 0xffffffff)) {\n        puVar4 = arg1 + uVar1;\n        if (arg1 < puVar4) {\n            pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(arg1, puVar4);\n            if (*pcVar3 != '\\\\') {\n                *puVar4 = 0x5c;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        *puVar4 = 0;\n        for (; *arg3 == ' '; arg3 = arg3 + 1) {\n        }\n        uVar2 = fcn.100001a58(arg1, arg2 & 0xffffffff, arg3);\n    }\n    else {\n        uVar2 = 0x8007007a;\n    }\n    return uVar2;\n}\n",
        "token_count": 258
    },
    "100007e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.100007e68(char *arg1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(arg1, arg1 + iVar1);\n    do {\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(arg1, pcVar2);\n        if (pcVar2 <= arg1) {\n            if (*pcVar2 != '\\\\') {\n                return 0;\n            }\n            break;\n        }\n    } while (*pcVar2 != '\\\\');\n    if ((pcVar2 == arg1) || (pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(arg1, pcVar2),  *pcVar3 == ':')) {\n        pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(pcVar2);\n    }\n    *pcVar2 = '\\0';\n    return 1;\n}\n",
        "token_count": 227
    },
    "10000820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10000820c(uint *arg1)\n\n{\n    ulong *puVar1;\n    \n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, 0x890);\n    if (puVar1 == NULL) {\n        arg1[1] = arg1[1] & puVar1;\n        *arg1 = 5;\n        arg1[2] = 1;\n    }\n    else {\n        puVar1[0x11] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x12] = 0;\n        *(puVar1 + 8) = 1;\n        *puVar1 = arg1;\n        puVar1[1] = 0x100005dbc;\n        puVar1[2] = 0x100005da8;\n        puVar1[3] = fcn.1000058fc;\n        puVar1[4] = 0x100005b40;\n        puVar1[5] = 0x100005bdc;\n        puVar1[6] = fcn.100005ca8;\n        puVar1[7] = 0x100005d0c;\n        *(puVar1 + 0x10a) = 0xf;\n        *(puVar1 + 0x1f) = 0xffff;\n        *(puVar1 + 0x20) = 0xffff;\n        *(puVar1 + 0xfc) = 0xffff;\n        puVar1[0x1b] = 0xffffffffffffffff;\n        puVar1[0x1a] = 0xffffffffffffffff;\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "1000082f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1000082f8(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (arg1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.100009688(0xf, arg1);\n        if (*(arg1 + 0x90) != 0) {\n            (**(arg1 + 8))();\n        }\n        if (*(arg1 + 0x80) != 0) {\n            (**(arg1 + 8))();\n        }\n        if (*(arg1 + 0x88) != 0) {\n            (**(arg1 + 8))();\n        }\n        if (*(arg1 + 0xd8) != -1) {\n            (**(arg1 + 0x30))();\n        }\n        if (*(arg1 + 0xd0) != -1) {\n            (**(arg1 + 0x30))();\n        }\n        (**(arg1 + 8))(arg1);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 234
    },
    "10000845": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.100008458(ulong arg1, ulong *arg2)\n\n{\n    int16_t iVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    char *pcVar7;\n    ulong uVar8;\n    ulong uVar10;\n    int64_t iVar11;\n    ulong uVar9;\n    \n    uVar9 = 0;\n    uVar8 = 0;\n    pcVar7 = arg2 + 0x611;\n    arg2[0xd] = arg1;\n    iVar6 = 0x101;\n    arg2[9] = fcn.100005dcc;\n    arg2[10] = 0;\n    *(arg2 + 0x106) = 0;\n    iVar11 = 0x100001609 - pcVar7;\n    iVar5 = 0x101;\n    pcVar4 = pcVar7;\n    do {\n        if ((iVar5 == -0x7ffffefd) || (pcVar4[iVar11] == '\\0')) break;\n        *pcVar4 = pcVar4[iVar11];\n        pcVar4 = pcVar4 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar5 == 0) {\n        pcVar4 = pcVar4 + -1;\n    }\n    *pcVar4 = '\\0';\n    iVar3 = fcn.100008744(arg2, 0x10000f428);\n    uVar10 = uVar9;\n    if (iVar3 != 0) {\n        *(arg2 + 0xf4) = 0;\n        *(arg2 + 0x1d) = 0xffff;\n        *(arg2 + 0x5c) = 0;\n        do {\n            if ((iVar6 == -0x7ffffefd) || (pcVar7[iVar11] == '\\0')) break;\n            *pcVar7 = pcVar7[iVar11];\n            pcVar7 = pcVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n        if (iVar6 == 0) {\n            pcVar7 = pcVar7 + -1;\n        }\n        *pcVar7 = '\\0';\n        iVar3 = fcn.100009594(arg2);\n        if (iVar3 != 0) {\n            iVar1 = *(arg2 + 0x104);\n            while (iVar1 != 0) {\n                do {\n                    *(arg2 + 0x104) = *(arg2 + 0x104) + -1;\n                    iVar3 = fcn.1000092c0(arg2);\n                    uVar10 = uVar9;\n                    if (iVar3 == 0) goto code_r0x0001000086f0;\n                    arg2[0x104] = arg2 + 0x10c;\n                    *(arg2 + 0x103) = *(arg2 + 0xbc);\n                    arg2[0x105] = arg2 + 0x20d;\n                    arg2[0x106] = arg2 + 0x30e;\n                    *(arg2 + 0x109) = *(arg2 + 0xc6);\n                    *(arg2 + 0x84a) = *(arg2 + 0x19);\n                    *(arg2 + 0x84c) = *(arg2 + 0xca);\n                    arg2[0x107] = arg2[0xd];\n                    *(arg2 + 0x852) = *(arg2 + 0xc4);\n                    uVar10 = uVar8;\n                    if ((*(arg2 + 0xc4) & 0xfffd) == 0xfffd) {\n                        if (*(arg2 + 0xf4) == 0) {\n                            iVar5 = fcn.100005dcc(1, arg2 + 0x103);\n                            if (iVar5 == -1) goto code_r0x00010000865d;\n                        }\n                        else {\ncode_r0x000100008626:\n                            iVar5 = fcn.100005dcc(2, arg2 + 0x103);\n                            arg2[0x1c] = iVar5;\n                            if (iVar5 == -1) {\ncode_r0x00010000865d:\n                                puVar2 = *arg2;\n                                *puVar2 = 0xb;\n                                *(puVar2 + 1) = 1;\n                                goto code_r0x0001000086f0;\n                            }\n                            if (iVar5 == 0) {\n                                if ((*(arg2 + 0xc4) & 0xfffe) == 0xfffe) {\n                                    *(arg2 + 0x106) = *(arg2 + 0x106) + 1;\n                                }\n                            }\n                            else {\n                                iVar3 = fcn.100008b14(arg2);\n                                if (iVar3 == 0) goto code_r0x0001000086f0;\n                            }\n                        }\n                    }\n                    else if (*(arg2 + 0xf4) == 0) {\n                        if ((*(arg2 + 0x852) < *(arg2 + 0xb2)) || (0xfffb < *(arg2 + 0x852))) goto code_r0x000100008626;\n                    }\n                    else {\n                        *(arg2 + 0x104) = 0;\n                    }\n                } while (*(arg2 + 0x104) != 0);\n                iVar3 = fcn.100009594(arg2);\n                if (iVar3 == 0) goto code_r0x0001000086f0;\n                iVar1 = *(arg2 + 0x104);\n            }\n            *(arg2 + 0x104) = *(arg2 + 0x104) + -1;\n            uVar10 = 1;\n        }\n    }\ncode_r0x0001000086f0:\n    if (arg2[0x1b] != -1) {\n        (*arg2[6])();\n    }\n    if (arg2[0x1a] != -1) {\n        (*arg2[6])();\n    }\n    arg2[0x1b] = 0xffffffffffffffff;\n    arg2[0x1a] = 0xffffffffffffffff;\n    return uVar10;\n}\n",
        "token_count": 1399
    },
    "100008b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.100008b14(ulong *arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    \n    uVar7 = *(arg1 + 0xbc);\n    if (uVar7 == 0) {\ncode_r0x000100008bf6:\n        arg1[0x104] = arg1 + 0x10c;\n        arg1[0x108] = arg1[0x1c];\n        *(arg1 + 0x109) = *(arg1 + 0xc6);\n        *(arg1 + 0x84a) = *(arg1 + 0x19);\n        uVar1 = *(arg1 + 0xca);\n        *(arg1 + 0x84c) = uVar1;\n        arg1[0x107] = arg1[0xd];\n        *(arg1 + 0x103) = 0;\n        *(arg1 + 0x852) = *(arg1 + 0xc4);\n        if ((uVar1 & 0x40) != 0) {\n            *(arg1 + 0x103) = 1;\n            *(arg1 + 0x84c) = uVar1 & 0xffbf;\n        }\n        iVar3 = (*arg1[9])(3);\n        arg1[0x1c] = 0xffffffffffffffff;\n        if (iVar3 == -1) {\n            puVar4 = *arg1;\n            *puVar4 = 0xb;\n        }\n        else {\n            if (iVar3 != 0) {\n                return 1;\n            }\n            puVar4 = *arg1;\n            *puVar4 = 8;\n        }\n        puVar4[1] = 0;\n        puVar4[2] = 1;\n        return 0;\n    }\n    uVar8 = *(arg1 + 0x18);\n    if (uVar8 < *(arg1 + 0x5c)) {\n        *(arg1 + 0x1d) = 0xffff;\n    }\n    iVar2 = fcn.10000907c(arg1, *(arg1 + 0xc4));\n    while (iVar2 != 0) {\n        if (uVar8 < *(arg1[0x11] + 6) + *(arg1 + 0x5c)) {\n            if (uVar7 == 0) goto code_r0x000100008bf6;\n            goto code_r0x000100008b7e;\n        }\n        iVar2 = fcn.100008cbc(arg1);\n    }\n    goto code_r0x000100008bd5;\n    while( true ) {\n        uVar8 = uVar8 + uVar6;\n        uVar7 = uVar7 - uVar6;\n        if (uVar7 == 0) goto code_r0x000100008bf6;\n        iVar2 = fcn.100008cbc(arg1);\n        if (iVar2 == 0) break;\ncode_r0x000100008b7e:\n        uVar5 = uVar8 - *(arg1 + 0x5c);\n        uVar6 = *(arg1[0x11] + 6) - uVar5;\n        if (uVar7 < uVar6) {\n            uVar6 = uVar7;\n        }\n        uVar5 = (*arg1[5])(arg1[0x1c], uVar5 + arg1[0xf], uVar6);\n        if (uVar6 != uVar5) {\n            puVar4 = *arg1;\n            puVar4[1] = 0;\n            *puVar4 = 8;\n            puVar4[2] = 1;\n            break;\n        }\n    }\ncode_r0x000100008bd5:\n    if (arg1[0x1c] != -1) {\n        (*arg1[6])();\n        arg1[0x1c] = 0xffffffffffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 925
    },
    "100008cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nulong fcn.100008cbc(ulong *arg1)\n\n{\n    int32_t iVar1;\n    int16_t aiStackX8 [4];\n    \n    *(arg1 + 0x5c) = *(arg1 + 0x5c) + *(arg1[0x11] + 6);\n    if (*(arg1 + 0x21) != 0) {\n        *(arg1 + 0x21) = *(arg1 + 0x21) + -1;\n    }\n    iVar1 = fcn.100009324(arg1, 0);\n    if ((iVar1 != 0) ||\n       (((*(arg1 + 0x21) == 0 && (iVar1 = fcn.100008dc8(arg1),  iVar1 != 0)) &&\n        (iVar1 = fcn.100009324(arg1, 0),  iVar1 != 0)))) {\n        if (*(arg1[0x11] + 6) == 0) {\n            iVar1 = fcn.100008dc8(arg1);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.100009324(arg1, *(arg1[0x11] + 4));\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(arg1 + 0x21) = *(arg1 + 0x21) + -1;\n        }\n        aiStackX8[0] = *(arg1[0x11] + 6);\n        iVar1 = fcn.100009aac(arg1, aiStackX8);\n        if (iVar1 != 0) {\n            if (aiStackX8[0] == *(arg1[0x11] + 6)) {\n                return 1;\n            }\n            arg1 = *arg1;\n            *arg1 = 7;\n            *(arg1 + 1) = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 435
    },
    "100008dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.100008dc8(int32_t **arg1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    \n    arg1[0x105] = arg1 + 0xa2;\n    arg1[0x106] = arg1 + 0x611;\n    arg1[0x104] = arg1 + 0x40f;\n    *(arg1 + 0x84e) = *(arg1 + 0x17);\n    arg1[0x107] = arg1[0xd];\n    *(arg1 + 0x10a) = *(arg1 + 0xba) + 1;\n    *(arg1 + 0x854) = 0;\n    while( true ) {\n        bVar3 = false;\n        if ((arg1[0x1b] != 0xffffffffffffffff) && (iVar4 = (*arg1[6])(),  iVar4 == 0)) {\n            arg1[0x1b] = 0xffffffffffffffff;\n        }\n        if ((arg1[0x1a] != 0xffffffffffffffff) && (iVar4 = (*arg1[6])(),  iVar4 == 0)) {\n            arg1[0x1a] = 0xffffffffffffffff;\n        }\n        if ((arg1[0x1b] != 0xffffffffffffffff) || (arg1[0x1a] != 0xffffffffffffffff)) break;\n        iVar5 = (*arg1[9])(4, arg1 + 0x103);\n        if (iVar5 == -1) {\n            puVar6 = *arg1;\n            *puVar6 = 0xb;\n            goto code_r0x000100008f66;\n        }\n        iVar4 = fcn.100008744(arg1, arg1 + 0x40f);\n        if ((iVar4 == 0) || (iVar4 = fcn.100009160(arg1, 0),  iVar4 == 0)) {\n            if (**arg1 == 0xb) {\n                return 0;\n            }\n            bVar3 = true;\n        }\n        *(arg1 + 0x854) = **arg1;\n        if (!bVar3) {\n            piVar1 = arg1 + 0x106;\n            *piVar1 = *piVar1 + 1;\n            iVar2 = *piVar1;\n            while( true ) {\n                if (iVar2 == 0) {\n                    *(arg1 + 0xf4) = 1;\n                    return 1;\n                }\n                *(arg1 + 0x104) = *(arg1 + 0x104) + -1;\n                *(arg1 + 0x106) = *(arg1 + 0x106) + -1;\n                iVar4 = fcn.1000092c0(arg1);\n                if (iVar4 == 0) break;\n                iVar2 = *(arg1 + 0x106);\n            }\n            return 0;\n        }\n    }\n    arg1[0x1b] = 0xffffffffffffffff;\n    puVar6 = *arg1;\n    arg1[0x1a] = 0xffffffffffffffff;\n    *puVar6 = 4;\ncode_r0x000100008f66:\n    *(puVar6 + 1) = 1;\n    return 0;\n}\n",
        "token_count": 760
    },
    "1000092c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1000092c0(ulong *arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*arg1[4])(arg1[0x1b], arg1 + 0xbc, 0x10);\n    if ((iVar2 == 0x10) && (iVar2 = fcn.1000094e8(arg1 + 0x10c, arg1),  iVar2 != 0)) {\n        return 1;\n    }\n    puVar1 = *arg1;\n    puVar1[1] = 0;\n    *puVar1 = 4;\n    puVar1[2] = 1;\n    return 0;\n}\n",
        "token_count": 159
    },
    "10000968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.100009688(ulong noname_0, ulong *arg2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (noname_0 == *(arg2 + 0x10a)) {\n        bVar2 = true;\n    }\n    else {\n        iVar1 = fcn.100009700(arg2);\n        if (iVar1 == 0) {\n            arg2 = *arg2;\n            *arg2 = 7;\n            *(arg2 + 1) = 1;\n            bVar2 = false;\n        }\n        else {\n            *(arg2 + 0x10a) = noname_0;\n            iVar1 = fcn.1000097cc(arg2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 182
    },
    "10000970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.100009700(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint16_t uVar5;\n    \n    uVar5 = *(arg1 + 0x10a) & 0xf;\n    if ((*(arg1 + 0x10a) & 0xf) == 0) goto code_r0x00010000976c;\n    if (uVar5 == 1) {\n        iVar3 = fcn.100007d54(arg1[0xc]);\ncode_r0x0001000097a8:\n        if (iVar3 == 0) {\ncode_r0x00010000976c:\n            (*arg1[1])(arg1[0xe]);\n            (*arg1[1])(arg1[0xf]);\n            return 1;\n        }\n        puVar4 = *arg1;\n    }\n    else {\n        if (uVar5 == 2) {\n            iVar3 = fcn.100007d54(arg1[0xc]);\n            goto code_r0x0001000097a8;\n        }\n        if (uVar5 != 3) {\n            if (uVar5 == 0xf) {\n                return 1;\n            }\n            puVar4 = *arg1;\n            *puVar4 = 6;\n            goto code_r0x0001000097b5;\n        }\n        piVar1 = arg1[0xc];\n        if (*piVar1 == 0x4349444c) {\n            piVar2 = *(piVar1 + 0x12);\n            if (*piVar2 != 0) {\n                (*piVar2[0x5df])();\n                *piVar2 = 0;\n            }\n            *piVar1 = 0;\n            (**(piVar1 + 4))(*(piVar1 + 0x12));\n            (**(piVar1 + 4))(piVar1);\n            goto code_r0x00010000976c;\n        }\n        puVar4 = *arg1;\n    }\n    *puVar4 = 7;\ncode_r0x0001000097b5:\n    puVar4[1] = 0;\n    puVar4[2] = 1;\n    return 0;\n}\n",
        "token_count": 513
    },
    "100009c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.100009c60(int32_t *arg1, uint32_t *arg2, code *arg3, code *arg4)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int64_t arg1_00;\n    int32_t iVar3;\n    uint32_t *in_stack_00000028;\n    ulong *in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    \n    if ((arg2 == NULL) || (in_stack_00000028 == NULL)) {\n        return 2;\n    }\n    if (*arg1 + 0x1804U < 0x1804) {\n        return 3;\n    }\n    *in_stack_00000028 = *arg1 + 0x1804U;\n    if (in_stack_00000030 == NULL) {\ncode_r0x000100009cc6:\n        iVar3 = 0;\n    }\n    else {\n        *in_stack_00000030 = 0;\n        puVar2 = (*arg3)(0x50);\n        if (puVar2 == NULL) {\n            return 1;\n        }\n        arg1_00 = (*arg3)(0x2f28);\n        *(puVar2 + 0x12) = arg1_00;\n        if (arg1_00 == 0) {\n            iVar3 = 1;\n        }\n        else {\n            *(puVar2 + 8) = in_stack_00000040;\n            *(puVar2 + 10) = in_stack_00000048;\n            *(puVar2 + 0xe) = in_stack_00000058;\n            *(puVar2 + 6) = in_stack_00000038;\n            *(puVar2 + 0xc) = in_stack_00000050;\n            *(puVar2 + 2) = arg3;\n            *(puVar2 + 4) = arg4;\n            puVar2[0x10] = *arg1;\n            uVar1 = arg2[1];\n            *puVar2 = 0x4349444c;\n            puVar2[0x11] = uVar1;\n            iVar3 = fcn.100009e44(arg1_00, *arg2, arg3, arg4);\n            if (iVar3 == 0) {\n                *in_stack_00000030 = puVar2;\n                goto code_r0x000100009cc6;\n            }\n            (*arg4)(*(puVar2 + 0x12));\n        }\n        (*arg4)(puVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 605
    },
    "100009e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.100009e44(int64_t *arg1, ulong arg2, code *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    \n    arg1[0x5e0] = in_stack_00000028;\n    arg1[0x5e1] = in_stack_00000030;\n    arg1[0x5de] = arg3;\n    arg1[0x5e2] = in_stack_00000038;\n    arg1[0x5df] = arg4;\n    arg1[0x5e3] = in_stack_00000040;\n    *(arg1 + 1) = arg2;\n    arg1[0x5e4] = in_stack_00000048;\n    *(arg1 + 0xc) = arg2 - 1;\n    if ((((arg2 & arg2 - 1) == 0) && (0x7fff < arg2)) && (arg2 < 0x200001)) {\n        uVar5 = 4;\n        uVar6 = 4;\n        *(arg1 + 0x2ec5) = 4;\n        do {\n            uVar2 = uVar6;\n            uVar6 = uVar6 + 1;\n            uVar1 = *(uVar2 + 0x1000018e0);\n            *(arg1 + 0x2ec5) = uVar6;\n            uVar5 = uVar5 + (1 << (uVar1 & 0x1f));\n        } while (uVar5 < arg2);\n        iVar3 = (*arg3)(arg2 + 0x105);\n        *arg1 = iVar3;\n        if (iVar3 == 0) {\n            uVar4 = 1;\n        }\n        else {\n            fcn.100009f28(arg1);\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 5;\n    }\n    return uVar4;\n}\n",
        "token_count": 531
    },
    "100009f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.100009f28(int64_t s)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *(s + 0x2ec5) * 8 + 0x100;\n    uVar2 = 0x2a0;\n    if (uVar1 < 0x2a0) {\n        uVar2 = uVar1;\n    }\n    sub.msvcrt.dll_memset(s + 0xa1c, 0, uVar2);\n    uVar1 = *(s + 0x2ec5) * 8 + 0x100;\n    uVar2 = 0x2a0;\n    if (uVar1 < 0x2a0) {\n        uVar2 = uVar1;\n    }\n    sub.msvcrt.dll_memset(s + 0x2b24, 0, uVar2);\n    sub.msvcrt.dll_memset(s + 0xcbc, 0, 0xf9);\n    sub.msvcrt.dll_memset(s + 0x2dc4, 0, 0xf9);\n    *(s + 0x10) = 1;\n    *(s + 0x14) = 1;\n    *(s + 0x2ec8) = 1;\n    *(s + 0x18) = 1;\n    *(s + 0x2eec) = 1;\n    *(s + 0x2ee4) = 0;\n    *(s + 0x2ed0) = 0;\n    *(s + 0x2ed8) = 0;\n    *(s + 0x2b20) = 0;\n    return;\n}\n",
        "token_count": 383
    },
    "10000aba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.10000aba4(int64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint uVar2;\n    char cVar3;\n    uint64_t uVar4;\n    uint16_t uVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int64_t iVar9;\n    int16_t *piVar10;\n    uchar auStack168 [32];\n    uint16_t auStack136 [17];\n    ulong var_5eh;\n    int16_t aiStack94 [12];\n    ulong var_3eh;\n    uint64_t var_36h;\n    ulong var_bp_10h;\n    \n    *NULL = *0x10000f100 ^ auStack168;\n    iVar9 = 0;\n    iVar6 = iVar9;\n    do {\n        uVar2 = *(arg1 + 0x2ec0);\n        fcn.10000a05c(arg1, 3);\n        *(arg1 + 0xe38 + iVar6) = uVar2 >> 0x1d;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 8);\n    if (*(arg1 + 0x2ecc) == 0) {\n        uVar5 = 0;\n        piVar10 = aiStack94;\n        for (iVar6 = 0x10; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *piVar10 = 0;\n            piVar10 = piVar10 + 1;\n        }\n        do {\n            uVar4 = uVar5;\n            if (0x10 < *(uVar4 + 0xe38 + arg1)) goto code_r0x00010000ad7b;\n            uVar5 = uVar5 + 1;\n            aiStack94[*(uVar4 + 0xe38 + arg1) - 1] = aiStack94[*(uVar4 + 0xe38 + arg1) - 1] + 1;\n        } while (uVar5 < 8);\n        auStack136[1] = 0;\n        iVar6 = iVar9;\n        uVar5 = 1;\n        do {\n            uVar8 = uVar5 + 1;\n            *(auStack136 + iVar6 + 4) = (*(aiStack94 + iVar6) << (0x10U - uVar5 & 0x1f)) + *(auStack136 + iVar6 + 2);\n            iVar6 = iVar6 + 2;\n            uVar5 = uVar8;\n        } while (uVar8 < 0x11);\n        if (var_5eh == 0) {\n            uVar4 = 1;\n            do {\n                puVar1 = auStack136 + iVar9 + 2;\n                *puVar1 = *puVar1 >> 9;\n                cVar3 = uVar4;\n                uVar5 = uVar4 + 1;\n                uVar4 = uVar5;\n                *(aiStack94 + iVar9) = 1 << (7U - cVar3 & 0x1f);\n                iVar9 = iVar9 + 2;\n            } while (uVar5 < 8);\n            if (uVar5 < 0x11) {\n                piVar10 = aiStack94 + (uVar4 - 1);\n                do {\n                    uVar5 = uVar4 + 1;\n                    *piVar10 = 1 << (0x10U - uVar4 & 0x1f);\n                    piVar10 = piVar10 + 1;\n                    uVar4 = uVar5;\n                } while (uVar5 < 0x11);\n            }\n            sub.msvcrt.dll_memset();\n            uVar4 = 0;\n            do {\n                uVar7 = *(uVar4 + 0xe38 + arg1);\n                if (uVar7 != 0) {\n                    uVar5 = aiStack94[uVar7 - 1] + auStack136[uVar7];\n                    if (0x80 < uVar5) break;\n                    if (auStack136[uVar7] < uVar5) {\n                        sub.msvcrt.dll_memset();\n                    }\n                    auStack136[uVar7] = uVar5;\n                }\n                uVar7 = uVar4 + 1;\n                uVar4 = uVar7;\n            } while (uVar7 < 8);\n        }\n    }\ncode_r0x00010000ad7b:\n    fcn.10000c380(stack0xffffffffffffffc8 ^ auStack168);\n    return;\n}\n",
        "token_count": 1042
    },
    "10000c47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10000c474(void)\n\n{\n    fcn.10000c3a8();\n    return;\n}\n",
        "token_count": 27
    },
    "10000c73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.10000c73c(int16_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = NULL;\n    piVar2 = piVar1;\n    if ((((arg1 != NULL) && (arg1 != 0xffffffffffffffff)) && (*arg1 == 0x5a4d)) &&\n       (((-1 < *(arg1 + 0x1e) && (*(arg1 + 0x1e) < 0x10000000)) &&\n        (piVar2 = *(arg1 + 0x1e) + arg1,  *(*(arg1 + 0x1e) + arg1) != 0x4550)))) {\n        piVar2 = piVar1;\n    }\n    return piVar2;\n}\n",
        "token_count": 185
    },
    "10000265": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "link function at runtime on Windows",
            "get common file path",
            "query or enumerate registry value",
            "set registry value",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.100002658(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    char *arg3;\n    bool bVar7;\n    uchar auStackY664 [32];\n    uint uVar8;\n    uchar *puVar9;\n    ulong noname_6;\n    uchar *noname_7;\n    uchar *noname_8;\n    ulong in_stack_fffffffffffffdb0;\n    ulong in_stack_fffffffffffffdb8;\n    ulong in_stack_fffffffffffffdc0;\n    uchar uVar10;\n    unkbyte7 in_stack_fffffffffffffdc9;\n    ulong in_stack_fffffffffffffdd0;\n    ulong in_stack_fffffffffffffdd8;\n    ulong in_stack_fffffffffffffde0;\n    ulong in_stack_fffffffffffffde8;\n    ulong in_stack_fffffffffffffdf0;\n    ulong in_stack_fffffffffffffdf8;\n    ulong in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe10;\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    ulong in_stack_fffffffffffffe28;\n    ulong in_stack_fffffffffffffe30;\n    ulong in_stack_fffffffffffffe38;\n    ulong in_stack_fffffffffffffe40;\n    ulong in_stack_fffffffffffffe48;\n    ulong in_stack_fffffffffffffe50;\n    ulong in_stack_fffffffffffffe58;\n    ulong in_stack_fffffffffffffe60;\n    ulong in_stack_fffffffffffffe68;\n    ulong in_stack_fffffffffffffe70;\n    ulong in_stack_fffffffffffffe78;\n    ulong in_stack_fffffffffffffe80;\n    ulong in_stack_fffffffffffffe88;\n    ulong in_stack_fffffffffffffe90;\n    ulong in_stack_fffffffffffffe98;\n    ulong in_stack_fffffffffffffea0;\n    ulong in_stack_fffffffffffffea8;\n    ulong in_stack_fffffffffffffeb0;\n    ulong in_stack_fffffffffffffeb8;\n    ulong in_stack_fffffffffffffec0;\n    ulong in_stack_fffffffffffffec8;\n    ulong in_stack_fffffffffffffed0;\n    uchar uVar11;\n    unkbyte7 in_stack_fffffffffffffed9;\n    ulong in_stack_fffffffffffffee0;\n    ulong in_stack_fffffffffffffee8;\n    ulong in_stack_fffffffffffffef0;\n    ulong in_stack_fffffffffffffef8;\n    ulong in_stack_ffffffffffffff00;\n    ulong in_stack_ffffffffffffff08;\n    ulong in_stack_ffffffffffffff10;\n    ulong in_stack_ffffffffffffff18;\n    ulong in_stack_ffffffffffffff20;\n    ulong in_stack_ffffffffffffff28;\n    ulong in_stack_ffffffffffffff30;\n    ulong in_stack_ffffffffffffff38;\n    ulong in_stack_ffffffffffffff40;\n    \n    uVar3 = *0x10000f100 ^ auStackY664;\n    uVar10 = 0;\n    sub.msvcrt.dll_memset(&stack0xfffffffffffffdc9, 0, 0x103);\n    uVar11 = 0;\n    sub.msvcrt.dll_memset(&stack0xfffffffffffffed9, 0, 0x103);\n    noname_8 = &stack0xfffffffffffffdc0;\n    noname_7 = &stack0xfffffffffffffdb8;\n    noname_6 = 0;\n    bVar7 = false;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0xffffffff80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0);\n    if (iVar1 != 0) goto code_r0x0001000028e5;\n    uVar6 = 0;\n    do {\n        fcn.100001b10(0x1000103f0, 0x50, \"wextract_cleanup%d\", uVar6);\n        puVar9 = &stack0xfffffffffffffdc4;\n        uVar8 = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(in_stack_fffffffffffffdb8, 0x1000103f0, 0);\n        if (iVar1 != 0) break;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 200);\n    if (uVar6 == 200) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_stack_fffffffffffffdb8);\n        *0x1000103f0 = 0;\n        goto code_r0x0001000028e5;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&stack0xfffffffffffffed8);\n    fcn.100007ddc(&stack0xfffffffffffffed8, 0x104, 0x1000016b0);\n    iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&stack0xfffffffffffffed8);\n    if (iVar4 == 0) {\ncode_r0x000100002846:\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x100010ee0, &stack0xfffffffffffffdc8);\n        if (iVar1 != 0) goto code_r0x0001000027ee;\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4);\n        bVar7 = iVar5 != 0;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n        if (!bVar7) goto code_r0x000100002846;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&stack0xfffffffffffffdc8);\n        if (iVar1 != 0) {\n            fcn.100007ddc(&stack0xfffffffffffffdc8, 0x104, 0x100001609);\n        }\ncode_r0x0001000027ee:\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x100010670);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        uVar6 = iVar1 + 0x50 + iVar2;\n        iVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uVar6);\n        if (iVar4 != 0) {\n            arg3 = \"%s /D:%s\";\n            *0x100010440 = !bVar7;\n            if (bVar7) {\n                arg3 = \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\";\n            }\n            fcn.100001b10(iVar4, uVar6, arg3, &stack0xfffffffffffffdc8);\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar4);\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(in_stack_fffffffffffffdb8, 0x1000103f0, 0, 1);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_stack_fffffffffffffdb8);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar4);\n            goto code_r0x0001000028e5;\n        }\n        fcn.100005420(0, 0x4b5, 0, 0, CONCAT44(uVar8, 0x10), puVar9 & 0xffffffff00000000, noname_6, noname_7, noname_8, \n                      in_stack_fffffffffffffdb0, in_stack_fffffffffffffdb8, in_stack_fffffffffffffdc0, \n                      CONCAT71(in_stack_fffffffffffffdc9, uVar10), in_stack_fffffffffffffdd0, in_stack_fffffffffffffdd8\n                      , in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, in_stack_fffffffffffffdf0, \n                      in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, in_stack_fffffffffffffe08, \n                      in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, in_stack_fffffffffffffe20, \n                      in_stack_fffffffffffffe28, in_stack_fffffffffffffe30, in_stack_fffffffffffffe38, \n                      in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, in_stack_fffffffffffffe50, \n                      in_stack_fffffffffffffe58, in_stack_fffffffffffffe60, in_stack_fffffffffffffe68, \n                      in_stack_fffffffffffffe70, in_stack_fffffffffffffe78, in_stack_fffffffffffffe80, \n                      in_stack_fffffffffffffe88, in_stack_fffffffffffffe90, in_stack_fffffffffffffe98, \n                      in_stack_fffffffffffffea0, in_stack_fffffffffffffea8, in_stack_fffffffffffffeb0, \n                      in_stack_fffffffffffffeb8, in_stack_fffffffffffffec0, in_stack_fffffffffffffec8, \n                      in_stack_fffffffffffffed0, CONCAT71(in_stack_fffffffffffffed9, uVar11), in_stack_fffffffffffffee0\n                      , in_stack_fffffffffffffee8, in_stack_fffffffffffffef0, in_stack_fffffffffffffef8, \n                      in_stack_ffffffffffffff00, in_stack_ffffffffffffff08, in_stack_ffffffffffffff10, \n                      in_stack_ffffffffffffff18, in_stack_ffffffffffffff20, in_stack_ffffffffffffff28, \n                      in_stack_ffffffffffffff30, in_stack_ffffffffffffff38, in_stack_ffffffffffffff40);\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_stack_fffffffffffffdb8);\ncode_r0x0001000028e5:\n    fcn.10000c380(uVar3 ^ auStackY664);\n    return;\n}\n",
        "token_count": 2153
    },
    "100001a5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.100001a58(char *arg1, uint64_t arg2, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    if ((arg2 == 0) || (0x7fffffff < arg2)) {\n        iVar5 = -0x7ff8ffa9;\n    }\n    if ((iVar5 < 0) || (uVar1 = arg2,  pcVar2 = arg1,  iVar5 = -0x7ff8ffa9,  arg2 == 0)) {\ncode_r0x000100001aac:\n        iVar4 = 0;\n    }\n    else {\n        do {\n            if (*pcVar2 == '\\0') break;\n            pcVar2 = pcVar2 + 1;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n        if (uVar1 == 0) goto code_r0x000100001aac;\n        iVar4 = arg2 - uVar1;\n        iVar5 = 0;\n    }\n    if (iVar5 < 0) {\n        return iVar5;\n    }\n    arg1 = arg1 + iVar4;\n    iVar5 = 0;\n    iVar3 = arg2 - iVar4;\n    if (iVar3 != 0) {\n        arg3 = arg3 - arg1;\n        iVar4 = (iVar3 - arg2) + 0x7fffffff + iVar4;\n        do {\n            if ((iVar4 == 0) || (arg1[arg3] == '\\0')) break;\n            *arg1 = arg1[arg3];\n            iVar4 = iVar4 + -1;\n            arg1 = arg1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        if (iVar3 != 0) goto code_r0x000100001afe;\n    }\n    arg1 = arg1 + -1;\n    iVar5 = -0x7ff8ff86;\ncode_r0x000100001afe:\n    *arg1 = '\\0';\n    return iVar5;\n}\n",
        "token_count": 493
    },
    "10000670": {
        "rules": [
            "contain loop",
            "delete directory",
            "create directory",
            "get system information on Windows"
        ],
        "decompiled_code": "\nvoid fcn.100006704(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong arg3_00;\n    uchar auStack376 [32];\n    int16_t aiStack344 [24];\n    char acStack296 [272];\n    uint64_t uStack24;\n    \n    uStack24 = *0x10000f100 ^ auStack376;\n    if (arg2 == 0) {\n        iVar3 = 0x104;\n        pcVar2 = 0x100010670;\n        do {\n            if ((iVar3 == -0x7ffffefa) || (pcVar2[arg1 + -0x100010670] == '\\0')) break;\n            *pcVar2 = pcVar2[arg1 + -0x100010670];\n            pcVar2 = pcVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        if (iVar3 == 0) {\n            pcVar2 = pcVar2 + -1;\n        }\n        *pcVar2 = '\\0';\n    }\n    else {\n        iVar1 = fcn.1000065cc(arg1, acStack296);\n        if (iVar1 == 0) goto code_r0x0001000068a0;\n        pcVar2 = 0x100010670;\n        iVar3 = 0x104;\n        do {\n            if ((iVar3 == -0x7ffffefa) || ((&stack0xfffffffefffef868)[pcVar2] == '\\0')) break;\n            *pcVar2 = (&stack0xfffffffefffef868)[pcVar2];\n            pcVar2 = pcVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        if (iVar3 == 0) {\n            pcVar2 = pcVar2 + -1;\n        }\n        *pcVar2 = '\\0';\n        if ((*0x100010ec4 & 0x20) != 0) {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(aiStack344);\n            if (aiStack344[0] == 0) {\n                arg3_00 = 0x100001888;\n            }\n            else if (aiStack344[0] == 1) {\n                arg3_00 = 0x100001890;\n            }\n            else if (aiStack344[0] == 2) {\n                arg3_00 = 0x100001898;\n            }\n            else {\n                if (aiStack344[0] != 3) goto code_r0x0001000067e4;\n                arg3_00 = 0x1000018a0;\n            }\n            fcn.100007ddc(0x100010670, 0x104, arg3_00);\n        }\ncode_r0x0001000067e4:\n        fcn.100007ddc(0x100010670, 0x104, 0x100001609);\n    }\n    iVar1 = fcn.100006da4(0x100010670);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x100010670);\n        if (iVar1 == 0) {\n            *0x100010488 = fcn.100007924();\n            goto code_r0x0001000068a0;\n        }\n        *0x100011400 = 1;\n    }\n    if (((arg3 & 0xffffffff) == 0) || (iVar1 = fcn.100006eec(0x100010670, arg3 & 0xffffffff, 0),  iVar1 != 0)) {\n        *0x100010488 = 0;\n    }\n    else if (*0x100011400 != 0) {\n        *0x100011400 = 0;\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(0x100010670);\n    }\ncode_r0x0001000068a0:\n    fcn.10000c380(uStack24 ^ auStack376);\n    return;\n}\n",
        "token_count": 924
    },
    "100001b7": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.100001b7c(uint *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uchar auStack152 [32];\n    uint uStack120;\n    uint uStack112;\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    uint uStack80;\n    ulong *puStack72;\n    ulong uStack56;\n    uint uStack48;\n    ushort uStack44;\n    uint64_t uStack40;\n    \n    uStack40 = *0x10000f100 ^ auStack152;\n    uStack48 = 0;\n    uStack44 = 0x500;\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x100001610);\n    if (iVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x100001620);\n        if (pcVar3 != NULL) {\n            puStack72 = &uStack56;\n            uStack80 = 0;\n            uStack88 = 0;\n            uStack96 = 0;\n            uStack104 = 0;\n            uStack112 = 0;\n            uStack120 = 0;\n            *arg1 = 0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)(&uStack48, 2, 0x20, 0x220);\n            if (iVar1 != 0) {\n                (*pcVar3)(0, uStack56, arg1);\n                (*_sym.imp.ADVAPI32.dll_FreeSid)(uStack56);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n    }\n    fcn.10000c380(uStack40 ^ auStack152);\n    return;\n}\n",
        "token_count": 404
    }
}