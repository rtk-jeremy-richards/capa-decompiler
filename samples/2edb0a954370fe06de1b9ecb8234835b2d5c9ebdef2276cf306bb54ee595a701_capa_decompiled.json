{
    "004016b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004016b3(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *in_ECX;\n    uint32_t in_EDX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if ((in_EDX == 0) || (0x7fffffff < in_EDX)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    if (-1 < iVar2) {\n        pcVar1 = in_ECX;\n        if (in_EDX != 0) {\n            do {\n                if (*pcVar1 == '\\0') break;\n                pcVar1 = pcVar1 + 1;\n                in_EDX = in_EDX - 1;\n            } while (in_EDX != 0);\n        }\n        iVar2 = (-(in_EDX != 0) & 0x7ff8ffa9) + 0x80070057;\n        if (-1 < iVar2) {\n            iVar2 = fcn.00401781(in_ECX, arg_8h);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 244
    },
    "004019e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_204h\n\nvoid __cdecl fcn.004019e0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t var_204h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        fcn.004043d0();\n        var_204h = var_204h & 0xffffff00;\n        (*_sym.imp.USER32.dll_LoadStringA)(*0x409a3c, arg_14h, &var_204h, 0x200);\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x83f, &var_204h);\n        (*_sym.imp.USER32.dll_MessageBeep)(0xffffffff);\n    }\n    else if ((arg_ch == 0x111) && (arg_10h - 0x83dU < 2)) {\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n    }\n    fcn.00406ce0(var_204h);\n    return;\n}\n",
        "token_count": 292
    },
    "00401a84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00401a84(char **param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    pcVar2 = *param_1;\n    while( true ) {\n        iVar1 = fcn.0040667f();\n        if (iVar1 == 0) {\n            *param_1 = pcVar2;\n            for (; (iVar1 = fcn.0040667f(),  iVar1 == 0 && (pcVar2[iVar3] != '\\0')); iVar3 = iVar3 + 1) {\n            }\n            pcVar2 = pcVar2 + iVar3;\n            if (*pcVar2 != '\\0') {\n                *pcVar2 = '\\0';\n                pcVar2 = pcVar2 + 1;\n            }\n            return pcVar2;\n        }\n        if (*pcVar2 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 233
    },
    "00401ae8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401ae8(uint *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uchar *arg_8h_00;\n    uint *puVar4;\n    uint in_ECX;\n    uint32_t extraout_ECX;\n    uint *puVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uint noname_0;\n    uint uVar8;\n    uint arg_14h;\n    uint var_618h;\n    uint var_614h;\n    char *var_610h;\n    uint var_60ch;\n    uint var_20ch;\n    uint lpszShortPath;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    fcn.00401680(in_ECX);\n    if (var_20ch == '\\\"') {\n        puVar4 = &fcn.00401ae8::var_20ch + 1;\n    }\n    else {\n        puVar4 = &fcn.00401ae8::var_20ch;\n    }\n    var_610h = fcn.00401a84();\n    uVar6 = extraout_ECX;\n    if (puVar4 == NULL) {\ncode_r0x00401b9f:\n        fcn.00401781(uVar6, 0x4091e4);\n        fcn.0040658a(puVar4);\n    }\n    else {\n        puVar5 = puVar4;\n        do {\n            cVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = puVar5 - (puVar4 + 1);\n        if ((uVar6 < 3) ||\n           (((*(puVar4 + 1) != ':' || (*(puVar4 + 2) != '\\\\')) && ((*puVar4 != '\\\\' || (*(puVar4 + 1) != '\\\\'))))))\n        goto code_r0x00401b9f;\n        fcn.00401680(puVar4);\n    }\n    iVar2 = fcn.004066c8();\n    if ((iVar2 == 0) ||\n       (iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1, iVar2, 0xffffffff, 0x401174, 0xffffffff),  iVar2 != 2))\n    {\n        iVar2 = fcn.004066c8();\n        if ((iVar2 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1, iVar2, 0xffffffff, 0x4011bc, 0xffffffff), \n           iVar2 != 2)) {\n            arg_14h = 0x40;\n            uVar8 = 0x401e05;\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x400);\n            if (arg_8h_00 != NULL) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&fcn.00401ae8::lpszShortPath);\n                if ((uVar6 == 0xffffffff) || ((uVar6 & 0x10) != 0)) {\n                    fcn.00401680(in_ECX);\n                }\n                else {\n                    fcn.00401781(noname_0, &fcn.00401ae8::lpszShortPath);\n                    if ((var_610h != NULL) && (*var_610h != '\\0')) {\n                        fcn.004016b3(0x401170);\n                        fcn.004016b3(var_610h);\n                    }\n                }\n                *arg_8h_00 = 0;\n                fcn.00402aac(arg_8h_00);\n                goto code_r0x00401e89;\n            }\n        }\n        else {\n            pcVar3 = \"Command.com /c %s\";\n            do {\n                pcVar7 = pcVar3;\n                pcVar3 = pcVar7 + 1;\n            } while (*pcVar7 != '\\0');\n            puVar4 = &fcn.00401ae8::lpszShortPath;\n            do {\n                cVar1 = *puVar4;\n                puVar4 = puVar4 + 1;\n            } while (cVar1 != '\\0');\n            arg_14h = 0x40;\n            uVar8 = 0x401dce;\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)\n                                  (0x40, pcVar7 + puVar4 + (-0x40810c - (&fcn.00401ae8::lpszShortPath + 1)));\n            if (arg_8h_00 != NULL) {\n                fcn.0040171e(arg_8h_00, pcVar7 + puVar4 + (-0x40810c - (&fcn.00401ae8::lpszShortPath + 1)), \n                             \"Command.com /c %s\", &fcn.00401ae8::lpszShortPath);\ncode_r0x00401e89:\n                *arg_8h = arg_8h_00;\n                goto code_r0x00401e94;\n            }\n        }\ncode_r0x00401dd4:\n        puVar4 = NULL;\n    }\n    else {\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&fcn.00401ae8::lpszShortPath);\n        if ((uVar6 != 0xffffffff) && ((~(uVar6 >> 4) & 1) != 0)) {\n            pcVar3 = fcn.00401a84();\n            if (pcVar3 != NULL) {\n                if (*pcVar3 != '\\0') {\n                    var_610h = pcVar3;\n                }\n                fcn.00401a84();\n            }\n            arg_14h = 0x200;\n            uVar8 = 0x40;\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n            if (arg_8h_00 != NULL) {\n                pcVar3 = var_610h;\n                if (*var_610h == '\\0') {\n                    pcVar3 = \"DefaultInstall\";\n                }\n                *0x409120 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)\n                                      (pcVar3, 0x401184, 0, &fcn.00401ae8::lpszShortPath);\n                *arg_ch = 1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                                  (0x401198, 0x40118c, 0x401140, arg_8h_00, 8, &fcn.00401ae8::lpszShortPath);\n                if (iVar2 == 0) {\n                    *0x409a34 = *0x409a34 & 0xfffffffb;\n                    if (*0x409a40 == 0) {\n                        uVar8 = 0x4011a0;\n                        (*_sym.imp.KERNEL32.dll_GetShortPathNameA)\n                                  (&fcn.00401ae8::lpszShortPath, &fcn.00401ae8::lpszShortPath, 0x104);\n                    }\n                    else {\n                        uVar8 = 0x4011ac;\n                    }\n                    fcn.0040171e(arg_8h_00, 0x200, \"rundll32.exe %s,InstallHinfSection %s 128 %s\", uVar8);\n                }\n                else {\n                    *0x409a34 = *0x409a34 | 4;\n                    if (*var_610h == '\\0') {\n                        var_610h = \"DefaultInstall\";\n                    }\n                    fcn.00401680(var_610h);\n                    fcn.00401680(&fcn.00401ae8::lpszShortPath);\n                }\n                goto code_r0x00401e89;\n            }\n            goto code_r0x00401dd4;\n        }\n        arg_14h = 0;\n        uVar8 = 0x10;\n        puVar4 = &fcn.00401ae8::lpszShortPath;\n    }\n    fcn.004044b9(puVar4, 0, uVar8, arg_14h);\ncode_r0x00401e94:\n    fcn.00406ce0(arg_14h);\n    return;\n}\n",
        "token_count": 1907
    },
    "00401ea7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00401ea7(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar1 = *0x409a44;\n    if ((*0x409120 == 0) && (iVar2 = fcn.0040256d(),  iVar1 == iVar2)) {\n        return 0xffffffff;\n    }\n    return 2;\n}\n",
        "token_count": 91
    },
    "00401f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpLuid\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00401f90(uint32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar auStack36 [4];\n    uint uStack32;\n    uint TokenHandle;\n    uint32_t NewState;\n    uint lpLuid;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((param_1 & 2) == 0) && (iVar2 = fcn.00401ea7(),  iVar2 != 2)) {\n        return;\n    }\n    if ((param_1 & 4) == 0) {\n        lpLuid = 0x401140;\n        NewState = 0x401fc0;\n        iVar2 = fcn.004044b9(0x401140, 0, 0x40, 4);\n        if (iVar2 != 6) {\n            return;\n        }\n    }\n    if (*0x409a40 == 0) {\n        NewState = 0;\n        TokenHandle = 2;\n        uStack32 = 0x401fd9;\n        (*_sym.imp.USER32.dll_ExitWindowsEx)();\n        return;\n    }\n    NewState = *0x408004 ^ &fcn.00401f90::lpLuid;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xffffffd4);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    if (iVar2 != 0) {\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, 0x4011c4, &stack0xffffffdc);\n        uStack40 = 1;\n        TokenHandle = 2;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(uStack44, 0, &stack0xffffffd8, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack44);\n        if (iVar2 != 0) {\n            uVar1 = 0x401f73;\n            iVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2);\n            if (iVar2 != 0) goto code_r0x00401f81;\n        }\n    }\n    uVar1 = 0;\n    fcn.004044b9(0, 0, 0x10, 0);\ncode_r0x00401f81:\n    fcn.00406ce0(uVar1);\n    return;\n}\n",
        "token_count": 622
    },
    "00401fe1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00401fe1(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    if (*0x408530 != '\\0') {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x20006, &hKey);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(hKey, 0x408530);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00402267": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpcbData\n\nvoid fcn.00402267(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint lpcbData;\n    uint hKey;\n    uint lpData;\n    uint lpBuffer;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if ((*0x408530 != '\\0') &&\n       (iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0x2001f, &hKey), \n       iVar2 == 0)) {\n        lpcbData = 0x238;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x408530, 0, 0, &lpData, &lpcbData);\n        if (iVar2 == 0) {\n            sub.msvcrt.dll_memset(&lpBuffer, 0, 0x104);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n            if (iVar2 != 0) {\n                fcn.0040658a(0x401140);\n            }\n            fcn.0040171e(&lpData, 0x238, \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\", &lpBuffer);\n            puVar3 = &lpData;\n            do {\n                cVar1 = *puVar3;\n                puVar3 = puVar3 + 1;\n            } while (cVar1 != '\\0');\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0x408530, 0, 1, &lpData, puVar3 + (1 - (&lpData + 1)));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    fcn.00406ce0(lpcbData);\n    return;\n}\n",
        "token_count": 477
    },
    "00402390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402390(char *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_stack_fffffda4;\n    uchar auStack568 [8];\n    uchar auStack560 [264];\n    uchar auStack296 [8];\n    uchar auStack288 [276];\n    uint32_t uStack12;\n    \n    uStack12 = *0x408004 ^ &stack0xfffffda4;\n    if ((param_1 != NULL) && (*param_1 != '\\0')) {\n        fcn.00401680(param_1);\n        fcn.004016b3(0x4011f4);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(auStack288, &stack0xfffffda0);\n        if (iVar1 != -1) {\n            do {\n                fcn.00401680(param_1);\n                if ((in_stack_fffffda4 & 0x10) == 0) {\n                    fcn.004016b3(auStack560);\n                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(auStack288, 0x80);\n                    (*_sym.imp.KERNEL32.dll_DeleteFileA)(auStack296);\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(auStack560, 0x4011f8);\n                    if (iVar2 != 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(auStack568, 0x4011fc);\n                        if (iVar2 != 0) {\n                            fcn.004016b3(auStack568);\n                            fcn.0040658a(0x401140);\n                            fcn.00402390();\n                        }\n                    }\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar1, &stack0xfffffd9c);\n            } while (iVar2 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(param_1);\n        }\n    }\n    fcn.00406ce0(in_stack_fffffda4);\n    return;\n}\n",
        "token_count": 491
    },
    "0040256d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040256d(uint param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint phkResult;\n    uint32_t var_4h;\n    \n    uVar1 = param_1;\n    phkResult = param_1;\n    if (uVar1 == 0) {\n        var_4h = param_1;\n        uVar3 = fcn.004024e0();\n        return uVar3;\n    }\n    if (uVar1 == 1) {\n        var_4h = 0;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                          (0x80000002, \"System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\FileRenameOperations\", 0, \n                           0x20019, &phkResult);\n        if (iVar2 != 0) {\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyA)(phkResult, 0, 0, 0, 0, 0, 0, &var_4h, 0, 0, 0, 0);\n    }\n    else {\n        if (uVar1 < 2) {\n            return 0;\n        }\n        if (3 < uVar1) {\n            return 0;\n        }\n        var_4h = 0;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, 0x40800c, 0, 0x20019, &phkResult);\n        if (iVar2 != 0) {\n            return var_4h;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, \"PendingFileRenameOperations\", 0, 0, 0, &var_4h);\n    }\n    var_4h = var_4h & ~-(iVar2 != 0);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    return var_4h;\n}\n",
        "token_count": 480
    },
    "0040268b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040268b(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint in_stack_ffffffdc;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    *0x409124 = 0x70;\n    if (in_ECX == 1) {\n        fcn.0040171e(&var_10h, 10, 0x40120c, arg_8h + in_EDX);\n        in_stack_ffffffdc = 0;\n        fcn.004044b9(&var_10h, 0, 0x10, 0);\n    }\n    else if (in_ECX == 4) {\n        fcn.0040171e(&var_10h, 10, 0x40120c, arg_8h + in_EDX);\n        in_stack_ffffffdc = 5;\n        fcn.004044b9(&var_10h, 0, 0x20, 5);\n    }\n    else if (in_ECX == 2) {\n        fcn.0040171e(&var_10h, 10, 0x40120c, arg_8h);\n        in_stack_ffffffdc = 0x104;\n        iVar1 = fcn.004044b9(&var_10h, arg_ch, 0x40, 0x104);\n        if (iVar1 == 6) {\n            *0x409124 = 0;\n        }\n    }\n    fcn.00406ce0(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 390
    },
    "00402773": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402773(char *arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_ECX;\n    uint noname_0;\n    uint in_stack_fffffeb8;\n    uint lpcbData;\n    uint phkResult;\n    int32_t lpType;\n    char *var_110h;\n    uint var_109h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    bVar1 = false;\n    var_110h = arg_8h;\n    *in_ECX = 0;\n    if (*arg_8h == '#') {\n        var_109h._0_1_ = (*_sym.imp.USER32.dll_CharUpperA)(arg_8h[1]);\n        uVar2 = (*_sym.imp.USER32.dll_CharNextA)(arg_8h + 1);\n        var_110h = (*_sym.imp.USER32.dll_CharNextA)(uVar2);\n        if (var_109h == 'S') goto code_r0x004028b7;\n        if (var_109h != 'W') {\n            fcn.00401781(noname_0, 0x401210);\n            fcn.0040658a(var_110h);\n            in_stack_fffffeb8 = 0;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000002, &var_109h + 1, 0, 0x20019, &phkResult);\n            if (iVar3 != 0) goto code_r0x004028c3;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, 0x401140, 0, &lpType);\n            if (iVar3 == 0) {\n                if ((lpType == 2) && (iVar3 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(),  iVar3 != 0)) {\n                    fcn.00401680(&var_109h + 1);\n                }\n                else if (lpType != 1) goto code_r0x0040289a;\n                bVar1 = true;\n            }\ncode_r0x0040289a:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            goto code_r0x004028bf;\n        }\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n    }\n    else {\ncode_r0x004028b7:\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\ncode_r0x004028bf:\n        if (bVar1) goto code_r0x004028d2;\n    }\ncode_r0x004028c3:\n    fcn.0040658a(var_110h);\ncode_r0x004028d2:\n    fcn.00406ce0(in_stack_fffffeb8);\n    return;\n}\n",
        "token_count": 674
    },
    "004028e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004028e8(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t lplpBuffer;\n    int32_t puLen;\n    uint *pBlock;\n    uint lpdwHandle;\n    int32_t dwLen;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint lptstrFilename;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_10h = 0;\n    if (0 < *(in_ECX + 0x7c)) {\n        var_4h = 0;\n        var_ch = in_ECX;\n        lptstrFilename = in_EDX;\n        do {\n            iVar6 = var_10h;\n            iVar5 = 0;\n            var_14h = *(var_ch + 0x80);\n            iVar1 = fcn.00402773(*(var_4h + var_ch + 0xbc + var_14h) + var_ch + 0x84);\n            if (iVar1 == 0) goto code_r0x00402a65;\n            dwLen = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(lptstrFilename, &lpdwHandle);\n            if (dwLen == 0) {\n                iVar6 = var_10h;\n                if ((*(var_4h + var_ch + 0x84 + var_14h) != 0) || (*(var_4h + var_ch + 0x88 + var_14h) != 0))\n                goto code_r0x00402a65;\n            }\n            else {\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, dwLen);\n                if (iVar7 == 0) goto code_r0x00402a65;\n                pBlock = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar7);\n                if (pBlock == NULL) goto code_r0x00402a65;\n                iVar1 = (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(lptstrFilename, lpdwHandle, dwLen, pBlock);\n                if (iVar1 != 0) {\n                    iVar1 = (*_sym.imp.VERSION.dll_VerQueryValueA)(pBlock, 0x401244, &lplpBuffer, &puLen);\n                    if ((iVar1 != 0) && (puLen != 0)) {\n                        dwLen = *(lplpBuffer + 0xc);\n                        var_2ch = *(lplpBuffer + 8);\n                        puVar2 = var_4h + var_ch + var_14h + 0x94;\n                        pBlock = puVar2;\n                        do {\n                            uVar3 = fcn.00402a89(puVar2[-4], puVar2[-3]);\n                            uVar4 = *puVar2;\n                            *(&var_34h + iVar5) = uVar3;\n                            uVar4 = fcn.00402a89(puVar2[-1], uVar4);\n                            iVar6 = var_10h;\n                            *(&var_3ch + iVar5) = uVar4;\n                            puVar2 = puVar2 + 6;\n                            iVar5 = iVar5 + 4;\n                        } while (iVar5 < 8);\n                        iVar5 = 0;\n                        if (((var_34h < 0) || (0 < var_3ch)) && ((var_30h < 0 || (0 < var_38h)))) {\n                            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar7);\n                            goto code_r0x00402a65;\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar7);\n                var_10h = iVar6;\n            }\n            var_10h = var_10h + 1;\n            var_4h = var_4h + 0x3c;\n        } while (var_10h < *(var_ch + 0x7c));\n    }\n    iVar5 = 1;\n    iVar6 = var_10h;\ncode_r0x00402a65:\n    *arg_ch = iVar6;\n    if (iVar7 != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar7);\n    }\n    return iVar5;\n}\n",
        "token_count": 1057
    },
    "00402aac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpszCurrent\n\nvoid __cdecl fcn.00402aac(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    char cVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint8_t *in_ECX;\n    uint *puVar7;\n    uint lpszCurrent;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if (*in_ECX != 0) {\n        puVar4 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x409a3c, &lpszCurrent, 0x104);\n        while (*in_ECX != 0) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(puVar4 & 0xffffff00 | *in_ECX);\n            *arg_8h = *in_ECX;\n            if (iVar5 != 0) {\n                arg_8h[1] = in_ECX[1];\n            }\n            if (*in_ECX == 0x23) {\n                in_ECX = (*_sym.imp.USER32.dll_CharNextA)(in_ECX);\n                cVar3 = (*_sym.imp.USER32.dll_CharUpperA)(*in_ECX);\n                if (cVar3 == 'D') {\n                    fcn.004065e8();\n                    puVar2 = &lpszCurrent;\n                    do {\n                        puVar7 = puVar2;\n                        puVar2 = puVar7 + 1;\n                    } while (*puVar7 != '\\0');\n                    pcVar6 = (*_sym.imp.USER32.dll_CharPrevA)(&lpszCurrent, puVar7);\n                    if ((pcVar6 != NULL) && (*pcVar6 == '\\\\')) {\n                        *pcVar6 = '\\0';\n                    }\n                    puVar4 = arg_8h;\n                    fcn.004017c8(arg_8h);\n                    fcn.00401680(puVar4);\n                    do {\n                        uVar1 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                    } while (uVar1 != 0);\n                }\n                else {\n                    cVar3 = (*_sym.imp.USER32.dll_CharUpperA)(*in_ECX);\n                    if (cVar3 != 'E') {\n                        if (*in_ECX == 0x23) goto code_r0x00402bca;\n                        goto code_r0x00402bd3;\n                    }\n                    puVar4 = arg_8h;\n                    fcn.004017c8(arg_8h);\n                    fcn.00401680(puVar4);\n                    do {\n                        uVar1 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                    } while (uVar1 != 0);\n                }\n                arg_8h = arg_8h + -1;\n            }\n            else {\ncode_r0x00402bca:\n                arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n            }\ncode_r0x00402bd3:\n            puVar4 = (*_sym.imp.USER32.dll_CharNextA)(in_ECX);\n            in_ECX = puVar4;\n        }\n        *arg_8h = 0;\n    }\n    fcn.00406ce0(lpszCurrent);\n    return;\n}\n",
        "token_count": 770
    },
    "00402caa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402caa(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    *0x409a3c = param_1;\n    sub.msvcrt.dll_memset(0x409140, 0, 0x8fc);\n    sub.msvcrt.dll_memset(0x408a20, 0, 0x32c);\n    sub.msvcrt.dll_memset(0x4088c0, 0, 0x104);\n    *0x4093ec = 1;\n    uVar1 = fcn.0040468f(0x7f);\n    if ((uVar1 != 0) && (uVar1 < 0x81)) {\n        *0x40858c = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 1, 0);\n        (*_sym.imp.KERNEL32.dll_SetEvent)(*0x40858c);\n        iVar2 = fcn.0040468f(0x402d57);\n        if (iVar2 == 0) {\ncode_r0x00402d5b:\n            arg_8h = 0;\n            fcn.004044b9(0, 0, 0x10, 0);\n            *0x409124 = 0x80070714;\n            goto code_r0x00402f08;\n        }\n        if ((*0x409a34 & 0xc0) != 0) {\n            iVar2 = fcn.0040468f(0x104);\n            if (iVar2 == 0) goto code_r0x00402d5b;\n            *0x408588 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 1, &fcn.00402caa::var_108h);\n            if ((*0x408588 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == 0xb7)) {\n                if ((*0x409a34 & 0x80) == 0) {\n                    arg_8h = 4;\n                    iVar2 = fcn.004044b9(0x409154, 0, 0x20, 4);\n                    if (iVar2 == 6) goto code_r0x00402e1f;\n                }\n                else {\n                    arg_8h = 0;\n                    fcn.004044b9(0x409154, 0, 0x10, 0);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x408588);\n                *0x409124 = 0x800700b7;\n                goto code_r0x00402f08;\n            }\n        }\ncode_r0x00402e1f:\n        *0x409120 = 0;\n        iVar2 = fcn.00405c9e();\n        if (iVar2 != 0) {\n            if (*0x408a3a == '\\0') {\n                arg_8h = 10;\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, 0x40129c);\n                if (iVar2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, iVar2);\n                }\n                if (*0x408184 != 0) {\n                    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                }\n                if (((((*0x408a24 == 0) && (iVar2 = fcn.004036ee(),  iVar2 != 0)) &&\n                     ((*0x409a40 == 1 || ((*0x409a40 == 2 || (*0x409a40 == 3)))))) && ((*0x409a34 & 0x100) != 0)) &&\n                   (((*0x408a38 & 1) == 0 && (iVar2 = fcn.004018a3(),  iVar2 == 0)))) {\n                    fcn.00406517(0, fcn.004019e0, 0x547, 0x83e);\n                }\n            }\n            else {\n                arg_8h = 0x402e4d;\n                fcn.00402390();\n            }\n            goto code_r0x00402f08;\n        }\n    }\n    arg_8h = 0;\n    fcn.004044b9(0, 0, 0x10, 0);\ncode_r0x00402f08:\n    fcn.00406ce0(arg_8h);\n    return;\n}\n",
        "token_count": 1048
    },
    "00402f1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402ff0)\n// WARNING: Variable defined which should be unmapped: var_110h\n\nvoid fcn.00402f1d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *var_110h;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if (*0x408a38 == 0) {\n        if (*0x408a24 == 0) {\n            iVar1 = fcn.004051e5();\n            if (iVar1 == 0) goto code_r0x00403043;\n            if (*0x408a38 != 0) goto code_r0x00402f6c;\n        }\n        iVar1 = fcn.00403a3f();\n        if (iVar1 == 0) goto code_r0x00403043;\n    }\ncode_r0x00402f6c:\n    iVar1 = fcn.00405164();\n    if ((iVar1 != 0) && (iVar1 = fcn.004055a0(),  iVar1 != 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpLibFileName, 0x105);\n        fcn.0040658a(0x401144);\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n        uVar2 = 0;\n        if ((iVar1 != 0) && (var_110h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4012a8),  var_110h != NULL)) {\n            (**0x40a288)(0x4091e4, 0);\n            (*var_110h)();\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        if (((*0x408a24 != 0) || (*0x409a30 != 0)) || (iVar1 = fcn.0040621e(),  iVar1 != 0)) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x4091e4);\n            if (iVar1 == 0) {\n                fcn.004044b9(0, 0, 0x10, 0);\n                *0x409124 = fcn.00406285();\n            }\n            else if ((*0x408a2c != 0) || (iVar1 = fcn.00403b26(),  iVar1 != 0)) {\n                if ((*0x408d48 & 0xc0) == 0) {\n                    uVar2 = fcn.0040256d();\n                }\n                *0x409a44 = uVar2;\n                if ((((*0x408a24 != 0) || (*0x409a30 != 0)) || (iVar1 = fcn.00403ba2(),  iVar1 != 0)) &&\n                   ((*0x408a38 == 0 && (*0x408a24 == 0)))) {\n                    fcn.00404169();\n                }\n            }\n        }\n    }\ncode_r0x00403043:\n    fcn.00406ce0(var_110h);\n    return;\n}\n",
        "token_count": 727
    },
    "004030c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004030c0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (((arg_ch == 0xb1) && (arg_10h == 0)) && (arg_14h == -2)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_CallWindowProcA)(*0x4088b8, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00403100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403100(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 0xf) {\n        if (*0x408590 == 0) {\n            (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0x834, 0xb1, 0xffffffff, 0);\n            *0x408590 = 1;\n        }\ncode_r0x004031da:\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch == 0x10) {\ncode_r0x00403136:\n            uVar1 = 0;\ncode_r0x00403138:\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, uVar1);\n        }\n        else {\n            if (arg_ch == 0x110) {\n                (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                fcn.004043d0();\n                (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x834, *0x408d4c);\n                (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x409154);\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x834);\n                *0x4088b8 = (*_sym.imp.USER32.dll_GetWindowLongA)(uVar1, 0xfffffffc);\n                (*_sym.imp.USER32.dll_SetWindowLongA)(uVar1, 0xfffffffc, fcn.004030c0);\n                return 1;\n            }\n            if (arg_ch != 0x111) goto code_r0x004031da;\n            if (arg_10h == 6) {\n                uVar1 = 1;\n                goto code_r0x00403138;\n            }\n            if (arg_10h == 7) goto code_r0x00403136;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 477
    },
    "004031e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004031e0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    if ((2 < pcVar2 - (param_1 + 1)) && ((param_1[1] == ':' || ((*param_1 == '\\\\' && (param_1[1] == '\\\\')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "00403210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403210(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    char *pcVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint uType;\n    uint arg_14h;\n    \n    if (arg_ch == 0x10) {\ncode_r0x0040343e:\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n        return 1;\n    }\n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        fcn.004043d0();\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x409154);\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(arg_8h, 0x835, 0xc5, 0x103, 0);\n        if (*0x409a40 != 1) {\n            return 1;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x836, 0);\n        (*_sym.imp.USER32.dll_EnableWindow)(uVar4);\n        return 1;\n    }\n    if (arg_ch != 0x111) {\n        return 0;\n    }\n    if (arg_10h != 1) {\n        if (arg_10h == 2) {\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n            *0x409124 = 0x800704c7;\n            return 1;\n        }\n        if (arg_10h != 0x836) {\n            return 1;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_LoadStringA)(*0x409a3c, 1000, 0x408598, 0x200);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00404224(extraout_ECX, extraout_ECX);\n            if (iVar2 == 0) {\n                return 1;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x835, 0x4087a0);\n            if (iVar2 != 0) {\n                return 1;\n            }\n        }\n        fcn.004044b9(0, 0, 0x10, 0);\n        goto code_r0x0040343e;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItemTextA)(arg_8h, 0x835, 0x4091e4, 0x104);\n    if (iVar2 != 0) {\n        pcVar1 = 0x4091e4;\n        do {\n            pcVar3 = pcVar1;\n            pcVar1 = pcVar3 + 1;\n        } while (*pcVar3 != '\\0');\n        if ((0x2 < pcVar3 + -0x4091e4) && ((*0x4091e5 == ':' || ((*0x4091e4 == '\\\\' && (*0x4091e5 == '\\\\')))))) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x4091e4);\n            if (iVar2 == -1) {\n                arg_ch_00 = 0x4091e4;\n                iVar2 = fcn.004044b9(0x4091e4, 0, 0x20, 4);\n                if (iVar2 != 6) {\n                    return 1;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x4091e4, 0);\n                if (iVar2 == 0) {\n                    arg_14h = 0x10;\n                    uType = 0;\n                    uVar4 = 0x4091e4;\n                    goto code_r0x00403370;\n                }\n            }\n            fcn.0040658a(0x401140);\n            iVar2 = fcn.004058c8();\n            if (iVar2 != 0) {\n                if (((*0x4091e4 == '\\\\') && (*0x4091e5 == '\\\\')) || (iVar2 = fcn.0040597d(1),  iVar2 != 0)) {\n                    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 1);\n                }\n                return 1;\n            }\n            arg_14h = 0;\n            uType = 0x10;\n            arg_ch_00 = 0;\n            uVar4 = 0;\n            goto code_r0x00403370;\n        }\n    }\n    arg_14h = 0;\n    uType = 0x10;\n    arg_ch_00 = 0;\n    uVar4 = 0;\ncode_r0x00403370:\n    fcn.004044b9(uVar4, arg_ch_00, uType, arg_14h);\n    return 1;\n}\n",
        "token_count": 1130
    },
    "004034f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034f0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0x10) {\n        if (arg_ch != 0x102) {\n            if (arg_ch == 0x110) {\n                *0x408584 = arg_8h;\n                (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                fcn.004043d0();\n                if (*0x408184 != 0) {\n                    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x83b, 0x464, 0, 0xbb9);\n                    (*_sym.imp.USER32.dll_SendMessageA)(uVar2);\n                    uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x83b, 0x465, 0xffffffff, 0xffff0000);\n                    (*_sym.imp.USER32.dll_SendMessageA)(uVar2);\n                }\n                (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x409154);\n                *0x40879c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404fe0, 0, 0, 0x408798);\n                if (*0x40879c != 0) {\n                    return 1;\n                }\n                fcn.004044b9(0, 0, 0x10, 0);\n            }\n            else {\n                if (arg_ch != 0x111) {\n                    if (arg_ch == 0xfa1) {\n                        (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x40879c, 0);\n                        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n                        return 1;\n                    }\n                    return 0;\n                }\n                if (arg_10h != 2) {\n                    return 1;\n                }\n                (*_sym.imp.KERNEL32.dll_ResetEvent)(*0x40858c);\n                iVar1 = fcn.004044b9(0x401140, 0, 0x20, 4);\n                if ((iVar1 != 6) && (iVar1 != 1)) {\n                    (*_sym.imp.KERNEL32.dll_SetEvent)(*0x40858c);\n                    return 1;\n                }\n                *0x4091d8 = 1;\n                (*_sym.imp.KERNEL32.dll_SetEvent)(*0x40858c);\n                fcn.00403680();\n            }\n            goto code_r0x00403671;\n        }\n        if (arg_10h != 0x1b) {\n            return 1;\n        }\n    }\n    *0x4091d8 = 1;\ncode_r0x00403671:\n    (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 0);\n    return 1;\n}\n",
        "token_count": 666
    },
    "004036ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036ee(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t iVar7;\n    uint unaff_EDI;\n    uint *puVar8;\n    char *pcVar9;\n    bool bVar10;\n    bool bVar11;\n    int32_t arg_8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint *var_1a8h;\n    int32_t var_1a4h;\n    uint *var_1a0h;\n    uint lpVersionInformation;\n    uint32_t var_198h;\n    uint32_t var_194h;\n    uint32_t var_190h;\n    int32_t var_18ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    lpVersionInformation = 0x94;\n    iVar7 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (iVar2 == 0) {\ncode_r0x0040396b:\n        arg_8h = 0;\n    }\n    else {\n        if (var_18ch == 1) {\n            *0x409a40 = 0;\ncode_r0x004037b8:\n            *0x408184 = 1;\n            *0x408180 = 1;\n        }\n        else {\n            if (var_18ch != 2) goto code_r0x0040396b;\n            *0x409a40 = 2;\n            *0x408184 = 1;\n            *0x408180 = 1;\n            if (var_198h < 4) {\n                *0x409a40 = 1;\n                if ((var_198h < 3) || ((var_198h == 3 && (var_194h < 0x33)))) {\n                    *0x408184 = 0;\n                    *0x408180 = 0;\n                }\n            }\n            else if (4 < var_198h) {\n                *0x409a40 = 3;\n                goto code_r0x004037b8;\n            }\n        }\n        if ((*0x408a34 != 0) || (param_1 == 0)) goto code_r0x00403a27;\n        iVar2 = param_1 + ((*0x409a40 != 0) - 1 & 0x3c) + 4;\n        var_1a0h = NULL;\n        do {\n            puVar8 = var_1a0h;\n            var_1a4h = var_1a0h * 0x18;\n            var_1a8h = var_1a0h;\n            iVar3 = fcn.00402a89(*(var_1a4h + iVar2), *(var_1a4h + 4 + iVar2));\n            arg_8h = *(var_1a4h + 0xc + iVar2);\n            iVar4 = fcn.00402a89(arg_8h, *(var_1a4h + 0x10 + iVar2));\n            if ((iVar3 < 0) || (0 < iVar4)) {\n                if (var_1a0h == 0x1) {\n                    iVar7 = 0x54c;\n                    break;\n                }\n            }\n            else {\n                if (iVar3 == 0) {\n                    if (iVar4 == 0) {\n                        uVar6 = var_190h & 0xffff;\n                        if (*(var_1a4h + 8 + iVar2) <= uVar6) {\n                            puVar1 = var_1a4h + 0x14 + iVar2;\n                            bVar10 = uVar6 < *puVar1;\n                            bVar11 = uVar6 == *puVar1;\n                            goto code_r0x0040389e;\n                        }\n                    }\n                    else if (*(var_1a4h + 8 + iVar2) <= (var_190h & 0xffff)) goto code_r0x00403915;\n                }\n                else {\n                    if (iVar4 != 0) goto code_r0x00403915;\n                    puVar1 = var_1a4h + 0x14 + iVar2;\n                    bVar10 = (var_190h & 0xffff) < *puVar1;\n                    bVar11 = (var_190h & 0xffff) == *puVar1;\ncode_r0x0040389e:\n                    if (bVar10 || bVar11) goto code_r0x00403915;\n                }\n                if (puVar8 != NULL) {\n                    iVar7 = 0x54c;\n                    goto code_r0x004038a9;\n                }\n            }\n            puVar8 = puVar8 + 1;\n            var_1a8h = puVar8;\n            var_1a0h = puVar8;\n        } while (puVar8 < 2);\n        if (iVar7 == 0) {\ncode_r0x00403915:\n            if ((*(param_1 + 0x7c) == 0) || (arg_8h = param_1,  iVar7 = fcn.004028e8(param_1, &var_1a8h),  iVar7 != 0))\n            goto code_r0x00403a27;\n            iVar7 = 0x54d;\n            puVar8 = var_1a8h;\n        }\n        if ((iVar7 != 0x54d) && (iVar7 != 0x54c)) {\n            if (iVar7 == 0) goto code_r0x00403a27;\n            goto code_r0x0040396b;\n        }\ncode_r0x004038a9:\n        var_1a0h = NULL;\n        uVar6 = 0;\n        if (iVar7 == 0x54d) {\n            var_1a0h = &var_108h;\n            iVar2 = *(param_1 + 0x80) + 0x84 + puVar8 * 0x3c + param_1;\n        }\n        if (iVar2 == 0) {\n            pcVar9 = NULL;\n        }\n        else {\n            pcVar9 = *(iVar2 + 0x34) + 0x84 + param_1;\n            if ((*(iVar2 + 0x30) & 1) == 0) {\n                uVar6 = -((*(iVar2 + 0x30) & 2) != 0) & 0x101;\n            }\n            else {\n                uVar6 = 0x104;\n            }\n        }\n        if ((((*0x408a38 & 1) == 0) && (pcVar9 != NULL)) && (*pcVar9 != '\\0')) {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n            iVar2 = fcn.0040681f();\n            if ((iVar2 == 0) || (iVar2 = fcn.004067c9(extraout_ECX),  iVar2 == 0)) {\n                uVar5 = 0x30;\n            }\n            else {\n                uVar5 = 0x180030;\n            }\n            (*_sym.imp.USER32.dll_MessageBoxA)(0, pcVar9, 0x409154, uVar5 | uVar6);\n            goto code_r0x00403a27;\n        }\n    }\n    fcn.004044b9(arg_8h, unaff_EDI, unaff_ESI, unaff_EBX);\ncode_r0x00403a27:\n    fcn.00406ce0(unaff_EBX);\n    return;\n}\n",
        "token_count": 1783
    },
    "00403ba2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403ba2(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint noname_0;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint uStack464;\n    uchar *arg_8h;\n    uchar *puVar7;\n    uint in_stack_fffffe50;\n    int32_t iVar8;\n    uint32_t uStack412;\n    uint32_t uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack392;\n    uint uStack388;\n    uint uStack372;\n    uint uStack332;\n    ushort uStack328;\n    uint32_t uStack12;\n    \n    uStack12 = *0x408004 ^ &stack0xfffffe64;\n    *0x409124 = 0;\n    uStack392 = 0;\n    uStack388 = 0;\n    if (*0x408a28 == 0) {\n        in_stack_fffffe50 = 0x403bec;\n        uVar1 = fcn.0040468f(4);\n        if ((uVar1 == 0) || (4 < uVar1)) {\ncode_r0x00403d13:\n            in_stack_fffffe50 = 0;\n            fcn.004044b9(0, 0, 0x10, 0);\n            *0x409124 = -0x7ff8f8ec;\n            goto code_r0x00403f4f;\n        }\n    }\n    puVar5 = NULL;\n    uStack400 = 0;\n    uVar1 = 0;\n    uVar6 = 0;\n    do {\n        iVar8 = 0;\n        sub.msvcrt.dll_memset();\n        uStack372 = 0x44;\n        if (*0x408c42 == '\\0') {\n            uVar2 = fcn.0040468f(4);\n            if ((uVar2 == 0) || (4 < uVar2)) goto code_r0x00403d13;\n            if (iVar8 == 1) {\n                uStack328 = 0;\ncode_r0x00403c6e:\n                uStack332 = 1;\n            }\n            else {\n                if (iVar8 == 2) {\n                    uStack328 = 6;\n                    goto code_r0x00403c6e;\n                }\n                if (iVar8 == 3) {\n                    uStack332 = 1;\n                    uStack328 = 3;\n                }\n            }\n            if (puVar5 != NULL) goto code_r0x00403d4d;\n            if (*0x408a38 != 0) {\n                if (((*0x408a38 & 1) == 0) && ((*0x408a38 & 2) == 0)) goto code_r0x00403f4f;\n                iVar8 = fcn.0040468f(0x104);\n                if (iVar8 == 0) goto code_r0x00403d13;\n                uStack464 = 0xffffffff;\n                iVar8 = (*_sym.imp.KERNEL32.dll_CompareStringA)();\n                if (iVar8 != 0) {\n                    uVar1 = 1;\n                }\n            }\n            if (uVar1 == 0) {\n                uStack464 = 0x403d0f;\n                iVar8 = fcn.0040468f(0x104);\n                if (iVar8 != 0) goto code_r0x00403d4d;\n                goto code_r0x00403d13;\n            }\n        }\n        else {\n            fcn.00401781(noname_0, 0x408c42);\ncode_r0x00403d4d:\n            if (puVar5 == 0x1) {\n                iVar8 = fcn.0040468f(0x104);\n                if (iVar8 == 0) goto code_r0x00403d13;\n                if (*0x408c42 != '\\0') break;\n                uStack464 = 0xffffffff;\n                iVar8 = (*_sym.imp.KERNEL32.dll_CompareStringA)(0x7f, 1);\n                if (iVar8 == 2) break;\n            }\n        }\n        arg_8h = &stack0xfffffe48;\n        iVar8 = fcn.00401ae8(arg_8h, &stack0xfffffe4c);\n        if (iVar8 == 0) goto code_r0x00403f4f;\n        puVar7 = arg_8h;\n        if (((uVar6 == 0) && (*0x409a40 != 1)) && (*0x408a20 != 0)) {\n            if (arg_8h == NULL) {\n                fcn.0040202a();\n                goto code_r0x00403de6;\n            }\ncode_r0x00403dee:\n            if (*0x408180 == 0) {\n                fcn.004044b9(0, 0, 0x10, 0);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(puVar7);\n                *0x409124 = -0x7ff8fbd5;\n            }\n            else {\n                if ((arg_8h == NULL) || ((*0x409a34 & 4) == 0)) goto code_r0x00403f0b;\n                iVar8 = fcn.00406495();\n                if (iVar8 == 0) {\n                    fcn.004044b9(0x4011d8, 0, 0x10, 0);\n                }\n                else {\n                    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                    if (pcVar3 != NULL) {\n                        in_stack_fffffe50 = 0;\n                        puVar5 = &stack0xfffffeb8;\n                        uStack412 = uStack412 & 0xffff0000 | *0x409a40;\n                        uStack408 = *0x408a38;\n                        if (*0x408a30 != 0) {\n                            uStack408 = uStack408 | 0x10000;\n                        }\n                        if ((*0x409a34 & 8) != 0) {\n                            uStack408 = uStack408 | 0x20000;\n                        }\n                        if ((*0x409a34 & 0x10) != 0) {\n                            uStack408 = uStack408 | 0x40000;\n                        }\n                        if ((*0x408d48 & 0x40) != 0) {\n                            uStack408 = uStack408 | 0x80000;\n                        }\n                        if (*0x408d48 < '\\0') {\n                            uStack408 = uStack408 | 0x100000;\n                        }\n                        uStack404 = *0x409a38;\n                        (**0x40a288)();\n                        iVar4 = (*pcVar3)();\n                        if (&stack0xfffffe28 != &stack0xfffffe24) {\n                            pcVar3 = swi(0x29);\n                            iVar4 = (*pcVar3)();\n                        }\n                        *0x409124 = iVar4;\n                        if (iVar4 < 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar8);\n                            goto code_r0x00403f46;\n                        }\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                        goto code_r0x00403f1e;\n                    }\n                    fcn.004044b9(\"DoInfInstall\", 0, 0x10, 0);\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar8);\n                }\n                (*_sym.imp.KERNEL32.dll_LocalFree)(uStack464);\n                *0x409124 = fcn.00406285();\n            }\n            goto code_r0x00403f4f;\n        }\ncode_r0x00403de6:\n        if (arg_8h != NULL) goto code_r0x00403dee;\ncode_r0x00403f0b:\n        iVar8 = fcn.00403fef();\n        if (iVar8 == 0) {\ncode_r0x00403f46:\n            (*_sym.imp.KERNEL32.dll_LocalFree)();\n            goto code_r0x00403f4f;\n        }\ncode_r0x00403f1e:\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        puVar5 = puVar5 + 1;\n        uVar1 = uStack412;\n        uVar6 = uStack408;\n    } while (puVar5 < 0x2);\n    if (*0x408580 != 0) {\n        fcn.00402267();\n    }\ncode_r0x00403f4f:\n    fcn.00406ce0(in_stack_fffffe50);\n    return;\n}\n",
        "token_count": 1935
    },
    "0040411b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040411b(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x409a34 & 0x800) != 0) {\n        *0x409124 = param_1;\n        return;\n    }\n    iVar1 = fcn.00401ea7();\n    if ((iVar1 == 2) || (((param_1 & 0xff000000) == 0xaa000000 && ((param_1 & 1) != 0)))) {\n        *0x409124 = 0xbc2;\n    }\n    else if ((*0x409a34 & 0x200) != 0) {\n        *0x409124 = param_1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00404224": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00404224(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcStack88;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (pcVar2 != NULL) {\n            pcStack88 = 0x404269;\n            pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n            if (pcVar3 != NULL) {\n                pcStack88 = 0x404280;\n                pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                if (pcVar4 != NULL) {\n                    if (*0x4088c0 == '\\0') {\n                        pcStack88 = 0x4042a5;\n                        (*_sym.imp.KERNEL32.dll_GetTempPathA)();\n                        pcVar5 = 0x4088c0;\n                        do {\n                            pcStack88 = pcVar5;\n                            pcVar5 = pcStack88 + 1;\n                        } while (*pcStack88 != '\\0');\n                        pcVar5 = (*_sym.imp.USER32.dll_CharPrevA)(0x4088c0);\n                        if (*pcVar5 == '\\\\') {\n                            pcStack88 = 0x4042dc;\n                            pcVar6 = (*_sym.imp.USER32.dll_CharPrevA)();\n                            if (*pcVar6 != ':') {\n                                *pcVar5 = '\\0';\n                            }\n                        }\n                    }\n                    *0x4087a0 = '\\0';\n                    (**0x40a288)();\n                    iVar1 = (*pcVar2)();\n                    if (&stack0xffffffb4 != &stack0xffffffb0) {\n                        pcVar2 = swi(0x29);\n                        iVar1 = (*pcVar2)();\n                    }\n                    if (iVar1 != 0) {\n                        pcStack88 = iVar1;\n                        (**0x40a288)();\n                        (*pcVar4)();\n                        if (&stack0xffffffb0 != &stack0xffffffa8) {\n                            pcVar2 = swi(0x29);\n                            (*pcVar2)();\n                        }\n                        if (*0x4088c0 != '\\0') {\n                            fcn.00401680(0x4088c0);\n                        }\n                        (**0x40a288)(iVar1);\n                        (*pcVar3)();\n                        if (&stack0xffffffa8 != &stack0xffffffb0) {\n                            pcVar2 = swi(0x29);\n                            (*pcVar2)();\n                        }\n                    }\n                    pcStack88 = 0x404397;\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n                    return *0x4087a0 != '\\0';\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    pcStack88 = 0x4043c5;\n    fcn.004044b9(0, 0, 0x10, 0);\n    return false;\n}\n",
        "token_count": 758
    },
    "004044b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hWnd\n\nvoid __cdecl fcn.004044b9(uint *arg_8h, uint *arg_ch, uint32_t uType, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint in_ECX;\n    int32_t iVar5;\n    uint extraout_ECX;\n    uint *puVar6;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint *puVar8;\n    char *pcVar9;\n    uint hWnd;\n    uint var_240h;\n    uint lpBuffer;\n    uint lpText;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    puVar6 = 0x401314;\n    puVar7 = &lpText;\n    for (iVar5 = 0xd; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = *puVar6;\n    if ((*0x408a38 & 1) != 0) goto code_r0x0040467c;\n    lpBuffer._0_1_ = '\\0';\n    (*_sym.imp.USER32.dll_LoadStringA)(*0x409a3c);\n    if (lpBuffer != '\\0') {\n        puVar6 = &lpBuffer;\n        iVar5 = &lpBuffer + 1;\n        do {\n            cVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n        } while (cVar1 != '\\0');\n        if (arg_ch == NULL) {\n            if (arg_8h == NULL) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, puVar6 + (1 - iVar5));\n                if (iVar5 == 0) goto code_r0x0040467c;\n                arg_ch = &lpBuffer;\n                fcn.00401680(arg_ch);\n            }\n            else {\n                puVar7 = arg_8h;\n                do {\n                    cVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                } while (cVar1 != '\\0');\n                pcVar9 = puVar6 + puVar7 + ((100 - (arg_8h + 1)) - iVar5);\n                iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pcVar9);\n                if (iVar5 == 0) goto code_r0x0040467c;\n                fcn.0040171e(iVar5, pcVar9, &lpBuffer, arg_8h);\n                arg_ch = arg_8h;\n            }\n        }\n        else {\n            puVar7 = arg_8h;\n            do {\n                cVar1 = *puVar7;\n                puVar7 = puVar7 + 1;\n            } while (cVar1 != '\\0');\n            puVar8 = arg_ch;\n            do {\n                cVar1 = *puVar8;\n                puVar8 = puVar8 + 1;\n            } while (cVar1 != '\\0');\n            pcVar9 = puVar7 + puVar8 + puVar6 + (-(arg_ch + 1) - (arg_8h + 1)) + (100 - iVar5);\n            iVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pcVar9);\n            if (iVar5 == 0) goto code_r0x0040467c;\n            fcn.0040171e(iVar5, pcVar9, &lpBuffer, arg_8h);\n        }\n        (*_sym.imp.USER32.dll_MessageBeep)(uType, arg_ch);\n        iVar3 = fcn.0040681f();\n        if (iVar3 == 0) {\ncode_r0x0040464e:\n            uVar4 = 0x10000;\n        }\n        else {\n            iVar3 = fcn.004067c9(extraout_ECX_00);\n            uVar4 = 0x190000;\n            if (iVar3 == 0) goto code_r0x0040464e;\n        }\n        (*_sym.imp.USER32.dll_MessageBoxA)(in_ECX, iVar5, 0x409154, uVar4 | uType | arg_14h);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar5);\n        goto code_r0x0040467c;\n    }\n    iVar5 = fcn.0040681f();\n    if (iVar5 == 0) {\ncode_r0x0040453f:\n        uVar2 = 0x10010;\n    }\n    else {\n        iVar5 = fcn.004067c9(extraout_ECX);\n        uVar2 = 0x190010;\n        if (iVar5 == 0) goto code_r0x0040453f;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxA)(in_ECX, &lpText, 0x409154, uVar2);\ncode_r0x0040467c:\n    fcn.00406ce0(in_ECX);\n    return;\n}\n",
        "token_count": 1181
    },
    "0040476d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040476d(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004066ae();\n    if (iVar1 == 0) {\n        return 1;\n    }\n    if (((*0x4091dc == 0) && ((*0x408a38 & 1) == 0)) &&\n       (*0x409404 = param_1,  iVar1 = fcn.00406517(*0x408584, fcn.00403450, 0, 6),  iVar1 != 6)) {\n        if (iVar1 == 7) {\n            return 0;\n        }\n        if (iVar1 == 0x839) {\n            *0x4091dc = 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(param_1, 0x80);\n    return 1;\n}\n",
        "token_count": 203
    },
    "0040487a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040487a(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = (-((param_2 & 3) != 0) & 0xc0000000) + 0x80000000;\n    if ((param_2 & 0x100) == 0) {\n        iVar2 = (-((param_2 & 0x200) != 0) & 2) + 3;\n    }\n    else if ((param_2 & 0x400) == 0) {\n        iVar2 = (-((param_2 & 0x200) != 0) & 0xfffffffe) + 4;\n    }\n    else {\n        iVar2 = 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, iVar3, 0, 0, iVar2, 0x80, 0);\n    if ((iVar1 == -1) && (iVar2 != 3)) {\n        fcn.0040490c();\n        (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, iVar3, 0, 0, iVar2, 0x80, 0);\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00404980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404980(uint lpString1, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    piVar2 = 0x408d60;\n    iVar5 = 0;\n    do {\n        if (*piVar2 == 1) break;\n        piVar2 = piVar2 + 6;\n        iVar5 = iVar5 + 1;\n    } while (piVar2 < 0x409120);\n    if (iVar5 == 0x28) {\n        fcn.004044b9(0, 0, 0x10, 0);\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, \"*MEMCAB\");\n        if (iVar3 != 0) {\n            if ((arg_ch & 8) == 0) {\n                iVar3 = fcn.0040487a();\n            }\n            else {\n                iVar3 = -1;\n            }\n            iVar4 = iVar5 * 0x18;\n            *(iVar4 + 0x408d74) = iVar3;\n            if (iVar3 != -1) {\n                *(iVar4 + 0x408d60) = 0;\n                *(iVar4 + 0x408d64) = 0;\n                return iVar5;\n            }\n            return -1;\n        }\n        if ((arg_ch & 0x10b) == 0) {\n            iVar3 = iVar5 * 0x18;\n            *(iVar3 + 0x408d68) = *0x409140;\n            uVar1 = *0x409144;\n            *(iVar3 + 0x408d60) = 0;\n            *(iVar3 + 0x408d64) = 1;\n            *(iVar3 + 0x408d70) = uVar1;\n            *(iVar3 + 0x408d6c) = 0;\n            return iVar5;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 469
    },
    "00404ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404ad0(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.00403680();\n    if (*0x4091d8 != 0) {\n        return -1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(arg_8h * 0x18 + 0x408d74), arg_ch, arg_10h, &arg_10h, 0);\n    iVar2 = arg_10h;\n    if (iVar1 == 0) {\n        iVar2 = -1;\n    }\n    else if (arg_10h != -1) {\n        *0x409400 = *0x409400 + arg_10h;\n        if ((*0x408184 != 0) && (*0x408584 != 0)) {\n            (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*0x408584, 0x83a, 0x402, (*0x409400 * 100) / *0x4093f8, 0);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 269
    },
    "00404c37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c37(uint wFatTime)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpLocalFileTime;\n    uint lpLastAccessTime;\n    \n    if (((*(in_ECX * 0x18 + 0x408d64) != 1) && (iVar1 = (*_sym.imp.KERNEL32.dll_DosDateTimeToFileTime)(),  iVar1 != 0))\n       && (iVar1 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&lpLocalFileTime, &lpLastAccessTime),  iVar1 != 0))\n    {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFileTime)\n                          (*(in_ECX * 0x18 + 0x408d74), &lpLastAccessTime, &lpLastAccessTime, &lpLastAccessTime);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 216
    },
    "00404cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cd0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint unaff_ESI;\n    char *pcVar6;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if (*0x4091d8 == 0) {\n        if (arg_8h == 0) {\n            fcn.00404e99();\n        }\n        else if (arg_8h != 1) {\n            if (arg_8h == 2) {\n                if (*0x408584 != 0) {\n                    (*_sym.imp.USER32.dll_SetDlgItemTextA)(*0x408584, 0x837, *(arg_ch + 4));\n                }\n                pcVar1 = 0x4091e4;\n                do {\n                    pcVar5 = pcVar1;\n                    pcVar1 = pcVar5 + 1;\n                } while (*pcVar5 != '\\0');\n                pcVar6 = *(arg_ch + 4);\n                pcVar1 = pcVar6 + 1;\n                do {\n                    cVar2 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar2 != '\\0');\n                if ((((pcVar5 + pcVar6 + (-0x4091e3 - pcVar1) < 0x104) &&\n                     (iVar4 = fcn.00404702(*(arg_ch + 4)),  iVar4 != 0)) && (iVar4 = fcn.0040476d(),  iVar4 != 0)) &&\n                   ((iVar4 = fcn.00404980(&var_108h, 0x8302),  iVar4 != -1 && (iVar4 = fcn.004047e0(),  iVar4 != 0)))) {\n                    *0x4093f4 = *0x4093f4 + 1;\n                }\n            }\n            else if (arg_8h == 3) {\n                pcVar1 = 0x4091e4;\n                do {\n                    pcVar5 = pcVar1;\n                    pcVar1 = pcVar5 + 1;\n                } while (*pcVar5 != '\\0');\n                pcVar6 = *(arg_ch + 4);\n                pcVar1 = pcVar6 + 1;\n                do {\n                    cVar2 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar2 != '\\0');\n                if (((pcVar5 + pcVar6 + (-0x4091e3 - pcVar1) < 0x104) &&\n                    (iVar4 = fcn.00404702(*(arg_ch + 4)),  iVar4 != 0)) &&\n                   (iVar4 = fcn.00404c37(*(arg_ch + 0x1a)),  iVar4 != 0)) {\n                    fcn.00404b60(*(arg_ch + 0x14));\n                    if (*(arg_ch + 0x1c) == 0) {\n                        uVar3 = 0x80;\n                    }\n                    else {\n                        uVar3 = *(arg_ch + 0x1c) & 0x27;\n                    }\n                    (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&var_108h, uVar3);\n                }\n            }\n        }\n    }\n    else if (arg_8h == 3) {\n        fcn.00404b60(*(arg_ch + 0x14));\n    }\n    fcn.00406ce0(unaff_ESI);\n    return;\n}\n",
        "token_count": 834
    },
    "00404efd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00404efd(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    puVar4 = &var_1ch;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = (*_sym.imp.Cabinet.dll_FDICreate)\n                      (fcn.00404ca0, fcn.00404cc0, fcn.00404980, fcn.00404a50, fcn.00404ad0, fcn.00404b60, fcn.00404bc0\n                       , 1, &var_28h);\n    if ((((iVar3 != 0) && (iVar1 = fcn.00404980(\"*MEMCAB\", 0x8000),  iVar1 != -1)) &&\n        (iVar2 = (*_sym.imp.Cabinet.dll_FDIIsCabinet)(iVar3, iVar1, &var_1ch),  iVar2 != 0)) &&\n       (((var_1ch == *0x409144 && (var_ch == 0)) && ((var_8h == 0 && (iVar1 = fcn.00404b60(iVar1),  iVar1 != -1)))))) {\n        (*_sym.imp.Cabinet.dll_FDIDestroy)(iVar3);\n    }\n    fcn.00406ce0(var_28h);\n    return;\n}\n",
        "token_count": 421
    },
    "004052b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __fastcall fcn.004052b6(uint param_1)\n\n{\n    uint *puVar1;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_108h;\n    uint var_4h;\n    \n    puVar2 = *0x4091e0;\n    if (*0x4091e0 != NULL) {\n        do {\n            if ((*0x408a24 == 0) && (*0x409a30 == 0)) {\n                (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(*puVar2, 0x80);\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(*puVar2);\n            }\n            puVar1 = puVar2[1];\n            (*_sym.imp.KERNEL32.dll_LocalFree)(*puVar2);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(puVar2);\n            param_1 = extraout_ECX;\n            puVar2 = puVar1;\n        } while (puVar1 != NULL);\n    }\n    if (((*0x408a20 != 0) && (*0x408a24 == 0)) && (*0x409a30 == 0)) {\n        uVar3 = 0x4091e4;\n        uVar4 = param_1;\n        fcn.00401781(param_1, 0x4091e4);\n        if ((*0x409a34 & 0x20) != 0) {\n            fcn.004065e8(param_1, uVar3, uVar4);\n        }\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x4011fc);\n        fcn.00402390();\n    }\n    if ((*0x409a40 != 1) && (*0x408a20 != 0)) {\n        fcn.00401fe1();\n    }\n    *0x408a20 = 0;\n    fcn.00406ce0(var_108h);\n    return;\n}\n",
        "token_count": 461
    },
    "004055a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004055a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint noname_0;\n    int32_t noname_0_00;\n    uint extraout_ECX_02;\n    uint lpRootPathName;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    iVar1 = fcn.0040468f(0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 1);\n    if (iVar2 == 0) {\n        iVar1 = 0;\n        fcn.004044b9(0, 0, 0x10, 0);\n        *0x409124 = fcn.00406285();\n    }\n    else {\n        iVar3 = fcn.0040468f(iVar1);\n        if (iVar3 == 0) {\n            fcn.004044b9(0, 0, 0x10, 0);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar2);\n            *0x409124 = 0x80070714;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(iVar2, 0x4012c0);\n            if (iVar1 == 0) {\n                *0x409a30 = 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar2);\n            if (*0x408b3e == '\\0') {\n                if ((*0x408a24 == 0) && (*0x409a30 == 0)) {\n                    iVar1 = 0x4091e4;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x104);\n                    noname_0 = extraout_ECX;\n                    if ((iVar2 == 0) ||\n                       ((iVar2 = fcn.00405467(3),  iVar2 == 0 &&\n                        ((iVar2 = fcn.00402630(),  noname_0 = extraout_ECX_00,  iVar2 != 0 ||\n                         (iVar2 = fcn.00405467(0x4056eb),  noname_0 = extraout_ECX_01,  iVar2 == 0)))))) {\n                        do {\n                            fcn.00401781(noname_0, 0x4013a4);\n                            while (lpRootPathName < '[') {\n                                iVar2 = (*_sym.imp.KERNEL32.dll_GetDriveTypeA)(&fcn.004055a0::lpRootPathName);\n                                if (((((iVar2 == 6) || (iVar2 == 3)) &&\n                                     (iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&fcn.004055a0::lpRootPathName)\n                                     ,  iVar3 != -1)) ||\n                                    (((iVar2 == 2 && (lpRootPathName != 'A')) &&\n                                     ((lpRootPathName != 'B' &&\n                                      ((uVar4 = fcn.00406952(),  uVar4 != 0 && (0x18fff < uVar4)))))))) &&\n                                   ((iVar2 = fcn.0040597d(0x40578d),  iVar2 != 0 ||\n                                    ((iVar2 = fcn.00402630(),  iVar2 == 0 && (iVar2 = fcn.0040597d(0),  iVar2 != 0))))))\n                                {\n                                    iVar2 = fcn.00402630();\n                                    if (iVar2 != 0) {\n                                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)\n                                                  (&fcn.004055a0::lpRootPathName, 0x104);\n                                    }\n                                    fcn.0040658a(0x4013a8);\n                                    uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&fcn.004055a0::lpRootPathName);\n                                    if (uVar4 == 0xffffffff) {\n                                        uVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)\n                                                          (&fcn.004055a0::lpRootPathName, 0);\n                                    }\n                                    else {\n                                        uVar4 = uVar4 & 0x10;\n                                    }\n                                    if (uVar4 == 0) {\n                                        lpRootPathName._0_1_ = lpRootPathName + '\\x01';\n                                        lpRootPathName._3_1_ = 0;\n                                    }\n                                    else {\n                                        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(&fcn.004055a0::lpRootPathName, 2);\n                                        iVar1 = noname_0_00;\n                                        fcn.00401781(noname_0_00, &fcn.004055a0::lpRootPathName);\n                                        iVar2 = fcn.00405467(0);\n                                        if (iVar2 != 0) goto code_r0x004058b7;\n                                    }\n                                }\n                                else {\n                                    lpRootPathName._0_1_ = lpRootPathName + '\\x01';\n                                }\n                            }\n                            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&fcn.004055a0::lpRootPathName, 0x104);\n                            iVar2 = fcn.0040597d(4);\n                            noname_0 = extraout_ECX_02;\n                        } while (iVar2 != 0);\n                    }\n                }\n                else {\n                    iVar1 = 0;\n                    fcn.00406517(0, fcn.00403210, 0, 0);\n                }\n            }\n            else {\n                if ((*0x408b3e != '\\\\') || (iVar1 = 0,  *0x408b3f != '\\\\')) {\n                    iVar1 = 1;\n                }\n                iVar2 = fcn.00405467(iVar1);\n                if (iVar2 == 0) {\n                    fcn.004044b9(0, 0, 0x10, 0);\n                }\n            }\n        }\n    }\ncode_r0x004058b7:\n    fcn.00406ce0(iVar1);\n    return;\n}\n",
        "token_count": 1405
    },
    "0040597d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040597d(uint arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint32_t arg_8h_00;\n    uint32_t in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    uint *arg_8h_01;\n    uint var_330h;\n    uint32_t var_32ch;\n    int32_t var_328h;\n    uint lpTotalNumberOfClusters;\n    uint32_t var_320h;\n    uint lpNumberOfFreeClusters;\n    int32_t lpSectorsPerCluster;\n    int32_t lpBytesPerSector;\n    uint s;\n    uint lpPathName;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    var_320h = in_EDX;\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0x104, &lpPathName);\n    iVar3 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)();\n    if (iVar3 == 0) {\n        arg_8h_01 = 0x10;\n        fcn.004044b9(0, 0, 0x10, 0);\n        *0x409124 = fcn.00406285();\n        goto code_r0x00405c05;\n    }\n    arg_8h_01 = &lpTotalNumberOfClusters;\n    lpSectorsPerCluster = 0;\n    lpBytesPerSector = 0;\n    lpNumberOfFreeClusters = 0;\n    lpTotalNumberOfClusters = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                      (0, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters);\n    if (iVar3 == 0) {\ncode_r0x00405ba1:\n        sub.msvcrt.dll_memset(&s, 0, 0x200);\n        *0x409124 = fcn.00406285();\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &s, 0x200, 0);\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar5);\n    }\n    else {\n        var_328h = lpBytesPerSector * lpSectorsPerCluster;\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(var_328h, lpNumberOfFreeClusters, 0x400);\n        if (uVar4 == 0) goto code_r0x00405ba1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(0, 0, 0, 0, &var_330h, &var_32ch, 0, 0);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(&lpPathName);\n            puVar6 = &var_ch;\n            iVar3 = 6;\n            iVar8 = in_ECX - puVar6;\n            do {\n                if ((iVar3 == 4) || (cVar1 = *(iVar8 + puVar6),  cVar1 == '\\0')) break;\n                *puVar6 = cVar1;\n                puVar6 = puVar6 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            if (iVar3 == 0) {\n                puVar6 = puVar6 + -1;\n            }\n            *puVar6 = '\\0';\n            iVar3 = 0x200;\n            uVar2 = 0;\n            do {\n                if (var_328h == iVar3) break;\n                iVar3 = iVar3 * 2;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < 8);\n            if (uVar2 == 8) {\n                fcn.004044b9(0, 0, 0x10, 0);\n            }\n            else {\n                if (((*0x409a34 & 8) == 0) || ((var_32ch & 0x8000) == 0)) {\n                    uVar7 = *(uVar2 * 4 + 0x4089e0);\n                    arg_8h_00 = *0x409a38;\n                }\n                else {\n                    uVar7 = *(uVar2 * 4 + 0x4089e0) * 2;\n                    arg_8h_00 = (*0x409a38 >> 2) + *0x409a38;\n                }\n                if ((var_320h & 3) == 3) {\n                    bVar9 = arg_8h_00 + uVar7 < uVar4;\n                    bVar10 = arg_8h_00 + uVar7 == uVar4;\n                }\n                else if ((var_320h & 1) == 0) {\n                    bVar9 = arg_8h_00 < uVar4;\n                    bVar10 = arg_8h_00 == uVar4;\n                }\n                else {\n                    bVar9 = uVar7 < uVar4;\n                    bVar10 = uVar7 == uVar4;\n                }\n                if (bVar9 || bVar10) {\n                    *0x409124 = 0;\n                }\n                else {\n                    fcn.0040268b(arg_8h_00, &var_ch);\n                }\n            }\n            goto code_r0x00405c05;\n        }\n        sub.msvcrt.dll_memset(&s, 0, 0x200);\n        *0x409124 = fcn.00406285();\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &s, 0x200, 0);\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar5);\n    }\n    fcn.004044b9(in_ECX, &s, 0x10, 0);\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(&lpPathName);\ncode_r0x00405c05:\n    fcn.00406ce0(arg_8h_01);\n    return;\n}\n",
        "token_count": 1437
    },
    "00405c17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405c17(char *param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = 0;\n    cVar2 = *param_1;\n    while ((cVar2 != '\\0' &&\n           ((((cVar2 == ' ' || (cVar2 == '\\t')) || (cVar2 == '\\r')) ||\n            (((cVar2 == '\\n' || (cVar2 == '\\v')) || (cVar2 == '\\f'))))))) {\n        iVar6 = iVar6 + 1;\n        cVar2 = param_1[iVar6];\n    }\n    pcVar1 = param_1 + iVar6;\n    if (*pcVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        pcVar4 = pcVar1;\n        do {\n            cVar2 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar2 != '\\0');\n        iVar5 = pcVar4 - (pcVar1 + 1);\n        do {\n            iVar5 = iVar5 + -1;\n            if (iVar5 < 0) break;\n            cVar2 = pcVar1[iVar5];\n        } while (((cVar2 == ' ') || (cVar2 == '\\t')) ||\n                ((cVar2 == '\\r' || (((cVar2 == '\\n' || (cVar2 == '\\v')) || (cVar2 == '\\f'))))));\n        param_1[iVar5 + iVar6 + 1] = '\\0';\n        *param_2 = iVar6;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 414
    },
    "00405c9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_110h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00405c9e(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t var_110h;\n    uint8_t *var_10ch;\n    uint32_t var_108h;\n    uint8_t auStack264 [256];\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    bVar3 = true;\n    if ((param_1 != NULL) && (*param_1 != 0)) {\n        do {\n            if (!bVar3) break;\n            for (; (((uVar1 = *param_1,  uVar1 == 0x20 || (uVar1 == 9)) || (uVar1 == 0xd)) ||\n                   (((uVar1 == 10 || (uVar1 == 0xb)) || (uVar1 == 0xc))));\n                param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n            }\n            if (uVar1 == 0) break;\n            uVar7 = 0;\n            iVar11 = 0;\n            uVar9 = 1;\n            iVar6 = 0;\n            var_10ch = param_1;\n            do {\n                if (iVar11 == 0) {\n                    uVar1 = *var_10ch;\n                    if (((uVar1 == 0x20) || (uVar1 == 9)) ||\n                       ((uVar1 == 0xd || (((uVar1 == 10 || (uVar1 == 0xb)) || (uVar1 == 0xc)))))) break;\n                }\n                else if (iVar6 != 0) break;\n                iVar10 = iVar6;\n                if (*var_10ch == 0x22) {\n                    if (var_10ch[1] == 0x22) {\n                        if (0x103 < uVar9) goto code_r0x00406207;\n                        auStack264[uVar7 - 4] = 0x22;\n                        uVar7 = uVar7 + 1;\n                        uVar9 = uVar9 + 1;\n                        iVar5 = 2;\n                    }\n                    else {\n                        iVar5 = 1;\n                        iVar10 = iVar5;\n                        if (iVar11 == 0) {\n                            iVar10 = iVar6;\n                            iVar11 = iVar5;\n                        }\n                    }\n                }\n                else {\n                    if (0x103 < uVar9) goto code_r0x00406207;\n                    auStack264[uVar7 - 4] = *var_10ch;\n                    uVar7 = uVar7 + 1;\n                    uVar9 = uVar9 + 1;\n                    iVar5 = 1;\n                }\n                var_10ch = var_10ch + iVar5;\n                iVar6 = iVar10;\n            } while (*var_10ch != 0);\n            if (0x103 < uVar7) {\n                fcn.00406e2a();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            auStack264[uVar7 - 4] = 0;\n            if (iVar6 != 0) break;\n            if ((var_108h != '/') && (var_108h != '-')) goto code_r0x00406207;\n            cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(var_108h._1_1_);\n            if (cVar4 == '?') {\n                fcn.004044b9(0x401140, 0, 0x40, 0);\n                if (*0x408588 != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x408588);\n                }\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n                goto code_r0x00406207;\n            }\n            if (cVar4 == 'C') {\n                if (var_108h._2_1_ != '\\0') {\n                    if (var_108h._2_1_ == ':') {\n                        uVar7 = var_108h._3_1_ == '\\\"';\n                        iVar6 = uVar7 + 3;\n                        puVar8 = auStack264 + (uVar7 - 1);\n                        do {\n                            uVar1 = *puVar8;\n                            puVar8 = puVar8 + 1;\n                        } while (uVar1 != 0);\n                        if ((((puVar8 != auStack264 + uVar7) &&\n                             ((iVar11 = fcn.0040667f(),  iVar11 == 0 || (iVar11 = fcn.0040667f(),  iVar11 != 0)))) &&\n                            ((iVar11 = fcn.0040667f(),  iVar11 == 0 || (iVar11 = fcn.0040667f(),  iVar11 != 0)))) &&\n                           (iVar11 = fcn.00405c17(),  var_110h = iVar6,  iVar11 != 0)) {\n                            fcn.00401680(auStack264 + iVar6 * 2 + -4);\n                            goto code_r0x00405e85;\n                        }\n                    }\n                    goto code_r0x00405e83;\n                }\n                *0x408a24 = 1;\n            }\n            else if (cVar4 == 'D') {\ncode_r0x0040604f:\n                if (var_108h._2_1_ == ':') {\n                    uVar7 = var_108h._3_1_ == '\\\"';\n                    iVar6 = uVar7 + 3;\n                    puVar8 = auStack264 + (uVar7 - 1);\n                    do {\n                        uVar1 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar1 != 0);\n                    if ((puVar8 != auStack264 + uVar7) && (iVar11 = fcn.00405c17(),  var_110h = iVar6,  iVar11 != 0)) {\n                        (*_sym.imp.USER32.dll_CharUpperA)(var_108h._1_1_);\n                        fcn.00401680(auStack264 + iVar6 * 2 + -4);\n                        fcn.0040658a(0x401140);\n                        iVar6 = fcn.004031e0();\n                        if (iVar6 != 0) goto code_r0x00405e85;\n                        goto code_r0x00406207;\n                    }\n                }\ncode_r0x00405e83:\n                bVar3 = false;\n            }\n            else if (cVar4 == 'N') {\n                if (var_108h._2_1_ == '\\0') {\n                    *0x408a2c = 1;\n                }\n                else {\n                    if (var_108h._2_1_ != ':') goto code_r0x00405e83;\n                    if (var_108h._3_1_ != '\\0') {\n                        puVar8 = &var_108h + 3;\n                        uVar7 = stack0xfffffef7;\n                        do {\n                            puVar8 = puVar8 + 1;\n                            cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(uVar7);\n                            if (cVar4 == 'E') {\n                                *0x408a2c = 1;\n                            }\n                            else if (cVar4 == 'G') {\n                                *0x408a30 = 1;\n                            }\n                            else if (cVar4 == 'V') {\n                                *0x408a34 = 1;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                            uVar7 = *puVar8;\n                        } while (*puVar8 != 0);\n                    }\n                }\n            }\n            else if (cVar4 == 'Q') {\n                if (var_108h._2_1_ != '\\0') {\n                    if (var_108h._2_1_ != ':') goto code_r0x00405e83;\n                    cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(var_108h._3_1_);\n                    if (cVar4 != '1') {\n                        if (cVar4 == 'A') {\n                            *0x408a38 = 1;\n                            goto code_r0x00405e85;\n                        }\n                        if (cVar4 != 'U') goto code_r0x00405e83;\n                    }\n                }\n                *0x408a38 = 2;\n            }\n            else {\n                if (cVar4 != 'R') {\n                    if (cVar4 == 'T') goto code_r0x0040604f;\n                    goto code_r0x00405e83;\n                }\n                if (var_108h._2_1_ == '\\0') {\n                    *0x409a2c = 3;\n                    *0x408a28 = 1;\n                }\n                else if (var_108h._2_1_ == ':') {\n                    *0x409a2c = 1;\n                    if (var_108h._3_1_ != '\\0') {\n                        puVar8 = &var_108h + 3;\n                        uVar7 = stack0xfffffef7;\n                        do {\n                            puVar8 = puVar8 + 1;\n                            cVar4 = (*_sym.imp.USER32.dll_CharUpperA)(uVar7);\n                            if (cVar4 == 'A') {\n                                *0x409a2c = *0x409a2c | 2;\n                                goto code_r0x00405f46;\n                            }\n                            if (cVar4 == 'D') {\n                                *0x408d48 = *0x408d48 | 0x40;\n                                goto code_r0x00405f4c;\n                            }\n                            if (cVar4 == 'I') {\n                                *0x409a2c = *0x409a2c & 0xfffffffd;\ncode_r0x00405f46:\n                                *0x408a28 = 1;\n                            }\n                            else {\n                                if (cVar4 == 'N') {\n                                    *0x409a2c = *0x409a2c & 0xfffffffe;\n                                    goto code_r0x00405f46;\n                                }\n                                if (cVar4 == 'P') {\n                                    *0x408d48 = *0x408d48 | 0x80;\n                                }\n                                else {\n                                    if (cVar4 == 'S') {\n                                        *0x409a2c = *0x409a2c | 4;\n                                        goto code_r0x00405f46;\n                                    }\n                                    bVar3 = false;\n                                }\n                            }\ncode_r0x00405f4c:\n                            uVar7 = *puVar8;\n                        } while (*puVar8 != 0);\n                    }\n                }\n                else {\n                    iVar6 = (*_sym.imp.KERNEL32.dll_CompareStringA)\n                                      (0x7f, 1, 0x4013c8, 0xffffffff, &var_108h + 1, 0xffffffff);\n                    if (iVar6 != 2) goto code_r0x00405e83;\n                }\n            }\ncode_r0x00405e85:\n            param_1 = var_10ch;\n        } while (*var_10ch != 0);\n        if (((*0x408a2c != 0) && (*0x408b3e == '\\0')) &&\n           (iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x409a3c, 0x408b3e, 0x104),  iVar6 != 0)) {\n            iVar6 = fcn.004066c8();\n            *(iVar6 + 1) = 0;\n        }\n    }\ncode_r0x00406207:\n    fcn.00406ce0(var_110h);\n    return;\n}\n",
        "token_count": 2720
    },
    "0040667f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040667f(char *param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        iVar1 = fcn.00406648();\n        if (iVar1 == 0) break;\n        param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 101
    },
    "004066c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.004066c8(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    pcVar2 = NULL;\n    for (; *param_1 != '\\0'; param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n        iVar1 = fcn.00406648();\n        if (iVar1 == 0) {\n            pcVar2 = param_1;\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 113
    },
    "00406952": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406952(char *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpNumberOfFreeClusters;\n    uint lpTotalNumberOfClusters;\n    int32_t lpSectorsPerCluster;\n    int32_t lpBytesPerSector;\n    \n    uVar2 = 0;\n    lpSectorsPerCluster = 0;\n    lpBytesPerSector = 0;\n    lpNumberOfFreeClusters = 0;\n    lpTotalNumberOfClusters = 0;\n    if (*param_1 != '\\0') {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (param_1, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, \n                           &lpTotalNumberOfClusters);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)\n                              (lpBytesPerSector * lpSectorsPerCluster, lpTotalNumberOfClusters, 0x400);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 232
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406ef0(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        (*_sym.imp.msvcrt.dll_void___cdecl_terminate_void_)();\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "00406fbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406fbe(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    uVar2 = arg_8h;\n    if ((iVar1 != 0) && (iVar1 = fcn.00406f54(iVar1),  iVar1 != 0)) {\n        uVar2 = 2;\n        if ((*(iVar1 + 0x5c) != 2) && (uVar2 = arg_8h,  *(iVar1 + 0x5c) == 3)) {\n            return 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "004024e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004024e0(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EDI;\n    uint lpPathName;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpPathName, 0x104);\n    if (iVar1 != 0) {\n        fcn.0040658a(0x401200);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, &lpPathName);\n        iVar1 = (*_sym.imp.KERNEL32.dll__lopen)(&lpPathName, 0x40);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll__llseek)(iVar1, 0, 2);\n            (*_sym.imp.KERNEL32.dll__lclose)(iVar1);\n        }\n    }\n    fcn.00406ce0(unaff_EDI);\n    return;\n}\n",
        "token_count": 233
    },
    "00404bc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404bc0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = arg_8h * 0x18;\n    uVar2 = 1;\n    if (*(arg_8h + 0x408d64) == 1) {\n        if (arg_10h != 0) {\n            if (arg_10h == 1) {\n                arg_ch = arg_ch + *(arg_8h + 0x408d6c);\n            }\n            else {\n                if (arg_10h != 2) {\n                    return -1;\n                }\n                arg_ch = arg_ch + *(arg_8h + 0x408d70);\n            }\n        }\n        *(arg_8h + 0x408d6c) = arg_ch;\n        return arg_ch;\n    }\n    if (arg_10h == 0) {\n        uVar2 = 0;\n    }\n    else if (arg_10h != 1) {\n        if (arg_10h != 2) {\n            return -1;\n        }\n        uVar2 = 2;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(*(arg_8h + 0x408d74), arg_ch, 0, uVar2);\n    if (iVar1 == -1) {\n        return -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "004053a1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __fastcall fcn.004053a1(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    iVar2 = 0;\n    do {\n        fcn.0040171e(&var_108h, 0x104, 0x401378, iVar2);\n        iVar2 = iVar2 + 1;\n        fcn.00401680(param_1);\n        fcn.0040658a(&var_108h);\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(param_2);\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_2);\n        if (iVar1 == -1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_2, 0);\n            if (iVar2 != 0) {\n                *0x408a20 = 1;\n                goto code_r0x0040543a;\n            }\n            break;\n        }\n    } while (iVar2 < 400);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(param_1, 0x401384, 0, param_2);\n    if (iVar2 != 0) {\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_2);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_2, 0);\n    }\ncode_r0x0040543a:\n    fcn.00406ce0(var_108h);\n    return;\n}\n",
        "token_count": 389
    },
    "004058c8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004058c8(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar5 = param_1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pcVar5 + (0x14 - (param_1 + 1)));\n    if (iVar2 == 0) {\n        fcn.004044b9(0, 0, 0x10, 0);\n    }\n    else {\n        fcn.00401680(param_1);\n        fcn.0040658a(0x4013b8);\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(iVar2, 0x40000000, 0, 0, 1, 0x4000080, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar2);\n        if (iVar3 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n            if ((uVar4 != 0xffffffff) && ((uVar4 & 0x10) != 0)) {\n                *0x409124 = 0;\n                return 1;\n            }\n        }\n    }\n    *0x409124 = fcn.00406285();\n    return 0;\n}\n",
        "token_count": 381
    },
    "004063c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063c0(int32_t arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint arg_8h_00;\n    uint var_110h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    var_10ch = 0;\n    fcn.00401781(in_ECX, 0x4091e4);\n    fcn.0040658a(arg_10h);\n    arg_8h_00 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_108h, 0x40000000, 0, 0, 2, 0x80, 0);\n    if (iVar1 == -1) {\n        *0x409124 = 0x80070052;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1, arg_14h, arg_8h, &var_10ch, 0);\n        if ((iVar2 == 0) || (arg_8h != var_10ch)) {\n            *0x409124 = 0x80070052;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.00406ce0(arg_8h_00);\n    return;\n}\n",
        "token_count": 356
    },
    "00406495": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406495(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_8h;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    fcn.00401781(param_1, 0x4091e4);\n    fcn.0040658a(0x4011d8);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(&fcn.00406495::lpLibFileName);\n    if ((uVar1 == 0xffffffff) || ((uVar1 & 0x10) != 0)) {\n        arg_8h = 0x406508;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4011d8);\n    }\n    else {\n        arg_8h = 0;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(&fcn.00406495::lpLibFileName, 0, 8);\n    }\n    fcn.00406ce0(arg_8h);\n    return;\n}\n",
        "token_count": 252
    },
    "00406517": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406517(uint hWndParent, uint lpDialogFunc, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = *0x409a3c;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(*0x409a3c);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 != 0)) {\n        if (arg_10h == 0) {\n            arg_10h = 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_DialogBoxIndirectParamA)(uVar1, iVar2, hWndParent, lpDialogFunc, arg_10h);\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar2);\n        if (iVar3 != -1) {\n            return iVar3;\n        }\n    }\n    fcn.004044b9(0, 0, 0x10, 0);\n    return arg_14h;\n}\n",
        "token_count": 260
    },
    "004066ae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004066ae(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 == 0xffffffff) {\n        return 0;\n    }\n    return ~(uVar1 >> 4) & 1;\n}\n",
        "token_count": 83
    },
    "00406f54": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406f54(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00407208(0x4072d8, 0xc);\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (piVar1 != 0xffffffff)) {\n        *(unaff_EBP + -4) = 0;\n        if ((*piVar1 == 0x5a4d) && ((uVar2 = *(piVar1 + 0x1e),  -1 < uVar2 && (uVar2 < 0x10000000)))) {\n            piVar3 = piVar1 + uVar2;\n            *(unaff_EBP + -0x1c) = piVar3;\n            *(unaff_EBP + -0x1c) = ~-(*piVar3 != 0x4550) & piVar3;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n    }\n    fcn.0040724d();\n    return;\n}\n",
        "token_count": 300
    },
    "00403b26": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00403b26(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    do {\n        *(uVar1 + 0x408d60) = 1;\n        uVar1 = uVar1 + 0x18;\n    } while (uVar1 < 0x3c0);\n    if (((*0x408a38 & 1) == 0) && ((*0x409a34 & 1) == 0)) {\n        iVar2 = fcn.00406517(0, fcn.004034f0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.00404fe0();\n    }\n    if (iVar2 == 0) {\n        *0x409124 = 0x8007042b;\n    }\n    else {\n        iVar2 = fcn.00406298();\n        if (iVar2 != 0) {\n            *0x409124 = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00403fef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hProcess\n\nvoid __fastcall fcn.00403fef(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint hProcess;\n    uint hObject;\n    uint uStack536;\n    uint uStack532;\n    uint32_t lpExitCode;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if (param_1 != 0) {\n        hProcess = 0;\n        hObject = 0;\n        uStack536 = 0;\n        uStack532 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, param_1, 0, 0, 0, 0x20, 0, 0, param_2, &hProcess);\n        if (iVar1 == 0) {\n            *0x409124 = fcn.00406285();\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0, &var_208h, 0x200, 0);\n            (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1000, 0, uVar2);\n            hProcess = 0;\n            fcn.004044b9(param_1, &var_208h, 0x10, 0);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 0xffffffff);\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n            if ((((*0x408a28 == 0) && ((*0x409a2c & 1) != 0)) && ((*0x409a2c & 2) == 0)) &&\n               ((lpExitCode & 0xff000000) == 0xaa000000)) {\n                *0x409a2c = lpExitCode;\n            }\n            fcn.0040411b();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hProcess);\n        }\n    }\n    fcn.00406ce0(hProcess);\n    return;\n}\n",
        "token_count": 506
    },
    "00404fe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404fe0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    *0x409144 = fcn.0040468f(0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0x40134c, 10);\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar1);\n    iVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar1);\n    *0x409140 = iVar2;\n    if (iVar2 != 0) {\n        if (*0x408584 != 0) {\n            uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x408584, 0x842, 0);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar1);\n            uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x408584, 0x841, 5);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar1);\n        }\n        iVar2 = fcn.00404efd();\n        if (iVar2 == 0) {\n            fcn.004044b9(0, 0, 0x10, 0);\n            iVar2 = 0;\n        }\n        else {\n            iVar3 = (*_sym.imp.Cabinet.dll_FDICreate)\n                              (fcn.00404ca0, fcn.00404cc0, fcn.00404980, fcn.00404a50, fcn.00404ad0, fcn.00404b60, \n                               fcn.00404bc0, 1, 0x409148);\n            if ((iVar3 == 0) ||\n               ((iVar2 = (*_sym.imp.Cabinet.dll_FDICopy)(iVar3, \"*MEMCAB\", 0x401140, 0, fcn.00404cd0, 0, 0x409140), \n                iVar2 != 0 && (iVar3 = (*_sym.imp.Cabinet.dll_FDIDestroy)(iVar3),  iVar3 == 0)))) {\n                fcn.004044b9(0, 0, 0x10, 0);\n                iVar2 = 0;\n            }\n        }\n        if (*0x409140 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*0x409140);\n            *0x409140 = 0;\n        }\n        if ((iVar2 == 0) && (*0x4091d8 == 0)) {\n            fcn.004044b9(0, 0, 0x10, 0);\n        }\n        if (((*0x408a38 & 1) == 0) && ((*0x409a34 & 1) == 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(*0x408584, 0xfa1, iVar2, 0);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 665
    },
    "00403450": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403450(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, 2);\n    }\n    else if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        fcn.004043d0();\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x409154);\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg_8h, 0x838, *0x409404);\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n    }\n    else {\n        if (arg_ch != 0x111) {\n            return 0;\n        }\n        if (5 < arg_10h) {\n            if (7 < arg_10h) {\n                if (arg_10h != 0x839) {\n                    return 1;\n                }\n                *0x4091dc = 1;\n            }\n            (*_sym.imp.USER32.dll_EndDialog)(arg_8h, arg_10h);\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 283
    },
    "004051e5": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.004051e5(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    iVar1 = fcn.0040468f(0);\n    arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, iVar1 + 1);\n    if (arg_8h == 0) {\n        fcn.004044b9(0, 0, 0x10, 0);\n        *0x409124 = fcn.00406285();\n    }\n    else {\n        iVar1 = fcn.0040468f(iVar1);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg_8h, 0x4012c0);\n            if (iVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h);\n            }\n            else {\n                iVar1 = fcn.004044b9(arg_8h, 0, 0x20, 4);\n                (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h);\n                if (iVar1 != 6) {\n                    *0x409124 = 0x800704c7;\n                    return 0;\n                }\n                *0x409124 = 0;\n            }\n            return 1;\n        }\n        fcn.004044b9(0, 0, 0x10, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h);\n        *0x409124 = 0x80070714;\n    }\n    return 0;\n}\n",
        "token_count": 365
    },
    "0040202a": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nvoid fcn.0040202a(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *format;\n    uint *puVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint arg_8h;\n    uint lpReserved;\n    uint var_214h;\n    uint hKey;\n    uint lpLibFileName;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    sub.msvcrt.dll_memset(&lpFilename, 0, 0x104);\n    sub.msvcrt.dll_memset(&lpLibFileName, 0, 0x104);\n    uVar7 = 0;\n    arg_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\", 0, 0, 0, 0x2001f, 0, &hKey, \n                       &var_214h);\n    if (iVar2 != 0) goto code_r0x00402257;\n    iVar2 = 0;\n    do {\n        fcn.0040171e(0x408530, 0x50, \"wextract_cleanup%d\", iVar2);\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x408530, 0, 0, 0, &lpReserved);\n        if (iVar3 != 0) break;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 200);\n    if (iVar2 == 200) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        *0x408530 = 0;\n        goto code_r0x00402257;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpLibFileName, 0x104);\n    fcn.0040658a(0x4011d8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    if (iVar2 == 0) {\ncode_r0x00402179:\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*0x409a3c, &lpFilename, 0x104);\n        if (iVar2 != 0) goto code_r0x00402196;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4011e4);\n        uVar7 = iVar3 != 0;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        if (iVar3 == 0) goto code_r0x00402179;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpFilename, 0x104);\n        if (iVar2 != 0) {\n            fcn.0040658a(0x401140);\n        }\ncode_r0x00402196:\n        puVar5 = &lpFilename;\n        do {\n            cVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar4 = 0x4091e4;\n        do {\n            pcVar6 = pcVar4;\n            pcVar4 = pcVar6 + 1;\n        } while (*pcVar6 != '\\0');\n        pcVar4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pcVar6 + puVar5 + (-0x409194 - (&lpFilename + 1)));\n        if (pcVar4 != NULL) {\n            *0x408580 = uVar7 ^ 1;\n            format = \"rundll32.exe %sadvpack.dll,DelNodeRunDLL32 \\\"%s\\\"\";\n            if (uVar7 == 0) {\n                format = \"%s /D:%s\";\n            }\n            fcn.0040171e(pcVar4, pcVar6 + puVar5 + (-0x409194 - (&lpFilename + 1)), format, &lpFilename);\n            pcVar6 = pcVar4;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0x408530, 0, 1, pcVar4, pcVar6 + (1 - (pcVar4 + 1)));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(pcVar4);\n            goto code_r0x00402257;\n        }\n        fcn.004044b9(0, 0, 0x10, 0);\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\ncode_r0x00402257:\n    fcn.00406ce0(arg_8h);\n    return;\n}\n",
        "token_count": 1148
    },
    "004066f9": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004066f9(char *param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    pcVar1 = param_1;\n    do {\n        cVar2 = *pcVar1;\n        if (cVar2 - 0x30U < 10) {\n            iVar3 = (iVar3 + -3) * 0x10 + cVar2;\n        }\n        else {\n            if ('`' < cVar2) {\n                cVar2 = cVar2 + -0x20;\n            }\n            if (5 < cVar2 - 0x41U) {\n                *param_2 = iVar3;\n                return pcVar1 != param_1;\n            }\n            iVar3 = iVar3 * 0x10 + -0x37 + cVar2;\n        }\n        pcVar1 = (*_sym.imp.USER32.dll_CharNextA)(pcVar1);\n    } while( true );\n}\n",
        "token_count": 247
    },
    "0040681f": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpType\n\nvoid fcn.0040681f(void)\n\n{\n    int32_t iVar1;\n    uint lpType;\n    uint lpcbData;\n    uint32_t var_ach;\n    uint phkResult;\n    uint lpVersionInformation;\n    int32_t var_a0h;\n    uint32_t var_9ch;\n    int32_t var_94h;\n    uint lpData;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    lpcbData = 0xc;\n    var_ach = 0;\n    if (*0x4081d8 == -2) {\n        *0x4081d8 = 0;\n        lpVersionInformation = 0x94;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n        if (((((iVar1 != 0) && (var_94h == 1)) && (var_a0h == 4)) &&\n            ((var_9ch < 10 && (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4a),  iVar1 != 0)))) &&\n           (iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, 0x4013e0, 0, 0x20019, &phkResult),  iVar1 == 0))\n        {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(phkResult, 0x401140, 0, &lpType, &lpData, &lpcbData);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if (((iVar1 == 0) && (iVar1 = fcn.004066f9(),  iVar1 != 0)) &&\n               (((var_ach & 0x3ff) == 1 || ((var_ach & 0x3ff) == 0xd)))) {\n                *0x4081d8 = 1;\n            }\n        }\n    }\n    fcn.00406ce0(lpType);\n    return;\n}\n",
        "token_count": 484
    },
    "0040171e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040171e(uchar *s, uint32_t arg_ch, uint format, uint arg)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if ((arg_ch == 0) || (0x7fffffff < arg_ch)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    if (iVar2 < 0) {\n        if (arg_ch != 0) {\n            *s = 0;\n        }\n    }\n    else {\n        iVar2 = 0;\n        arg_ch = arg_ch - 1;\n        uVar1 = (*_sym.imp.msvcrt.dll__vsnprintf)(s, arg_ch, format, &arg);\n        if ((uVar1 < 0) || (arg_ch < uVar1)) {\n            iVar2 = -0x7ff8ff86;\n        }\n        else if (uVar1 != arg_ch) {\n            return 0;\n        }\n        s[arg_ch] = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 239
    },
    "004018a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pSid2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004018a3(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint pSid2;\n    uint TokenHandle;\n    uint TokenInformationLength;\n    int32_t var_10h;\n    uint pIdentifierAuthority;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    uVar4 = 0;\n    var_8h._0_2_ = 0x500;\n    pIdentifierAuthority = 0;\n    var_10h = 0;\n    if (*0x408128 == 2) {\n        iVar1 = fcn.004017ee();\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n            iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n            if (iVar1 != 0) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 2, 0, 0, &TokenInformationLength);\n                if (((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x7a)) &&\n                   (puVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, TokenInformationLength),  puVar3 != NULL)) {\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                      (TokenHandle, 2, puVar3, TokenInformationLength, &TokenInformationLength);\n                    if ((iVar1 != 0) &&\n                       (iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                                          (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid2),  iVar1 != 0\n                       )) {\n                        if (*puVar3 != 0) {\n                            puVar5 = puVar3 + 1;\n                            do {\n                                iVar1 = (*_sym.imp.ADVAPI32.dll_EqualSid)(*puVar5, pSid2);\n                                if (iVar1 != 0) {\n                                    *0x408128 = 1;\n                                    var_10h = 1;\n                                    break;\n                                }\n                                uVar4 = uVar4 + 1;\n                                puVar5 = puVar5 + 2;\n                            } while (uVar4 < *puVar3);\n                        }\n                        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid2);\n                    }\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(puVar3);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n            }\n        }\n        else if (var_10h != 0) {\n            *0x408128 = 1;\n        }\n    }\n    fcn.00406ce0(pSid2);\n    return;\n}\n",
        "token_count": 716
    },
    "004043d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043d0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_8h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hWnd;\n    int32_t lpRect;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_1, &lpRect);\n    var_1ch = var_1ch - lpRect;\n    var_18h = var_18h - var_20h;\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_2, &var_14h);\n    var_8h = var_8h - var_10h;\n    var_ch = var_ch - var_14h;\n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(param_1);\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar1, 8);\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar1, 10);\n    (*_sym.imp.USER32.dll_ReleaseDC)(param_1, uVar1);\n    var_14h = (var_ch - var_1ch) / 2 + var_14h;\n    arg_8h = 0;\n    iVar4 = arg_8h;\n    if ((-1 < var_14h) && (iVar4 = var_14h,  iVar2 < var_14h + var_1ch)) {\n        iVar4 = iVar2 - var_1ch;\n    }\n    var_10h = (var_8h - var_18h) / 2 + var_10h;\n    if ((-1 < var_10h) && (arg_8h = var_10h,  iVar3 < var_10h + var_18h)) {\n        arg_8h = iVar3 - var_18h;\n    }\n    (*_sym.imp.USER32.dll_SetWindowPos)(param_1, 0, iVar4, arg_8h, 0, 0, 5);\n    fcn.00406ce0(arg_8h);\n    return;\n}\n",
        "token_count": 595
    },
    "0040468f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040468f(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0);\n    uVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, uVar1);\n    if ((uVar2 <= arg_8h) && (in_EDX != 0)) {\n        if (uVar2 != 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0);\n            uVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, uVar1);\n            iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar1);\n            if (iVar3 != 0) {\n                (*_sym.imp.msvcrt.dll_memcpy_s)();\n                (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n                return uVar2;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 252
    },
    "00404a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404a50(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    arg_8h = arg_8h * 0x18;\n    if (*(arg_8h + 0x408d64) == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(arg_8h + 0x408d74), arg_ch, arg_10h, &arg_10h, 0);\n        if (iVar2 != 0) {\n            return arg_10h;\n        }\n    }\n    else if (*(arg_8h + 0x408d64) == 1) {\n        uVar1 = *(arg_8h + 0x408d70) - *(arg_8h + 0x408d6c);\n        uVar3 = arg_10h;\n        if (uVar1 <= arg_10h) {\n            uVar3 = uVar1;\n        }\n        sub.msvcrt.dll_memcpy(arg_ch, *(arg_8h + 0x408d68) + *(arg_8h + 0x408d6c), uVar3);\n        *(arg_8h + 0x408d6c) = *(arg_8h + 0x408d6c) + uVar3;\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 340
    },
    "00406298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406298(code *param_1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *unaff_EDI;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpName;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    var_20h = 0;\n    fcn.0040171e(&lpName, 0x14, 0x4013d4, 0);\n    do {\n        iVar6 = (*_sym.imp.KERNEL32.dll_FindResourceA)();\n        if (iVar6 == 0) {\ncode_r0x0040636b:\n            fcn.00406ce0(unaff_EDI);\n            return;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar6);\n        puVar5 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n        if (puVar5 == NULL) {\n            *0x409124 = 0x80070714;\n            goto code_r0x0040636b;\n        }\n        puVar1 = puVar5 + 2;\n        puVar7 = puVar1;\n        do {\n            cVar2 = *puVar7;\n            puVar7 = puVar7 + 1;\n        } while (cVar2 != '\\0');\n        (**0x40a288)(*puVar5, puVar5[1], puVar1, puVar7 + (1 - (puVar5 + 9)) + puVar1);\n        iVar6 = (*param_1)();\n        if (&stack0xffffffc4 != &stack0xffffffd4) {\n            pcVar3 = swi(0x29);\n            iVar6 = (*pcVar3)();\n        }\n        if (iVar6 == 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)();\n            unaff_EDI = puVar5;\n            goto code_r0x0040636b;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)();\n        var_20h = var_20h + 1;\n        fcn.0040171e(&lpName, 0x14, 0x4013d4, var_20h);\n        unaff_EDI = puVar5;\n    } while( true );\n}\n",
        "token_count": 559
    },
    "00406380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406380(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0x200;\n    uVar2 = 0;\n    do {\n        uVar3 = arg_8h % uVar4;\n        uVar1 = -(uVar3 != 0) & uVar4;\n        uVar4 = uVar4 * 2;\n        *(uVar2 + 0x4089e0) = *(uVar2 + 0x4089e0) + (uVar1 - uVar3) + arg_8h;\n        uVar2 = uVar2 + 4;\n    } while (uVar2 < 0x20);\n    return 1;\n}\n",
        "token_count": 192
    },
    "0040658a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040658a(char *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *in_ECX;\n    uint32_t in_EDX;\n    char *pcVar4;\n    \n    pcVar4 = in_ECX;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    if ((pcVar4 - (in_ECX + 1)) + 1U < in_EDX) {\n        pcVar4 = in_ECX + (pcVar4 - (in_ECX + 1));\n        if (in_ECX < pcVar4) {\n            pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)();\n            if (*pcVar3 != '\\\\') {\n                *pcVar4 = '\\\\';\n                pcVar4 = pcVar4 + 1;\n            }\n        }\n        *pcVar4 = '\\0';\n        for (; *arg_8h == ' '; arg_8h = arg_8h + 1) {\n        }\n        uVar2 = fcn.004016b3(arg_8h);\n    }\n    else {\n        uVar2 = 0x8007007a;\n    }\n    return uVar2;\n}\n",
        "token_count": 295
    },
    "00406c3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c3f(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (arg_8h < arg_ch) {\n        do {\n            if (iVar2 != 0) {\n                return;\n            }\n            pcVar1 = *arg_8h;\n            if (pcVar1 != NULL) {\n                (**0x40a288)();\n                iVar2 = (*pcVar1)();\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00406e2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406e2a(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_CF;\n    uint8_t in_PF;\n    uint8_t in_AF;\n    uint8_t in_ZF;\n    uint8_t in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_OF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    \n    *0x408310 = (in_NT & 1) * 0x4000 | (in_OF & 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                (in_SF & 1) * 0x80 | (in_ZF & 1) * 0x40 | (in_AF & 1) * 0x10 | (in_PF & 1) * 4 | in_CF & 1 |\n                (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x408250 = 0x10001;\n    *0x408314 = &stack0x00000004;\n    *0x408200 = 0xc0000409;\n    *0x408204 = 1;\n    *0x408210 = 1;\n    *0x408214 = 8;\n    *0x40820c = unaff_retaddr;\n    *0x4082dc = in_GS;\n    *0x4082e0 = in_FS;\n    *0x4082e4 = in_ES;\n    *0x4082e8 = in_DS;\n    *0x4082ec = unaff_EDI;\n    *0x4082f0 = unaff_ESI;\n    *0x4082f4 = unaff_EBX;\n    *0x4082f8 = param_2;\n    *0x4082fc = param_1;\n    *0x408300 = in_EAX;\n    *0x408308 = unaff_retaddr;\n    *0x40830c = in_CS;\n    *0x408318 = in_SS;\n    fcn.00406cf0(0x401000);\n    return;\n}\n",
        "token_count": 623
    },
    "00407010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407010(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h = *(arg_8h + 0x3c) + arg_8h;\n    iVar1 = *(arg_8h + 0x14) + 0x18 + arg_8h;\n    if (*(arg_8h + 6) != 0) {\n        do {\n            if ((*(iVar1 + 0xc) <= arg_ch) && (arg_ch < *(iVar1 + 8) + *(iVar1 + 0xc))) {\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(arg_8h + 6));\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "00407120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407120(int16_t *arg_8h)\n\n{\n    if (((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) && (*(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b)\n       ) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 110
    },
    "004017c8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004017c8(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    \n    if ((arg_8h < in_ECX) || (0x400 < arg_8h - in_ECX)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (in_ECX - arg_8h) + 0x400;\n    }\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "00404702": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404702(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    char *pcVar3;\n    uint in_EDX;\n    char *pcVar4;\n    \n    fcn.00401680(in_EDX);\n    pcVar3 = in_ECX;\n    do {\n        pcVar4 = pcVar3;\n        pcVar3 = pcVar4 + 1;\n    } while (*pcVar4 != '\\0');\n    if (pcVar4[-1] != '\\\\') {\n        pcVar3 = in_ECX;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        if ((in_ECX[pcVar3 + (-1 - (in_ECX + 1))] != '/') && (iVar2 = fcn.004016b3(0x401244),  iVar2 < 0)) {\n            return 0;\n        }\n    }\n    fcn.004016b3(arg_8h);\n    return 1;\n}\n",
        "token_count": 249
    },
    "00407155": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407155(void)\n\n{\n    uint32_t uVar1;\n    uint32_t lpPerformanceCount;\n    uint32_t var_10h;\n    uint32_t lpSystemTimeAsFileTime;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    lpSystemTimeAsFileTime = 0;\n    var_8h = 0;\n    if ((*0x408004 == 0xbb40e64e) || ((*0x408004 & 0xffff0000) == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n        var_4h = var_8h ^ lpSystemTimeAsFileTime;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        var_4h = var_4h ^ uVar1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_4h = var_4h ^ uVar1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = uVar1 ^ var_4h ^ &var_4h;\n        (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount);\n        var_4h = var_10h ^ lpPerformanceCount ^ var_4h;\n        if ((var_4h == 0xbb40e64e) || (uVar1 = *0x408004 & 0xffff0000,  *0x408004 = var_4h,  uVar1 == 0)) {\n            *0x408004 = 0xbb40e64f;\n        }\n    }\n    *0x408008 = ~*0x408004;\n    return;\n}\n",
        "token_count": 394
    },
    "00403680": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403680(uint param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    int32_t var_1ch;\n    uint pHandles;\n    \n    bVar1 = false;\n    pHandles = param_1;\n    do {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_MsgWaitForMultipleObjects)(1, &pHandles, 0, 0xffffffff, 0x4ff);\n            if (iVar2 == 0) {\n                return;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 1);\n        } while (iVar2 == 0);\n        do {\n            if (var_1ch == 0x12) {\n                bVar1 = true;\n            }\n            else {\n                (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 1);\n        } while (iVar2 != 0);\n    } while (!bVar1);\n    return;\n}\n",
        "token_count": 267
    },
    "00401781": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401781(uint noname_0, int32_t arg_ch)\n\n{\n    char *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    if (in_EDX != 0) {\n        iVar1 = 0x7ffffffe;\n        arg_ch = arg_ch - in_ECX;\n        do {\n            if ((iVar1 == 0) || (in_ECX[arg_ch] == '\\0')) break;\n            *in_ECX = in_ECX[arg_ch];\n            in_ECX = in_ECX + 1;\n            iVar1 = iVar1 + -1;\n            in_EDX = in_EDX + -1;\n        } while (in_EDX != 0);\n        if (in_EDX != 0) goto code_r0x004017b1;\n    }\n    in_ECX = in_ECX + -1;\ncode_r0x004017b1:\n    *in_ECX = '\\0';\n    return (-(in_EDX != 0) & 0x7ff8ff86) + 0x8007007a;\n}\n",
        "token_count": 247
    },
    "004047e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004047e0(char *param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    piVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 8);\n    if (piVar2 == NULL) {\n        fcn.004044b9(0, 0, 0x10, 0);\n    }\n    else {\n        pcVar4 = param_1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pcVar4 + (1 - (param_1 + 1)));\n        *piVar2 = iVar3;\n        pcVar4 = param_1;\n        if (iVar3 != 0) {\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00401680(param_1);\n            piVar2[1] = *0x4091e0;\n            *0x4091e0 = piVar2;\n            return 1;\n        }\n        fcn.004044b9(0, 0, 0x10, 0);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(piVar2);\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "0040490c": {
        "rules": [
            "contain loop",
            "create directory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040490c(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    if (*param_1 != '\\0') {\n        cVar1 = param_1[1];\n        iVar3 = 0;\n        pcVar2 = param_1 + 2;\n        if ((cVar1 == ':') && (*pcVar2 == '\\\\')) {\n            pcVar2 = param_1 + 3;\n        }\n        else {\n            if ((*param_1 != '\\\\') || (cVar1 != '\\\\')) {\n                pcVar2 = param_1 + 1;\n                goto code_r0x0040496d;\n            }\n            iVar3 = 2;\n        }\n        while( true ) {\n            cVar1 = *pcVar2;\ncode_r0x0040496d:\n            if (cVar1 == '\\0') break;\n            if ((cVar1 == '\\\\') && (pcVar2[-1] != ':')) {\n                if (iVar3 == 0) {\n                    *pcVar2 = '\\0';\n                    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(param_1, 0);\n                    *pcVar2 = '\\\\';\n                }\n                else {\n                    iVar3 = iVar3 + -1;\n                }\n            }\n            pcVar2 = (*_sym.imp.USER32.dll_CharNextA)(pcVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "004065e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004065e8(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar3 = param_1;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, param_1 + (pcVar3 - (param_1 + 1)));\n    do {\n        pcVar3 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar3);\n        if (pcVar3 <= param_1) {\n            if (*pcVar3 != '\\\\') {\n                return 0;\n            }\n            break;\n        }\n    } while (*pcVar3 != '\\\\');\n    if ((pcVar3 == param_1) || (pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar3),  *pcVar2 == ':')) {\n        pcVar3 = (*_sym.imp.USER32.dll_CharNextA)(pcVar3);\n    }\n    *pcVar3 = '\\0';\n    return 1;\n}\n",
        "token_count": 274
    },
    "004017ee": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004017ee(uint *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uStack64;\n    uint uStack60;\n    uint *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_18h;\n    uint pSid;\n    code *var_10h;\n    uint pIdentifierAuthority;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    var_8h._0_2_ = 0x500;\n    pIdentifierAuthority = 0;\n    uStack44 = 0x401144;\n    uStack48 = 0x401820;\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar2 != 0) {\n        uStack48 = 0x401154;\n        puStack56 = 0x401832;\n        iStack52 = iVar2;\n        var_10h = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (var_10h != NULL) {\n            puStack56 = &fcn.004017ee::pSid;\n            uStack60 = 0;\n            uStack64 = 0;\n            *param_1 = 0;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                              (&fcn.004017ee::pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0);\n            if (iVar3 != 0) {\n                uStack60 = pSid;\n                uStack64 = 0;\n                puStack56 = param_1;\n                (**0x40a288)();\n                (*var_10h)();\n                if (&stack0xffffffcc != &stack0xffffffc0) {\n                    pcVar1 = swi(0x29);\n                    (*pcVar1)();\n                }\n                (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n            }\n        }\n        uStack60 = 0x401890;\n        puStack56 = iVar2;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    fcn.00406ce0(unaff_EBX);\n    return;\n}\n",
        "token_count": 537
    },
    "00402630": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00402630(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint lpBuffer;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    arg_8h = 0x104;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer);\n    if (iVar1 == 0) {\n        fcn.004044b9(0, 0, 0x10, 0);\n    }\n    fcn.00406ce0(arg_8h);\n    return;\n}\n",
        "token_count": 141
    },
    "0040621e": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040621e(void)\n\n{\n    int32_t arg_8h;\n    uint lpBuffer;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0x104);\n    if (arg_8h == 0) {\n        fcn.004044b9(0, 0, 0x10, 0);\n        *0x409124 = fcn.00406285();\n    }\n    else {\n        arg_8h = 2;\n        fcn.0040597d(2);\n    }\n    fcn.00406ce0(arg_8h);\n    return;\n}\n",
        "token_count": 174
    },
    "00405467": {
        "rules": [
            "delete directory",
            "create directory",
            "get system information on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405467(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint noname_0;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint lpSystemInfo;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x408004 ^ &stack0xfffffffc;\n    if (in_EDX == 0) {\n        arg_8h_01 = 0x40552d;\n        fcn.00401680(in_ECX);\n    }\n    else {\n        arg_8h_01 = 0x405495;\n        iVar1 = fcn.004053a1();\n        if (iVar1 == 0) goto code_r0x0040558d;\n        arg_8h_00 = noname_0;\n        arg_8h_01 = noname_0;\n        fcn.00401781(noname_0, &fcn.00405467::var_108h);\n        if (((*0x409a34 & 0x20) != 0) &&\n           (((((*_sym.imp.KERNEL32.dll_GetSystemInfo)(&fcn.00405467::lpSystemInfo),  lpSystemInfo == 0 ||\n              (lpSystemInfo == 1)) || (lpSystemInfo == 2)) || (lpSystemInfo == 3)))) {\n            fcn.0040658a(arg_8h_00);\n        }\n        fcn.0040658a(0x401140);\n    }\n    iVar1 = fcn.004058c8();\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x4091e4, 0);\n        if (iVar1 == 0) {\n            *0x409124 = fcn.00406285();\n            goto code_r0x0040558d;\n        }\n        *0x408a20 = 1;\n    }\n    if ((arg_8h == 0) || (iVar1 = fcn.0040597d(0),  iVar1 != 0)) {\n        *0x409124 = 0;\n    }\n    else if (*0x408a20 != 0) {\n        *0x408a20 = 0;\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(0x4091e4);\n    }\ncode_r0x0040558d:\n    fcn.00406ce0(arg_8h_01);\n    return;\n}\n",
        "token_count": 586
    },
    "00406c70": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nbool fcn.00406c70(void)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x400000 != 0x5a4d) || (*(*0x40003c + 0x400000) != 0x4550)) {\n        return false;\n    }\n    if (*(*0x40003c + 0x400018) == 0x10b) {\n        if (*(*0x40003c + 0x400074) < 0xf) {\n            return false;\n        }\n        iVar1 = *(*0x40003c + 0x4000e8);\n    }\n    else {\n        if (*(*0x40003c + 0x400018) != 0x20b) {\n            return false;\n        }\n        if (*(*0x40003c + 0x400084) < 0xf) {\n            return false;\n        }\n        iVar1 = *(*0x40003c + 0x4000f8);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 229
    }
}