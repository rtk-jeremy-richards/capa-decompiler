{
    "18000100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180001005(code **arg1)\n\n{\n    int64_t *piVar1;\n    \n    *(arg1 + 1) = 0xc0000001;\n    *arg1 = vtable.ATL::CComObject_class_CComSpySqlAudit_.0;\n    piVar1 = arg1[0xc];\n    if (piVar1 != NULL) {\n        arg1[0xc] = NULL;\n        (**(*piVar1 + 0x10))();\n    }\n    if (arg1[10] != NULL) {\n        sub.ODBC32.dll_SQLFreeStmt(arg1[10], 1);\n    }\n    if (arg1[9] != NULL) {\n        sub.ODBC32.dll_SQLDisconnect();\n        sub.ODBC32.dll_SQLFreeConnect(arg1[9]);\n        sub.ODBC32.dll_SQLFreeEnv(arg1[8]);\n    }\n    (**(**0x18004ded0 + 0x10))();\n    if (arg1[0xc] != NULL) {\n        (**(*arg1[0xc] + 0x10))();\n    }\n    if (*(arg1 + 7) != '\\0') {\n        *(arg1 + 7) = 0;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)();\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "18000105": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.180001055(int64_t *arg1, ulong arg2, ulong lpSubKey)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    \n    if (*arg1 == 0) {\n        if (*(arg1 + 1) != 0) {\n            uVar3 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg2, lpSubKey);\n            return uVar3;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Advapi32.dll\");\n        if ((iVar1 != 0) &&\n           (pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegDeleteKeyTransactedW\"),  pcVar2 != NULL)) {\n            uVar3 = (*pcVar2)(arg2, lpSubKey, 0, 0, *arg1, 0);\n            return uVar3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 225
    },
    "1800011d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800011db(ulong hModule, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t *piStackX24;\n    int64_t iStackX32;\n    ulong auStack24 [2];\n    \n    auStack24[0] = 0;\n    piStackX24 = NULL;\n    iVar1 = fcn.180001311(hModule, arg2, auStack24, &piStackX24);\n    if (iVar1 < 0) goto code_r0x0001800081a3;\n    iVar1 = (**(*piStackX24 + 0x38))(piStackX24, &iStackX32);\n    if (iVar1 < 0) goto code_r0x0001800081a3;\n    if (*0x18004dec9 == '\\x01') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"OLEAUT32.DLL\");\n        if (iVar2 == 0) goto code_r0x00018000816e;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"UnRegisterTypeLibForUser\");\n        if (pcVar3 == NULL) goto code_r0x00018000816e;\n    }\n    else {\ncode_r0x00018000816e:\n        pcVar3 = _sym.imp.OLEAUT32.dll_VarDecFix;\n    }\n    iVar1 = (*pcVar3)(iStackX32, *(iStackX32 + 0x18), *(iStackX32 + 0x1a), *(iStackX32 + 0x10), *(iStackX32 + 0x14));\n    (**(*piStackX24 + 0x60))(piStackX24, iStackX32);\ncode_r0x0001800081a3:\n    if (piStackX24 != NULL) {\n        (**(*piStackX24 + 0x10))();\n    }\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(auStack24[0]);\n    return iVar1;\n}\n",
        "token_count": 472
    },
    "1800011f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.1800011f4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    if (*arg1 == 0) {\n        if (*(arg1 + 1) != 0) {\n            uVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg2, arg3, arg4, in_stack_00000028);\n            return uVar3;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Advapi32.dll\");\n        if ((iVar1 != 0) &&\n           (pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegOpenKeyTransactedW\"),  pcVar2 != NULL)) {\n            uVar3 = (*pcVar2)(arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, *arg1, 0);\n            return uVar3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 268
    },
    "18000134": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000134d(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    \n    if (*arg1 == 0) {\n        if (*(arg1 + 1) != 0) {\n            uVar3 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(arg2, arg3, arg4, in_stack_00000028);\n            return uVar3;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"Advapi32.dll\");\n        if ((iVar1 != 0) &&\n           (pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegCreateKeyTransactedW\"),  pcVar2 != NULL)) {\n            uVar3 = (*pcVar2)(arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                              in_stack_00000040, in_stack_00000048, in_stack_00000050, *arg1, 0);\n            return uVar3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 333
    },
    "18000136": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.180001366(ushort *arg1, uint64_t arg2, ulong *arg3, uint64_t *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int16_t *noname_2;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ushort *puVar6;\n    ushort *puVar7;\n    uint32_t in_stack_00000028;\n    int16_t *in_stack_00000030;\n    \n    iVar1 = -0x7ff8ffa9;\n    if (((((in_stack_00000028 & 0x100) == 0) || (arg1 == NULL)) && (arg2 == 0)) || (iVar3 = 0,  0x7fffffff < arg2)) {\n        iVar3 = iVar1;\n    }\n    if (iVar3 < 0) {\n        return iVar3;\n    }\n    noname_2 = in_stack_00000030;\n    if (((in_stack_00000028 & 0x100) != 0) && (noname_2 = 0x180039574,  in_stack_00000030 != NULL)) {\n        noname_2 = in_stack_00000030;\n    }\n    iVar3 = 0;\n    uVar4 = arg2;\n    puVar7 = arg1;\n    if ((in_stack_00000028 & 0xffffe000) == 0) {\n        if (arg2 == 0) {\n            if (*noname_2 == 0) goto code_r0x00018000b45d;\n            iVar3 = (-(arg1 != NULL) & 0x23) + 0x80070057;\n        }\n        else {\n            uVar4 = arg2 - 1;\n            iVar1 = fcn.180013460(arg1, uVar4, noname_2, &stack0x00000038);\n            if (iVar1 < 0) {\ncode_r0x00018000b3e5:\n                iVar3 = -0x7ff8ff86;\ncode_r0x00018000b3ea:\n                arg1[uVar4] = 0;\n                uVar2 = uVar4;\n            }\n            else {\n                uVar2 = iVar1;\n                if (uVar4 < uVar2) goto code_r0x00018000b3e5;\n                if (uVar2 == uVar4) goto code_r0x00018000b3ea;\n            }\n            uVar4 = arg2 - uVar2;\n            puVar7 = arg1 + uVar2;\n            if (-1 < iVar3) {\n                if ((((in_stack_00000028 >> 9 & 1) != 0) && (1 < uVar4)) && (2 < uVar4 * 2)) {\n                    fcn.1800123b0(puVar7 + 1, in_stack_00000028 & 0xff, uVar4 * 2 - 2);\n                }\n                goto code_r0x00018000b45d;\n            }\n        }\n    }\n    else {\n        iVar3 = iVar1;\n        if (arg2 != 0) {\n            *arg1 = 0;\n        }\n    }\n    if (((in_stack_00000028 & 0x1c00) != 0) && (arg2 != 0)) {\n        uVar2 = arg2 & 0x7fffffffffffffff;\n        if ((uVar2 != 0) && ((in_stack_00000028 >> 0xc & 1) != 0)) {\n            *arg1 = 0;\n            uVar4 = uVar2;\n            puVar7 = arg1;\n        }\n        uVar5 = uVar4;\n        puVar6 = puVar7;\n        if (((in_stack_00000028 >> 10 & 1) != 0) &&\n           (fcn.1800123b0(arg1, in_stack_00000028 & 0xff, arg2 * 2),  uVar5 = uVar2,  puVar6 = arg1, \n           in_stack_00000028 != '\\0')) {\n            if (uVar2 == 0) goto code_r0x00018000b451;\n            arg1[arg2 - 1] = 0;\n            uVar5 = 1;\n            puVar6 = arg1 + (arg2 - 1);\n        }\n        uVar4 = uVar5;\n        puVar7 = puVar6;\n        if ((uVar2 != 0) && ((in_stack_00000028 >> 0xb & 1) != 0)) {\n            *arg1 = 0;\n            uVar4 = uVar2;\n            puVar7 = arg1;\n        }\n    }\ncode_r0x00018000b451:\n    if ((iVar3 < 0) && (iVar3 != -0x7ff8ff86)) {\n        return iVar3;\n    }\ncode_r0x00018000b45d:\n    if (arg3 != NULL) {\n        *arg3 = puVar7;\n    }\n    if (arg4 != NULL) {\n        *arg4 = uVar4;\n    }\n    return iVar3;\n}\n",
        "token_count": 1162
    },
    "1800013d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800013d9(int32_t *arg1, int32_t *arg2, ulong arg3, int64_t *arg4)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (arg4 == NULL) {\n        iVar3 = -0x7fffbffd;\n    }\n    else {\n        *arg4 = 0;\n        if (arg1 == NULL) {\n            iVar3 = -0x7ff8ffa9;\n        }\n        else if (*arg1 == 0) {\n            iVar3 = -0x7fff0001;\n        }\n        else {\n            iVar3 = 0;\n            for (puVar4 = *(arg1 + 4); puVar4 < *(arg1 + 6); puVar4 = puVar4 + 1) {\n                ppiVar1 = *puVar4;\n                if ((((ppiVar1 != NULL) && (ppiVar1[2] != NULL)) && (piVar2 = *ppiVar1,  *arg2 == *piVar2)) &&\n                   (((arg2[1] == piVar2[1] && (arg2[2] == piVar2[2])) && (arg2[3] == piVar2[3])))) {\n                    if (ppiVar1[4] == NULL) {\n                        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 8);\n                        if (ppiVar1[4] == NULL) {\n                            iVar3 = (*ppiVar1[2])(ppiVar1[3], 0x1800397b0, ppiVar1 + 4);\n                        }\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 8);\n                    }\n                    if (ppiVar1[4] != NULL) {\n                        iVar3 = (***ppiVar1[4])(ppiVar1[4], arg3, arg4);\n                    }\n                    if (*arg4 != 0) {\n                        return iVar3;\n                    }\n                    if (iVar3 != 0) {\n                        return iVar3;\n                    }\n                    break;\n                }\n            }\n            iVar3 = -0x7ffbfeef;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 501
    },
    "1800014c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1800014c4(ulong arg1, ulong lpLibFileName, ulong arg3, ulong arg4)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint in_stack_00000028;\n    uchar auStack1192 [32];\n    uchar *puStack1160;\n    uint32_t uStack1152;\n    uint32_t uStack1144;\n    int64_t iStack1136;\n    int64_t iStack1128;\n    ulong uStack1120;\n    ulong uStack1112;\n    ulong uStack1104;\n    ulong uStack1096;\n    uchar *puStack1080;\n    uchar auStack1072 [1032];\n    uint64_t uStack40;\n    \n    uStack1104 = 0xfffffffffffffffe;\n    uStack40 = *0x18004c550 ^ auStack1192;\n    uStack1096 = 0;\n    uStack1120 = 0;\n    puStack1080 = NULL;\n    uStack1112 = arg1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(lpLibFileName, 0, 2);\n    iStack1136 = iVar3;\n    if (iVar3 == 0) {\n        fcn.180001361();\n        goto code_r0x00018000a80f;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar3, arg3, arg4);\n    if ((iVar4 == 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar3, iVar4),  iStack1128 = iVar4,  iVar4 == 0))\n    {\ncode_r0x00018000a717:\n        fcn.180001361();\n    }\n    else {\n        uVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)();\n        uVar2 = uVar1 + 1;\n        uStack1144 = uVar1;\n        if (uVar1 <= uVar2) {\n            if (uVar2 == 0) {\ncode_r0x00018000a799:\n                puStack1080 = auStack1072;\n            }\n            else {\n                if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar2), 0) < 2) {\n                    fcn.1800010be(0x80070216);\n                    goto code_r0x00018000a799;\n                }\n                arg2 = uVar2 * 2;\n                if (arg2 < 0x401) goto code_r0x00018000a799;\n                fcn.180001348(&puStack1080, arg2);\n            }\n            if (puStack1080 != NULL) {\n                puStack1160 = puStack1080;\n                uStack1152 = uVar1;\n                uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(3, 0, iVar4, uVar1);\n                if (uVar1 == 0) goto code_r0x00018000a717;\n                *(puStack1080 + uVar1 * 2) = 0;\n                fcn.180001262(&uStack1120, puStack1080, in_stack_00000028);\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\ncode_r0x00018000a80f:\n    if (puStack1080 != auStack1072) {\n        fcn.180001343(&puStack1080);\n    }\n    fcn.180012530(uStack40 ^ auStack1192);\n    return;\n}\n",
        "token_count": 833
    },
    "18000157": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.18000157d(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    iVar4 = arg3;\n    if (arg3 == 0) {\n        uVar3 = 0xd;\n    }\n    else {\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n            uVar2 = iVar1 + 1;\n            iVar5 = iVar5 + uVar2 * 2;\n            iVar4 = iVar4 + uVar2 * 2;\n        } while (uVar2 != 1);\n        uVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(*arg1, arg2, 0, iVar1 + 7, arg3, iVar5);\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "1800015a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1800015a5(int16_t **arg1, int16_t *lpString, ulong *arg3)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    ushort *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    int64_t iVar9;\n    int16_t *piVar10;\n    ushort *puVar11;\n    uchar auStack216 [32];\n    char cStack184;\n    uint uStack176;\n    uint32_t uStack172;\n    ushort *puStack168;\n    uchar *puStack160;\n    ulong *puStack152;\n    ulong uStack144;\n    uchar auStack136 [64];\n    uint64_t uStack72;\n    \n    uStack144 = 0xfffffffffffffffe;\n    uStack72 = *0x18004c550 ^ auStack216;\n    puVar11 = NULL;\n    puStack152 = arg3;\n    if ((lpString != NULL) && (arg3 != NULL)) {\n        *arg3 = 0;\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n        uStack172 = iVar6 * 2;\n        if (uStack172 < 100) {\n            uStack172 = 1000;\n        }\n        uStack176 = 0;\n        puStack168 = puVar11;\n        if (uStack172 * 2 < 0x100000000) {\n            puStack168 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n        }\n        if (puStack168 == NULL) {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(0);\n        }\n        else {\n            *puStack168 = 0;\n            *arg1 = lpString;\n            bVar4 = false;\n            bVar3 = false;\n            iVar1 = *lpString;\n            puVar5 = puStack168;\n            cStack184 = *0x18004dec9;\n            while (iVar1 != 0) {\n                puStack168 = puVar5;\n                if (cStack184 == '\\x01') {\n                    if (((puVar11 == 0) && (piVar8 = fcn.180011c8c(*arg1, L\"HKCR\"),  piVar8 != NULL)) &&\n                       (piVar8 == *arg1)) {\n                        piVar8 = (*_sym.imp.USER32.dll_CharNextW)(*arg1);\n                        *arg1 = piVar8;\n                        piVar8 = (*_sym.imp.USER32.dll_CharNextW)(piVar8);\n                        *arg1 = piVar8;\n                        piVar8 = (*_sym.imp.USER32.dll_CharNextW)(piVar8);\n                        *arg1 = piVar8;\n                        piVar8 = (*_sym.imp.USER32.dll_CharNextW)(piVar8);\n                        *arg1 = piVar8;\n                        puStack160 = NULL;\n                        uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(L\"HKCU\\r\\n{\\tSoftware\\r\\n\\t{\\r\\n\\t\\tClasses\");\n                        iVar6 = fcn.18000127b(&uStack176, L\"HKCU\\r\\n{\\tSoftware\\r\\n\\t{\\r\\n\\t\\tClasses\", uVar7);\n                        if (iVar6 == 0) goto code_r0x0001800079f2;\n                        bVar4 = true;\n                    }\n                    if (**arg1 == 0x27) {\n                        if (bVar3) {\n                            piVar8 = (*_sym.imp.USER32.dll_CharNextW)();\n                            if (*piVar8 != 0x27) {\n                                bVar3 = false;\n                                goto code_r0x000180007807;\n                            }\n                            piVar8 = (*_sym.imp.USER32.dll_CharNextW)(*arg1);\n                            *arg1 = piVar8;\n                            iVar6 = fcn.18000127b(&uStack176, piVar8, 1);\n                            if (iVar6 != 0) goto code_r0x000180007802;\n                            goto code_r0x0001800079f2;\n                        }\n                        bVar3 = true;\n                    }\n                    else {\ncode_r0x000180007802:\n                        if (!bVar3) {\ncode_r0x000180007807:\n                            if (**arg1 == 0x7b) {\n                                puVar11 = puVar11 + 1;\n                            }\n                            if (((**arg1 == 0x7d) && (uVar7 = puVar11 - 1,  puVar11 = uVar7,  uVar7 == 0)) && (bVar4)) {\n                                puStack160 = NULL;\n                                uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(L\"\\r\\n\\t}\\r\\n}\\r\\n\");\n                                iVar6 = fcn.18000127b(&uStack176, L\"\\r\\n\\t}\\r\\n}\\r\\n\", uVar7);\n                                if (iVar6 == 0) goto code_r0x0001800079f2;\n                                bVar4 = false;\n                            }\n                        }\n                    }\n                }\n                piVar8 = *arg1;\n                if (*piVar8 == 0x25) {\n                    piVar8 = (*_sym.imp.USER32.dll_CharNextW)(piVar8);\n                    *arg1 = piVar8;\n                    if (*piVar8 == 0x25) {\n                        iVar6 = fcn.18000127b(&uStack176, piVar8, 1);\n                        goto joined_r0x000180007989;\n                    }\n                    if (piVar8 == NULL) goto code_r0x0001800079f2;\n                    while( true ) {\n                        if (*piVar8 == 0) goto code_r0x0001800079f2;\n                        if (*piVar8 == 0x25) break;\n                        piVar8 = (*_sym.imp.USER32.dll_CharNextW)(piVar8);\n                    }\n                    if ((piVar8 == NULL) || (iVar9 = piVar8 - *arg1 >> 1,  0x1f < iVar9)) goto code_r0x0001800079f2;\n                    iVar6 = fcn.180012244(auStack136, 0x20, *arg1, iVar9);\n                    if (iVar6 != 0) {\n                        if (iVar6 == 0xc) {\n                            fcn.1800010be(0x8007000e);\n                            pcVar2 = swi(3);\n                            (*pcVar2)();\n                            return;\n                        }\n                        if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n                            fcn.1800010be(0x80070057);\n                            pcVar2 = swi(3);\n                            (*pcVar2)();\n                            return;\n                        }\n                        if (iVar6 != 0x50) {\n                            fcn.1800010be(0x80004005);\n                            pcVar2 = swi(3);\n                            (*pcVar2)();\n                            return;\n                        }\n                    }\n                    puStack160 = auStack136;\n                    iVar9 = fcn.180001528(arg1[1] + 4, &puStack160);\n                    if (iVar9 == 0) goto code_r0x0001800079f2;\n                    puStack160 = NULL;\n                    uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar9);\n                    iVar6 = fcn.18000127b(&uStack176, iVar9, uVar7);\n                    if (iVar6 == 0) goto code_r0x0001800079f2;\n                    piVar10 = *arg1;\n                    while (piVar10 != piVar8) {\n                        piVar10 = (*_sym.imp.USER32.dll_CharNextW)(*arg1);\n                        *arg1 = piVar10;\n                    }\n                }\n                else {\n                    iVar6 = fcn.18000127b(&uStack176, piVar8, 1);\njoined_r0x000180007989:\n                    if (iVar6 == 0) goto code_r0x0001800079f2;\n                }\n                piVar8 = (*_sym.imp.USER32.dll_CharNextW)();\n                *arg1 = piVar8;\n                puVar5 = puStack168;\n                iVar1 = *piVar8;\n            }\n            puStack168 = NULL;\n            *puStack152 = puVar5;\ncode_r0x0001800079f2:\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(puStack168);\n        }\n    }\n    fcn.180012530(uStack72 ^ auStack216);\n    return;\n}\n",
        "token_count": 1909
    },
    "18000173": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.180001735(uint16_t **param_1, ulong *param_2, ulong param_3, ulong param_4)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint16_t *puVar7;\n    int16_t *piVar8;\n    int16_t *piVar9;\n    uchar *puVar10;\n    char cVar11;\n    uint64_t uVar12;\n    uint *puVar13;\n    uint64_t uVar14;\n    ulong uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    ulong auStackX8 [4];\n    ulong uStack64;\n    \n    uStack64 = 0x180009056;\n    iVar6 = fcn.180012560();\n    iVar6 = -iVar6;\n    *(&stack0x00000028 + iVar6) = 0xfffffffffffffffe;\n    *(&stack0x00002148 + iVar6) = *0x18004c550 ^ &stack0xffffffffffffffc8 + iVar6;\n    *(&stack0x00000018 + iVar6) = param_1;\n    *(&stack0x00000010 + iVar6) = param_2;\n    *(&stack0x00000008 + iVar6) = param_3;\n    *(&stack0x00000020 + iVar6) = param_4;\n    uVar14 = 0;\n    *(&stack0xfffffffffffffff8 + iVar6) = 0;\n    *(&stack0xffffffffffffffc0 + iVar6) = 0x1800090a5;\n    iVar4 = fcn.180001375(param_1, &stack0x00000148 + iVar6);\n    if (iVar4 < 0) goto code_r0x00018000945d;\n    *(&stack0xffffffffffffffc0 + iVar6) = 0x1800090bf;\n    iVar4 = fcn.1800010e6(&stack0x00000148 + iVar6, &stack0xfffffffffffffff8 + iVar6);\n    if (iVar4 == 0) goto code_r0x00018000945d;\n    while ((uVar1 = **param_1,  8 < uVar1 && (((uVar1 < 0xb || (uVar1 == 0xd)) || (uVar1 == 0x20))))) {\n        *(&stack0xffffffffffffffc0 + iVar6) = 0x1800090ee;\n        puVar7 = (*_sym.imp.USER32.dll_CharNextW)();\n        *param_1 = puVar7;\n    }\n    *(&stack0xffffffffffffffc0 + iVar6) = 0x180009104;\n    iVar4 = fcn.180001375(param_1, &stack0x00000148 + iVar6);\n    if (iVar4 < 0) goto code_r0x00018000945d;\n    iVar2 = *(&stack0xfffffffffffffff8 + iVar6);\n    if (iVar2 == 8) {\n        *(&stack0xffffffffffffffc0 + iVar6) = 0x180009410;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&stack0x00000148 + iVar6);\n        *(&stack0xfffffffffffffff0 + iVar6) = iVar4 * 2 + 2;\n        puVar10 = &stack0x00000148;\n        uVar15 = 1;\ncode_r0x000180009426:\n        *(&stack0xffffffffffffffe8 + iVar6) = puVar10 + iVar6;\n        uVar3 = *param_2;\n        *(&stack0xffffffffffffffc0 + iVar6) = 0x18000943a;\n        uVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(uVar3, param_3, 0, uVar15);\ncode_r0x00018000943c:\n        if (uVar5 != 0) {\n            *(&stack0xffffffffffffffc0 + iVar6) = 0x180009447;\n            fcn.180001677(uVar5);\n            goto code_r0x00018000945d;\n        }\n    }\n    else {\n        if (iVar2 == 0x11) {\n            *(&stack0xffffffffffffffc0 + iVar6) = 0x180009290;\n            uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&stack0x00000148 + iVar6);\n            *(&stack0x00000000 + iVar6) = uVar5;\n            if ((uVar5 & 1) != 0) goto code_r0x00018000945d;\n            iVar4 = uVar5 / 2;\n            uVar12 = iVar4;\n            *(&stack0xfffffffffffffff8 + iVar6) = iVar4;\n            *(&stack0x00000038 + iVar6) = 0;\n            if (iVar4 == 0) {\ncode_r0x0001800092f2:\n                puVar10 = &stack0x00000040 + iVar6;\n                *(&stack0x00000038 + iVar6) = puVar10;\n            }\n            else {\n                if (SUB168((ZEXT416(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar12), 0) == 0) {\n                    *(&stack0xffffffffffffffc0 + iVar6) = 0x1800092f2;\n                    fcn.1800010be(0x80070216);\n                    goto code_r0x0001800092f2;\n                }\n                if (uVar12 < 0x101) goto code_r0x0001800092f2;\n                *(&stack0xffffffffffffffc0 + iVar6) = 0x1800092e1;\n                fcn.18000146f(&stack0x00000038 + iVar6, uVar12);\n                puVar10 = *(&stack0x00000038 + iVar6);\n            }\n            if (puVar10 == NULL) {\n                if (&stack0xffffffffffffffc8 + iVar6 != 0xffffffffffffff88) {\n                    *(&stack0xffffffffffffffc0 + iVar6) = 0x180009339;\n                    fcn.180001154(&stack0x00000038 + iVar6);\n                }\n                goto code_r0x00018000945d;\n            }\n            *(&stack0xffffffffffffffc0 + iVar6) = 0x180009348;\n            fcn.1800123b0(puVar10, 0, iVar4);\n            uVar12 = uVar14;\n            if (0 < uVar5) {\n                do {\n                    uVar17 = uVar12;\n                    puVar16 = uVar17 / 2 + *(&stack0x00000038 + iVar6);\n                    uVar1 = *(&stack0x00000148 + uVar14 * 2 + iVar6);\n                    if (uVar1 < 0x30) {\ncode_r0x0001800093a1:\n                        cVar11 = '\\0';\n                    }\n                    else {\n                        cVar11 = uVar1;\n                        if (uVar1 < 0x3a) {\n                            cVar11 = cVar11 + -0x30;\n                        }\n                        else {\n                            if (uVar1 < 0x41) goto code_r0x0001800093a1;\n                            if (uVar1 < 0x47) {\n                                cVar11 = cVar11 + -0x37;\n                            }\n                            else {\n                                if (5 < uVar1 - 0x61) goto code_r0x0001800093a1;\n                                cVar11 = cVar11 + -0x57;\n                            }\n                        }\n                    }\n                    *puVar16 = *puVar16 | cVar11 << (4U - ((uVar17 & 1) << 2) & 0x1f);\n                    uVar14 = uVar14 + 1;\n                    uVar12 = uVar17 + 1;\n                } while (uVar14 < uVar5);\n            }\n            *(&stack0xfffffffffffffff0 + iVar6) = iVar4;\n            *(&stack0xffffffffffffffe8 + iVar6) = *(&stack0x00000038 + iVar6);\n            uVar15 = *param_2;\n            *(&stack0xffffffffffffffc0 + iVar6) = 0x1800093e8;\n            uVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(uVar15, param_3, 0, 3);\n            if (*(&stack0x00000038 + iVar6) != &stack0x00000040 + iVar6) {\n                *(&stack0xffffffffffffffc0 + iVar6) = 0x180009400;\n                fcn.180001154(&stack0x00000038 + iVar6);\n            }\n            goto code_r0x00018000943c;\n        }\n        if (iVar2 == 0x13) {\n            *(&stack0xffffffffffffffc0 + iVar6) = 0x180009260;\n            (*_sym.imp.OLEAUT32.dll_VarUI4FromDisp)(&stack0x00000148 + iVar6, 0, 0, &stack0xfffffffffffffff8 + iVar6);\n            *(&stack0x00000000 + iVar6) = *(&stack0xfffffffffffffff8 + iVar6);\n            *(&stack0xfffffffffffffff0 + iVar6) = 4;\n            uVar15 = 4;\n            puVar10 = *0x20;\n            goto code_r0x000180009426;\n        }\n        if (iVar2 == 0x4008) {\n            *(&stack0xffffffffffffffc0 + iVar6) = 0x180009145;\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&stack0x00000148 + iVar6);\n            iVar4 = iVar4 + 2;\n            *(&stack0x00000038 + iVar6) = 0;\n            if (iVar4 == 0) {\ncode_r0x00018000918b:\n                puVar13 = &stack0x00000040 + iVar6;\n                *(&stack0x00000038 + iVar6) = puVar13;\n            }\n            else {\n                if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(iVar4), 0) < 2) {\n                    *(&stack0xffffffffffffffc0 + iVar6) = 0x18000918b;\n                    fcn.1800010be(0x80070216);\n                    goto code_r0x00018000918b;\n                }\n                uVar14 = iVar4 * 2;\n                if (uVar14 < 0x101) goto code_r0x00018000918b;\n                *(&stack0xffffffffffffffc0 + iVar6) = 0x18000917a;\n                fcn.1800011d6(&stack0x00000038 + iVar6, uVar14);\n                puVar13 = *(&stack0x00000038 + iVar6);\n            }\n            if (puVar13 == NULL) {\n                uVar5 = 0xe;\n            }\n            else {\n                piVar9 = &stack0x00000148 + iVar6;\n                iVar2 = *(&stack0x00000148 + iVar6);\n                while (iVar2 != 0) {\n                    *(&stack0xffffffffffffffc0 + iVar6) = 0x1800091d3;\n                    piVar8 = (*_sym.imp.USER32.dll_CharNextW)();\n                    if ((*piVar9 == 0x5c) && (*piVar8 == 0x30)) {\n                        *puVar13 = 0;\n                        *(&stack0xffffffffffffffc0 + iVar6) = 0x1800091f2;\n                        piVar9 = (*_sym.imp.USER32.dll_CharNextW)(piVar8);\n                    }\n                    else {\n                        *puVar13 = *piVar9;\n                        piVar9 = piVar9 + 1;\n                    }\n                    puVar13 = puVar13 + 2;\n                    iVar2 = *piVar9;\n                }\n                *puVar13 = 0;\n                *(&stack0xffffffffffffffc0 + iVar6) = 0x18000921d;\n                uVar5 = fcn.18000157d(param_2, param_3, *(&stack0x00000038 + iVar6));\n                puVar13 = *(&stack0x00000038 + iVar6);\n            }\n            if (puVar13 != &stack0x00000040 + iVar6) {\n                *(&stack0xffffffffffffffc0 + iVar6) = 0x180009243;\n                fcn.180001721(&stack0x00000038 + iVar6);\n            }\n            goto code_r0x00018000943c;\n        }\n    }\n    *(&stack0xffffffffffffffc0 + iVar6) = 0x180009456;\n    fcn.180001375(param_1, *(&stack0x00000020 + iVar6));\ncode_r0x00018000945d:\n    *(&stack0xffffffffffffffc0 + iVar6) = 0x18000946d;\n    fcn.180012530(*(&stack0x00002148 + iVar6) ^ &stack0xffffffffffffffc8 + iVar6);\n    return;\n}\n",
        "token_count": 2995
    },
    "1800013e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1800013ed(ulong param_1, int16_t *param_2, ulong param_3, uint param_4, uint32_t param_5)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int16_t *piVar10;\n    int64_t iVar11;\n    ulong *puVar12;\n    ulong auStackX8 [4];\n    ulong var_21d0h;\n    int64_t iStack8840;\n    uint uStack8832;\n    ulong uStack8824;\n    int64_t iStack8816;\n    uint uStack8808;\n    ulong uStack8800;\n    uint32_t uStack8792;\n    ulong uStack8784;\n    uchar auStack8776 [528];\n    uchar auStack8248 [8192];\n    uint64_t uStack56;\n    ulong uStack40;\n    \n    uStack40 = 0x1800095a7;\n    iVar9 = fcn.180012560();\n    iVar9 = -iVar9;\n    uStack8784 = 0xfffffffffffffffe;\n    uStack56 = *0x18004c550 ^ &stack0xffffffffffffffe0 + iVar9;\n    *(&stack0x00000054 + iVar9) = param_4;\n    *(&stack0x00000058 + iVar9) = param_3;\n    *(&stack0x00000048 + iVar9) = param_1;\n    iStack8816 = 0;\n    uStack8808 = 0;\n    uStack8800 = 0;\n    uStack8792 = param_5;\n    *(&stack0xffffffffffffffd8 + iVar9) = 0x1800095f8;\n    iVar6 = fcn.180001375(param_1, param_2);\n    iVar11 = 0;\n    if (-1 < iVar6) {\ncode_r0x000180009603:\n        do {\n            if (*param_2 == 0x7d) break;\n            *(&stack0x00000050 + iVar9) = 1;\n            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009626;\n            iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_2, L\"Delete\");\n            *(&stack0x00000040 + iVar9) = iVar6 == 0;\n            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009643;\n            iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_2, L\"ForceRemove\");\n            if ((iVar7 == 0) || ((iVar6 == 0) != 0)) {\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x18000965c;\n                iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n                if (iVar6 < 0) break;\n                if (*(&stack0x00000054 + iVar9) == 0) goto code_r0x00018000972b;\n                iStack8840 = 0;\n                uStack8832 = 0;\n                uStack8824 = 0;\n                iVar5 = *param_2;\n                piVar10 = param_2;\n                while (iVar5 != 0) {\n                    if (iVar5 == 0x5c) {\n                        if (piVar10 != NULL) goto code_r0x000180009c44;\n                        break;\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009691;\n                    piVar10 = (*_sym.imp.USER32.dll_CharNextW)();\n                    iVar5 = *piVar10;\n                }\n                puVar12 = 0x180039010;\n                do {\n                    uVar1 = *puVar12;\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x1800096ba;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_2, uVar1);\n                    if (iVar6 == 0) goto code_r0x0001800096f0;\n                    puVar12 = puVar12 + 1;\n                } while (puVar12 < 0x180039070);\n                iStack8840 = *(&stack0x00000058 + iVar9);\n                uStack8832 = 0;\n                uStack8824 = 0;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x1800096ec;\n                fcn.180001307(&stack0xffffffffffffdd78, param_2);\ncode_r0x0001800096f0:\n                if (*(&stack0x00000040 + iVar9) == 0) goto code_r0x00018000972b;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009703;\n                iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n                if (iVar6 < 0) break;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x18000971a;\n                iVar6 = fcn.1800012f3(*(&stack0x00000048 + iVar9), param_2);\njoined_r0x00018000971e:\n                if (iVar6 < 0) break;\ncode_r0x00018000994f:\n                if (*param_2 != 0x7b) goto code_r0x000180009603;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009962;\n                iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n                if (iVar6 != 1) goto code_r0x000180009603;\n                *(&stack0x00000000 + iVar9) = 0;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x18000998a;\n                iVar6 = fcn.1800013ed(*(&stack0x00000048 + iVar9), param_2);\n                if (iVar6 < 0) break;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x1800099a1;\n                iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n            }\n            else {\ncode_r0x00018000972b:\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x18000973b;\n                iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_2, L\"NoRemove\");\n                if (iVar6 == 0) {\n                    *(&stack0x00000050 + iVar9) = 0;\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009750;\n                    iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n                    if (iVar6 < 0) break;\n                }\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x18000976c;\n                iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_2, 0x180038f50);\n                if (iVar6 != 0) {\n                    iVar5 = *param_2;\n                    piVar10 = param_2;\n                    while (uVar8 = param_5,  iVar5 != 0) {\n                        if (iVar5 == 0x5c) {\n                            if (piVar10 != NULL) goto code_r0x000180009c44;\n                            break;\n                        }\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x180009886;\n                        piVar10 = (*_sym.imp.USER32.dll_CharNextW)();\n                        iVar5 = *piVar10;\n                    }\n                    if (*(&stack0x00000054 + iVar9) != 0) {\n                        uVar1 = *(&stack0x00000058 + iVar9);\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x1800098c0;\n                        iVar6 = fcn.18000116d(&stack0xffffffffffffdd90, uVar1, param_2, 0x2001f);\n                        if (iVar6 != 0) {\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x1800098db;\n                            iVar6 = fcn.18000116d(&stack0xffffffffffffdd90, uVar1, param_2, 0x20019);\n                            if (iVar6 != 0) {\n                                *(&stack0x00000018 + iVar9) = 0;\n                                *(&stack0x00000010 + iVar9) = 0;\n                                *(&stack0x00000008 + iVar9) = 0x2001f;\n                                *(&stack0x00000000 + iVar9) = 0;\n                                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009907;\n                                uVar8 = fcn.18000110e(&stack0xffffffffffffdd90, uVar1, param_2, 0);\n                                if (uVar8 != 0) {\n                                    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009c83;\n                                    fcn.180001677(uVar8);\n                                    iVar11 = iStack8816;\n                                    break;\n                                }\n                            }\n                        }\n                        uVar1 = *(&stack0x00000048 + iVar9);\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x18000991f;\n                        iVar6 = fcn.180001375(uVar1, param_2);\n                        iVar11 = iStack8816;\n                        if (-1 < iVar6) {\n                            if (*param_2 == 0x3d) {\n                                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009941;\n                                iVar6 = fcn.180001735(uVar1, &stack0xffffffffffffdd90);\n                                iVar11 = iStack8816;\n                                goto joined_r0x00018000971e;\n                            }\n                            goto code_r0x00018000994f;\n                        }\n                        break;\n                    }\n                    if (param_5 == 0) {\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x1800099c7;\n                        iVar6 = fcn.18000116d(&stack0xffffffffffffdd90, *(&stack0x00000058 + iVar9), param_2, 0x20019);\n                        iVar11 = iStack8816;\n                    }\n                    else {\n                        iVar6 = 2;\n                    }\n                    *(&stack0x00000040 + iVar9) = iVar6;\n                    if (iVar6 != 0) {\n                        uVar8 = 1;\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x1800099fb;\n                    param_5 = uVar8;\n                    iVar6 = fcn.180012244(&stack0xffffffffffffddb8, 0x104, param_2, 0xffffffffffffffff);\n                    if (iVar6 != 0) {\n                        if (iVar6 == 0xc) {\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009cb6;\n                            fcn.1800010be(0x8007000e);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009cab;\n                            fcn.1800010be(0x80070057);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                        if (iVar6 != 0x50) {\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009ca0;\n                            fcn.1800010be(0x80004005);\n                            pcVar3 = swi(3);\n                            (*pcVar3)();\n                            return;\n                        }\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009a30;\n                    iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n                    if (iVar6 < 0) break;\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009a47;\n                    iVar6 = fcn.1800012f3();\n                    if (iVar6 < 0) break;\n                    if (*param_2 == 0x7b) {\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x180009a62;\n                        iVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n                        if (iVar6 == 1) {\n                            *(&stack0x00000000 + iVar9) = param_5;\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009a88;\n                            iVar6 = fcn.1800013ed(*(&stack0x00000048 + iVar9));\n                            if ((iVar6 < 0) && (param_5 == 0)) break;\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009aa9;\n                            iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n                            if (iVar6 < 0) break;\n                        }\n                    }\n                    param_5 = uStack8792;\n                    uVar8 = *(&stack0x00000040 + iVar9);\n                    if (uVar8 != 2) {\n                        uVar4 = uStack8792;\n                        if (uVar8 == 0) {\n                            if (uStack8792 != 0) {\n                                *(&stack0x00000040 + iVar9) = 0;\n                                *(&stack0x00000038 + iVar9) = 0;\n                                *(&stack0x00000030 + iVar9) = 0;\n                                *(&stack0x00000028 + iVar9) = 0;\n                                *(&stack0x00000020 + iVar9) = 0;\n                                *(&stack0x00000018 + iVar9) = 0;\n                                *(&stack0x00000010 + iVar9) = 0;\n                                *(&stack0x00000008 + iVar9) = 0;\n                                *(&stack0x00000000 + iVar9) = &stack0x00000040 + iVar9;\n                                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009b2a;\n                                iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)(iVar11);\n                                if ((iVar6 == 0) && (*(&stack0x00000040 + iVar9) != 0)) {\n                                    *(&stack0x00000040 + iVar9) = 0x180039010;\n                                    do {\n                                        *(&stack0xffffffffffffffd8 + iVar9) = 0x180009b56;\n                                        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&stack0xffffffffffffddb8);\n                                        if (iVar6 == 0) goto code_r0x000180009603;\n                                        iVar2 = *(&stack0x00000040 + iVar9);\n                                        *(&stack0x00000040 + iVar9) = iVar2 + 8;\n                                    } while (iVar2 + 8 < 0x180039070);\n                                    if (*(&stack0x00000050 + iVar9) != 0) {\n                                        *(&stack0xffffffffffffffd8 + iVar9) = 0x180009b91;\n                                        fcn.180001307(&stack0xffffffffffffdd90, &stack0xffffffffffffddb8);\n                                        iVar11 = iStack8816;\n                                    }\n                                    goto code_r0x000180009603;\n                                }\n                            }\n                            *(&stack0x00000040 + iVar9) = 0;\n                            *(&stack0x00000038 + iVar9) = 0;\n                            *(&stack0x00000030 + iVar9) = 0;\n                            *(&stack0x00000028 + iVar9) = 0;\n                            *(&stack0x00000020 + iVar9) = 0;\n                            *(&stack0x00000018 + iVar9) = 0;\n                            *(&stack0x00000010 + iVar9) = 0;\n                            *(&stack0x00000008 + iVar9) = 0;\n                            *(&stack0x00000000 + iVar9) = &stack0x00000040 + iVar9;\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009bdc;\n                            iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n                            uVar8 = 0;\n                            if (iVar6 == 0) {\n                                *(&stack0x00000040 + iVar9) = *(&stack0x00000040 + iVar9) != 0;\n                            }\n                            else {\n                                *(&stack0x00000040 + iVar9) = 0;\n                            }\n                            if (iVar11 != 0) {\n                                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009c05;\n                                uVar8 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                                iVar11 = 0;\n                                iStack8816 = 0;\n                            }\n                            uStack8808 = 0;\n                            if (uVar8 != 0) {\n                                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009cc9;\n                                fcn.180001677(uVar8);\n                                break;\n                            }\n                            if ((*(&stack0x00000050 + iVar9) == 0) || (*(&stack0x00000040 + iVar9) != 0))\n                            goto code_r0x000180009603;\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009c3b;\n                            uVar8 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)\n                                              (*(&stack0x00000058 + iVar9), &stack0xffffffffffffddb8);\n                            uVar4 = uVar8;\n                        }\n                        if (uVar4 != 0) {\n                            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009cbe;\n                            fcn.180001677(uVar8);\n                            break;\n                        }\n                    }\n                    goto code_r0x000180009603;\n                }\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009785;\n                iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), &stack0xffffffffffffdfc8);\n                if (iVar6 < 0) break;\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x18000979c;\n                iVar6 = fcn.180001375(*(&stack0x00000048 + iVar9), param_2);\n                if (iVar6 < 0) break;\n                if (*param_2 != 0x3d) {\ncode_r0x000180009c44:\n                    if (iVar11 != 0) {\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x180009c52;\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar11);\n                    }\n                    goto code_r0x000180009cdd;\n                }\n                if (*(&stack0x00000054 + iVar9) != 0) {\n                    iStack8840 = *(&stack0x00000058 + iVar9);\n                    uStack8832 = 0;\n                    uStack8824 = 0;\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x1800097e0;\n                    iVar6 = fcn.180001735(*(&stack0x00000048 + iVar9), &stack0xffffffffffffdd78);\n                    if (-1 < iVar6) goto code_r0x00018000994f;\n                    break;\n                }\n                if ((param_5 == 0) && (*(&stack0x00000050 + iVar9) != 0)) {\n                    iStack8840 = 0;\n                    uStack8832 = 0;\n                    uStack8824 = 0;\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x18000981f;\n                    uVar8 = fcn.18000116d(&stack0xffffffffffffdd78, *(&stack0x00000058 + iVar9), 0, 0x20006);\n                    iVar2 = iStack8840;\n                    if (uVar8 == 0) {\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x18000983b;\n                        uVar8 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iStack8840, &stack0xffffffffffffdfc8);\n                        if ((uVar8 == 0) || (uVar8 == 2)) {\n                            if (iVar2 != 0) {\n                                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009856;\n                                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar2);\n                            }\n                            goto code_r0x000180009856;\n                        }\n                    }\n                    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009c65;\n                    fcn.180001677(uVar8);\n                    if (iStack8840 != 0) {\n                        *(&stack0xffffffffffffffd8 + iVar9) = 0x180009c76;\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    }\n                    break;\n                }\ncode_r0x000180009856:\n                *(&stack0xffffffffffffffd8 + iVar9) = 0x180009863;\n                iVar6 = fcn.1800012f3(*(&stack0x00000048 + iVar9), param_2);\n            }\n        } while (-1 < iVar6);\n        if (iVar11 != 0) {\n            *(&stack0xffffffffffffffd8 + iVar9) = 0x180009cdb;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar11);\n        }\n    }\ncode_r0x000180009cdd:\n    *(&stack0xffffffffffffffd8 + iVar9) = 0x180009cec;\n    fcn.180012530(uStack56 ^ &stack0xffffffffffffffe0 + iVar9);\n    return;\n}\n",
        "token_count": 5067
    },
    "180017ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.180017ab0(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) != '\\0') {\n        fcn.180011f98(*(arg1 + 8));\n    }\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 79
    },
    "18002539": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.18002539c(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t var_20h;\n    int64_t var_10h;\n    ulong var_8h;\n    \n    if ((arg2 != NULL) && (arg3 != 0)) {\n        if (*arg2 != 0) {\n            fcn.180016fcc(&var_20h, arg4);\n            if (*(var_20h + 0x14) != 0) {\n                iVar2 = fcn.18002551c(*arg2, &var_20h);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(*(var_20h + 4), 9, arg2, 1, arg1, arg1 != NULL)\n                    ;\n                    if (iVar2 != 0) goto code_r0x000180025418;\n                }\n                else {\n                    iVar2 = *(var_20h + 0x10c);\n                    if ((((1 < iVar2) && (iVar2 <= arg3)) &&\n                        (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                           (*(var_20h + 4), 9, arg2, iVar2, arg1, arg1 != NULL),  iVar2 != 0)) ||\n                       ((*(var_20h + 0x10c) <= arg3 && (arg2[1] != 0)))) {\n                        uVar1 = *(var_20h + 0x10c);\n                        if (var_8h == '\\0') {\n                            return uVar1;\n                        }\n                        *(var_10h + 200) = *(var_10h + 200) & 0xfffffffd;\n                        return uVar1;\n                    }\n                }\n                puVar3 = fcn.180014040();\n                *puVar3 = 0x2a;\n                if (var_8h != '\\0') {\n                    *(var_10h + 200) = *(var_10h + 200) & 0xfffffffd;\n                }\n                return 0xffffffff;\n            }\n            if (arg1 != NULL) {\n                *arg1 = *arg2;\n            }\ncode_r0x000180025418:\n            if (var_8h != '\\0') {\n                *(var_10h + 200) = *(var_10h + 200) & 0xfffffffd;\n            }\n            return 1;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 618
    },
    "1800293e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.1800293ec(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    iVar4 = 0;\n    iVar5 = 0;\n    fcn.180019b3c(1);\n    for (uVar3 = 0; uVar3 < *0x1800504c0; uVar3 = uVar3 + 1) {\n        iVar6 = uVar3;\n        if ((*(*0x18004f170 + iVar6 * 8) != 0) && (iVar1 = *(*0x18004f170 + iVar6 * 8),  (*(iVar1 + 0x18) & 0x83) != 0))\n        {\n            fcn.180024308(uVar3, iVar1);\n            iVar1 = *(*0x18004f170 + iVar6 * 8);\n            if ((*(iVar1 + 0x18) & 0x83) != 0) {\n                if (arg1 == 1) {\n                    iVar2 = fcn.1800293a0(iVar1);\n                    if (iVar2 != -1) {\n                        iVar4 = iVar4 + 1;\n                    }\n                }\n                else if (((arg1 == 0) && ((*(iVar1 + 0x18) & 2) != 0)) && (iVar2 = fcn.1800293a0(iVar1),  iVar2 == -1))\n                {\n                    iVar5 = -1;\n                }\n            }\n            fcn.180024388(uVar3, *(*0x18004f170 + iVar6 * 8));\n        }\n    }\n    fcn.180019a1c(1);\n    if (arg1 == 1) {\n        iVar5 = iVar4;\n    }\n    return iVar5;\n}\n",
        "token_count": 429
    },
    "18000116": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.18000116d(int64_t *arg1, ulong arg2, ulong arg3, ulong samDesired)\n\n{\n    int32_t iVar1;\n    int64_t aiStackX8 [4];\n    \n    aiStackX8[0] = 0;\n    if (arg1[2] == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg2, arg3, 0, samDesired, aiStackX8);\n    }\n    else {\n        iVar1 = fcn.1800011f4(arg1[2], arg2, arg3, 0);\n    }\n    if (iVar1 == 0) {\n        if (*arg1 != 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            *arg1 = 0;\n        }\n        *(arg1 + 1) = 0;\n        *arg1 = aiStackX8[0];\n    }\n    return iVar1;\n}\n",
        "token_count": 225
    },
    "18000163": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.180001631(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int32_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    ulong in_stack_00000028;\n    \n    iVar6 = *0x18004c09c;\n    uVar9 = *0x18004c0a0;\n    uVar8 = *0x18004c098;\n    uVar12 = *0x18004c0a4;\n    uVar11 = *0x18004c090;\n    uVar13 = *0x18004c094;\n    uVar7 = 0;\n    iVar6 = *((((((((uVar11 - uVar8 * iVar6) + 1) * uVar8 - uVar13 * iVar6) + 1) * uVar8 +\n                ((iVar6 - uVar12) + 2) * uVar9) - iVar6) + uVar11) * arg4 * 0x318 + 0x88 +\n             arg3 + *(arg3 + (uVar12 * 2 - iVar6 * uVar9) * arg1 * -0xc0 + 0x3c)) + arg3;\n    uVar1 = *(iVar6 + 0x1c);\n    uVar2 = *(iVar6 + 0x20);\n    uVar3 = *(iVar6 + 0x24);\n    if (*(iVar6 + 0x18) == 0) {\ncode_r0x0001800020e1:\n        arg3 = 0;\n    }\n    else {\n        while( true ) {\n            iVar10 = uVar11;\n            iVar4 = uVar9;\n            iVar4 = fcn.180011de0(*(uVar2 + arg3 +\n                                   (uVar7 - (((iVar10 * uVar8 - iVar4) * 3 + -6) * uVar12 +\n                                             (iVar10 * iVar10 * iVar4 * 3 + 3) * uVar8 + (iVar4 + uVar13 * 2) * 3) *\n                                            arg4) * 4) + arg3, in_stack_00000028);\n            if (iVar4 == 0) break;\n            uVar5 = uVar7 + 1;\n            uVar7 = uVar5;\n            if (*(iVar6 + 0x18) <= uVar5) goto code_r0x0001800020e1;\n            uVar12 = *0x18004c0a4;\n            uVar9 = *0x18004c0a0;\n            uVar8 = *0x18004c098;\n            uVar11 = *0x18004c090;\n            uVar13 = *0x18004c094;\n        }\n        arg3 = *(uVar1 + arg3 + *(uVar3 + arg3 + uVar7 * 2) * 4) + arg3;\n    }\n    return arg3;\n}\n",
        "token_count": 742
    },
    "1800016d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1800016d6(code **arg1)\n\n{\n    code **arg1_00;\n    \n    *arg1 = vtable.ATL::CRegObject.0;\n    arg1_00 = arg1 + 1;\n    fcn.1800012b2(arg1_00);\n    fcn.1800012b2(arg1_00);\n    if (*arg1_00 != NULL) {\n        fcn.180011f98(*arg1_00);\n        *arg1_00 = NULL;\n    }\n    if (arg1[2] != NULL) {\n        fcn.180011f98(arg1[2]);\n        arg1[2] = NULL;\n    }\n    *(arg1 + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "1800010e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.1800010e6(ulong arg1, ushort *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    \n    if ((*0x18004df5c & 1) == 0) {\n        *0x18004df5c = *0x18004df5c | 1;\n        *0x18004df10 = L\"S\";\n        *0x18004df18 = 8;\n        *0x18004df20 = L\"MS\";\n        *0x18004df28 = 0x4008;\n        *0x18004df30 = L\"DMS\";\n        *0x18004df38 = 0x13;\n        *0x18004df40 = L\"BDMS\";\n        *0x18004df48 = 0x11;\n    }\n    uVar2 = 0;\n    puVar3 = 0x18004df10;\n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(arg1, *puVar3);\n        if (iVar1 == 0) {\n            *arg2 = *(uVar2 * 0x10 + 0x18004df18);\n            return 1;\n        }\n        uVar2 = uVar2 + 1;\n        puVar3 = puVar3 + 2;\n    } while (uVar2 < 4);\n    return 0;\n}\n",
        "token_count": 324
    },
    "18001a46": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.18001a468(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int64_t iVar8;\n    uchar auStack136 [32];\n    uchar *puStack104;\n    uchar auStack88 [8];\n    uchar auStack80 [8];\n    uint8_t uStack72;\n    uint64_t uStack64;\n    \n    uStack64 = *0x18004c550 ^ auStack136;\n    iVar2 = fcn.180014ed0();\n    iVar8 = 0;\n    if (*0x18004f040 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        if ((iVar3 == 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"MessageBoxW\"),  iVar4 == 0))\n        goto code_r0x00018001a654;\n        *0x18004f040 = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar4);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetActiveWindow\");\n        *0x18004f048 = (*_sym.imp.KERNEL32.dll_EncodePointer)(uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetLastActivePopup\");\n        *0x18004f050 = (*_sym.imp.KERNEL32.dll_EncodePointer)(uVar5);\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetUserObjectInformationW\");\n        *0x18004f060 = (*_sym.imp.KERNEL32.dll_EncodePointer)(uVar5);\n        if (*0x18004f060 != 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetProcessWindowStation\");\n            *0x18004f058 = (*_sym.imp.KERNEL32.dll_EncodePointer)(uVar5);\n        }\n    }\n    if ((*0x18004f058 == iVar2) || (*0x18004f060 == iVar2)) {\ncode_r0x00018001a5f0:\n        if (((*0x18004f048 != iVar2) &&\n            (((pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(),  pcVar6 != NULL && (iVar8 = (*pcVar6)(),  iVar8 != 0))\n             && (*0x18004f050 != iVar2)))) && (pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(),  pcVar6 != NULL)) {\n            iVar8 = (*pcVar6)(iVar8);\n        }\n    }\n    else {\n        pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x18004f058);\n        pcVar7 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x18004f060);\n        if ((pcVar6 == NULL) || (pcVar7 == NULL)) goto code_r0x00018001a5f0;\n        iVar3 = (*pcVar6)();\n        if (iVar3 != 0) {\n            puStack104 = auStack88;\n            iVar1 = (*pcVar7)(iVar3, 1, auStack80);\n            if ((iVar1 != 0) && ((uStack72 & 1) != 0)) goto code_r0x00018001a5f0;\n        }\n        arg3._0_4_ = arg3 | 0x200000;\n    }\n    pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x18004f040);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar8, arg1, arg2, arg3);\n    }\ncode_r0x00018001a654:\n    fcn.180012530(uStack64 ^ auStack136);\n    return;\n}\n",
        "token_count": 912
    },
    "1800010f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.1800010f0(int32_t *arg1, int32_t *arg2, ulong arg3)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong lpsz;\n    ulong var_120h;\n    uchar auStack600 [32];\n    int64_t **ppiStack568;\n    ulong uStack560;\n    ulong uStack552;\n    ulong uStack544;\n    ulong uStack536;\n    ulong uStack528;\n    ulong uStack520;\n    ulong uStack512;\n    int32_t iStack504;\n    int64_t *piStack496;\n    int64_t iStack488;\n    uint uStack480;\n    ulong uStack472;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uchar auStack440 [256];\n    uchar auStack184 [48];\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong lpSubKey;\n    uint64_t uStack56;\n    \n    uStack56 = *0x18004c550 ^ auStack600;\n    piStack496 = NULL;\n    if ((arg2 != NULL) &&\n       ((((*arg1 != *0x18003fa68 || (arg1[1] != *0x18003fa6c)) || (arg1[2] != *0x18003fa70)) ||\n        (arg1[3] != *0x18003fa74)))) {\n        ppiStack568 = &piStack496;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x1800411c8, 0, 1, 0x180039758);\n        if (-1 < iVar3) {\n            for (; *arg2 != 0; arg2 = arg2 + 4) {\n                puVar1 = *(arg2 + 2);\n                uStack464 = *puVar1;\n                uStack460 = puVar1[1];\n                uStack456 = puVar1[2];\n                uStack452 = puVar1[3];\n                iVar4 = *piStack496;\n                if (arg3 == 0) {\n                    if (*arg2 == 1) {\n                        (**(iVar4 + 0x30))();\n                    }\n                    else {\n                        (**(iVar4 + 0x40))(piStack496, arg1, 1, &uStack464);\n                    }\n                }\n                else {\n                    if (*arg2 == 1) {\n                        iVar3 = (**(iVar4 + 0x28))();\n                    }\n                    else {\n                        iVar3 = (**(iVar4 + 0x38))();\n                    }\n                    if (iVar3 < 0) {\n                        if (piStack496 != NULL) {\n                            (**(*piStack496 + 0x10))();\n                        }\n                        goto code_r0x000180007fab;\n                    }\n                }\n            }\n            if (arg3 == 0) {\n                (*_sym.imp.ole32.dll_StringFromGUID2)(arg1, auStack184, 0x40);\n                iVar3 = fcn.1800121d8(auStack440, 0x80, L\"CLSID\\\\\");\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                iVar3 = fcn.180012314(auStack440, 0x80, auStack184);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                iVar3 = fcn.180012314(auStack440, 0x80, L\"\\\\Required Categories\");\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                iStack488 = 0;\n                uStack480 = 0;\n                uStack472 = 0;\n                iStack504 = 0;\n                iVar3 = fcn.18000116d(&iStack488, 0xffffffff80000000, auStack440, 0x20019);\n                iVar4 = iStack488;\n                if (iVar3 == 0) {\n                    uStack512 = 0;\n                    uStack520 = 0;\n                    uStack528 = 0;\n                    uStack536 = 0;\n                    uStack544 = 0;\n                    ppiStack568 = &iStack504;\n                    uStack552 = 0;\n                    uStack560 = 0;\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)(iStack488, 0, 0, 0);\n                    if (iVar4 != 0) {\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar4);\n                        iStack488 = 0;\n                    }\n                    uStack480 = 0;\n                    if ((iVar3 == 0) && (iStack504 == 0)) {\n                        (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(0xffffffff80000000, auStack440);\n                    }\n                }\n                iVar3 = fcn.1800121d8(auStack440, 0x80, L\"CLSID\\\\\");\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                iVar3 = fcn.180012314(auStack440, 0x80, auStack184);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                iVar3 = fcn.180012314(auStack440, 0x80, L\"\\\\Implemented Categories\");\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                iVar3 = fcn.18000116d(&iStack488, 0xffffffff80000000, auStack440, 0x20019);\n                iVar4 = iStack488;\n                if (iVar3 == 0) {\n                    uStack512 = 0;\n                    uStack520 = 0;\n                    uStack528 = 0;\n                    uStack536 = 0;\n                    uStack544 = 0;\n                    ppiStack568 = &iStack504;\n                    uStack552 = 0;\n                    uStack560 = 0;\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)(iStack488, 0, 0, 0);\n                    if (iVar4 != 0) {\n                        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar4);\n                        iVar4 = 0;\n                    }\n                    if ((iVar3 == 0) && (iStack504 == 0)) {\n                        (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(0xffffffff80000000, auStack440);\n                    }\n                }\n                if (iVar4 != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar4);\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(0xffffffff80000000);\n            }\n        }\n        if (piStack496 != NULL) {\n            (**(*piStack496 + 0x10))();\n        }\n    }\ncode_r0x000180007fab:\n    fcn.180012530(uStack56 ^ auStack600);\n    return;\n}\n",
        "token_count": 2449
    },
    "18000126": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180001262(uint16_t **param_1, ulong param_2, uint64_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint16_t *puVar6;\n    int16_t aiStackX8 [16];\n    ulong uStack64;\n    \n    uStack64 = 0x18000a3ad;\n    iVar4 = fcn.180012560();\n    iVar4 = -iVar4;\n    *(&stack0x00002008 + iVar4) = *0x18004c550 ^ &stack0xffffffffffffffc8 + iVar4;\n    *(&stack0xfffffffffffffff8 + iVar4) = 0;\n    *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a3da;\n    iVar3 = fcn.1800015a5(param_1, param_2, &stack0xfffffffffffffff8 + iVar4);\n    if (-1 < iVar3) {\n        puVar2 = *(&stack0xfffffffffffffff8 + iVar4);\n        *param_1 = puVar2;\n        uVar1 = *puVar2;\n        while (uVar1 != 0) {\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a404;\n            iVar3 = fcn.180001375(param_1, &stack0x00000008 + iVar4);\n            if (iVar3 < 0) break;\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a418;\n            iVar5 = fcn.18000145b(&stack0x00000008 + iVar4);\n            if (iVar5 == 0) break;\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a431;\n            iVar3 = fcn.180001375(param_1, &stack0x00000008 + iVar4);\n            if ((iVar3 < 0) || (*(&stack0x00000008 + iVar4) != 0x7b)) break;\n            *(&stack0xffffffffffffffe8 + iVar4) = 0;\n            if ((param_3 & 0xffffffff) == 0) {\n                *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a492;\n                iVar3 = fcn.1800013ed(param_1, &stack0x00000008 + iVar4, iVar5, 0);\n                if (iVar3 < 0) break;\n            }\n            else {\n                puVar6 = *param_1;\n                *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a467;\n                iVar3 = fcn.1800013ed(param_1, &stack0x00000008 + iVar4, iVar5, param_3 & 0xffffffff);\n                if (iVar3 < 0) {\n                    *param_1 = puVar6;\n                    *(&stack0xffffffffffffffe8 + iVar4) = 0;\n                    *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a488;\n                    fcn.1800013ed(param_1, &stack0x00000008 + iVar4, iVar5, 0);\n                    break;\n                }\n            }\n            while( true ) {\n                uVar1 = **param_1;\n                if ((uVar1 < 9) || (((10 < uVar1 && (uVar1 != 0xd)) && (uVar1 != 0x20)))) break;\n                *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a4b8;\n                puVar6 = (*_sym.imp.USER32.dll_CharNextW)();\n                *param_1 = puVar6;\n            }\n            uVar1 = **param_1;\n        }\n        *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a4d4;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(puVar2);\n    }\n    *(&stack0xffffffffffffffc0 + iVar4) = 0x18000a4e6;\n    fcn.180012530(*(&stack0x00002008 + iVar4) ^ &stack0xffffffffffffffc8 + iVar4);\n    return;\n}\n",
        "token_count": 967
    },
    "18000130": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.180001307(ulong *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong var_170h;\n    uchar auStack664 [32];\n    ulong uStack632;\n    ulong uStack624;\n    ulong uStack616;\n    uchar *puStack608;\n    uint auStack600 [2];\n    int64_t iStack592;\n    uint uStack584;\n    ulong uStack576;\n    uchar auStack568 [16];\n    uchar auStack552 [512];\n    uint64_t uStack40;\n    \n    uStack40 = *0x18004c550 ^ auStack664;\n    iStack592 = 0;\n    uStack584 = 0;\n    uStack576 = 0;\n    iVar1 = fcn.18000116d(&iStack592, *arg1, arg2, *(arg1 + 1) | 0x2001f);\n    do {\n        if (iVar1 != 0) {\ncode_r0x000180004084:\n            if (iStack592 != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n            fcn.180012530(uStack40 ^ auStack664);\n            return;\n        }\n        puStack608 = auStack568;\n        uStack616 = 0;\n        uStack624 = 0;\n        auStack600[0] = 0x100;\n        uStack632 = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(iStack592, 0, auStack552, auStack600);\n        if (iVar1 != 0) {\n            if (iStack592 != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                iStack592 = 0;\n            }\n            uStack584 = 0;\n            if (arg1[2] == 0) {\n                (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(*arg1, arg2);\n            }\n            else {\n                fcn.180001055(arg1[2], *arg1, arg2);\n            }\n            goto code_r0x000180004084;\n        }\n        iVar1 = fcn.180001307(&iStack592, auStack552);\n    } while( true );\n}\n",
        "token_count": 499
    },
    "1800012f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.1800012f3(uint16_t **param_1, int16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint16_t *puVar4;\n    ulong uStack16;\n    \n    uStack16 = 0x1800036a0;\n    iVar3 = fcn.180012560();\n    iVar3 = -iVar3;\n    *(&stack0x00002018 + iVar3) = *0x18004c550 ^ &stack0xfffffffffffffff8 + iVar3;\n    if (*param_2 == 0x3d) {\n        *(&stack0xfffffffffffffff0 + iVar3) = 0x1800036c6;\n        iVar2 = fcn.180001375(param_1, param_2);\n        if (-1 < iVar2) {\n            while ((uVar1 = **param_1,  8 < uVar1 && (((uVar1 < 0xb || (uVar1 == 0xd)) || (uVar1 == 0x20))))) {\n                *(&stack0xfffffffffffffff0 + iVar3) = 0x1800036ea;\n                puVar4 = (*_sym.imp.USER32.dll_CharNextW)();\n                *param_1 = puVar4;\n            }\n            *(&stack0xfffffffffffffff0 + iVar3) = 0x1800036fc;\n            iVar2 = fcn.180001375(param_1, &stack0x00000018 + iVar3);\n            if (-1 < iVar2) {\n                *(&stack0xfffffffffffffff0 + iVar3) = 0x18000370b;\n                fcn.180001375(param_1, param_2);\n            }\n        }\n    }\n    *(&stack0xfffffffffffffff0 + iVar3) = 0x180003721;\n    fcn.180012530(*(&stack0x00002018 + iVar3) ^ &stack0xfffffffffffffff8 + iVar3);\n    return;\n}\n",
        "token_count": 444
    },
    "18000137": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nulong fcn.180001375(uint16_t **arg1, ushort *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    \n    while( true ) {\n        puVar2 = *arg1;\n        uVar1 = *puVar2;\n        if ((uVar1 < 9) || (((10 < uVar1 && (uVar1 != 0xd)) && (uVar1 != 0x20)))) break;\n        puVar2 = (*_sym.imp.USER32.dll_CharNextW)();\n        *arg1 = puVar2;\n    }\n    if (*puVar2 == 0) {\ncode_r0x00018000353e:\n        uVar6 = 0x80020009;\n    }\n    else {\n        puVar8 = arg2;\n        if (*puVar2 == 0x27) {\n            puVar2 = (*_sym.imp.USER32.dll_CharNextW)();\n            *arg1 = puVar2;\n            while (*puVar2 != 0) {\n                if (**arg1 == 0x27) {\n                    piVar3 = (*_sym.imp.USER32.dll_CharNextW)();\n                    if (*piVar3 != 0x27) break;\n                }\n                if (**arg1 == 0x27) {\n                    puVar2 = (*_sym.imp.USER32.dll_CharNextW)();\n                    *arg1 = puVar2;\n                }\n                puVar2 = *arg1;\n                puVar4 = (*_sym.imp.USER32.dll_CharNextW)(puVar2);\n                *arg1 = puVar4;\n                uVar5 = puVar4 - puVar2 >> 1;\n                if (arg2 + 0x1000 <= puVar8 + uVar5 + 1) goto code_r0x00018000353e;\n                if (0 < uVar5) {\n                    iVar7 = puVar2 - puVar8;\n                    uVar5 = uVar5 & 0xffffffff;\n                    do {\n                        *puVar8 = *(iVar7 + puVar8);\n                        puVar8 = puVar8 + 1;\n                        uVar5 = uVar5 - 1;\n                    } while (uVar5 != 0);\n                }\n                puVar2 = *arg1;\n            }\n            if (**arg1 == 0) goto code_r0x00018000353e;\n            *puVar8 = 0;\n            puVar2 = (*_sym.imp.USER32.dll_CharNextW)(*arg1);\n            *arg1 = puVar2;\n        }\n        else {\n            do {\n                puVar2 = *arg1;\n                uVar1 = *puVar2;\n                if ((8 < uVar1) && (((uVar1 < 0xb || (uVar1 == 0xd)) || (uVar1 == 0x20)))) break;\n                puVar4 = (*_sym.imp.USER32.dll_CharNextW)(puVar2);\n                *arg1 = puVar4;\n                uVar5 = puVar4 - puVar2 >> 1;\n                if (arg2 + 0x1000 <= puVar8 + uVar5 + 1) goto code_r0x00018000353e;\n                if (0 < uVar5) {\n                    iVar7 = puVar2 - puVar8;\n                    uVar5 = uVar5 & 0xffffffff;\n                    do {\n                        *puVar8 = *(iVar7 + puVar8);\n                        puVar8 = puVar8 + 1;\n                        uVar5 = uVar5 - 1;\n                    } while (uVar5 != 0);\n                }\n            } while (**arg1 != 0);\n            *puVar8 = 0;\n        }\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 874
    },
    "18000152": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.180001528(int64_t *arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = 0;\n    if (0 < *(arg1 + 2)) {\n        iVar5 = 0;\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar5 + *arg1), *arg2);\n            if (iVar2 == 0) goto code_r0x0001800046ca;\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 8;\n        } while (iVar4 < *(arg1 + 2));\n    }\n    iVar4 = -1;\ncode_r0x0001800046ca:\n    if (iVar4 == -1) {\n        uVar3 = 0;\n    }\n    else {\n        if ((iVar4 < 0) || (*(arg1 + 2) <= iVar4)) {\n            (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0);\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        uVar3 = *(arg1[1] + iVar4 * 8);\n    }\n    return uVar3;\n}\n",
        "token_count": 313
    },
    "18000109": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001096(int64_t arg1)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    code **arg1_00;\n    \n    if (arg1 != 0) {\n        arg1_00 = *(arg1 + 8);\n        while (arg1_00 != NULL) {\n            (**arg1_00)(arg1_00[1]);\n            ppcVar1 = arg1_00[2];\n            fcn.180011c84(arg1_00);\n            arg1_00 = ppcVar1;\n        }\n        *(arg1 + 8) = 0;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xc0000005, 1, 0, 0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 191
    },
    "18000110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18000110e(int64_t *arg1, ulong arg2, ulong arg3, ulong lpClass)\n\n{\n    int32_t iVar1;\n    uint uStackX8;\n    uint32_t in_stack_00000028;\n    uint *in_stack_00000040;\n    uint64_t in_stack_ffffffffffffffb8;\n    \n    if (arg1[2] == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                          (arg2, arg3, 0, lpClass, in_stack_ffffffffffffffb8 & 0xffffffff00000000 | in_stack_00000028);\n    }\n    else {\n        iVar1 = fcn.18000134d(arg1[2], arg2, arg3, 0);\n    }\n    if (in_stack_00000040 != NULL) {\n        *in_stack_00000040 = uStackX8;\n    }\n    if (iVar1 == 0) {\n        if (*arg1 != 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            *arg1 = 0;\n        }\n        *(arg1 + 1) = 0;\n        *arg1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 283
    },
    "180011f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180011f98(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x18004e708, 0, lpMem),  iVar2 == 0)) {\n        puVar1 = fcn.180014040();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.180013ff8(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "18000115": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000115e(int64_t *arg1, ulong *arg2, ulong *arg3)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = fcn.180012f2c(*arg1, *(arg1 + 2) + 1, 8);\n    if (iVar3 != 0) {\n        *arg1 = iVar3;\n        iVar3 = fcn.180012f2c(arg1[1], *(arg1 + 2) + 1, 8);\n        if (iVar3 != 0) {\n            iVar2 = *(arg1 + 2);\n            arg1[1] = iVar3;\n            puVar1 = *arg1 + iVar2 * 8;\n            if (puVar1 != NULL) {\n                *puVar1 = *arg2;\n            }\n            puVar1 = arg1[1] + iVar2 * 8;\n            if (puVar1 != NULL) {\n                *puVar1 = *arg3;\n            }\n            *(arg1 + 2) = *(arg1 + 2) + 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "18000121": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.18000121c(code **arg1)\n\n{\n    *(arg1 + 1) = 0;\n    fcn.1800123b0(arg1 + 2, 0, 0x28);\n    *(arg1 + 7) = 0;\n    arg1[0xc] = NULL;\n    arg1[10] = NULL;\n    arg1[8] = NULL;\n    arg1[9] = NULL;\n    arg1[0xb] = NULL;\n    if (arg1[0xc] != NULL) {\n        (**(*arg1[0xc] + 0x10))();\n        arg1[0xc] = NULL;\n    }\n    *arg1 = vtable.ATL::CComObject_class_CComSpySqlAudit_.0;\n    (**(**0x18004ded0 + 8))();\n    return arg1;\n}\n",
        "token_count": 194
    },
    "18000127": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000127b(int32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int32_t iVar6;\n    \n    iVar6 = *arg1 + 1 + arg3;\n    if ((*arg1 < iVar6) && (arg3 < iVar6)) {\n        if (arg1[1] <= iVar6) {\n            do {\n                iVar1 = arg1[1];\n                if (0x3fffffff < iVar1) {\n                    return 0;\n                }\n                uVar3 = iVar1 * 2;\n                arg1[1] = uVar3;\n            } while (SBORROW4(iVar6, uVar3) == iVar6 + iVar1 * -2 < 0);\n            if (0xffffffff < uVar3 * 2) {\n                return 0;\n            }\n            iVar4 = (*_sym.imp.ole32.dll_CoTaskMemRealloc)(*(arg1 + 2), uVar3 * 2 & 0xffffffff);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(arg1 + 2) = iVar4;\n        }\n        if (((-1 < *arg1) && (iVar6 = arg1[1],  *arg1 < iVar6)) && (iVar6 - *arg1 <= iVar6)) {\n            iVar6 = fcn.180011fd8(*(arg1 + 2) + *arg1 * 2, (iVar6 - *arg1) * 2, arg2, arg3 * 2);\n            if (iVar6 != 0) {\n                if (iVar6 == 0xc) {\n                    fcn.1800010be(0x8007000e);\n                    pcVar2 = swi(3);\n                    uVar5 = (*pcVar2)();\n                    return uVar5;\n                }\n                if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n                    fcn.1800010be(0x80070057);\n                    pcVar2 = swi(3);\n                    uVar5 = (*pcVar2)();\n                    return uVar5;\n                }\n                if (iVar6 != 0x50) {\n                    fcn.1800010be(0x80004005);\n                    pcVar2 = swi(3);\n                    uVar5 = (*pcVar2)();\n                    return uVar5;\n                }\n            }\n            *arg1 = *arg1 + arg3;\n            *(*(arg1 + 2) + *arg1 * 2) = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 607
    },
    "18000128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18000128a(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong arg2_00;\n    int64_t *piVar4;\n    \n    if (arg1 == 0) {\n        iVar3 = -0x7ff8ffa9;\n    }\n    else {\n        piVar4 = *(arg1 + 0x10);\n        iVar3 = 0;\n        if (piVar4 < *(arg1 + 0x18)) {\n            do {\n                puVar1 = *piVar4;\n                if ((puVar1 != NULL) && ((arg3 == 0 || (iVar2 = fcn.180011d00(arg3, *puVar1, 0x10),  iVar2 == 0)))) {\n                    arg2_00 = (*puVar1[7])();\n                    iVar3 = fcn.1800010f0(*puVar1, arg2_00, 0);\n                    if (iVar3 < 0) {\n                        return iVar3;\n                    }\n                    iVar3 = (*puVar1[1])(0);\n                    if (iVar3 < 0) {\n                        return iVar3;\n                    }\n                }\n                piVar4 = piVar4 + 1;\n            } while (piVar4 < *(arg1 + 0x18));\n            if (iVar3 < 0) {\n                return iVar3;\n            }\n        }\n        if (arg2 != 0) {\n            iVar3 = fcn.1800011db(*(arg1 + 8), 0);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 371
    },
    "1800012b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1800012b2(int64_t *arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = 0;\n    if (0 < *(arg1 + 2)) {\n        do {\n            if ((iVar3 < 0) || (*(arg1 + 2) <= iVar4)) {\n                (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0);\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            fcn.1800125b0(*(*arg1 + iVar3 * 8));\n            if (*(arg1 + 2) <= iVar4) {\n                (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0);\n                pcVar1 = swi(3);\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            fcn.1800125b0(*(arg1[1] + iVar3 * 8));\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar4 < *(arg1 + 2));\n    }\n    if (*arg1 != 0) {\n        fcn.180011f98(*arg1);\n        *arg1 = 0;\n    }\n    if (arg1[1] != 0) {\n        fcn.180011f98(arg1[1]);\n        arg1[1] = 0;\n    }\n    *(arg1 + 2) = 0;\n    return 0;\n}\n",
        "token_count": 384
    },
    "18000131": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180001311(ulong hModule, int64_t arg2, ulong *arg3, ulong *arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int16_t *piVar9;\n    int16_t *arg1;\n    ulong var_150h;\n    uchar auStack680 [32];\n    ulong uStack648;\n    char16_t cStack640;\n    int16_t aiStack632 [272];\n    uint64_t uStack88;\n    \n    uStack88 = *0x18004c550 ^ auStack680;\n    if ((arg3 != NULL) && (arg4 != NULL)) {\n        *arg3 = 0;\n        *arg4 = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, aiStack632, 0x104);\n        if (uVar2 == 0) {\n            fcn.180001361();\n        }\n        else if (uVar2 != 0x104) {\n            piVar5 = aiStack632;\n            arg1 = NULL;\n            while (aiStack632[0] != 0) {\n                piVar9 = piVar5;\n                if ((aiStack632[0] != 0x2e) && (piVar9 = arg1,  aiStack632[0] == 0x5c)) {\n                    piVar9 = NULL;\n                }\n                piVar5 = (*_sym.imp.USER32.dll_CharNextW)();\n                arg1 = piVar9;\n                aiStack632[0] = *piVar5;\n            }\n            if (arg1 == NULL) {\n                arg1 = piVar5;\n            }\n            if (arg2 != 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                uVar7 = uVar3 + uVar2;\n                if (((uVar7 < uVar2) || (uVar7 < uVar3)) || (0x10d < uVar7)) goto code_r0x000180004452;\n                iVar4 = fcn.1800121d8(aiStack632 + uVar2, 0x10e - uVar2, arg2);\n                if (iVar4 != 0) {\n                    if (iVar4 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if (iVar4 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n            }\n            iVar4 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(aiStack632, arg4);\n            if (iVar4 < 0) {\n                uStack648 = str..tlb._0_8_;\n                cStack640 = str..tlb[4];\n                iVar8 = arg1 - aiStack632 >> 1;\n                if (0x104 < iVar8 + 5U) goto code_r0x000180004452;\n                iVar4 = fcn.1800121d8(arg1, 0x10e - iVar8, &uStack648);\n                if (iVar4 != 0) {\n                    if (iVar4 == 0xc) {\n                        fcn.1800010be(0x8007000e);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n                        fcn.1800010be(0x80070057);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if (iVar4 != 0x50) {\n                        fcn.1800010be(0x80004005);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                iVar4 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(aiStack632, arg4);\n                if (iVar4 < 0) goto code_r0x000180004452;\n            }\n            uVar6 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(aiStack632);\n            *arg3 = uVar6;\n        }\n    }\ncode_r0x000180004452:\n    fcn.180012530(uStack88 ^ auStack680);\n    return;\n}\n",
        "token_count": 1102
    },
    "18000145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.18000145b(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    \n    uVar2 = 0;\n    puVar3 = 0x180039120;\n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(arg1, *puVar3);\n        if (iVar1 == 0) {\n            return *(uVar2 * 0x10 + 0x180039128);\n        }\n        uVar2 = uVar2 + 1;\n        puVar3 = puVar3 + 2;\n    } while (uVar2 < 0xe);\n    return 0;\n}\n",
        "token_count": 159
    },
    "18000146": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.18000146f(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.180011ee0(arg2);\n    if (iVar2 == 0) {\n        fcn.1800010be(0x8007000e);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = iVar2;\n    return;\n}\n",
        "token_count": 109
    },
    "18000151": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.18000151e(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    fcn.1800123b0(arg1 + 0x18, 0, 0x28);\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0xc) = 0;\n    *0x18004ded0 = arg1;\n    *(arg1 + 0x40) = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(arg1 + 0x18, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar3 = uVar2 & 0xffff | 0x80070000;\n        if (uVar2 < 1) {\n            uVar3 = uVar2;\n        }\n        if (uVar3 < 0) {\n            *0x18004deb9 = 1;\n            return arg1;\n        }\n    }\n    *(arg1 + 8) = 0x38;\n    return arg1;\n}\n",
        "token_count": 282
    },
    "18000159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.180001596(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    ulong arg2_01;\n    int64_t *piVar3;\n    \n    piVar3 = *(arg1 + 0x48);\n    iVar2 = 0;\n    if ((piVar3 != NULL) && (arg2_00 = *piVar3,  arg2_00 != 0)) {\n        do {\n            if ((arg3 == 0) || (iVar1 = fcn.180011d00(arg3, arg2_00, 0x10),  iVar1 == 0)) {\n                arg2_01 = (*piVar3[7])();\n                iVar2 = fcn.1800010f0(*piVar3, arg2_01, 0);\n                if (iVar2 < 0) {\n                    return iVar2;\n                }\n                iVar2 = (*piVar3[1])(0);\n                if (iVar2 < 0) {\n                    return iVar2;\n                }\n            }\n            piVar3 = piVar3 + 9;\n            arg2_00 = *piVar3;\n        } while (arg2_00 != 0);\n        if (iVar2 < 0) {\n            return iVar2;\n        }\n    }\n    if ((*0x18004dec0 != NULL) && (iVar2 = (**0x18004dec0)(),  iVar2 < 0)) {\n        return iVar2;\n    }\n    iVar2 = fcn.18000128a(0x18004df90, arg2, arg3);\n    return iVar2;\n}\n",
        "token_count": 378
    },
    "18001173": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.180011734(uint *arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    fcn.1800123b0(arg1 + 8, 0, 0x28);\n    *arg1 = 0;\n    *(arg1 + 2) = 0x180000000;\n    *(arg1 + 4) = 0x18004b818;\n    *(arg1 + 6) = 0x18004b920;\n    iVar1 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(arg1 + 8, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar3 = uVar2 & 0xffff | 0x80070000;\n        if (uVar2 < 1) {\n            uVar3 = uVar2;\n        }\n        if (uVar3 < 0) {\n            *0x18004deb9 = 1;\n            return arg1;\n        }\n    }\n    *arg1 = 0x48;\n    return arg1;\n}\n",
        "token_count": 264
    },
    "18001185": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180011858(int64_t *arg1, ulong arg2)\n\n{\n    int64_t arg1_00;\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    if ((arg2 < 0) || (iVar2 = *(arg1 + 1),  iVar2 <= arg2)) {\n        uVar3 = 0;\n    }\n    else {\n        if (arg2 != iVar2 + -1) {\n            arg1_00 = *arg1 + arg2 * 8;\n            iVar2 = fcn.1800137f0(arg1_00, iVar2 - arg2 << 3, arg1_00 + 8, (iVar2 - arg2) + -1 << 3);\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.1800010be(0x8007000e);\n                    pcVar1 = swi(3);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.1800010be(0x80070057);\n                    pcVar1 = swi(3);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.1800010be(0x80004005);\n                    pcVar1 = swi(3);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n            }\n        }\n        *(arg1 + 1) = *(arg1 + 1) + -1;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 395
    },
    "180011b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.180011b00(uint64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    \n    iVar1 = *(arg1 + 0xc);\n    if (*(arg1 + 1) == iVar1) {\n        puVar2 = *arg1;\n        if ((puVar2 <= arg2) && (arg2 < puVar2 + iVar1)) {\n            fcn.1800010be(0x80004005);\n            pcVar3 = swi(3);\n            uVar4 = (*pcVar3)();\n            return uVar4;\n        }\n        if (iVar1 == 0) {\n            uVar6 = 1;\ncode_r0x000180011b54:\n            uVar5 = fcn.180012f2c(puVar2, uVar6, 8);\n            if (uVar5 != 0) {\n                *(arg1 + 0xc) = uVar6;\n                *arg1 = uVar5;\n                goto code_r0x000180011b70;\n            }\n        }\n        else {\n            uVar6 = *(arg1 + 1) * 2;\n            if ((-1 < uVar6) && (uVar6 < 0x10000000)) goto code_r0x000180011b54;\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x000180011b70:\n        puVar2 = *arg1 + *(arg1 + 1) * 8;\n        if (puVar2 != NULL) {\n            *puVar2 = *arg2;\n        }\n        *(arg1 + 1) = *(arg1 + 1) + 1;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 427
    },
    "180011ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.180011ba4(uint *arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    fcn.1800123b0(arg1 + 10, 0, 0x28);\n    *(arg1 + 0x14) = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    *(arg1 + 4) = 0x180000000;\n    *(arg1 + 2) = 0x180000000;\n    *arg1 = 0x60;\n    arg1[6] = 0xa00;\n    *(arg1 + 8) = 0x180041b58;\n    iVar2 = (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(arg1 + 10, 0);\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar1 = uVar3 & 0xffff | 0x80070000;\n        if (uVar3 < 1) {\n            uVar1 = uVar3;\n        }\n        if (uVar1 < 0) {\n            *0x18004deb9 = 1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 301
    },
    "1800172f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800172f4(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong arg1_00;\n    ulong in_stack_00000000;\n    ulong in_stack_00000008;\n    uint32_t in_stack_ffffffffffffffec;\n    ulong in_stack_fffffffffffffff0;\n    ulong in_stack_fffffffffffffff8;\n    \n    if (*0x18004f148 == 0) {\n        arg1_00 = 0x18004cf08;\n    }\n    else {\n        arg1_00 = 0;\n    }\n    fcn.180017088(arg1_00, arg1, arg2, arg3, in_stack_ffffffffffffffec << 0x20, in_stack_fffffffffffffff0, \n                  in_stack_fffffffffffffff8, in_stack_00000000, in_stack_00000008);\n    return;\n}\n",
        "token_count": 190
    },
    "18001306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180013064(ulong arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *apcStackX16 [3];\n    code *apcStack40 [4];\n    \n    do {\n        iVar3 = fcn.180011ee0(arg1);\n        if (iVar3 != 0) {\n            return;\n        }\n        iVar2 = fcn.180014228(arg1);\n    } while (iVar2 != 0);\n    if ((*0x18004e058 & 1) == 0) {\n        *0x18004e058 = *0x18004e058 | 1;\n        apcStackX16[0] = \"bad allocation\";\n        fcn.180017a24(0x18004e040, apcStackX16);\n        *0x18004e040 = vtable.std::bad_alloc.0;\n        fcn.18001334c(0x180036efc);\n    }\n    fcn.180017c44(apcStack40);\n    apcStack40[0] = vtable.std::bad_alloc.0;\n    fcn.180012060(apcStack40, 0x18004b5f0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 295
    },
    "180014da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.180014da0(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    if (arg1 == 0) {\n        fcn.180016f84();\n    }\n    uVar1 = *(arg1 + 0x14);\n    if (*(arg1 + 0x18) + *(arg2 + 8) == 0) {\n        fcn.180016f84();\n    }\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        iVar2 = *(arg2 + 8);\n        piVar4 = iVar2 + *(arg1 + 0x18);\n        do {\n            if (arg3 < *piVar4 + iVar2) break;\n            uVar3 = uVar3 + 1;\n            piVar4 = piVar4 + 2;\n        } while (uVar3 < uVar1);\n        if (uVar3 != 0) {\n            return *(*(arg1 + 0x18) + (uVar3 - 1) * 8 + 4 + iVar2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 286
    },
    "180017b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.180017b98(code **arg1, ulong arg2)\n\n{\n    ulong auStackX16 [3];\n    \n    auStackX16[0] = arg2;\n    fcn.180017ad8(arg1, auStackX16);\n    *arg1 = vtable.std::bad_typeid.0;\n    return arg1;\n}\n",
        "token_count": 79
    },
    "1800195d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1800195d8(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x180047340; ppcVar1 < 0x180047448; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "180026a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.180026a8c(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x18004d840) {\n            fcn.180011f98(*arg1);\n        }\n        if (arg1[1] != *0x18004d848) {\n            fcn.180011f98(arg1[1]);\n        }\n        if (arg1[2] != *0x18004d850) {\n            fcn.180011f98(arg1[2]);\n        }\n        if (arg1[0xb] != *0x18004d898) {\n            fcn.180011f98(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x18004d8a0) {\n            fcn.180011f98(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "180029b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.180029b14(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    \n    iVar3 = fcn.180024194();\n    iVar3 = iVar3 + 0x30;\n    if (arg1 == 0) {\n        puVar4 = fcn.180014040();\n        *puVar4 = 0x16;\n        fcn.1800147fc();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        fcn.1800242a4(iVar3);\n        uVar1 = fcn.180029960(iVar3);\n        uVar2 = fcn.180024938(iVar3, arg1, arg2, arg3);\n        fcn.180029a34(uVar1, iVar3);\n        fcn.18002433c(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 220
    },
    "18001334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.18001334c(ulong param_1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.180013240(param_1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 54
    },
    "180012fb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.180012fb4(ulong arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *apcStackX16 [3];\n    code *apcStack40 [4];\n    \n    do {\n        iVar3 = fcn.180011ee0(arg1);\n        if (iVar3 != 0) {\n            return;\n        }\n        iVar2 = fcn.180014228(arg1);\n    } while (iVar2 != 0);\n    if ((*0x18004e058 & 1) == 0) {\n        *0x18004e058 = *0x18004e058 | 1;\n        apcStackX16[0] = \"bad allocation\";\n        fcn.180017a24(0x18004e040, apcStackX16);\n        *0x18004e040 = vtable.std::bad_alloc.0;\n        fcn.18001334c(0x180036efc);\n    }\n    fcn.180017c44(apcStack40);\n    apcStack40[0] = vtable.std::bad_alloc.0;\n    fcn.180012060(apcStack40, 0x18004b5f0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 296
    },
    "180014e2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.180014e2c(int64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    iVar3 = *arg2;\n    if (arg1 == 0) {\n        fcn.180016f84();\n    }\n    uVar1 = *(arg1 + 0x14);\n    if (*(arg1 + 0x18) + arg2[1] == 0) {\n        fcn.180016f84();\n    }\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        iVar2 = arg2[1];\n        piVar5 = iVar2 + *(arg1 + 0x18);\n        do {\n            if (iVar3 < *piVar5 + iVar2) break;\n            uVar4 = uVar4 + 1;\n            piVar5 = piVar5 + 2;\n        } while (uVar4 < uVar1);\n        if (uVar4 != 0) {\n            return *(*(arg1 + 0x18) + (uVar4 - 1) * 8 + 4 + iVar2);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 293
    },
    "18002951": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000180029477)\n// WARNING: Removing unreachable block (ram,0x00018002947c)\n// WARNING: Removing unreachable block (ram,0x000180029482)\n// WARNING: Removing unreachable block (ram,0x00018002948a)\n// WARNING: Removing unreachable block (ram,0x00018002948e)\n\nint32_t fcn.18002951c(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = 0;\n    fcn.180019b3c(1);\n    for (uVar3 = 0; uVar3 < *0x1800504c0; uVar3 = uVar3 + 1) {\n        iVar5 = uVar3;\n        if ((*(*0x18004f170 + iVar5 * 8) != 0) && (iVar1 = *(*0x18004f170 + iVar5 * 8),  (*(iVar1 + 0x18) & 0x83) != 0))\n        {\n            fcn.180024308(uVar3, iVar1);\n            iVar1 = *(*0x18004f170 + iVar5 * 8);\n            if (((*(iVar1 + 0x18) & 0x83) != 0) && (iVar2 = fcn.1800293a0(iVar1),  iVar2 != -1)) {\n                iVar4 = iVar4 + 1;\n            }\n            fcn.180024388(uVar3, *(*0x18004f170 + iVar5 * 8));\n        }\n    }\n    fcn.180019a1c(1);\n    return iVar4;\n}\n",
        "token_count": 396
    }
}