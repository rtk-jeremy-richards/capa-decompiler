{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401500": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401500(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint32_t uStack140;\n    uchar auStack136 [8];\n    uchar auStack128 [108];\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414f20;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.00405355(0x20);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = fcn.004013f0();\n            uStack4 = CONCAT31(uStack4._1_3_, 1);\n            fcn.00401160(auStack128, uVar2);\n            iVar3 = fcn.004014b0();\n        }\n        uStack12 = 2;\n        *param_1 = iVar3;\n        if ((iVar1 != 0) && (fcn.004011e0(auStack136),  0xf < uStack140)) {\n            fcn.00405046(iVar1);\n        }\n    }\n    *in_FS_OFFSET = uStack20;\n    return 2;\n}\n",
        "token_count": 350
    },
    "00402360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402360(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    code *lpCriticalSection;\n    code **ppcVar5;\n    \n    *param_1 = vtable.std::basic_stringbuf_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    if ((*(param_1 + 0x10) & 1) != 0) {\n        fcn.00405046(*param_1[4]);\n    }\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *param_1[5] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    param_1[0x10] = param_1[0x10] & 0xfffffffe;\n    param_1[0xf] = NULL;\n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    ppcVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0040437c(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.004043a4(unaff_ESI);\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00405046(puVar1);\n    }\n    lpCriticalSection = param_1[1];\n    fcn.0040495d(lpCriticalSection);\n    fcn.00405046(param_1[1], lpCriticalSection, unaff_ESI, ppcVar5);\n    return;\n}\n",
        "token_count": 518
    },
    "004028f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028f0(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_ESI;\n    code *lpCriticalSection;\n    code **ppcVar5;\n    \n    *param_1 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    if ((*(param_1 + 0x10) & 1) != 0) {\n        fcn.00405046(*param_1[4]);\n    }\n    *param_1[4] = 0;\n    *param_1[8] = 0;\n    *param_1[0xc] = 0;\n    *param_1[5] = 0;\n    *param_1[9] = 0;\n    *param_1[0xd] = 0;\n    param_1[0x10] = param_1[0x10] & 0xfffffffe;\n    param_1[0xf] = NULL;\n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    ppcVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0040437c(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.004043a4(unaff_ESI);\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00405046(puVar1);\n    }\n    lpCriticalSection = param_1[1];\n    fcn.0040495d(lpCriticalSection);\n    fcn.00405046(param_1[1], lpCriticalSection, unaff_ESI, ppcVar5);\n    return;\n}\n",
        "token_count": 509
    },
    "00402ed0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t * __fastcall fcn.00402ed0(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint8_t unaff_retaddr;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.0040437c(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        puVar3 = ~-(*(uVar1 + 4) != 0) & uVar1;\n        fcn.004043a4();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    if ((unaff_retaddr & 1) != 0) {\n        fcn.00405046(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 227
    },
    "00409268": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409268(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409344(0x4247d0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004055bf();\n        *puVar2 = 0;\n        puVar2 = fcn.004055ac();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x81be10)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x81be20;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00408a6e(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004055ac();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004055bf();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00408b35(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040933a(0x4247d0);\n                goto code_r0x00409334;\n            }\n        }\n        puVar2 = fcn.004055bf();\n        *puVar2 = 0;\n        puVar2 = fcn.004055ac();\n        *puVar2 = 9;\n        fcn.00404f4b(0, 0, 0, 0, 0);\n    }\ncode_r0x00409334:\n    fcn.00409389();\n    return;\n}\n",
        "token_count": 625
    },
    "004110e1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004110e1(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040a4e8();\n    var_4h = 0;\n    if (*0x4296fc == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x4296fc = fcn.0040a476(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x429700 = fcn.0040a476(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x429704 = fcn.0040a476(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x42970c = fcn.0040a476(uVar3);\n        if (*0x42970c != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x429708 = fcn.0040a476(uVar3);\n        }\n    }\n    if ((*0x429708 != iVar1) && (*0x42970c != iVar1)) {\n        pcVar4 = fcn.0040a4f1(*0x429708);\n        pcVar5 = fcn.0040a4f1(*0x42970c);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00411223;\n        }\n    }\n    if ((((*0x429700 != iVar1) && (pcVar4 = fcn.0040a4f1(*0x429700),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x429704 != iVar1 && (pcVar4 = fcn.0040a4f1(*0x429704),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00411223:\n    pcVar4 = fcn.0040a4f1(*0x4296fc);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 822
    },
    "00404c95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404c95(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404d46(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004031a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004031a0(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.00405051(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00405046(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 188
    },
    "004031f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004031f0(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h;\n    \n    if (param_1 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = param_1;\n        if (0xffffffff / param_1 == 0) {\n            param_1 = 0;\n            fcn.00404bc8(&param_1);\n            fcn.0040606b(&stack0xfffffff0, 0x424d10);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00405355(arg_8h);\n    return;\n}\n",
        "token_count": 165
    },
    "00403380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403380(uint32_t param_1)\n\n{\n    code *pcVar1;\n    code *apcStack16 [4];\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 < 2) {\n        apcStack16[0] = NULL;\n        fcn.00404bc8(apcStack16);\n        apcStack16[0] = vtable.std::bad_alloc.0;\n        fcn.0040606b(apcStack16, 0x424d10);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00405355(param_1 * 2);\n    return;\n}\n",
        "token_count": 173
    },
    "00403770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00403770(uint noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    code *apcStack44 [3];\n    uint32_t var_28h;\n    uint auStack28 [2];\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_2;\n    \n    var_14h = 0x414e80;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    var_1ch = &stack0xffffffc8;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            uVar5 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = uVar5 + 1;\n    var_10h_2 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 == 0) {\n        auStack28[0] = 0;\n        fcn.00404bc8(auStack28);\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.0040606b(apcStack44, 0x424d10);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffbc;\n        fcn.004031f0(var_4h + 1);\n        return 0x403835;\n    }\n    var_1ch = &stack0xffffffc8;\n    arg_8h_00 = fcn.00405355(uVar4);\n    if (noname_1 != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            arg_10h = in_ECX + 4;\n        }\n        else {\n            arg_10h = *(in_ECX + 4);\n        }\n        fcn.00405051(arg_8h_00, uVar5 + 1, arg_10h, noname_1);\n    }\n    if (0xf < *(in_ECX + 0x18)) {\n        fcn.00405046();\n    }\n    puVar2 = in_ECX + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h_00;\n    *(in_ECX + 0x18) = uVar5;\n    *(in_ECX + 0x14) = noname_1;\n    if (0xf < uVar5) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_1) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar2;\n}\n",
        "token_count": 955
    },
    "00403990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00403990(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar auStack36 [16];\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414f48;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040437c(0);\n    iVar3 = *0x81be04;\n    uStack8 = 0;\n    if (*0x428a98 == 0) {\n        fcn.0040437c(0);\n        if (*0x428a98 == 0) {\n            *0x428a8c = *0x428a8c + 1;\n            *0x428a98 = *0x428a8c;\n        }\n        fcn.004043a4();\n    }\n    uVar1 = *0x428a98;\n    iVar2 = *unaff_EDI;\n    if (*0x428a98 < *(iVar2 + 0xc)) {\n        iVar4 = *(*(iVar2 + 8) + *0x428a98 * 4);\n        if (iVar4 == 0) goto code_r0x00403a14;\ncode_r0x00403a32:\n        if (iVar4 != 0) goto code_r0x00403aa1;\n    }\n    else {\n        iVar4 = 0;\ncode_r0x00403a14:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x00403a32;\n        iVar2 = fcn.0040405a();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            iVar4 = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x00403a32;\n        }\n    }\n    iVar4 = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00401500(&stack0xffffffd4);\n        if (iVar3 == -1) {\n            fcn.00404cb8(\"bad cast\");\n            fcn.0040606b(auStack36, 0x424cd8);\n        }\n        *0x81be04 = unaff_ESI;\n        fcn.0040437c(0);\n        if (*(unaff_ESI + 4) != -1) {\n            *(unaff_ESI + 4) = *(unaff_ESI + 4) + 1;\n        }\n        fcn.004043a4();\n        fcn.0040411f(unaff_ESI);\n        iVar4 = unaff_ESI;\n    }\ncode_r0x00403aa1:\n    uStack12 = 0xffffffff;\n    fcn.004043a4();\n    *in_FS_OFFSET = uStack20;\n    return iVar4;\n}\n",
        "token_count": 698
    },
    "00403d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00403d00(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h_00;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    int32_t var_4h;\n    uint32_t var_ch_3;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_10h;\n    code *apcStack40 [3];\n    uint var_24h;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_14h;\n    uint var_10h_3;\n    uint var_ch;\n    \n    var_14h = 0x414f30;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    puStack20 = &stack0xffffffcc;\n    uVar4 = var_ch_3 | 7;\n    if (uVar4 < 0x7fffffff) {\n        uVar1 = *(var_4h + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_ch_3 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= 0x7ffffffe - uVar3)) {\n            var_ch_3 = uVar3 + uVar1;\n        }\n    }\n    uVar4 = var_ch_3 + 1;\n    var_10h_3 = 0;\n    if (uVar4 == 0) {\n        uVar4 = 0;\n    }\n    else if (0xffffffff / uVar4 < 2) {\n        uStack24 = 0;\n        fcn.00404bc8(&uStack24);\n        apcStack40[0] = vtable.std::bad_alloc.0;\n        fcn.0040606b(apcStack40, 0x424d10);\n        var_10h_3 = CONCAT31(var_10h_3._1_3_, 2);\n        puStack20 = &stack0xffffffc0;\n        fcn.00403380();\n        return 0x403dc6;\n    }\n    puStack20 = &stack0xffffffcc;\n    arg_8h_00 = fcn.00405355(uVar4 * 2);\n    if (noname_2 != 0) {\n        if (*(var_4h + 0x18) < 8) {\n            arg_10h = var_4h + 4;\n        }\n        else {\n            arg_10h = *(var_4h + 4);\n        }\n        fcn.00405051(arg_8h_00, var_ch_3 * 2 + 2, arg_10h, noname_2 * 2);\n    }\n    if (7 < *(var_4h + 0x18)) {\n        fcn.00405046();\n    }\n    *(var_4h + 4) = arg_8h_00;\n    *(var_4h + 0x18) = var_ch_3;\n    *(var_4h + 0x14) = noname_2;\n    puVar2 = var_4h + 4;\n    if (7 < var_ch_3) {\n        puVar2 = arg_8h_00;\n    }\n    *(puVar2 + noname_2 * 2) = 0;\n    *in_FS_OFFSET = uStack16;\n    return puVar2;\n}\n",
        "token_count": 925
    },
    "00405cef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00405cef(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x405d9a;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00405dc6;\n        uStack36 = *0x426264 ^ &fcn.00405cef::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00405cef::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040a73d();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00405cef::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 720
    },
    "00405fdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fdf(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x426264) {\n        return;\n    }\n    *0x4294c8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4294cc = &arg_8h;\n    *0x429408 = 0x10001;\n    *0x4293b0 = 0xc0000409;\n    *0x4293b4 = 1;\n    var_328h = *0x426264;\n    var_324h = *0x426268;\n    *0x4293bc = unaff_retaddr;\n    *0x429494 = in_GS;\n    *0x429498 = in_FS;\n    *0x42949c = in_ES;\n    *0x4294a0 = in_DS;\n    *0x4294a4 = unaff_EDI;\n    *0x4294a8 = unaff_ESI;\n    *0x4294ac = unaff_EBX;\n    *0x4294b0 = in_EDX;\n    *0x4294b4 = in_ECX;\n    *0x4294b8 = in_EAX;\n    *0x4294bc = unaff_EBP;\n    *0x4294c0 = unaff_retaddr;\n    *0x4294c4 = in_CS;\n    *0x4294d0 = in_SS;\n    *0x429400 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040a46e(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4176fc);\n    if (*0x429400 == 0) {\n        fcn.0040a46e(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 831
    },
    "00407fc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004080ba: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004080bf)\n// WARNING: Removing unreachable block (ram,0x004080ed)\n// WARNING: Removing unreachable block (ram,0x004080c5)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407fc7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409344(0x424770, 0x18);\n    fcn.00409859(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x428cbc != 1) {\n        *0x428cb8 = 1;\n        *0x428cb4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040a4f1(*0x81cf6c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040a4f1(*0x81cf68);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040a4e8();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040a4f1(*piVar2);\n                        iVar3 = fcn.0040a4e8();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040a4f1(*0x81cf6c);\n                        piVar1 = fcn.0040a4f1(*0x81cf68);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00407f01(0x416220);\n        }\n        fcn.00407f01(0x416228);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040977f(8);\n    }\n    return;\n}\n",
        "token_count": 805
    },
    "004083e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004083e0(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040977f(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040c85a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c85a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a73d();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040a73d();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0040cb22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb22(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00405f2d(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040a73d();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040a73d();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00405f06(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040c8ba(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00401320": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401320(int32_t param_1)\n\n{\n    fcn.0040437c(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.004043a4();\n    return;\n}\n",
        "token_count": 81
    },
    "00401350": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401350(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040437c(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.004043a4();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 124
    },
    "00401b90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401b90(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    \n    iVar1 = **(in_EAX + 0x24);\n    *unaff_EDI = iVar1;\n    fcn.0040437c(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.004043a4();\n    return;\n}\n",
        "token_count": 123
    },
    "00401bc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401bc0(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x24) = 0;\n    *(unaff_ESI + 4) = 0;\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 0x10) = 0x201;\n    *(unaff_ESI + 0x14) = 6;\n    *(unaff_ESI + 0x18) = 0;\n    *(unaff_ESI + 0x1c) = 0;\n    *(unaff_ESI + 0x20) = 0;\n    *(unaff_ESI + 8) = 0;\n    puVar1 = fcn.00405355(4);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.0040422c();\n        *puVar1 = uVar2;\n        iVar3 = fcn.0040405a();\n        fcn.0040437c(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.004043a4();\n        *(unaff_ESI + 0x24) = puVar1;\n        return;\n    }\n    *(unaff_ESI + 0x24) = 0;\n    return;\n}\n",
        "token_count": 341
    },
    "00401d60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d60(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint *puVar4;\n    code *lpCriticalSection;\n    code **ppcVar5;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    ppcVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0040437c(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.004043a4();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00405046(puVar1);\n    }\n    lpCriticalSection = param_1[1];\n    fcn.0040495d(lpCriticalSection);\n    fcn.00405046(param_1[1], lpCriticalSection, unaff_ESI, ppcVar5);\n    return;\n}\n",
        "token_count": 328
    },
    "00401f60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f60(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint *puVar4;\n    code *lpCriticalSection;\n    code **ppcVar5;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    ppcVar5 = param_1;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0040437c(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = ~-(*(uVar2 + 4) != 0) & uVar2;\n            fcn.004043a4();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.00405046(puVar1);\n    }\n    lpCriticalSection = param_1[1];\n    fcn.0040495d(lpCriticalSection);\n    fcn.00405046(param_1[1], lpCriticalSection, unaff_ESI, ppcVar5);\n    return;\n}\n",
        "token_count": 332
    },
    "00403250": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00403250(uint param_1, code **param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414e9b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_2 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.00404497();\n    uStack4 = 0;\n    puVar1 = fcn.00405355(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        uVar2 = fcn.0040422c();\n        *puVar1 = uVar2;\n        iVar3 = fcn.0040405a();\n        fcn.0040437c(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.004043a4();\n    }\n    param_2[0xe] = puVar1;\n    param_2[4] = param_2 + 2;\n    param_2[8] = param_2 + 6;\n    param_2[9] = param_2 + 7;\n    param_2[5] = param_2 + 3;\n    param_2[0xc] = param_2 + 10;\n    param_2[0xd] = param_2 + 0xb;\n    param_2[3] = NULL;\n    *param_2[9] = 0;\n    *param_2[0xd] = 0;\n    *param_2[4] = 0;\n    *param_2[8] = 0;\n    *param_2[0xc] = 0;\n    *in_FS_OFFSET = param_1;\n    return param_2;\n}\n",
        "token_count": 477
    },
    "00403660": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00403660(uint param_1, code **param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414e9b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_2 = vtable.std::basic_streambuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    fcn.00404497();\n    uStack4 = 0;\n    puVar1 = fcn.00405355(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        uVar2 = fcn.0040422c();\n        *puVar1 = uVar2;\n        iVar3 = fcn.0040405a();\n        fcn.0040437c(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.004043a4();\n    }\n    param_2[0xe] = puVar1;\n    param_2[4] = param_2 + 2;\n    param_2[8] = param_2 + 6;\n    param_2[9] = param_2 + 7;\n    param_2[5] = param_2 + 3;\n    param_2[0xc] = param_2 + 10;\n    param_2[0xd] = param_2 + 0xb;\n    param_2[3] = NULL;\n    *param_2[9] = 0;\n    *param_2[0xd] = 0;\n    *param_2[4] = 0;\n    *param_2[8] = 0;\n    *param_2[0xc] = 0;\n    *in_FS_OFFSET = param_1;\n    return param_2;\n}\n",
        "token_count": 481
    },
    "004038e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004038e0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414f68;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00401b90();\n    uStack4 = 0;\n    piVar2 = fcn.00403990();\n    uStack4 = 0xffffffff;\n    if (param_1 != 0) {\n        fcn.0040437c(0);\n        iVar1 = *(param_1 + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            *(param_1 + 4) = iVar1 + -1;\n        }\n        puVar3 = ~-(*(param_1 + 4) != 0) & param_1;\n        fcn.004043a4();\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    (**(*piVar2 + 0x28))(0x20);\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 308
    },
    "00403b80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403b8f)\n\nint32_t __fastcall fcn.00403b80(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_14h;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t *arg_8h;\n    int32_t arg_10h;\n    int32_t *piVar3;\n    \n    iVar1 = *(in_EAX + 0x14);\n    if (param_1 == in_EAX) {\n        fcn.00403c10();\n        fcn.00403c10();\n        return param_1;\n    }\n    cVar2 = fcn.00403ca0();\n    if (cVar2 != '\\0') {\n        if (*(in_EAX + 0x18) < 8) {\n            arg_10h = in_EAX + 4;\n        }\n        else {\n            arg_10h = *(in_EAX + 4);\n        }\n        piVar3 = param_1 + 4;\n        arg_8h = piVar3;\n        if (7 < *(param_1 + 0x18)) {\n            arg_8h = *piVar3;\n        }\n        arg_14h = iVar1 * 2;\n        fcn.00405051(arg_8h, *(param_1 + 0x18) * 2, arg_10h, arg_14h);\n        *(param_1 + 0x14) = iVar1;\n        if (7 < *(param_1 + 0x18)) {\n            piVar3 = *piVar3;\n        }\n        *(arg_14h + piVar3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 390
    },
    "00412f10": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00412f10(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uStack2728;\n    uint uStack2724;\n    uint uStack2720;\n    uint uStack2716;\n    uint uStack2712;\n    uint uStack2708;\n    uint uStack2704;\n    uint uStack2700;\n    uint uStack2696;\n    uint uStack2692;\n    uint uStack2688;\n    uint uStack2684;\n    uint uStack2680;\n    uint uStack2676;\n    uint uStack2672;\n    uint uStack2668;\n    uint uStack2664;\n    uint uStack2660;\n    uint uStack2656;\n    uint uStack2652;\n    uint uStack2648;\n    uint uStack2644;\n    uint uStack2640;\n    uint uStack2636;\n    uint uStack2632;\n    uint uStack2628;\n    uint uStack2624;\n    uint uStack2620;\n    uint uStack2616;\n    uint uStack2612;\n    uint uStack2608;\n    uint uStack2604;\n    uint uStack2600;\n    uint uStack2596;\n    uint uStack2592;\n    uint uStack2588;\n    uint uStack2584;\n    uint uStack2580;\n    uint uStack2576;\n    uint uStack2572;\n    uint uStack2568;\n    uint uStack2564;\n    uint uStack2560;\n    uint uStack2556;\n    uint uStack2552;\n    uint uStack2548;\n    uint uStack2544;\n    uint uStack2540;\n    uint uStack2536;\n    uint uStack2532;\n    uint uStack2528;\n    uint uStack2524;\n    uint uStack2520;\n    uint uStack2516;\n    uint uStack2512;\n    uint uStack2508;\n    uint uStack2504;\n    uint uStack2500;\n    uint uStack2496;\n    uint uStack2492;\n    uint uStack2488;\n    uint uStack2484;\n    uint uStack2480;\n    uint uStack2476;\n    uint uStack2472;\n    uint uStack2468;\n    uint uStack2464;\n    uint uStack2460;\n    uint uStack2456;\n    uint uStack2452;\n    uint uStack2448;\n    uint uStack2444;\n    uint uStack2440;\n    uint uStack2436;\n    uint uStack2432;\n    uint uStack2428;\n    uint uStack2424;\n    uint uStack2420;\n    uint uStack2416;\n    uint uStack2412;\n    uint uStack2408;\n    uint uStack2404;\n    uint uStack2400;\n    uint uStack2396;\n    uint uStack2392;\n    uint uStack2388;\n    uint uStack2384;\n    uint uStack2380;\n    uint uStack2376;\n    uint uStack2372;\n    uint uStack2368;\n    uint uStack2364;\n    uint uStack2360;\n    uint uStack2356;\n    uint uStack2352;\n    uint uStack2348;\n    uint uStack2344;\n    uint uStack2340;\n    uint uStack2336;\n    uint uStack2332;\n    uint uStack2328;\n    uint uStack2324;\n    uint uStack2320;\n    uint uStack2316;\n    uint uStack2312;\n    uint uStack2308;\n    uint uStack2304;\n    uint uStack2300;\n    uint uStack2296;\n    uint uStack2292;\n    uint uStack2288;\n    uint uStack2284;\n    uint uStack2280;\n    uint uStack2276;\n    uint uStack2272;\n    uint uStack2268;\n    uint uStack2264;\n    uint uStack2260;\n    uint uStack2256;\n    uint uStack2252;\n    uint uStack2248;\n    uint uStack2244;\n    uint uStack2240;\n    uint uStack2236;\n    uint uStack2232;\n    uint uStack2228;\n    uint uStack2224;\n    uint uStack2220;\n    uint uStack2216;\n    uint uStack2212;\n    uint uStack2208;\n    uint uStack2204;\n    uint uStack2200;\n    uint uStack2196;\n    uint uStack2192;\n    uint uStack2188;\n    uint uStack2184;\n    uint uStack2180;\n    uint uStack2176;\n    uint uStack2172;\n    uint uStack2168;\n    uint uStack2164;\n    uint uStack2160;\n    uint uStack2156;\n    uint uStack2152;\n    uint uStack2148;\n    uint uStack2144;\n    uint uStack2140;\n    uint uStack2136;\n    uint uStack2132;\n    uint uStack2128;\n    uint uStack2124;\n    uint uStack2120;\n    uint uStack2116;\n    uint uStack2112;\n    uint uStack2108;\n    uint uStack2104;\n    uint uStack2100;\n    uint uStack2096;\n    uint uStack2092;\n    uint uStack2088;\n    uint uStack2084;\n    uint uStack2080;\n    uint uStack2076;\n    uint uStack2072;\n    uint32_t uStack2068;\n    uint uStack2064;\n    int32_t iStack2060;\n    uint uStack2056;\n    int32_t iStack2052;\n    uchar auStack2048 [2040];\n    uint *puStack8;\n    \n    uVar5 = *param_1;\n    uVar6 = param_1[1];\n    iVar3 = -0x3910c8e0;\n    uStack2064 = *0x4273d0;\n    uStack2068 = uVar5;\n    if (*0x81b704 == 0x13f7) {\n        (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)(0, 0);\n    }\n    uStack2056 = *0x4273d4;\n    iStack2060 = *0x4273d8;\n    iStack2052 = *0x4273dc;\n    if (*0x81b704 == 0xf57) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0, 0, 0, auStack2048, 0, &uStack2728, 0);\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)(0, 0, 0, 0, 0, 0, 0);\n    }\n    iVar4 = 0x20;\n    do {\n        uVar2 = uVar5 * 0x10 + iStack2060;\n        uVar1 = (uVar5 >> 5) + iStack2052;\n        *0x81b5fc = 0xe9ea0636;\n        if (*0x81b704 == 0x3f5) {\n            (*_sym.imp.KERNEL32.dll_SetStdHandle)(0, 0);\n        }\n        if (*0x81b704 == 0x42) {\n            (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0);\n        }\n        uVar6 = uVar6 - (uVar1 ^ uVar2 ^ iVar3 + uVar5);\n        uStack2340 = 0x5524c1fa;\n        uStack2288 = 0x5492abb4;\n        uStack2608 = 0x3fda5176;\n        uStack2240 = 0x215f362e;\n        uStack2604 = 0x2e7f0a01;\n        uStack2632 = 0x438d7b06;\n        uStack2436 = 0x7e529324;\n        uStack2172 = 0x40730f7c;\n        uStack2188 = 0x7ab1933c;\n        uStack2336 = 0x4b5efaf2;\n        uStack2144 = 0x3771a4aa;\n        uStack2072 = 0x119a0d0b;\n        uStack2692 = 0x57af6cf1;\n        uStack2256 = 0x6b4af362;\n        uStack2492 = 0x643bd0f1;\n        uStack2660 = 0x9e5bc03;\n        uStack2704 = 0x7549b704;\n        uStack2640 = 0x12fbba2;\n        uStack2552 = 0x41338e9d;\n        uStack2480 = 0x57fbaa6c;\n        uStack2712 = 0x7dc903db;\n        uStack2096 = 0x4109c413;\n        uStack2720 = 0x5e609f6;\n        uStack2564 = 0x11fa29b5;\n        uStack2344 = 0x6709b532;\n        uStack2560 = 0x12d7c631;\n        uStack2648 = 0x3609bda0;\n        uStack2700 = 0xa42eed5;\n        uStack2356 = 0x3a55f22b;\n        uStack2148 = 0x7522271f;\n        uStack2460 = 0x261c0ed3;\n        uStack2656 = 0x2cc4d889;\n        uStack2360 = 0x7eaa5a95;\n        uStack2408 = 0x11d2e9a3;\n        uStack2664 = 0x36c792c5;\n        uStack2180 = 0x4939308;\n        uStack2620 = 0xfa3ad2a;\n        uStack2724 = 0x70a16075;\n        uStack2580 = 0x65d2d01c;\n        uStack2516 = 0x6d8bf906;\n        uStack2500 = 0xaae0f11;\n        uStack2284 = 0x5287265;\n        uStack2100 = 0x596ab9a1;\n        uStack2468 = 0x69aa2ca4;\n        uStack2084 = 0x322ada0f;\n        uStack2220 = 0x3c2d132a;\n        uStack2488 = 0x189098f7;\n        uStack2276 = 0x24ffd00a;\n        uStack2496 = 0xd9d7e70;\n        uStack2416 = 0x2349be5f;\n        uStack2168 = 0x6af7477a;\n        uStack2376 = 0x2d6f903f;\n        uStack2260 = 0x11d0eec0;\n        uStack2396 = 0x4e832084;\n        uStack2576 = 0x4b3ae55f;\n        uStack2504 = 0x256fe8ce;\n        uStack2676 = 0x2c560f1;\n        uStack2176 = 0x55fa53a;\n        uStack2212 = 0x2d398f76;\n        uStack2364 = 0xb732f24;\n        uStack2316 = 0x5c06fe99;\n        uStack2404 = 0x3884b2e9;\n        uStack2184 = 0x5a5beac9;\n        uStack2192 = 0x71a13663;\n        uStack2388 = 0x36e78a71;\n        uStack2200 = 0x4b2fcf14;\n        uStack2584 = 0xd3af0670;\n        uStack2628 = 0x64c179a3;\n        uStack2228 = 0x233842cb;\n        uStack2104 = 0x4d8d9ee0;\n        uStack2680 = 0xe9580ca0;\n        uStack2524 = 0x86e3b2b9;\n        uStack2708 = 0x44041195;\n        uStack2592 = 0xfe099a4b;\n        uStack2224 = 0x4eb98cc4;\n        uStack2536 = 0x46256e1c;\n        uStack2296 = 0x60a98acd;\n        uStack2596 = 0x61b01764;\n        uStack2684 = 0x5f813a0d;\n        uStack2384 = 0x9b857e34;\n        uStack2540 = 0x6e944993;\n        uStack2456 = 0x375cbee1;\n        uStack2236 = 0x50a3373;\n        uStack2208 = 0x36bca069;\n        uStack2508 = 0x1ef582e2;\n        uStack2532 = 0xa1616e28;\n        uStack2268 = 0xcb366c07;\n        uStack2116 = 0x2f143848;\n        uStack2304 = 0x5bed5d28;\n        uStack2112 = 0xfe524b25;\n        uStack2324 = 0x1320aa82;\n        uStack2672 = 0xa9621a8f;\n        uStack2120 = 0xadd49dd2;\n        uStack2484 = 0x1f43bdfa;\n        uStack2372 = 0x72c66617;\n        uStack2556 = 0x64d3caa1;\n        uStack2164 = 0x3cae53e6;\n        uStack2428 = 0x2145d4d4;\n        uStack2512 = 0x5c73d41c;\n        uStack2132 = 0xbe94d52c;\n        uStack2136 = 0xb821df60;\n        uStack2728 = 0xa0c53e56;\n        uStack2244 = 0x3707109d;\n        uStack2412 = 0x15b004e;\n        uStack2600 = 0x29cecb91;\n        uStack2300 = 0x8b7ae914;\n        uStack2476 = 0xedb18b5;\n        uStack2624 = 0xe5f6772f;\n        uStack2264 = 0xadaa1715;\n        uStack2424 = 0x4a49597e;\n        uStack2292 = 0x87ad1052;\n        uStack2156 = 0x8e5b24f7;\n        uStack2612 = 0x3fbc4d08;\n        uStack2568 = 0x27b2de11;\n        uStack2088 = 0x62519e17;\n        uStack2616 = 0x665b26d0;\n        uStack2252 = 0x11add177;\n        uStack2472 = 0x5b654763;\n        uStack2448 = 0x1ad33e7b;\n        uStack2400 = 0x9cf300a3;\n        uStack2332 = 0x11e5b8e3;\n        uStack2124 = 0x96207b3d;\n        uStack2352 = 0xcb9d5976;\n        uStack2432 = 0x309a040c;\n        uStack2644 = 0x2cf76db7;\n        uStack2544 = 0x17af4e25;\n        uStack2464 = 0x20464bbd;\n        uStack2696 = 0x24fb4c11;\n        uStack2196 = 0x48147b41;\n        uStack2312 = 0xa94cbe06;\n        uStack2348 = 0x9f674914;\n        uStack2716 = 0x62e5bc0a;\n        uStack2216 = 0xf293e2a7;\n        uStack2308 = 0x5ed0558a;\n        uStack2232 = 0x602f76fc;\n        uStack2652 = 0x51481dd5;\n        uStack2392 = 0xcff8016f;\n        uStack2688 = 0x2df73b1b;\n        uStack2320 = 0xdb8db1b1;\n        uStack2160 = 0x8e001eeb;\n        uStack2444 = 0x8b53c013;\n        uStack2108 = 0xf0f20e62;\n        uStack2204 = 0x81dd1001;\n        uStack2528 = 0x9472396;\n        uStack2636 = 0x52d02c6a;\n        uStack2520 = 0xf29246ce;\n        uStack2128 = 0x6e41efd3;\n        uStack2140 = 0x6b2d9345;\n        uStack2548 = 0xcc8e558d;\n        uStack2368 = 0x1516e4b4;\n        uStack2152 = 0xc41b2f29;\n        uStack2076 = 0xaf48a115;\n        uStack2440 = 0x264f254a;\n        uStack2452 = 0x41d4056a;\n        uStack2280 = 0x5f8953c4;\n        uStack2668 = 0x6e6d2e0b;\n        uStack2092 = 0x908dda11;\n        uStack2572 = 0x1f6c45ba;\n        uStack2328 = 0x7c0c9719;\n        uStack2272 = 0xfc83d99f;\n        uStack2248 = 0x20370c61;\n        uStack2420 = 0xf65fda4a;\n        uStack2080 = 0x23fef489;\n        uStack2380 = 0xbc34f405;\n        uStack2588 = 0x4ea2745e;\n        if (*0x81b704 == 0x839) {\n            (*_sym.imp.KERNEL32.dll_GetTapeParameters)(0, 0, 0, 0);\n        }\n        if (*0x81b704 == 0x196) {\n            (*_sym.imp.KERNEL32.dll_IsSystemResumeAutomatic)();\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, 0);\n        }\n        *0x81b600 = 0xcbd61084;\n        *0x81b604 = 0xffffffff;\n        fcn.00412f00();\n        iVar3 = iVar3 + 0x61c88647;\n        iVar4 = iVar4 + -1;\n        uVar5 = uStack2068;\n    } while (iVar4 != 0);\n    if (*0x81b704 != 0x8d4) {\n        param_1[1] = uVar6;\n        *param_1 = uStack2068;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesW)(auStack2048, 0, 0);\n    puStack8[1] = uVar6;\n    *puStack8 = uStack2080;\n    return;\n}\n",
        "token_count": 4399
    },
    "00414920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "delete file"
        ],
        "decompiled_code": "\nvoid fcn.00414920(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [28];\n    \n    uVar3 = *0x81b704;\n    iVar4 = *0x42a70c;\n    if (*0x81b704 == 0xc00) {\n        (*_sym.imp.KERNEL32.dll_EnumDateFormatsW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll__hread)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_DebugSetProcessKillOnExit)(0);\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_DeleteFileW;\n    pcVar1 = _sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsW;\n    for (uVar3 = uVar3 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        if (*0x81b704 == 0x281) {\n            uStack48 = 0;\n            uStack44 = 0;\n            uStack40 = 0;\n            uStack36 = 0;\n            uStack32 = 0;\n            (*pcVar1)(0, auStack28, &uStack48);\n            (*pcVar2)(0);\n        }\n        fcn.00412f10(iVar4);\n        if (*0x81b704 == 0xe60) {\n            (*_sym.imp.KERNEL32.dll_SetConsoleOutputCP)(0);\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)(0, 0, 0);\n        }\n        iVar4 = iVar4 + 8;\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00401040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00401040(code **param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414eb8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00404bb7();\n    uStack4 = 0;\n    *param_1 = vtable.std::logic_error.0;\n    param_1[8] = NULL;\n    param_1[9] = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.00403090(param_2, 0);\n    *in_FS_OFFSET = 0xffffffff;\n    return param_1;\n}\n",
        "token_count": 190
    },
    "00401120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401120(code **param_1)\n\n{\n    *param_1 = vtable.std::logic_error.0;\n    if (0xf < param_1[9]) {\n        fcn.00405046(param_1[4]);\n    }\n    param_1[9] = 0xf;\n    param_1[8] = NULL;\n    *(param_1 + 4) = 0;\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404d46(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00401160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401160(int32_t param_1)\n\n{\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x414e74;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040437c(0);\n    *(param_1 + 0x1c) = 0xf;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x38) = 0xf;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x54) = 0xf;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x70) = 0xf;\n    *(param_1 + 0x6c) = 0;\n    *(param_1 + 0x5c) = 0;\n    uStack8 = 4;\n    fcn.004042c6(param_1, param_1);\n    *in_FS_OFFSET = unaff_EBX;\n    return param_1;\n}\n",
        "token_count": 331
    },
    "004011e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004011e0(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x414e74;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.0040415d(param_1);\n    if (0xf < *(param_1 + 0x70)) {\n        fcn.00405046(*(param_1 + 0x5c));\n    }\n    *(param_1 + 0x70) = 0xf;\n    *(param_1 + 0x6c) = 0;\n    *(param_1 + 0x5c) = 0;\n    if (0xf < *(param_1 + 0x54)) {\n        fcn.00405046(*(param_1 + 0x40));\n    }\n    *(param_1 + 0x54) = 0xf;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x40) = 0;\n    if (0xf < *(param_1 + 0x38)) {\n        fcn.00405046(*(param_1 + 0x24));\n    }\n    *(param_1 + 0x38) = 0xf;\n    *(param_1 + 0x34) = 0;\n    *(param_1 + 0x24) = 0;\n    if (0xf < *(param_1 + 0x1c)) {\n        fcn.00405046(*(param_1 + 8));\n    }\n    *(param_1 + 0x1c) = 0xf;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 8) = 0;\n    uStack4 = 0xffffffff;\n    fcn.004043a4();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 457
    },
    "004013f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004013f0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    *(unaff_ESI + 0x14) = 0;\n    *(unaff_ESI + 0x18) = 0xf;\n    *(unaff_ESI + 4) = 0;\n    fcn.00403090(iVar1 + 0x18, 0, 0xffffffff, 0);\n    return;\n}\n",
        "token_count": 124
    },
    "00401440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00401440(code **param_1, int32_t param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414eb8;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    iVar1 = param_2;\n    fcn.00404c38(param_2);\n    uStack8 = 0;\n    *param_1 = vtable.std::logic_error.0;\n    param_1[9] = 0xf;\n    param_1[8] = NULL;\n    *(param_1 + 4) = 0;\n    fcn.00403090(param_2 + 0xc, 0, 0xffffffff);\n    *in_FS_OFFSET = iVar1;\n    return param_1;\n}\n",
        "token_count": 221
    },
    "004014b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004014b0(void)\n\n{\n    code **ppcVar1;\n    code **unaff_ESI;\n    ulong uVar2;\n    uchar auStack20 [20];\n    \n    unaff_ESI[1] = NULL;\n    *unaff_ESI = vtable.std::ctype_wchar_t_.0;\n    ppcVar1 = fcn.00404846(auStack20);\n    unaff_ESI[2] = *ppcVar1;\n    unaff_ESI[3] = ppcVar1[1];\n    unaff_ESI[4] = ppcVar1[2];\n    unaff_ESI[5] = ppcVar1[3];\n    uVar2 = fcn.00403ef9();\n    unaff_ESI[6] = uVar2;\n    unaff_ESI[7] = uVar2 >> 0x20;\n    return;\n}\n",
        "token_count": 200
    },
    "00402200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t * fcn.00402200(int32_t *param_1)\n\n{\n    code **ppcVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    code *pcStack8;\n    uint uStack4;\n    \n    pcStack8 = asm.str.0_xPBxPA_6;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x423b44;\n    param_1[2] = 0x423b4c;\n    param_1[0x15] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n    ppcVar1 = param_1 + 3;\n    uStack4 = 0;\n    fcn.004035d0(param_1, ppcVar1);\n    *(param_1 + *(param_1[2] + 4) + 8) = vtable.std::basic_ostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_iostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    uStack12 = 4;\n    *(param_1 + *(*param_1 + 4)) =\n         vtable.std::basic_stringstream_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    fcn.00403660(ppcVar1);\n    param_1[0x12] = 0;\n    param_1[0x13] = 0;\n    *ppcVar1 = vtable.std::basic_stringbuf_wchar_t__struct_std::char_traits_wchar_t___class_std::allocator_wchar_t__.0;\n    *in_FS_OFFSET = unaff_EBX;\n    return param_1;\n}\n",
        "token_count": 425
    },
    "00402e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00402e20(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x414f88;\n    *in_FS_OFFSET = &uStack12;\n    ppiVar1 = fcn.00405355(4);\n    if (ppiVar1 == NULL) {\n        ppiVar1 = NULL;\n    }\n    else {\n        *ppiVar1 = param_1;\n    }\n    *param_1 = ppiVar1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 209
    },
    "00403090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.00403090(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4, uint param_5, uint param_6, \n            uint param_7, uint param_8, uint param_9, uint param_10, uint param_11)\n\n{\n    int32_t *arg_8h;\n    uint unaff_EBX;\n    int32_t *piVar1;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t noname_0;\n    uint unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00404442();\n    }\n    noname_0 = *(param_2 + 0x14) - param_3;\n    if (param_4 < noname_0) {\n        noname_0 = param_4;\n    }\n    if (param_1 != param_2) {\n        if (noname_0 == 0xffffffff) {\n            fcn.0040440a();\n        }\n        if (*(param_1 + 0x18) < noname_0) {\n            fcn.00403770(noname_0, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2\n                         , param_3, param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11);\n        }\n        else if (noname_0 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (noname_0 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.00405051(arg_8h, *(param_1 + 0x18), param_2 + param_3, noname_0);\n            *(param_1 + 0x14) = noname_0;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + noname_0) = 0;\n        }\n        return param_1;\n    }\n    fcn.00403540(noname_0 + param_3, 0xffffffff);\n    fcn.00403540(0, param_3);\n    return param_1;\n}\n",
        "token_count": 715
    },
    "00403460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.00403460(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n            uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *arg_8h;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    if (param_2 != NULL) {\n        uVar1 = *(param_1 + 0x18);\n        puVar2 = param_1 + 4;\n        puVar4 = puVar2;\n        if (0xf < uVar1) {\n            puVar4 = *puVar2;\n        }\n        if (puVar4 <= param_2) {\n            puVar4 = puVar2;\n            if (0xf < uVar1) {\n                puVar4 = *puVar2;\n            }\n            if (param_2 < *(param_1 + 0x14) + puVar4) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                iVar3 = fcn.00403090(param_1, param_2 - puVar2, param_3);\n                return iVar3;\n            }\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.0040440a();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00403770(param_3, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_retaddr, param_2, param_3, \n                     param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12);\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        piVar5 = param_1 + 4;\n        arg_8h = piVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            arg_8h = *piVar5;\n        }\n        fcn.00405051(arg_8h, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            piVar5 = *piVar5;\n        }\n        *(piVar5 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 734
    },
    "00403540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403540(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00404442();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.00404aa4(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 369
    },
    "004035d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nint32_t * fcn.004035d0(int32_t *param_1, uint param_2)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x414fe0;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_istream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    param_1[1] = 0;\n    iVar3 = *(*param_1 + 4) + param_1;\n    fcn.00401bc0();\n    *(iVar3 + 0x28) = param_2;\n    *(iVar3 + 0x2c) = 0;\n    uVar1 = fcn.004038e0(iVar3);\n    *(iVar3 + 0x30) = uVar1;\n    if ((*(iVar3 + 0x28) == 0) &&\n       (uVar2 = *(iVar3 + 8) & 0x17 | 4,  *(iVar3 + 8) = uVar2,  (*(iVar3 + 0xc) & uVar2) != 0)) {\n        fcn.004019f0();\n    }\n    *(iVar3 + 4) = 0;\n    *in_FS_OFFSET = 0;\n    return param_1;\n}\n",
        "token_count": 360
    },
    "00403ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403ad0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    iVar1 = unaff_EDI - param_1;\n    if (param_1 != unaff_EDI) {\n        do {\n            fcn.00403b80();\n            param_1 = param_1 + 0x1c;\n        } while (param_1 != unaff_EDI);\n    }\n    return in_EAX + (iVar1 / 0x1c) * 0x1c;\n}\n",
        "token_count": 138
    },
    "00403b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b40(void)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if (in_EAX != unaff_EDI) {\n        do {\n            if (7 < *(in_EAX + 0x18)) {\n                fcn.00405046(*(in_EAX + 4));\n            }\n            *(in_EAX + 0x18) = 7;\n            *(in_EAX + 0x14) = 0;\n            *(in_EAX + 4) = 0;\n            in_EAX = in_EAX + 0x1c;\n        } while (in_EAX != unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00403c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403c10(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint *puVar3;\n    int32_t unaff_ESI;\n    uint *puStack8;\n    uint *puStack4;\n    \n    if (*(unaff_ESI + 0x14) < unaff_EBX) {\n        fcn.00404442();\n    }\n    uVar1 = *(unaff_ESI + 0x14) - unaff_EBX;\n    if (uVar1 < in_EAX) {\n        in_EAX = uVar1;\n    }\n    if (in_EAX != 0) {\n        puVar3 = unaff_ESI + 4;\n        puStack8 = puVar3;\n        puStack4 = puVar3;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puStack8 = *puVar3;\n            puStack4 = *puVar3;\n        }\n        fcn.00404aa4(puStack4 + unaff_EBX * 2, (*(unaff_ESI + 0x18) - unaff_EBX) * 2, \n                     puStack8 + (unaff_EBX + in_EAX) * 2, (uVar1 - in_EAX) * 2);\n        iVar2 = *(unaff_ESI + 0x14) - in_EAX;\n        *(unaff_ESI + 0x14) = iVar2;\n        if (7 < *(unaff_ESI + 0x18)) {\n            puVar3 = *puVar3;\n        }\n        *(puVar3 + iVar2 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00403ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00403ca0(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12)\n\n{\n    int32_t in_EAX;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint unaff_retaddr;\n    \n    if (0x7ffffffe < unaff_EDI) {\n        fcn.0040440a();\n    }\n    if (*(in_EAX + 0x18) < unaff_EDI) {\n        fcn.00403d00(in_EAX, unaff_EDI, *(in_EAX + 0x14), unaff_ESI, unaff_retaddr, param_1, param_2, param_3, param_4, \n                     param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12);\n        return unaff_EDI != 0;\n    }\n    if (unaff_EDI == 0) {\n        *(in_EAX + 0x14) = 0;\n        if (7 < *(in_EAX + 0x18)) {\n            **(in_EAX + 4) = 0;\n            return false;\n        }\n        *(in_EAX + 4) = 0;\n    }\n    return unaff_EDI != 0;\n}\n",
        "token_count": 337
    },
    "00404f81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00404f81(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00409344(0x424668, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004055ac();\n        *puVar1 = 0x16;\n        fcn.00404f4b(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040aa13();\n        fcn.0040ab2b(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040aa13();\n        arg_8h_00 = fcn.0040abc8(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040aa13();\n        uVar4 = fcn.0040ad3e(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040aa13();\n        fcn.0040ac64(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040501d();\n    }\n    fcn.00409389();\n    return;\n}\n",
        "token_count": 462
    },
    "0040501d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040501d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040aa13();\n    fcn.0040ab99(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "004080f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004080f3(uint arg_8h)\n\n{\n    fcn.00407fc7(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040c18d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c1a1)\n// WARNING: Removing unreachable block (ram,0x0040c1a7)\n// WARNING: Removing unreachable block (ram,0x0040c1a9)\n\nvoid fcn.0040c18d(void)\n\n{\n    return;\n}\n",
        "token_count": 71
    },
    "00412d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00412d00(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    uchar *puStack1040;\n    uchar auStack1028 [1028];\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetBinaryTypeW;\n    iVar2 = 0xdd9a7;\n    do {\n        if (*0x81b704 == 0xfe9) {\n            puStack1040 = &stack0xfffffbfc;\n            uStack1044 = 0;\n            uStack1048 = 0x412d28;\n            (*pcVar1)();\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (*0x81b704 == 0x1a4) {\n        (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n        puStack1040 = NULL;\n        uStack1044 = 0x412d4d;\n        (*_sym.imp.KERNEL32.dll_HeapCompact)();\n        uStack1044 = 0x412d53;\n        (*_sym.imp.KERNEL32.dll_GetACP)();\n        uStack1044 = 0;\n        uStack1048 = 0;\n        uStack1052 = 0;\n        (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0);\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)(0, &stack0xfffffbe4);\n        (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(0, 0);\n        (*_sym.imp.KERNEL32.dll_CopyFileA)(0, 0, 0);\n    }\n    return 0;\n}\n",
        "token_count": 379
    },
    "00412db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412db0(void)\n\n{\n    uint uVar1;\n    uint uStack20;\n    uint uStack16;\n    char *pcStack12;\n    \n    pcStack12 = \"VertualBritect\";\n    uStack16 = 0x429810;\n    *0x429810 = 0;\n    uStack20 = 0x412dca;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)();\n    uStack16 = 0x40;\n    uStack20 = 0x429810;\n    *0x429811 = 0x69;\n    *0x429817 = 0x50;\n    *0x429819 = 0x6f;\n    uVar1 = *0x81b700;\n    *0x42980c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x81b700);\n    (**0x42980c)(*0x42a70c, *0x81b704, uVar1, &stack0xffffffec);\n    return;\n}\n",
        "token_count": 227
    },
    "00412e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412e30(void)\n\n{\n    int32_t unaff_ESI;\n    uint uStack1240;\n    uchar *puStack1236;\n    uint uStack1232;\n    uint uStack1228;\n    uint uStack1224;\n    uint uStack1220;\n    uint uStack1216;\n    uint uStack1212;\n    uint uStack1208;\n    uint uStack1204;\n    uint uStack1200;\n    uint uStack1196;\n    uint uStack1192;\n    uint uStack1188;\n    uint uStack1184;\n    uchar auStack1088 [1088];\n    \n    if (*0x81b704 == 0x37) {\n        uStack1184 = 0;\n        uStack1188 = 0;\n        uStack1192 = 0;\n        uStack1196 = 0x412e4f;\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogW)();\n        uStack1196 = 0;\n        uStack1200 = 0;\n        uStack1204 = 0x412e59;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n        uStack1204 = 0;\n        uStack1208 = 0x412e61;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n        uStack1208 = 0;\n        uStack1212 = 0;\n        uStack1216 = 0;\n        uStack1220 = 0;\n        uStack1224 = 0;\n        uStack1228 = 0;\n        uStack1232 = 0;\n        puStack1236 = 0x412e75;\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeA)();\n        puStack1236 = &stack0xfffffb38;\n        uStack1240 = 0x412e80;\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n        uStack1240 = 0;\n        (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(0);\n        uStack1240 = 0;\n        (*_sym.imp.KERNEL32.dll_ReadFile)(0, &stack0xfffffbc0, 0, &stack0xfffffb28, 0);\n        sub.KERNEL32.dll_SetConsoleDisplayMode(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(0);\n        (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    *(*0x42a70c + unaff_ESI) = *(*0x81be00 + 0x7e996 + unaff_ESI);\n    return;\n}\n",
        "token_count": 576
    },
    "00405c86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405c86(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040d26f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "004019f0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004019f0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    code *pcStack192;\n    char *pcStack188;\n    code *pcStack168;\n    char *pcStack164;\n    uint uStack160;\n    uchar auStack140 [16];\n    code *pcStack124;\n    uint uStack120;\n    code *pcStack112;\n    uchar uStack104;\n    uchar uStack96;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [24];\n    uchar uStack48;\n    uint uStack36;\n    uchar uStack24;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x414fd6;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uVar2 = *(param_1 + 0xc) & *(param_1 + 8);\n    if ((uVar2 & 4) != 0) {\n        uStack160 = 0x14;\n        pcStack164 = \"ios_base::badbit set\";\n        uStack84 = 0xf;\n        uStack88 = 0;\n        uStack104 = 0;\n        pcStack168 = 0x401a3c;\n        fcn.00403460();\n        uStack12 = 0;\n        pcStack168 = 0x401a4c;\n        fcn.00404bb7();\n        pcStack168 = 0xffffffff;\n        uStack12 = CONCAT31(uStack12._1_3_, 1);\n        uStack120 = 0xf;\n        pcStack124 = NULL;\n        auStack140[0] = 0;\n        fcn.00403090();\n        uStack24 = 0;\n        pcStack168 = vtable.std::ios_base::failure.0;\n        pcStack188 = 0x401a9b;\n        uVar2 = fcn.0040606b(&stack0xffffff58, 0x424c64);\n    }\n    if ((uVar2 & 2) != 0) {\n        pcStack188 = \"ios_base::failbit set\";\n        pcStack192 = 0x401aad;\n        fcn.00401ce0();\n        uStack36 = 2;\n        pcStack192 = 0x401ac1;\n        fcn.00404bb7();\n        pcStack192 = 0xffffffff;\n        uStack36 = CONCAT31(uStack36._1_3_, 3);\n        pcStack164 = pcStack164 & 0xffffff00;\n        fcn.00403090(&stack0xffffff74, 0);\n        uStack48 = 2;\n        pcStack192 = vtable.std::ios_base::failure.0;\n        fcn.0040606b(&stack0xffffff40, 0x424c64);\n    }\n    pcStack188 = \"ios_base::eofbit set\";\n    pcStack192 = 0x401b21;\n    fcn.00401ce0();\n    uStack36 = 4;\n    pcStack192 = 0x401b35;\n    fcn.00404bb7();\n    pcStack192 = 0xffffffff;\n    uStack36 = CONCAT31(uStack36._1_3_, 5);\n    pcStack112 = vtable.std::runtime_error.0;\n    uStack76 = 0xf;\n    uStack80 = 0;\n    uStack96 = 0;\n    fcn.00403090(&stack0xffffffb8, 0);\n    uStack48 = 4;\n    pcStack124 = vtable.std::ios_base::failure.0;\n    fcn.0040606b(&stack0xffffff84, 0x424c64);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 893
    },
    "00401ce0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401ce0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403460(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 161
    },
    "00412402": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00412402(void)\n\n{\n    *0x427044 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 59
    },
    "00403170": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403170(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403460(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 101
    },
    "0040b90d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b90d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409344(0x4248a0, 0xc);\n    fcn.00409859(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x42916c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x429168;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040b951;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404d46(arg_8h_00);\ncode_r0x0040b951:\n        fcn.00404d46(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040b974();\n    fcn.00409389();\n    return;\n}\n",
        "token_count": 395
    }
}